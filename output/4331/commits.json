[
  {
    "sha": "a4b9b74b8fc68a73e9d215b194f43eacbe269335",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNGI5Yjc0YjhmYzY4YTczZTlkMjE1YjE5NGY0M2VhY2JlMjY5MzM1",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-06-10T01:14:13Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-10-03T02:37:59Z"
      },
      "message": "[Qt] Code-movement-only: Format confirmation message in sendcoinsdialog",
      "tree": {
        "sha": "e85c9aac998065e4e9ed860bd7e2a0aa2aad050c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e85c9aac998065e4e9ed860bd7e2a0aa2aad050c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4b9b74b8fc68a73e9d215b194f43eacbe269335",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4b9b74b8fc68a73e9d215b194f43eacbe269335",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a4b9b74b8fc68a73e9d215b194f43eacbe269335",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4b9b74b8fc68a73e9d215b194f43eacbe269335/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29f96e8bc652cb14c6fdefe5279ee983054faa2a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29f96e8bc652cb14c6fdefe5279ee983054faa2a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29f96e8bc652cb14c6fdefe5279ee983054faa2a"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 30,
      "deletions": 29
    },
    "files": [
      {
        "sha": "0385f5c9d10ea6e186c092796ca96df8b2e8c037",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 29,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4b9b74b8fc68a73e9d215b194f43eacbe269335/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4b9b74b8fc68a73e9d215b194f43eacbe269335/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=a4b9b74b8fc68a73e9d215b194f43eacbe269335",
        "patch": "@@ -138,6 +138,36 @@ void SendCoinsDialog::on_sendButton_clicked()\n         return;\n     }\n \n+    fNewRecipientAllowed = false;\n+\n+\n+    WalletModel::UnlockContext ctx(model->requestUnlock());\n+    if(!ctx.isValid())\n+    {\n+        // Unlock wallet was cancelled\n+        fNewRecipientAllowed = true;\n+        return;\n+    }\n+\n+    // prepare transaction for getting txFee earlier\n+    WalletModelTransaction currentTransaction(recipients);\n+    WalletModel::SendCoinsReturn prepareStatus;\n+    if (model->getOptionsModel()->getCoinControlFeatures()) // coin control enabled\n+        prepareStatus = model->prepareTransaction(currentTransaction, CoinControlDialog::coinControl);\n+    else\n+        prepareStatus = model->prepareTransaction(currentTransaction);\n+\n+    // process prepareStatus and on error generate message shown to user\n+    processSendCoinsReturn(prepareStatus,\n+        BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), currentTransaction.getTransactionFee()));\n+\n+    if(prepareStatus.status != WalletModel::OK) {\n+        fNewRecipientAllowed = true;\n+        return;\n+    }\n+\n+    CAmount txFee = currentTransaction.getTransactionFee();\n+\n     // Format confirmation message\n     QStringList formatted;\n     foreach(const SendCoinsRecipient &rcp, recipients)\n@@ -175,35 +205,6 @@ void SendCoinsDialog::on_sendButton_clicked()\n         formatted.append(recipientElement);\n     }\n \n-    fNewRecipientAllowed = false;\n-\n-\n-    WalletModel::UnlockContext ctx(model->requestUnlock());\n-    if(!ctx.isValid())\n-    {\n-        // Unlock wallet was cancelled\n-        fNewRecipientAllowed = true;\n-        return;\n-    }\n-\n-    // prepare transaction for getting txFee earlier\n-    WalletModelTransaction currentTransaction(recipients);\n-    WalletModel::SendCoinsReturn prepareStatus;\n-    if (model->getOptionsModel()->getCoinControlFeatures()) // coin control enabled\n-        prepareStatus = model->prepareTransaction(currentTransaction, CoinControlDialog::coinControl);\n-    else\n-        prepareStatus = model->prepareTransaction(currentTransaction);\n-\n-    // process prepareStatus and on error generate message shown to user\n-    processSendCoinsReturn(prepareStatus,\n-        BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), currentTransaction.getTransactionFee()));\n-\n-    if(prepareStatus.status != WalletModel::OK) {\n-        fNewRecipientAllowed = true;\n-        return;\n-    }\n-\n-    CAmount txFee = currentTransaction.getTransactionFee();\n     QString questionString = tr(\"Are you sure you want to send?\");\n     questionString.append(\"<br /><br />%1\");\n "
      }
    ]
  },
  {
    "sha": "74a6b3e255643995d29b5cb2d9fff142b7bd976b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NGE2YjNlMjU1NjQzOTk1ZDI5YjVjYjJkOWZmZjE0MmI3YmQ5NzZi",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-07-23T12:34:36Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-10-03T02:54:39Z"
      },
      "message": "Subtract fee from amount",
      "tree": {
        "sha": "bb33c067c779539e2d3bf0c820c6afe7b0ee160f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb33c067c779539e2d3bf0c820c6afe7b0ee160f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74a6b3e255643995d29b5cb2d9fff142b7bd976b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74a6b3e255643995d29b5cb2d9fff142b7bd976b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/74a6b3e255643995d29b5cb2d9fff142b7bd976b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74a6b3e255643995d29b5cb2d9fff142b7bd976b/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a4b9b74b8fc68a73e9d215b194f43eacbe269335",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4b9b74b8fc68a73e9d215b194f43eacbe269335",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a4b9b74b8fc68a73e9d215b194f43eacbe269335"
      }
    ],
    "stats": {
      "total": 305,
      "additions": 248,
      "deletions": 57
    },
    "files": [
      {
        "sha": "50392f9222b1abc1aa61ca48cd85d17e4d043cc0",
        "filename": "src/core.h",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/core.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/core.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.h?ref=74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "patch": "@@ -193,7 +193,7 @@ class CTxOut\n \n     uint256 GetHash() const;\n \n-    bool IsDust(CFeeRate minRelayTxFee) const\n+    int64_t GetDustThreshold(CFeeRate& minRelayTxFee) const\n     {\n         // \"Dust\" is defined in terms of CTransaction::minRelayTxFee,\n         // which has units satoshis-per-kilobyte.\n@@ -204,7 +204,12 @@ class CTxOut\n         // so dust is a txout less than 546 satoshis \n         // with default minRelayTxFee.\n         size_t nSize = GetSerializeSize(SER_DISK,0)+148u;\n-        return (nValue < 3*minRelayTxFee.GetFee(nSize));\n+        return 3*minRelayTxFee.GetFee(nSize);\n+    }\n+\n+    bool IsDust(CFeeRate minRelayTxFee) const\n+    {\n+        return (nValue < GetDustThreshold(minRelayTxFee));\n     }\n \n     friend bool operator==(const CTxOut& a, const CTxOut& b)"
      },
      {
        "sha": "ade708296c50f8db1a5cb646f8088107b5e69710",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 5,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "patch": "@@ -31,6 +31,7 @@\n using namespace std;\n QList<CAmount> CoinControlDialog::payAmounts;\n CCoinControl* CoinControlDialog::coinControl = new CCoinControl();\n+bool CoinControlDialog::fSubtractFeeFromAmount = false;\n \n CoinControlDialog::CoinControlDialog(QWidget *parent) :\n     QDialog(parent),\n@@ -528,6 +529,11 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         // Voluntary Fee\n         nPayFee = payTxFee.GetFee(max((unsigned int)1000, nBytes));\n \n+        // in the subtract fee from amount case, we can tell if zero change already and subtract the bytes, so that fee calculation afterwards is accurate\n+        if (CoinControlDialog::fSubtractFeeFromAmount)\n+            if (nAmount - nPayAmount == 0)\n+                nBytes -= 34;\n+\n         // Min Fee\n         if (nPayFee == 0)\n         {\n@@ -543,20 +549,27 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n         if (nPayAmount > 0)\n         {\n-            nChange = nAmount - nPayFee - nPayAmount;\n+            nChange = nAmount - nPayAmount;\n+            if (!CoinControlDialog::fSubtractFeeFromAmount)\n+                nChange -= nPayFee;\n \n             // Never create dust outputs; if we would, just add the dust to the fee.\n             if (nChange > 0 && nChange < CENT)\n             {\n                 CTxOut txout(nChange, (CScript)vector<unsigned char>(24, 0));\n                 if (txout.IsDust(::minRelayTxFee))\n                 {\n-                    nPayFee += nChange;\n-                    nChange = 0;\n+                    if (CoinControlDialog::fSubtractFeeFromAmount) // dust-change will be raised until no dust\n+                        nChange = txout.GetDustThreshold(::minRelayTxFee);\n+                    else\n+                    {\n+                        nPayFee += nChange;\n+                        nChange = 0;\n+                    }\n                 }\n             }\n \n-            if (nChange == 0)\n+            if (nChange == 0 && !CoinControlDialog::fSubtractFeeFromAmount)\n                 nBytes -= 34;\n         }\n \n@@ -599,7 +612,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     {\n         l3->setText(\"~\" + l3->text());\n         l4->setText(\"~\" + l4->text());\n-        if (nChange > 0)\n+        if (nChange > 0 && !CoinControlDialog::fSubtractFeeFromAmount)\n             l8->setText(\"~\" + l8->text());\n     }\n "
      },
      {
        "sha": "924c390cf1cb8d3352f60a3ff21730e210e1fef7",
        "filename": "src/qt/coincontroldialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "patch": "@@ -41,6 +41,7 @@ class CoinControlDialog : public QDialog\n \n     static QList<CAmount> payAmounts;\n     static CCoinControl *coinControl;\n+    static bool fSubtractFeeFromAmount;\n \n private:\n     Ui::CoinControlDialog *ui;"
      },
      {
        "sha": "e431414e32bfe2d6904cd10f5ed11b27efdd11e8",
        "filename": "src/qt/forms/sendcoinsentry.ui",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/forms/sendcoinsentry.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/forms/sendcoinsentry.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsentry.ui?ref=74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "patch": "@@ -139,7 +139,21 @@\n      </widget>\n     </item>\n     <item row=\"2\" column=\"1\">\n-     <widget class=\"BitcoinAmountField\" name=\"payAmount\"/>\n+     <layout class=\"QHBoxLayout\" name=\"horizontalLayoutAmount\" stretch=\"0,1\">\n+      <item>\n+       <widget class=\"BitcoinAmountField\" name=\"payAmount\"/>\n+      </item>\n+      <item>\n+       <widget class=\"QCheckBox\" name=\"checkboxSubtractFeeFromAmount\">\n+        <property name=\"toolTip\">\n+         <string>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</string>\n+        </property>\n+        <property name=\"text\">\n+         <string>S&amp;ubtract fee from amount</string>\n+        </property>\n+       </widget>\n+      </item>\n+     </layout>\n     </item>\n     <item row=\"3\" column=\"0\">\n      <widget class=\"QLabel\" name=\"messageLabel\">"
      },
      {
        "sha": "2e0d3dc213b7794fe5972133e4bcb58db4b83cef",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "patch": "@@ -139,8 +139,6 @@ void SendCoinsDialog::on_sendButton_clicked()\n     }\n \n     fNewRecipientAllowed = false;\n-\n-\n     WalletModel::UnlockContext ctx(model->requestUnlock());\n     if(!ctx.isValid())\n     {\n@@ -170,7 +168,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n \n     // Format confirmation message\n     QStringList formatted;\n-    foreach(const SendCoinsRecipient &rcp, recipients)\n+    foreach(const SendCoinsRecipient &rcp, currentTransaction.getRecipients())\n     {\n         // generate bold amount string\n         QString amount = \"<b>\" + BitcoinUnits::formatHtmlWithUnit(model->getOptionsModel()->getDisplayUnit(), rcp.amount);\n@@ -284,6 +282,7 @@ SendCoinsEntry *SendCoinsDialog::addEntry()\n     ui->entries->addWidget(entry);\n     connect(entry, SIGNAL(removeEntry(SendCoinsEntry*)), this, SLOT(removeEntry(SendCoinsEntry*)));\n     connect(entry, SIGNAL(payAmountChanged()), this, SLOT(coinControlUpdateLabels()));\n+    connect(entry, SIGNAL(subtractFeeFromAmountChanged()), this, SLOT(coinControlUpdateLabels()));\n \n     updateTabsAndLabels();\n \n@@ -585,11 +584,17 @@ void SendCoinsDialog::coinControlUpdateLabels()\n \n     // set pay amounts\n     CoinControlDialog::payAmounts.clear();\n+    CoinControlDialog::fSubtractFeeFromAmount = false;\n     for(int i = 0; i < ui->entries->count(); ++i)\n     {\n         SendCoinsEntry *entry = qobject_cast<SendCoinsEntry*>(ui->entries->itemAt(i)->widget());\n         if(entry)\n-            CoinControlDialog::payAmounts.append(entry->getValue().amount);\n+        {\n+            SendCoinsRecipient rcp = entry->getValue();\n+            CoinControlDialog::payAmounts.append(rcp.amount);\n+            if (rcp.fSubtractFeeFromAmount)\n+                CoinControlDialog::fSubtractFeeFromAmount = true;\n+        }\n     }\n \n     if (CoinControlDialog::coinControl->HasSelected())"
      },
      {
        "sha": "72791e9f11fcf0cb3da7ce567b52fa6a8050f041",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "patch": "@@ -37,6 +37,7 @@ SendCoinsEntry::SendCoinsEntry(QWidget *parent) :\n \n     // Connect signals\n     connect(ui->payAmount, SIGNAL(valueChanged()), this, SIGNAL(payAmountChanged()));\n+    connect(ui->checkboxSubtractFeeFromAmount, SIGNAL(toggled(bool)), this, SIGNAL(subtractFeeFromAmountChanged()));\n     connect(ui->deleteButton, SIGNAL(clicked()), this, SLOT(deleteClicked()));\n     connect(ui->deleteButton_is, SIGNAL(clicked()), this, SLOT(deleteClicked()));\n     connect(ui->deleteButton_s, SIGNAL(clicked()), this, SLOT(deleteClicked()));\n@@ -87,6 +88,7 @@ void SendCoinsEntry::clear()\n     ui->payTo->clear();\n     ui->addAsLabel->clear();\n     ui->payAmount->clear();\n+    ui->checkboxSubtractFeeFromAmount->setCheckState(Qt::Unchecked);\n     ui->messageTextLabel->clear();\n     ui->messageTextLabel->hide();\n     ui->messageLabel->hide();\n@@ -158,6 +160,7 @@ SendCoinsRecipient SendCoinsEntry::getValue()\n     recipient.label = ui->addAsLabel->text();\n     recipient.amount = ui->payAmount->value();\n     recipient.message = ui->messageTextLabel->text();\n+    recipient.fSubtractFeeFromAmount = (ui->checkboxSubtractFeeFromAmount->checkState() == Qt::Checked);\n \n     return recipient;\n }\n@@ -167,7 +170,8 @@ QWidget *SendCoinsEntry::setupTabChain(QWidget *prev)\n     QWidget::setTabOrder(prev, ui->payTo);\n     QWidget::setTabOrder(ui->payTo, ui->addAsLabel);\n     QWidget *w = ui->payAmount->setupTabChain(ui->addAsLabel);\n-    QWidget::setTabOrder(w, ui->addressBookButton);\n+    QWidget::setTabOrder(w, ui->checkboxSubtractFeeFromAmount);\n+    QWidget::setTabOrder(ui->checkboxSubtractFeeFromAmount, ui->addressBookButton);\n     QWidget::setTabOrder(ui->addressBookButton, ui->pasteButton);\n     QWidget::setTabOrder(ui->pasteButton, ui->deleteButton);\n     return ui->deleteButton;"
      },
      {
        "sha": "bec030abee95a238bb8e431b58f37df9e37a9988",
        "filename": "src/qt/sendcoinsentry.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/sendcoinsentry.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/sendcoinsentry.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.h?ref=74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "patch": "@@ -51,6 +51,7 @@ public slots:\n signals:\n     void removeEntry(SendCoinsEntry *entry);\n     void payAmountChanged();\n+    void subtractFeeFromAmountChanged();\n \n private slots:\n     void deleteClicked();"
      },
      {
        "sha": "7a84996dc9e55974002a7de263023f03f98e45dc",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 5,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "patch": "@@ -6,6 +6,7 @@\n \n #include \"addresstablemodel.h\"\n #include \"guiconstants.h\"\n+#include \"guiutil.h\"\n #include \"recentrequeststablemodel.h\"\n #include \"transactiontablemodel.h\"\n \n@@ -195,8 +196,9 @@ bool WalletModel::validateAddress(const QString &address)\n WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransaction &transaction, const CCoinControl *coinControl)\n {\n     CAmount total = 0;\n+    bool fSubtractFeeFromAmount = false;\n     QList<SendCoinsRecipient> recipients = transaction.getRecipients();\n-    std::vector<std::pair<CScript, CAmount> > vecSend;\n+    std::vector<CRecipient> vecSend;\n \n     if(recipients.empty())\n     {\n@@ -209,6 +211,9 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n     // Pre-check input data for validity\n     foreach(const SendCoinsRecipient &rcp, recipients)\n     {\n+        if (rcp.fSubtractFeeFromAmount)\n+            fSubtractFeeFromAmount = true;\n+\n         if (rcp.paymentRequest.IsInitialized())\n         {   // PaymentRequest...\n             CAmount subtotal = 0;\n@@ -220,7 +225,9 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n                 subtotal += out.amount();\n                 const unsigned char* scriptStr = (const unsigned char*)out.script().data();\n                 CScript scriptPubKey(scriptStr, scriptStr+out.script().size());\n-                vecSend.push_back(std::pair<CScript, CAmount>(scriptPubKey, out.amount()));\n+                CAmount nAmount = out.amount();\n+                CRecipient recipient = {scriptPubKey, nAmount, rcp.fSubtractFeeFromAmount};\n+                vecSend.push_back(recipient);\n             }\n             if (subtotal <= 0)\n             {\n@@ -242,7 +249,8 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n             ++nAddresses;\n \n             CScript scriptPubKey = GetScriptForDestination(CBitcoinAddress(rcp.address.toStdString()).Get());\n-            vecSend.push_back(std::pair<CScript, CAmount>(scriptPubKey, rcp.amount));\n+            CRecipient recipient = {scriptPubKey, rcp.amount, rcp.fSubtractFeeFromAmount};\n+            vecSend.push_back(recipient);\n \n             total += rcp.amount;\n         }\n@@ -263,17 +271,21 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n         LOCK2(cs_main, wallet->cs_wallet);\n \n         transaction.newPossibleKeyChange(wallet);\n+\n         CAmount nFeeRequired = 0;\n+        int nChangePosRet = -1;\n         std::string strFailReason;\n \n         CWalletTx *newTx = transaction.getTransaction();\n         CReserveKey *keyChange = transaction.getPossibleKeyChange();\n-        bool fCreated = wallet->CreateTransaction(vecSend, *newTx, *keyChange, nFeeRequired, strFailReason, coinControl);\n+        bool fCreated = wallet->CreateTransaction(vecSend, *newTx, *keyChange, nFeeRequired, nChangePosRet, strFailReason, coinControl);\n         transaction.setTransactionFee(nFeeRequired);\n+        if (fSubtractFeeFromAmount && fCreated)\n+            transaction.reassignAmounts(nChangePosRet);\n \n         if(!fCreated)\n         {\n-            if((total + nFeeRequired) > nBalance)\n+            if(!fSubtractFeeFromAmount && (total + nFeeRequired) > nBalance)\n             {\n                 return SendCoinsReturn(AmountWithFeeExceedsBalance);\n             }"
      },
      {
        "sha": "62def1645b9cbfd84fb54acf2328728008615934",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "patch": "@@ -36,9 +36,9 @@ QT_END_NAMESPACE\n class SendCoinsRecipient\n {\n public:\n-    explicit SendCoinsRecipient() : amount(0), nVersion(SendCoinsRecipient::CURRENT_VERSION) { }\n+    explicit SendCoinsRecipient() : amount(0), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) { }\n     explicit SendCoinsRecipient(const QString &addr, const QString &label, const CAmount& amount, const QString &message):\n-        address(addr), label(label), amount(amount), message(message), nVersion(SendCoinsRecipient::CURRENT_VERSION) {}\n+        address(addr), label(label), amount(amount), message(message), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) {}\n \n     // If from an insecure payment request, this is used for storing\n     // the addresses, e.g. address-A<br />address-B<br />address-C.\n@@ -56,6 +56,8 @@ class SendCoinsRecipient\n     // Empty if no authentication or invalid signature/cert/etc.\n     QString authenticatedMerchant;\n \n+    bool fSubtractFeeFromAmount; // memory only\n+\n     static const int CURRENT_VERSION = 1;\n     int nVersion;\n "
      },
      {
        "sha": "42d813cf0ad2da3a46d2ff1bb022ce2537873ecf",
        "filename": "src/qt/walletmodeltransaction.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/walletmodeltransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/walletmodeltransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.cpp?ref=74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "patch": "@@ -41,6 +41,38 @@ void WalletModelTransaction::setTransactionFee(const CAmount& newFee)\n     fee = newFee;\n }\n \n+void WalletModelTransaction::reassignAmounts(int nChangePosRet)\n+{\n+    int i = 0;\n+    for (QList<SendCoinsRecipient>::iterator it = recipients.begin(); it != recipients.end(); ++it)\n+    {\n+        SendCoinsRecipient& rcp = (*it);\n+\n+        if (rcp.paymentRequest.IsInitialized())\n+        {\n+            int64_t subtotal = 0;\n+            const payments::PaymentDetails& details = rcp.paymentRequest.getDetails();\n+            for (int j = 0; j < details.outputs_size(); j++)\n+            {\n+                const payments::Output& out = details.outputs(j);\n+                if (out.amount() <= 0) continue;\n+                if (i == nChangePosRet)\n+                    i++;\n+                subtotal += walletTransaction->vout[i].nValue;\n+                i++;\n+            }\n+            rcp.amount = subtotal;\n+        }\n+        else // normal recipient (no payment request)\n+        {\n+            if (i == nChangePosRet)\n+                i++;\n+            rcp.amount = walletTransaction->vout[i].nValue;\n+            i++;\n+        }\n+    }\n+}\n+\n CAmount WalletModelTransaction::getTotalTransactionAmount()\n {\n     CAmount totalTransactionAmount = 0;"
      },
      {
        "sha": "decbc582d19897a04738d8289eb98f7e4a596856",
        "filename": "src/qt/walletmodeltransaction.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/walletmodeltransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/qt/walletmodeltransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.h?ref=74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "patch": "@@ -34,8 +34,10 @@ class WalletModelTransaction\n     void newPossibleKeyChange(CWallet *wallet);\n     CReserveKey *getPossibleKeyChange();\n \n+    void reassignAmounts(int nChangePosRet); // needed for the subtract-fee-from-amount feature\n+\n private:\n-    const QList<SendCoinsRecipient> recipients;\n+    QList<SendCoinsRecipient> recipients;\n     CWalletTx *walletTransaction;\n     CReserveKey *keyChange;\n     CAmount fee;"
      },
      {
        "sha": "844ea505f47fc2048b404dcbb1c47040021f4dc1",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "patch": "@@ -31,6 +31,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"getnetworkhashps\", 0 },\n     { \"getnetworkhashps\", 1 },\n     { \"sendtoaddress\", 1 },\n+    { \"sendtoaddress\", 4 },\n     { \"settxfee\", 0 },\n     { \"getreceivedbyaddress\", 1 },\n     { \"getreceivedbyaccount\", 1 },\n@@ -47,6 +48,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"move\", 3 },\n     { \"sendfrom\", 2 },\n     { \"sendfrom\", 3 },\n+    { \"sendfrom\", 6 },\n     { \"listtransactions\", 1 },\n     { \"listtransactions\", 2 },\n     { \"listtransactions\", 3 },\n@@ -58,6 +60,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"listsinceblock\", 2 },\n     { \"sendmany\", 1 },\n     { \"sendmany\", 2 },\n+    { \"sendmany\", 4 },\n     { \"addmultisigaddress\", 0 },\n     { \"addmultisigaddress\", 1 },\n     { \"createmultisig\", 0 },"
      },
      {
        "sha": "e9d1c681993e2fde1ffabdde8f5f35428aa6e4c8",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 47,
        "deletions": 11,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "patch": "@@ -310,9 +310,9 @@ Value getaddressesbyaccount(const Array& params, bool fHelp)\n \n Value sendtoaddress(const Array& params, bool fHelp)\n {\n-    if (fHelp || params.size() < 2 || params.size() > 4)\n+    if (fHelp || params.size() < 2 || params.size() > 5)\n         throw runtime_error(\n-            \"sendtoaddress \\\"bitcoinaddress\\\" amount ( \\\"comment\\\" \\\"comment-to\\\" )\\n\"\n+            \"sendtoaddress \\\"bitcoinaddress\\\" amount ( \\\"comment\\\" \\\"comment-to\\\" subtractfeefromamount )\\n\"\n             \"\\nSent an amount to a given address. The amount is a real and is rounded to the nearest 0.00000001\\n\"\n             + HelpRequiringPassphrase() +\n             \"\\nArguments:\\n\"\n@@ -323,11 +323,14 @@ Value sendtoaddress(const Array& params, bool fHelp)\n             \"4. \\\"comment-to\\\"  (string, optional) A comment to store the name of the person or organization \\n\"\n             \"                             to which you're sending the transaction. This is not part of the \\n\"\n             \"                             transaction, just kept in your wallet.\\n\"\n+            \"5. subtractfeefromamount  (boolean, optional, default=false) The fee will be deducted from the amount being sent.\\n\"\n+            \"                             The recipient will receive less bitcoins than you enter in the amount field.\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"transactionid\\\"  (string) The transaction id.\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1\")\n             + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"donation\\\" \\\"seans outpost\\\"\")\n+            + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"\\\" \\\"\\\" true\")\n             + HelpExampleRpc(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\", 0.1, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n@@ -345,9 +348,13 @@ Value sendtoaddress(const Array& params, bool fHelp)\n     if (params.size() > 3 && params[3].type() != null_type && !params[3].get_str().empty())\n         wtx.mapValue[\"to\"]      = params[3].get_str();\n \n+    bool fSubtractFeeFromAmount = false;\n+    if (params.size() > 4)\n+        fSubtractFeeFromAmount = params[4].get_bool();\n+\n     EnsureWalletIsUnlocked();\n \n-    string strError = pwalletMain->SendMoney(address.Get(), nAmount, wtx);\n+    string strError = pwalletMain->SendMoney(address.Get(), nAmount, fSubtractFeeFromAmount, wtx);\n     if (strError != \"\")\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n \n@@ -740,9 +747,9 @@ Value movecmd(const Array& params, bool fHelp)\n \n Value sendfrom(const Array& params, bool fHelp)\n {\n-    if (fHelp || params.size() < 3 || params.size() > 6)\n+    if (fHelp || params.size() < 3 || params.size() > 7)\n         throw runtime_error(\n-            \"sendfrom \\\"fromaccount\\\" \\\"tobitcoinaddress\\\" amount ( minconf \\\"comment\\\" \\\"comment-to\\\" )\\n\"\n+            \"sendfrom \\\"fromaccount\\\" \\\"tobitcoinaddress\\\" amount ( minconf \\\"comment\\\" \\\"comment-to\\\" subtractfeefromamount )\\n\"\n             \"\\nSent an amount from an account to a bitcoin address.\\n\"\n             \"The amount is a real and is rounded to the nearest 0.00000001.\"\n             + HelpRequiringPassphrase() + \"\\n\"\n@@ -756,13 +763,17 @@ Value sendfrom(const Array& params, bool fHelp)\n             \"6. \\\"comment-to\\\"        (string, optional) An optional comment to store the name of the person or organization \\n\"\n             \"                                     to which you're sending the transaction. This is not part of the transaction, \\n\"\n             \"                                     it is just kept in your wallet.\\n\"\n+            \"7. subtractfeefromamount (boolean, optional, default=false) The fee will be deducted from the amount being sent.\\n\"\n+            \"                             The recipient will receive less bitcoins than you enter in the amount field.\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"transactionid\\\"        (string) The transaction id.\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nSend 0.01 btc from the default account to the address, must have at least 1 confirmation\\n\"\n             + HelpExampleCli(\"sendfrom\", \"\\\"\\\" \\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.01\") +\n             \"\\nSend 0.01 from the tabby account to the given address, funds must have at least 6 confirmations\\n\"\n             + HelpExampleCli(\"sendfrom\", \"\\\"tabby\\\" \\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.01 6 \\\"donation\\\" \\\"seans outpost\\\"\") +\n+            \"\\nSend 0.01 btc from the default account to the address, subtract fee from amount\\n\"\n+            + HelpExampleCli(\"sendfrom\", \"\\\"\\\" \\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.01 1 \\\"\\\" \\\"\\\" true\") +\n             \"\\nAs a json rpc call\\n\"\n             + HelpExampleRpc(\"sendfrom\", \"\\\"tabby\\\", \\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\", 0.01, 6, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n@@ -783,6 +794,10 @@ Value sendfrom(const Array& params, bool fHelp)\n     if (params.size() > 5 && params[5].type() != null_type && !params[5].get_str().empty())\n         wtx.mapValue[\"to\"]      = params[5].get_str();\n \n+    bool fSubtractFeeFromAmount = false;\n+    if (params.size() > 6)\n+        fSubtractFeeFromAmount = params[6].get_bool();\n+\n     EnsureWalletIsUnlocked();\n \n     // Check funds\n@@ -791,7 +806,7 @@ Value sendfrom(const Array& params, bool fHelp)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"Account has insufficient funds\");\n \n     // Send\n-    string strError = pwalletMain->SendMoney(address.Get(), nAmount, wtx);\n+    string strError = pwalletMain->SendMoney(address.Get(), nAmount, fSubtractFeeFromAmount, wtx);\n     if (strError != \"\")\n         throw JSONRPCError(RPC_WALLET_ERROR, strError);\n \n@@ -801,9 +816,9 @@ Value sendfrom(const Array& params, bool fHelp)\n \n Value sendmany(const Array& params, bool fHelp)\n {\n-    if (fHelp || params.size() < 2 || params.size() > 4)\n+    if (fHelp || params.size() < 2 || params.size() > 5)\n         throw runtime_error(\n-            \"sendmany \\\"fromaccount\\\" {\\\"address\\\":amount,...} ( minconf \\\"comment\\\" )\\n\"\n+            \"sendmany \\\"fromaccount\\\" {\\\"address\\\":amount,...} ( minconf \\\"comment\\\" {\\\"address\\\":true,...} )\\n\"\n             \"\\nSend multiple times. Amounts are double-precision floating point numbers.\"\n             + HelpRequiringPassphrase() + \"\\n\"\n             \"\\nArguments:\\n\"\n@@ -815,6 +830,14 @@ Value sendmany(const Array& params, bool fHelp)\n             \"    }\\n\"\n             \"3. minconf                 (numeric, optional, default=1) Only use the balance confirmed at least this many times.\\n\"\n             \"4. \\\"comment\\\"             (string, optional) A comment\\n\"\n+            \"5. subtractfeefromamount   (string, optional) A json object with addresses and booleans.\\n\"\n+            \"                           The fee will be equally deducted from the amount of each selected address.\\n\"\n+            \"                           Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n+            \"                           Default for each address is false. If no addresses are specified here, the sender pays the fee.\\n\"\n+            \"    {\\n\"\n+            \"      \\\"address\\\":true     (boolean) Subtract fee from this address\\n\"\n+            \"      ,...\\n\"\n+            \"    }\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"transactionid\\\"          (string) The transaction id for the send. Only 1 transaction is created regardless of \\n\"\n             \"                                    the number of addresses.\\n\"\n@@ -823,6 +846,8 @@ Value sendmany(const Array& params, bool fHelp)\n             + HelpExampleCli(\"sendmany\", \"\\\"tabby\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\"\") +\n             \"\\nSend two amounts to two different addresses setting the confirmation and comment:\\n\"\n             + HelpExampleCli(\"sendmany\", \"\\\"tabby\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\" 6 \\\"testing\\\"\") +\n+            \"\\nSend two amounts to two different addresses, subtract fee from amount:\\n\"\n+            + HelpExampleCli(\"sendmany\", \"\\\"tabby\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\" 1 \\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":true,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":true}\\\"\") +\n             \"\\nAs a json rpc call\\n\"\n             + HelpExampleRpc(\"sendmany\", \"\\\"tabby\\\", \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\", 6, \\\"testing\\\"\")\n         );\n@@ -838,8 +863,12 @@ Value sendmany(const Array& params, bool fHelp)\n     if (params.size() > 3 && params[3].type() != null_type && !params[3].get_str().empty())\n         wtx.mapValue[\"comment\"] = params[3].get_str();\n \n+    Object subtractFeeFromAmount;\n+    if (params.size() > 4)\n+        subtractFeeFromAmount = params[4].get_obj();\n+\n     set<CBitcoinAddress> setAddress;\n-    vector<pair<CScript, CAmount> > vecSend;\n+    vector<CRecipient> vecSend;\n \n     CAmount totalAmount = 0;\n     BOOST_FOREACH(const Pair& s, sendTo)\n@@ -856,7 +885,13 @@ Value sendmany(const Array& params, bool fHelp)\n         CAmount nAmount = AmountFromValue(s.value_);\n         totalAmount += nAmount;\n \n-        vecSend.push_back(make_pair(scriptPubKey, nAmount));\n+        bool fSubtractFeeFromAmount = false;\n+        BOOST_FOREACH(const Pair& s2, subtractFeeFromAmount)\n+            if (s2.name_ == s.name_ && s2.value_.get_bool() == true)\n+                fSubtractFeeFromAmount = true;\n+\n+        CRecipient recipient = {scriptPubKey, nAmount, fSubtractFeeFromAmount};\n+        vecSend.push_back(recipient);\n     }\n \n     EnsureWalletIsUnlocked();\n@@ -869,8 +904,9 @@ Value sendmany(const Array& params, bool fHelp)\n     // Send\n     CReserveKey keyChange(pwalletMain);\n     CAmount nFeeRequired = 0;\n+    int nChangePosRet = -1;\n     string strFailReason;\n-    bool fCreated = pwalletMain->CreateTransaction(vecSend, wtx, keyChange, nFeeRequired, strFailReason);\n+    bool fCreated = pwalletMain->CreateTransaction(vecSend, wtx, keyChange, nFeeRequired, nChangePosRet, strFailReason);\n     if (!fCreated)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, strFailReason);\n     if (!pwalletMain->CommitTransaction(wtx, keyChange))"
      },
      {
        "sha": "309b78a86725b141f7727884a06b9c9a7e442af6",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 74,
        "deletions": 21,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "patch": "@@ -1307,21 +1307,22 @@ bool CWallet::SelectCoins(const CAmount& nTargetValue, set<pair<const CWalletTx*\n             (bSpendZeroConfChange && SelectCoinsMinConf(nTargetValue, 0, 1, vCoins, setCoinsRet, nValueRet)));\n }\n \n-\n-\n-\n-bool CWallet::CreateTransaction(const vector<pair<CScript, CAmount> >& vecSend,\n-                                CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, std::string& strFailReason, const CCoinControl* coinControl)\n+bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend,\n+                                CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, int& nChangePosRet, std::string& strFailReason, const CCoinControl* coinControl)\n {\n     CAmount nValue = 0;\n-    BOOST_FOREACH (const PAIRTYPE(CScript, CAmount)& s, vecSend)\n+    unsigned int nSubtractFeeFromAmount = 0;\n+    BOOST_FOREACH (const CRecipient& recipient, vecSend)\n     {\n-        if (nValue < 0)\n+        if (nValue < 0 || recipient.nAmount < 0)\n         {\n             strFailReason = _(\"Transaction amounts must be positive\");\n             return false;\n         }\n-        nValue += s.second;\n+        nValue += recipient.nAmount;\n+\n+        if (recipient.fSubtractFeeFromAmount)\n+            nSubtractFeeFromAmount++;\n     }\n     if (vecSend.empty() || nValue < 0)\n     {\n@@ -1342,16 +1343,40 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, CAmount> >& vecSend,\n                 txNew.vin.clear();\n                 txNew.vout.clear();\n                 wtxNew.fFromMe = true;\n+                nChangePosRet = -1;\n+                bool fFirst = true;\n \n-                CAmount nTotalValue = nValue + nFeeRet;\n+                CAmount nTotalValue = nValue;\n+                if (nSubtractFeeFromAmount == 0)\n+                    nTotalValue += nFeeRet;\n                 double dPriority = 0;\n                 // vouts to the payees\n-                BOOST_FOREACH (const PAIRTYPE(CScript, CAmount)& s, vecSend)\n+                BOOST_FOREACH (const CRecipient& recipient, vecSend)\n                 {\n-                    CTxOut txout(s.second, s.first);\n+                    CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n+\n+                    if (recipient.fSubtractFeeFromAmount)\n+                    {\n+                        txout.nValue -= nFeeRet / nSubtractFeeFromAmount; // Subtract fee equally from each selected recipient\n+\n+                        if (fFirst) // first receiver pays the remainder not divisible by output count\n+                        {\n+                            fFirst = false;\n+                            txout.nValue -= nFeeRet % nSubtractFeeFromAmount;\n+                        }\n+                    }\n+\n                     if (txout.IsDust(::minRelayTxFee))\n                     {\n-                        strFailReason = _(\"Transaction amount too small\");\n+                        if (recipient.fSubtractFeeFromAmount && nFeeRet > 0)\n+                        {\n+                            if (txout.nValue < 0)\n+                                strFailReason = _(\"The transaction amount is too small to pay the fee\");\n+                            else\n+                                strFailReason = _(\"The transaction amount is too small to send after the fee has been deducted\");\n+                        }\n+                        else\n+                            strFailReason = _(\"Transaction amount too small\");\n                         return false;\n                     }\n                     txNew.vout.push_back(txout);\n@@ -1374,7 +1399,9 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, CAmount> >& vecSend,\n                     dPriority += (double)nCredit * (pcoin.first->GetDepthInMainChain()+1);\n                 }\n \n-                CAmount nChange = nValueIn - nValue - nFeeRet;\n+                CAmount nChange = nValueIn - nValue;\n+                if (nSubtractFeeFromAmount == 0)\n+                    nChange -= nFeeRet;\n \n                 if (nChange > 0)\n                 {\n@@ -1408,6 +1435,28 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, CAmount> >& vecSend,\n \n                     CTxOut newTxOut(nChange, scriptChange);\n \n+                    // We do not move dust-change to fees, because the sender would end up paying more than requested.\n+                    // This would be against the purpose of the all-inclusive feature.\n+                    // So instead we raise the change and deduct from the recipient.\n+                    if (nSubtractFeeFromAmount > 0 && newTxOut.IsDust(::minRelayTxFee))\n+                    {\n+                        int64_t nDust = newTxOut.GetDustThreshold(::minRelayTxFee) - newTxOut.nValue;\n+                        newTxOut.nValue += nDust; // raise change until no more dust\n+                        for (unsigned int i = 0; i < vecSend.size(); i++) // subtract from first recipient\n+                        {\n+                            if (vecSend[i].fSubtractFeeFromAmount)\n+                            {\n+                                txNew.vout[i].nValue -= nDust;\n+                                if (txNew.vout[i].IsDust(::minRelayTxFee))\n+                                {\n+                                    strFailReason = _(\"The transaction amount is too small to send after the fee has been deducted\");\n+                                    return false;\n+                                }\n+                                break;\n+                            }\n+                        }\n+                    }\n+\n                     // Never create dust outputs; if we would, just\n                     // add the dust to the fee.\n                     if (newTxOut.IsDust(::minRelayTxFee))\n@@ -1418,7 +1467,8 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, CAmount> >& vecSend,\n                     else\n                     {\n                         // Insert change txn at random position:\n-                        vector<CTxOut>::iterator position = txNew.vout.begin()+GetRandInt(txNew.vout.size()+1);\n+                        nChangePosRet = GetRandInt(txNew.vout.size()+1);\n+                        vector<CTxOut>::iterator position = txNew.vout.begin()+nChangePosRet;\n                         txNew.vout.insert(position, newTxOut);\n                     }\n                 }\n@@ -1478,15 +1528,18 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, CAmount> >& vecSend,\n             }\n         }\n     }\n+\n     return true;\n }\n \n-bool CWallet::CreateTransaction(CScript scriptPubKey, const CAmount& nValue,\n+bool CWallet::CreateTransaction(CScript scriptPubKey, const CAmount& nValue, bool fSubtractFeeFromAmount,\n                                 CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, std::string& strFailReason, const CCoinControl* coinControl)\n {\n-    vector< pair<CScript, CAmount> > vecSend;\n-    vecSend.push_back(make_pair(scriptPubKey, nValue));\n-    return CreateTransaction(vecSend, wtxNew, reservekey, nFeeRet, strFailReason, coinControl);\n+    vector<CRecipient> vecSend;\n+    CRecipient recipient = {scriptPubKey, nValue, fSubtractFeeFromAmount};\n+    vecSend.push_back(recipient);\n+    int nChangePosRet = -1;\n+    return CreateTransaction(vecSend, wtxNew, reservekey, nFeeRet, nChangePosRet, strFailReason, coinControl);\n }\n \n // Call after CreateTransaction unless you want to abort\n@@ -1539,7 +1592,7 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n \n \n \n-string CWallet::SendMoney(const CTxDestination &address, CAmount nValue, CWalletTx& wtxNew)\n+string CWallet::SendMoney(const CTxDestination &address, CAmount nValue, bool fSubtractFeeFromAmount, CWalletTx& wtxNew)\n {\n     // Check amount\n     if (nValue <= 0)\n@@ -1561,9 +1614,9 @@ string CWallet::SendMoney(const CTxDestination &address, CAmount nValue, CWallet\n     // Create and send the transaction\n     CReserveKey reservekey(this);\n     CAmount nFeeRequired;\n-    if (!CreateTransaction(scriptPubKey, nValue, wtxNew, reservekey, nFeeRequired, strError))\n+    if (!CreateTransaction(scriptPubKey, nValue, fSubtractFeeFromAmount, wtxNew, reservekey, nFeeRequired, strError))\n     {\n-        if (nValue + nFeeRequired > GetBalance())\n+        if (!fSubtractFeeFromAmount && nValue + nFeeRequired > GetBalance())\n             strError = strprintf(_(\"Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds!\"), FormatMoney(nFeeRequired));\n         LogPrintf(\"SendMoney() : %s\\n\", strError);\n         return strError;"
      },
      {
        "sha": "5abae0df6aebb954ad04136f844b2ca005876f1c",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a6b3e255643995d29b5cb2d9fff142b7bd976b/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "patch": "@@ -92,6 +92,13 @@ class CAddressBookData\n     StringMap destdata;\n };\n \n+struct CRecipient\n+{\n+    CScript scriptPubKey;\n+    int64_t nAmount;\n+    bool fSubtractFeeFromAmount;\n+};\n+\n /** A CWallet is an extension of a keystore, which also maintains a set of transactions and balances,\n  * and provides the ability to create new transactions.\n  */\n@@ -253,18 +260,19 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     int ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n     void ReacceptWalletTransactions();\n     void ResendWalletTransactions();\n+\n     CAmount GetBalance() const;\n     CAmount GetUnconfirmedBalance() const;\n     CAmount GetImmatureBalance() const;\n     CAmount GetWatchOnlyBalance() const;\n     CAmount GetUnconfirmedWatchOnlyBalance() const;\n     CAmount GetImmatureWatchOnlyBalance() const;\n-    bool CreateTransaction(const std::vector<std::pair<CScript, CAmount> >& vecSend,\n-                           CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, std::string& strFailReason, const CCoinControl *coinControl = NULL);\n-    bool CreateTransaction(CScript scriptPubKey, const CAmount& nValue,\n+    bool CreateTransaction(const std::vector<CRecipient>& vecSend,\n+                           CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, int& nChangePosRet, std::string& strFailReason, const CCoinControl *coinControl = NULL);\n+    bool CreateTransaction(CScript scriptPubKey, const CAmount& nValue, bool fSubtractFeeFromAmount,\n                            CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet, std::string& strFailReason, const CCoinControl *coinControl = NULL);\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n-    std::string SendMoney(const CTxDestination &address, CAmount nValue, CWalletTx& wtxNew);\n+    std::string SendMoney(const CTxDestination &address, CAmount nValue, bool fSubtractFeeFromAmount, CWalletTx& wtxNew);\n \n     static CFeeRate minTxFee;\n     static CAmount GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarget, const CTxMemPool& pool);"
      }
    ]
  },
  {
    "sha": "f156d3760407a9ea98f8558e7e919ceb22eea6ea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTU2ZDM3NjA0MDdhOWVhOThmODU1OGU3ZTkxOWNlYjIyZWVhNmVh",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-09-09T01:34:56Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-10-03T02:54:39Z"
      },
      "message": "Subtract fee from amount: RPC-tests",
      "tree": {
        "sha": "27075fac3e5e3e72719dded8a0bcc1fb3e097817",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27075fac3e5e3e72719dded8a0bcc1fb3e097817"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f156d3760407a9ea98f8558e7e919ceb22eea6ea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f156d3760407a9ea98f8558e7e919ceb22eea6ea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f156d3760407a9ea98f8558e7e919ceb22eea6ea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f156d3760407a9ea98f8558e7e919ceb22eea6ea/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74a6b3e255643995d29b5cb2d9fff142b7bd976b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/74a6b3e255643995d29b5cb2d9fff142b7bd976b"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 45,
      "deletions": 1
    },
    "files": [
      {
        "sha": "229f6b3a5c062ccfc58a0e7fb61a4318abf4825d",
        "filename": "qa/rpc-tests/wallet.sh",
        "status": "modified",
        "additions": 45,
        "deletions": 1,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f156d3760407a9ea98f8558e7e919ceb22eea6ea/qa/rpc-tests/wallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f156d3760407a9ea98f8558e7e919ceb22eea6ea/qa/rpc-tests/wallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.sh?ref=f156d3760407a9ea98f8558e7e919ceb22eea6ea",
        "patch": "@@ -105,13 +105,57 @@ CheckBalance \"$B1ARGS\" 0\n CheckBalance \"$B3ARGS\" 100\n CheckBalance \"$B3ARGS\" \"100-21\" \"from1\"\n \n+# ========================== Subtract fee from amount ==========================\n+\n+function CleanUp {\n $CLI $B3ARGS stop > /dev/null 2>&1\n wait $B3PID\n $CLI $B2ARGS stop > /dev/null 2>&1\n wait $B2PID\n $CLI $B1ARGS stop > /dev/null 2>&1\n wait $B1PID\n \n-echo \"Tests successful, cleaning up\"\n rm -rf $D\n+}\n+\n+# Send 10 XBT normal\n+address=$($CLI $B1ARGS getnewaddress)\n+fee=$($CLI $B3ARGS settxfee \"0.001\")\n+txid=$($CLI $B3ARGS sendtoaddress $address 10)\n+$CLI $B3ARGS setgenerate true 1\n+WaitBlocks\n+\n+B=$( $CLI $B3ARGS getbalance )\n+if [ $B != \"89.99900000\" ] ; then\n+    echoerr \"wrong balance: $B, expected 89.99900000\"\n+    CleanUp\n+    exit 1\n+fi\n+B=$( $CLI $B1ARGS getbalance )\n+if [ $B != \"10.00000000\" ] ; then\n+    echoerr \"wrong balance: $B, expected 10.00000000\"\n+    CleanUp\n+    exit 1\n+fi\n+\n+# Send 10 XBT with subtract fee from amount\n+txid=$($CLI $B3ARGS sendtoaddress $address 10 \"\" \"\" true)\n+$CLI $B3ARGS setgenerate true 1\n+WaitBlocks\n+\n+B=$( $CLI $B3ARGS getbalance )\n+if [ $B != \"79.99900000\" ] ; then\n+    echoerr \"wrong balance: $B, expected 79.99900000\"\n+    CleanUp\n+    exit 1\n+fi\n+B=$( $CLI $B1ARGS getbalance )\n+if [ $B != \"19.99900000\" ] ; then\n+    echoerr \"wrong balance: $B, expected 19.99900000\"\n+    CleanUp\n+    exit 1\n+fi\n+\n+echo \"Tests successful, cleaning up\"\n+CleanUp\n exit 0"
      }
    ]
  },
  {
    "sha": "55e774db5b492588789a2f14f1a8481faf03fa90",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NWU3NzRkYjViNDkyNTg4Nzg5YTJmMTRmMWE4NDgxZmFmMDNmYTkw",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-10-03T02:56:03Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-10-03T03:03:27Z"
      },
      "message": "Subtract fee from amount: CAmount",
      "tree": {
        "sha": "6a1b0dca2507484b998b12b740a1af280ec66e27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a1b0dca2507484b998b12b740a1af280ec66e27"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/55e774db5b492588789a2f14f1a8481faf03fa90",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55e774db5b492588789a2f14f1a8481faf03fa90",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/55e774db5b492588789a2f14f1a8481faf03fa90",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55e774db5b492588789a2f14f1a8481faf03fa90/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f156d3760407a9ea98f8558e7e919ceb22eea6ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f156d3760407a9ea98f8558e7e919ceb22eea6ea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f156d3760407a9ea98f8558e7e919ceb22eea6ea"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "0bb0c425f5afa2c6d2d02e384cb75e125a2cacd4",
        "filename": "src/core.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55e774db5b492588789a2f14f1a8481faf03fa90/src/core.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55e774db5b492588789a2f14f1a8481faf03fa90/src/core.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.h?ref=55e774db5b492588789a2f14f1a8481faf03fa90",
        "patch": "@@ -193,7 +193,7 @@ class CTxOut\n \n     uint256 GetHash() const;\n \n-    int64_t GetDustThreshold(CFeeRate& minRelayTxFee) const\n+    CAmount GetDustThreshold(CFeeRate& minRelayTxFee) const\n     {\n         // \"Dust\" is defined in terms of CTransaction::minRelayTxFee,\n         // which has units satoshis-per-kilobyte."
      },
      {
        "sha": "1d4d2d7641c0c91ea073fec0da00cd3d36c7eb61",
        "filename": "src/qt/walletmodeltransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55e774db5b492588789a2f14f1a8481faf03fa90/src/qt/walletmodeltransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55e774db5b492588789a2f14f1a8481faf03fa90/src/qt/walletmodeltransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.cpp?ref=55e774db5b492588789a2f14f1a8481faf03fa90",
        "patch": "@@ -50,7 +50,7 @@ void WalletModelTransaction::reassignAmounts(int nChangePosRet)\n \n         if (rcp.paymentRequest.IsInitialized())\n         {\n-            int64_t subtotal = 0;\n+            CAmount subtotal = 0;\n             const payments::PaymentDetails& details = rcp.paymentRequest.getDetails();\n             for (int j = 0; j < details.outputs_size(); j++)\n             {"
      },
      {
        "sha": "426574203ec99fab4f63b0af9324b15c3e681359",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55e774db5b492588789a2f14f1a8481faf03fa90/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55e774db5b492588789a2f14f1a8481faf03fa90/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=55e774db5b492588789a2f14f1a8481faf03fa90",
        "patch": "@@ -1440,7 +1440,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend,\n                     // So instead we raise the change and deduct from the recipient.\n                     if (nSubtractFeeFromAmount > 0 && newTxOut.IsDust(::minRelayTxFee))\n                     {\n-                        int64_t nDust = newTxOut.GetDustThreshold(::minRelayTxFee) - newTxOut.nValue;\n+                        CAmount nDust = newTxOut.GetDustThreshold(::minRelayTxFee) - newTxOut.nValue;\n                         newTxOut.nValue += nDust; // raise change until no more dust\n                         for (unsigned int i = 0; i < vecSend.size(); i++) // subtract from first recipient\n                         {"
      },
      {
        "sha": "857be52afc482c11bea94a5862edeedddd00f898",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55e774db5b492588789a2f14f1a8481faf03fa90/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55e774db5b492588789a2f14f1a8481faf03fa90/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=55e774db5b492588789a2f14f1a8481faf03fa90",
        "patch": "@@ -95,7 +95,7 @@ class CAddressBookData\n struct CRecipient\n {\n     CScript scriptPubKey;\n-    int64_t nAmount;\n+    CAmount nAmount;\n     bool fSubtractFeeFromAmount;\n };\n "
      }
    ]
  }
]