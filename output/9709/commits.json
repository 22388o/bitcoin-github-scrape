[
  {
    "sha": "5445f7d02a0621a60217c141edee5679f1bd1899",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDQ1ZjdkMDJhMDYyMWE2MDIxN2MxNDFlZGVlNTY3OWYxYmQxODk5",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-01-23T20:27:03Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-01-27T18:14:07Z"
      },
      "message": "Move PrecomputedTransactionData into transaction.h\n\nThis is preparation for making the precomputed hashes part of the\ntransaction itself.",
      "tree": {
        "sha": "985e76b7528913bf8752fc2c7e0c2e3793958ce9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/985e76b7528913bf8752fc2c7e0c2e3793958ce9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5445f7d02a0621a60217c141edee5679f1bd1899",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5445f7d02a0621a60217c141edee5679f1bd1899",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5445f7d02a0621a60217c141edee5679f1bd1899",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5445f7d02a0621a60217c141edee5679f1bd1899/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7ea2f8fdbe9392bcbd4a219a42ebd9518d2e2ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7ea2f8fdbe9392bcbd4a219a42ebd9518d2e2ef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7ea2f8fdbe9392bcbd4a219a42ebd9518d2e2ef"
      }
    ],
    "stats": {
      "total": 80,
      "additions": 42,
      "deletions": 38
    },
    "files": [
      {
        "sha": "8370c13e2625a5b9016f7e2e713af0b2e8cfa4ae",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5445f7d02a0621a60217c141edee5679f1bd1899/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5445f7d02a0621a60217c141edee5679f1bd1899/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=5445f7d02a0621a60217c141edee5679f1bd1899",
        "patch": "@@ -138,6 +138,37 @@ std::string CTransaction::ToString() const\n     return str;\n }\n \n+uint256 GetPrevoutHash(const CTransaction& txTo) {\n+    CHashWriter ss(SER_GETHASH, 0);\n+    for (unsigned int n = 0; n < txTo.vin.size(); n++) {\n+        ss << txTo.vin[n].prevout;\n+    }\n+    return ss.GetHash();\n+}\n+\n+uint256 GetSequenceHash(const CTransaction& txTo) {\n+    CHashWriter ss(SER_GETHASH, 0);\n+    for (unsigned int n = 0; n < txTo.vin.size(); n++) {\n+        ss << txTo.vin[n].nSequence;\n+    }\n+    return ss.GetHash();\n+}\n+\n+uint256 GetOutputsHash(const CTransaction& txTo) {\n+    CHashWriter ss(SER_GETHASH, 0);\n+    for (unsigned int n = 0; n < txTo.vout.size(); n++) {\n+        ss << txTo.vout[n];\n+    }\n+    return ss.GetHash();\n+}\n+\n+PrecomputedTransactionData::PrecomputedTransactionData(const CTransaction& txTo)\n+{\n+    hashPrevouts = GetPrevoutHash(txTo);\n+    hashSequence = GetSequenceHash(txTo);\n+    hashOutputs = GetOutputsHash(txTo);\n+}\n+\n int64_t GetTransactionWeight(const CTransaction& tx)\n {\n     return ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR -1) + ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);"
      },
      {
        "sha": "ee28780537a90e19011e38cfd7beaa32f70e9f14",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5445f7d02a0621a60217c141edee5679f1bd1899/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5445f7d02a0621a60217c141edee5679f1bd1899/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=5445f7d02a0621a60217c141edee5679f1bd1899",
        "patch": "@@ -450,11 +450,22 @@ struct CMutableTransaction\n     }\n };\n \n+struct PrecomputedTransactionData\n+{\n+    uint256 hashPrevouts, hashSequence, hashOutputs;\n+\n+    PrecomputedTransactionData(const CTransaction& tx);\n+};\n+\n typedef std::shared_ptr<const CTransaction> CTransactionRef;\n static inline CTransactionRef MakeTransactionRef() { return std::make_shared<const CTransaction>(); }\n template <typename Tx> static inline CTransactionRef MakeTransactionRef(Tx&& txIn) { return std::make_shared<const CTransaction>(std::forward<Tx>(txIn)); }\n \n /** Compute the weight of a transaction, as defined by BIP 141 */\n int64_t GetTransactionWeight(const CTransaction &tx);\n \n+uint256 GetPrevoutHash(const CTransaction &txTo);\n+uint256 GetOutputsHash(const CTransaction &txTo);\n+uint256 GetSequenceHash(const CTransaction &txTo);\n+\n #endif // BITCOIN_PRIMITIVES_TRANSACTION_H"
      },
      {
        "sha": "60ff157eba72c86da0ad5142126c0e388a71aaa6",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5445f7d02a0621a60217c141edee5679f1bd1899/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5445f7d02a0621a60217c141edee5679f1bd1899/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=5445f7d02a0621a60217c141edee5679f1bd1899",
        "patch": "@@ -1142,39 +1142,8 @@ class CTransactionSignatureSerializer {\n     }\n };\n \n-uint256 GetPrevoutHash(const CTransaction& txTo) {\n-    CHashWriter ss(SER_GETHASH, 0);\n-    for (unsigned int n = 0; n < txTo.vin.size(); n++) {\n-        ss << txTo.vin[n].prevout;\n-    }\n-    return ss.GetHash();\n-}\n-\n-uint256 GetSequenceHash(const CTransaction& txTo) {\n-    CHashWriter ss(SER_GETHASH, 0);\n-    for (unsigned int n = 0; n < txTo.vin.size(); n++) {\n-        ss << txTo.vin[n].nSequence;\n-    }\n-    return ss.GetHash();\n-}\n-\n-uint256 GetOutputsHash(const CTransaction& txTo) {\n-    CHashWriter ss(SER_GETHASH, 0);\n-    for (unsigned int n = 0; n < txTo.vout.size(); n++) {\n-        ss << txTo.vout[n];\n-    }\n-    return ss.GetHash();\n-}\n-\n } // anon namespace\n \n-PrecomputedTransactionData::PrecomputedTransactionData(const CTransaction& txTo)\n-{\n-    hashPrevouts = GetPrevoutHash(txTo);\n-    hashSequence = GetSequenceHash(txTo);\n-    hashOutputs = GetOutputsHash(txTo);\n-}\n-\n uint256 SignatureHash(const CScript& scriptCode, const CTransaction& txTo, unsigned int nIn, int nHashType, const CAmount& amount, SigVersion sigversion, const PrecomputedTransactionData* cache)\n {\n     if (sigversion == SIGVERSION_WITNESS_V0) {"
      },
      {
        "sha": "ab977f0c288bba4b61c9f68fe66231c528b1dbff",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5445f7d02a0621a60217c141edee5679f1bd1899/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5445f7d02a0621a60217c141edee5679f1bd1899/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=5445f7d02a0621a60217c141edee5679f1bd1899",
        "patch": "@@ -110,13 +110,6 @@ enum\n \n bool CheckSignatureEncoding(const std::vector<unsigned char> &vchSig, unsigned int flags, ScriptError* serror);\n \n-struct PrecomputedTransactionData\n-{\n-    uint256 hashPrevouts, hashSequence, hashOutputs;\n-\n-    PrecomputedTransactionData(const CTransaction& tx);\n-};\n-\n enum SigVersion\n {\n     SIGVERSION_BASE = 0,"
      }
    ]
  },
  {
    "sha": "200c885036aecaa1843984a9a286ba833d3ac140",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMDBjODg1MDM2YWVjYWExODQzOTg0YTlhMjg2YmE4MzNkM2FjMTQw",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-01-27T16:51:27Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-01-27T18:24:57Z"
      },
      "message": "Change CTransactionRef to contain a shared_ptr\n\nThis is preparation for adding more (memory-only) data that will\nbe attached to a transaction, but not necessarily at construction.",
      "tree": {
        "sha": "155466fd6881b1a0bac5a9c67b86e3e5e22d1bc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/155466fd6881b1a0bac5a9c67b86e3e5e22d1bc1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/200c885036aecaa1843984a9a286ba833d3ac140",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/200c885036aecaa1843984a9a286ba833d3ac140",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/200c885036aecaa1843984a9a286ba833d3ac140",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/200c885036aecaa1843984a9a286ba833d3ac140/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5445f7d02a0621a60217c141edee5679f1bd1899",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5445f7d02a0621a60217c141edee5679f1bd1899",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5445f7d02a0621a60217c141edee5679f1bd1899"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 39,
      "deletions": 3
    },
    "files": [
      {
        "sha": "24dba53fa85d0ac1ef7dc583e06476acda2f598c",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 39,
        "deletions": 3,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/200c885036aecaa1843984a9a286ba833d3ac140/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/200c885036aecaa1843984a9a286ba833d3ac140/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=200c885036aecaa1843984a9a286ba833d3ac140",
        "patch": "@@ -457,9 +457,45 @@ struct PrecomputedTransactionData\n     PrecomputedTransactionData(const CTransaction& tx);\n };\n \n-typedef std::shared_ptr<const CTransaction> CTransactionRef;\n-static inline CTransactionRef MakeTransactionRef() { return std::make_shared<const CTransaction>(); }\n-template <typename Tx> static inline CTransactionRef MakeTransactionRef(Tx&& txIn) { return std::make_shared<const CTransaction>(std::forward<Tx>(txIn)); }\n+class CTransactionRef {\n+public:\n+    std::shared_ptr<const CTransaction> ptx;\n+\n+    CTransactionRef() {}\n+\n+    CTransactionRef(CMutableTransaction&& txIn) { ptx = std::make_shared<const CTransaction>(std::move(txIn)); }\n+    CTransactionRef(CTransaction&& txIn) { ptx = std::make_shared<const CTransaction>(std::move(txIn)); }\n+\n+    CTransactionRef(const CTransactionRef &a) : ptx(a.ptx) {}\n+\n+    CTransactionRef(std::nullptr_t) {}\n+\n+    const CTransaction& operator* () const { return *ptx; }\n+    operator bool() const { return (bool)ptx; }\n+\n+    // Accessors to make this look like a shared_ptr.\n+    void reset() { ptx.reset(); }\n+    long use_count() const { return ptx.use_count(); }\n+    const CTransaction *operator->() const { return &(*ptx); }\n+\n+    template <typename Stream>\n+    void Serialize(Stream& s) const {\n+        ptx->Serialize(s);\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& is) {\n+        ptx = std::make_shared<const CTransaction>(deserialize, is);\n+    }\n+\n+    template <typename Stream>\n+    CTransactionRef(deserialize_type, Stream& s) {\n+        ptx = std::make_shared<const CTransaction>(deserialize, s);\n+    }\n+};\n+\n+static inline CTransactionRef MakeTransactionRef() { return CTransactionRef(CTransaction()); }\n+template <typename Tx> static inline CTransactionRef MakeTransactionRef(Tx&& txIn) { return CTransactionRef(std::forward<Tx>(txIn)); }\n \n /** Compute the weight of a transaction, as defined by BIP 141 */\n int64_t GetTransactionWeight(const CTransaction &tx);"
      }
    ]
  },
  {
    "sha": "c95637cd2499af6eb4712b6de3c43564ad52aa3d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOTU2MzdjZDI0OTlhZjZlYjQ3MTJiNmRlM2M0MzU2NGFkNTJhYTNk",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-01-27T17:21:44Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-01-27T19:14:43Z"
      },
      "message": "Add another container around CTransaction in CTransactionRef\n\nThis container will be used for the in-memory, extra data that we'll\nkeep with each transaction.",
      "tree": {
        "sha": "15ef9a6b93032dc1d90607f1a698f65c017a5de3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15ef9a6b93032dc1d90607f1a698f65c017a5de3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c95637cd2499af6eb4712b6de3c43564ad52aa3d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c95637cd2499af6eb4712b6de3c43564ad52aa3d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c95637cd2499af6eb4712b6de3c43564ad52aa3d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c95637cd2499af6eb4712b6de3c43564ad52aa3d/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "200c885036aecaa1843984a9a286ba833d3ac140",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/200c885036aecaa1843984a9a286ba833d3ac140",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/200c885036aecaa1843984a9a286ba833d3ac140"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 24,
      "deletions": 10
    },
    "files": [
      {
        "sha": "6debb8d5bdd3a567abda9a84cc50715e5148d39a",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 24,
        "deletions": 10,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c95637cd2499af6eb4712b6de3c43564ad52aa3d/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c95637cd2499af6eb4712b6de3c43564ad52aa3d/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=c95637cd2499af6eb4712b6de3c43564ad52aa3d",
        "patch": "@@ -457,40 +457,54 @@ struct PrecomputedTransactionData\n     PrecomputedTransactionData(const CTransaction& tx);\n };\n \n-class CTransactionRef {\n+class CHashedTransaction {\n public:\n-    std::shared_ptr<const CTransaction> ptx;\n+    const CTransaction tx;\n+\n+    CHashedTransaction(CMutableTransaction&& txIn) : tx(std::move(txIn)) {}\n+    CHashedTransaction(CTransaction&& txIn) : tx(std::move(txIn)) {}\n+    CHashedTransaction(const CMutableTransaction& txIn) : tx(txIn) {}\n+    CHashedTransaction() {}\n+\n+    template <typename Stream>\n+    CHashedTransaction(deserialize_type, Stream& s) : tx(CMutableTransaction(deserialize, s)) {}\n+};\n \n+class CTransactionRef {\n+private:\n+    std::shared_ptr<const CHashedTransaction> ptx;\n+\n+public:\n     CTransactionRef() {}\n \n-    CTransactionRef(CMutableTransaction&& txIn) { ptx = std::make_shared<const CTransaction>(std::move(txIn)); }\n-    CTransactionRef(CTransaction&& txIn) { ptx = std::make_shared<const CTransaction>(std::move(txIn)); }\n+    CTransactionRef(CMutableTransaction&& txIn) { ptx = std::make_shared<const CHashedTransaction>(std::move(txIn)); }\n+    CTransactionRef(CTransaction&& txIn) { ptx = std::make_shared<const CHashedTransaction>(std::move(txIn)); }\n \n     CTransactionRef(const CTransactionRef &a) : ptx(a.ptx) {}\n \n     CTransactionRef(std::nullptr_t) {}\n \n-    const CTransaction& operator* () const { return *ptx; }\n+    const CTransaction& operator* () const { return ptx->tx; }\n     operator bool() const { return (bool)ptx; }\n \n     // Accessors to make this look like a shared_ptr.\n     void reset() { ptx.reset(); }\n     long use_count() const { return ptx.use_count(); }\n-    const CTransaction *operator->() const { return &(*ptx); }\n+    const CTransaction *operator->() const { return &(ptx->tx); }\n \n     template <typename Stream>\n-    void Serialize(Stream& s) const {\n-        ptx->Serialize(s);\n+    inline void Serialize(Stream& s) const {\n+        ptx->tx.Serialize(s);\n     }\n \n     template <typename Stream>\n     void Unserialize(Stream& is) {\n-        ptx = std::make_shared<const CTransaction>(deserialize, is);\n+        ptx = std::make_shared<const CHashedTransaction>(deserialize, is);\n     }\n \n     template <typename Stream>\n     CTransactionRef(deserialize_type, Stream& s) {\n-        ptx = std::make_shared<const CTransaction>(deserialize, s);\n+        ptx = std::make_shared<const CHashedTransaction>(deserialize, s);\n     }\n };\n "
      }
    ]
  },
  {
    "sha": "dbe4cfe36d465d9c4821b8e157bc231e5aaff87b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYmU0Y2ZlMzZkNDY1ZDljNDgyMWI4ZTE1N2JjMjMxZTVhYWZmODdi",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-01-27T19:03:47Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-01-27T19:14:43Z"
      },
      "message": "Allow PrecomputedTransactionData to be computed after construction",
      "tree": {
        "sha": "35e6e18ac86e60458f49e5ed1a5dd7bec6dcbf16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35e6e18ac86e60458f49e5ed1a5dd7bec6dcbf16"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c95637cd2499af6eb4712b6de3c43564ad52aa3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c95637cd2499af6eb4712b6de3c43564ad52aa3d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c95637cd2499af6eb4712b6de3c43564ad52aa3d"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 17,
      "deletions": 9
    },
    "files": [
      {
        "sha": "f774b3b5036f20542f5765907d6cda2e5300e145",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=dbe4cfe36d465d9c4821b8e157bc231e5aaff87b",
        "patch": "@@ -162,7 +162,7 @@ uint256 GetOutputsHash(const CTransaction& txTo) {\n     return ss.GetHash();\n }\n \n-PrecomputedTransactionData::PrecomputedTransactionData(const CTransaction& txTo)\n+void PrecomputedTransactionData::Compute(const CTransaction &txTo)\n {\n     hashPrevouts = GetPrevoutHash(txTo);\n     hashSequence = GetSequenceHash(txTo);"
      },
      {
        "sha": "2ef6e74a025dd608d770003386d93545e51e69ed",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=dbe4cfe36d465d9c4821b8e157bc231e5aaff87b",
        "patch": "@@ -454,7 +454,8 @@ struct PrecomputedTransactionData\n {\n     uint256 hashPrevouts, hashSequence, hashOutputs;\n \n-    PrecomputedTransactionData(const CTransaction& tx);\n+    PrecomputedTransactionData() {}\n+    void Compute(const CTransaction &tx);\n };\n \n class CHashedTransaction {"
      },
      {
        "sha": "dfcbb6d8b26a8957eee3faf838ddadf506027cd3",
        "filename": "src/script/bitcoinconsensus.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b/src/script/bitcoinconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b/src/script/bitcoinconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.cpp?ref=dbe4cfe36d465d9c4821b8e157bc231e5aaff87b",
        "patch": "@@ -94,7 +94,8 @@ static int verify_script(const unsigned char *scriptPubKey, unsigned int scriptP\n         // Regardless of the verification result, the tx did not error.\n         set_error(err, bitcoinconsensus_ERR_OK);\n \n-        PrecomputedTransactionData txdata(tx);\n+        PrecomputedTransactionData txdata;\n+        txdata.Compute(tx);\n         return VerifyScript(tx.vin[nIn].scriptSig, CScript(scriptPubKey, scriptPubKey + scriptPubKeyLen), &tx.vin[nIn].scriptWitness, flags, TransactionSignatureChecker(&tx, nIn, amount, txdata), NULL);\n     } catch (const std::exception&) {\n         return set_error(err, bitcoinconsensus_ERR_TX_DESERIALIZE); // Error deserializing"
      },
      {
        "sha": "cf91afdb3d89ca2f3a7dd22b94c2ec5b76e15c6b",
        "filename": "src/test/script_P2SH_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b/src/test/script_P2SH_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b/src/test/script_P2SH_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_P2SH_tests.cpp?ref=dbe4cfe36d465d9c4821b8e157bc231e5aaff87b",
        "patch": "@@ -106,7 +106,8 @@ BOOST_AUTO_TEST_CASE(sign)\n     // All of the above should be OK, and the txTos have valid signatures\n     // Check to make sure signature verification fails if we use the wrong ScriptSig:\n     for (int i = 0; i < 8; i++) {\n-        PrecomputedTransactionData txdata(txTo[i]);\n+        PrecomputedTransactionData txdata;\n+        txdata.Compute(txTo[i]);\n         for (int j = 0; j < 8; j++)\n         {\n             CScript sigSave = txTo[i].vin[0].scriptSig;"
      },
      {
        "sha": "63170401b4eaed643f5d39a551e63fcf3ca91d59",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=dbe4cfe36d465d9c4821b8e157bc231e5aaff87b",
        "patch": "@@ -154,7 +154,8 @@ BOOST_AUTO_TEST_CASE(tx_valid)\n             BOOST_CHECK_MESSAGE(CheckTransaction(tx, state), strTest);\n             BOOST_CHECK(state.IsValid());\n \n-            PrecomputedTransactionData txdata(tx);\n+            PrecomputedTransactionData txdata;\n+            txdata.Compute(tx);\n             for (unsigned int i = 0; i < tx.vin.size(); i++)\n             {\n                 if (!mapprevOutScriptPubKeys.count(tx.vin[i].prevout))\n@@ -238,7 +239,8 @@ BOOST_AUTO_TEST_CASE(tx_invalid)\n             CValidationState state;\n             fValid = CheckTransaction(tx, state) && state.IsValid();\n \n-            PrecomputedTransactionData txdata(tx);\n+            PrecomputedTransactionData txdata;\n+            txdata.Compute(tx);\n             for (unsigned int i = 0; i < tx.vin.size() && fValid; i++)\n             {\n                 if (!mapprevOutScriptPubKeys.count(tx.vin[i].prevout))\n@@ -459,7 +461,8 @@ BOOST_AUTO_TEST_CASE(test_big_witness_transaction) {\n     CTransaction tx(deserialize, vstream);\n \n     // check all inputs concurrently, with the cache\n-    PrecomputedTransactionData txdata(tx);\n+    PrecomputedTransactionData txdata;\n+    txdata.Compute(tx);\n     boost::thread_group threadGroup;\n     CCheckQueue<CScriptCheck> scriptcheckqueue(128);\n     CCheckQueueControl<CScriptCheck> control(&scriptcheckqueue);"
      },
      {
        "sha": "c5a75a9c3f121437bd949474c2e3269f468ce335",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=dbe4cfe36d465d9c4821b8e157bc231e5aaff87b",
        "patch": "@@ -950,7 +950,8 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n \n         // Check against previous transactions\n         // This is done last to help prevent CPU exhaustion denial-of-service attacks.\n-        PrecomputedTransactionData txdata(tx);\n+        PrecomputedTransactionData txdata;\n+        txdata.Compute(tx);\n         if (!CheckInputs(tx, state, view, true, scriptVerifyFlags, true, txdata)) {\n             // SCRIPT_VERIFY_CLEANSTACK requires SCRIPT_VERIFY_WITNESS, so we\n             // need to turn both off, and compare against just turning off CLEANSTACK\n@@ -1905,7 +1906,8 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n             return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n-        txdata.emplace_back(tx);\n+        txdata.emplace_back();\n+        txdata.back().Compute(tx);\n         if (!tx.IsCoinBase())\n         {\n             nFees += view.GetValueIn(tx)-tx.GetValueOut();"
      }
    ]
  },
  {
    "sha": "41347d95ae30779340a294aaf384e01b81fc0b16",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTM0N2Q5NWFlMzA3NzkzNDBhMjk0YWFmMzg0ZTAxYjgxZmMwYjE2",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-01-27T19:52:43Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-02-07T15:28:58Z"
      },
      "message": "Move PrecomputedTransactionData inside CHashedTransaction\n\nWe now cache the segwit hashes inside each CTransactionRef. In ConnectBlock,\nif the cache has already been populated, no re-hashing is done.",
      "tree": {
        "sha": "4389878f951ae9836d2bcea0865d281b3e91eb13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4389878f951ae9836d2bcea0865d281b3e91eb13"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41347d95ae30779340a294aaf384e01b81fc0b16",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41347d95ae30779340a294aaf384e01b81fc0b16",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/41347d95ae30779340a294aaf384e01b81fc0b16",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41347d95ae30779340a294aaf384e01b81fc0b16/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dbe4cfe36d465d9c4821b8e157bc231e5aaff87b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dbe4cfe36d465d9c4821b8e157bc231e5aaff87b"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 29,
      "deletions": 13
    },
    "files": [
      {
        "sha": "d19d9389a3effd1b2984de74c97340b5e3a03f6b",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41347d95ae30779340a294aaf384e01b81fc0b16/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41347d95ae30779340a294aaf384e01b81fc0b16/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=41347d95ae30779340a294aaf384e01b81fc0b16",
        "patch": "@@ -169,6 +169,14 @@ void PrecomputedTransactionData::Compute(const CTransaction &txTo)\n     hashOutputs = GetOutputsHash(txTo);\n }\n \n+void CHashedTransaction::ComputeCache() const\n+{\n+    if (!cacheReady) {\n+        cache.Compute(tx);\n+        cacheReady = true;\n+    }\n+}\n+\n int64_t GetTransactionWeight(const CTransaction& tx)\n {\n     return ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR -1) + ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);"
      },
      {
        "sha": "f50e56b22f2a7c3abc70fede36a1a40b1b5dc160",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 16,
        "deletions": 6,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41347d95ae30779340a294aaf384e01b81fc0b16/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41347d95ae30779340a294aaf384e01b81fc0b16/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=41347d95ae30779340a294aaf384e01b81fc0b16",
        "patch": "@@ -459,16 +459,23 @@ struct PrecomputedTransactionData\n };\n \n class CHashedTransaction {\n+private:\n+    mutable PrecomputedTransactionData cache;\n+    mutable bool cacheReady;\n+\n public:\n     const CTransaction tx;\n \n-    CHashedTransaction(CMutableTransaction&& txIn) : tx(std::move(txIn)) {}\n-    CHashedTransaction(CTransaction&& txIn) : tx(std::move(txIn)) {}\n-    CHashedTransaction(const CMutableTransaction& txIn) : tx(txIn) {}\n-    CHashedTransaction() {}\n+    CHashedTransaction(CMutableTransaction&& txIn) : cacheReady(false), tx(std::move(txIn)) {}\n+    CHashedTransaction(CTransaction&& txIn) : cacheReady(false), tx(std::move(txIn)) {}\n+    CHashedTransaction(const CMutableTransaction& txIn) : cacheReady(false), tx(txIn) {}\n+    CHashedTransaction() : cacheReady(false) {}\n+\n+    void ComputeCache() const;\n+    PrecomputedTransactionData& GetCache() const { return cache; }\n \n     template <typename Stream>\n-    CHashedTransaction(deserialize_type, Stream& s) : tx(CMutableTransaction(deserialize, s)) {}\n+    CHashedTransaction(deserialize_type, Stream& s) : cacheReady(false), tx(CMutableTransaction(deserialize, s)) {}\n };\n \n class CTransactionRef {\n@@ -488,11 +495,14 @@ class CTransactionRef {\n     const CTransaction& operator* () const { return ptx->tx; }\n     operator bool() const { return (bool)ptx; }\n \n-    // Accessors to make this look like a shared_ptr.\n+    // Accessors to make this look like a shared_ptr to a CTransaction.\n     void reset() { ptx.reset(); }\n     long use_count() const { return ptx.use_count(); }\n     const CTransaction *operator->() const { return &(ptx->tx); }\n \n+    void ComputeCache() const { ptx->ComputeCache(); }\n+    PrecomputedTransactionData& GetCache() const { return ptx->GetCache(); }\n+\n     template <typename Stream>\n     inline void Serialize(Stream& s) const {\n         ptx->tx.Serialize(s);"
      },
      {
        "sha": "61d3e3889c53d9d4c14edd45b6c852f99395cf1b",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41347d95ae30779340a294aaf384e01b81fc0b16/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41347d95ae30779340a294aaf384e01b81fc0b16/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=41347d95ae30779340a294aaf384e01b81fc0b16",
        "patch": "@@ -950,8 +950,8 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n \n         // Check against previous transactions\n         // This is done last to help prevent CPU exhaustion denial-of-service attacks.\n-        PrecomputedTransactionData txdata;\n-        txdata.Compute(tx);\n+        ptx.ComputeCache();\n+        PrecomputedTransactionData &txdata = ptx.GetCache();\n         if (!CheckInputs(tx, state, view, true, scriptVerifyFlags, true, txdata)) {\n             // SCRIPT_VERIFY_CLEANSTACK requires SCRIPT_VERIFY_WITNESS, so we\n             // need to turn both off, and compare against just turning off CLEANSTACK\n@@ -1869,8 +1869,6 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     std::vector<std::pair<uint256, CDiskTxPos> > vPos;\n     vPos.reserve(block.vtx.size());\n     blockundo.vtxundo.reserve(block.vtx.size() - 1);\n-    std::vector<PrecomputedTransactionData> txdata;\n-    txdata.reserve(block.vtx.size()); // Required so that pointers to individual PrecomputedTransactionData don't get invalidated\n     for (unsigned int i = 0; i < block.vtx.size(); i++)\n     {\n         const CTransaction &tx = *(block.vtx[i]);\n@@ -1906,15 +1904,15 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n             return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n-        txdata.emplace_back();\n-        txdata.back().Compute(tx);\n+        block.vtx[i].ComputeCache();\n+\n         if (!tx.IsCoinBase())\n         {\n             nFees += view.GetValueIn(tx)-tx.GetValueOut();\n \n             std::vector<CScriptCheck> vChecks;\n             bool fCacheResults = fJustCheck; /* Don't cache results if we're actually connecting blocks (still consult the cache, though) */\n-            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, txdata[i], nScriptCheckThreads ? &vChecks : NULL))\n+            if (!CheckInputs(tx, state, view, fScriptChecks, flags, fCacheResults, block.vtx[i].GetCache(), nScriptCheckThreads ? &vChecks : NULL))\n                 return error(\"ConnectBlock(): CheckInputs on %s failed with %s\",\n                     tx.GetHash().ToString(), FormatStateMessage(state));\n             control.Add(vChecks);"
      }
    ]
  },
  {
    "sha": "195fff3b559fae44c05dcffad974f63fb0abf388",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOTVmZmYzYjU1OWZhZTQ0YzA1ZGNmZmFkOTc0ZjYzZmIwYWJmMzg4",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-01-27T20:04:15Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-02-07T15:28:58Z"
      },
      "message": "Pass const PrecomputedTransactionData references around",
      "tree": {
        "sha": "052ba9b0dd1cc697c512e84f45bca5d843b2fa66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/052ba9b0dd1cc697c512e84f45bca5d843b2fa66"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/195fff3b559fae44c05dcffad974f63fb0abf388",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/195fff3b559fae44c05dcffad974f63fb0abf388",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/195fff3b559fae44c05dcffad974f63fb0abf388",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/195fff3b559fae44c05dcffad974f63fb0abf388/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "41347d95ae30779340a294aaf384e01b81fc0b16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41347d95ae30779340a294aaf384e01b81fc0b16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/41347d95ae30779340a294aaf384e01b81fc0b16"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "f90fba32c4961cd6e5516c94af362211be4af17b",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/195fff3b559fae44c05dcffad974f63fb0abf388/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/195fff3b559fae44c05dcffad974f63fb0abf388/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=195fff3b559fae44c05dcffad974f63fb0abf388",
        "patch": "@@ -472,7 +472,7 @@ class CHashedTransaction {\n     CHashedTransaction() : cacheReady(false) {}\n \n     void ComputeCache() const;\n-    PrecomputedTransactionData& GetCache() const { return cache; }\n+    const PrecomputedTransactionData& GetCache() const { return cache; }\n \n     template <typename Stream>\n     CHashedTransaction(deserialize_type, Stream& s) : cacheReady(false), tx(CMutableTransaction(deserialize, s)) {}\n@@ -501,7 +501,7 @@ class CTransactionRef {\n     const CTransaction *operator->() const { return &(ptx->tx); }\n \n     void ComputeCache() const { ptx->ComputeCache(); }\n-    PrecomputedTransactionData& GetCache() const { return ptx->GetCache(); }\n+    const PrecomputedTransactionData& GetCache() const { return ptx->GetCache(); }\n \n     template <typename Stream>\n     inline void Serialize(Stream& s) const {"
      },
      {
        "sha": "6513bd7090d8806f7f11070b93700419c0a4cd8b",
        "filename": "src/script/sigcache.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/195fff3b559fae44c05dcffad974f63fb0abf388/src/script/sigcache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/195fff3b559fae44c05dcffad974f63fb0abf388/src/script/sigcache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.h?ref=195fff3b559fae44c05dcffad974f63fb0abf388",
        "patch": "@@ -23,7 +23,7 @@ class CachingTransactionSignatureChecker : public TransactionSignatureChecker\n     bool store;\n \n public:\n-    CachingTransactionSignatureChecker(const CTransaction* txToIn, unsigned int nInIn, const CAmount& amount, bool storeIn, PrecomputedTransactionData& txdataIn) : TransactionSignatureChecker(txToIn, nInIn, amount, txdataIn), store(storeIn) {}\n+    CachingTransactionSignatureChecker(const CTransaction* txToIn, unsigned int nInIn, const CAmount& amount, bool storeIn, const PrecomputedTransactionData& txdataIn) : TransactionSignatureChecker(txToIn, nInIn, amount, txdataIn), store(storeIn) {}\n \n     bool VerifySignature(const std::vector<unsigned char>& vchSig, const CPubKey& vchPubKey, const uint256& sighash) const;\n };"
      },
      {
        "sha": "48559d853ffb7b19635d44708c1ef9c2532266d5",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/195fff3b559fae44c05dcffad974f63fb0abf388/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/195fff3b559fae44c05dcffad974f63fb0abf388/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=195fff3b559fae44c05dcffad974f63fb0abf388",
        "patch": "@@ -951,7 +951,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // Check against previous transactions\n         // This is done last to help prevent CPU exhaustion denial-of-service attacks.\n         ptx.ComputeCache();\n-        PrecomputedTransactionData &txdata = ptx.GetCache();\n+        const PrecomputedTransactionData &txdata = ptx.GetCache();\n         if (!CheckInputs(tx, state, view, true, scriptVerifyFlags, true, txdata)) {\n             // SCRIPT_VERIFY_CLEANSTACK requires SCRIPT_VERIFY_WITNESS, so we\n             // need to turn both off, and compare against just turning off CLEANSTACK\n@@ -1417,7 +1417,7 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n }\n }// namespace Consensus\n \n-bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n+bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &inputs, bool fScriptChecks, unsigned int flags, bool cacheStore, const PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks)\n {\n     if (!tx.IsCoinBase())\n     {"
      },
      {
        "sha": "3a8e1279685832e65edd29c4b28ef7b2b2052a69",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/195fff3b559fae44c05dcffad974f63fb0abf388/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/195fff3b559fae44c05dcffad974f63fb0abf388/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=195fff3b559fae44c05dcffad974f63fb0abf388",
        "patch": "@@ -364,7 +364,7 @@ int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& i\n  * instead of being performed inline.\n  */\n bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsViewCache &view, bool fScriptChecks,\n-                 unsigned int flags, bool cacheStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks = NULL);\n+                 unsigned int flags, bool cacheStore, const PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks = NULL);\n \n /** Apply the effects of this transaction on the UTXO set represented by view */\n void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, int nHeight);\n@@ -438,11 +438,11 @@ class CScriptCheck\n     unsigned int nFlags;\n     bool cacheStore;\n     ScriptError error;\n-    PrecomputedTransactionData *txdata;\n+    const PrecomputedTransactionData *txdata;\n \n public:\n     CScriptCheck(): amount(0), ptxTo(0), nIn(0), nFlags(0), cacheStore(false), error(SCRIPT_ERR_UNKNOWN_ERROR) {}\n-    CScriptCheck(const CCoins& txFromIn, const CTransaction& txToIn, unsigned int nInIn, unsigned int nFlagsIn, bool cacheIn, PrecomputedTransactionData* txdataIn) :\n+    CScriptCheck(const CCoins& txFromIn, const CTransaction& txToIn, unsigned int nInIn, unsigned int nFlagsIn, bool cacheIn, const PrecomputedTransactionData* txdataIn) :\n         scriptPubKey(txFromIn.vout[txToIn.vin[nInIn].prevout.n].scriptPubKey), amount(txFromIn.vout[txToIn.vin[nInIn].prevout.n].nValue),\n         ptxTo(&txToIn), nIn(nInIn), nFlags(nFlagsIn), cacheStore(cacheIn), error(SCRIPT_ERR_UNKNOWN_ERROR), txdata(txdataIn) { }\n "
      }
    ]
  },
  {
    "sha": "4a0e33a772ba2256e5b2de1be14d983ed7f72179",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YTBlMzNhNzcyYmEyMjU2ZTViMmRlMWJlMTRkOTgzZWQ3ZjcyMTc5",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-01-30T19:23:16Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-02-07T15:29:09Z"
      },
      "message": "Don't require callers to populate PrecomputedTransactionData",
      "tree": {
        "sha": "dcf3f72f623bd681d05f0c9a8e0408724d105f2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dcf3f72f623bd681d05f0c9a8e0408724d105f2b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a0e33a772ba2256e5b2de1be14d983ed7f72179",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a0e33a772ba2256e5b2de1be14d983ed7f72179",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4a0e33a772ba2256e5b2de1be14d983ed7f72179",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a0e33a772ba2256e5b2de1be14d983ed7f72179/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "195fff3b559fae44c05dcffad974f63fb0abf388",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/195fff3b559fae44c05dcffad974f63fb0abf388",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/195fff3b559fae44c05dcffad974f63fb0abf388"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 12,
      "deletions": 17
    },
    "files": [
      {
        "sha": "4da74ab0caf0a076b4d1bcb2aa8e1b7579b3c2d8",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a0e33a772ba2256e5b2de1be14d983ed7f72179/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a0e33a772ba2256e5b2de1be14d983ed7f72179/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=4a0e33a772ba2256e5b2de1be14d983ed7f72179",
        "patch": "@@ -169,12 +169,10 @@ void PrecomputedTransactionData::Compute(const CTransaction &txTo)\n     hashOutputs = GetOutputsHash(txTo);\n }\n \n-void CHashedTransaction::ComputeCache() const\n+const PrecomputedTransactionData& CHashedTransaction::GetCache() const\n {\n-    if (!cacheReady) {\n-        cache.Compute(tx);\n-        cacheReady = true;\n-    }\n+    std::call_once(cache.flag, [&]() { cache.Compute(tx); });\n+    return cache;\n }\n \n int64_t GetTransactionWeight(const CTransaction& tx)"
      },
      {
        "sha": "7f1c43cabc11df9fef6e0b046ded4064239f2b39",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a0e33a772ba2256e5b2de1be14d983ed7f72179/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a0e33a772ba2256e5b2de1be14d983ed7f72179/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=4a0e33a772ba2256e5b2de1be14d983ed7f72179",
        "patch": "@@ -11,6 +11,8 @@\n #include \"serialize.h\"\n #include \"uint256.h\"\n \n+#include <mutex>\n+\n static const int SERIALIZE_TRANSACTION_NO_WITNESS = 0x40000000;\n \n static const int WITNESS_SCALE_FACTOR = 4;\n@@ -453,6 +455,7 @@ struct CMutableTransaction\n struct PrecomputedTransactionData\n {\n     uint256 hashPrevouts, hashSequence, hashOutputs;\n+    std::once_flag flag; // for ensuring the hashes are generated once\n \n     PrecomputedTransactionData() {}\n     void Compute(const CTransaction &tx);\n@@ -461,21 +464,19 @@ struct PrecomputedTransactionData\n class CHashedTransaction {\n private:\n     mutable PrecomputedTransactionData cache;\n-    mutable bool cacheReady;\n \n public:\n     const CTransaction tx;\n \n-    CHashedTransaction(CMutableTransaction&& txIn) : cacheReady(false), tx(std::move(txIn)) {}\n-    CHashedTransaction(CTransaction&& txIn) : cacheReady(false), tx(std::move(txIn)) {}\n-    CHashedTransaction(const CMutableTransaction& txIn) : cacheReady(false), tx(txIn) {}\n-    CHashedTransaction() : cacheReady(false) {}\n+    CHashedTransaction(CMutableTransaction&& txIn) : tx(std::move(txIn)) {}\n+    CHashedTransaction(CTransaction&& txIn) : tx(std::move(txIn)) {}\n+    CHashedTransaction(const CMutableTransaction& txIn) : tx(txIn) {}\n+    CHashedTransaction() {}\n \n-    void ComputeCache() const;\n-    const PrecomputedTransactionData& GetCache() const { return cache; }\n+    const PrecomputedTransactionData& GetCache() const;\n \n     template <typename Stream>\n-    CHashedTransaction(deserialize_type, Stream& s) : cacheReady(false), tx(CMutableTransaction(deserialize, s)) {}\n+    CHashedTransaction(deserialize_type, Stream& s) : tx(CMutableTransaction(deserialize, s)) {}\n };\n \n class CTransactionRef {\n@@ -500,7 +501,6 @@ class CTransactionRef {\n     long use_count() const { return ptx.use_count(); }\n     const CTransaction *operator->() const { return &(ptx->tx); }\n \n-    void ComputeCache() const { ptx->ComputeCache(); }\n     const PrecomputedTransactionData& GetCache() const { return ptx->GetCache(); }\n \n     template <typename Stream>"
      },
      {
        "sha": "827354e4838391f862c92f2890bd414c9a97ce4a",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a0e33a772ba2256e5b2de1be14d983ed7f72179/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a0e33a772ba2256e5b2de1be14d983ed7f72179/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=4a0e33a772ba2256e5b2de1be14d983ed7f72179",
        "patch": "@@ -950,7 +950,6 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n \n         // Check against previous transactions\n         // This is done last to help prevent CPU exhaustion denial-of-service attacks.\n-        ptx.ComputeCache();\n         const PrecomputedTransactionData &txdata = ptx.GetCache();\n         if (!CheckInputs(tx, state, view, true, scriptVerifyFlags, true, txdata)) {\n             // SCRIPT_VERIFY_CLEANSTACK requires SCRIPT_VERIFY_WITNESS, so we\n@@ -1904,8 +1903,6 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n             return state.DoS(100, error(\"ConnectBlock(): too many sigops\"),\n                              REJECT_INVALID, \"bad-blk-sigops\");\n \n-        block.vtx[i].ComputeCache();\n-\n         if (!tx.IsCoinBase())\n         {\n             nFees += view.GetValueIn(tx)-tx.GetValueOut();"
      }
    ]
  }
]