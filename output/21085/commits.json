[
  {
    "sha": "cfa42905aac7fed8dee3e005bdb2c4641c487742",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZmE0MjkwNWFhYzdmZWQ4ZGVlM2UwMDViZGIyYzQ2NDFjNDg3NzQy",
    "commit": {
      "author": {
        "name": "saibato",
        "email": "saibato.naga@pm.me",
        "date": "2021-02-05T10:10:32Z"
      },
      "committer": {
        "name": "saibato",
        "email": "saibato.naga@pm.me",
        "date": "2021-02-05T10:10:32Z"
      },
      "message": "Allow self.chain = 'main' in python bitcoin test framework\n\nmainchain and testchains could behave different.\nSo make sure we can now easy test this.",
      "tree": {
        "sha": "1c899640bfa7e5b8534b8b5d957bc0a46100c515",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c899640bfa7e5b8534b8b5d957bc0a46100c515"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cfa42905aac7fed8dee3e005bdb2c4641c487742",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfa42905aac7fed8dee3e005bdb2c4641c487742",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cfa42905aac7fed8dee3e005bdb2c4641c487742",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfa42905aac7fed8dee3e005bdb2c4641c487742/comments",
    "author": {
      "login": "Saibato",
      "id": 34917548,
      "node_id": "MDQ6VXNlcjM0OTE3NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34917548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Saibato",
      "html_url": "https://github.com/Saibato",
      "followers_url": "https://api.github.com/users/Saibato/followers",
      "following_url": "https://api.github.com/users/Saibato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Saibato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Saibato/subscriptions",
      "organizations_url": "https://api.github.com/users/Saibato/orgs",
      "repos_url": "https://api.github.com/users/Saibato/repos",
      "events_url": "https://api.github.com/users/Saibato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Saibato/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Saibato",
      "id": 34917548,
      "node_id": "MDQ6VXNlcjM0OTE3NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34917548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Saibato",
      "html_url": "https://github.com/Saibato",
      "followers_url": "https://api.github.com/users/Saibato/followers",
      "following_url": "https://api.github.com/users/Saibato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Saibato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Saibato/subscriptions",
      "organizations_url": "https://api.github.com/users/Saibato/orgs",
      "repos_url": "https://api.github.com/users/Saibato/repos",
      "events_url": "https://api.github.com/users/Saibato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Saibato/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "53730a78bc3b017a2b3c8e373b11983929ec61fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53730a78bc3b017a2b3c8e373b11983929ec61fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53730a78bc3b017a2b3c8e373b11983929ec61fe"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 10,
      "deletions": 3
    },
    "files": [
      {
        "sha": "5a2ca8af30661febda86b588f95bdddcbdefb652",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfa42905aac7fed8dee3e005bdb2c4641c487742/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfa42905aac7fed8dee3e005bdb2c4641c487742/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=cfa42905aac7fed8dee3e005bdb2c4641c487742",
        "patch": "@@ -403,7 +403,8 @@ def init_wallet(self, i):\n             n = self.nodes[i]\n             if wallet_name is not None:\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\n-            n.importprivkey(privkey=n.get_deterministic_priv_key().key, label='coinbase')\n+            if self.chain != \"main\":\n+                n.importprivkey(privkey=n.get_deterministic_priv_key().key, label='coinbase')\n \n     def run_test(self):\n         \"\"\"Tests must override this method to define test logic\"\"\""
      },
      {
        "sha": "24806eab23970fb973971d99d1d1550c5df91954",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfa42905aac7fed8dee3e005bdb2c4641c487742/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfa42905aac7fed8dee3e005bdb2c4641c487742/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=cfa42905aac7fed8dee3e005bdb2c4641c487742",
        "patch": "@@ -399,7 +399,10 @@ def get_auth_cookie(datadir, chain):\n                     assert password is None  # Ensure that there is only one rpcpassword line\n                     password = line.split(\"=\")[1].strip(\"\\n\")\n     try:\n-        with open(os.path.join(datadir, chain, \".cookie\"), 'r', encoding=\"ascii\") as f:\n+        subdir = chain\n+        if subdir == \"main\":\n+            subdir = \"\"\n+        with open(os.path.join(datadir, subdir, \".cookie\"), 'r', encoding=\"ascii\") as f:\n             userpass = f.read()\n             split_userpass = userpass.split(':')\n             user = split_userpass[0]\n@@ -413,7 +416,10 @@ def get_auth_cookie(datadir, chain):\n \n # If a cookie file exists in the given datadir, delete it.\n def delete_cookie_file(datadir, chain):\n-    if os.path.isfile(os.path.join(datadir, chain, \".cookie\")):\n+    subdir = chain\n+    if chain == \"main\":\n+        subdir = \"\"\n+    if os.path.isfile(os.path.join(datadir, subdir, \".cookie\")):\n         logger.debug(\"Deleting leftover cookie file\")\n         os.remove(os.path.join(datadir, chain, \".cookie\"))\n "
      }
    ]
  }
]