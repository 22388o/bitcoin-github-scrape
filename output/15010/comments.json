[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/449053479",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-449053479",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 449053479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTA1MzQ3OQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-20T16:21:21Z",
    "updated_at": "2018-12-20T16:21:21Z",
    "author_association": "MEMBER",
    "body": "#14602 has required rebase for a few weeks and has several review comments unanswered.\r\n\r\nThis PR extracts the non-contentious bugfix from that PR and adds testing and commenting.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/449053479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/449092861",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-449092861",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 449092861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTA5Mjg2MQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-20T18:30:18Z",
    "updated_at": "2019-03-14T23:32:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15596](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15596.html) (rpc: Ignore sendmany::minconf as dummy value by MarcoFalke)\n* [#13756](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13756.html) (wallet: \"avoid_reuse\" wallet flag for improved privacy by kallewoof)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/449092861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/449153367",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-449153367",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 449153367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTE1MzM2Nw==",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?u=a1574ca2038ff1dfaa9a7764c59ea5ff4f305b5d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-20T22:17:52Z",
    "updated_at": "2018-12-20T22:17:52Z",
    "author_association": "MEMBER",
    "body": "I may be off base here, but looking at `CWallet::AvailableCoins` makes me think that some other argument is needed, to separately address:\r\n* coins which have received at least N confirmations, relative to the current moment\r\n* coins which were spendable M blocks ago\r\n\r\nTo me, the `getbalance` docs do not seem to indicate that coins spent in the past N blocks will be included in the balance. I would expect setting an earlier `minconf` there to uniformy decrease my balance (by windowing down to coins confirmed at greater depth / available with higher confidence), not to provide a window into the past (by excluding more recent spends).\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/449153367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450858236",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-450858236",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 450858236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDg1ODIzNg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T13:03:32Z",
    "updated_at": "2019-01-02T13:03:32Z",
    "author_association": "MEMBER",
    "body": "Can you have a look here @MeshCollider? If this is a non-contentious bugfix we should probably try to get this in.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450858236/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451116394",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-451116394",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 451116394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTExNjM5NA==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-03T11:20:39Z",
    "updated_at": "2019-01-03T11:20:39Z",
    "author_association": "MEMBER",
    "body": "This change looks sensible to me, but luke's comment above hasn't been addressed yet",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451116394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451141785",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-451141785",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 451141785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTE0MTc4NQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-03T13:24:46Z",
    "updated_at": "2019-01-03T13:24:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Catching up on this, but IIRC, the last time this issue was discussed, http://www.erisian.com.au/bitcoin-core-dev/log-2018-11-29.html#l-479, the main problem was considered to be:\r\n\r\n> your balance suddenly showing zero when you make a small payment.. because now your change is unconfirmed\r\n\r\nwhich would be fixed by implementing:\r\n\r\n> desired behavior is that balances shows confirmed + trusted-in-mempool-0conf.  And that you be able to adjust the threshold for confirmed and turn the trusted-in-mempool-zeroconf on and off. And if you make the confirmed=0, it should still only count in-mempool\r\n\r\nIt seems like this PR is addressing the problem in a different way. Instead of treating not fully confirmed spends from the wallet as trusted (and therefore including change in the balance), it is treating not fully confirmed spends as actually unspent (and therefore including the whole output value in the balance)?\r\n\r\nIt's possible I'm confused, but it would help if there was an explanation of how this fix relates to previous discussion (or doesn't relate, if it is just a tangential bugfix).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451141785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451651856",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-451651856",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 451651856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTY1MTg1Ng==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-05T12:32:15Z",
    "updated_at": "2019-01-05T12:32:15Z",
    "author_association": "MEMBER",
    "body": "This is the fix from https://github.com/bitcoin/bitcoin/pull/14602/commits/1ac717f8d836b16d5cb808c07f0578a309f4e9d0 , but with test cases and commenting added. From that PR:\r\n\r\n> Furthermore, CWallet::GetBalance (the trusted-only implementation) did not support setting a min_conf parameter. This was added in #13566, but only checked min_conf for UTXO creation, not UTXO spending.\r\n\r\nI don't understand Luke's assertion that the getbalance value should be 9.99 and -10.01. Displaying negative balance doesn't make sense to me.\r\n\r\nThe behaviour should now be that when calling `getbalance` with a minconf value:\r\n- coins that have received but have fewer than minconf confirmations are excluded\r\n- coins that have been spent but have fewer than minconf confirmations are included\r\n\r\nEffectively, this gives the balance at (TIP - minconf) height.\r\n\r\nThat behaviour makes sense to me, and I think best reflects the description in the RPC help for minconf: \"Only include transactions confirmed at least this many times.\" It was what I understood commit 1ac717f8d836b16d5cb808c07f0578a309f4e9d0 in #14602 was attempting.\r\n\r\nIf people disagree that this is the desired behaviour, then I can amend or close this PR. Also happy to add more documentation if people think that's required.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451651856/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451654903",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-451654903",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 451654903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTY1NDkwMw==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-05T13:22:10Z",
    "updated_at": "2019-01-05T13:22:10Z",
    "author_association": "MEMBER",
    "body": "It's not supposed to give the balance at (TIP - minconf) height, though. As someone pointed out at the meeting weeks ago, my fix didn't fix it correctly.\r\n\r\nIf you receive 50 BTC (unconfirmed), then spend the 50 BTC, this should show `-50` because the receive has not confirmed, yet you still sent 50 BTC.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451654903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451959800",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-451959800",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 451959800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTk1OTgwMA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T14:52:52Z",
    "updated_at": "2019-01-07T14:52:52Z",
    "author_association": "MEMBER",
    "body": "> If you receive 50 BTC (unconfirmed), then spend the 50 BTC, this should show -50\r\n\r\nThis really doesn't make sense to me. How can one have a negative bitcoin balance? What happens if the unconfirmed spend is bumped? Should the balance then be -100, or should it be -50?\r\n\r\nTo me, the only logically consistent and intuitive behaviour is to show the balance at (TIP - minconf), but this is really a question of concept and design, so I'd appreciate input from others, perhaps @MeshCollider and @laanwj.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451959800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451961908",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-451961908",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 451961908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTk2MTkwOA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T14:59:01Z",
    "updated_at": "2019-01-07T14:59:01Z",
    "author_association": "MEMBER",
    "body": "> If you receive 50 BTC (unconfirmed), then spend the 50 BTC, this should show -50\r\n\r\nIf unconfirmed credit does't add up, then unconfirmed debit shouldn't count as well?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451961908/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451966842",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-451966842",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 451966842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTk2Njg0Mg==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T15:14:20Z",
    "updated_at": "2019-01-07T15:14:20Z",
    "author_association": "MEMBER",
    "body": "Traditionally I think we've always counted balance as the sum of incoming UTXOs with sufficient confirmations, but which haven't been spent afterwards (even with lower confirmations). That means it's bounded by the balance you had minconf blocks ago, but can be less.\n\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451966842/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451982276",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-451982276",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 451982276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTk4MjI3Ng==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-07T15:57:43Z",
    "updated_at": "2019-01-07T15:57:43Z",
    "author_association": "MEMBER",
    "body": "From what I can tell, spends have always been counted, even when their inputs aren't.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/451982276/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454478112",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-454478112",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 454478112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDQ3ODExMg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T17:27:00Z",
    "updated_at": "2019-01-15T17:27:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "It might help if the PR description gave a specific example to think about. E.g. if I received 5 BTC at depth 3 and spent 4 BTC at depth 2, would getbalance(minconf=3) would show a balance of 1 before this PR and 5 after?\r\n\r\nIf so, this would be changing the interpretation of `minconf` from \"If I only trust blocks with depth >= `minconf`, how much money can I be sure I have?\" to \"In a hypothetical universe where only transactions in blocks >= `minconf` exist and there were no other signed transactions, how much money would I have?\"\r\n\r\nIt does seem like the answer to the first question would be more useful than the answer to the second question.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454478112/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/476857724",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-476857724",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 476857724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njg1NzcyNA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T21:21:55Z",
    "updated_at": "2019-03-26T21:21:55Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky \r\n\r\n> It might help if the PR description gave a specific example to think about. E.g. if I received 5 BTC at depth 3 and spent 4 BTC at depth 2, would getbalance(minconf=3) would show a balance of 1 before this PR and 5 after?\r\n\r\nYou need to consider the UTXO model here, rather than just balances. Here's your scenario:\r\n\r\ndepth 3: receive a 5 BTC UTXO (a)\r\ndepth 2: spend the 5 BTC UTXO (a)\r\n                    - create a 4 BTC payment UTXO (b)\r\n                    - receive a 1 BTC change UTXO (c)\r\n\r\nBefore this PR, `getbalance(minconf=3)` would show a balance of **0**: (a) is not included because it has been spent, and (c) is not included because it does not have the necessary number of confirmations. After this PR, `getbalance(minconf=3)` would show a balance of 5, because (a) has the necessary number of confirmations and (b) and (c) don't.\r\n\r\n@sipa:\r\n\r\n> I think we've always counted balance as the sum of incoming UTXOs with sufficient confirmations, but which haven't been spent afterwards (even with lower confirmations).\r\n\r\nIn the scenario above, would you include the change output (c) in your balance? ie amend your definition to be: (sum of incoming UTXOs with sufficient confirmations which haven't been spent afterwards) + (sum of change UTXOs). In that case, should I count change transactions where the input UTXO has fewer confirmations than `minconf`?\r\n\r\nTo me, a balance in Bitcoin can only make sense at a given block (ie given the UTXO set associated with this block, what is the total amount of UTXOs that I can sign for?) Any alternative definition (eg the amount of UTXOs that I can sign for less those UTXOs where I have evidence they can be spent, etc) leads to confusing inconsistencies like the example above.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/476857724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/476892387",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-476892387",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 476892387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njg5MjM4Nw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T23:21:42Z",
    "updated_at": "2019-03-26T23:21:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the explanation.\r\n\r\n> To me, a balance in Bitcoin can only make sense at a given block (ie given the UTXO set associated with this block, what is the total amount of UTXOs that I can sign for?)\r\n\r\nThis definition of a balance does make sense, but it seems not very useful, and even dangerous in the example above, where somebody might think they have 5 BTC to spend instead of 1.\r\n\r\nI think the definition of a `minconf` balance that'd be most useful would be the answer to the question in https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-454478112, \"If I only trust blocks with depth >= `minconf`, how much money can I be sure I have?\" It might not be practical to compute this with all conflicting spends that may be in the wallet. But if we only consider non-conflicting spends in the chain and mempool, it seems like we could start including outputs like (c) from the example. Maybe a modified [`IsTrusted`](https://github.com/bitcoin/bitcoin/blob/e14cd04abbb56ed1bc65aa817132f5d6de6a37cf/src/wallet/wallet.cpp#L2074-L2104) check would work, that makes sure every transaction input is from the wallet and either has depth greater than minconf, or recursively satisfies the same check.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/476892387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/477747159",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-477747159",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 477747159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Nzc0NzE1OQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-28T19:53:59Z",
    "updated_at": "2019-03-28T19:53:59Z",
    "author_association": "MEMBER",
    "body": "> \"If I only trust blocks with depth >= minconf, how much money can I be sure I have?\"\r\n\r\nThe answer is always 0, since there may be unconfirmed spends that the wallet is not aware of. Perhaps that's a bit of a legalistic answer, but the only thing that brings us sureness in Bitcoin is confirmations. Talking about a balance outside of confirmed transactions is dangerous in my opinion.\r\n\r\n> Maybe a modified IsTrusted check would work, that makes sure every transaction input is from the wallet and either has depth greater than minconf, or recursively satisfies the same check.\r\n\r\nMy view is that `getbalance` is a user-facing interface, and so the definition of _balance_ should be something that is clear, unambiguous and easily understandable by users. I don't think the definition above meets that criteria. Saying \"we'll include change outputs, but only if all of the inputs to the tx that created that output have more than minconf confirmations\" is too confusing for most users.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/477747159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/477780426",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-477780426",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 477780426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Nzc4MDQyNg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-28T21:36:33Z",
    "updated_at": "2019-03-28T21:38:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The answer is always 0, since there may be unconfirmed spends that the wallet is not aware of. Perhaps that's a bit of a legalistic answer, but the only thing that brings us sureness in Bitcoin is confirmations. Talking about a balance outside of confirmed transactions is dangerous in my opinion.\r\n\r\nThat's fair. I didn't specify the assumptions I was making with my suggested implementation. It would give the balance assuming you only created normal transactions with the bitcoin wallet and didn't broadcast conflicting transactions, or export your keys somewhere, etc. It would be possible to do more work and come up with an implementation that made fewer assumptions (like only assuming that the wallet knows about conflicting transactions, not that they were never broadcast) to produce a more useful `minconf` balance, but this may also be too dangerous, or just not worth the effort to implement.\r\n\r\nIn any case, I don't think there is an argument for `minconf` to be interpreted the way this PR currently interprets it, which is like a request for an old balance from a point in history. So I might suggest closing this PR. Or if you think this behavior is useful, it might be better to expose it as a new RPC like `gethistoricbalance` and take a height argument rather than a depth argument.\r\n\r\nBut I guess I still would be curious if @sipa has a different answer to your questions from https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-476857724.\r\n\r\nAlso, I was surprised to see the conclusion the last time this topic was discussed in IRC (http://www.erisian.com.au/bitcoin-core-dev/log-2018-11-29.html#l-596), since it seems like it is basically just requesting the current getbalance(minconf=0) behavior:\r\n\r\n> \\<gmaxwell> Right, I think the desired behavior is that balances shows confirmed + trusted-in-mempool-0conf\r\n\r\nBut it was also interesting to read because there are other potential getbalance improvements discussed there.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/477780426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/477824480",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-477824480",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 477824480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzgyNDQ4MA==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-29T00:56:12Z",
    "updated_at": "2019-03-29T00:56:12Z",
    "author_association": "MEMBER",
    "body": "Perhaps we should just disable minconf entirely if we're not going to support the current definition... Changing the meaning of stuff is pretty bad. If a new definition is desired, it can be introduced as a new RPC or something that old software won't accidentally hit.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/477824480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478158934",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-478158934",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15010",
    "id": 478158934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODE1ODkzNA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-29T21:43:05Z",
    "updated_at": "2019-03-29T21:43:05Z",
    "author_association": "MEMBER",
    "body": "ok, I'm going to close this for now. I don't think the existing behaviour is correct, consistent, or easily understandable by users. This offers an improvement because at the very least it can be documented and easily explained: https://github.com/bitcoin/bitcoin/pull/15010#issuecomment-451651856. I've offered to change this PR if we can agree on a clear and full description of what the replacement behaviour should be, but I haven't seen a response to that, or answers to the questions about edge cases.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/478158934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244255054",
    "pull_request_review_id": 188211016,
    "id": 244255054,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDI1NTA1NA==",
    "diff_hunk": "@@ -89,10 +89,9 @@ def run_test(self):\n         # Same with minconf=0\n         assert_equal(self.nodes[0].getbalance(minconf=0), Decimal('9.99'))\n         assert_equal(self.nodes[1].getbalance(minconf=0), Decimal('29.99'))\n-        # getbalance with a minconf incorrectly excludes coins that have been spent more recently than the minconf blocks ago\n-        # TODO: fix getbalance tracking of coin spentness depth\n-        assert_equal(self.nodes[0].getbalance(minconf=1), Decimal('0'))\n-        assert_equal(self.nodes[1].getbalance(minconf=1), Decimal('0'))\n+        # getbalance with a minconf includes coins that have been spent more recently than the minconf blocks ago\n+        assert_equal(self.nodes[0].getbalance(minconf=1), Decimal('50'))\n+        assert_equal(self.nodes[1].getbalance(minconf=1), Decimal('50'))",
    "path": "test/functional/wallet_balance.py",
    "position": 10,
    "original_position": 10,
    "commit_id": "14130114d589845cf0395bf9b7ca20f0c7aa32d7",
    "original_commit_id": "14130114d589845cf0395bf9b7ca20f0c7aa32d7",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is still the incorrect behaviour, I think. The correct values that should be returned here (at least with `dummy=\"*\"`) are 9.99 and -10.01, respectively. This is because sent transactions are always excluded from the balance, but incoming transactions are only included once they have sufficiently confirmed.",
    "created_at": "2018-12-28T03:00:28Z",
    "updated_at": "2018-12-28T03:00:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15010#discussion_r244255054",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244255054"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15010#discussion_r244255054"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244255054/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 94,
    "original_line": 94,
    "side": "RIGHT"
  }
]