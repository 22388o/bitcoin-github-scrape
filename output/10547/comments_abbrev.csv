laanwj,2017-06-07T12:27:22Z,"Why not use our own FastRandomContext? This only uses linear random, so I'd say there's no need to add a dependency on `std::random::mt19937`.\n\n(though getting rid of the boost one is good...)",https://github.com/bitcoin/bitcoin/pull/10547#issuecomment-306779269,306779269,
practicalswift,2017-06-07T14:41:46Z,@laanwj Good idea! Now using `FastRandomContext`. Looks OK now?,https://github.com/bitcoin/bitcoin/pull/10547#issuecomment-306816347,306816347,
laanwj,2017-06-07T14:46:00Z,"Yes, that's a cool minimal-impact solution using the lambda expressions.",https://github.com/bitcoin/bitcoin/pull/10547#issuecomment-306817693,306817693,
jonasschnelli,2017-06-08T06:27:44Z,"utACK 227ae9b34dce632e42ca9f22139e6efad0485df1.\nGreat use of lambdas.",https://github.com/bitcoin/bitcoin/pull/10547#issuecomment-307011151,307011151,
MarcoFalke,2017-06-07T16:04:47Z,This lambda returns an unsigned expression and such can never be negative.,https://github.com/bitcoin/bitcoin/pull/10547#discussion_r120670235,120670235,src/test/scheduler_tests.cpp
laanwj,2017-06-07T16:22:27Z,"Good catch, hadn't realized `randrange` returns an unsigned value. This is a risk with `auto`.",https://github.com/bitcoin/bitcoin/pull/10547#discussion_r120674706,120674706,src/test/scheduler_tests.cpp
practicalswift,2017-06-07T16:54:15Z,"@MarcoFalke Oh, good catch! Now explicitly setting the return type. Thanks a lot for noticing!",https://github.com/bitcoin/bitcoin/pull/10547#discussion_r120684131,120684131,src/test/scheduler_tests.cpp
