DrahtBot,2021-01-19 18:51:04,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/20963#issuecomment-763049292,763049292,
laanwj,2021-01-19 18:59:02,@dongcarl I guess a parallel set of changes to the guix build would be necessary ?,https://github.com/bitcoin/bitcoin/pull/20963#issuecomment-763053853,763053853,
dongcarl,2021-01-19 19:41:01,"I believe so, will look into it!",https://github.com/bitcoin/bitcoin/pull/20963#issuecomment-763082877,763082877,
DrahtBot,2021-01-21 00:10:53,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 80486e7e2d8c360839cffc5a0c597b5c745433a7<br>(master) | commit ee03c94b6133fb84c4006f040705fbb87182e01f<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`c465d0562d4f4b36...`](https://drahtbot.space/gitian/bitcoin/bitcoin/80486e7e2d8c360839cffc5a0c597b5c745433a7/bitcoin-80486e7e2d8c-aarch64-l,https://github.com/bitcoin/bitcoin/pull/20963#issuecomment-764055196,764055196,
MarcoFalke,2021-01-21 18:52:03,This is missing b74c21fad1ac2822ccdfa733d39265156afb31bb ...?,https://github.com/bitcoin/bitcoin/pull/20963#issuecomment-764861857,764861857,
laanwj,2021-01-24 18:23:39,"> This is missing b74c21f ...?\n\nWhile rebasing it looked to me that that was only a change to the security script. But it seems not. Will add the gitian yml change.\n\nEdit: Done, and removed 25cd539e756f6e2d514e21cfc902ff44abef7d10 ""gitian: Always specify noexecstack since we enforce it unconditionally"", replacing it with a commit that extends the workaround for the powerpc architectures.",https://github.com/bitcoin/bitcoin/pull/20963#issuecomment-766407722,766407722,
laanwj,2021-01-27 14:08:45,"Also, if we're looking into command-line options for optimizing further the first thing would be to consider using `-mcpu=power9` instead of `power8`/`970` respectively. I strongly suspect that everyone interested in these binaries wants to run them on Talos II workstations. But this also can be changed later, it doesn't have to be decided in this PR.",https://github.com/bitcoin/bitcoin/pull/20963#issuecomment-768309775,768309775,
DrahtBot,2021-01-28 14:22:23,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 15a9df070615e7e8f29c17a92b889f19218f25ac<br>(master) | commit 627e297a3ed3af0621ebff67de11a04f38e4e2a2<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`2de46bcf0f879816...`](https://drahtbot.space/gitian/bitcoin/bitcoin/15a9df070615e7e8f29c17a92b889f19218f25ac/bitcoin-15a9df070615-aarch64-l,https://github.com/bitcoin/bitcoin/pull/20963#issuecomment-769087243,769087243,
laanwj,2021-01-28 17:29:38,"Looks like the gitian build is working, nice.",https://github.com/bitcoin/bitcoin/pull/20963#issuecomment-769248945,769248945,
laanwj,2021-01-20 12:22:43,"So the reason that this is a workaround is that it's not 100% safe. Normally the object files are supposed to flag that they support non-executable stack. Due to a bug in that verson of RISC-V gcc, this is not signaled.\n\nThis linker flag *forces* non-executable stack, overriding individual object files' preference.\n\nI'm not sure it's a good idea to set this by default. If it's required for",https://github.com/bitcoin/bitcoin/pull/20963#discussion_r560919190,560919190,contrib/gitian-descriptors/gitian-linux.yml
sipa,2021-01-25 09:32:55,"Does this disable some optimization related to thread local storage? Is there a way to avoid that?\n\n(just wondering why this is here; not an objection if it's needed)",https://github.com/bitcoin/bitcoin/pull/20963#discussion_r563576815,563576815,configure.ac
laanwj,2021-01-25 10:51:42,"I don't know.\n@luke-jr ?\nIf this is a workaround for a platform-specific compiler issue, let's add a comment (preferably mentioning the upstream issue) so that it can be removed when no longer necessary.",https://github.com/bitcoin/bitcoin/pull/20963#discussion_r563630076,563630076,configure.ac
luke-jr,2021-01-25 18:53:00,Older glibc don't have support for the optimisation (hence it being part of glibc compat ;) ),https://github.com/bitcoin/bitcoin/pull/20963#discussion_r563964807,563964807,configure.ac
sipa,2021-01-25 19:43:00,"@luke-jr Yes, of course. I guess my question is: do we know whether that has any performance impact (presumably not much for now, as `thread_local` variables are only used for thread names AFAIK), and/or has the alternative of requiring a higher minimum glibc been considered?\n\nNo problem if the answer is we don't know, or there are reasons for doing it this way. I just want to make sure we don",https://github.com/bitcoin/bitcoin/pull/20963#discussion_r563995509,563995509,configure.ac
laanwj,2021-01-25 20:59:00,"FWIW in #18851 I had implemented the thread name system without use of TLS, which would have dropped that entire dependency.\n\nThat said, I doubt for our use (one query per log message?) a slightly slower TLS makes any noticeable difference in performance.",https://github.com/bitcoin/bitcoin/pull/20963#discussion_r564038929,564038929,configure.ac
luke-jr,2021-01-28 21:04:18,Why does this remain conditional? We enforce it on all platforms; might as well make it explicit.,https://github.com/bitcoin/bitcoin/pull/20963#discussion_r566405447,566405447,contrib/gitian-descriptors/gitian-linux.yml
laanwj,2021-01-28 21:28:14,"Because that is unsafe, see rationale here: https://github.com/bitcoin/bitcoin/pull/20963#discussion_r560919190\n\nThese lines can go away completely after gcc upgrade that fixes the underlying issue. But no sooner. ",https://github.com/bitcoin/bitcoin/pull/20963#discussion_r566418897,566418897,contrib/gitian-descriptors/gitian-linux.yml
