[
  {
    "sha": "5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YjkwYTlhYWJkM2M5Y2UxNmU1MDkyOTljYjMwODdiYmFjOGYwMjFk",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-21T23:49:44Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-28T13:33:46Z"
      },
      "message": "Minimal CProof class independent from pow.o",
      "tree": {
        "sha": "3155e545f6d61f8900017289fb214376ab8f30fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3155e545f6d61f8900017289fb214376ab8f30fb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "723c7526368badda15df8ac1ffc047a0ab2e384a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/723c7526368badda15df8ac1ffc047a0ab2e384a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/723c7526368badda15df8ac1ffc047a0ab2e384a"
      }
    ],
    "stats": {
      "total": 134,
      "additions": 79,
      "deletions": 55
    },
    "files": [
      {
        "sha": "4bf24ab159c5bcfdcd177697f16f2fb75ddb47c5",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 7,
        "deletions": 13,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
        "patch": "@@ -132,8 +132,7 @@ class CBlockIndex\n     int nVersion;\n     uint256 hashMerkleRoot;\n     unsigned int nTime;\n-    unsigned int nBits;\n-    unsigned int nNonce;\n+    CProof proof;\n \n     // (memory only) Sequencial id assigned to distinguish order in which blocks are received.\n     uint32_t nSequenceId;\n@@ -156,8 +155,7 @@ class CBlockIndex\n         nVersion       = 0;\n         hashMerkleRoot = 0;\n         nTime          = 0;\n-        nBits          = 0;\n-        nNonce         = 0;\n+        proof.SetNull();\n     }\n \n     CBlockIndex()\n@@ -172,8 +170,7 @@ class CBlockIndex\n         nVersion       = block.nVersion;\n         hashMerkleRoot = block.hashMerkleRoot;\n         nTime          = block.nTime;\n-        nBits          = block.nBits;\n-        nNonce         = block.nNonce;\n+        proof          = block.proof;\n     }\n \n     CDiskBlockPos GetBlockPos() const {\n@@ -202,8 +199,7 @@ class CBlockIndex\n             block.hashPrevBlock = pprev->GetBlockHash();\n         block.hashMerkleRoot = hashMerkleRoot;\n         block.nTime          = nTime;\n-        block.nBits          = nBits;\n-        block.nNonce         = nNonce;\n+        block.proof          = proof;\n         return block;\n     }\n \n@@ -219,7 +215,7 @@ class CBlockIndex\n \n     uint256 GetBlockWork() const\n     {\n-        return GetProofIncrement(nBits);\n+        return GetProofIncrement(proof.nBits);\n     }\n \n     enum { nMedianTimeSpan=11 };\n@@ -321,8 +317,7 @@ class CDiskBlockIndex : public CBlockIndex\n         READWRITE(hashPrev);\n         READWRITE(hashMerkleRoot);\n         READWRITE(nTime);\n-        READWRITE(nBits);\n-        READWRITE(nNonce);\n+        READWRITE(proof);\n     }\n \n     uint256 GetBlockHash() const\n@@ -332,8 +327,7 @@ class CDiskBlockIndex : public CBlockIndex\n         block.hashPrevBlock   = hashPrev;\n         block.hashMerkleRoot  = hashMerkleRoot;\n         block.nTime           = nTime;\n-        block.nBits           = nBits;\n-        block.nNonce          = nNonce;\n+        block.proof           = proof;\n         return block.GetHash();\n     }\n "
      },
      {
        "sha": "c76b1d065dd72670a9d00a3f7c0ada910ecd93b6",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
        "patch": "@@ -139,8 +139,8 @@ class CMainParams : public CChainParams {\n         genesis.hashMerkleRoot = genesis.BuildMerkleTree();\n         genesis.nVersion = 1;\n         genesis.nTime    = 1231006505;\n-        genesis.nBits    = 0x1d00ffff;\n-        genesis.nNonce   = 2083236893;\n+        genesis.proof.nBits    = 0x1d00ffff;\n+        genesis.proof.nNonce   = 2083236893;\n \n         hashGenesisBlock = genesis.GetHash();\n         assert(hashGenesisBlock == uint256(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n@@ -205,7 +205,7 @@ class CTestNetParams : public CMainParams {\n \n         // Modify the testnet genesis block so the timestamp is valid for a later start.\n         genesis.nTime = 1296688602;\n-        genesis.nNonce = 414098458;\n+        genesis.proof.nNonce = 414098458;\n         hashGenesisBlock = genesis.GetHash();\n         assert(hashGenesisBlock == uint256(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"));\n \n@@ -260,8 +260,8 @@ class CRegTestParams : public CTestNetParams {\n         nTargetSpacing = 10 * 60;\n         bnProofOfWorkLimit = ~uint256(0) >> 1;\n         genesis.nTime = 1296688602;\n-        genesis.nBits = 0x207fffff;\n-        genesis.nNonce = 2;\n+        genesis.proof.nBits = 0x207fffff;\n+        genesis.proof.nNonce = 2;\n         hashGenesisBlock = genesis.GetHash();\n         nDefaultPort = 18444;\n         assert(hashGenesisBlock == uint256(\"0x0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"));"
      },
      {
        "sha": "adaa26b76fa530304e7e5945d284c45fefb44c5b",
        "filename": "src/core/block.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/core/block.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/core/block.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core/block.cpp?ref=5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
        "patch": "@@ -11,7 +11,7 @@\n \n uint256 CBlockHeader::GetHash() const\n {\n-    return Hash(BEGIN(nVersion), END(nNonce));\n+    return SerializeHash(*this);\n }\n \n uint256 CBlock::BuildMerkleTree(bool* fMutated) const\n@@ -116,7 +116,9 @@ std::string CBlock::ToString() const\n         nVersion,\n         hashPrevBlock.ToString(),\n         hashMerkleRoot.ToString(),\n-        nTime, nBits, nNonce,\n+        nTime,\n+        proof.nBits,\n+        proof.nNonce,\n         vtx.size());\n     for (unsigned int i = 0; i < vtx.size(); i++)\n     {"
      },
      {
        "sha": "6b7a27d5dc21e15634593f9dbd9781d11012adeb",
        "filename": "src/core/block.h",
        "status": "modified",
        "additions": 38,
        "deletions": 10,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/core/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/core/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core/block.h?ref=5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
        "patch": "@@ -10,6 +10,38 @@\n #include \"serialize.h\"\n #include \"uint256.h\"\n \n+class CProof\n+{\n+public:\n+    uint32_t nBits;\n+    uint32_t nNonce;\n+\n+    CProof()\n+    {\n+        SetNull();\n+    }    \n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion)\n+    {\n+        READWRITE(nBits);\n+        READWRITE(nNonce);\n+    }\n+\n+    void SetNull()\n+    {\n+        nBits = 0;\n+        nNonce = 0;\n+    }\n+\n+    bool IsNull() const\n+    {\n+        return (nBits == 0);\n+    }\n+};\n+\n /** Nodes collect new transactions into a block, hash them into a hash tree,\n  * and scan through nonce values to make the block's hash satisfy proof-of-work\n  * requirements.  When they solve the proof-of-work, they broadcast the block\n@@ -26,8 +58,7 @@ class CBlockHeader\n     uint256 hashPrevBlock;\n     uint256 hashMerkleRoot;\n     uint32_t nTime;\n-    uint32_t nBits;\n-    uint32_t nNonce;\n+    CProof proof;\n \n     CBlockHeader()\n     {\n@@ -43,8 +74,7 @@ class CBlockHeader\n         READWRITE(hashPrevBlock);\n         READWRITE(hashMerkleRoot);\n         READWRITE(nTime);\n-        READWRITE(nBits);\n-        READWRITE(nNonce);\n+        READWRITE(proof);\n     }\n \n     void SetNull()\n@@ -53,13 +83,12 @@ class CBlockHeader\n         hashPrevBlock = 0;\n         hashMerkleRoot = 0;\n         nTime = 0;\n-        nBits = 0;\n-        nNonce = 0;\n+        proof.SetNull();\n     }\n \n     bool IsNull() const\n     {\n-        return (nBits == 0);\n+        return proof.IsNull();\n     }\n \n     uint256 GetHash() const;\n@@ -112,9 +141,8 @@ class CBlock : public CBlockHeader\n         block.nVersion       = nVersion;\n         block.hashPrevBlock  = hashPrevBlock;\n         block.hashMerkleRoot = hashMerkleRoot;\n-        block.nTime          = nTime;\n-        block.nBits          = nBits;\n-        block.nNonce         = nNonce;\n+        block.nTime = nTime;\n+        block.proof = proof;\n         return block;\n     }\n "
      },
      {
        "sha": "b4155cfd9fe231699582a67aca4c2abc96ad347e",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
        "patch": "@@ -1142,7 +1142,7 @@ bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos)\n     }\n \n     // Check the header\n-    if (!CheckProofOfWork(block.GetHash(), block.nBits))\n+    if (!CheckProofOfWork(block.GetHash(), block.proof.nBits))\n         return error(\"ReadBlockFromDisk : Errors in block header\");\n \n     return true;\n@@ -2241,7 +2241,7 @@ bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigne\n bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW)\n {\n     // Check proof of work matches claimed amount\n-    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits))\n+    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.proof.nBits))\n         return state.DoS(50, error(\"CheckBlockHeader() : proof of work failed\"),\n                          REJECT_INVALID, \"high-hash\");\n \n@@ -2340,7 +2340,7 @@ bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, CBloc\n \n         // Check proof of work\n         if ((!Params().SkipProofOfWorkCheck()) &&\n-           (block.nBits != GetNextWorkRequired(pindexPrev, &block)))\n+           (block.proof.nBits != GetNextWorkRequired(pindexPrev, &block)))\n             return state.DoS(100, error(\"%s : incorrect proof of work\", __func__),\n                              REJECT_INVALID, \"bad-diffbits\");\n "
      },
      {
        "sha": "d7c88c9262296e924449b7eb3e6a9042b1860328",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
        "patch": "@@ -317,8 +317,8 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         // Fill in header\n         pblock->hashPrevBlock  = pindexPrev->GetBlockHash();\n         UpdateTime(pblock, pindexPrev);\n-        pblock->nBits          = GetNextWorkRequired(pindexPrev, pblock);\n-        pblock->nNonce         = 0;\n+        pblock->proof.nBits          = GetNextWorkRequired(pindexPrev, pblock);\n+        pblock->proof.nNonce         = 0;\n         pblocktemplate->vTxSigOps[0] = GetLegacySigOpCount(pblock->vtx[0]);\n \n         CBlockIndex indexDummy(*pblock);\n@@ -475,7 +475,7 @@ void static BitcoinMiner(CWallet *pwallet)\n             // Search\n             //\n             int64_t nStart = GetTime();\n-            uint256 hashTarget = uint256().SetCompact(pblock->nBits);\n+            uint256 hashTarget = uint256().SetCompact(pblock->proof.nBits);\n             uint256 hash;\n             uint32_t nNonce = 0;\n             uint32_t nOldNonce = 0;\n@@ -490,7 +490,7 @@ void static BitcoinMiner(CWallet *pwallet)\n                     if (hash <= hashTarget)\n                     {\n                         // Found a solution\n-                        pblock->nNonce = nNonce;\n+                        pblock->proof.nNonce = nNonce;\n                         assert(hash == pblock->GetHash());\n \n                         SetThreadPriority(THREAD_PRIORITY_NORMAL);\n@@ -553,7 +553,7 @@ void static BitcoinMiner(CWallet *pwallet)\n                 if (Params().AllowMinDifficultyBlocks())\n                 {\n                     // Changing pblock->nTime can change work required on testnet:\n-                    hashTarget.SetCompact(pblock->nBits);\n+                    hashTarget.SetCompact(pblock->proof.nBits);\n                 }\n             }\n         }"
      },
      {
        "sha": "4271b380af377f2abb7f151b9d50869ba945d726",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
        "patch": "@@ -34,12 +34,12 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n             {\n                 // Return the last non-special-min-difficulty-rules-block\n                 const CBlockIndex* pindex = pindexLast;\n-                while (pindex->pprev && pindex->nHeight % Params().Interval() != 0 && pindex->nBits == nProofOfWorkLimit)\n+                while (pindex->pprev && pindex->nHeight % Params().Interval() != 0 && pindex->proof.nBits == nProofOfWorkLimit)\n                     pindex = pindex->pprev;\n-                return pindex->nBits;\n+                return pindex->proof.nBits;\n             }\n         }\n-        return pindexLast->nBits;\n+        return pindexLast->proof.nBits;\n     }\n \n     // Go back by what we want to be 14 days worth of blocks\n@@ -59,7 +59,7 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n     // Retarget\n     uint256 bnNew;\n     uint256 bnOld;\n-    bnNew.SetCompact(pindexLast->nBits);\n+    bnNew.SetCompact(pindexLast->proof.nBits);\n     bnOld = bnNew;\n     bnNew *= nActualTimespan;\n     bnNew /= Params().TargetTimespan();\n@@ -70,7 +70,7 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n     /// debug print\n     LogPrintf(\"GetNextWorkRequired RETARGET\\n\");\n     LogPrintf(\"Params().TargetTimespan() = %d    nActualTimespan = %d\\n\", Params().TargetTimespan(), nActualTimespan);\n-    LogPrintf(\"Before: %08x  %s\\n\", pindexLast->nBits, bnOld.ToString());\n+    LogPrintf(\"Before: %08x  %s\\n\", pindexLast->proof.nBits, bnOld.ToString());\n     LogPrintf(\"After:  %08x  %s\\n\", bnNew.GetCompact(), bnNew.ToString());\n \n     return bnNew.GetCompact();\n@@ -104,7 +104,7 @@ void UpdateTime(CBlockHeader* pblock, const CBlockIndex* pindexPrev)\n \n     // Updating time can change work required on testnet:\n     if (Params().AllowMinDifficultyBlocks())\n-        pblock->nBits = GetNextWorkRequired(pindexPrev, pblock);\n+        pblock->proof.nBits = GetNextWorkRequired(pindexPrev, pblock);\n }\n \n uint256 GetProofIncrement(unsigned int nBits)"
      },
      {
        "sha": "98e1d2f7fe7fccb6e8ecdfb06a26123955ae27ba",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
        "patch": "@@ -10,6 +10,7 @@\n \n class CBlockHeader;\n class CBlockIndex;\n+class CProof;\n class uint256;\n \n unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock);"
      },
      {
        "sha": "f515f92e363ce57aa485b17f1e6413be73a33f07",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
        "patch": "@@ -30,10 +30,10 @@ double GetDifficulty(const CBlockIndex* blockindex)\n             blockindex = chainActive.Tip();\n     }\n \n-    int nShift = (blockindex->nBits >> 24) & 0xff;\n+    int nShift = (blockindex->proof.nBits >> 24) & 0xff;\n \n     double dDiff =\n-        (double)0x0000ffff / (double)(blockindex->nBits & 0x00ffffff);\n+        (double)0x0000ffff / (double)(blockindex->proof.nBits & 0x00ffffff);\n \n     while (nShift < 29)\n     {\n@@ -68,8 +68,8 @@ Object blockToJSON(const CBlock& block, const CBlockIndex* blockindex)\n         txs.push_back(tx.GetHash().GetHex());\n     result.push_back(Pair(\"tx\", txs));\n     result.push_back(Pair(\"time\", block.GetBlockTime()));\n-    result.push_back(Pair(\"nonce\", (uint64_t)block.nNonce));\n-    result.push_back(Pair(\"bits\", strprintf(\"%08x\", block.nBits)));\n+    result.push_back(Pair(\"nonce\", (uint64_t)block.proof.nNonce));\n+    result.push_back(Pair(\"bits\", strprintf(\"%08x\", block.proof.nBits)));\n     result.push_back(Pair(\"difficulty\", GetDifficulty(blockindex)));\n     result.push_back(Pair(\"chainwork\", blockindex->nChainWork.GetHex()));\n "
      },
      {
        "sha": "050957fe59015035160693d6a73aa59d840e94cb",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
        "patch": "@@ -460,7 +460,7 @@ Value getblocktemplate(const Array& params, bool fHelp)\n \n     // Update nTime\n     UpdateTime(pblock, pindexPrev);\n-    pblock->nNonce = 0;\n+    pblock->proof.nNonce = 0;\n \n     Array transactions;\n     map<uint256, int64_t> setTxIndex;\n@@ -497,7 +497,7 @@ Value getblocktemplate(const Array& params, bool fHelp)\n     Object aux;\n     aux.push_back(Pair(\"flags\", HexStr(COINBASE_FLAGS.begin(), COINBASE_FLAGS.end())));\n \n-    uint256 hashTarget = uint256().SetCompact(pblock->nBits);\n+    uint256 hashTarget = uint256().SetCompact(pblock->proof.nBits);\n \n     static Array aMutable;\n     if (aMutable.empty())\n@@ -521,7 +521,7 @@ Value getblocktemplate(const Array& params, bool fHelp)\n     result.push_back(Pair(\"sigoplimit\", (int64_t)MAX_BLOCK_SIGOPS));\n     result.push_back(Pair(\"sizelimit\", (int64_t)MAX_BLOCK_SIZE));\n     result.push_back(Pair(\"curtime\", pblock->GetBlockTime()));\n-    result.push_back(Pair(\"bits\", strprintf(\"%08x\", pblock->nBits)));\n+    result.push_back(Pair(\"bits\", strprintf(\"%08x\", pblock->proof.nBits)));\n     result.push_back(Pair(\"height\", (int64_t)(pindexPrev->nHeight+1)));\n \n     return result;"
      },
      {
        "sha": "aa69ea5316b13613c28643224aa50bb4566c8c6d",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
        "patch": "@@ -77,7 +77,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         if (txFirst.size() < 2)\n             txFirst.push_back(new CTransaction(pblock->vtx[0]));\n         pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n-        pblock->nNonce = blockinfo[i].nonce;\n+        pblock->proof.nNonce = blockinfo[i].nonce;\n         CValidationState state;\n         BOOST_CHECK(ProcessBlock(state, NULL, pblock));\n         BOOST_CHECK(state.IsValid());"
      },
      {
        "sha": "020e7409a8ba6b025c877c40313271d7717d0a27",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b90a9aabd3c9ce16e509299cb3087bbac8f021d/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
        "patch": "@@ -207,12 +207,11 @@ bool CBlockTreeDB::LoadBlockIndexGuts()\n                 pindexNew->nVersion       = diskindex.nVersion;\n                 pindexNew->hashMerkleRoot = diskindex.hashMerkleRoot;\n                 pindexNew->nTime          = diskindex.nTime;\n-                pindexNew->nBits          = diskindex.nBits;\n-                pindexNew->nNonce         = diskindex.nNonce;\n+                pindexNew->proof          = diskindex.proof;\n                 pindexNew->nStatus        = diskindex.nStatus;\n                 pindexNew->nTx            = diskindex.nTx;\n \n-                if (!CheckProofOfWork(pindexNew->GetBlockHash(), pindexNew->nBits))\n+                if (!CheckProofOfWork(pindexNew->GetBlockHash(), pindexNew->proof.nBits))\n                     return error(\"LoadBlockIndex() : CheckProofOfWork failed: %s\", pindexNew->ToString());\n \n                 pcursor->Next();"
      }
    ]
  },
  {
    "sha": "dd1e04365289e70253e1289af7e20118d6d9a3fa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZDFlMDQzNjUyODllNzAyNTNlMTI4OWFmN2UyMDExOGQ2ZDlhM2Zh",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-21T23:39:22Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-28T13:33:46Z"
      },
      "message": "CheckProofOfWork(nBits) -> CheckProof(CProof)",
      "tree": {
        "sha": "ad222d9933bc3804163ba69269096cb8fb9a3e51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ad222d9933bc3804163ba69269096cb8fb9a3e51"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd1e04365289e70253e1289af7e20118d6d9a3fa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd1e04365289e70253e1289af7e20118d6d9a3fa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dd1e04365289e70253e1289af7e20118d6d9a3fa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd1e04365289e70253e1289af7e20118d6d9a3fa/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b90a9aabd3c9ce16e509299cb3087bbac8f021d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5b90a9aabd3c9ce16e509299cb3087bbac8f021d"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "3826ffd5a422ee12f6f7511515bb5582fa9cde23",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd1e04365289e70253e1289af7e20118d6d9a3fa/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd1e04365289e70253e1289af7e20118d6d9a3fa/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=dd1e04365289e70253e1289af7e20118d6d9a3fa",
        "patch": "@@ -1142,7 +1142,7 @@ bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos)\n     }\n \n     // Check the header\n-    if (!CheckProofOfWork(block.GetHash(), block.proof.nBits))\n+    if (!CheckProof(block.GetHash(), block.proof))\n         return error(\"ReadBlockFromDisk : Errors in block header\");\n \n     return true;\n@@ -2241,7 +2241,7 @@ bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigne\n bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW)\n {\n     // Check proof of work matches claimed amount\n-    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.proof.nBits))\n+    if (fCheckPOW && !CheckProof(block.GetHash(), block.proof))\n         return state.DoS(50, error(\"CheckBlockHeader() : proof of work failed\"),\n                          REJECT_INVALID, \"high-hash\");\n "
      },
      {
        "sha": "1dd435ab7b1efd8c47be07a57dff974b9ca5b6ed",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd1e04365289e70253e1289af7e20118d6d9a3fa/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd1e04365289e70253e1289af7e20118d6d9a3fa/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=dd1e04365289e70253e1289af7e20118d6d9a3fa",
        "patch": "@@ -76,7 +76,7 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n     return bnNew.GetCompact();\n }\n \n-bool CheckProofOfWork(uint256 hash, unsigned int nBits)\n+bool CheckProof(uint256 hash, const CProof& proof)\n {\n     bool fNegative;\n     bool fOverflow;\n@@ -85,7 +85,7 @@ bool CheckProofOfWork(uint256 hash, unsigned int nBits)\n     if (Params().SkipProofOfWorkCheck())\n        return true;\n \n-    bnTarget.SetCompact(nBits, &fNegative, &fOverflow);\n+    bnTarget.SetCompact(proof.nBits, &fNegative, &fOverflow);\n \n     // Check range\n     if (fNegative || bnTarget == 0 || fOverflow || bnTarget > Params().ProofOfWorkLimit())"
      },
      {
        "sha": "73c4151a6d8e55d3dc678ea2d5a0abab644bfb55",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd1e04365289e70253e1289af7e20118d6d9a3fa/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd1e04365289e70253e1289af7e20118d6d9a3fa/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=dd1e04365289e70253e1289af7e20118d6d9a3fa",
        "patch": "@@ -16,7 +16,7 @@ class uint256;\n unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock);\n \n /** Check whether a block hash satisfies the proof-of-work requirement specified by nBits */\n-bool CheckProofOfWork(uint256 hash, unsigned int nBits);\n+bool CheckProof(uint256 hash, const CProof& proof);\n \n void UpdateTime(CBlockHeader* block, const CBlockIndex* pindexPrev);\n "
      },
      {
        "sha": "34a44524cfa85f3499dfa17a21ac237005d90308",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd1e04365289e70253e1289af7e20118d6d9a3fa/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd1e04365289e70253e1289af7e20118d6d9a3fa/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=dd1e04365289e70253e1289af7e20118d6d9a3fa",
        "patch": "@@ -211,8 +211,8 @@ bool CBlockTreeDB::LoadBlockIndexGuts()\n                 pindexNew->nStatus        = diskindex.nStatus;\n                 pindexNew->nTx            = diskindex.nTx;\n \n-                if (!CheckProofOfWork(pindexNew->GetBlockHash(), pindexNew->proof.nBits))\n-                    return error(\"LoadBlockIndex() : CheckProofOfWork failed: %s\", pindexNew->ToString());\n+                if (!CheckProof(pindexNew->GetBlockHash(), pindexNew->proof))\n+                    return error(\"LoadBlockIndex() : CheckProof failed: %s\", pindexNew->ToString());\n \n                 pcursor->Next();\n             } else {"
      }
    ]
  },
  {
    "sha": "e5446708105ad21d8b87144e28b1dc59047b69ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTQ0NjcwODEwNWFkMjFkOGI4NzE0NGUyOGIxZGM1OTA0N2I2OWVk",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-21T19:25:07Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-28T13:33:46Z"
      },
      "message": "Use __func__ in error messages",
      "tree": {
        "sha": "2882e5028f355b0e93e0370eefcd23fec72fb6c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2882e5028f355b0e93e0370eefcd23fec72fb6c8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5446708105ad21d8b87144e28b1dc59047b69ed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5446708105ad21d8b87144e28b1dc59047b69ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e5446708105ad21d8b87144e28b1dc59047b69ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5446708105ad21d8b87144e28b1dc59047b69ed/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dd1e04365289e70253e1289af7e20118d6d9a3fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd1e04365289e70253e1289af7e20118d6d9a3fa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dd1e04365289e70253e1289af7e20118d6d9a3fa"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "188602bb7c7ea5580f258499de06a93e2c2578b3",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5446708105ad21d8b87144e28b1dc59047b69ed/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5446708105ad21d8b87144e28b1dc59047b69ed/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=e5446708105ad21d8b87144e28b1dc59047b69ed",
        "patch": "@@ -89,11 +89,11 @@ bool CheckProof(uint256 hash, const CProof& proof)\n \n     // Check range\n     if (fNegative || bnTarget == 0 || fOverflow || bnTarget > Params().ProofOfWorkLimit())\n-        return error(\"CheckProofOfWork() : nBits below minimum work\");\n+        return error(\"%s : nBits below minimum work\", __func__);\n \n     // Check proof of work matches claimed amount\n     if (hash > bnTarget)\n-        return error(\"CheckProofOfWork() : hash doesn't match nBits\");\n+        return error(\"%s : hash doesn't match nBits\", __func__);\n \n     return true;\n }"
      }
    ]
  },
  {
    "sha": "89afbe0d0cf445334fdc10a8f5e53feb337587b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OWFmYmUwZDBjZjQ0NTMzNGZkYzEwYThmNWU1M2ZlYjMzNzU4N2I1",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-21T23:31:01Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-28T13:33:46Z"
      },
      "message": "pow.o depends on chain.o, but not main.o",
      "tree": {
        "sha": "d17cbf97bfd1e23ab6c6474f81fc9135d9baca98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d17cbf97bfd1e23ab6c6474f81fc9135d9baca98"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89afbe0d0cf445334fdc10a8f5e53feb337587b5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89afbe0d0cf445334fdc10a8f5e53feb337587b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/89afbe0d0cf445334fdc10a8f5e53feb337587b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89afbe0d0cf445334fdc10a8f5e53feb337587b5/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e5446708105ad21d8b87144e28b1dc59047b69ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5446708105ad21d8b87144e28b1dc59047b69ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5446708105ad21d8b87144e28b1dc59047b69ed"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "108a0c8e5688e572ac88ef21c316beca9c5f3865",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/89afbe0d0cf445334fdc10a8f5e53feb337587b5/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/89afbe0d0cf445334fdc10a8f5e53feb337587b5/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=89afbe0d0cf445334fdc10a8f5e53feb337587b5",
        "patch": "@@ -5,9 +5,9 @@\n \n #include \"pow.h\"\n \n+#include \"chain.h\"\n #include \"chainparams.h\"\n #include \"core/block.h\"\n-#include \"main.h\"\n #include \"timedata.h\"\n #include \"uint256.h\"\n #include \"util.h\""
      }
    ]
  },
  {
    "sha": "aae3a70da7a919b5d849dac2b6ee8309fd78b183",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYWUzYTcwZGE3YTkxOWI1ZDg0OWRhYzJiNmVlODMwOWZkNzhiMTgz",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-21T21:56:26Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-28T13:33:47Z"
      },
      "message": "Implement CProof::ToString()",
      "tree": {
        "sha": "fcf28988f2a119146cc57188b62414a541a512d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fcf28988f2a119146cc57188b62414a541a512d7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aae3a70da7a919b5d849dac2b6ee8309fd78b183",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aae3a70da7a919b5d849dac2b6ee8309fd78b183",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aae3a70da7a919b5d849dac2b6ee8309fd78b183",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aae3a70da7a919b5d849dac2b6ee8309fd78b183/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "89afbe0d0cf445334fdc10a8f5e53feb337587b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89afbe0d0cf445334fdc10a8f5e53feb337587b5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/89afbe0d0cf445334fdc10a8f5e53feb337587b5"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 10,
      "deletions": 3
    },
    "files": [
      {
        "sha": "364334e6bde706d5a8647e4242d5f67fdc08fcf7",
        "filename": "src/core/block.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aae3a70da7a919b5d849dac2b6ee8309fd78b183/src/core/block.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aae3a70da7a919b5d849dac2b6ee8309fd78b183/src/core/block.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core/block.cpp?ref=aae3a70da7a919b5d849dac2b6ee8309fd78b183",
        "patch": "@@ -9,6 +9,12 @@\n #include \"tinyformat.h\"\n #include \"utilstrencodings.h\"\n \n+std::string CProof::ToString() const\n+{\n+    return strprintf(\"CProof(nBits=%08x, nNonce=%u)\",\n+                     nBits, nNonce);\n+}\n+\n uint256 CBlockHeader::GetHash() const\n {\n     return SerializeHash(*this);\n@@ -111,14 +117,13 @@ uint256 CBlock::CheckMerkleBranch(uint256 hash, const std::vector<uint256>& vMer\n std::string CBlock::ToString() const\n {\n     std::stringstream s;\n-    s << strprintf(\"CBlock(hash=%s, ver=%d, hashPrevBlock=%s, hashMerkleRoot=%s, nTime=%u, nBits=%08x, nNonce=%u, vtx=%u)\\n\",\n+    s << strprintf(\"CBlock(hash=%s, ver=%d, hashPrevBlock=%s, hashMerkleRoot=%s, nTime=%u, proof=%u, vtx=%u)\\n\",\n         GetHash().ToString(),\n         nVersion,\n         hashPrevBlock.ToString(),\n         hashMerkleRoot.ToString(),\n         nTime,\n-        proof.nBits,\n-        proof.nNonce,\n+        proof.ToString(),\n         vtx.size());\n     for (unsigned int i = 0; i < vtx.size(); i++)\n     {"
      },
      {
        "sha": "fc63756e232f00c34d6f5bb6c885c9c47bfc95a4",
        "filename": "src/core/block.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aae3a70da7a919b5d849dac2b6ee8309fd78b183/src/core/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aae3a70da7a919b5d849dac2b6ee8309fd78b183/src/core/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core/block.h?ref=aae3a70da7a919b5d849dac2b6ee8309fd78b183",
        "patch": "@@ -40,6 +40,8 @@ class CProof\n     {\n         return (nBits == 0);\n     }\n+\n+    std::string ToString() const;\n };\n \n /** Nodes collect new transactions into a block, hash them into a hash tree,"
      }
    ]
  },
  {
    "sha": "fd0799b484620f0bd821e0db1c6c65a77561926f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDA3OTliNDg0NjIwZjBiZDgyMWUwZGIxYzZjNjVhNzc1NjE5MjZm",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-21T22:19:23Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-28T13:33:47Z"
      },
      "message": "Implement GetChallengeDouble(CProof) (Move 2 direct accesses to\nproof.nBits to pow)",
      "tree": {
        "sha": "8d21620548863aa84163c744a39dc1523c4555df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d21620548863aa84163c744a39dc1523c4555df"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd0799b484620f0bd821e0db1c6c65a77561926f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd0799b484620f0bd821e0db1c6c65a77561926f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd0799b484620f0bd821e0db1c6c65a77561926f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd0799b484620f0bd821e0db1c6c65a77561926f/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aae3a70da7a919b5d849dac2b6ee8309fd78b183",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aae3a70da7a919b5d849dac2b6ee8309fd78b183",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aae3a70da7a919b5d849dac2b6ee8309fd78b183"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 23,
      "deletions": 18
    },
    "files": [
      {
        "sha": "3192d5c32897dc7f1bb81e5fed2ed6dfc908aac7",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd0799b484620f0bd821e0db1c6c65a77561926f/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd0799b484620f0bd821e0db1c6c65a77561926f/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=fd0799b484620f0bd821e0db1c6c65a77561926f",
        "patch": "@@ -121,3 +121,23 @@ uint256 GetProofIncrement(unsigned int nBits)\n     // or ~bnTarget / (nTarget+1) + 1.\n     return (~bnTarget / (bnTarget + 1)) + 1;\n }\n+\n+double GetChallengeDouble(const CProof& proof)\n+{\n+    int nShift = (proof.nBits >> 24) & 0xff;\n+\n+    double dDiff =\n+        (double)0x0000ffff / (double)(proof.nBits & 0x00ffffff);\n+\n+    while (nShift < 29)\n+    {\n+        dDiff *= 256.0;\n+        nShift++;\n+    }\n+    while (nShift > 29)\n+    {\n+        dDiff /= 256.0;\n+        nShift--;\n+    }\n+    return dDiff;\n+}"
      },
      {
        "sha": "03bd39378bc97783279532f2425ddae2bf38454e",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd0799b484620f0bd821e0db1c6c65a77561926f/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd0799b484620f0bd821e0db1c6c65a77561926f/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=fd0799b484620f0bd821e0db1c6c65a77561926f",
        "patch": "@@ -22,4 +22,6 @@ void UpdateTime(CBlockHeader* block, const CBlockIndex* pindexPrev);\n \n uint256 GetProofIncrement(unsigned int nBits);\n \n+double GetChallengeDouble(const CProof& proof);\n+\n #endif // BITCOIN_POW_H"
      },
      {
        "sha": "eb84b57d6829a5cc66fa282c8db85c730b7d8ca1",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 18,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd0799b484620f0bd821e0db1c6c65a77561926f/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd0799b484620f0bd821e0db1c6c65a77561926f/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=fd0799b484620f0bd821e0db1c6c65a77561926f",
        "patch": "@@ -29,24 +29,7 @@ double GetDifficulty(const CBlockIndex* blockindex)\n         else\n             blockindex = chainActive.Tip();\n     }\n-\n-    int nShift = (blockindex->proof.nBits >> 24) & 0xff;\n-\n-    double dDiff =\n-        (double)0x0000ffff / (double)(blockindex->proof.nBits & 0x00ffffff);\n-\n-    while (nShift < 29)\n-    {\n-        dDiff *= 256.0;\n-        nShift++;\n-    }\n-    while (nShift > 29)\n-    {\n-        dDiff /= 256.0;\n-        nShift--;\n-    }\n-\n-    return dDiff;\n+    return GetChallengeDouble(blockindex->proof);\n }\n \n "
      }
    ]
  },
  {
    "sha": "2aa7670ec6b478e83d9356dca9cac3b764309392",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYWE3NjcwZWM2YjQ3OGU4M2Q5MzU2ZGNhOWNhYzNiNzY0MzA5Mzky",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-21T23:04:00Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-28T13:33:47Z"
      },
      "message": "Hide GetNextWorkRequired()",
      "tree": {
        "sha": "93eb2dbbb199561b6fbb8d42ef1e8423ba6a94cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/93eb2dbbb199561b6fbb8d42ef1e8423ba6a94cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2aa7670ec6b478e83d9356dca9cac3b764309392",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2aa7670ec6b478e83d9356dca9cac3b764309392",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2aa7670ec6b478e83d9356dca9cac3b764309392",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2aa7670ec6b478e83d9356dca9cac3b764309392/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd0799b484620f0bd821e0db1c6c65a77561926f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd0799b484620f0bd821e0db1c6c65a77561926f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd0799b484620f0bd821e0db1c6c65a77561926f"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 17,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a88dd80e1de280ce4926285d0ffc7f7bc6bea775",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aa7670ec6b478e83d9356dca9cac3b764309392/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aa7670ec6b478e83d9356dca9cac3b764309392/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=2aa7670ec6b478e83d9356dca9cac3b764309392",
        "patch": "@@ -2340,7 +2340,7 @@ bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, CBloc\n \n         // Check proof of work\n         if ((!Params().SkipProofOfWorkCheck()) &&\n-           (block.proof.nBits != GetNextWorkRequired(pindexPrev, &block)))\n+           (!CheckChallenge(block.proof, pindexPrev, block.GetBlockTime())))\n             return state.DoS(100, error(\"%s : incorrect proof of work\", __func__),\n                              REJECT_INVALID, \"bad-diffbits\");\n "
      },
      {
        "sha": "ff91a20fc99a0562fbc088f25eb0511cc74d4f76",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aa7670ec6b478e83d9356dca9cac3b764309392/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aa7670ec6b478e83d9356dca9cac3b764309392/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=2aa7670ec6b478e83d9356dca9cac3b764309392",
        "patch": "@@ -317,7 +317,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         // Fill in header\n         pblock->hashPrevBlock  = pindexPrev->GetBlockHash();\n         UpdateTime(pblock, pindexPrev);\n-        pblock->proof.nBits          = GetNextWorkRequired(pindexPrev, pblock);\n+        ResetChallenge(pblock->proof, pindexPrev, pblock->GetBlockTime());\n         pblock->proof.nNonce         = 0;\n         pblocktemplate->vTxSigOps[0] = GetLegacySigOpCount(pblock->vtx[0]);\n "
      },
      {
        "sha": "e5910798bf2f6c8422d0b91458404fd5fcb310f3",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 3,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aa7670ec6b478e83d9356dca9cac3b764309392/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aa7670ec6b478e83d9356dca9cac3b764309392/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=2aa7670ec6b478e83d9356dca9cac3b764309392",
        "patch": "@@ -12,7 +12,7 @@\n #include \"uint256.h\"\n #include \"util.h\"\n \n-unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock)\n+unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, int64_t nTime)\n {\n     unsigned int nProofOfWorkLimit = Params().ProofOfWorkLimit().GetCompact();\n \n@@ -28,7 +28,7 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n             // Special difficulty rule for testnet:\n             // If the new block's timestamp is more than 2* 10 minutes\n             // then allow mining of a min-difficulty block.\n-            if (pblock->GetBlockTime() > pindexLast->GetBlockTime() + Params().TargetSpacing()*2)\n+            if (nTime > pindexLast->GetBlockTime() + Params().TargetSpacing()*2)\n                 return nProofOfWorkLimit;\n             else\n             {\n@@ -76,6 +76,16 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n     return bnNew.GetCompact();\n }\n \n+bool CheckChallenge(const CProof& proof, const CBlockIndex* pindexLast, int64_t nTime)\n+{\n+    return proof.nBits == GetNextWorkRequired(pindexLast, nTime);\n+}\n+\n+void ResetChallenge(CProof& proof, const CBlockIndex* pindexLast, int64_t nTime)\n+{\n+    proof.nBits = GetNextWorkRequired(pindexLast, nTime);    \n+}\n+\n bool CheckProof(uint256 hash, const CProof& proof)\n {\n     bool fNegative;\n@@ -104,7 +114,7 @@ void UpdateTime(CBlockHeader* pblock, const CBlockIndex* pindexPrev)\n \n     // Updating time can change work required on testnet:\n     if (Params().AllowMinDifficultyBlocks())\n-        pblock->proof.nBits = GetNextWorkRequired(pindexPrev, pblock);\n+        ResetChallenge(pblock->proof, pindexPrev, pblock->GetBlockTime());\n }\n \n uint256 GetProofIncrement(unsigned int nBits)"
      },
      {
        "sha": "294b5d80b0fd149c8e106f1c565caea9c47598ac",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2aa7670ec6b478e83d9356dca9cac3b764309392/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2aa7670ec6b478e83d9356dca9cac3b764309392/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=2aa7670ec6b478e83d9356dca9cac3b764309392",
        "patch": "@@ -13,10 +13,10 @@ class CBlockIndex;\n class CProof;\n class uint256;\n \n-unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock);\n-\n /** Check whether a block hash satisfies the proof-of-work requirement specified by nBits */\n bool CheckProof(uint256 hash, const CProof& proof);\n+bool CheckChallenge(const CProof& proof, const CBlockIndex* pindexLast, int64_t nTime);\n+void ResetChallenge(CProof& proof, const CBlockIndex* pindexLast, int64_t nTime);\n \n void UpdateTime(CBlockHeader* block, const CBlockIndex* pindexPrev);\n "
      }
    ]
  },
  {
    "sha": "e3d65ccee90e6206913e52589bd9ac28273a76dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplM2Q2NWNjZWU5MGU2MjA2OTEzZTUyNTg5YmQ5YWMyODI3M2E3NmRj",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-22T00:02:48Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-28T13:33:47Z"
      },
      "message": "GetProofIncrement(nBits) -> GetProofIncrement(CProof)",
      "tree": {
        "sha": "bb9ae0ebcdabf6533d9d7095c897c3f498b4a7ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb9ae0ebcdabf6533d9d7095c897c3f498b4a7ae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3d65ccee90e6206913e52589bd9ac28273a76dc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3d65ccee90e6206913e52589bd9ac28273a76dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3d65ccee90e6206913e52589bd9ac28273a76dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3d65ccee90e6206913e52589bd9ac28273a76dc/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2aa7670ec6b478e83d9356dca9cac3b764309392",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2aa7670ec6b478e83d9356dca9cac3b764309392",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2aa7670ec6b478e83d9356dca9cac3b764309392"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "3fc015b148a275f71c0450b8c884f873a4f52f8b",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3d65ccee90e6206913e52589bd9ac28273a76dc/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3d65ccee90e6206913e52589bd9ac28273a76dc/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=e3d65ccee90e6206913e52589bd9ac28273a76dc",
        "patch": "@@ -215,7 +215,7 @@ class CBlockIndex\n \n     uint256 GetBlockWork() const\n     {\n-        return GetProofIncrement(proof.nBits);\n+        return GetProofIncrement(proof);\n     }\n \n     enum { nMedianTimeSpan=11 };"
      },
      {
        "sha": "af32842e29b04aa8b7b2809cc7ca6f5d0c505bc8",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3d65ccee90e6206913e52589bd9ac28273a76dc/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3d65ccee90e6206913e52589bd9ac28273a76dc/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=e3d65ccee90e6206913e52589bd9ac28273a76dc",
        "patch": "@@ -117,12 +117,12 @@ void UpdateTime(CBlockHeader* pblock, const CBlockIndex* pindexPrev)\n         ResetChallenge(pblock->proof, pindexPrev, pblock->GetBlockTime());\n }\n \n-uint256 GetProofIncrement(unsigned int nBits)\n+uint256 GetProofIncrement(const CProof& proof)\n {\n     uint256 bnTarget;\n     bool fNegative;\n     bool fOverflow;\n-    bnTarget.SetCompact(nBits, &fNegative, &fOverflow);\n+    bnTarget.SetCompact(proof.nBits, &fNegative, &fOverflow);\n     if (fNegative || fOverflow || bnTarget == 0)\n         return 0;\n     // We need to compute 2**256 / (bnTarget+1), but we can't represent 2**256"
      },
      {
        "sha": "c04bff3e469d1990ec65b1893d3e84363e350386",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3d65ccee90e6206913e52589bd9ac28273a76dc/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3d65ccee90e6206913e52589bd9ac28273a76dc/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=e3d65ccee90e6206913e52589bd9ac28273a76dc",
        "patch": "@@ -20,7 +20,7 @@ void ResetChallenge(CProof& proof, const CBlockIndex* pindexLast, int64_t nTime)\n \n void UpdateTime(CBlockHeader* block, const CBlockIndex* pindexPrev);\n \n-uint256 GetProofIncrement(unsigned int nBits);\n+uint256 GetProofIncrement(const CProof& proof);\n \n double GetChallengeDouble(const CProof& proof);\n "
      }
    ]
  },
  {
    "sha": "552a17f69b87a36da8d27ae2af6f87ecf0969b06",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NTJhMTdmNjliODdhMzZkYThkMjdhZTJhZjZmODdlY2YwOTY5YjA2",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-21T23:18:02Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-28T13:33:47Z"
      },
      "message": "MOVEONLY: Move void UpdateTime() from pow.o to miner.o",
      "tree": {
        "sha": "7c4e4046d68cd26e550c65ae51cd15aea732c85d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c4e4046d68cd26e550c65ae51cd15aea732c85d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/552a17f69b87a36da8d27ae2af6f87ecf0969b06",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/552a17f69b87a36da8d27ae2af6f87ecf0969b06",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/552a17f69b87a36da8d27ae2af6f87ecf0969b06",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/552a17f69b87a36da8d27ae2af6f87ecf0969b06/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e3d65ccee90e6206913e52589bd9ac28273a76dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3d65ccee90e6206913e52589bd9ac28273a76dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e3d65ccee90e6206913e52589bd9ac28273a76dc"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 12,
      "deletions": 13
    },
    "files": [
      {
        "sha": "ff89f1d52298dff11af8ede76764357d862517c1",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/552a17f69b87a36da8d27ae2af6f87ecf0969b06/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/552a17f69b87a36da8d27ae2af6f87ecf0969b06/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=552a17f69b87a36da8d27ae2af6f87ecf0969b06",
        "patch": "@@ -12,6 +12,7 @@\n #include \"main.h\"\n #include \"net.h\"\n #include \"pow.h\"\n+#include \"timedata.h\"\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n #ifdef ENABLE_WALLET\n@@ -78,6 +79,15 @@ class TxPriorityCompare\n     }\n };\n \n+void UpdateTime(CBlockHeader* pblock, const CBlockIndex* pindexPrev)\n+{\n+    pblock->nTime = std::max(pindexPrev->GetMedianTimePast()+1, GetAdjustedTime());\n+\n+    // Updating time can change work required on testnet:\n+    if (Params().AllowMinDifficultyBlocks())\n+        ResetChallenge(pblock->proof, pindexPrev, pblock->GetBlockTime());\n+}\n+\n CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n {\n     // Create new block"
      },
      {
        "sha": "aede0e6d4b06b4a1e3f31c3c39b1282f478fbb2c",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/552a17f69b87a36da8d27ae2af6f87ecf0969b06/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/552a17f69b87a36da8d27ae2af6f87ecf0969b06/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=552a17f69b87a36da8d27ae2af6f87ecf0969b06",
        "patch": "@@ -9,6 +9,7 @@\n #include <stdint.h>\n \n class CBlock;\n+class CBlockHeader;\n class CBlockIndex;\n class CReserveKey;\n class CScript;\n@@ -25,6 +26,7 @@ CBlockTemplate* CreateNewBlockWithKey(CReserveKey& reservekey);\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce);\n /** Check mined block */\n bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey);\n+void UpdateTime(CBlockHeader* block, const CBlockIndex* pindexPrev);\n \n extern double dHashesPerSec;\n extern int64_t nHPSTimerStart;"
      },
      {
        "sha": "dc2eae8bf29983fa09d35f1abd3ef668fe48c17e",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/552a17f69b87a36da8d27ae2af6f87ecf0969b06/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/552a17f69b87a36da8d27ae2af6f87ecf0969b06/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=552a17f69b87a36da8d27ae2af6f87ecf0969b06",
        "patch": "@@ -8,7 +8,6 @@\n #include \"chain.h\"\n #include \"chainparams.h\"\n #include \"core/block.h\"\n-#include \"timedata.h\"\n #include \"uint256.h\"\n #include \"util.h\"\n \n@@ -108,15 +107,6 @@ bool CheckProof(uint256 hash, const CProof& proof)\n     return true;\n }\n \n-void UpdateTime(CBlockHeader* pblock, const CBlockIndex* pindexPrev)\n-{\n-    pblock->nTime = std::max(pindexPrev->GetMedianTimePast()+1, GetAdjustedTime());\n-\n-    // Updating time can change work required on testnet:\n-    if (Params().AllowMinDifficultyBlocks())\n-        ResetChallenge(pblock->proof, pindexPrev, pblock->GetBlockTime());\n-}\n-\n uint256 GetProofIncrement(const CProof& proof)\n {\n     uint256 bnTarget;"
      },
      {
        "sha": "ebeeca6ead24eda9ff771efbdf1df09c46e450c2",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/552a17f69b87a36da8d27ae2af6f87ecf0969b06/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/552a17f69b87a36da8d27ae2af6f87ecf0969b06/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=552a17f69b87a36da8d27ae2af6f87ecf0969b06",
        "patch": "@@ -8,7 +8,6 @@\n \n #include <stdint.h>\n \n-class CBlockHeader;\n class CBlockIndex;\n class CProof;\n class uint256;\n@@ -18,8 +17,6 @@ bool CheckProof(uint256 hash, const CProof& proof);\n bool CheckChallenge(const CProof& proof, const CBlockIndex* pindexLast, int64_t nTime);\n void ResetChallenge(CProof& proof, const CBlockIndex* pindexLast, int64_t nTime);\n \n-void UpdateTime(CBlockHeader* block, const CBlockIndex* pindexPrev);\n-\n uint256 GetProofIncrement(const CProof& proof);\n \n double GetChallengeDouble(const CProof& proof);"
      }
    ]
  }
]