[
  {
    "sha": "ffc9785f6347a7db99437e664ac1e9b5c5a65bbc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZmM5Nzg1ZjYzNDdhN2RiOTk0MzdlNjY0YWMxZTliNWM1YTY1YmJj",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-03-14T15:04:09Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-08-26T07:28:57Z"
      },
      "message": "[net] add basic stats for filter usage",
      "tree": {
        "sha": "e160bf2dcc65a1920c80788902f386b49a1972c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e160bf2dcc65a1920c80788902f386b49a1972c2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ffc9785f6347a7db99437e664ac1e9b5c5a65bbc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXv++5AAoJECnUvLZBb1PshIgQAKaG1FmIo3cIWUIKoAQwIKSx\nBgL5Pu+dhV2lopZ2YdGEh+aDpWxhYcpo6pO+Qi0VbJt+APHduRqNkhdmpZ0F8VQM\nxnRvniL2Ujy63iYUrYq06QASEEyc0VLHsk4SUkeKncypBkG7Uqk2q5ZNAerNSc1y\naV2U/cQ0KxXd+4GXbo0m8h6jG5/qcuNfGBTp3s1Ap3vrlpB0vRppx7sH33OjyY97\nudmzb5Spb104szuvtI78w4RUaaenefanndZGyMbldKPuoZVh8AImTMLojfmWLNLV\nBL4UlEAOwWr+/vMsIsFxZdTSCUoDLbxSP3vf/Q8T+TxdptLSEtY9I3wmu2NcOQF3\nGCuEfVEVD9zIu2PkQT5yOlHIukP89hJPtA7UrF9j+5zbmfFdRwYdAXRea6LAu7pk\naZ/V0PDen9vb1I4UvCiMQBs8cNjZ5dJnE5/Tr1F+FAevJVT7aaPFJz+kcbPcF5U4\niqr2JrN3KLFFJfh4UAZmO0lmgCPdszYFqGVoOylmh9Rpu1S0mJbMCOiQmKHfAKce\npIhN0X7mBLtJ3i49N4eKHNSbTVJ5Z42FfbGoUdNj9FSVJCSkob2yFFT02X8f5i4W\nVwFveNQ0wk751E2vAUwkb3kgyI/+ravzyVtkxp1HSVWAQjlCRlKp4VjeBZbb8ewu\nSCCEsNI9vLoZr0Agjpv9\n=Gsqk\n-----END PGP SIGNATURE-----",
        "payload": "tree e160bf2dcc65a1920c80788902f386b49a1972c2\nparent 53f8f226bd1d627c4a6dec5862a1d4ea5a933e45\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1457967849 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1472196537 +0200\n\n[net] add basic stats for filter usage\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffc9785f6347a7db99437e664ac1e9b5c5a65bbc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ffc9785f6347a7db99437e664ac1e9b5c5a65bbc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffc9785f6347a7db99437e664ac1e9b5c5a65bbc/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "53f8f226bd1d627c4a6dec5862a1d4ea5a933e45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53f8f226bd1d627c4a6dec5862a1d4ea5a933e45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53f8f226bd1d627c4a6dec5862a1d4ea5a933e45"
      }
    ],
    "stats": {
      "total": 191,
      "additions": 191,
      "deletions": 0
    },
    "files": [
      {
        "sha": "521e1aaf6187f7f202e1f59b6df915c346d729f4",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffc9785f6347a7db99437e664ac1e9b5c5a65bbc/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffc9785f6347a7db99437e664ac1e9b5c5a65bbc/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ffc9785f6347a7db99437e664ac1e9b5c5a65bbc",
        "patch": "@@ -4784,7 +4784,12 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                         LOCK(pfrom->cs_filter);\n                         if (pfrom->pfilter)\n                         {\n+                            int64_t nStart = GetTimeMillis();\n                             CMerkleBlock merkleBlock(block, *pfrom->pfilter);\n+\n+                            // collect statistics of block filter interaction\n+                            pfrom->FilterStatsProcessBlock(block, GetTimeMillis()-nStart);\n+\n                             pfrom->PushMessage(NetMsgType::MERKLEBLOCK, merkleBlock);\n                             // CMerkleBlock just contains hashes, so also push any transactions in the block the client did not see\n                             // This avoids hurting performance by pointlessly requiring a round-trip\n@@ -6610,6 +6615,10 @@ bool SendMessages(CNode* pto)\n                         pto->PushMessage(NetMsgType::INV, vInv);\n                         vInv.clear();\n                     }\n+                    if (pto->pfilter) {\n+                        // collect statistics of mempool filter interaction\n+                        CNode::FilterStatsProcessMempoolPoll(vtxid.size(), GetTimeMillis() - nStart);\n+                    }\n                 }\n                 pto->timeLastMempoolReq = GetTime();\n             }"
      },
      {
        "sha": "055b545565b1b76834f877b3815b340ad6e07e61",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffc9785f6347a7db99437e664ac1e9b5c5a65bbc/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffc9785f6347a7db99437e664ac1e9b5c5a65bbc/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ffc9785f6347a7db99437e664ac1e9b5c5a65bbc",
        "patch": "@@ -337,6 +337,11 @@ uint64_t CNode::nMaxOutboundTotalBytesSentInCycle = 0;\n uint64_t CNode::nMaxOutboundTimeframe = 60*60*24; //1 day\n uint64_t CNode::nMaxOutboundCycleStartTime = 0;\n \n+CCriticalSection CNode::cs_globalFilterStats;\n+uint64_t CNode::nTimeFilterStatsStart = GetTime();\n+uint64_t CNode::nTimeframeFilter = 3600; //1 h\n+NodeFilterStats CNode::globalFilterStats;\n+\n CNode* FindNode(const CNetAddr& ip)\n {\n     LOCK(cs_vNodes);\n@@ -2309,6 +2314,73 @@ uint64_t CNode::GetOutboundTargetBytesLeft()\n     return (nMaxOutboundTotalBytesSentInCycle >= nMaxOutboundLimit) ? 0 : nMaxOutboundLimit - nMaxOutboundTotalBytesSentInCycle;\n }\n \n+uint64_t CNode::FilterStatsGetTimeInCycle()\n+{\n+    LOCK(cs_globalFilterStats);\n+    if (CNode::nTimeFilterStatsStart == 0)\n+        return 0;\n+\n+    return GetTime() - CNode::nTimeFilterStatsStart;\n+}\n+\n+uint64_t CNode::FilterStatsGetTimeframe()\n+{\n+    LOCK(cs_totalBytesSent);\n+    return nTimeframeFilter;\n+}\n+\n+void CNode::FilterStatsCheckTimeframe()\n+{\n+    AssertLockHeld(cs_globalFilterStats);\n+    uint64_t now = GetTime();\n+    if (nTimeFilterStatsStart == 0 || nTimeFilterStatsStart + nTimeframeFilter < now)\n+    {\n+        nTimeFilterStatsStart = now;\n+\n+        //copy over current stats for calculating data deltas\n+        globalFilterStats.nFilterBlockCountInCycle.first       = globalFilterStats.nFilterBlockCountInCycle.second;\n+        globalFilterStats.nFilterBlockTimeCountInCycle.first   = globalFilterStats.nFilterBlockTimeCountInCycle.second;\n+        globalFilterStats.nFilterBlockDataCountInCycle.first   = globalFilterStats.nFilterBlockDataCountInCycle.second;\n+        globalFilterStats.nFilterMempoolCountInCycle.first     = globalFilterStats.nFilterMempoolCountInCycle.second;\n+        globalFilterStats.nFilterMempoolTimeCountInCycle.first = globalFilterStats.nFilterMempoolTimeCountInCycle.second;\n+        globalFilterStats.nFilterMempoolDataCountInCycle.first = globalFilterStats.nFilterMempoolDataCountInCycle.second;\n+    }\n+}\n+\n+void CNode::FilterStatsProcessBlock(const CBlock &block, int64_t processTime)\n+{\n+    LOCK(cs_globalFilterStats);\n+\n+    FilterStatsCheckTimeframe();\n+    globalFilterStats.nFilterBlockCountInCycle.second++;\n+    globalFilterStats.nFilterBlockTimeCountInCycle.second += processTime;\n+    globalFilterStats.nFilterBlockDataCountInCycle.second += ::GetSerializeSize(block, SER_DISK, CLIENT_VERSION);\n+}\n+\n+void CNode::FilterStatsProcessMempoolPoll(uint64_t amountOfTransactions, int64_t processTime)\n+{\n+    LOCK(cs_globalFilterStats);\n+\n+    FilterStatsCheckTimeframe();\n+    globalFilterStats.nFilterMempoolCountInCycle.second++;\n+    globalFilterStats.nFilterMempoolTimeCountInCycle.second += processTime;\n+    globalFilterStats.nFilterMempoolDataCountInCycle.second += amountOfTransactions;\n+}\n+\n+const NodeFilterStats CNode::FilterStatsGetGlobalStats()\n+{\n+    LOCK(cs_globalFilterStats);\n+    return CNode::globalFilterStats;\n+}\n+\n+uint64_t CNode::FilterStatsGetValue(const filterDataset datapair, bool total)\n+{\n+    if (total)\n+        return datapair.second;\n+\n+    return datapair.second - datapair.first;\n+}\n+\n uint64_t CNode::GetTotalBytesRecv()\n {\n     LOCK(cs_totalBytesRecv);"
      },
      {
        "sha": "d52f8f8c4f334b43c2372a19ae1b9735cdfe723f",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffc9785f6347a7db99437e664ac1e9b5c5a65bbc/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffc9785f6347a7db99437e664ac1e9b5c5a65bbc/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=ffc9785f6347a7db99437e664ac1e9b5c5a65bbc",
        "patch": "@@ -11,6 +11,7 @@\n #include \"compat.h\"\n #include \"limitedmap.h\"\n #include \"netaddress.h\"\n+#include \"primitives/block.h\"\n #include \"protocol.h\"\n #include \"random.h\"\n #include \"streams.h\"\n@@ -315,6 +316,18 @@ class CBanEntry\n     }\n };\n \n+typedef std::pair<uint64_t, uint64_t> filterDataset;\n+\n+struct NodeFilterStats\n+{\n+    filterDataset nFilterBlockCountInCycle;\n+    filterDataset nFilterBlockDataCountInCycle;\n+    filterDataset nFilterBlockTimeCountInCycle;\n+    filterDataset nFilterMempoolCountInCycle;\n+    filterDataset nFilterMempoolDataCountInCycle;\n+    filterDataset nFilterMempoolTimeCountInCycle;\n+};\n+\n typedef std::map<CSubNet, CBanEntry> banmap_t;\n \n /** Information about a peer */\n@@ -462,6 +475,13 @@ class CNode\n     static uint64_t nMaxOutboundLimit;\n     static uint64_t nMaxOutboundTimeframe;\n \n+    // filter stats\n+    static CCriticalSection cs_globalFilterStats;\n+    static uint64_t nTimeFilterStatsStart;\n+    static uint64_t nTimeframeFilter;\n+    static NodeFilterStats globalFilterStats;\n+    static void FilterStatsCheckTimeframe();\n+\n     CNode(const CNode&);\n     void operator=(const CNode&);\n \n@@ -812,6 +832,25 @@ class CNode\n     //!response the time in second left in the current max outbound cycle\n     // in case of no limit, it will always response 0\n     static uint64_t GetMaxOutboundTimeLeftInCycle();\n+\n+    //!response the elapsed time in the measurement timeframe\n+    static uint64_t FilterStatsGetTimeInCycle();\n+\n+    //!response the size of the measurement timeframe\n+    static uint64_t FilterStatsGetTimeframe();\n+\n+    //!Collects statistics over the process of filtering a block\n+    static void FilterStatsProcessBlock(const CBlock &block, int64_t processTime);\n+\n+    //!Collects statistics over the process of filtering the mempool content\n+    static void FilterStatsProcessMempoolPoll(uint64_t amountOfTransactions, int64_t processTime);\n+\n+    //!Copy the filter stats struct\n+    static const NodeFilterStats FilterStatsGetGlobalStats();\n+\n+    //!Get the current timeframe value of a dataset\n+    //   if total == true, the total amount since startup will be reported\n+    static uint64_t FilterStatsGetValue(const filterDataset datapair, bool total = false);\n };\n \n "
      },
      {
        "sha": "e031435ce4bfa01f783759a0d437f8d9106b205c",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffc9785f6347a7db99437e664ac1e9b5c5a65bbc/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffc9785f6347a7db99437e664ac1e9b5c5a65bbc/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=ffc9785f6347a7db99437e664ac1e9b5c5a65bbc",
        "patch": "@@ -574,6 +574,76 @@ UniValue clearbanned(const UniValue& params, bool fHelp)\n     return NullUniValue;\n }\n \n+UniValue getfilterstats(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() > 0)\n+        throw runtime_error(\n+                            \"getfilterstats\\n\"\n+                            \"\\nReturns information about the bloom filter usage\\n\"\n+                            \"\\nResult:\\n\"\n+                            \"{\\n\"\n+                            \"  \\\"time_in_cycle\\\": n,    (numeric) Total time in current cycle\\n\"\n+                            \"  \\\"timeframe\\\": n,        (numeric) Length of the measuring timeframe in seconds\\n\"\n+                            \"  \\\"mempool\\\":\\n\"\n+                            \"  {\\n\"\n+                            \"    \\\"mempool_filter_count\\\": n,              (numeric) Amount of processed mempool filterings\\n\"\n+                            \"    \\\"mempool_filter_amountoftxes\\\": n,       (numeric) Amounf of transaction filtered\\n\"\n+                            \"    \\\"mempool_filter_timeconsumption\\\": n,    (numeric) Amount of milliseconds consumed for the filtering\\n\"\n+                            \"  }\\n\"\n+                            \"  \\\"blocks\\\":\\n\"\n+                            \"  {\\n\"\n+                            \"    \\\"filteredblocks_count\\\": n,              (numeric) Amount of blocks filtered\\n\"\n+                            \"    \\\"filteredblocks_amountofbytes\\\": n,      (numeric) Amounf of total bytes of all filtered blocks\\n\"\n+                            \"    \\\"filteredblocks_timeconsumption\\\": n,    (numeric) Amount of milliseconds consumed for filtering the blocks\\n\"\n+                            \"  }\\n\"\n+                            \"}\\n\"\n+                            \"\\nExamples:\\n\"\n+                            + HelpExampleCli(\"getfilterstats\", \"\")\n+                            + HelpExampleRpc(\"getfilterstats\", \"\")\n+                            );\n+\n+    UniValue obj(UniValue::VOBJ);\n+\n+    //copy stats object\n+    NodeFilterStats stats = CNode::FilterStatsGetGlobalStats();\n+\n+    // per timeframe\n+    UniValue cycle(UniValue::VOBJ);\n+    cycle.push_back(Pair(\"time_in_timeframe\", CNode::FilterStatsGetTimeInCycle()));\n+    cycle.push_back(Pair(\"timeframe\", CNode::FilterStatsGetTimeframe()));\n+\n+    UniValue blockStats(UniValue::VOBJ);\n+    blockStats.push_back(Pair(\"filteredblocks_count\", CNode::FilterStatsGetValue(stats.nFilterBlockCountInCycle)));\n+    blockStats.push_back(Pair(\"filteredblocks_amountofbytes\", CNode::FilterStatsGetValue(stats.nFilterBlockDataCountInCycle)));\n+    blockStats.push_back(Pair(\"filteredblocks_timeconsumption\", CNode::FilterStatsGetValue(stats.nFilterBlockTimeCountInCycle)));\n+    cycle.push_back(Pair(\"blocks\", blockStats));\n+\n+    UniValue mempoolStats(UniValue::VOBJ);\n+    mempoolStats.push_back(Pair(\"mempool_filter_count\", CNode::FilterStatsGetValue(stats.nFilterMempoolCountInCycle)));\n+    mempoolStats.push_back(Pair(\"mempool_filter_amountoftxes\", CNode::FilterStatsGetValue(stats.nFilterMempoolDataCountInCycle)));\n+    mempoolStats.push_back(Pair(\"mempool_filter_timeconsumption\", CNode::FilterStatsGetValue(stats.nFilterMempoolTimeCountInCycle)));\n+    cycle.push_back(Pair(\"mempool\", mempoolStats));\n+    obj.push_back(Pair(\"current_timeframe\", cycle));\n+\n+    // total\n+    UniValue total(UniValue::VOBJ);\n+\n+    UniValue blockStatsTotal(UniValue::VOBJ);\n+    blockStatsTotal.push_back(Pair(\"filteredblocks_count\", CNode::FilterStatsGetValue(stats.nFilterBlockCountInCycle, true)));\n+    blockStatsTotal.push_back(Pair(\"filteredblocks_amountofbytes\", CNode::FilterStatsGetValue(stats.nFilterBlockDataCountInCycle, true)));\n+    blockStatsTotal.push_back(Pair(\"filteredblocks_timeconsumption\", CNode::FilterStatsGetValue(stats.nFilterBlockTimeCountInCycle, true)));\n+    total.push_back(Pair(\"blocks\", blockStatsTotal));\n+\n+    UniValue mempoolStatsTotal(UniValue::VOBJ);\n+    mempoolStatsTotal.push_back(Pair(\"mempool_filter_count\", CNode::FilterStatsGetValue(stats.nFilterMempoolCountInCycle, true)));\n+    mempoolStatsTotal.push_back(Pair(\"mempool_filter_amountoftxes\", CNode::FilterStatsGetValue(stats.nFilterMempoolDataCountInCycle, true)));\n+    mempoolStatsTotal.push_back(Pair(\"mempool_filter_timeconsumption\", CNode::FilterStatsGetValue(stats.nFilterMempoolTimeCountInCycle, true)));\n+    total.push_back(Pair(\"mempool\", mempoolStatsTotal));\n+    obj.push_back(Pair(\"total\", total));\n+    \n+    return obj;\n+}\n+\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n@@ -588,6 +658,7 @@ static const CRPCCommand commands[] =\n     { \"network\",            \"setban\",                 &setban,                 true  },\n     { \"network\",            \"listbanned\",             &listbanned,             true  },\n     { \"network\",            \"clearbanned\",            &clearbanned,            true  },\n+    { \"network\",            \"getfilterstats\",         &getfilterstats,         true  },\n };\n \n void RegisterNetRPCCommands(CRPCTable &tableRPC)"
      }
    ]
  },
  {
    "sha": "e0a7e66797a9c706651e472892613c0889894cf1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMGE3ZTY2Nzk3YTljNzA2NjUxZTQ3Mjg5MjYxM2MwODg5ODk0Y2Yx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-25T09:34:54Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-08-26T07:28:57Z"
      },
      "message": "Extend filter stats time cycle to 1 day",
      "tree": {
        "sha": "bedd1946f9bb72746cde6a6b4177db957cffe2af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bedd1946f9bb72746cde6a6b4177db957cffe2af"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0a7e66797a9c706651e472892613c0889894cf1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXv++5AAoJECnUvLZBb1PsmnAP/iCXvvoAs+slVuV9VLfDJnes\nEowCIV6E14KtaM3qgWiSlMjqID3rnXfJwo3dprKDrutCJAS8HOyaooz+4QLhE3in\nDya2LPaT9Krx8ORaS8vSOdDeReAdjvFEc97hXhQ4Zz+EW4zh2JlIfhnLXs9ZS9ga\nRWgxzqP5rCMOpGOJUs/J13/6ZTIlzqMO5CNhpbGvy2DTnajGpw2uVQK41R7HSiRw\nOHazufkM09ig6v3ksTDimrKMFM9z36PGM9HmOAamtABRnSjW22F9ioABrRUo9Xv0\n1XNrPJ2igExBcSnMJ7BXFvOiUiQU5TNxr47FDRu3XKnuo/xaW1qZy9WHKSZ/A7Pu\nU/GN91bpMph+2t2uYb2QAlPD0dXfScpd7Tu4//mJFk31RqFi1CKbUBd99GDgY76W\nMGCopv3djRbFe6DJjtfXcy3xjxrzIYK2U1+GWZY+LRNnoexGhbaeHjHzoBBddpH4\nBAJhxEQcgRpzO0revz3Lw+nccYhaB/bjdlJ4gPcJUSLXO9rs7VFgjtm31VpPRj4y\ne2+UuwRxmEgyVwGNi2URAkzeUmPVkBCRsF+CZPIPdXDErHbqqWMLveDaqVMyo7Y/\nrjUMoLeFU1uCqRh/tOILP0mA2N+Yfvb+T0x9bn3A/iGl57WFGI3Zk8mg/hVkosND\noGOQ3azqZyZ4Qmg3SCeZ\n=Wg7q\n-----END PGP SIGNATURE-----",
        "payload": "tree bedd1946f9bb72746cde6a6b4177db957cffe2af\nparent ffc9785f6347a7db99437e664ac1e9b5c5a65bbc\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1461576894 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1472196537 +0200\n\nExtend filter stats time cycle to 1 day\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0a7e66797a9c706651e472892613c0889894cf1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e0a7e66797a9c706651e472892613c0889894cf1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0a7e66797a9c706651e472892613c0889894cf1/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ffc9785f6347a7db99437e664ac1e9b5c5a65bbc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffc9785f6347a7db99437e664ac1e9b5c5a65bbc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ffc9785f6347a7db99437e664ac1e9b5c5a65bbc"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 21,
      "deletions": 1
    },
    "files": [
      {
        "sha": "473bf12e4caf6063e110335f3ef9fb32b938222d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 1,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0a7e66797a9c706651e472892613c0889894cf1/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0a7e66797a9c706651e472892613c0889894cf1/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=e0a7e66797a9c706651e472892613c0889894cf1",
        "patch": "@@ -339,7 +339,7 @@ uint64_t CNode::nMaxOutboundCycleStartTime = 0;\n \n CCriticalSection CNode::cs_globalFilterStats;\n uint64_t CNode::nTimeFilterStatsStart = GetTime();\n-uint64_t CNode::nTimeframeFilter = 3600; //1 h\n+uint64_t CNode::nTimeframeFilter = 60*60*24; //1 day\n NodeFilterStats CNode::globalFilterStats;\n \n CNode* FindNode(const CNetAddr& ip)\n@@ -1092,6 +1092,10 @@ static void AcceptConnection(const ListenSocket& hListenSocket) {\n         LOCK(cs_vNodes);\n         vNodes.push_back(pnode);\n     }\n+\n+    // increase the total amount of connected nodes counter\n+    CNode::FilterStatsCountNewNodeConnected();\n+    \n }\n \n void ThreadSocketHandler()\n@@ -2367,6 +2371,22 @@ void CNode::FilterStatsProcessMempoolPoll(uint64_t amountOfTransactions, int64_t\n     globalFilterStats.nFilterMempoolDataCountInCycle.second += amountOfTransactions;\n }\n \n+void CNode::FilterStatsCountNewNodeConnected()\n+{\n+    LOCK(cs_globalFilterStats);\n+\n+    FilterStatsCheckTimeframe();\n+    globalFilterStats.nTotalNodesConnected.second++;\n+}\n+\n+void CNode::FilterStatsCountFilterLoad()\n+{\n+    LOCK(cs_globalFilterStats);\n+\n+    FilterStatsCheckTimeframe();\n+    globalFilterStats.nTotalNodesRequestedFiltering.second++;\n+}\n+\n const NodeFilterStats CNode::FilterStatsGetGlobalStats()\n {\n     LOCK(cs_globalFilterStats);"
      }
    ]
  },
  {
    "sha": "50055956478e38fd6adf7b3c884c40f740e5d345",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MDA1NTk1NjQ3OGUzOGZkNmFkZjdiM2M4ODRjNDBmNzQwZTVkMzQ1",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-25T09:40:51Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-08-26T07:29:06Z"
      },
      "message": "Add connect-/filterload-counter to the filterstats",
      "tree": {
        "sha": "c6b31bff07e5c6cbea2aff6b13654ad26ce5896b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c6b31bff07e5c6cbea2aff6b13654ad26ce5896b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50055956478e38fd6adf7b3c884c40f740e5d345",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXv+/GAAoJECnUvLZBb1PsH8kP/1rq4gY8oOGU0fT3/0wTRIoa\na3qOp5/i9rNOgRc9Vl7CFYpaYai+a8UhbueCgFMkzolM9PJugjWK6J54ZfX2QaT3\nE4Wh0XmvqG74CZQMDBheU+yFqnEPbVjiTdGGkqAuoB8QUJswAtwmvPOFRq6ov/CD\nlf8+9CxAaOq3MeDolqqA/V3APcBWDZwt33TdHZEQtRCXlqeWUUMqFEmpykvm0+E/\nZ371aXdX1f4Cz3pAix9ZUyEUO1DN1+xtY4NyIR0Wd2ix5ip7rGnBLYvcdEGYpCmG\nkUbhQx4tQzW53eOxyYSQWbcDrVEKzgm6c5Ut4aRlfUoh8pjIlZ6Rt8SCjwojus9g\nM4ZIHqO45M5rR8719n2OqffL6tCZ3BjNc961V8pUt+QgSR/H2jmn2rAhAjutcjCp\nrxGkYbxKVR3EkFzEXsYyuqI4ggcFKdgBAePpxKpqMwKc4k7jYM7mOq2HuPFg/Pxy\njjukTT/x9s8k2rPKqyvbY4UxoXH2YGVrGNtWGOf2ocgaeh/54Qen8bCqE/mpqBe/\ns0YfG9WW36x5M/j77mKTbgGTLd3wdrR2WRJrxunfpJM3E8c+WIi+EuU+65KDa1Oj\nrmWaL4KLaw3qCPDuvV9oFOj6NEhaVORYEBw/6Kkkvh/wcVZuUg8sYQhSj/+SU+fh\nbVlZIJ+6qNa6eF1XScdv\n=wO+D\n-----END PGP SIGNATURE-----",
        "payload": "tree c6b31bff07e5c6cbea2aff6b13654ad26ce5896b\nparent e0a7e66797a9c706651e472892613c0889894cf1\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1461577251 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1472196546 +0200\n\nAdd connect-/filterload-counter to the filterstats\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50055956478e38fd6adf7b3c884c40f740e5d345",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/50055956478e38fd6adf7b3c884c40f740e5d345",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50055956478e38fd6adf7b3c884c40f740e5d345/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e0a7e66797a9c706651e472892613c0889894cf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0a7e66797a9c706651e472892613c0889894cf1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e0a7e66797a9c706651e472892613c0889894cf1"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 15,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7c1161e9f099417c10a9b78eb977c5b6836b4795",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50055956478e38fd6adf7b3c884c40f740e5d345/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50055956478e38fd6adf7b3c884c40f740e5d345/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=50055956478e38fd6adf7b3c884c40f740e5d345",
        "patch": "@@ -6070,6 +6070,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             delete pfrom->pfilter;\n             pfrom->pfilter = new CBloomFilter(filter);\n             pfrom->pfilter->UpdateEmptyFull();\n+            pfrom->FilterStatsCountFilterLoad();\n         }\n         pfrom->fRelayTxes = true;\n     }\n@@ -6597,7 +6598,7 @@ bool SendMessages(CNode* pto)\n                 }\n \n                 LOCK(pto->cs_filter);\n-\n+                int64_t nStart = GetTimeMillis();\n                 for (const auto& txinfo : vtxinfo) {\n                     const uint256& hash = txinfo.tx->GetHash();\n                     CInv inv(MSG_TX, hash);\n@@ -6617,7 +6618,7 @@ bool SendMessages(CNode* pto)\n                     }\n                     if (pto->pfilter) {\n                         // collect statistics of mempool filter interaction\n-                        CNode::FilterStatsProcessMempoolPoll(vtxid.size(), GetTimeMillis() - nStart);\n+                        CNode::FilterStatsProcessMempoolPoll(vtxinfo.size(), GetTimeMillis() - nStart);\n                     }\n                 }\n                 pto->timeLastMempoolReq = GetTime();"
      },
      {
        "sha": "835f8aff9254a6137cb36792f945bde98224b7f4",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50055956478e38fd6adf7b3c884c40f740e5d345/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50055956478e38fd6adf7b3c884c40f740e5d345/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=50055956478e38fd6adf7b3c884c40f740e5d345",
        "patch": "@@ -320,6 +320,8 @@ typedef std::pair<uint64_t, uint64_t> filterDataset;\n \n struct NodeFilterStats\n {\n+    filterDataset nTotalNodesConnected;\n+    filterDataset nTotalNodesRequestedFiltering;\n     filterDataset nFilterBlockCountInCycle;\n     filterDataset nFilterBlockDataCountInCycle;\n     filterDataset nFilterBlockTimeCountInCycle;\n@@ -845,6 +847,12 @@ class CNode\n     //!Collects statistics over the process of filtering the mempool content\n     static void FilterStatsProcessMempoolPoll(uint64_t amountOfTransactions, int64_t processTime);\n \n+    //!Collects statistics of how many nodes have been connected to us\n+    static void FilterStatsCountNewNodeConnected();\n+\n+    //!Collects statistics of how many nodes have been set a filter\n+    static void FilterStatsCountFilterLoad();\n+\n     //!Copy the filter stats struct\n     static const NodeFilterStats FilterStatsGetGlobalStats();\n "
      },
      {
        "sha": "9fb686df2c2edeaaec707746a859d4eed09cd94a",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50055956478e38fd6adf7b3c884c40f740e5d345/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50055956478e38fd6adf7b3c884c40f740e5d345/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=50055956478e38fd6adf7b3c884c40f740e5d345",
        "patch": "@@ -611,6 +611,8 @@ UniValue getfilterstats(const UniValue& params, bool fHelp)\n     UniValue cycle(UniValue::VOBJ);\n     cycle.push_back(Pair(\"time_in_timeframe\", CNode::FilterStatsGetTimeInCycle()));\n     cycle.push_back(Pair(\"timeframe\", CNode::FilterStatsGetTimeframe()));\n+    cycle.push_back(Pair(\"nodestotal_connected\", CNode::FilterStatsGetValue(stats.nTotalNodesConnected)));\n+    cycle.push_back(Pair(\"nodestotal_loadfilter\", CNode::FilterStatsGetValue(stats.nTotalNodesRequestedFiltering)));\n \n     UniValue blockStats(UniValue::VOBJ);\n     blockStats.push_back(Pair(\"filteredblocks_count\", CNode::FilterStatsGetValue(stats.nFilterBlockCountInCycle)));\n@@ -627,6 +629,8 @@ UniValue getfilterstats(const UniValue& params, bool fHelp)\n \n     // total\n     UniValue total(UniValue::VOBJ);\n+    total.push_back(Pair(\"nodestotal_connected\", CNode::FilterStatsGetValue(stats.nTotalNodesConnected, true)));\n+    total.push_back(Pair(\"nodestotal_loadfilter\", CNode::FilterStatsGetValue(stats.nTotalNodesRequestedFiltering, true)));\n \n     UniValue blockStatsTotal(UniValue::VOBJ);\n     blockStatsTotal.push_back(Pair(\"filteredblocks_count\", CNode::FilterStatsGetValue(stats.nFilterBlockCountInCycle, true)));"
      }
    ]
  }
]