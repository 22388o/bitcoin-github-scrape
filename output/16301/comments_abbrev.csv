achow101,2019-06-28 00:55:42,This also makes the `CWallet` restructure simpler as the changes to `CWallet`'s import functions will then apply to all the `import*` RPCs.,https://github.com/bitcoin/bitcoin/pull/16301#issuecomment-506561519,506561519,
DrahtBot,2019-06-28 04:19:20,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16341](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16341.html) (WIP: Introduce ScriptPubKeyMan interface an",https://github.com/bitcoin/bitcoin/pull/16301#issuecomment-506594028,506594028,
MarcoFalke,2019-06-28 20:59:33,Approach ACK,https://github.com/bitcoin/bitcoin/pull/16301#issuecomment-506875137,506875137,
Sjors,2019-07-12 14:11:35,"Travis sad\n<img width=""1212"" alt=""Schermafbeelding 2019-07-12 om 15 11 21"" src=""https://user-images.githubusercontent.com/10217/61134332-54c9ea00-a4b7-11e9-8213-8202e004a94c.png"">\n",https://github.com/bitcoin/bitcoin/pull/16301#issuecomment-510901339,510901339,
achow101,2019-07-12 20:32:02,Fixed travis hopefully.,https://github.com/bitcoin/bitcoin/pull/16301#issuecomment-511023868,511023868,
instagibbs,2019-07-16 01:58:09,utACK 991ecfdbbb289bd6e4c50fc63f9201edbca14f70,https://github.com/bitcoin/bitcoin/pull/16301#issuecomment-511633851,511633851,
instagibbs,2019-07-20 01:35:54,"utACK https://github.com/bitcoin/bitcoin/pull/16301/commits/bc8ecc056ffa42c758b04d5bcae32c1354c3fbe1\n\nChecked diff from https://github.com/bitcoin/bitcoin/commit/991ecfdbbb289bd6e4c50fc63f9201edbca14f70 , was reversions that were discussed and some logging/error reporting improvements.",https://github.com/bitcoin/bitcoin/pull/16301#issuecomment-513424397,513424397,
MarcoFalke,2019-07-24 13:18:22,"partial ACK up to af6dced944\n\nSome questions:\n* In commit af6dced944, there seems to be a behavior change that is not\n  mentioned in the commit body: Previously, if the privkey already existed,\n  we'd error out. Now, we'd overwrite the label?\n\n* In commit af6dced944. Previously, there was a call to\n  AddCScript(GetScriptForDestination(WitnessV0KeyHash(pubKey.GetId())));\n  (via Le",https://github.com/bitcoin/bitcoin/pull/16301#issuecomment-514628180,514628180,
achow101,2019-07-24 15:44:57,">     * In commit [af6dced](https://github.com/bitcoin/bitcoin/commit/af6dced9446eca4a67429e07b3216ae7f3d08c16), there seems to be a behavior change that is not\n>       mentioned in the commit body: Previously, if the privkey already existed,\n>       we'd error out. Now, we'd overwrite the label?\n\nUpdated the commit message\n\n>     * In commit [af6dced](https://github.com/bitcoin/bitcoi",https://github.com/bitcoin/bitcoin/pull/16301#issuecomment-514687776,514687776,
MarcoFalke,2019-07-25 13:41:55,"ACK 40ad2f6a58228c72c655e3061a19a63640419378 (checked that behavior changes are mentioned in the commit body)\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK 40ad2f6a58228c72c655e3061a19a63640419378 (checked that behavior changes are mentioned in the commit body)\n-----BEGIN PGP SIGNATURE-----\n\",https://github.com/bitcoin/bitcoin/pull/16301#issuecomment-515048254,515048254,
MarcoFalke,2019-07-25 21:06:16,I've written some tests in  #16465,https://github.com/bitcoin/bitcoin/pull/16301#issuecomment-515214493,515214493,
promag,2019-06-29 22:42:36,"e66ed3b84593bebd3550e18b5b3be3605e08ced1\n\nThese changes are kind of breaking change, the caller has no way to know if something went bad - as it is will always succeed.Is this the case just because `dumpwallet`/`importwallet` should not be used?",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r298813022,298813022,src/wallet/rpcdump.cpp
ryanofsky,2019-07-01 15:14:09,"In commit ""Have importprivkey use CWallet's ImportPrivKeys, ImportScripts, and ImportScriptPubKeys"" (ea665e323f76766def6c4f46a46c53e38365d179)\n\nFunction would be a simpler without the `privkey_map` variable. You could write `pwallet->ImportPrivKeys({{vchAddress, key}}, 1)`",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299092799,299092799,src/wallet/rpcdump.cpp
ryanofsky,2019-07-01 15:16:21,"In commit ""Have importprivkey use CWallet's ImportPrivKeys, ImportScripts, and ImportScriptPubKeys"" (ea665e323f76766def6c4f46a46c53e38365d179)\n\nIt would be easier to understand what this call was doing if it included argument names: `..., /* have_solving_data= */ true, /* internal= */ false, /* timestamp= */ 1, /* apply_label= */ ...`",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299093825,299093825,src/wallet/rpcdump.cpp
ryanofsky,2019-07-01 15:30:22,"In commit ""Optionally apply labels to imported scriptPubKeys"" (12fd3a849c4be0879e48e65661ca1628c21308b2)\n\nHaving two `internal` and `apply_labels` parameters that both control the same behavior is unnecessarily confusing. I think it'd be best to drop `internal` and only keep `apply_labels` since it's more explicit, but you could just as easily not make any change here and just keep using `inte",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299100352,299100352,src/wallet/wallet.cpp
ryanofsky,2019-07-01 15:47:05,"In commit ""Have importprivkey use CWallet's ImportPrivKeys, ImportScripts, and ImportScriptPubKeys"" (ea665e323f76766def6c4f46a46c53e38365d179)\n\nJust curious, but why is this replacing the `LearnAllRelatedScripts()` call with inlined code? The change seems fine but is duplicative, makes code longer, and seems like the opposite of the other changes here switching to higher level `ImportPrivKeys(",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299107507,299107507,src/wallet/rpcdump.cpp
ryanofsky,2019-07-01 15:50:38,"In commit ""Have importpubkey use CWallet's ImportScriptPubKeys and ImportPubKeys functions"" (94ad6ad965ba6dfffaf7387b15ac659323fc85d0)\n\nAccidental change? (It's more verbose and less efficient.)",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299109085,299109085,src/wallet/rpcdump.cpp
ryanofsky,2019-07-01 15:52:49,"In commit ""Have importpubkey use CWallet's ImportScriptPubKeys and ImportPubKeys functions"" (94ad6ad965ba6dfffaf7387b15ac659323fc85d0)\n\nWould be good to label arguments: `/* add_keypool= */ false, /*internal = */ false, /* timestamp= */ 1`",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299110008,299110008,src/wallet/rpcdump.cpp
ryanofsky,2019-07-01 16:04:43,"In commit ""Have importpubkey use CWallet's ImportScriptPubKeys and ImportPubKeys functions"" (94ad6ad965ba6dfffaf7387b15ac659323fc85d0)\n\nWould be good to label arguments: `/* have_solving_data = */ true, /*internal = */ false, /* timestamp= */ 1`",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299115139,299115139,src/wallet/rpcdump.cpp
ryanofsky,2019-07-01 16:14:16,"In commit ""Have importpubkey use CWallet's ImportScriptPubKeys and ImportPubKeys functions"" (94ad6ad965ba6dfffaf7387b15ac659323fc85d0)\n\nJust a note to other reviewers: this seems to happen in `ImportPubKeys` now",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299118862,299118862,src/wallet/rpcdump.cpp
ryanofsky,2019-07-01 20:40:40,"In commit ""Optionally allow ImportScripts to set script creation timestamp"" (92863d7de8cf0d7432bc47f36bf1aa4de257c548)\n\nI think it'd be better not to have a default parameter so callers will have a prompt to provide this information if it's available and not just drop it in the floor. There shouldn't be a lot of preexisting calls.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299208965,299208965,src/wallet/wallet.h
ryanofsky,2019-07-01 20:47:24,"In commit ""Optionally allow ImportScripts to set script creation timestamp"" (92863d7de8cf0d7432bc47f36bf1aa4de257c548)\n\nThis is inconsistent with existing code which uses 0 to indicate an unknown time and 1 to indicate the earliest timestamp. \n\nWould suggesting replacing `(time >= 0)` to `(time > 0)` here and below and changing default to 0 instead of -1. (Or dropping the default entirely)",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299211190,299211190,src/wallet/wallet.cpp
achow101,2019-07-01 21:55:19,This was done in preparation for the wallet restructure which causes `LearnAllRelatedScripts` to no longer be part of `CWallet`.,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299232069,299232069,src/wallet/rpcdump.cpp
achow101,2019-07-02 00:05:25,"This change was because it `ImportScripts` and `ImportPrivKeys` doesn't return why it failed. It could fail because the script or privkey already exists in the wallet which would still be fine, or it could cail because something went wrong with writing the data to the wallet file which is bad. I suppose I could make them return an enum, but that's a larger change that I didn't really want to do.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299260212,299260212,src/wallet/rpcdump.cpp
achow101,2019-07-02 00:06:14,Done,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299260358,299260358,src/wallet/rpcdump.cpp
achow101,2019-07-02 00:06:22,Done everywhere,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299260385,299260385,src/wallet/rpcdump.cpp
achow101,2019-07-02 00:06:35,Removed `apply_labels` and the commit that adds it.,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299260434,299260434,src/wallet/wallet.cpp
achow101,2019-07-02 00:06:42,Reverted,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299260451,299260451,src/wallet/rpcdump.cpp
achow101,2019-07-02 00:06:51,Done,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299260477,299260477,src/wallet/wallet.h
achow101,2019-07-02 00:06:57,Done,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299260488,299260488,src/wallet/wallet.cpp
practicalswift,2019-07-02 13:38:00,`id` seems to be unused?,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299487244,299487244,src/wallet/rpcdump.cpp
ryanofsky,2019-07-02 17:28:07,"In commit ""Have importprivkey use CWallet's ImportPrivKeys, ImportScripts, and ImportScriptPubKeys"" (74ec96b601dd6417f01f4801d83e01eeb7dded18)\n\nIt's not really clear from context that this comment is referring to the `apply_label` argument passed to ImportScriptPubKeys below. Would suggest moving the comment or mentioning this explicitly.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299598438,299598438,src/wallet/rpcdump.cpp
ryanofsky,2019-07-02 17:41:35,"In commit ""Have importprivkey use CWallet's ImportPrivKeys, ImportScripts, and ImportScriptPubKeys"" (e3cc8e102fc2736b3871869646f8d60599988f82)\n\nIs this ever going to add watch only scripts given the !IsMine check in ImportScriptPubKeys?\n\nIt'd be nice to have a succinct comment here saying when this will add a watch only script, and why it's necessary.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r299603966,299603966,src/wallet/rpcdump.cpp
Sjors,2019-07-09 16:19:38,"I actually find this slightly more readable than the previous `LearnAllRelatedScripts` -> `LearnRelatedScripts(key, OutputType::P2SH_SEGWIT);`. `...`. However it's hard to tell if it's really doing the same thing. Maybe add an extra commit to make that more clear?",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r301676467,301676467,src/wallet/rpcdump.cpp
Sjors,2019-07-09 16:23:31,"It's not obvious to me how dropping `SetAddressBook` doesn't change behavior, e.g. we're no longer calling `NotifyAddressBookChanged`.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r301678199,301678199,src/wallet/rpcdump.cpp
achow101,2019-07-09 17:46:02,`SetAddressBook` happens in `ImportScriptPubKeys`,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r301713567,301713567,src/wallet/rpcdump.cpp
achow101,2019-07-09 19:04:43,Removed it.,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r301747235,301747235,src/wallet/rpcdump.cpp
instagibbs,2019-07-10 13:42:43,why 1 and not 0? No internal documentation I can find on this.,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302071555,302071555,src/wallet/rpcdump.cpp
instagibbs,2019-07-10 13:46:06,"As long as the imported key is `!internal` and is valid destination, it does appear to `SetAddressBookWithDB` which in this RPC is true.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302073367,302073367,src/wallet/rpcdump.cpp
instagibbs,2019-07-10 13:51:30,"> (request.params[1].isNull()) && pwallet->mapAddressBook.count(dest) != 0 /* internal */\n\nThis seems like an extreme abuse of the flag based on the name and confused me. This should be renamed `add_to_book_if_valid` or maybe even better just have the validity check inside `SetToAddressBook`(do we ever want to import invalid destinations?) and call it `add_to_addrbook`.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302076081,302076081,src/wallet/rpcdump.cpp
instagibbs,2019-07-10 13:56:23,? This is already done by `GetAllDestinationsForKey`,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302078575,302078575,src/wallet/rpcdump.cpp
instagibbs,2019-07-10 14:01:48,"more specifically here's the rough logic of `ImportScript`:\n\n```\nmark dirty \n\naddwatchonly\n\nif is redeem script:\n  addcscript\n  ImportAddress\nelse\n  SetAddressBook\n```\n\nAnd in this case it's not a redeemscript(last arg is false), so it marks dirty, adds watchonly, and sets address book. \n\nMark dirty is top-level now, `ImportScriptPubKeys` takes care of the `SetAddre",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302081493,302081493,src/wallet/rpcdump.cpp
instagibbs,2019-07-10 14:05:05,can you annotate `key_origins` too?,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302083185,302083185,src/wallet/rpcdump.cpp
instagibbs,2019-07-10 14:25:26,nit: `timestamp` since you're calling it that in other places and it matches better other args,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302094189,302094189,src/wallet/wallet.h
instagibbs,2019-07-10 14:28:46,isn't this backwards?,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302096091,302096091,src/wallet/rpcdump.cpp
instagibbs,2019-07-10 14:39:20,"The errors reported as-is appear to at least be somewhat helpful.\n\n> It could fail because the script or privkey already exists in the wallet \n\nI don't think that's true. These two checks appear to be only reporting real errors. Perhaps I missed something.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302101694,302101694,src/wallet/rpcdump.cpp
achow101,2019-07-11 23:51:55,"Dunno, it's just adapted from the changed code.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302784011,302784011,src/wallet/rpcdump.cpp
achow101,2019-07-12 00:02:35,"`ImportScriptPubKeys` doesn't actually add the scripts to the wallet, so we add the script here.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302785895,302785895,src/wallet/rpcdump.cpp
achow101,2019-07-12 00:09:23,How so?,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302787015,302787015,src/wallet/rpcdump.cpp
achow101,2019-07-12 00:29:55,"Yes, but these checks are part of `ImportPrivKeys` and `ImportScripts` both of which can return false in non-error cases. Both have `HaveKey` and/or `HaveCScript` checks that can fail, but not cause the import to be bad. But there could also be an actual error which would result in the import being bad.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302790286,302790286,src/wallet/rpcdump.cpp
achow101,2019-07-12 01:44:56,I've renamed the flag to `apply_label`.,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302800794,302800794,src/wallet/rpcdump.cpp
achow101,2019-07-12 01:45:01,Done,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302800804,302800804,src/wallet/rpcdump.cpp
achow101,2019-07-12 01:45:06,Done,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r302800820,302800820,src/wallet/wallet.h
instagibbs,2019-07-12 14:18:03,Might be useful to say as much,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r303002376,303002376,src/wallet/rpcdump.cpp
instagibbs,2019-07-12 14:19:59,Because it's reporting errors when it returns true?,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r303003172,303003172,src/wallet/rpcdump.cpp
jonasschnelli,2019-07-16 16:02:01,1 was introduced in #7551... ,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r303993511,303993511,src/wallet/rpcdump.cpp
ryanofsky,2019-07-16 17:22:03,"> why 1 and not 0? No internal documentation I can find on this.\n\nAs far as I know, there is no substantive difference anymore between 0 and 1, but I think it's good to keep using 1 here so this is a refactoring change, not a change in behavior.\n\nI do think in general it's better to use 1 as an _explicit_ request to rescan from the beginning of the chain as opposed to 0 which could indidca",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304028365,304028365,src/wallet/rpcdump.cpp
ryanofsky,2019-07-16 18:45:16,"In commit ""Have importprivkey use CWallet's ImportPrivKeys, ImportScripts, and ImportScriptPubKeys"" (74ec96b601dd6417f01f4801d83e01eeb7dded18)\n\nI don't understand why this is calling `ImportScriptPubKeys` instead of just `SetAddressBook` like before. This is  confusing because the code is first going out of its way to **remove** associated watch-only scripts from `setWatchOnly` (in AddKeyPubKe",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304064584,304064584,src/wallet/rpcdump.cpp
ryanofsky,2019-07-16 19:11:50,"In commit ""Have importprivkey use CWallet's ImportPrivKeys, ImportScripts, and ImportScriptPubKeys"" (74ec96b601dd6417f01f4801d83e01eeb7dded18)\n\nIt looks like there is a minor change in behavior here due to implementation of ImportPrivKeys:\n\nhttps://github.com/bitcoin/bitcoin/blob/74ec96b601dd6417f01f4801d83e01eeb7dded18/src/wallet/wallet.cpp#L1683\n\nPreviously nCreateTime would not be u",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304075547,304075547,src/wallet/rpcdump.cpp
ryanofsky,2019-07-16 19:32:22,"> I'll leave it up to other reviewers to figure if this is desired/same semantics.\n\n@achow101 could you clarify in commit message whether this causes a change in behavior or not? If you aren't sure, it'd at least be good to say if it potentially changes behavior. This is hurting my head to think about but it seems only potential difference is whether timestamp is overridden when key already ex",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304083243,304083243,src/wallet/rpcdump.cpp
ryanofsky,2019-07-16 19:39:42,"In commit ""Have importaddress use ImportScripts and ImportScriptPubKeys"" (d2b7db13b92391c87adf6db862593b311c7cbdee)\n\nSlight change of behavior here, if fP2SH is false and the provided scriptpubkey is spendable, this code used throw ""wallet already contains the private key"" error and now it doesn't. This seems like a good change.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304085906,304085906,src/wallet/rpcdump.cpp
ryanofsky,2019-07-16 19:51:59,"In commit ""Have importaddress use ImportScripts and ImportScriptPubKeys"" (d2b7db13b92391c87adf6db862593b311c7cbdee):\n\nMaybe call `ImportScripts({redeem_script})` here to avoid needing to share `scripts` variable and have its value change between the two calls.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304090232,304090232,src/wallet/rpcdump.cpp
ryanofsky,2019-07-16 20:00:30,"In commit ""Optionally allow ImportScripts to set script creation timestamp"" (ace5d082034cbaa52f596689433381a2226a21dc)\n\nCan you clairfy in the commit message whether this is a change in behavior for the `importmulti` RPC. Seems like a minor bugfix?",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304093482,304093482,src/wallet/rpcdump.cpp
ryanofsky,2019-07-16 20:14:23,"In commit ""Have importwallet use ImportPrivKeys and ImportScripts"" (991ecfdbbb289bd6e4c50fc63f9201edbca14f70)\n\nIMO, would be clearer to call `ImportPrivKeys({keyid, key}}, time)` than have the extra map variable.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304098499,304098499,src/wallet/rpcdump.cpp
ryanofsky,2019-07-16 20:15:50,"In commit ""Have importwallet use ImportPrivKeys and ImportScripts"" (991ecfdbbb289bd6e4c50fc63f9201edbca14f70)\n\nThs doesn't seem right, if HaveKey is true, ImportPrivKeys returns true.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304099129,304099129,src/wallet/rpcdump.cpp
ryanofsky,2019-07-16 20:17:24,"In commit ""Have importwallet use ImportPrivKeys and ImportScripts"" (991ecfdbbb289bd6e4c50fc63f9201edbca14f70)\n\nThis print statement should precede the import above...",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304099688,304099688,src/wallet/rpcdump.cpp
ryanofsky,2019-07-16 20:22:13,"In commit ""Have importwallet use ImportPrivKeys and ImportScripts"" (991ecfdbbb289bd6e4c50fc63f9201edbca14f70)\n\n> Both have HaveKey and/or HaveCScript checks that can fail, but not cause the import to be bad. \n\nWhat's this referring to? Import methods seem to return true if imported data was already found. But maybe I'm misinterpreting. Might help to refer to a specific example.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304101655,304101655,src/wallet/rpcdump.cpp
achow101,2019-07-16 22:12:02,It won't ever add the scripts as watch only because we import the private keys earlier.,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304144659,304144659,src/wallet/rpcdump.cpp
achow101,2019-07-16 22:38:58,I don't see the benefit of doing that.,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304155425,304155425,src/wallet/rpcdump.cpp
achow101,2019-07-16 22:43:29,"~~No?~~\n\nnvm, looking at a change that I had locally",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304156641,304156641,src/wallet/rpcdump.cpp
achow101,2019-07-16 23:06:43,"Turns out I was having a hard time with the negations.\n\nI've pushed another commit that makes it more explicit when something is being skipped because we already have it, as well as logging when this happens.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304162432,304162432,src/wallet/rpcdump.cpp
achow101,2019-07-16 23:07:49,"I've added a note to each commit indicating what behavior changes in it.\n\nHere, the only behavior change is that the timestamp for the key will be set to 1 if we already have it.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304162676,304162676,src/wallet/rpcdump.cpp
achow101,2019-07-16 23:08:16,"Oh, whoops. Fixed.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304162769,304162769,src/wallet/rpcdump.cpp
achow101,2019-07-16 23:08:32,Reverted the below change entirely.,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304162832,304162832,src/wallet/rpcdump.cpp
achow101,2019-07-16 23:08:39,Reverted this change,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304162862,304162862,src/wallet/rpcdump.cpp
achow101,2019-07-16 23:08:43,Reverted this change,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304162880,304162880,src/wallet/rpcdump.cpp
achow101,2019-07-16 23:09:01,Fixed `ImportPrivKeys`,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304162946,304162946,src/wallet/rpcdump.cpp
achow101,2019-07-16 23:10:03,"To be consistent, I've also removed the fail if `HaveKey` above. This results in labels being updated if things already existed.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304163174,304163174,src/wallet/rpcdump.cpp
achow101,2019-07-16 23:10:23,Done.,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304163243,304163243,src/wallet/rpcdump.cpp
achow101,2019-07-16 23:10:27,Done,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304163256,304163256,src/wallet/rpcdump.cpp
achow101,2019-07-16 23:10:45,I've restored `fGood` and the error messages.,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304163311,304163311,src/wallet/rpcdump.cpp
achow101,2019-07-16 23:10:53,Fixed,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304163340,304163340,src/wallet/rpcdump.cpp
promag,2019-07-17 09:54:08,"7a58ad5624b2ea9c2d2c661446cc6e046a222fca\n\n`nTimeBegin` is not being updated, the rescan below could miss wallet transactions?",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304316207,304316207,src/wallet/rpcdump.cpp
promag,2019-07-17 10:01:49,"7a58ad5624b2ea9c2d2c661446cc6e046a222fca\n\nnit, this wouldn't be logged if the key is present.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304319552,304319552,src/wallet/rpcdump.cpp
achow101,2019-07-17 15:21:54,Added the `nTimeBegin` update back.,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304470270,304470270,src/wallet/rpcdump.cpp
achow101,2019-07-17 15:22:05,Added a note in the commit message that this happens.,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304470399,304470399,src/wallet/rpcdump.cpp
ryanofsky,2019-07-17 17:08:25,"In commit ""Log when an import is being skipped because we already have it"" (8bd426d238a526f8cfa4e8dd567fb3ccadb40cf7)\n\nNote: Beyond adding the log, this commit also changes behavior of ImportPrivKeys to not update the nCreateTime when the key already exists. This is a good change, so just wanted to point it out.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304545403,304545403,src/wallet/wallet.cpp
ryanofsky,2019-07-17 17:15:34,"In commit ""Have importprivkey use CWallet's ImportPrivKeys, ImportScripts, and ImportScriptPubKeys"" (5776e6d72e76e03251d346588035fcdb0423440c)\n\nNice! From ea665e323f76766def6c4f46a46c53e38365d179 to 5776e6d72e76e03251d346588035fcdb0423440c this commit is so much simpler now. The ImportScriptPubKeys stuff was so confusing to me before.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304548365,304548365,src/wallet/rpcdump.cpp
ryanofsky,2019-07-17 17:20:42,"In commit ""Have importprivkey use CWallet's ImportPrivKeys, ImportScripts, and ImportScriptPubKeys"" (5776e6d72e76e03251d346588035fcdb0423440c)\n\nJust for the record, I like Sjors idea of putting the AddKeyPubKey->ImportPrivKeys and LearnAllRelatedScripts->ImportScripts in two separate commits, since they are independent changes. But it's not very important.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r304550340,304550340,src/wallet/rpcdump.cpp
ryanofsky,2019-07-18 17:08:57,"In commit ""Have importwallet use ImportPrivKeys and ImportScripts"" (35805ce74a780674c2a04259f98c8888906d7e91)\n\nAny particular reason this this is calling ImportScriptPubKeys to indirectly set the labels instead of just directly calling SetAddressBook like before? This seems to create same confusion around removing watch only scripts, and then appearing to add them again, but then not really ad",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r305025193,305025193,src/wallet/rpcdump.cpp
ryanofsky,2019-07-18 17:19:41,"In commit ""Have importwallet use ImportPrivKeys and ImportScripts"" (35805ce74a780674c2a04259f98c8888906d7e91)\n\nInteresting there is still a case that treats 0 and 1 key times differently. It might a be nice idea in a followup PR to replace all the 0's and 1's in the code with `SKIP_RESCAN = 0`, `FULL_RESCAN = 1` constants.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r305029269,305029269,src/wallet/rpcdump.cpp
ryanofsky,2019-07-18 20:13:12,"In commit ""Log when an import is being skipped because we already have it"" (8bd426d238a526f8cfa4e8dd567fb3ccadb40cf7)\n\nNoting another change in behavior: This will now avoid adding the key to the keypool if add_keypool is true and the public key already exists. Could potentially be documented in the commit message or add_keypool description.",https://github.com/bitcoin/bitcoin/pull/16301#discussion_r305095534,305095534,src/wallet/wallet.cpp
achow101,2019-07-19 00:36:07,Reverted.,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r305164723,305164723,src/wallet/rpcdump.cpp
achow101,2019-07-19 00:36:16,Added a note in the commit message,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r305164748,305164748,src/wallet/wallet.cpp
achow101,2019-07-19 00:37:15,I think the use of `0` and `1` is kind of inconsistent and all of the the timestamp stuff needs to be cleaned up. But that should be done in a followup PR.,https://github.com/bitcoin/bitcoin/pull/16301#discussion_r305164872,305164872,src/wallet/rpcdump.cpp
