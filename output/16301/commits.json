[
  {
    "sha": "ab28e31c9563bd2cd1e4a088ffd2479517dc83f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjI4ZTMxYzk1NjNiZDJjZDFlNGEwODhmZmQyNDc5NTE3ZGM4M2Yy",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-07-12T00:21:05Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-07-12T00:24:42Z"
      },
      "message": "Change ImportScriptPubKeys' internal to apply_label\n\nThe internal bool was only to indicate whether the given label should\nbe applied as things that are internal should not have a label. To make\nthis clearer, we change internal to apply_label and invert its usage\nso things that have labels set this to true in order to have their labels\napplied.",
      "tree": {
        "sha": "1b907f31bdd3a9c1d6a5b8b4d01a869e774044bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b907f31bdd3a9c1d6a5b8b4d01a869e774044bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab28e31c9563bd2cd1e4a088ffd2479517dc83f2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab28e31c9563bd2cd1e4a088ffd2479517dc83f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab28e31c9563bd2cd1e4a088ffd2479517dc83f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab28e31c9563bd2cd1e4a088ffd2479517dc83f2/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7400135b7918df9c34206bead744c496e07b0e78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7400135b7918df9c34206bead744c496e07b0e78",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7400135b7918df9c34206bead744c496e07b0e78"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "506b7c4bef63a5dd3ce9db6d68f138377216057c",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab28e31c9563bd2cd1e4a088ffd2479517dc83f2/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab28e31c9563bd2cd1e4a088ffd2479517dc83f2/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=ab28e31c9563bd2cd1e4a088ffd2479517dc83f2",
        "patch": "@@ -1283,7 +1283,7 @@ static UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, con\n         if (!pwallet->ImportPubKeys(ordered_pubkeys, pubkey_map, import_data.key_origins, add_keypool, internal, timestamp)) {\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding address to wallet\");\n         }\n-        if (!pwallet->ImportScriptPubKeys(label, script_pub_keys, have_solving_data, internal, timestamp)) {\n+        if (!pwallet->ImportScriptPubKeys(label, script_pub_keys, have_solving_data, !internal, timestamp)) {\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding address to wallet\");\n         }\n "
      },
      {
        "sha": "2b4819c981b7c453db0f81b3ff0664d5b3b8e63f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab28e31c9563bd2cd1e4a088ffd2479517dc83f2/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab28e31c9563bd2cd1e4a088ffd2479517dc83f2/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ab28e31c9563bd2cd1e4a088ffd2479517dc83f2",
        "patch": "@@ -1717,7 +1717,7 @@ bool CWallet::ImportPubKeys(const std::vector<CKeyID>& ordered_pubkeys, const st\n     return true;\n }\n \n-bool CWallet::ImportScriptPubKeys(const std::string& label, const std::set<CScript>& script_pub_keys, const bool have_solving_data, const bool internal, const int64_t timestamp)\n+bool CWallet::ImportScriptPubKeys(const std::string& label, const std::set<CScript>& script_pub_keys, const bool have_solving_data, const bool apply_label, const int64_t timestamp)\n {\n     WalletBatch batch(*database);\n     for (const CScript& script : script_pub_keys) {\n@@ -1728,7 +1728,7 @@ bool CWallet::ImportScriptPubKeys(const std::string& label, const std::set<CScri\n         }\n         CTxDestination dest;\n         ExtractDestination(script, dest);\n-        if (!internal && IsValidDestination(dest)) {\n+        if (apply_label && IsValidDestination(dest)) {\n             SetAddressBookWithDB(batch, dest, label, \"receive\");\n         }\n     }"
      },
      {
        "sha": "b2810246dcfccf8f9ddc01f2562f4466648e4bd2",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab28e31c9563bd2cd1e4a088ffd2479517dc83f2/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab28e31c9563bd2cd1e4a088ffd2479517dc83f2/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ab28e31c9563bd2cd1e4a088ffd2479517dc83f2",
        "patch": "@@ -1095,7 +1095,7 @@ class CWallet final : public CCryptoKeyStore, private interfaces::Chain::Notific\n     bool ImportScripts(const std::set<CScript> scripts) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool ImportPrivKeys(const std::map<CKeyID, CKey>& privkey_map, const int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool ImportPubKeys(const std::vector<CKeyID>& ordered_pubkeys, const std::map<CKeyID, CPubKey>& pubkey_map, const std::map<CKeyID, std::pair<CPubKey, KeyOriginInfo>>& key_origins, const bool add_keypool, const bool internal, const int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n-    bool ImportScriptPubKeys(const std::string& label, const std::set<CScript>& script_pub_keys, const bool have_solving_data, const bool internal, const int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool ImportScriptPubKeys(const std::string& label, const std::set<CScript>& script_pub_keys, const bool have_solving_data, const bool apply_label, const int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n     CFeeRate m_pay_tx_fee{DEFAULT_PAY_TX_FEE};\n     unsigned int m_confirm_target{DEFAULT_TX_CONFIRM_TARGET};"
      }
    ]
  },
  {
    "sha": "fae7a5befd0b8746d84a6fde575e5b4ea46cb3c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWU3YTViZWZkMGI4NzQ2ZDg0YTZmZGU1NzVlNWI0ZWE0NmNiM2M0",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-07-16T22:51:39Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-07-19T00:34:53Z"
      },
      "message": "Log when an import is being skipped because we already have it\n\nBehavior Changes:\n* Those pubkeys being imported with add_keypool set and are already in the wallet will no longer be added to the keypool",
      "tree": {
        "sha": "2d23ed0522fe8d6fbeb3fe0931ea3fd22047b11c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d23ed0522fe8d6fbeb3fe0931ea3fd22047b11c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae7a5befd0b8746d84a6fde575e5b4ea46cb3c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae7a5befd0b8746d84a6fde575e5b4ea46cb3c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fae7a5befd0b8746d84a6fde575e5b4ea46cb3c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae7a5befd0b8746d84a6fde575e5b4ea46cb3c4/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab28e31c9563bd2cd1e4a088ffd2479517dc83f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab28e31c9563bd2cd1e4a088ffd2479517dc83f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab28e31c9563bd2cd1e4a088ffd2479517dc83f2"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 18,
      "deletions": 3
    },
    "files": [
      {
        "sha": "45cd2d0e0734b2245ed24f4a4925710ba5c15d51",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 3,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae7a5befd0b8746d84a6fde575e5b4ea46cb3c4/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae7a5befd0b8746d84a6fde575e5b4ea46cb3c4/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=fae7a5befd0b8746d84a6fde575e5b4ea46cb3c4",
        "patch": "@@ -1665,7 +1665,12 @@ bool CWallet::ImportScripts(const std::set<CScript> scripts)\n {\n     WalletBatch batch(*database);\n     for (const auto& entry : scripts) {\n-        if (!HaveCScript(CScriptID(entry)) && !AddCScriptWithDB(batch, entry)) {\n+        CScriptID id(entry);\n+        if (HaveCScript(id)) {\n+            WalletLogPrintf(\"Already have script %s, skipping\\n\", HexStr(entry));\n+            continue;\n+        }\n+        if (!AddCScriptWithDB(batch, entry)) {\n             return false;\n         }\n     }\n@@ -1680,9 +1685,14 @@ bool CWallet::ImportPrivKeys(const std::map<CKeyID, CKey>& privkey_map, const in\n         CPubKey pubkey = key.GetPubKey();\n         const CKeyID& id = entry.first;\n         assert(key.VerifyPubKey(pubkey));\n+        // Skip if we already have the key\n+        if (HaveKey(id)) {\n+            WalletLogPrintf(\"Already have key with pubkey %s, skipping\\n\", HexStr(pubkey));\n+            continue;\n+        }\n         mapKeyMetadata[id].nCreateTime = timestamp;\n         // If the private key is not present in the wallet, insert it.\n-        if (!HaveKey(id) && !AddKeyPubKeyWithDB(batch, key, pubkey)) {\n+        if (!AddKeyPubKeyWithDB(batch, key, pubkey)) {\n             return false;\n         }\n         UpdateTimeFirstKey(timestamp);\n@@ -1703,7 +1713,12 @@ bool CWallet::ImportPubKeys(const std::vector<CKeyID>& ordered_pubkeys, const st\n         }\n         const CPubKey& pubkey = entry->second;\n         CPubKey temp;\n-        if (!GetPubKey(id, temp) && !AddWatchOnlyWithDB(batch, GetScriptForRawPubKey(pubkey), timestamp)) {\n+        if (GetPubKey(id, temp)) {\n+            // Already have pubkey, skipping\n+            WalletLogPrintf(\"Already have pubkey %s, skipping\\n\", HexStr(temp));\n+            continue;\n+        }\n+        if (!AddWatchOnlyWithDB(batch, GetScriptForRawPubKey(pubkey), timestamp)) {\n             return false;\n         }\n         mapKeyMetadata[id].nCreateTime = timestamp;"
      }
    ]
  },
  {
    "sha": "c6a827424711333f6f66cf5f9d79e0e6884769de",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNmE4Mjc0MjQ3MTEzMzNmNmY2NmNmNWY5ZDc5ZTBlNjg4NDc2OWRl",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-06-27T21:53:08Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-07-19T00:35:51Z"
      },
      "message": "Have importprivkey use CWallet's ImportPrivKeys, ImportScripts, and ImportScriptPubKeys\n\nBehavior changes:\n* If we already have the key, it's wpkh script will still be added, although it should already be there",
      "tree": {
        "sha": "f3c89fe62d3003a3ec2db08a3d3cfdea92387fe8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f3c89fe62d3003a3ec2db08a3d3cfdea92387fe8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6a827424711333f6f66cf5f9d79e0e6884769de",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6a827424711333f6f66cf5f9d79e0e6884769de",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c6a827424711333f6f66cf5f9d79e0e6884769de",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6a827424711333f6f66cf5f9d79e0e6884769de/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fae7a5befd0b8746d84a6fde575e5b4ea46cb3c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae7a5befd0b8746d84a6fde575e5b4ea46cb3c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fae7a5befd0b8746d84a6fde575e5b4ea46cb3c4"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 6,
      "deletions": 10
    },
    "files": [
      {
        "sha": "7f192e93649334246c985bde06ce1f9b99184e2c",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 10,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c6a827424711333f6f66cf5f9d79e0e6884769de/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c6a827424711333f6f66cf5f9d79e0e6884769de/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=c6a827424711333f6f66cf5f9d79e0e6884769de",
        "patch": "@@ -187,19 +187,15 @@ UniValue importprivkey(const JSONRPCRequest& request)\n                 }\n             }\n \n-            // Don't throw error in case a key is already there\n-            if (pwallet->HaveKey(vchAddress)) {\n-                return NullUniValue;\n+            // Use timestamp of 1 to scan the whole chain\n+            if (!pwallet->ImportPrivKeys({{vchAddress, key}}, 1)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n             }\n \n-            // whenever a key is imported, we need to scan the whole chain\n-            pwallet->UpdateTimeFirstKey(1);\n-            pwallet->mapKeyMetadata[vchAddress].nCreateTime = 1;\n-\n-            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-                throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");\n+            // Add the wpkh script for this key if possible\n+            if (pubkey.IsCompressed()) {\n+                pwallet->ImportScripts({GetScriptForDestination(WitnessV0KeyHash(vchAddress))});\n             }\n-            pwallet->LearnAllRelatedScripts(pubkey);\n         }\n     }\n     if (fRescan) {"
      }
    ]
  },
  {
    "sha": "a00d1e5ec5eb019f8bbeb060a2b09e341d360fe5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMDBkMWU1ZWM1ZWIwMTlmOGJiZWIwNjBhMmIwOWUzNDFkMzYwZmU1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-06-27T22:09:49Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-07-24T15:42:37Z"
      },
      "message": "Have importpubkey use CWallet's ImportScriptPubKeys and ImportPubKeys functions\n\nBehavior changes:\n* If any scripts for the pubkey were already in the wallet, their timestamps will be set to 1 and label updated",
      "tree": {
        "sha": "fdf08cfb0b1e1a0d354b5fe5e5b6a3364c83d2e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fdf08cfb0b1e1a0d354b5fe5e5b6a3364c83d2e7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a00d1e5ec5eb019f8bbeb060a2b09e341d360fe5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a00d1e5ec5eb019f8bbeb060a2b09e341d360fe5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a00d1e5ec5eb019f8bbeb060a2b09e341d360fe5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a00d1e5ec5eb019f8bbeb060a2b09e341d360fe5/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c6a827424711333f6f66cf5f9d79e0e6884769de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6a827424711333f6f66cf5f9d79e0e6884769de",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c6a827424711333f6f66cf5f9d79e0e6884769de"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 8,
      "deletions": 3
    },
    "files": [
      {
        "sha": "7b2a1a33771a8f313e9fe04b5ff8856dacd9a901",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a00d1e5ec5eb019f8bbeb060a2b09e341d360fe5/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a00d1e5ec5eb019f8bbeb060a2b09e341d360fe5/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=a00d1e5ec5eb019f8bbeb060a2b09e341d360fe5",
        "patch": "@@ -538,11 +538,16 @@ UniValue importpubkey(const JSONRPCRequest& request)\n         auto locked_chain = pwallet->chain().lock();\n         LOCK(pwallet->cs_wallet);\n \n+        std::set<CScript> script_pub_keys;\n         for (const auto& dest : GetAllDestinationsForKey(pubKey)) {\n-            ImportAddress(pwallet, dest, strLabel);\n+            script_pub_keys.insert(GetScriptForDestination(dest));\n         }\n-        ImportScript(pwallet, GetScriptForRawPubKey(pubKey), strLabel, false);\n-        pwallet->LearnAllRelatedScripts(pubKey);\n+\n+        pwallet->MarkDirty();\n+\n+        pwallet->ImportScriptPubKeys(strLabel, script_pub_keys, true /* have_solving_data */, true /* apply_label */, 1 /* timestamp */);\n+\n+        pwallet->ImportPubKeys({pubKey.GetID()}, {{pubKey.GetID(), pubKey}} , {} /* key_origins */, false /* add_keypool */, false /* internal */, 1 /* timestamp */);\n     }\n     if (fRescan)\n     {"
      }
    ]
  },
  {
    "sha": "94bf156f391759420465b2ff8c44f5f150246c7f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NGJmMTU2ZjM5MTc1OTQyMDQ2NWIyZmY4YzQ0ZjVmMTUwMjQ2Yzdm",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-06-27T22:36:48Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-07-24T15:42:46Z"
      },
      "message": "Have importaddress use ImportScripts and ImportScriptPubKeys\n\nAlso removes the now unused ImportAddress and ImportScript from rpcdump.cpp\n\nBehavior changes:\n* No errors will be thrown when the script or key already exists in the wallet.\n* If the key or script is already in the wallet, their labels will be updated.",
      "tree": {
        "sha": "15b667650f39bc66da02d37911d8c39bafce2096",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15b667650f39bc66da02d37911d8c39bafce2096"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/94bf156f391759420465b2ff8c44f5f150246c7f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94bf156f391759420465b2ff8c44f5f150246c7f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/94bf156f391759420465b2ff8c44f5f150246c7f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94bf156f391759420465b2ff8c44f5f150246c7f/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a00d1e5ec5eb019f8bbeb060a2b09e341d360fe5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a00d1e5ec5eb019f8bbeb060a2b09e341d360fe5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a00d1e5ec5eb019f8bbeb060a2b09e341d360fe5"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 14,
      "deletions": 38
    },
    "files": [
      {
        "sha": "964676e6b188be0f33a0ac0669d48921a4596725",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 38,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/94bf156f391759420465b2ff8c44f5f150246c7f/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/94bf156f391759420465b2ff8c44f5f150246c7f/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=94bf156f391759420465b2ff8c44f5f150246c7f",
        "patch": "@@ -235,42 +235,6 @@ UniValue abortrescan(const JSONRPCRequest& request)\n     return true;\n }\n \n-static void ImportAddress(CWallet*, const CTxDestination& dest, const std::string& strLabel);\n-static void ImportScript(CWallet* const pwallet, const CScript& script, const std::string& strLabel, bool isRedeemScript) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n-{\n-    if (!isRedeemScript && ::IsMine(*pwallet, script) == ISMINE_SPENDABLE) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"The wallet already contains the private key for this address or script\");\n-    }\n-\n-    pwallet->MarkDirty();\n-\n-    if (!pwallet->HaveWatchOnly(script) && !pwallet->AddWatchOnly(script, 0 /* nCreateTime */)) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding address to wallet\");\n-    }\n-\n-    if (isRedeemScript) {\n-        const CScriptID id(script);\n-        if (!pwallet->HaveCScript(id) && !pwallet->AddCScript(script)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding p2sh redeemScript to wallet\");\n-        }\n-        ImportAddress(pwallet, ScriptHash(id), strLabel);\n-    } else {\n-        CTxDestination destination;\n-        if (ExtractDestination(script, destination)) {\n-            pwallet->SetAddressBook(destination, strLabel, \"receive\");\n-        }\n-    }\n-}\n-\n-static void ImportAddress(CWallet* const pwallet, const CTxDestination& dest, const std::string& strLabel) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n-{\n-    CScript script = GetScriptForDestination(dest);\n-    ImportScript(pwallet, script, strLabel, false);\n-    // add to address book or update label\n-    if (IsValidDestination(dest))\n-        pwallet->SetAddressBook(dest, strLabel, \"receive\");\n-}\n-\n UniValue importaddress(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n@@ -343,10 +307,22 @@ UniValue importaddress(const JSONRPCRequest& request)\n             if (fP2SH) {\n                 throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Cannot use the p2sh flag with an address - use a script instead\");\n             }\n-            ImportAddress(pwallet, dest, strLabel);\n+\n+            pwallet->MarkDirty();\n+\n+            pwallet->ImportScriptPubKeys(strLabel, {GetScriptForDestination(dest)}, false /* have_solving_data */, true /* apply_label */, 1 /* timestamp */);\n         } else if (IsHex(request.params[0].get_str())) {\n             std::vector<unsigned char> data(ParseHex(request.params[0].get_str()));\n-            ImportScript(pwallet, CScript(data.begin(), data.end()), strLabel, fP2SH);\n+            CScript redeem_script(data.begin(), data.end());\n+\n+            std::set<CScript> scripts = {redeem_script};\n+            pwallet->ImportScripts(scripts);\n+\n+            if (fP2SH) {\n+                scripts.insert(GetScriptForDestination(ScriptHash(CScriptID(redeem_script))));\n+            }\n+\n+            pwallet->ImportScriptPubKeys(strLabel, scripts, false /* have_solving_data */, true /* apply_label */, 1 /* timestamp */);\n         } else {\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address or script\");\n         }"
      }
    ]
  },
  {
    "sha": "78941da5baf6244c7c54e86cf8ce3e09ce60c239",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ODk0MWRhNWJhZjYyNDRjN2M1NGU4NmNmOGNlM2UwOWNlNjBjMjM5",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-06-28T01:17:42Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-07-24T15:42:46Z"
      },
      "message": "Optionally allow ImportScripts to set script creation timestamp\n\nBehavior changes:\n* scripts imported in importmulti that are not explicilty scriptPubKeys will have timestamps set for them",
      "tree": {
        "sha": "fc07b9173f4adcb604fe2242ed4b2b579c0b1c2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc07b9173f4adcb604fe2242ed4b2b579c0b1c2e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78941da5baf6244c7c54e86cf8ce3e09ce60c239",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78941da5baf6244c7c54e86cf8ce3e09ce60c239",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78941da5baf6244c7c54e86cf8ce3e09ce60c239",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78941da5baf6244c7c54e86cf8ce3e09ce60c239/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "94bf156f391759420465b2ff8c44f5f150246c7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94bf156f391759420465b2ff8c44f5f150246c7f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/94bf156f391759420465b2ff8c44f5f150246c7f"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 13,
      "deletions": 5
    },
    "files": [
      {
        "sha": "480832c627533568926b97f5defbba902f2585ba",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78941da5baf6244c7c54e86cf8ce3e09ce60c239/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78941da5baf6244c7c54e86cf8ce3e09ce60c239/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=78941da5baf6244c7c54e86cf8ce3e09ce60c239",
        "patch": "@@ -194,7 +194,7 @@ UniValue importprivkey(const JSONRPCRequest& request)\n \n             // Add the wpkh script for this key if possible\n             if (pubkey.IsCompressed()) {\n-                pwallet->ImportScripts({GetScriptForDestination(WitnessV0KeyHash(vchAddress))});\n+                pwallet->ImportScripts({GetScriptForDestination(WitnessV0KeyHash(vchAddress))}, 0 /* timestamp */);\n             }\n         }\n     }\n@@ -316,7 +316,7 @@ UniValue importaddress(const JSONRPCRequest& request)\n             CScript redeem_script(data.begin(), data.end());\n \n             std::set<CScript> scripts = {redeem_script};\n-            pwallet->ImportScripts(scripts);\n+            pwallet->ImportScripts(scripts, 0 /* timestamp */);\n \n             if (fP2SH) {\n                 scripts.insert(GetScriptForDestination(ScriptHash(CScriptID(redeem_script))));\n@@ -1251,7 +1251,7 @@ static UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, con\n \n         // All good, time to import\n         pwallet->MarkDirty();\n-        if (!pwallet->ImportScripts(import_data.import_scripts)) {\n+        if (!pwallet->ImportScripts(import_data.import_scripts, timestamp)) {\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding script to wallet\");\n         }\n         if (!pwallet->ImportPrivKeys(privkey_map, timestamp)) {"
      },
      {
        "sha": "6f080f4b8f36482265243098c792b360aa4cdefd",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78941da5baf6244c7c54e86cf8ce3e09ce60c239/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78941da5baf6244c7c54e86cf8ce3e09ce60c239/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=78941da5baf6244c7c54e86cf8ce3e09ce60c239",
        "patch": "@@ -1661,7 +1661,7 @@ bool CWallet::DummySignTx(CMutableTransaction &txNew, const std::vector<CTxOut>\n     return true;\n }\n \n-bool CWallet::ImportScripts(const std::set<CScript> scripts)\n+bool CWallet::ImportScripts(const std::set<CScript> scripts, int64_t timestamp)\n {\n     WalletBatch batch(*database);\n     for (const auto& entry : scripts) {\n@@ -1673,7 +1673,15 @@ bool CWallet::ImportScripts(const std::set<CScript> scripts)\n         if (!AddCScriptWithDB(batch, entry)) {\n             return false;\n         }\n+\n+        if (timestamp > 0) {\n+            m_script_metadata[CScriptID(entry)].nCreateTime = timestamp;\n+        }\n     }\n+    if (timestamp > 0) {\n+        UpdateTimeFirstKey(timestamp);\n+    }\n+\n     return true;\n }\n "
      },
      {
        "sha": "1b6a2c99f428923e78ac993d42e6113f603a9a59",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78941da5baf6244c7c54e86cf8ce3e09ce60c239/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78941da5baf6244c7c54e86cf8ce3e09ce60c239/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=78941da5baf6244c7c54e86cf8ce3e09ce60c239",
        "patch": "@@ -1092,7 +1092,7 @@ class CWallet final : public CCryptoKeyStore, private interfaces::Chain::Notific\n     bool DummySignTx(CMutableTransaction &txNew, const std::vector<CTxOut> &txouts, bool use_max_sig = false) const;\n     bool DummySignInput(CTxIn &tx_in, const CTxOut &txout, bool use_max_sig = false) const;\n \n-    bool ImportScripts(const std::set<CScript> scripts) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool ImportScripts(const std::set<CScript> scripts, int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool ImportPrivKeys(const std::map<CKeyID, CKey>& privkey_map, const int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool ImportPubKeys(const std::vector<CKeyID>& ordered_pubkeys, const std::map<CKeyID, CPubKey>& pubkey_map, const std::map<CKeyID, std::pair<CPubKey, KeyOriginInfo>>& key_origins, const bool add_keypool, const bool internal, const int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool ImportScriptPubKeys(const std::string& label, const std::set<CScript>& script_pub_keys, const bool have_solving_data, const bool apply_label, const int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);"
      }
    ]
  },
  {
    "sha": "40ad2f6a58228c72c655e3061a19a63640419378",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MGFkMmY2YTU4MjI4YzcyYzY1NWUzMDYxYTE5YTYzNjQwNDE5Mzc4",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-06-28T00:42:14Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-07-24T15:42:46Z"
      },
      "message": "Have importwallet use ImportPrivKeys and ImportScripts\n\nBehavior changes:\n* An \"Importing ...\" line is logged for every key, even ones that are skipped",
      "tree": {
        "sha": "0ee2204c0f5d10408151db3ed9023ab51d3bccaf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ee2204c0f5d10408151db3ed9023ab51d3bccaf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40ad2f6a58228c72c655e3061a19a63640419378",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40ad2f6a58228c72c655e3061a19a63640419378",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/40ad2f6a58228c72c655e3061a19a63640419378",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40ad2f6a58228c72c655e3061a19a63640419378/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "78941da5baf6244c7c54e86cf8ce3e09ce60c239",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78941da5baf6244c7c54e86cf8ce3e09ce60c239",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/78941da5baf6244c7c54e86cf8ce3e09ce60c239"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 9,
      "deletions": 14
    },
    "files": [
      {
        "sha": "932108744b4df749a9838fe3ad0604591046af1d",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 14,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40ad2f6a58228c72c655e3061a19a63640419378/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40ad2f6a58228c72c655e3061a19a63640419378/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=40ad2f6a58228c72c655e3061a19a63640419378",
        "patch": "@@ -656,43 +656,38 @@ UniValue importwallet(const JSONRPCRequest& request)\n             CPubKey pubkey = key.GetPubKey();\n             assert(key.VerifyPubKey(pubkey));\n             CKeyID keyid = pubkey.GetID();\n-            if (pwallet->HaveKey(keyid)) {\n-                pwallet->WalletLogPrintf(\"Skipping import of %s (key already present)\\n\", EncodeDestination(PKHash(keyid)));\n-                continue;\n-            }\n+\n             pwallet->WalletLogPrintf(\"Importing %s...\\n\", EncodeDestination(PKHash(keyid)));\n-            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+\n+            if (!pwallet->ImportPrivKeys({{keyid, key}}, time)) {\n+                pwallet->WalletLogPrintf(\"Error importing key for %s\\n\", EncodeDestination(PKHash(keyid)));\n                 fGood = false;\n                 continue;\n             }\n-            pwallet->mapKeyMetadata[keyid].nCreateTime = time;\n+\n             if (has_label)\n                 pwallet->SetAddressBook(PKHash(keyid), label, \"receive\");\n+\n             nTimeBegin = std::min(nTimeBegin, time);\n             progress++;\n         }\n         for (const auto& script_pair : scripts) {\n             pwallet->chain().showProgress(\"\", std::max(50, std::min(75, (int)((progress / total) * 100) + 50)), false);\n             const CScript& script = script_pair.first;\n             int64_t time = script_pair.second;\n-            CScriptID id(script);\n-            if (pwallet->HaveCScript(id)) {\n-                pwallet->WalletLogPrintf(\"Skipping import of %s (script already present)\\n\", HexStr(script));\n-                continue;\n-            }\n-            if(!pwallet->AddCScript(script)) {\n+\n+            if (!pwallet->ImportScripts({script}, time)) {\n                 pwallet->WalletLogPrintf(\"Error importing script %s\\n\", HexStr(script));\n                 fGood = false;\n                 continue;\n             }\n             if (time > 0) {\n-                pwallet->m_script_metadata[id].nCreateTime = time;\n                 nTimeBegin = std::min(nTimeBegin, time);\n             }\n+\n             progress++;\n         }\n         pwallet->chain().showProgress(\"\", 100, false); // hide progress dialog in GUI\n-        pwallet->UpdateTimeFirstKey(nTimeBegin);\n     }\n     pwallet->chain().showProgress(\"\", 100, false); // hide progress dialog in GUI\n     RescanWallet(*pwallet, reserver, nTimeBegin, false /* update */);"
      }
    ]
  }
]