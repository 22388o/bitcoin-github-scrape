TheBlueMatt,2016-12-02T00:23:39Z,Note that the main.h move is in its own commit separate from the main.h wrapper-file creation so that git tracks the rename and (at least some) rebases will be possible.,https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-264337740,264337740,
TheBlueMatt,2016-12-02T01:14:55Z,"Nevermind, git apparently doesnt track across this kind of move if they are both in a merge commit, so instead ran sed s/#include ""main.h""/#include ""validation.h""/",https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-264345819,264345819,
TheBlueMatt,2016-12-02T01:35:03Z,"Fixed includes, diff from 3b92e2d52fab7f5fccb5fd5e09cf31ee8327db32 to 84922e4bf4c38227fbbbede50e09c87fe2a5c7f0 is\n\n```\ndiff --git a/src/validation.cpp b/src/validation.cpp\nindex 08902bf..9cfb522 100644\n--- a/src/validation.cpp\n+++ b/src/validation.cpp\n@@ -6,7 +6,6 @@\n #include ""validation.h""\n \n #include ""arith_uint256.h""\n-#include ""blockencodings.h""\n #include ""chainparams.h",https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-264349135,264349135,
sipa,2016-12-02T01:52:53Z,"utACK d90cfde1c5edada8b524ee563c3daf0b71230fcf\n\nEDIT: obsoleted by squash. See later comment.",https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-264351906,264351906,
jtimon,2016-12-02T03:35:59Z,"Fast review ACK 585a190 , but I didn't verified moveonly-ness, I didn't even tried to compile and I didn't read the full description of the PR.",https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-264365400,264365400,
jonasschnelli,2016-12-02T07:27:06Z,"utACK 585a190c97e7e20b35bc86f3f677c9f0b39e6dc9.\nTesting this now on current master (= 6a2379cfabe27574d8d63010f5af38b98ee7fc4d).",https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-264391089,264391089,
instagibbs,2016-12-02T15:07:45Z,Might be meaningless but should cs_main be renamed as well?,https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-264475056,264475056,
TheBlueMatt,2016-12-02T17:44:13Z,"Fixed wrong comment in net_processing.h, squashed.\n@instagibbs I'm ok with sed'ing the headers of most files, but cs_main maybe should come later",https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-264515247,264515247,
morcos,2016-12-02T19:07:19Z,lightly tested ACK 76faa3cdfedbd3fc,https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-264535750,264535750,
sdaftuar,2016-12-03T01:03:38Z,"Fine with me to not address in this pr.\n\nSent from my iPhone\n\n> On Dec 2, 2016, at 5:17 PM, Matt Corallo <notifications@github.com> wrote:\n> \n> @TheBlueMatt commented on this pull request.\n> \n> In src/main.cpp:\n> \n> > @@ -4311,8 +4311,6 @@ void UnloadBlockIndex()\n>      pindexBestInvalid = NULL;\n>      pindexBestHeader = NULL;\n>      mempool.clear();\n> -    mapOrphanTransactions.clea",https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-264602316,264602316,
theuni,2016-12-03T02:05:22Z,"utACK https://github.com/bitcoin/bitcoin/pull/9260/commits/76faa3cdfedbd3fc91be4ecfff77fc6dc18134fb.\n\nMy audit process:\n1. Verify the first commit is just a rename (and oneliner header fixup)\n    - ```git diff HEAD~1:./main.cpp HEAD:./validation.cpp```\n2. Check net_processing.h/cpp against what was removed from main:\n    - ```git diff --patience HEAD~2..HEAD~1 -- main.cpp | grep '^-' |",https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-264608032,264608032,
sipa,2016-12-03T02:15:41Z,"utACK 76faa3cdfedbd3fc91be4ecfff77fc6dc18134fb\n\nMy review strategy:\n* Verify the the changes in the first and third commit by hand (they're all trivial).\n* Use `git diff --patience e736772c~:src/main.h e736772c:src/main.h`, `git diff --patience e736772c~:src/main.h e736772c:src/net_processing.h` to determine that the second commit's main.h and net_processing.h only contain code moved or co",https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-264608763,264608763,
rebroad,2016-12-05T04:30:16Z,"Ok, so I have over 100 commits and branches that involve main.cpp. Is there a way I can rebase them all without needed to rewrite them all from scratch please?\n\nWhy rename main to validation anyway? It's just a name and therefore why fix what isn't broken?",https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-264765800,264765800,
TheBlueMatt,2016-12-05T04:41:24Z,"Commits to the validation side should auto-rebase, but commits to the net_processing side you'll have to do. If the changes are only to the net_processing side you could dump the diff and edit which file it is applying to.\n\nOn December 4, 2016 8:30:22 PM PST, R E Broadley <notifications@github.com> wrote:\n>Ok, so I have over 100 commits and branches that involve main.cpp. Is\n>there a way I can",https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-264766802,264766802,
skang404,2016-12-15T11:16:54Z,Could someone comment as to why this renaming was done?,https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-267303465,267303465,
jonasschnelli,2016-12-15T13:19:28Z,"@skang404: The pull request description is indeed a little bit misleading ðŸ˜Š. `main.cpp` was getting a central container for all sorts of functions and logic. People just added stuff there instead of nicely layer and split stuff into separate files or classes.\n\nThis PR finally ""removes"" `main.cpp` (I guess if you have a `main.cpp` is a project large as this one you should consider refactoring s",https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-267325376,267325376,
jtimon,2016-12-15T19:50:20Z,"I think @skang404 more specifically refers to renaming main.o to validation.o after separating the network processing code. I really don't see the point either given that's not even moved to another directory.\nI complained on IRC but didn't want to slow down the separation of net_processing.o.",https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-267425866,267425866,
TheBlueMatt,2016-12-15T19:56:49Z,"Why not? git magically tracks that rename across rebase/merge, and the stuff there clearly fits into one category after the split.",https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-267427407,267427407,
jtimon,2016-12-15T20:14:58Z,"> Why not?\n\nRight, the only disruption comes from includes. But I think the question is ""why yes?"".\nIn any case, I think it is too late to revert it (that would mean the same include disruption again in the other direction), so I don't think there's much point discussing this.",https://github.com/bitcoin/bitcoin/pull/9260#issuecomment-267431974,267431974,
paveljanik,2016-12-02T09:11:35Z,wrong comment.,https://github.com/bitcoin/bitcoin/pull/9260#discussion_r90607927,90607927,src/net_processing.h
paveljanik,2016-12-02T09:12:02Z,this header guard in `.cpp` file?,https://github.com/bitcoin/bitcoin/pull/9260#discussion_r90608001,90608001,src/net_processing.h
paveljanik,2016-12-02T09:12:25Z,wrong comment,https://github.com/bitcoin/bitcoin/pull/9260#discussion_r90608054,90608054,src/net_processing.h
TheBlueMatt,2016-12-02T17:21:07Z,Huh?,https://github.com/bitcoin/bitcoin/pull/9260#discussion_r90682760,90682760,src/net_processing.h
paveljanik,2016-12-02T17:26:05Z,"Hmm, looks like I reviewed it without clicking on ""Load diff"" and this puzzled me. Can be ignored.\n",https://github.com/bitcoin/bitcoin/pull/9260#discussion_r90683544,90683544,src/net_processing.h
sdaftuar,2016-12-02T19:47:59Z,"We also call UnloadBlockIndex in the unit tests, to clear state in between tests.  There is a test that exercises the orphan handling, and fortunately it leaves the orphan map empty at the end, but that's sort of a coincidence.  How about we add this functionality to clear the orphan map in some new function, and call it from `TestingSetup::~TestingSetup()` in `test_bitcoin.cpp`?",https://github.com/bitcoin/bitcoin/pull/9260#discussion_r90707779,90707779,src/main.cpp
sdaftuar,2016-12-02T20:54:46Z,"Looks like this is now duplicated in main.cpp and net_processing.cpp, was that intentional?",https://github.com/bitcoin/bitcoin/pull/9260#discussion_r90717864,90717864,src/net_processing.cpp
TheBlueMatt,2016-12-02T22:14:20Z,"Yea, I figured I'd just leave it in both.",https://github.com/bitcoin/bitcoin/pull/9260#discussion_r90729609,90729609,src/net_processing.cpp
TheBlueMatt,2016-12-02T22:17:21Z,"I'd kinda prefer to leave it, actually...adding more extern ... mapOrphanTransactions to more files seems super gross, and we already have a check that mapOrphanTransactions{ByPrev} is empty at the end of all tests that use it, so I think its fine.",https://github.com/bitcoin/bitcoin/pull/9260#discussion_r90730000,90730000,src/main.cpp
