practicalswift,2019-11-01 16:01:47,ACK 6775a18cab043af0a9ea69a364804d6d75faf939 -- agree regarding the confusion,https://github.com/bitcoin/bitcoin/pull/17342#issuecomment-548843989,548843989,
laanwj,2019-11-02 12:23:30,"I think it would be much more straightforward if 0 (anything smaller than 1) was the disallowed value, not 1.\n\nEither that, or make the meaning *the number of additional threads spawned*, which can be 0.\n\n(Not that I disagree on adding documentation, but maybe it would be better to make this code less confusing instead, there is no deeper reason why it needs to be like this, the value isn'",https://github.com/bitcoin/bitcoin/pull/17342#issuecomment-549038996,549038996,
jnewbery,2019-11-02 21:29:45,"@laanwj \n> I think it would be much more straightforward if...\n\nTurns out that a global int is not needed at all. We only need the bool-ness of whether any script checking threads have been spawned. I have a branch here: https://github.com/jnewbery/bitcoin/tree/2019-11-nScriptCheckThreads2 that changes the int for a bool, improves commenting everywhere and makes the code clearer.\n\nI fear",https://github.com/bitcoin/bitcoin/pull/17342#issuecomment-549082906,549082906,
promag,2019-11-03 21:48:26,"@jnewbery FWIW the other branch LGTM.\n\n> I fear it'd be NACKed by the ""don't change code for purely cosmetic reasons"" crowd\n\nIt's not cosmetic, it's a good refactor IMO.",https://github.com/bitcoin/bitcoin/pull/17342#issuecomment-549182440,549182440,
laanwj,2019-11-04 14:31:58,"Refactor LGTM, we've both been in the group of people that were confused by this code at some point.\n\n> Turns out that a global int is not needed at all. We only need the bool-ness of whether any script checking threads have been spawned.\n\nWonder if we can take this a step further and not have any global at all, passing the flag into the ChainState constructor instead.",https://github.com/bitcoin/bitcoin/pull/17342#issuecomment-549380178,549380178,
jnewbery,2019-11-04 18:53:17,"Thanks for the feedback everyone. I've changed this PR so it now refactors `nScriptCheckThreads` and adds clarifying comments.\n\n> Wonder if we can take this a step further and not have any global at all, passing the flag into the ChainState constructor instead.\n\nYes, it'd be great to remove more globals and make validation initialization take these as arguments, but I think that's too far ",https://github.com/bitcoin/bitcoin/pull/17342#issuecomment-549495553,549495553,
jnewbery,2019-11-04 19:36:00,"Tested that number of script threads started is the same before and after this PR:\n\n(`bitcoind-pre17342` is a bitcoind compiled from commit bc3fcf3c0d1d4c83da0fab14d40f92ffca35789e in master and `bitcoind-post17342` is a bitcoind compiled from this branch)\n\n```\nfor par in {-4..17}; do echo par=$par; ./bitcoind-pre17342 -par=$par && sleep 2 && bitcoin-cli stop && grep ""Script verification",https://github.com/bitcoin/bitcoin/pull/17342#issuecomment-549512834,549512834,
DrahtBot,2019-11-04 23:44:47,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17383](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17383.html) (Refactor: Move consts to their correct tran",https://github.com/bitcoin/bitcoin/pull/17342#issuecomment-549598299,549598299,
laanwj,2019-11-06 09:37:06,code review ACK 1856073d6e8c774cc0a606275f264133884ef7bd,https://github.com/bitcoin/bitcoin/pull/17342#issuecomment-550227418,550227418,
jnewbery,2019-11-06 20:05:46,"I wanted to remove the unused `validation.h` include, so I picked up @promag's other changes along the way.\n\nThanks for the review!",https://github.com/bitcoin/bitcoin/pull/17342#issuecomment-550478732,550478732,
sipa,2019-11-06 20:54:53,ACK 5506ecfe7a65d5705616bc048f2f1735b89993fb,https://github.com/bitcoin/bitcoin/pull/17342#issuecomment-550496192,550496192,
promag,2019-11-06 22:59:33,"ACK 5506ecfe7a65d5705616bc048f2f1735b89993fb, only change was addressing my nits.",https://github.com/bitcoin/bitcoin/pull/17342#issuecomment-550539989,550539989,
laanwj,2019-11-07 10:53:21,Code review ACK 5506ecfe7a65d5705616bc048f2f1735b89993fb,https://github.com/bitcoin/bitcoin/pull/17342#issuecomment-551028524,551028524,
DrahtBot,2019-11-07 14:27:05,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/17342#issuecomment-551101909,551101909,
MarcoFalke,2019-11-07 15:06:48,"ACK 5506ecfe7a65d5705616bc048f2f1735b89993fb ü•ê\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK 5506ecfe7a65d5705616bc048f2f1735b89993fb ü•ê\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiO9QwAz6nYOBxbVWtpsV2BAXLethFVuhGT9eD0joGWjF3ZFJpwXxeEck",https://github.com/bitcoin/bitcoin/pull/17342#issuecomment-551118692,551118692,
promag,2019-11-06 09:01:33,"1856073d6e8c774cc0a606275f264133884ef7bd\n\nnit, is this a new format? The space makes sense when the initialization comes after an annotation but in this case we don't add the space.",https://github.com/bitcoin/bitcoin/pull/17342#discussion_r342979791,342979791,src/validation.cpp
promag,2019-11-06 09:02:59,"nit, since you are touching this, `++i`?",https://github.com/bitcoin/bitcoin/pull/17342#discussion_r342980374,342980374,src/test/setup_common.cpp
promag,2019-11-06 09:25:46,"6e6cb418accf9286148cff9f1966fca27d38e0d7\n\nLocally it builds if `#include <validation.h>` is removed.",https://github.com/bitcoin/bitcoin/pull/17342#discussion_r342990513,342990513,src/test/checkqueue_tests.cpp
laanwj,2019-11-06 09:35:51,"come on, this doesn't matter for integers",https://github.com/bitcoin/bitcoin/pull/17342#discussion_r342995288,342995288,src/test/setup_common.cpp
jnewbery,2019-11-06 20:04:56,fixed,https://github.com/bitcoin/bitcoin/pull/17342#discussion_r343301495,343301495,src/validation.cpp
jnewbery,2019-11-06 20:05:02,fixed,https://github.com/bitcoin/bitcoin/pull/17342#discussion_r343301535,343301535,src/test/setup_common.cpp
jnewbery,2019-11-06 20:05:06,fixed,https://github.com/bitcoin/bitcoin/pull/17342#discussion_r343301563,343301563,src/test/checkqueue_tests.cpp
MarcoFalke,2019-11-07 15:11:34,style-nit: compile time constants are generally ALL_UPPER_CASE,https://github.com/bitcoin/bitcoin/pull/17342#discussion_r343703206,343703206,src/test/setup_common.cpp
