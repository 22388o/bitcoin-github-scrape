[
  {
    "sha": "cdfb8e7afa7648405dd6b957f47b1c7ab566a076",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGZiOGU3YWZhNzY0ODQwNWRkNmI5NTdmNDdiMWM3YWI1NjZhMDc2",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-17T02:03:16Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-04-06T13:58:51Z"
      },
      "message": "tests: Add fuzzing harness for HTTPRequest, libevent's evhttp and related functions",
      "tree": {
        "sha": "037b12555949782db2977d8626ff4c5bf7b9c363",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/037b12555949782db2977d8626ff4c5bf7b9c363"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cdfb8e7afa7648405dd6b957f47b1c7ab566a076",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdfb8e7afa7648405dd6b957f47b1c7ab566a076",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cdfb8e7afa7648405dd6b957f47b1c7ab566a076",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdfb8e7afa7648405dd6b957f47b1c7ab566a076/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "299544f9c5375810f3b4f70e68d2340fe689108a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/299544f9c5375810f3b4f70e68d2340fe689108a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/299544f9c5375810f3b4f70e68d2340fe689108a"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 67,
      "deletions": 4
    },
    "files": [
      {
        "sha": "cbce32429dca593c87384ae4318778e2475e8866",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdfb8e7afa7648405dd6b957f47b1c7ab566a076/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdfb8e7afa7648405dd6b957f47b1c7ab566a076/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=cdfb8e7afa7648405dd6b957f47b1c7ab566a076",
        "patch": "@@ -38,6 +38,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/flatfile \\\n   test/fuzz/float \\\n   test/fuzz/hex \\\n+  test/fuzz/http_request \\\n   test/fuzz/integer \\\n   test/fuzz/inv_deserialize \\\n   test/fuzz/key \\\n@@ -489,6 +490,12 @@ test_fuzz_hex_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_hex_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_hex_SOURCES = test/fuzz/hex.cpp\n \n+test_fuzz_http_request_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_http_request_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_http_request_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_http_request_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_http_request_SOURCES = test/fuzz/http_request.cpp\n+\n test_fuzz_integer_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_integer_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_integer_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "7282b517f42d665521e56aedfda3c8ef51acdbc3",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdfb8e7afa7648405dd6b957f47b1c7ab566a076/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdfb8e7afa7648405dd6b957f47b1c7ab566a076/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=cdfb8e7afa7648405dd6b957f47b1c7ab566a076",
        "patch": "@@ -189,7 +189,7 @@ static bool InitHTTPAllowList()\n }\n \n /** HTTP request method as string - use for logging only */\n-static std::string RequestMethodString(HTTPRequest::RequestMethod m)\n+std::string RequestMethodString(HTTPRequest::RequestMethod m)\n {\n     switch (m) {\n     case HTTPRequest::GET:\n@@ -510,10 +510,10 @@ void HTTPEvent::trigger(struct timeval* tv)\n     else\n         evtimer_add(ev, tv); // trigger after timeval passed\n }\n-HTTPRequest::HTTPRequest(struct evhttp_request* _req) : req(_req),\n-                                                       replySent(false)\n+HTTPRequest::HTTPRequest(struct evhttp_request* _req, bool _replySent) : req(_req), replySent(_replySent)\n {\n }\n+\n HTTPRequest::~HTTPRequest()\n {\n     if (!replySent) {"
      },
      {
        "sha": "c25ea7a8fb129f37cf054d583127da4af158dc8b",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdfb8e7afa7648405dd6b957f47b1c7ab566a076/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdfb8e7afa7648405dd6b957f47b1c7ab566a076/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=cdfb8e7afa7648405dd6b957f47b1c7ab566a076",
        "patch": "@@ -60,7 +60,7 @@ class HTTPRequest\n     bool replySent;\n \n public:\n-    explicit HTTPRequest(struct evhttp_request* req);\n+    explicit HTTPRequest(struct evhttp_request* req, bool replySent = false);\n     ~HTTPRequest();\n \n     enum RequestMethod {"
      },
      {
        "sha": "4104c5574db6ddab91796a45c225b5aa3aec2b2f",
        "filename": "src/test/fuzz/http_request.cpp",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdfb8e7afa7648405dd6b957f47b1c7ab566a076/src/test/fuzz/http_request.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdfb8e7afa7648405dd6b957f47b1c7ab566a076/src/test/fuzz/http_request.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/http_request.cpp?ref=cdfb8e7afa7648405dd6b957f47b1c7ab566a076",
        "patch": "@@ -0,0 +1,56 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <httpserver.h>\n+#include <netaddress.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <event2/buffer.h>\n+#include <event2/http.h>\n+#include <event2/http_struct.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+extern \"C\" int evhttp_parse_firstline_(struct evhttp_request*, struct evbuffer*);\n+extern \"C\" int evhttp_parse_headers_(struct evhttp_request*, struct evbuffer*);\n+std::string RequestMethodString(HTTPRequest::RequestMethod m);\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    evhttp_request* evreq = evhttp_request_new(nullptr, nullptr);\n+    assert(evreq != nullptr);\n+    evreq->kind = EVHTTP_REQUEST;\n+    evbuffer* evbuf = evbuffer_new();\n+    assert(evbuf != nullptr);\n+    const std::vector<uint8_t> http_buffer = ConsumeRandomLengthByteVector(fuzzed_data_provider, 4096);\n+    evbuffer_add(evbuf, http_buffer.data(), http_buffer.size());\n+    if (evhttp_parse_firstline_(evreq, evbuf) != 1 || evhttp_parse_headers_(evreq, evbuf) != 1) {\n+        evbuffer_free(evbuf);\n+        evhttp_request_free(evreq);\n+        return;\n+    }\n+\n+    HTTPRequest http_request{evreq, true};\n+    const HTTPRequest::RequestMethod request_method = http_request.GetRequestMethod();\n+    (void)RequestMethodString(request_method);\n+    (void)http_request.GetURI();\n+    (void)http_request.GetHeader(\"Host\");\n+    const std::string header = fuzzed_data_provider.ConsumeRandomLengthString(16);\n+    (void)http_request.GetHeader(header);\n+    (void)http_request.WriteHeader(header, fuzzed_data_provider.ConsumeRandomLengthString(16));\n+    (void)http_request.GetHeader(header);\n+    const std::string body = http_request.ReadBody();\n+    assert(body.empty());\n+    const CService service = http_request.GetPeer();\n+    assert(service.ToString() == \"[::]:0\");\n+\n+    evbuffer_free(evbuf);\n+    evhttp_request_free(evreq);\n+}"
      }
    ]
  }
]