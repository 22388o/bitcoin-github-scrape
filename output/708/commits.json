[
  {
    "sha": "e9a0e4d7a25f2a41641ce46011cabe1195a77285",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOWEwZTRkN2EyNWYyYTQxNjQxY2U0NjAxMWNhYmUxMTk1YTc3Mjg1",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-05-27T04:19:01Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-07-05T05:21:34Z"
      },
      "message": "Execute command specified by -coinbaser when creating a new block, which can output data to control where the generation goes",
      "tree": {
        "sha": "56814cac40d75fd0ed50a1d0e1fa55ce83f0f1a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56814cac40d75fd0ed50a1d0e1fa55ce83f0f1a4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9a0e4d7a25f2a41641ce46011cabe1195a77285",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9a0e4d7a25f2a41641ce46011cabe1195a77285",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e9a0e4d7a25f2a41641ce46011cabe1195a77285",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9a0e4d7a25f2a41641ce46011cabe1195a77285/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce148944c776ae8e91cc058f44ddce356c7cebc9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce148944c776ae8e91cc058f44ddce356c7cebc9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce148944c776ae8e91cc058f44ddce356c7cebc9"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 67,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a98a5b0d6430b40aa12de8337bb2c0c7bd7699ad",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 67,
        "deletions": 1,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9a0e4d7a25f2a41641ce46011cabe1195a77285/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9a0e4d7a25f2a41641ce46011cabe1195a77285/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e9a0e4d7a25f2a41641ce46011cabe1195a77285",
        "patch": "@@ -3224,6 +3224,66 @@ class COrphan\n };\n \n \n+#ifndef __WXMSW__\n+int DoCoinbaser_I(CBlock* pblock, uint64 nTotal, FILE* file)\n+{\n+    int nCount;\n+    if (fscanf(file, \"%d\\n\", &nCount) != 1)\n+    {\n+        printf(\"DoCoinbaser(): failed to fscanf count\\n\");\n+        return -2;\n+    }\n+    pblock->vtx[0].vout.resize(nCount + 1);\n+    uint64 nDistributed = 0;\n+    for (int i = 1; i <= nCount; ++i)\n+    {\n+        uint64 nValue;\n+        if (fscanf(file, \"%\" PRI64u \"\\n\", &nValue) != 1)\n+        {\n+            printf(\"DoCoinbaser(): failed to fscanf amount for transaction #%d\\n\", i);\n+            return -(0x1000 | i);\n+        }\n+        pblock->vtx[0].vout[i].nValue = nValue;\n+        nDistributed += nValue;\n+        char strAddr[35];\n+        if (fscanf(file, \"%34s\\n\", strAddr) != 1)\n+        {\n+            printf(\"DoCoinbaser(): failed to fscanf address for transaction #%d\\n\", i);\n+            return -(0x2000 | i);\n+        }\n+        if (!pblock->vtx[0].vout[i].scriptPubKey.SetBitcoinAddress(string(strAddr)))\n+        {\n+            printf(\"DoCoinbaser(): invalid bitcoin address for transaction #%d\\n\", i);\n+            return -(0x3000 | i);\n+        }\n+    }\n+    if (nTotal < nDistributed)\n+    {\n+        printf(\"DoCoinbaser(): attempt to distribute %\" PRI64u \"/%\" PRI64u \"\\n\", nDistributed, nTotal);\n+        return -3;\n+    }\n+    uint64 nMine = nTotal - nDistributed;\n+    printf(\"DoCoinbaser(): total distributed: %\" PRI64u \"/%\" PRI64u \" = %\" PRI64u \" for me\\n\", nDistributed, nTotal, nMine);\n+    pblock->vtx[0].vout[0].nValue = nMine;\n+    return 0;\n+}\n+\n+int DoCoinbaser(CBlock* pblock, uint64 nTotal)\n+{\n+    FILE* file = popen(mapArgs[\"-coinbaser\"].c_str(), \"r\");\n+    if (!file)\n+    {\n+        printf(\"DoCoinbaser(): failed to popen: %s\", strerror(errno));\n+        return -1;\n+    }\n+    int rv = DoCoinbaser_I(pblock, nTotal, file);\n+    pclose(file);\n+    if (rv)\n+        pblock->vtx[0].vout.resize(1);\n+    return rv;\n+}\n+#endif\n+\n CBlock* CreateNewBlock(CReserveKey& reservekey)\n {\n     CBlockIndex* pindexPrev = pindexBest;\n@@ -3359,7 +3419,12 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n             }\n         }\n     }\n-    pblock->vtx[0].vout[0].nValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n+    int64 nBlkValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n+    pblock->vtx[0].vout[0].nValue = nBlkValue;\n+#ifndef __WXMSW__\n+    if (mapArgs.count(\"-coinbaser\"))\n+        DoCoinbaser(&*pblock, nBlkValue);\n+#endif\n \n     // Fill in header\n     pblock->hashPrevBlock  = pindexPrev->GetBlockHash();\n@@ -3368,6 +3433,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n     pblock->nBits          = GetNextWorkRequired(pindexPrev);\n     pblock->nNonce         = 0;\n \n+    pblock->print();\n     return pblock.release();\n }\n "
      }
    ]
  },
  {
    "sha": "b3fb0d04fc17948b513d9f483f98599975b1683c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiM2ZiMGQwNGZjMTc5NDhiNTEzZDlmNDgzZjk4NTk5OTc1YjE2ODNj",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-05-27T04:19:42Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-07-05T05:21:41Z"
      },
      "message": "coinbaser: replace %d in command line with available funds",
      "tree": {
        "sha": "1236110ac6e344816bdfddbc6a53b0cc73a55f08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1236110ac6e344816bdfddbc6a53b0cc73a55f08"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b3fb0d04fc17948b513d9f483f98599975b1683c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3fb0d04fc17948b513d9f483f98599975b1683c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b3fb0d04fc17948b513d9f483f98599975b1683c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3fb0d04fc17948b513d9f483f98599975b1683c/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e9a0e4d7a25f2a41641ce46011cabe1195a77285",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9a0e4d7a25f2a41641ce46011cabe1195a77285",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e9a0e4d7a25f2a41641ce46011cabe1195a77285"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 30,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b7848c37f3db08e68ca3112f7e398f1fbe14209f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 2,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b3fb0d04fc17948b513d9f483f98599975b1683c/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b3fb0d04fc17948b513d9f483f98599975b1683c/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=b3fb0d04fc17948b513d9f483f98599975b1683c",
        "patch": "@@ -3270,13 +3270,41 @@ int DoCoinbaser_I(CBlock* pblock, uint64 nTotal, FILE* file)\n \n int DoCoinbaser(CBlock* pblock, uint64 nTotal)\n {\n-    FILE* file = popen(mapArgs[\"-coinbaser\"].c_str(), \"r\");\n+    string strCmd = mapArgs[\"-coinbaser\"];\n+    try\n+    {\n+        char strTotal[11];\n+        int nTotalLen = snprintf(strTotal, 11, \"%\" PRI64u, nTotal);\n+        if (nTotalLen < 1 || nTotalLen > 10)\n+        {\n+            strTotal[0] = '\\0';\n+            nTotalLen = 0;\n+        }\n+        string::size_type nPos;\n+        while ((nPos = strCmd.find(\"%d\")) != string::npos)\n+        {\n+            strCmd.replace(nPos, 2, strTotal, nTotalLen);\n+        }\n+    }\n+    catch (...)\n+    {\n+        return 1;\n+    }\n+    FILE* file = popen(strCmd.c_str(), \"r\");\n     if (!file)\n     {\n         printf(\"DoCoinbaser(): failed to popen: %s\", strerror(errno));\n         return -1;\n     }\n-    int rv = DoCoinbaser_I(pblock, nTotal, file);\n+    int rv;\n+    try\n+    {\n+        rv = DoCoinbaser_I(pblock, nTotal, file);\n+    }\n+    catch (...)\n+    {\n+        rv = 1;\n+    }\n     pclose(file);\n     if (rv)\n         pblock->vtx[0].vout.resize(1);"
      }
    ]
  },
  {
    "sha": "4e6e221902f0fdc3d599391c533779557381d718",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZTZlMjIxOTAyZjBmZGMzZDU5OTM5MWM1MzM3Nzk1NTczODFkNzE4",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-07-05T05:17:47Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-07-05T05:21:55Z"
      },
      "message": "Support for TCP server coinbasers",
      "tree": {
        "sha": "85bcd7f5e7a8e2528d920cb8bebb475d76e4facd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85bcd7f5e7a8e2528d920cb8bebb475d76e4facd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e6e221902f0fdc3d599391c533779557381d718",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e6e221902f0fdc3d599391c533779557381d718",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4e6e221902f0fdc3d599391c533779557381d718",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e6e221902f0fdc3d599391c533779557381d718/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b3fb0d04fc17948b513d9f483f98599975b1683c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3fb0d04fc17948b513d9f483f98599975b1683c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b3fb0d04fc17948b513d9f483f98599975b1683c"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 22,
      "deletions": 1
    },
    "files": [
      {
        "sha": "83454629fce236c1de35fec23625358baeeecd0b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 1,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e6e221902f0fdc3d599391c533779557381d718/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e6e221902f0fdc3d599391c533779557381d718/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=4e6e221902f0fdc3d599391c533779557381d718",
        "patch": "@@ -3271,6 +3271,23 @@ int DoCoinbaser_I(CBlock* pblock, uint64 nTotal, FILE* file)\n int DoCoinbaser(CBlock* pblock, uint64 nTotal)\n {\n     string strCmd = mapArgs[\"-coinbaser\"];\n+    FILE* file = NULL;\n+    if (!strCmd.compare(0, 4, \"tcp:\"))\n+    {\n+        CAddress addrCoinbaser(strCmd.substr(4), true, 0);\n+        SOCKET hSocket;\n+        if (!ConnectSocket(addrCoinbaser, hSocket))\n+        {\n+            perror(\"DoCoinbaser(): failed to connect\");\n+            return -3;\n+        }\n+        file = fdopen(hSocket, \"r+\");\n+        if (file)\n+            fprintf(file, \"total: %\" PRI64u \"\\n\\n\", nTotal);\n+    }\n+    else\n+    {\n+\n     try\n     {\n         char strTotal[11];\n@@ -3290,12 +3307,16 @@ int DoCoinbaser(CBlock* pblock, uint64 nTotal)\n     {\n         return 1;\n     }\n-    FILE* file = popen(strCmd.c_str(), \"r\");\n+    file = popen(strCmd.c_str(), \"r\");\n+\n+    }\n+\n     if (!file)\n     {\n         printf(\"DoCoinbaser(): failed to popen: %s\", strerror(errno));\n         return -1;\n     }\n+\n     int rv;\n     try\n     {"
      }
    ]
  },
  {
    "sha": "d6cc5ef85bee3b8b9c78b17cf7acbeb4d0d35b49",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNmNjNWVmODViZWUzYjhiOWM3OGIxN2NmN2FjYmViNGQwZDM1YjQ5",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-07-25T15:59:41Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-07-25T15:59:41Z"
      },
      "message": "Save coinbase, not just extraNonce",
      "tree": {
        "sha": "a5b6ee36bc86d253e42a0560a18846cf612e8725",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a5b6ee36bc86d253e42a0560a18846cf612e8725"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6cc5ef85bee3b8b9c78b17cf7acbeb4d0d35b49",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6cc5ef85bee3b8b9c78b17cf7acbeb4d0d35b49",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d6cc5ef85bee3b8b9c78b17cf7acbeb4d0d35b49",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6cc5ef85bee3b8b9c78b17cf7acbeb4d0d35b49/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4e6e221902f0fdc3d599391c533779557381d718",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e6e221902f0fdc3d599391c533779557381d718",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4e6e221902f0fdc3d599391c533779557381d718"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "0cdd85e5413b84c53842ed0504e9fed2831e5269",
        "filename": "src/rpc.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6cc5ef85bee3b8b9c78b17cf7acbeb4d0d35b49/src/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6cc5ef85bee3b8b9c78b17cf7acbeb4d0d35b49/src/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.cpp?ref=d6cc5ef85bee3b8b9c78b17cf7acbeb4d0d35b49",
        "patch": "@@ -1318,7 +1318,8 @@ Value getwork(const Array& params, bool fHelp)\n     if (IsInitialBlockDownload())\n         throw JSONRPCError(-10, \"Bitcoin is downloading blocks...\");\n \n-    static map<uint256, pair<CBlock*, unsigned int> > mapNewBlock;\n+    typedef map<uint256, pair<CBlock*, CScript> > mapNewBlock_t;\n+    static mapNewBlock_t mapNewBlock;\n     static vector<CBlock*> vNewBlock;\n     static CReserveKey reservekey;\n \n@@ -1361,7 +1362,7 @@ Value getwork(const Array& params, bool fHelp)\n         IncrementExtraNonce(pblock, pindexPrev, nExtraNonce, nPrevTime);\n \n         // Save\n-        mapNewBlock[pblock->hashMerkleRoot] = make_pair(pblock, nExtraNonce);\n+        mapNewBlock[pblock->hashMerkleRoot] = make_pair(pblock, pblock->vtx[0].vin[0].scriptSig);\n \n         // Prebuild hash buffers\n         char pmidstate[32];\n@@ -1394,11 +1395,10 @@ Value getwork(const Array& params, bool fHelp)\n         if (!mapNewBlock.count(pdata->hashMerkleRoot))\n             return false;\n         CBlock* pblock = mapNewBlock[pdata->hashMerkleRoot].first;\n-        unsigned int nExtraNonce = mapNewBlock[pdata->hashMerkleRoot].second;\n \n         pblock->nTime = pdata->nTime;\n         pblock->nNonce = pdata->nNonce;\n-        pblock->vtx[0].vin[0].scriptSig = CScript() << pblock->nBits << CBigNum(nExtraNonce);\n+        pblock->vtx[0].vin[0].scriptSig = mapNewBlock[pdata->hashMerkleRoot].second;\n         pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n \n         return CheckWork(pblock, reservekey);"
      }
    ]
  },
  {
    "sha": "29b32459f73ca9378a3a8ba47db8360cf7ba9beb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOWIzMjQ1OWY3M2NhOTM3OGEzYThiYTQ3ZGI4MzYwY2Y3YmE5YmVi",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-08-03T17:48:16Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-08-03T17:48:16Z"
      },
      "message": "Replace nBits in coinbase scriptSig with arbitrary data set by setworkaux RPC call",
      "tree": {
        "sha": "582824a35f98cd899259fced6b006cf024d4f034",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/582824a35f98cd899259fced6b006cf024d4f034"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29b32459f73ca9378a3a8ba47db8360cf7ba9beb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29b32459f73ca9378a3a8ba47db8360cf7ba9beb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/29b32459f73ca9378a3a8ba47db8360cf7ba9beb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29b32459f73ca9378a3a8ba47db8360cf7ba9beb/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d6cc5ef85bee3b8b9c78b17cf7acbeb4d0d35b49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6cc5ef85bee3b8b9c78b17cf7acbeb4d0d35b49",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d6cc5ef85bee3b8b9c78b17cf7acbeb4d0d35b49"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 35,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6614d421ab35d60baed1a4e8eba64cdde18482c6",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29b32459f73ca9378a3a8ba47db8360cf7ba9beb/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29b32459f73ca9378a3a8ba47db8360cf7ba9beb/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=29b32459f73ca9378a3a8ba47db8360cf7ba9beb",
        "patch": "@@ -3487,6 +3487,8 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n }\n \n \n+std::map<std::string, CScript> mapAuxCoinbases;\n+\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce, int64& nPrevTime)\n {\n     // Update nExtraNonce\n@@ -3496,7 +3498,16 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n         nExtraNonce = 1;\n         nPrevTime = nNow;\n     }\n-    pblock->vtx[0].vin[0].scriptSig = CScript() << pblock->nBits << CBigNum(nExtraNonce);\n+\n+    CScript &scriptSig = pblock->vtx[0].vin[0].scriptSig;\n+    scriptSig = CScript();\n+\n+    map<std::string, CScript>::iterator it;\n+    for (it = mapAuxCoinbases.begin() ; it != mapAuxCoinbases.end(); ++it)\n+        scriptSig += (*it).second;\n+\n+    scriptSig << CBigNum(nExtraNonce);\n+\n     pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n }\n "
      },
      {
        "sha": "a0f5b000330646c8560f850ba1654894e5a9cbf3",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29b32459f73ca9378a3a8ba47db8360cf7ba9beb/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29b32459f73ca9378a3a8ba47db8360cf7ba9beb/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=29b32459f73ca9378a3a8ba47db8360cf7ba9beb",
        "patch": "@@ -103,6 +103,7 @@ std::string SendMoneyToBitcoinAddress(std::string strAddress, int64 nValue, CWal\n void GenerateBitcoins(bool fGenerate);\n void ThreadBitcoinMiner(void* parg);\n CBlock* CreateNewBlock(CReserveKey& reservekey);\n+extern std::map<std::string, CScript> mapAuxCoinbases;\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce, int64& nPrevTime);\n void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash1);\n bool CheckWork(CBlock* pblock, CReserveKey& reservekey);"
      },
      {
        "sha": "61b870004f1eab939d7463c82bdef13fba51cb68",
        "filename": "src/rpc.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29b32459f73ca9378a3a8ba47db8360cf7ba9beb/src/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29b32459f73ca9378a3a8ba47db8360cf7ba9beb/src/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.cpp?ref=29b32459f73ca9378a3a8ba47db8360cf7ba9beb",
        "patch": "@@ -1300,6 +1300,27 @@ Value validateaddress(const Array& params, bool fHelp)\n }\n \n \n+Value setworkaux(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"setworkaux <id> [data]\\n\"\n+            \"If [data] is not specified, deletes aux.\\n\"\n+        );\n+\n+    std::string strId = params[0].get_str();\n+    if (params.size() > 1)\n+    {\n+        std::vector<unsigned char> vchData = ParseHex(params[1].get_str());\n+        mapAuxCoinbases[strId] = CScript(vchData);\n+    }\n+    else\n+        mapAuxCoinbases.erase(strId);\n+\n+    return true;\n+}\n+\n+\n Value getwork(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)\n@@ -1456,6 +1477,7 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"sendmany\",              &sendmany),\n     make_pair(\"gettransaction\",        &gettransaction),\n     make_pair(\"listtransactions\",      &listtransactions),\n+    make_pair(\"setworkaux\",            &setworkaux),\n     make_pair(\"getwork\",               &getwork),\n     make_pair(\"listaccounts\",          &listaccounts),\n     make_pair(\"settxfee\",              &settxfee),"
      }
    ]
  },
  {
    "sha": "9c651437cae7822dedc1ff03c67b7537e0450c96",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YzY1MTQzN2NhZTc4MjJkZWRjMWZmMDNjNjdiNzUzN2UwNDUwYzk2",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-08-05T01:58:58Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-08-05T02:17:51Z"
      },
      "message": "Bugfix/safeguard: never create a coinbase scriptSig over 100 bytes long",
      "tree": {
        "sha": "29088fc8b07601c86f38a88f19877e60645b8be0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29088fc8b07601c86f38a88f19877e60645b8be0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c651437cae7822dedc1ff03c67b7537e0450c96",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c651437cae7822dedc1ff03c67b7537e0450c96",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9c651437cae7822dedc1ff03c67b7537e0450c96",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c651437cae7822dedc1ff03c67b7537e0450c96/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29b32459f73ca9378a3a8ba47db8360cf7ba9beb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29b32459f73ca9378a3a8ba47db8360cf7ba9beb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29b32459f73ca9378a3a8ba47db8360cf7ba9beb"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "22b7d5ba6671d710ede65a551c746726d95c3db7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c651437cae7822dedc1ff03c67b7537e0450c96/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c651437cae7822dedc1ff03c67b7537e0450c96/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=9c651437cae7822dedc1ff03c67b7537e0450c96",
        "patch": "@@ -3500,13 +3500,14 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n     }\n \n     CScript &scriptSig = pblock->vtx[0].vin[0].scriptSig;\n-    scriptSig = CScript();\n+    scriptSig = CScript() << CBigNum(nExtraNonce);\n \n     map<std::string, CScript>::iterator it;\n     for (it = mapAuxCoinbases.begin() ; it != mapAuxCoinbases.end(); ++it)\n         scriptSig += (*it).second;\n \n-    scriptSig << CBigNum(nExtraNonce);\n+    if (scriptSig.size() > 100)\n+        scriptSig.resize(100);\n \n     pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n }"
      }
    ]
  },
  {
    "sha": "96f969314d0760b326b7c4c8e1025467032843bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NmY5NjkzMTRkMDc2MGIzMjZiN2M0YzhlMTAyNTQ2NzAzMjg0M2Jm",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-08-05T02:17:10Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-08-05T02:27:06Z"
      },
      "message": "Check for parse or overflow errors in setworkaux",
      "tree": {
        "sha": "de69fc2cd87c5c8f7bf7714ca95b692efcbb1d6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de69fc2cd87c5c8f7bf7714ca95b692efcbb1d6b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96f969314d0760b326b7c4c8e1025467032843bf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96f969314d0760b326b7c4c8e1025467032843bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/96f969314d0760b326b7c4c8e1025467032843bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96f969314d0760b326b7c4c8e1025467032843bf/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c651437cae7822dedc1ff03c67b7537e0450c96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c651437cae7822dedc1ff03c67b7537e0450c96",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c651437cae7822dedc1ff03c67b7537e0450c96"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 32,
      "deletions": 12
    },
    "files": [
      {
        "sha": "a315030357fd9f3ad0a8613f7f4bd4f0b6ddb0df",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 11,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96f969314d0760b326b7c4c8e1025467032843bf/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96f969314d0760b326b7c4c8e1025467032843bf/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=96f969314d0760b326b7c4c8e1025467032843bf",
        "patch": "@@ -3489,26 +3489,37 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n \n std::map<std::string, CScript> mapAuxCoinbases;\n \n-void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce, int64& nPrevTime)\n+CScript BuildCoinbaseScriptSig(unsigned int nExtraNonce, bool *pfOverflow)\n {\n-    // Update nExtraNonce\n-    int64 nNow = max(pindexPrev->GetMedianTimePast()+1, GetAdjustedTime());\n-    if (++nExtraNonce >= 0x7f && nNow > nPrevTime+1)\n-    {\n-        nExtraNonce = 1;\n-        nPrevTime = nNow;\n-    }\n-\n-    CScript &scriptSig = pblock->vtx[0].vin[0].scriptSig;\n-    scriptSig = CScript() << CBigNum(nExtraNonce);\n+    CScript scriptSig = CScript() << CBigNum(nExtraNonce);\n \n     map<std::string, CScript>::iterator it;\n     for (it = mapAuxCoinbases.begin() ; it != mapAuxCoinbases.end(); ++it)\n         scriptSig += (*it).second;\n \n     if (scriptSig.size() > 100)\n+    {\n         scriptSig.resize(100);\n+        if (pfOverflow)\n+            *pfOverflow = true;\n+    }\n+    else\n+        if (pfOverflow)\n+            *pfOverflow = false;\n \n+    return scriptSig;\n+}\n+\n+void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce, int64& nPrevTime)\n+{\n+    // Update nExtraNonce\n+    int64 nNow = max(pindexPrev->GetMedianTimePast()+1, GetAdjustedTime());\n+    if (++nExtraNonce >= 0x7f && nNow > nPrevTime+1)\n+    {\n+        nExtraNonce = 1;\n+        nPrevTime = nNow;\n+    }\n+    pblock->vtx[0].vin[0].scriptSig = BuildCoinbaseScriptSig(nExtraNonce);\n     pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n }\n "
      },
      {
        "sha": "bc3035cea4b9c3145ea4ca07192efabc4161e580",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96f969314d0760b326b7c4c8e1025467032843bf/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96f969314d0760b326b7c4c8e1025467032843bf/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=96f969314d0760b326b7c4c8e1025467032843bf",
        "patch": "@@ -104,6 +104,7 @@ void GenerateBitcoins(bool fGenerate);\n void ThreadBitcoinMiner(void* parg);\n CBlock* CreateNewBlock(CReserveKey& reservekey);\n extern std::map<std::string, CScript> mapAuxCoinbases;\n+CScript BuildCoinbaseScriptSig(unsigned int nExtraNonce, bool *pfOverflow = NULL);\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce, int64& nPrevTime);\n void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash1);\n bool CheckWork(CBlock* pblock, CReserveKey& reservekey);"
      },
      {
        "sha": "30099cd434aa1cd003a311065519b4254bf52c6a",
        "filename": "src/rpc.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96f969314d0760b326b7c4c8e1025467032843bf/src/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96f969314d0760b326b7c4c8e1025467032843bf/src/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.cpp?ref=96f969314d0760b326b7c4c8e1025467032843bf",
        "patch": "@@ -1311,8 +1311,16 @@ Value setworkaux(const Array& params, bool fHelp)\n     std::string strId = params[0].get_str();\n     if (params.size() > 1)\n     {\n-        std::vector<unsigned char> vchData = ParseHex(params[1].get_str());\n+        std::string strData = params[1].get_str();\n+        std::vector<unsigned char> vchData = ParseHex(strData);\n+        if (vchData.size() * 2 != strData.size())\n+            throw JSONRPCError(-8, \"Failed to parse data as hexadecimal\");\n+        CScript scriptBackup = mapAuxCoinbases[strId];\n         mapAuxCoinbases[strId] = CScript(vchData);\n+        bool fOverflow;\n+        BuildCoinbaseScriptSig(UINT_MAX, &fOverflow);\n+        if (fOverflow)\n+            throw JSONRPCError(-7, \"Change would overflow coinbase script\");\n     }\n     else\n         mapAuxCoinbases.erase(strId);"
      }
    ]
  },
  {
    "sha": "3c54a7b92380a8703ad94a46a756c1993daefe5d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzU0YTdiOTIzODBhODcwM2FkOTRhNDZhNzU2YzE5OTNkYWVmZTVk",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-10-03T23:02:27Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-10-03T23:21:28Z"
      },
      "message": "Merge commit '96f9693' into coinbaser\n\nConflicts:\n\tsrc/main.cpp\n\tsrc/main.h\n\tsrc/rpc.cpp",
      "tree": {
        "sha": "5212df3f0698efb36d234610c59c4d8e7f62c48e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5212df3f0698efb36d234610c59c4d8e7f62c48e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c54a7b92380a8703ad94a46a756c1993daefe5d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c54a7b92380a8703ad94a46a756c1993daefe5d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c54a7b92380a8703ad94a46a756c1993daefe5d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c54a7b92380a8703ad94a46a756c1993daefe5d/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7eb151ad0ed441d6fd598551059a9bbfb09e99e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7eb151ad0ed441d6fd598551059a9bbfb09e99e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7eb151ad0ed441d6fd598551059a9bbfb09e99e"
      },
      {
        "sha": "96f969314d0760b326b7c4c8e1025467032843bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96f969314d0760b326b7c4c8e1025467032843bf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/96f969314d0760b326b7c4c8e1025467032843bf"
      }
    ],
    "stats": {
      "total": 200,
      "additions": 194,
      "deletions": 6
    },
    "files": [
      {
        "sha": "bed683df7308df8b74e2aeedb6a68f3ab708d938",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 162,
        "deletions": 6,
        "changes": 168,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c54a7b92380a8703ad94a46a756c1993daefe5d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c54a7b92380a8703ad94a46a756c1993daefe5d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3c54a7b92380a8703ad94a46a756c1993daefe5d",
        "patch": "@@ -7,6 +7,9 @@\n #include \"net.h\"\n #include \"init.h\"\n #include \"cryptopp/sha.h\"\n+\n+#include <limits.h>\n+\n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n \n@@ -2652,6 +2655,117 @@ class COrphan\n };\n \n \n+#ifndef __WXMSW__\n+int DoCoinbaser_I(CBlock* pblock, uint64 nTotal, FILE* file)\n+{\n+    int nCount;\n+    if (fscanf(file, \"%d\\n\", &nCount) != 1)\n+    {\n+        printf(\"DoCoinbaser(): failed to fscanf count\\n\");\n+        return -2;\n+    }\n+    pblock->vtx[0].vout.resize(nCount + 1);\n+    uint64 nDistributed = 0;\n+    for (int i = 1; i <= nCount; ++i)\n+    {\n+        uint64 nValue;\n+        if (fscanf(file, \"%\" PRI64u \"\\n\", &nValue) != 1)\n+        {\n+            printf(\"DoCoinbaser(): failed to fscanf amount for transaction #%d\\n\", i);\n+            return -(0x1000 | i);\n+        }\n+        pblock->vtx[0].vout[i].nValue = nValue;\n+        nDistributed += nValue;\n+        char strAddr[35];\n+        if (fscanf(file, \"%34s\\n\", strAddr) != 1)\n+        {\n+            printf(\"DoCoinbaser(): failed to fscanf address for transaction #%d\\n\", i);\n+            return -(0x2000 | i);\n+        }\n+        CBitcoinAddress address;\n+        if (!address.SetString(strAddr))\n+        {\n+            printf(\"DoCoinbaser(): invalid bitcoin address for transaction #%d\\n\", i);\n+            return -(0x3000 | i);\n+        }\n+        pblock->vtx[0].vout[i].scriptPubKey.SetBitcoinAddress(address);\n+    }\n+    if (nTotal < nDistributed)\n+    {\n+        printf(\"DoCoinbaser(): attempt to distribute %\" PRI64u \"/%\" PRI64u \"\\n\", nDistributed, nTotal);\n+        return -3;\n+    }\n+    uint64 nMine = nTotal - nDistributed;\n+    printf(\"DoCoinbaser(): total distributed: %\" PRI64u \"/%\" PRI64u \" = %\" PRI64u \" for me\\n\", nDistributed, nTotal, nMine);\n+    pblock->vtx[0].vout[0].nValue = nMine;\n+    return 0;\n+}\n+\n+int DoCoinbaser(CBlock* pblock, uint64 nTotal)\n+{\n+    string strCmd = mapArgs[\"-coinbaser\"];\n+    FILE* file = NULL;\n+    if (!strCmd.compare(0, 4, \"tcp:\"))\n+    {\n+        CAddress addrCoinbaser(strCmd.substr(4), true, 0);\n+        SOCKET hSocket;\n+        if (!ConnectSocket(addrCoinbaser, hSocket))\n+        {\n+            perror(\"DoCoinbaser(): failed to connect\");\n+            return -3;\n+        }\n+        file = fdopen(hSocket, \"r+\");\n+        if (file)\n+            fprintf(file, \"total: %\" PRI64u \"\\n\\n\", nTotal);\n+    }\n+    else\n+    {\n+\n+    try\n+    {\n+        char strTotal[11];\n+        int nTotalLen = snprintf(strTotal, 11, \"%\" PRI64u, nTotal);\n+        if (nTotalLen < 1 || nTotalLen > 10)\n+        {\n+            strTotal[0] = '\\0';\n+            nTotalLen = 0;\n+        }\n+        string::size_type nPos;\n+        while ((nPos = strCmd.find(\"%d\")) != string::npos)\n+        {\n+            strCmd.replace(nPos, 2, strTotal, nTotalLen);\n+        }\n+    }\n+    catch (...)\n+    {\n+        return 1;\n+    }\n+    file = popen(strCmd.c_str(), \"r\");\n+\n+    }\n+\n+    if (!file)\n+    {\n+        printf(\"DoCoinbaser(): failed to popen: %s\", strerror(errno));\n+        return -1;\n+    }\n+\n+    int rv;\n+    try\n+    {\n+        rv = DoCoinbaser_I(pblock, nTotal, file);\n+    }\n+    catch (...)\n+    {\n+        rv = 1;\n+    }\n+    pclose(file);\n+    if (rv)\n+        pblock->vtx[0].vout.resize(1);\n+    return rv;\n+}\n+#endif\n+\n CBlock* CreateNewBlock(CReserveKey& reservekey)\n {\n     CBlockIndex* pindexPrev = pindexBest;\n@@ -2787,7 +2901,12 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n             }\n         }\n     }\n-    pblock->vtx[0].vout[0].nValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n+    int64 nBlkValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n+    pblock->vtx[0].vout[0].nValue = nBlkValue;\n+#ifndef __WXMSW__\n+    if (mapArgs.count(\"-coinbaser\"))\n+        DoCoinbaser(&*pblock, nBlkValue);\n+#endif\n \n     // Fill in header\n     pblock->hashPrevBlock  = pindexPrev->GetBlockHash();\n@@ -2796,21 +2915,58 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n     pblock->nBits          = GetNextWorkRequired(pindexPrev);\n     pblock->nNonce         = 0;\n \n+    pblock->print();\n     return pblock.release();\n }\n \n \n+std::map<std::string, CScript> mapAuxCoinbases;\n+\n+CScript BuildCoinbaseScriptSig(uint64 nTime, unsigned int nExtraNonce, bool *pfOverflow)\n+{\n+    CScript scriptSig = CScript() << nTime << CBigNum(nExtraNonce);\n+\n+    map<std::string, CScript>::iterator it;\n+    for (it = mapAuxCoinbases.begin() ; it != mapAuxCoinbases.end(); ++it)\n+        scriptSig += (*it).second;\n+\n+    if (scriptSig.size() > 100)\n+    {\n+        scriptSig.resize(100);\n+        if (pfOverflow)\n+            *pfOverflow = true;\n+    }\n+    else\n+        if (pfOverflow)\n+            *pfOverflow = false;\n+\n+    return scriptSig;\n+}\n+\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce)\n {\n     // Update nExtraNonce\n-    static uint256 hashPrevBlock;\n-    if (hashPrevBlock != pblock->hashPrevBlock)\n+    static uint64 nPrevTime = 0;\n+    static bool fBackward = false;\n+    uint64 nNow = GetTime();\n+    if (nNow > nPrevTime + 1)\n     {\n         nExtraNonce = 0;\n-        hashPrevBlock = pblock->hashPrevBlock;\n+        nPrevTime = nNow;\n+        fBackward = false;\n+    }\n+    else\n+    {\n+        if (nNow < nPrevTime && !fBackward)\n+        {\n+            printf(\"IncrementExtraNonce: WARNING: nNow moved backward: %d -> %d\\n\", nPrevTime, nNow);\n+            fBackward = true;\n+        }\n+        if (nExtraNonce == UINT_MAX)\n+            printf(\"IncrementExtraNonce: WARNING: nExtraNonce overflowing!\\n\");\n+        ++nExtraNonce;\n     }\n-    ++nExtraNonce;\n-    pblock->vtx[0].vin[0].scriptSig = CScript() << pblock->nTime << CBigNum(nExtraNonce);\n+    pblock->vtx[0].vin[0].scriptSig = BuildCoinbaseScriptSig(nNow, nExtraNonce);\n     pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n }\n "
      },
      {
        "sha": "791c52ab4360247336b080f4b3100ed3a6e274b1",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c54a7b92380a8703ad94a46a756c1993daefe5d/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c54a7b92380a8703ad94a46a756c1993daefe5d/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=3c54a7b92380a8703ad94a46a756c1993daefe5d",
        "patch": "@@ -94,6 +94,8 @@ bool ProcessMessages(CNode* pfrom);\n bool SendMessages(CNode* pto, bool fSendTrickle);\n void GenerateBitcoins(bool fGenerate, CWallet* pwallet);\n CBlock* CreateNewBlock(CReserveKey& reservekey);\n+extern std::map<std::string, CScript> mapAuxCoinbases;\n+CScript BuildCoinbaseScriptSig(uint64 nTime, unsigned int nExtraNonce, bool *pfOverflow = NULL);\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce);\n void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash1);\n bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey);"
      },
      {
        "sha": "2bc63bf806be2eea5fb0a89de11a947c9f6a35db",
        "filename": "src/rpc.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c54a7b92380a8703ad94a46a756c1993daefe5d/src/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c54a7b92380a8703ad94a46a756c1993daefe5d/src/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.cpp?ref=3c54a7b92380a8703ad94a46a756c1993daefe5d",
        "patch": "@@ -1480,6 +1480,35 @@ Value validateaddress(const Array& params, bool fHelp)\n }\n \n \n+Value setworkaux(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"setworkaux <id> [data]\\n\"\n+            \"If [data] is not specified, deletes aux.\\n\"\n+        );\n+\n+    std::string strId = params[0].get_str();\n+    if (params.size() > 1)\n+    {\n+        std::string strData = params[1].get_str();\n+        std::vector<unsigned char> vchData = ParseHex(strData);\n+        if (vchData.size() * 2 != strData.size())\n+            throw JSONRPCError(-8, \"Failed to parse data as hexadecimal\");\n+        CScript scriptBackup = mapAuxCoinbases[strId];\n+        mapAuxCoinbases[strId] = CScript(vchData);\n+        bool fOverflow;\n+        BuildCoinbaseScriptSig(0, UINT_MAX, &fOverflow);\n+        if (fOverflow)\n+            throw JSONRPCError(-7, \"Change would overflow coinbase script\");\n+    }\n+    else\n+        mapAuxCoinbases.erase(strId);\n+\n+    return true;\n+}\n+\n+\n Value getwork(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)\n@@ -1640,6 +1669,7 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"sendmany\",               &sendmany),\n     make_pair(\"gettransaction\",         &gettransaction),\n     make_pair(\"listtransactions\",       &listtransactions),\n+    make_pair(\"setworkaux\",             &setworkaux),\n     make_pair(\"getwork\",                &getwork),\n     make_pair(\"listaccounts\",           &listaccounts),\n     make_pair(\"settxfee\",               &settxfee),"
      }
    ]
  },
  {
    "sha": "a1efc8cb1014fa7d9734d0f5f7240dc0e9e216dd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMWVmYzhjYjEwMTRmYTdkOTczNGQwZjVmNzI0MGRjMGU5ZTIxNmRk",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-10-03T23:21:38Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-10-03T23:21:38Z"
      },
      "message": "Document -coinbaser option in --help",
      "tree": {
        "sha": "f21c95349327bfb3547a8c6c39e2b6466d703dc5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f21c95349327bfb3547a8c6c39e2b6466d703dc5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a1efc8cb1014fa7d9734d0f5f7240dc0e9e216dd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1efc8cb1014fa7d9734d0f5f7240dc0e9e216dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a1efc8cb1014fa7d9734d0f5f7240dc0e9e216dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1efc8cb1014fa7d9734d0f5f7240dc0e9e216dd/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c54a7b92380a8703ad94a46a756c1993daefe5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c54a7b92380a8703ad94a46a756c1993daefe5d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c54a7b92380a8703ad94a46a756c1993daefe5d"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "eab901ab48fb4f8bf01dcabe4df6e78ae96de4b0",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1efc8cb1014fa7d9734d0f5f7240dc0e9e216dd/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1efc8cb1014fa7d9734d0f5f7240dc0e9e216dd/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a1efc8cb1014fa7d9734d0f5f7240dc0e9e216dd",
        "patch": "@@ -199,6 +199,9 @@ bool AppInit2(int argc, char* argv[])\n             \"  -rpcport=<port>  \\t\\t  \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332)\\n\") +\n             \"  -rpcallowip=<ip> \\t\\t  \" + _(\"Allow JSON-RPC connections from specified IP address\\n\") +\n             \"  -rpcconnect=<ip> \\t  \"   + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\\n\") +\n+#ifndef __WXMSW__\n+            \"  -coinbaser=<cmd> \\t  \"   + _(\"Execute <cmd> to calculate coinbase payees\\n\") +\n+#endif\n             \"  -keypool=<n>     \\t  \"   + _(\"Set key pool size to <n> (default: 100)\\n\") +\n             \"  -rescan          \\t  \"   + _(\"Rescan the block chain for missing wallet transactions\\n\");\n "
      }
    ]
  },
  {
    "sha": "59806427d0f10328e0f97c45bd2017eb9dce870e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTgwNjQyN2QwZjEwMzI4ZTBmOTdjNDViZDIwMTdlYjlkY2U4NzBl",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-10-05T22:15:20Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-10-05T22:15:20Z"
      },
      "message": "Port coinbaser code to Windows",
      "tree": {
        "sha": "1fc05041791762f61a9b2053559728cfa4c37d41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1fc05041791762f61a9b2053559728cfa4c37d41"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59806427d0f10328e0f97c45bd2017eb9dce870e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59806427d0f10328e0f97c45bd2017eb9dce870e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/59806427d0f10328e0f97c45bd2017eb9dce870e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59806427d0f10328e0f97c45bd2017eb9dce870e/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a1efc8cb1014fa7d9734d0f5f7240dc0e9e216dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1efc8cb1014fa7d9734d0f5f7240dc0e9e216dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1efc8cb1014fa7d9734d0f5f7240dc0e9e216dd"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 14,
      "deletions": 7
    },
    "files": [
      {
        "sha": "6bd300447624b2b5e493fde362c99e26ce8edb33",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59806427d0f10328e0f97c45bd2017eb9dce870e/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59806427d0f10328e0f97c45bd2017eb9dce870e/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=59806427d0f10328e0f97c45bd2017eb9dce870e",
        "patch": "@@ -199,9 +199,7 @@ bool AppInit2(int argc, char* argv[])\n             \"  -rpcport=<port>  \\t\\t  \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332)\\n\") +\n             \"  -rpcallowip=<ip> \\t\\t  \" + _(\"Allow JSON-RPC connections from specified IP address\\n\") +\n             \"  -rpcconnect=<ip> \\t  \"   + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\\n\") +\n-#ifndef __WXMSW__\n             \"  -coinbaser=<cmd> \\t  \"   + _(\"Execute <cmd> to calculate coinbase payees\\n\") +\n-#endif\n             \"  -keypool=<n>     \\t  \"   + _(\"Set key pool size to <n> (default: 100)\\n\") +\n             \"  -rescan          \\t  \"   + _(\"Rescan the block chain for missing wallet transactions\\n\");\n "
      },
      {
        "sha": "126a7d11ab120fa04c9adf8a5a97ad27e7dd8d1b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 5,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59806427d0f10328e0f97c45bd2017eb9dce870e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59806427d0f10328e0f97c45bd2017eb9dce870e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=59806427d0f10328e0f97c45bd2017eb9dce870e",
        "patch": "@@ -8,6 +8,9 @@\n #include \"init.h\"\n #include \"cryptopp/sha.h\"\n \n+#ifdef __WXMSW__\n+#include <fcntl.h>\n+#endif\n #include <limits.h>\n \n #include <boost/filesystem.hpp>\n@@ -2655,7 +2658,6 @@ class COrphan\n };\n \n \n-#ifndef __WXMSW__\n int DoCoinbaser_I(CBlock* pblock, uint64 nTotal, FILE* file)\n {\n     int nCount;\n@@ -2714,7 +2716,17 @@ int DoCoinbaser(CBlock* pblock, uint64 nTotal)\n             perror(\"DoCoinbaser(): failed to connect\");\n             return -3;\n         }\n-        file = fdopen(hSocket, \"r+\");\n+#ifdef __WXMSW__\n+        int nSocket = _open_osfhandle((intptr_t)hSocket, _O_RDONLY | _O_TEXT);\n+        if (-1 == nSocket)\n+        {\n+            printf(\"DoCoinbaser(): failed to _open_osfhandle\\n\");\n+            return -4;\n+        }\n+        file = fdopen(nSocket, \"r\");\n+#else\n+        file = fdopen(hSocket, \"r\");\n+#endif\n         if (file)\n             fprintf(file, \"total: %\" PRI64u \"\\n\\n\", nTotal);\n     }\n@@ -2764,7 +2776,6 @@ int DoCoinbaser(CBlock* pblock, uint64 nTotal)\n         pblock->vtx[0].vout.resize(1);\n     return rv;\n }\n-#endif\n \n CBlock* CreateNewBlock(CReserveKey& reservekey)\n {\n@@ -2903,10 +2914,8 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n     }\n     int64 nBlkValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n     pblock->vtx[0].vout[0].nValue = nBlkValue;\n-#ifndef __WXMSW__\n     if (mapArgs.count(\"-coinbaser\"))\n         DoCoinbaser(&*pblock, nBlkValue);\n-#endif\n \n     // Fill in header\n     pblock->hashPrevBlock  = pindexPrev->GetBlockHash();"
      }
    ]
  },
  {
    "sha": "80828e6da9a38e2a6c74c895331e5461dcd578be",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MDgyOGU2ZGE5YTM4ZTJhNmM3NGM4OTUzMzFlNTQ2MWRjZDU3OGJl",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-10-08T15:59:13Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-10-08T16:01:39Z"
      },
      "message": "Merge branch 'coinbaser'\n\nConflicts:\n\tsrc/bitcoinrpc.cpp\n\tsrc/main.cpp\n\nHand-merging:\n\tsrc/bitcoinrpc.cpp\n\tsrc/main.cpp\n\tsrc/main.h",
      "tree": {
        "sha": "73505ddcf5a49a7a467dedeb1c955982e95e19c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/73505ddcf5a49a7a467dedeb1c955982e95e19c4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/80828e6da9a38e2a6c74c895331e5461dcd578be",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80828e6da9a38e2a6c74c895331e5461dcd578be",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/80828e6da9a38e2a6c74c895331e5461dcd578be",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80828e6da9a38e2a6c74c895331e5461dcd578be/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c1131a28adf041c62248b4b075a45fd65ee8d132",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1131a28adf041c62248b4b075a45fd65ee8d132",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c1131a28adf041c62248b4b075a45fd65ee8d132"
      },
      {
        "sha": "59806427d0f10328e0f97c45bd2017eb9dce870e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59806427d0f10328e0f97c45bd2017eb9dce870e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/59806427d0f10328e0f97c45bd2017eb9dce870e"
      }
    ],
    "stats": {
      "total": 216,
      "additions": 207,
      "deletions": 9
    },
    "files": [
      {
        "sha": "8d528b18d999b06205771ed482d366f23a100777",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 1,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80828e6da9a38e2a6c74c895331e5461dcd578be/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80828e6da9a38e2a6c74c895331e5461dcd578be/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=80828e6da9a38e2a6c74c895331e5461dcd578be",
        "patch": "@@ -1603,6 +1603,35 @@ Value validateaddress(const Array& params, bool fHelp)\n }\n \n \n+Value setworkaux(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"setworkaux <id> [data]\\n\"\n+            \"If [data] is not specified, deletes aux.\\n\"\n+        );\n+\n+    std::string strId = params[0].get_str();\n+    if (params.size() > 1)\n+    {\n+        std::string strData = params[1].get_str();\n+        std::vector<unsigned char> vchData = ParseHex(strData);\n+        if (vchData.size() * 2 != strData.size())\n+            throw JSONRPCError(-8, \"Failed to parse data as hexadecimal\");\n+        CScript scriptBackup = mapAuxCoinbases[strId];\n+        mapAuxCoinbases[strId] = CScript(vchData);\n+        bool fOverflow;\n+        BuildCoinbaseScriptSig(0, UINT_MAX, &fOverflow);\n+        if (fOverflow)\n+            throw JSONRPCError(-7, \"Change would overflow coinbase script\");\n+    }\n+    else\n+        mapAuxCoinbases.erase(strId);\n+\n+    return true;\n+}\n+\n+\n Value getwork(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)\n@@ -1747,7 +1776,7 @@ Value getmemorypool(const Array& params, bool fHelp)\n             // Create new block\n             if(pblock)\n                 delete pblock;\n-            pblock = CreateNewBlock(reservekey);\n+            pblock = CreateNewBlock(reservekey, false);\n             if (!pblock)\n                 throw JSONRPCError(-7, \"Out of memory\");\n         }\n@@ -1838,6 +1867,7 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"listtransactions\",       &listtransactions),\n     make_pair(\"signmessage\",           &signmessage),\n     make_pair(\"verifymessage\",         &verifymessage),\n+    make_pair(\"setworkaux\",             &setworkaux),\n     make_pair(\"getwork\",                &getwork),\n     make_pair(\"listaccounts\",           &listaccounts),\n     make_pair(\"settxfee\",               &settxfee),"
      },
      {
        "sha": "59b0ec6d97f351bfd715accb8c8d2d110955d321",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80828e6da9a38e2a6c74c895331e5461dcd578be/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80828e6da9a38e2a6c74c895331e5461dcd578be/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=80828e6da9a38e2a6c74c895331e5461dcd578be",
        "patch": "@@ -201,6 +201,7 @@ bool AppInit2(int argc, char* argv[])\n             \"  -rpcport=<port>  \\t\\t  \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332)\\n\") +\n             \"  -rpcallowip=<ip> \\t\\t  \" + _(\"Allow JSON-RPC connections from specified IP address\\n\") +\n             \"  -rpcconnect=<ip> \\t  \"   + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\\n\") +\n+            \"  -coinbaser=<cmd> \\t  \"   + _(\"Execute <cmd> to calculate coinbase payees\\n\") +\n             \"  -keypool=<n>     \\t  \"   + _(\"Set key pool size to <n> (default: 100)\\n\") +\n             \"  -rescan          \\t  \"   + _(\"Rescan the block chain for missing wallet transactions\\n\");\n "
      },
      {
        "sha": "2ea9289b8e130ff83bee377948e82451d5936f52",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 172,
        "deletions": 7,
        "changes": 179,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80828e6da9a38e2a6c74c895331e5461dcd578be/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80828e6da9a38e2a6c74c895331e5461dcd578be/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=80828e6da9a38e2a6c74c895331e5461dcd578be",
        "patch": "@@ -6,6 +6,12 @@\n #include \"db.h\"\n #include \"net.h\"\n #include \"init.h\"\n+\n+#ifdef __WXMSW__\n+#include <fcntl.h>\n+#endif\n+#include <limits.h>\n+\n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n \n@@ -2690,7 +2696,126 @@ class COrphan\n };\n \n \n-CBlock* CreateNewBlock(CReserveKey& reservekey)\n+int DoCoinbaser_I(CBlock* pblock, uint64 nTotal, FILE* file)\n+{\n+    int nCount;\n+    if (fscanf(file, \"%d\\n\", &nCount) != 1)\n+    {\n+        printf(\"DoCoinbaser(): failed to fscanf count\\n\");\n+        return -2;\n+    }\n+    pblock->vtx[0].vout.resize(nCount + 1);\n+    uint64 nDistributed = 0;\n+    for (int i = 1; i <= nCount; ++i)\n+    {\n+        uint64 nValue;\n+        if (fscanf(file, \"%\" PRI64u \"\\n\", &nValue) != 1)\n+        {\n+            printf(\"DoCoinbaser(): failed to fscanf amount for transaction #%d\\n\", i);\n+            return -(0x1000 | i);\n+        }\n+        pblock->vtx[0].vout[i].nValue = nValue;\n+        nDistributed += nValue;\n+        char strAddr[35];\n+        if (fscanf(file, \"%34s\\n\", strAddr) != 1)\n+        {\n+            printf(\"DoCoinbaser(): failed to fscanf address for transaction #%d\\n\", i);\n+            return -(0x2000 | i);\n+        }\n+        CBitcoinAddress address;\n+        if (!address.SetString(strAddr))\n+        {\n+            printf(\"DoCoinbaser(): invalid bitcoin address for transaction #%d\\n\", i);\n+            return -(0x3000 | i);\n+        }\n+        pblock->vtx[0].vout[i].scriptPubKey.SetBitcoinAddress(address);\n+    }\n+    if (nTotal < nDistributed)\n+    {\n+        printf(\"DoCoinbaser(): attempt to distribute %\" PRI64u \"/%\" PRI64u \"\\n\", nDistributed, nTotal);\n+        return -3;\n+    }\n+    uint64 nMine = nTotal - nDistributed;\n+    printf(\"DoCoinbaser(): total distributed: %\" PRI64u \"/%\" PRI64u \" = %\" PRI64u \" for me\\n\", nDistributed, nTotal, nMine);\n+    pblock->vtx[0].vout[0].nValue = nMine;\n+    return 0;\n+}\n+\n+int DoCoinbaser(CBlock* pblock, uint64 nTotal)\n+{\n+    string strCmd = mapArgs[\"-coinbaser\"];\n+    FILE* file = NULL;\n+    if (!strCmd.compare(0, 4, \"tcp:\"))\n+    {\n+        CAddress addrCoinbaser(strCmd.substr(4), true, 0);\n+        SOCKET hSocket;\n+        if (!ConnectSocket(addrCoinbaser, hSocket))\n+        {\n+            perror(\"DoCoinbaser(): failed to connect\");\n+            return -3;\n+        }\n+#ifdef __WXMSW__\n+        int nSocket = _open_osfhandle((intptr_t)hSocket, _O_RDONLY | _O_TEXT);\n+        if (-1 == nSocket)\n+        {\n+            printf(\"DoCoinbaser(): failed to _open_osfhandle\\n\");\n+            return -4;\n+        }\n+        file = fdopen(nSocket, \"r\");\n+#else\n+        file = fdopen(hSocket, \"r\");\n+#endif\n+        if (file)\n+            fprintf(file, \"total: %\" PRI64u \"\\n\\n\", nTotal);\n+    }\n+    else\n+    {\n+\n+    try\n+    {\n+        char strTotal[11];\n+        int nTotalLen = snprintf(strTotal, 11, \"%\" PRI64u, nTotal);\n+        if (nTotalLen < 1 || nTotalLen > 10)\n+        {\n+            strTotal[0] = '\\0';\n+            nTotalLen = 0;\n+        }\n+        string::size_type nPos;\n+        while ((nPos = strCmd.find(\"%d\")) != string::npos)\n+        {\n+            strCmd.replace(nPos, 2, strTotal, nTotalLen);\n+        }\n+    }\n+    catch (...)\n+    {\n+        return 1;\n+    }\n+    file = popen(strCmd.c_str(), \"r\");\n+\n+    }\n+\n+    if (!file)\n+    {\n+        printf(\"DoCoinbaser(): failed to popen: %s\", strerror(errno));\n+        return -1;\n+    }\n+\n+    int rv;\n+    try\n+    {\n+        rv = DoCoinbaser_I(pblock, nTotal, file);\n+    }\n+    catch (...)\n+    {\n+        rv = 1;\n+    }\n+    pclose(file);\n+    if (rv)\n+        pblock->vtx[0].vout.resize(1);\n+    return rv;\n+}\n+\n+CBlock* CreateNewBlock(CReserveKey& reservekey, bool fUseCoinbaser)\n {\n     CBlockIndex* pindexPrev = pindexBest;\n \n@@ -2825,7 +2950,10 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n             }\n         }\n     }\n-    pblock->vtx[0].vout[0].nValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n+    int64 nBlkValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n+    pblock->vtx[0].vout[0].nValue = nBlkValue;\n+    if (fUseCoinbaser && mapArgs.count(\"-coinbaser\"))\n+        DoCoinbaser(&*pblock, nBlkValue);\n \n     // Fill in header\n     pblock->hashPrevBlock  = pindexPrev->GetBlockHash();\n@@ -2834,21 +2962,58 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n     pblock->nBits          = GetNextWorkRequired(pindexPrev);\n     pblock->nNonce         = 0;\n \n+    pblock->print();\n     return pblock.release();\n }\n \n \n+std::map<std::string, CScript> mapAuxCoinbases;\n+\n+CScript BuildCoinbaseScriptSig(uint64 nTime, unsigned int nExtraNonce, bool *pfOverflow)\n+{\n+    CScript scriptSig = CScript() << nTime << CBigNum(nExtraNonce);\n+\n+    map<std::string, CScript>::iterator it;\n+    for (it = mapAuxCoinbases.begin() ; it != mapAuxCoinbases.end(); ++it)\n+        scriptSig += (*it).second;\n+\n+    if (scriptSig.size() > 100)\n+    {\n+        scriptSig.resize(100);\n+        if (pfOverflow)\n+            *pfOverflow = true;\n+    }\n+    else\n+        if (pfOverflow)\n+            *pfOverflow = false;\n+\n+    return scriptSig;\n+}\n+\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce)\n {\n     // Update nExtraNonce\n-    static uint256 hashPrevBlock;\n-    if (hashPrevBlock != pblock->hashPrevBlock)\n+    static uint64 nPrevTime = 0;\n+    static bool fBackward = false;\n+    uint64 nNow = GetTime();\n+    if (nNow > nPrevTime + 1)\n     {\n         nExtraNonce = 0;\n-        hashPrevBlock = pblock->hashPrevBlock;\n+        nPrevTime = nNow;\n+        fBackward = false;\n+    }\n+    else\n+    {\n+        if (nNow < nPrevTime && !fBackward)\n+        {\n+            printf(\"IncrementExtraNonce: WARNING: nNow moved backward: %d -> %d\\n\", nPrevTime, nNow);\n+            fBackward = true;\n+        }\n+        if (nExtraNonce == UINT_MAX)\n+            printf(\"IncrementExtraNonce: WARNING: nExtraNonce overflowing!\\n\");\n+        ++nExtraNonce;\n     }\n-    ++nExtraNonce;\n-    pblock->vtx[0].vin[0].scriptSig = CScript() << pblock->nTime << CBigNum(nExtraNonce);\n+    pblock->vtx[0].vin[0].scriptSig = BuildCoinbaseScriptSig(nNow, nExtraNonce);\n     pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n }\n "
      },
      {
        "sha": "f62c9afa1d69e75d71dfdaf399eb328a67b42cfa",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80828e6da9a38e2a6c74c895331e5461dcd578be/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80828e6da9a38e2a6c74c895331e5461dcd578be/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=80828e6da9a38e2a6c74c895331e5461dcd578be",
        "patch": "@@ -94,7 +94,9 @@ void PrintBlockTree();\n bool ProcessMessages(CNode* pfrom);\n bool SendMessages(CNode* pto, bool fSendTrickle);\n void GenerateBitcoins(bool fGenerate, CWallet* pwallet);\n-CBlock* CreateNewBlock(CReserveKey& reservekey);\n+CBlock* CreateNewBlock(CReserveKey& reservekey, bool fUseCoinbaser=true);\n+extern std::map<std::string, CScript> mapAuxCoinbases;\n+CScript BuildCoinbaseScriptSig(uint64 nTime, unsigned int nExtraNonce, bool *pfOverflow = NULL);\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce);\n void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash1);\n bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey);"
      }
    ]
  },
  {
    "sha": "75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NWViYzA1YTk2NjdiOWNlYWY2ZWExNDJjZGI0ZmM2YjdiYTEwNjM2",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-12-16T23:08:24Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-12-16T23:08:24Z"
      },
      "message": "Merge branch 'coinbaser'\n\nConflicts:\n\tsrc/init.cpp",
      "tree": {
        "sha": "fbd937fea233c1005aaf2de319b3e3d3c8804549",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fbd937fea233c1005aaf2de319b3e3d3c8804549"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "821462017860c780badf42cb50c3796575e0e053",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/821462017860c780badf42cb50c3796575e0e053",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/821462017860c780badf42cb50c3796575e0e053"
      },
      {
        "sha": "80828e6da9a38e2a6c74c895331e5461dcd578be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80828e6da9a38e2a6c74c895331e5461dcd578be",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80828e6da9a38e2a6c74c895331e5461dcd578be"
      }
    ],
    "stats": {
      "total": 216,
      "additions": 207,
      "deletions": 9
    },
    "files": [
      {
        "sha": "289f2bc7340bb86222052d55ebc4935ae0eda29b",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 1,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636",
        "patch": "@@ -1599,6 +1599,35 @@ Value validateaddress(const Array& params, bool fHelp)\n }\n \n \n+Value setworkaux(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"setworkaux <id> [data]\\n\"\n+            \"If [data] is not specified, deletes aux.\\n\"\n+        );\n+\n+    std::string strId = params[0].get_str();\n+    if (params.size() > 1)\n+    {\n+        std::string strData = params[1].get_str();\n+        std::vector<unsigned char> vchData = ParseHex(strData);\n+        if (vchData.size() * 2 != strData.size())\n+            throw JSONRPCError(-8, \"Failed to parse data as hexadecimal\");\n+        CScript scriptBackup = mapAuxCoinbases[strId];\n+        mapAuxCoinbases[strId] = CScript(vchData);\n+        bool fOverflow;\n+        BuildCoinbaseScriptSig(0, UINT_MAX, &fOverflow);\n+        if (fOverflow)\n+            throw JSONRPCError(-7, \"Change would overflow coinbase script\");\n+    }\n+    else\n+        mapAuxCoinbases.erase(strId);\n+\n+    return true;\n+}\n+\n+\n Value getwork(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)\n@@ -1743,7 +1772,7 @@ Value getmemorypool(const Array& params, bool fHelp)\n             // Create new block\n             if(pblock)\n                 delete pblock;\n-            pblock = CreateNewBlock(reservekey);\n+            pblock = CreateNewBlock(reservekey, false);\n             if (!pblock)\n                 throw JSONRPCError(-7, \"Out of memory\");\n         }\n@@ -1841,6 +1870,7 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"listtransactions\",       &listtransactions),\n     make_pair(\"signmessage\",           &signmessage),\n     make_pair(\"verifymessage\",         &verifymessage),\n+    make_pair(\"setworkaux\",             &setworkaux),\n     make_pair(\"getwork\",                &getwork),\n     make_pair(\"listaccounts\",           &listaccounts),\n     make_pair(\"settxfee\",               &settxfee),"
      },
      {
        "sha": "479ac118ddddecc3c829860bf7f184b69ad0b1ee",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636",
        "patch": "@@ -222,6 +222,7 @@ bool AppInit2(int argc, char* argv[])\n             \"  -rpcport=<port>  \\t\\t  \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332)\") + \"\\n\" +\n             \"  -rpcallowip=<ip> \\t\\t  \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\" +\n             \"  -rpcconnect=<ip> \\t  \"   + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\" +\n+            \"  -coinbaser=<cmd> \\t  \"   + _(\"Execute <cmd> to calculate coinbase payees\") + \"\\n\" +\n             \"  -keypool=<n>     \\t  \"   + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\" +\n             \"  -rescan          \\t  \"   + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n "
      },
      {
        "sha": "9f5bb294cc7d8a5916ae12d06496ad56e24bae3b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 172,
        "deletions": 7,
        "changes": 179,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636",
        "patch": "@@ -7,6 +7,12 @@\n #include \"db.h\"\n #include \"net.h\"\n #include \"init.h\"\n+\n+#ifdef __WXMSW__\n+#include <fcntl.h>\n+#endif\n+#include <limits.h>\n+\n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n \n@@ -2723,7 +2729,126 @@ class COrphan\n };\n \n \n-CBlock* CreateNewBlock(CReserveKey& reservekey)\n+int DoCoinbaser_I(CBlock* pblock, uint64 nTotal, FILE* file)\n+{\n+    int nCount;\n+    if (fscanf(file, \"%d\\n\", &nCount) != 1)\n+    {\n+        printf(\"DoCoinbaser(): failed to fscanf count\\n\");\n+        return -2;\n+    }\n+    pblock->vtx[0].vout.resize(nCount + 1);\n+    uint64 nDistributed = 0;\n+    for (int i = 1; i <= nCount; ++i)\n+    {\n+        uint64 nValue;\n+        if (fscanf(file, \"%\" PRI64u \"\\n\", &nValue) != 1)\n+        {\n+            printf(\"DoCoinbaser(): failed to fscanf amount for transaction #%d\\n\", i);\n+            return -(0x1000 | i);\n+        }\n+        pblock->vtx[0].vout[i].nValue = nValue;\n+        nDistributed += nValue;\n+        char strAddr[35];\n+        if (fscanf(file, \"%34s\\n\", strAddr) != 1)\n+        {\n+            printf(\"DoCoinbaser(): failed to fscanf address for transaction #%d\\n\", i);\n+            return -(0x2000 | i);\n+        }\n+        CBitcoinAddress address;\n+        if (!address.SetString(strAddr))\n+        {\n+            printf(\"DoCoinbaser(): invalid bitcoin address for transaction #%d\\n\", i);\n+            return -(0x3000 | i);\n+        }\n+        pblock->vtx[0].vout[i].scriptPubKey.SetBitcoinAddress(address);\n+    }\n+    if (nTotal < nDistributed)\n+    {\n+        printf(\"DoCoinbaser(): attempt to distribute %\" PRI64u \"/%\" PRI64u \"\\n\", nDistributed, nTotal);\n+        return -3;\n+    }\n+    uint64 nMine = nTotal - nDistributed;\n+    printf(\"DoCoinbaser(): total distributed: %\" PRI64u \"/%\" PRI64u \" = %\" PRI64u \" for me\\n\", nDistributed, nTotal, nMine);\n+    pblock->vtx[0].vout[0].nValue = nMine;\n+    return 0;\n+}\n+\n+int DoCoinbaser(CBlock* pblock, uint64 nTotal)\n+{\n+    string strCmd = mapArgs[\"-coinbaser\"];\n+    FILE* file = NULL;\n+    if (!strCmd.compare(0, 4, \"tcp:\"))\n+    {\n+        CAddress addrCoinbaser(strCmd.substr(4), true, 0);\n+        SOCKET hSocket;\n+        if (!ConnectSocket(addrCoinbaser, hSocket))\n+        {\n+            perror(\"DoCoinbaser(): failed to connect\");\n+            return -3;\n+        }\n+#ifdef __WXMSW__\n+        int nSocket = _open_osfhandle((intptr_t)hSocket, _O_RDONLY | _O_TEXT);\n+        if (-1 == nSocket)\n+        {\n+            printf(\"DoCoinbaser(): failed to _open_osfhandle\\n\");\n+            return -4;\n+        }\n+        file = fdopen(nSocket, \"r\");\n+#else\n+        file = fdopen(hSocket, \"r\");\n+#endif\n+        if (file)\n+            fprintf(file, \"total: %\" PRI64u \"\\n\\n\", nTotal);\n+    }\n+    else\n+    {\n+\n+    try\n+    {\n+        char strTotal[11];\n+        int nTotalLen = snprintf(strTotal, 11, \"%\" PRI64u, nTotal);\n+        if (nTotalLen < 1 || nTotalLen > 10)\n+        {\n+            strTotal[0] = '\\0';\n+            nTotalLen = 0;\n+        }\n+        string::size_type nPos;\n+        while ((nPos = strCmd.find(\"%d\")) != string::npos)\n+        {\n+            strCmd.replace(nPos, 2, strTotal, nTotalLen);\n+        }\n+    }\n+    catch (...)\n+    {\n+        return 1;\n+    }\n+    file = popen(strCmd.c_str(), \"r\");\n+\n+    }\n+\n+    if (!file)\n+    {\n+        printf(\"DoCoinbaser(): failed to popen: %s\", strerror(errno));\n+        return -1;\n+    }\n+\n+    int rv;\n+    try\n+    {\n+        rv = DoCoinbaser_I(pblock, nTotal, file);\n+    }\n+    catch (...)\n+    {\n+        rv = 1;\n+    }\n+    pclose(file);\n+    if (rv)\n+        pblock->vtx[0].vout.resize(1);\n+    return rv;\n+}\n+\n+CBlock* CreateNewBlock(CReserveKey& reservekey, bool fUseCoinbaser)\n {\n     CBlockIndex* pindexPrev = pindexBest;\n \n@@ -2858,7 +2983,10 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n             }\n         }\n     }\n-    pblock->vtx[0].vout[0].nValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n+    int64 nBlkValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n+    pblock->vtx[0].vout[0].nValue = nBlkValue;\n+    if (fUseCoinbaser && mapArgs.count(\"-coinbaser\"))\n+        DoCoinbaser(&*pblock, nBlkValue);\n \n     // Fill in header\n     pblock->hashPrevBlock  = pindexPrev->GetBlockHash();\n@@ -2867,21 +2995,58 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n     pblock->nBits          = GetNextWorkRequired(pindexPrev);\n     pblock->nNonce         = 0;\n \n+    pblock->print();\n     return pblock.release();\n }\n \n \n+std::map<std::string, CScript> mapAuxCoinbases;\n+\n+CScript BuildCoinbaseScriptSig(uint64 nTime, unsigned int nExtraNonce, bool *pfOverflow)\n+{\n+    CScript scriptSig = CScript() << nTime << CBigNum(nExtraNonce);\n+\n+    map<std::string, CScript>::iterator it;\n+    for (it = mapAuxCoinbases.begin() ; it != mapAuxCoinbases.end(); ++it)\n+        scriptSig += (*it).second;\n+\n+    if (scriptSig.size() > 100)\n+    {\n+        scriptSig.resize(100);\n+        if (pfOverflow)\n+            *pfOverflow = true;\n+    }\n+    else\n+        if (pfOverflow)\n+            *pfOverflow = false;\n+\n+    return scriptSig;\n+}\n+\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce)\n {\n     // Update nExtraNonce\n-    static uint256 hashPrevBlock;\n-    if (hashPrevBlock != pblock->hashPrevBlock)\n+    static uint64 nPrevTime = 0;\n+    static bool fBackward = false;\n+    uint64 nNow = GetTime();\n+    if (nNow > nPrevTime + 1)\n     {\n         nExtraNonce = 0;\n-        hashPrevBlock = pblock->hashPrevBlock;\n+        nPrevTime = nNow;\n+        fBackward = false;\n+    }\n+    else\n+    {\n+        if (nNow < nPrevTime && !fBackward)\n+        {\n+            printf(\"IncrementExtraNonce: WARNING: nNow moved backward: %d -> %d\\n\", nPrevTime, nNow);\n+            fBackward = true;\n+        }\n+        if (nExtraNonce == UINT_MAX)\n+            printf(\"IncrementExtraNonce: WARNING: nExtraNonce overflowing!\\n\");\n+        ++nExtraNonce;\n     }\n-    ++nExtraNonce;\n-    pblock->vtx[0].vin[0].scriptSig = CScript() << pblock->nTime << CBigNum(nExtraNonce);\n+    pblock->vtx[0].vin[0].scriptSig = BuildCoinbaseScriptSig(nNow, nExtraNonce);\n     pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n }\n "
      },
      {
        "sha": "49761d4b96debd7e44800d306a8bbabc05531826",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=75ebc05a9667b9ceaf6ea142cdb4fc6b7ba10636",
        "patch": "@@ -94,7 +94,9 @@ void PrintBlockTree();\n bool ProcessMessages(CNode* pfrom);\n bool SendMessages(CNode* pto, bool fSendTrickle);\n void GenerateBitcoins(bool fGenerate, CWallet* pwallet);\n-CBlock* CreateNewBlock(CReserveKey& reservekey);\n+CBlock* CreateNewBlock(CReserveKey& reservekey, bool fUseCoinbaser=true);\n+extern std::map<std::string, CScript> mapAuxCoinbases;\n+CScript BuildCoinbaseScriptSig(uint64 nTime, unsigned int nExtraNonce, bool *pfOverflow = NULL);\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce);\n void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash1);\n bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey);"
      }
    ]
  }
]