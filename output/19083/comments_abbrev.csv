DrahtBot,2020-05-28 05:00:51,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19168 (Refactor: Improve setup_clean_chain semantics by fjahr)\n* #18788 (wallet: tests: Update more tests to work with d",https://github.com/bitcoin/bitcoin/pull/19083#issuecomment-635101579,635101579,
MarcoFalke,2020-06-06 02:09:34,"nit: commit f78730d582c605882e5a3bf554aefb1a92942b0e can be done as a scripted diff, but no big deal",https://github.com/bitcoin/bitcoin/pull/19083#issuecomment-639956650,639956650,
glozow,2020-06-07 17:44:55,Resolves #18473 . Ready for Review again!,https://github.com/bitcoin/bitcoin/pull/19083#issuecomment-640254282,640254282,
MarcoFalke,2020-06-10 17:34:59,"ACK dca73941eb only changes is restoring accidentally deleted test üçÆ\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK dca73941eb only changes is restoring accidentally deleted test üçÆ\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUg6PAv/ROMdaa",https://github.com/bitcoin/bitcoin/pull/19083#issuecomment-642155460,642155460,
glozow,2020-06-10 17:40:14,"Thanks for the thorough review @MarcoFalke üôè , greatly appreciated.",https://github.com/bitcoin/bitcoin/pull/19083#issuecomment-642158062,642158062,
MarcoFalke,2020-06-11 14:44:05,"With two ACKs, this test change seems ready to merge. @gzhao408 Let me know if you want to address the feedback or want to leave it as is for now (for potential follow-ups) and have the pull request merged.",https://github.com/bitcoin/bitcoin/pull/19083#issuecomment-642704786,642704786,
glozow,2020-06-11 18:05:59,"Thank you for the review @jonatack üôè ! \nI've made a followup #19252 for `disconnect_p2ps` to wait for disconnect to complete anyway, so I can easily incorporate the feedback there. @MarcoFalke green light to merge :) thanks",https://github.com/bitcoin/bitcoin/pull/19083#issuecomment-642845541,642845541,
jnewbery,2020-05-31 19:52:25,"I think you can remove the `services` and `send_version` arguments, and just set them directly below (this function is only ever called once, and you know what `services` and `send_version` should be set to.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r432978430,432978430,test/functional/p2p_filter.py
MarcoFalke,2020-05-31 21:32:54,"Is there any reason to overwrite this at all? The whole overwrite with the `on_connection_send_msg` magic is a bit of a mental load. I believe this can simply be a `FilterNode`, where you set `send_version=False` and then `send_message(version_without_nRelay)` and then `wait_for_verack()`.\n\nOverall it should be less complex and less lines of code",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r432986314,432986314,test/functional/p2p_filter.py
glozow,2020-06-02 19:37:32,"Oops - had a big hole in my knowledge. You're right that was way too complicated ü§¶‚Äç‚ôÄÔ∏è . How does this look:\n```py\nclass FilterNode(P2PInterface):\n    def __init__(self, fRelay=True):\n        super().__init__()\n        if fRelay == False:\n            version_without_nRelay = msg_version()\n            version_without_nRelay.nRelay = 0\n            self.on_connection_send_msg = version",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r434130754,434130754,test/functional/p2p_filter.py
MarcoFalke,2020-06-02 20:36:15,"When I added `on_connection_send_msg` it was meant to be a ""private"" member. Obviously in python there is no ""private"", so discount my point by that.\n\nI think either is fine. Your solution with the `on_connection_send_msg` or something along the lines of:\n\n```\np2p = create_connection(bla)\np2p.wait_until(p2p.is_connected)\np2p.send_message(ver)\np2p.wait_for_verack()",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r434160361,434160361,test/functional/p2p_filter.py
MarcoFalke,2020-06-04 12:50:21,style-nit (feel free to ignore): I think pep-8 says two new lines before `class`,https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435227279,435227279,test/functional/p2p_filter.py
MarcoFalke,2020-06-04 12:55:08,"How does this work? Isn't `peer_connect` called *after* init, in which case `on_connection_send_msg` would be overwritten?",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435230233,435230233,test/functional/p2p_filter.py
glozow,2020-06-04 15:38:22,"Aw shoot, just fixed using `send_version=False` and then manually sending it after connection is established. Asserting `relaytxes=False` so it should be set correctly now.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435356224,435356224,test/functional/p2p_filter.py
jnewbery,2020-06-04 15:50:47,"Any time we access members of a `P2PInterface` or derived class, we should be taking the `mininode_lock`, otherwise there's the possibility of a data race between the main test logic thread and the network event loop. I think the easiest would be to define some getters on the `FilterNode` class that take the lock and then return the attribute value.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435365394,435365394,test/functional/p2p_filter.py
jnewbery,2020-06-04 15:58:20,"In fact, I think this whole part of the test is not actually testing the mempool message (which is obvious, since it was passing even before you added the line to send the mempool message). Since you're now testing the mempool message correctly in `test_msg_mempool()`, I think you can just erase this block.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435370818,435370818,test/functional/p2p_filter.py
jnewbery,2020-06-05 00:52:35,"nit: one style point that I've tried to move the tests away from is referring to connections as ""nodes"". A node is a bitcoind instance that we're testing. A p2p connection is a test structure used to interact with the node. Using the word _node_ for both the node and connections to it is confusing.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435633618,435633618,test/functional/p2p_filter.py
jnewbery,2020-06-05 00:57:38,This log seems in the wrong place. The connection has already been created earlier.,https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435634793,435634793,test/functional/p2p_filter.py
glozow,2020-06-05 01:14:58,"True, I had considered just changing the log message (since it didn't seem entirely correct) but I wasn't really sure what it should be. It looks like @MarcoFalke wrote this test, I'm wondering what he would have in mind?",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435638997,435638997,test/functional/p2p_filter.py
glozow,2020-06-05 01:18:51,"Good point. I'm thinking a getter and a setter: `get_tx_received`, `reset_tx_received` (to False), and for `merkleblock_received` as well? Shall I change the rest of the test too since it uses these throughout?",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435639882,435639882,test/functional/p2p_filter.py
jnewbery,2020-06-05 15:19:44,"> Shall I change the rest of the test too since it uses these throughout?\n\nIf you want to, that'd be great! There are lots of data races in this test where the test logic thread and the p2p handler thread can be accessing the same memory.\n\nTake a look at Python properties: https://docs.python.org/3/library/functions.html#property. By implementing a getter/setter using properties, you don't",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r435991790,435991790,test/functional/p2p_filter.py
glozow,2020-06-05 22:38:38,"Noted! Renaming all of them increases the number of lines in the diff by a lot, so I put renames for existing code in a separate commit.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r436194736,436194736,test/functional/p2p_filter.py
glozow,2020-06-05 23:03:03,"Weird that there are two `sync_with_ping`s here. @MarcoFalke would it be correct for me to remove one (since I'm touching the lines anyway)? From what I understand, one `sync_with_ping` is enough to ensure that the messages were sent and processed, and we'll be grabbing `mininode_lock` when we check the `*_received` values.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r436200326,436200326,test/functional/p2p_filter.py
MarcoFalke,2020-06-06 00:02:59,"There are no messages sent at all, so using `sync_with_ping` is odd, but I didn't know what else to use.\n\n* The first sync_with_ping is needed for any imaginary invs on the wire (from `SendMessages`) to be flushed to the filter peer\n* The seconds one is needed for our imaginary getdata (in reply to the imaginary inv) to be flushed to the node (and to be processed)",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r436211479,436211479,test/functional/p2p_filter.py
glozow,2020-06-07 16:44:42,"Ohh I see what you mean. If only 1 is sent, the order could be:\n\n1. send `ping`\n2. receive `inv`, send `getdata`\n3. receive `pong`, can move on\n5. assert not received\n6. receive data (too late)\n\nWith 2, it has to be:\n1. send `ping1`\n2. receive `inv`, send `getdata`\n3. receive `pong1`, send `ping2`\n4. any response to `getdata` must be received before `pong2`\n5. assert\n\",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r436380927,436380927,test/functional/p2p_filter.py
MarcoFalke,2020-06-07 16:47:31,"Jup, that's the idea",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r436381172,436381172,test/functional/p2p_filter.py
MarcoFalke,2020-06-09 12:30:39,"in commit 75865b28a0:\n\n```suggestion\n```\n\nI think tx_received  can be removed from this test, as it is redundant to `wait_for_tx`, no?",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r437373663,437373663,test/functional/p2p_filter.py
MarcoFalke,2020-06-09 12:36:08,"same commit:\n\nThis comment is obviously wrong (`git blame myself`)\n\n```suggestion\n        self.log.info('Check that we receive a tx if the filter matches a mempool tx')\n```",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r437377885,437377885,test/functional/p2p_filter.py
MarcoFalke,2020-06-09 12:37:03,So this change needs to go,https://github.com/bitcoin/bitcoin/pull/19083#discussion_r437378399,437378399,test/functional/p2p_filter.py
MarcoFalke,2020-06-09 12:38:58,"Same commit:\n\nI have a slight preference that tests clean up after themselves, and not after other tests. So this should be moved to the end of the subtest that created the peer connection.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r437379473,437379473,test/functional/p2p_filter.py
MarcoFalke,2020-06-09 12:46:18,"in commit 5f0dd129a0:\n\nIt seems a burden on tests to call this to avoid races. It might be easy to forget and races might only appear long after the test has been written and merged. It seems less fragile to move this wait into the disconnect helper.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r437383989,437383989,test/functional/p2p_filter.py
MarcoFalke,2020-06-09 12:47:52,same,https://github.com/bitcoin/bitcoin/pull/19083#discussion_r437384935,437384935,test/functional/p2p_filter.py
MarcoFalke,2020-06-09 12:49:25,Same commit: Could add `assert self.nodes[0].getpeerinfo()[0]['relaytxes']` after this line?,https://github.com/bitcoin/bitcoin/pull/19083#discussion_r437385849,437385849,test/functional/p2p_filter.py
glozow,2020-06-10 01:06:31,"Er, do you mean because it's already set to False in the constructor? I removed it for this reason, thanks for bringing it to my attention.\nI don't think we can remove `tx_received` because we sometimes want to assert that we didn't receive a tx with it.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r437804053,437804053,test/functional/p2p_filter.py
glozow,2020-06-10 01:07:23,"I removed it altogether, since receiving tx behavior for this reason is already tested and `msg_mempool` is added.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r437804266,437804266,test/functional/p2p_filter.py
glozow,2020-06-10 01:08:18,Added it right after it should be set to True after the `filterload` message in `test_filter`.,https://github.com/bitcoin/bitcoin/pull/19083#discussion_r437804515,437804515,test/functional/p2p_filter.py
glozow,2020-06-10 02:24:48,Uh oh... I naively added a `wait_until(lambda: len(self.getpeerinfo()) == 0)` but `getpeerinfo` gets both p2p connections and connected nodes. I need to figure out a better way to do this.,https://github.com/bitcoin/bitcoin/pull/19083#discussion_r437823900,437823900,test/functional/p2p_filter.py
MarcoFalke,2020-06-10 11:22:12,"nit in commit facd5f9765:\n\nThis assert is not needed. A stronger assert was checked in the previous line, no?",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438048919,438048919,test/functional/p2p_filter.py
MarcoFalke,2020-06-10 11:23:21,"unrelated nit in commit facd5f9765:\n\nHas this comment been fixed?",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438049526,438049526,test/functional/p2p_filter.py
MarcoFalke,2020-06-10 11:25:50,facd5f9765 why is this test removed?,https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438050713,438050713,test/functional/p2p_filter.py
MarcoFalke,2020-06-10 11:29:10,"in 27f3cac34e\n\nwhy is this guard needed?",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438052347,438052347,test/functional/p2p_filter.py
glozow,2020-06-10 13:58:31,"Not really needed, but I didn't think the assertion was relevant to the case where `fRelay=True` because it doesn't change after `filterload`. I could take it out.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438143534,438143534,test/functional/p2p_filter.py
glozow,2020-06-10 15:41:54,Removed the conditional and replaced log with comment.,https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438223192,438223192,test/functional/p2p_filter.py
glozow,2020-06-10 15:43:00,"I had thought it was already tested, my apologies. I just changed the log message and left the test as-is.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438223968,438223968,test/functional/p2p_filter.py
glozow,2020-06-10 15:45:46,"Ah yes! All of them should be either `wait_for_*` or `assert not *_received` now.\nAnd every `*_received = False` is accompanied by an `assert not *_received` later.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438225888,438225888,test/functional/p2p_filter.py
glozow,2020-06-10 15:54:50,An idea is to wait until `len(self.getpeerinfo())` decreases by `len(self.p2ps)` but that doesn't seem completely safe,https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438232127,438232127,test/functional/p2p_filter.py
MarcoFalke,2020-06-10 16:55:35,"Maybe I am missing something obvious, but I couldn't find where this is tested already.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438272760,438272760,test/functional/p2p_filter.py
MarcoFalke,2020-06-10 17:36:08,Thanks. This is a now a stronger assertion with less code.,https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438296974,438296974,test/functional/p2p_filter.py
MarcoFalke,2020-06-10 17:36:59,"Thanks, that makes the tests similarly structured ",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438297461,438297461,test/functional/p2p_filter.py
MarcoFalke,2020-06-10 17:37:47,"mininodes have a unique user agent, so the assert could be that no peers of this user agent are connected",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438297934,438297934,test/functional/p2p_filter.py
glozow,2020-06-10 17:38:07,"It wasn't. I had thought it was tested with the first `generatetoaddress` test, but that's a tx in a block, not a tx in mempool.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438298114,438298114,test/functional/p2p_filter.py
jonatack,2020-06-11 14:14:32,e8acc60 It looks like these logs lines 127 and 131 are related to the same test as the logging at line 124. Perhaps make them `debug` logs instead of `info` to declutter the ample logging output. (Thanks for putting the test in a separate function as you did.),https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438818716,438818716,test/functional/p2p_filter.py
jonatack,2020-06-11 14:23:39,497a6193 Is this logging (or the one at the start of `test_msg_mempool()`) redundant?,https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438824867,438824867,test/functional/p2p_filter.py
jonatack,2020-06-11 14:25:43,497a6193 perhaps put the BIP37 tests into their own function,https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438826323,438826323,test/functional/p2p_filter.py
jonatack,2020-06-11 14:29:21,4ef80f0 nit: `P2PNoBloomFilterMessages` (and at the last line),https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438828981,438828981,test/functional/p2p_nobloomfilter_messages.py
jonatack,2020-06-11 14:31:15,"4ef80f0 nit: this could be a `""""""docstring.""""""`",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438830458,438830458,test/functional/p2p_nobloomfilter_messages.py
jonatack,2020-06-11 14:33:14,"4ef80f0 nit: I think PEP8 (or this codebase, not sure which) prefers two lines here at the end before `if __name__ == '__main__':`\n\nSame in p2p_filter.py in dca73941.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r438831818,438831818,test/functional/p2p_nobloomfilter_messages.py
glozow,2020-06-13 17:08:52,"They're mostly in their own function `test_filter`, so I left this one as is.",https://github.com/bitcoin/bitcoin/pull/19083#discussion_r439753704,439753704,test/functional/p2p_filter.py
