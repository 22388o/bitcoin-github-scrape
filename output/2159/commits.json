[
  {
    "sha": "10046e27dbc10270f59385231736da2a9a327a8f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDA0NmUyN2RiYzEwMjcwZjU5Mzg1MjMxNzM2ZGEyYTlhMzI3YThm",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2013-01-09T08:14:48Z"
      },
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2013-01-09T09:18:26Z"
      },
      "message": "Display tx nLockTime correctly when set to block #\n\nPreviously when a transaction was set to lock at a specific block the\ncalculation was reversed, returning a negative number. This broke the UI\nand caused it to display %n in place of the actual number.\n\nIn addition the previous calculation would display \"Open for 0 blocks\"\nwhen the block height was such that the next block created would\nfinalize the transaction. Inserted the word \"more\" and changed the\ncalculation so that the last message would be \"Open for 1 more block\" to\nbetter match user expectations.",
      "tree": {
        "sha": "a489d08a60724a0387570aa556574d02b1dbd42b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a489d08a60724a0387570aa556574d02b1dbd42b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10046e27dbc10270f59385231736da2a9a327a8f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10046e27dbc10270f59385231736da2a9a327a8f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10046e27dbc10270f59385231736da2a9a327a8f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10046e27dbc10270f59385231736da2a9a327a8f/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "429915bd0dfcdb03b13d9a3c2fb82d5401ef70ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/429915bd0dfcdb03b13d9a3c2fb82d5401ef70ce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/429915bd0dfcdb03b13d9a3c2fb82d5401ef70ce"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "d5b08448dd59bed42f3a4b6ca4bf7a586e85856b",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10046e27dbc10270f59385231736da2a9a327a8f/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10046e27dbc10270f59385231736da2a9a327a8f/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=10046e27dbc10270f59385231736da2a9a327a8f",
        "patch": "@@ -14,7 +14,7 @@ QString TransactionDesc::FormatTxStatus(const CWalletTx& wtx)\n     if (!wtx.IsFinal())\n     {\n         if (wtx.nLockTime < LOCKTIME_THRESHOLD)\n-            return tr(\"Open for %n block(s)\", \"\", nBestHeight - wtx.nLockTime);\n+            return tr(\"Open for %n more block(s)\", \"\", wtx.nLockTime - nBestHeight + 1);\n         else\n             return tr(\"Open until %1\").arg(GUIUtil::dateTimeStr(wtx.nLockTime));\n     }"
      },
      {
        "sha": "40a5f735cd17baf114307a049dd79ecf43b6325b",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10046e27dbc10270f59385231736da2a9a327a8f/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10046e27dbc10270f59385231736da2a9a327a8f/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=10046e27dbc10270f59385231736da2a9a327a8f",
        "patch": "@@ -167,7 +167,7 @@ void TransactionRecord::updateStatus(const CWalletTx &wtx)\n         if (wtx.nLockTime < LOCKTIME_THRESHOLD)\n         {\n             status.status = TransactionStatus::OpenUntilBlock;\n-            status.open_for = nBestHeight - wtx.nLockTime;\n+            status.open_for = wtx.nLockTime - nBestHeight + 1;\n         }\n         else\n         {"
      },
      {
        "sha": "f6570803de8d2ce22aa0be2d5ad36de97a20fb79",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10046e27dbc10270f59385231736da2a9a327a8f/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10046e27dbc10270f59385231736da2a9a327a8f/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=10046e27dbc10270f59385231736da2a9a327a8f",
        "patch": "@@ -47,7 +47,9 @@ class TransactionStatus\n        @{*/\n     Status status;\n     int64 depth;\n-    int64 open_for; /**< Timestamp if status==OpenUntilDate, otherwise number of blocks */\n+    int64 open_for; /**< Timestamp if status==OpenUntilDate, otherwise number\n+                      of additional blocks that need to be mined before\n+                      finalization */\n     /**@}*/\n \n     /** Current number of blocks (to know whether cached status is still valid) */"
      },
      {
        "sha": "aef0e409bdc658fcf39d6e6b928e0303696e8e41",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10046e27dbc10270f59385231736da2a9a327a8f/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10046e27dbc10270f59385231736da2a9a327a8f/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=10046e27dbc10270f59385231736da2a9a327a8f",
        "patch": "@@ -280,7 +280,7 @@ QString TransactionTableModel::formatTxStatus(const TransactionRecord *wtx) cons\n     switch(wtx->status.status)\n     {\n     case TransactionStatus::OpenUntilBlock:\n-        status = tr(\"Open for %n block(s)\",\"\",wtx->status.open_for);\n+        status = tr(\"Open for %n more block(s)\",\"\",wtx->status.open_for);\n         break;\n     case TransactionStatus::OpenUntilDate:\n         status = tr(\"Open until %1\").arg(GUIUtil::dateTimeStr(wtx->status.open_for));"
      }
    ]
  }
]