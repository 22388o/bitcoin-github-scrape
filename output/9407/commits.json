[
  {
    "sha": "afe5b3f553e1d67b78fee83a18b83c322471ed00",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZmU1YjNmNTUzZTFkNjdiNzhmZWU4M2ExOGI4M2MzMjI0NzFlZDAw",
    "commit": {
      "author": {
        "name": "Anditto Heristyo",
        "email": "anditto.heristyo@gmail.com",
        "date": "2016-12-22T04:26:03Z"
      },
      "committer": {
        "name": "Anditto Heristyo",
        "email": "anditto.heristyo@gmail.com",
        "date": "2016-12-22T04:26:03Z"
      },
      "message": "Added missing colons in when running help command",
      "tree": {
        "sha": "a8a4c7680b678c2e778b6318ca4adfb8af40a7ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8a4c7680b678c2e778b6318ca4adfb8af40a7ef"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/afe5b3f553e1d67b78fee83a18b83c322471ed00",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/afe5b3f553e1d67b78fee83a18b83c322471ed00",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/afe5b3f553e1d67b78fee83a18b83c322471ed00",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/afe5b3f553e1d67b78fee83a18b83c322471ed00/comments",
    "author": {
      "login": "anditto",
      "id": 1005598,
      "node_id": "MDQ6VXNlcjEwMDU1OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1005598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anditto",
      "html_url": "https://github.com/anditto",
      "followers_url": "https://api.github.com/users/anditto/followers",
      "following_url": "https://api.github.com/users/anditto/following{/other_user}",
      "gists_url": "https://api.github.com/users/anditto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anditto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anditto/subscriptions",
      "organizations_url": "https://api.github.com/users/anditto/orgs",
      "repos_url": "https://api.github.com/users/anditto/repos",
      "events_url": "https://api.github.com/users/anditto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anditto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "anditto",
      "id": 1005598,
      "node_id": "MDQ6VXNlcjEwMDU1OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1005598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anditto",
      "html_url": "https://github.com/anditto",
      "followers_url": "https://api.github.com/users/anditto/followers",
      "following_url": "https://api.github.com/users/anditto/following{/other_user}",
      "gists_url": "https://api.github.com/users/anditto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anditto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anditto/subscriptions",
      "organizations_url": "https://api.github.com/users/anditto/orgs",
      "repos_url": "https://api.github.com/users/anditto/repos",
      "events_url": "https://api.github.com/users/anditto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anditto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e8cfe1ee2d01c493b758a67ad14707dca15792ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8cfe1ee2d01c493b758a67ad14707dca15792ea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e8cfe1ee2d01c493b758a67ad14707dca15792ea"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 14,
      "deletions": 14
    },
    "files": [
      {
        "sha": "9ebe48530f601385799e1806ca218706b6d9686b",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/afe5b3f553e1d67b78fee83a18b83c322471ed00/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/afe5b3f553e1d67b78fee83a18b83c322471ed00/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=afe5b3f553e1d67b78fee83a18b83c322471ed00",
        "patch": "@@ -169,9 +169,9 @@ UniValue getbestblockhash(const JSONRPCRequest& request)\n         throw runtime_error(\n             \"getbestblockhash\\n\"\n             \"\\nReturns the hash of the best (tip) block in the longest blockchain.\\n\"\n-            \"\\nResult\\n\"\n+            \"\\nResult:\\n\"\n             \"\\\"hex\\\"      (string) the block hash hex encoded\\n\"\n-            \"\\nExamples\\n\"\n+            \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getbestblockhash\", \"\")\n             + HelpExampleRpc(\"getbestblockhash\", \"\")\n         );\n@@ -204,7 +204,7 @@ UniValue waitfornewblock(const JSONRPCRequest& request)\n             \"  \\\"hash\\\" : {       (string) The blockhash\\n\"\n             \"  \\\"height\\\" : {     (int) Block height\\n\"\n             \"}\\n\"\n-            \"\\nExamples\\n\"\n+            \"\\nExamples:\\n\"\n             + HelpExampleCli(\"waitfornewblock\", \"1000\")\n             + HelpExampleRpc(\"waitfornewblock\", \"1000\")\n         );\n@@ -243,7 +243,7 @@ UniValue waitforblock(const JSONRPCRequest& request)\n             \"  \\\"hash\\\" : {       (string) The blockhash\\n\"\n             \"  \\\"height\\\" : {     (int) Block height\\n\"\n             \"}\\n\"\n-            \"\\nExamples\\n\"\n+            \"\\nExamples:\\n\"\n             + HelpExampleCli(\"waitforblock\", \"\\\"0000000000079f8ef3d2c688c244eb7a4570b24c9ed7b4a8c619eb02596f8862\\\", 1000\")\n             + HelpExampleRpc(\"waitforblock\", \"\\\"0000000000079f8ef3d2c688c244eb7a4570b24c9ed7b4a8c619eb02596f8862\\\", 1000\")\n         );\n@@ -286,7 +286,7 @@ UniValue waitforblockheight(const JSONRPCRequest& request)\n             \"  \\\"hash\\\" : {       (string) The blockhash\\n\"\n             \"  \\\"height\\\" : {     (int) Block height\\n\"\n             \"}\\n\"\n-            \"\\nExamples\\n\"\n+            \"\\nExamples:\\n\"\n             + HelpExampleCli(\"waitforblockheight\", \"\\\"100\\\", 1000\")\n             + HelpExampleRpc(\"waitforblockheight\", \"\\\"100\\\", 1000\")\n         );\n@@ -430,7 +430,7 @@ UniValue getrawmempool(const JSONRPCRequest& request)\n             + EntryDescriptionString()\n             + \"  }, ...\\n\"\n             \"}\\n\"\n-            \"\\nExamples\\n\"\n+            \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getrawmempool\", \"true\")\n             + HelpExampleRpc(\"getrawmempool\", \"true\")\n         );\n@@ -462,7 +462,7 @@ UniValue getmempoolancestors(const JSONRPCRequest& request)\n             + EntryDescriptionString()\n             + \"  }, ...\\n\"\n             \"}\\n\"\n-            \"\\nExamples\\n\"\n+            \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getmempoolancestors\", \"\\\"mytxid\\\"\")\n             + HelpExampleRpc(\"getmempoolancestors\", \"\\\"mytxid\\\"\")\n             );\n@@ -526,7 +526,7 @@ UniValue getmempooldescendants(const JSONRPCRequest& request)\n             + EntryDescriptionString()\n             + \"  }, ...\\n\"\n             \"}\\n\"\n-            \"\\nExamples\\n\"\n+            \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getmempooldescendants\", \"\\\"mytxid\\\"\")\n             + HelpExampleRpc(\"getmempooldescendants\", \"\\\"mytxid\\\"\")\n             );\n@@ -582,7 +582,7 @@ UniValue getmempoolentry(const JSONRPCRequest& request)\n             \"{                           (json object)\\n\"\n             + EntryDescriptionString()\n             + \"}\\n\"\n-            \"\\nExamples\\n\"\n+            \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getmempoolentry\", \"\\\"mytxid\\\"\")\n             + HelpExampleRpc(\"getmempoolentry\", \"\\\"mytxid\\\"\")\n         );"
      },
      {
        "sha": "5b44eeeaf93f75cffe21027464e07b36260bb4ba",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/afe5b3f553e1d67b78fee83a18b83c322471ed00/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/afe5b3f553e1d67b78fee83a18b83c322471ed00/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=afe5b3f553e1d67b78fee83a18b83c322471ed00",
        "patch": "@@ -155,7 +155,7 @@ UniValue generate(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. numblocks    (numeric, required) How many blocks are generated immediately.\\n\"\n             \"2. maxtries     (numeric, optional) How many iterations to try (default = 1000000).\\n\"\n-            \"\\nResult\\n\"\n+            \"\\nResult:\\n\"\n             \"[ blockhashes ]     (array) hashes of blocks generated\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nGenerate 11 blocks\\n\"\n@@ -192,7 +192,7 @@ UniValue generatetoaddress(const JSONRPCRequest& request)\n             \"1. numblocks    (numeric, required) How many blocks are generated immediately.\\n\"\n             \"2. address    (string, required) The address to send the newly generated bitcoin to.\\n\"\n             \"3. maxtries     (numeric, optional) How many iterations to try (default = 1000000).\\n\"\n-            \"\\nResult\\n\"\n+            \"\\nResult:\\n\"\n             \"[ blockhashes ]     (array) hashes of blocks generated\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nGenerate 11 blocks to myaddress\\n\"\n@@ -270,7 +270,7 @@ UniValue prioritisetransaction(const JSONRPCRequest& request)\n             \"3. fee delta      (numeric, required) The fee value (in satoshis) to add (or subtract, if negative).\\n\"\n             \"                  The fee is not actually paid, only the algorithm for selecting transactions into a block\\n\"\n             \"                  considers the transaction as it would have paid a higher (or lower) fee.\\n\"\n-            \"\\nResult\\n\"\n+            \"\\nResult:\\n\"\n             \"true              (boolean) Returns true\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"prioritisetransaction\", \"\\\"txid\\\" 0.0 10000\")\n@@ -717,7 +717,7 @@ UniValue submitblock(const JSONRPCRequest& request)\n             \"The 'jsonparametersobject' parameter is currently ignored.\\n\"\n             \"See https://en.bitcoin.it/wiki/BIP_0022 for full specification.\\n\"\n \n-            \"\\nArguments\\n\"\n+            \"\\nArguments:\\n\"\n             \"1. \\\"hexdata\\\"    (string, required) the hex-encoded block data to submit\\n\"\n             \"2. \\\"jsonparametersobject\\\"     (string, optional) object of optional parameters\\n\"\n             \"    {\\n\""
      },
      {
        "sha": "8b24e7a1cd3e127a649778e6b9e81e905baa5ed9",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/afe5b3f553e1d67b78fee83a18b83c322471ed00/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/afe5b3f553e1d67b78fee83a18b83c322471ed00/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=afe5b3f553e1d67b78fee83a18b83c322471ed00",
        "patch": "@@ -377,7 +377,7 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"\\\"transaction\\\"            (string) hex string of the transaction\\n\"\n \n-            \"\\nExamples\\n\"\n+            \"\\nExamples:\\n\"\n             + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"myid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"address\\\\\\\":0.01}\\\"\")\n             + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"myid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"data\\\\\\\":\\\\\\\"00010203\\\\\\\"}\\\"\")\n             + HelpExampleRpc(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"myid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\", \\\"{\\\\\\\"address\\\\\\\":0.01}\\\"\")"
      }
    ]
  }
]