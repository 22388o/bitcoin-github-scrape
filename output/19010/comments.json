[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630376790",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#issuecomment-630376790",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19010",
    "id": 630376790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDM3Njc5MA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-18T18:59:40Z",
    "updated_at": "2020-05-18T18:59:40Z",
    "author_association": "MEMBER",
    "body": "This is the 3rd PR taken from #18876. Please see that PR for details of the full changes to support BIP 157.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630376790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630495208",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#issuecomment-630495208",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19010",
    "id": 630495208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDQ5NTIwOA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-18T23:57:00Z",
    "updated_at": "2020-05-20T19:17:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18354 (Protect wallet by using shared pointers by bvbfan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630495208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632220053",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#issuecomment-632220053",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19010",
    "id": 632220053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjIyMDA1Mw==",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-21T16:51:23Z",
    "updated_at": "2020-05-21T16:51:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632220053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632297929",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#issuecomment-632297929",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19010",
    "id": 632297929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjI5NzkyOQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-21T19:25:45Z",
    "updated_at": "2020-05-21T19:25:45Z",
    "author_association": "MEMBER",
    "body": "Force pushed the branch to:\r\n\r\n- rebase on master now that #18960 is merged\r\n- Added a comment to `m_headers_cache` that didn't make it into #18960 (https://github.com/bitcoin/bitcoin/pull/18960#discussion_r428395728)\r\n- Addressed @jkczyz's comment on the functional test (https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428759826)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632297929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632392766",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#issuecomment-632392766",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19010",
    "id": 632392766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjM5Mjc2Ng==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-21T23:16:26Z",
    "updated_at": "2020-05-21T23:16:26Z",
    "author_association": "MEMBER",
    "body": "> what's the general approach been for testing bad requests? BIP 157 says to not respond, but we are disconnecting the peer in these cases.\r\n\r\nI don't have a strong opinion about whether to disconnect or drop bad requests. Generally I prefer simply dropping bad requests to prevent bugs becoming network partition possibilities, but in this case:\r\n\r\n- the message type is entirely new.\r\n- the peers sending us these requests are light clients, so the downside of disconnecting them is small.\r\n\r\nI'm inclined to keep it as a disconnect since that's the only way we have to communicate to the client that there's a problem with the request, but I'm happy to change it if others disagree.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632392766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632623825",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#issuecomment-632623825",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19010",
    "id": 632623825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjYyMzgyNQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-22T10:37:26Z",
    "updated_at": "2020-05-22T10:37:26Z",
    "author_association": "MEMBER",
    "body": "> the peers sending us these requests are light clients, so the downside of disconnecting them is small.\r\n\r\nI agree here. Generally the nicest thing you can do to misbehaving light clients is to disconnect them as early as possible. This way the misbehaviour bug will be hopefully caught early in the design and testing process of the light client. If not, at least in production it will be another indicator that something is wrong and users can file bugs. If the connection was kept alive, and without replying it might just time out on the light client and they'd think *we* are the ones misbehaving.\r\n\r\nI was about to suggest to put a small comment in the source code to document this, but I wasn't exactly sure where to put it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632623825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632785252",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#issuecomment-632785252",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19010",
    "id": 632785252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjc4NTI1Mg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-22T16:30:09Z",
    "updated_at": "2020-05-22T16:30:09Z",
    "author_association": "MEMBER",
    "body": "Thanks for review @MarcoFalke and @theStack. I've addressed all of your review comments, and also removed some redundant wording from the comment for `CFCHECKPOINT` in protocol.h",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632785252/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/633397233",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#issuecomment-633397233",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19010",
    "id": 633397233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzM5NzIzMw==",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-25T06:15:13Z",
    "updated_at": "2020-05-25T06:15:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK 5308c97ccaf0955e5840956bc1636108a43e6f46",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/633397233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426954791",
    "pull_request_review_id": 414013131,
    "id": 426954791,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk1NDc5MQ==",
    "diff_hunk": "@@ -2022,6 +2041,61 @@ static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_pa\n     return true;\n }\n \n+/**\n+ * Handle a cfheaders request.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   vRecv           The raw message received\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   connman         Pointer to the connection manager\n+ */\n+static void ProcessGetCFHeaders(CNode* pfrom, CDataStream& vRecv, const CChainParams& chain_params,\n+                                CConnman* connman)",
    "path": "src/net_processing.cpp",
    "position": 65,
    "original_position": 65,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "4b139e1832dc9842242c87a74cbfaa51df3fab23",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n                                CConnman& connman)\r\n```\r\n\r\nAny reason why this is a pointer, but missing the nullptr check?\r\n\r\n* Either this should be a proper pointer with nullptr check, or\r\n* it should be a reference\r\n\r\nMixing the two combines the worst of each option.\r\n\r\n(Same for pfrom)",
    "created_at": "2020-05-18T23:58:18Z",
    "updated_at": "2020-05-22T16:20:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r426954791",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426954791"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r426954791"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426954791/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2059,
    "original_line": 2059,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428737628",
    "pull_request_review_id": 416266764,
    "id": 428737628,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNzYyOA==",
    "diff_hunk": "@@ -2013,6 +2017,21 @@ static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_pa\n         }\n     }\n \n+    uint32_t stop_height = stop_index->nHeight;\n+    if (start_height > stop_height) {\n+        LogPrint(BCLog::NET, \"peer %d sent invalid getcfilters/getcfheaders with \" /* Continued */\n+                 \"start height %d and stop height %d\\n\",\n+                 pfrom->GetId(), start_height, stop_height);\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+    if (stop_height - start_height >= max_height_diff) {\n+        LogPrint(BCLog::NET, \"peer %d requested too many cfilters/cfheaders: %d / %d\\n\",\n+                 pfrom->GetId(), stop_height - start_height + 1, max_height_diff);\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+",
    "path": "src/net_processing.cpp",
    "position": 46,
    "original_position": 46,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "4b139e1832dc9842242c87a74cbfaa51df3fab23",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Given these checks aren't necessary for ProcessGetCFCheckPt, would they be more suitable in separate function? Then the caller wouldn't have to know which values to pass to make the checks succeed.\r\n\r\nDownside is you might fetch the `BlockFilterIndex` even though these checks may later fail.",
    "created_at": "2020-05-21T15:43:05Z",
    "updated_at": "2020-05-22T16:20:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428737628",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428737628"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428737628"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428737628/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 2024,
    "original_start_line": 2020,
    "start_side": "RIGHT",
    "line": 2038,
    "original_line": 2038,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428759826",
    "pull_request_review_id": 416266764,
    "id": 428759826,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc1OTgyNg==",
    "diff_hunk": "@@ -100,12 +104,43 @@ def run_test(self):\n             [int(header, 16) for header in (stale_cfcheckpt,)]\n         )\n \n+        self.log.info(\"Check that peers can fetch cfheaders on active chain.\")\n+        request = msg_getcfheaders(\n+            filter_type=FILTER_TYPE_BASIC,\n+            start_height=1,\n+            stop_hash=int(main_block_hash, 16)\n+        )\n+        node0.send_and_ping(request)\n+        response = node0.last_message['cfheaders']\n+        assert_equal(\n+            compute_last_header(response.prev_header, response.hashes),\n+            int(main_cfcheckpt, 16)\n+        )",
    "path": "test/functional/p2p_blockfilters.py",
    "position": 34,
    "original_position": 33,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "befc63d5b0937ca24fd48ed2580349740b87b0ec",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is it worth checking how many hashes are returned? Or would you consider it checked indirectly by `compute_last_header`?",
    "created_at": "2020-05-21T16:15:10Z",
    "updated_at": "2020-05-22T16:20:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428759826",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428759826"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428759826"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428759826/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 116,
    "original_start_line": 115,
    "start_side": "RIGHT",
    "line": 119,
    "original_line": 119,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428835615",
    "pull_request_review_id": 416389929,
    "id": 428835615,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzNTYxNQ==",
    "diff_hunk": "@@ -2022,6 +2041,61 @@ static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_pa\n     return true;\n }\n \n+/**\n+ * Handle a cfheaders request.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   vRecv           The raw message received\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   connman         Pointer to the connection manager\n+ */\n+static void ProcessGetCFHeaders(CNode* pfrom, CDataStream& vRecv, const CChainParams& chain_params,\n+                                CConnman* connman)",
    "path": "src/net_processing.cpp",
    "position": 65,
    "original_position": 65,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "4b139e1832dc9842242c87a74cbfaa51df3fab23",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This usage is the same as all the other `Process*()` functions in net_processing. Rather than introduce a new style for just this function, I think it makes sense to change it everywhere in net_processing in a refactor PR.",
    "created_at": "2020-05-21T18:29:55Z",
    "updated_at": "2020-05-22T16:20:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428835615",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428835615"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428835615"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428835615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2059,
    "original_line": 2059,
    "side": "RIGHT",
    "in_reply_to_id": 426954791
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428844525",
    "pull_request_review_id": 416401486,
    "id": 428844525,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0NDUyNQ==",
    "diff_hunk": "@@ -2013,6 +2017,21 @@ static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_pa\n         }\n     }\n \n+    uint32_t stop_height = stop_index->nHeight;\n+    if (start_height > stop_height) {\n+        LogPrint(BCLog::NET, \"peer %d sent invalid getcfilters/getcfheaders with \" /* Continued */\n+                 \"start height %d and stop height %d\\n\",\n+                 pfrom->GetId(), start_height, stop_height);\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+    if (stop_height - start_height >= max_height_diff) {\n+        LogPrint(BCLog::NET, \"peer %d requested too many cfilters/cfheaders: %d / %d\\n\",\n+                 pfrom->GetId(), stop_height - start_height + 1, max_height_diff);\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+",
    "path": "src/net_processing.cpp",
    "position": 46,
    "original_position": 46,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "4b139e1832dc9842242c87a74cbfaa51df3fab23",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this makes more sense if you also look at the full changes in https://github.com/bitcoin/bitcoin/pull/18876, where this function is common logic for getcfheaders and getcfilters, and the max number of headers that can be requested is 2000, and the max number of filters that can be requested in 1000.\r\n\r\nI agree that the getcfcheckpt logic passing in `0` and `std::numeric_limits<uint32_t>::max()` is a bit ugly. I could change it to pass in optionals, but that seems more aesthetic than anything.",
    "created_at": "2020-05-21T18:47:05Z",
    "updated_at": "2020-05-22T16:20:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428844525",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428844525"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428844525"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428844525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 2024,
    "original_start_line": 2020,
    "start_side": "RIGHT",
    "line": 2038,
    "original_line": 2038,
    "side": "RIGHT",
    "in_reply_to_id": 428737628
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428849166",
    "pull_request_review_id": 416407370,
    "id": 428849166,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0OTE2Ng==",
    "diff_hunk": "@@ -2013,6 +2017,21 @@ static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_pa\n         }\n     }\n \n+    uint32_t stop_height = stop_index->nHeight;\n+    if (start_height > stop_height) {\n+        LogPrint(BCLog::NET, \"peer %d sent invalid getcfilters/getcfheaders with \" /* Continued */\n+                 \"start height %d and stop height %d\\n\",\n+                 pfrom->GetId(), start_height, stop_height);\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+    if (stop_height - start_height >= max_height_diff) {\n+        LogPrint(BCLog::NET, \"peer %d requested too many cfilters/cfheaders: %d / %d\\n\",\n+                 pfrom->GetId(), stop_height - start_height + 1, max_height_diff);\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n+",
    "path": "src/net_processing.cpp",
    "position": 46,
    "original_position": 46,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "4b139e1832dc9842242c87a74cbfaa51df3fab23",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Another option would be to simply use default parameters, i.e. if start_height and max_height diff are not passed, the whole range is allowed. That would need to change the order of the parameters though.",
    "created_at": "2020-05-21T18:55:46Z",
    "updated_at": "2020-05-22T16:20:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428849166",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428849166"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428849166"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428849166/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 2024,
    "original_start_line": 2020,
    "start_side": "RIGHT",
    "line": 2038,
    "original_line": 2038,
    "side": "RIGHT",
    "in_reply_to_id": 428737628
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428864709",
    "pull_request_review_id": 416427372,
    "id": 428864709,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg2NDcwOQ==",
    "diff_hunk": "@@ -100,12 +104,43 @@ def run_test(self):\n             [int(header, 16) for header in (stale_cfcheckpt,)]\n         )\n \n+        self.log.info(\"Check that peers can fetch cfheaders on active chain.\")\n+        request = msg_getcfheaders(\n+            filter_type=FILTER_TYPE_BASIC,\n+            start_height=1,\n+            stop_hash=int(main_block_hash, 16)\n+        )\n+        node0.send_and_ping(request)\n+        response = node0.last_message['cfheaders']\n+        assert_equal(\n+            compute_last_header(response.prev_header, response.hashes),\n+            int(main_cfcheckpt, 16)\n+        )",
    "path": "test/functional/p2p_blockfilters.py",
    "position": 34,
    "original_position": 33,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "befc63d5b0937ca24fd48ed2580349740b87b0ec",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Technically, it's covered indirectly, but I think it's a good idea to explicitly test this so failures are easier to identify. I've added the check.",
    "created_at": "2020-05-21T19:26:31Z",
    "updated_at": "2020-05-22T16:20:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428864709",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428864709"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428864709"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428864709/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 116,
    "original_start_line": 115,
    "start_side": "RIGHT",
    "line": 119,
    "original_line": 119,
    "side": "RIGHT",
    "in_reply_to_id": 428759826
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428944198",
    "pull_request_review_id": 416528668,
    "id": 428944198,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0NDE5OA==",
    "diff_hunk": "@@ -1983,14 +1985,16 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n  * @param[in]   pfrom           The peer that we received the request from\n  * @param[in]   chain_params    Chain parameters\n  * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   start_height    The start height for the request\n  * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[in]   max_height_diff The maximum number of items permitted to request, as specified in BIP 157",
    "path": "src/net_processing.cpp",
    "position": 15,
    "original_position": 15,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "db20d456f081ff7abec422336bb9d30cde2b1940",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: This threw me off initially (similar to what @jkczyz noted below). The BIP gives a specific number, why do we not just use the constant? I think this could help make it a little less confusing.\r\n```suggestion\r\n * @param[in]   max_height_diff The maximum number of headers or filters permitted to request, as specified in BIP 157\r\n```",
    "created_at": "2020-05-21T22:12:22Z",
    "updated_at": "2020-05-22T16:20:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428944198",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428944198"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r428944198"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428944198/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1990,
    "original_line": 1990,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429175250",
    "pull_request_review_id": 416817259,
    "id": 429175250,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3NTI1MA==",
    "diff_hunk": "@@ -2022,6 +2041,61 @@ static bool PrepareBlockFilterRequest(CNode* pfrom, const CChainParams& chain_pa\n     return true;\n }\n \n+/**\n+ * Handle a cfheaders request.\n+ *\n+ * May disconnect from the peer in the case of a bad request.\n+ *\n+ * @param[in]   pfrom           The peer that we received the request from\n+ * @param[in]   vRecv           The raw message received\n+ * @param[in]   chain_params    Chain parameters\n+ * @param[in]   connman         Pointer to the connection manager\n+ */\n+static void ProcessGetCFHeaders(CNode* pfrom, CDataStream& vRecv, const CChainParams& chain_params,\n+                                CConnman* connman)",
    "path": "src/net_processing.cpp",
    "position": 65,
    "original_position": 65,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "4b139e1832dc9842242c87a74cbfaa51df3fab23",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Generally new code should be style-conformant. See for example `RelayTransaction`, which properly passes connman. Obviously a non-blocking nit, so feel free to close this conversation.",
    "created_at": "2020-05-22T10:44:11Z",
    "updated_at": "2020-05-22T16:20:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429175250",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429175250"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429175250"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429175250/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2059,
    "original_line": 2059,
    "side": "RIGHT",
    "in_reply_to_id": 426954791
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429187872",
    "pull_request_review_id": 416833511,
    "id": 429187872,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE4Nzg3Mg==",
    "diff_hunk": "@@ -2048,7 +2122,9 @@ static void ProcessGetCFCheckPt(CNode* pfrom, CDataStream& vRecv, const CChainPa\n \n     const CBlockIndex* stop_index;\n     BlockFilterIndex* filter_index;\n-    if (!PrepareBlockFilterRequest(pfrom, chain_params, filter_type, stop_hash,\n+    if (!PrepareBlockFilterRequest(pfrom, chain_params, filter_type, /*start_height=*/0, stop_hash,\n+                                   /*max_height_diff=*/std::numeric_limits<uint32_t>::max(),\n+",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 119,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "4376797f6c9962ec92b5ce6e61dc622b56d2a6f7",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit db20d456f0 [net processing] Message handling for getcfheaders.\r\n\r\nWhy add an empty newline in the params?",
    "created_at": "2020-05-22T11:15:39Z",
    "updated_at": "2020-05-22T16:20:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429187872",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429187872"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429187872"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429187872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2127,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429188567",
    "pull_request_review_id": 416833511,
    "id": 429188567,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE4ODU2Nw==",
    "diff_hunk": "@@ -225,6 +225,17 @@ extern const char* GETBLOCKTXN;\n  * @since protocol version 70014 as described by BIP 152\n  */\n extern const char* BLOCKTXN;\n+/**\n+ * getcfheaders requests compact filter headers for a range of blocks.\n+ * Only available with service bit NODE_COMPACT_FILTERS as described by\n+ * BIP 157 & 158.\n+ */\n+extern const char *GETCFHEADERS;",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 9,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "4376797f6c9962ec92b5ce6e61dc622b56d2a6f7",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style-nit in commit db20d456f0 (according to clang-format):\r\n\r\n```suggestion\r\nextern const char* GETCFHEADERS;\r\n```",
    "created_at": "2020-05-22T11:17:31Z",
    "updated_at": "2020-05-22T16:20:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429188567",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429188567"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429188567"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429188567/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 233,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429202424",
    "pull_request_review_id": 416852311,
    "id": 429202424,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIwMjQyNA==",
    "diff_hunk": "@@ -39,6 +39,7 @@ class BlockFilterIndex final : public BaseIndex\n     size_t WriteFilterToDisk(FlatFilePos& pos, const BlockFilter& filter);\n \n     Mutex m_cs_headers_cache;\n+    //* cache of block hash to filter header, to avoid disk access when responding to getcfcheckpt. */",
    "path": "src/index/blockfilterindex.h",
    "position": null,
    "original_position": 4,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "616c8b3f6d9a0474c0f448da832fb87c8cce9a72",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "To match the other comments in the class, this one should also use the Doxygen starting delimiter (= C-Style comment with two '*'s, see http://www.doxygen.nl/manual/docblocks.html#cppblock):\r\n```suggestion\r\n    /** cache of block hash to filter header, to avoid disk access when responding to getcfcheckpt. */\r\n```",
    "created_at": "2020-05-22T11:52:34Z",
    "updated_at": "2020-05-22T16:20:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429202424",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429202424"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429202424"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429202424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429205414",
    "pull_request_review_id": 416852311,
    "id": 429205414,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIwNTQxNA==",
    "diff_hunk": "@@ -225,6 +225,17 @@ extern const char* GETBLOCKTXN;\n  * @since protocol version 70014 as described by BIP 152\n  */\n extern const char* BLOCKTXN;\n+/**\n+ * getcfheaders requests compact filter headers for a range of blocks.\n+ * Only available with service bit NODE_COMPACT_FILTERS as described by\n+ * BIP 157 & 158.\n+ */\n+extern const char *GETCFHEADERS;\n+/**\n+ * cfheaders is a response to a getcfheaders request containing a vector of\n+ * filter headers for each block in the requested range.",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 12,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "db20d456f081ff7abec422336bb9d30cde2b1940",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: technically, it's only one filter header plus a vector of filter hashes",
    "created_at": "2020-05-22T12:00:02Z",
    "updated_at": "2020-05-22T16:20:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429205414",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429205414"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429205414"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429205414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 236,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429338950",
    "pull_request_review_id": 417032859,
    "id": 429338950,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMzODk1MA==",
    "diff_hunk": "@@ -2048,7 +2122,9 @@ static void ProcessGetCFCheckPt(CNode* pfrom, CDataStream& vRecv, const CChainPa\n \n     const CBlockIndex* stop_index;\n     BlockFilterIndex* filter_index;\n-    if (!PrepareBlockFilterRequest(pfrom, chain_params, filter_type, stop_hash,\n+    if (!PrepareBlockFilterRequest(pfrom, chain_params, filter_type, /*start_height=*/0, stop_hash,\n+                                   /*max_height_diff=*/std::numeric_limits<uint32_t>::max(),\n+",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 119,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "4376797f6c9962ec92b5ce6e61dc622b56d2a6f7",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Because I have fat fingers. Now fixed.",
    "created_at": "2020-05-22T16:22:05Z",
    "updated_at": "2020-05-22T16:22:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429338950",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429338950"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429338950"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429338950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2127,
    "side": "RIGHT",
    "in_reply_to_id": 429187872
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429339147",
    "pull_request_review_id": 417033127,
    "id": 429339147,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMzOTE0Nw==",
    "diff_hunk": "@@ -225,6 +225,17 @@ extern const char* GETBLOCKTXN;\n  * @since protocol version 70014 as described by BIP 152\n  */\n extern const char* BLOCKTXN;\n+/**\n+ * getcfheaders requests compact filter headers for a range of blocks.\n+ * Only available with service bit NODE_COMPACT_FILTERS as described by\n+ * BIP 157 & 158.\n+ */\n+extern const char *GETCFHEADERS;",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 9,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "4376797f6c9962ec92b5ce6e61dc622b56d2a6f7",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Whoops. Missed this out in the rebase. Fixed.",
    "created_at": "2020-05-22T16:22:31Z",
    "updated_at": "2020-05-22T16:22:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429339147",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429339147"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429339147"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429339147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 233,
    "side": "RIGHT",
    "in_reply_to_id": 429188567
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429339303",
    "pull_request_review_id": 417033332,
    "id": 429339303,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMzOTMwMw==",
    "diff_hunk": "@@ -39,6 +39,7 @@ class BlockFilterIndex final : public BaseIndex\n     size_t WriteFilterToDisk(FlatFilePos& pos, const BlockFilter& filter);\n \n     Mutex m_cs_headers_cache;\n+    //* cache of block hash to filter header, to avoid disk access when responding to getcfcheckpt. */",
    "path": "src/index/blockfilterindex.h",
    "position": null,
    "original_position": 4,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "616c8b3f6d9a0474c0f448da832fb87c8cce9a72",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, this is a typo. Fixed!",
    "created_at": "2020-05-22T16:22:49Z",
    "updated_at": "2020-05-22T16:22:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429339303",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429339303"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429339303"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429339303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT",
    "in_reply_to_id": 429202424
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429339454",
    "pull_request_review_id": 417033526,
    "id": 429339454,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMzOTQ1NA==",
    "diff_hunk": "@@ -225,6 +225,17 @@ extern const char* GETBLOCKTXN;\n  * @since protocol version 70014 as described by BIP 152\n  */\n extern const char* BLOCKTXN;\n+/**\n+ * getcfheaders requests compact filter headers for a range of blocks.\n+ * Only available with service bit NODE_COMPACT_FILTERS as described by\n+ * BIP 157 & 158.\n+ */\n+extern const char *GETCFHEADERS;\n+/**\n+ * cfheaders is a response to a getcfheaders request containing a vector of\n+ * filter headers for each block in the requested range.",
    "path": "src/protocol.h",
    "position": null,
    "original_position": 12,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "db20d456f081ff7abec422336bb9d30cde2b1940",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks. I've corrected the comment.",
    "created_at": "2020-05-22T16:23:07Z",
    "updated_at": "2020-05-22T16:23:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429339454",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429339454"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429339454"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429339454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 236,
    "side": "RIGHT",
    "in_reply_to_id": 429205414
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429560040",
    "pull_request_review_id": 417291336,
    "id": 429560040,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2MDA0MA==",
    "diff_hunk": "@@ -235,8 +248,6 @@ extern const char* GETCFCHECKPT;\n /**\n  * cfcheckpt is a response to a getcfcheckpt request containing a vector of\n  * evenly spaced filter headers for blocks on the requested chain.\n- * Only available with service bit NODE_COMPACT_FILTERS as described by\n- * BIP 157 & 158.",
    "path": "src/protocol.h",
    "position": 25,
    "original_position": 25,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why are you removing this?",
    "created_at": "2020-05-23T16:33:03Z",
    "updated_at": "2020-05-23T16:33:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429560040",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429560040"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429560040"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429560040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 239,
    "original_line": 239,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429563076",
    "pull_request_review_id": 417294115,
    "id": 429563076,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2MzA3Ng==",
    "diff_hunk": "@@ -235,8 +248,6 @@ extern const char* GETCFCHECKPT;\n /**\n  * cfcheckpt is a response to a getcfcheckpt request containing a vector of\n  * evenly spaced filter headers for blocks on the requested chain.\n- * Only available with service bit NODE_COMPACT_FILTERS as described by\n- * BIP 157 & 158.",
    "path": "src/protocol.h",
    "position": 25,
    "original_position": 25,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It doesn't appear in the comments for `cfheaders` and `cfilter`, so I'm removing it from here for consistency. It seems obvious that `NODE_COMPACT_FILTERS` is required since it's a response to `getcfcheckpt`, which requires `NODE_COMPACT_FILTERS`.",
    "created_at": "2020-05-23T17:18:30Z",
    "updated_at": "2020-05-23T17:18:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429563076",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429563076"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429563076"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429563076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 239,
    "original_line": 239,
    "side": "LEFT",
    "in_reply_to_id": 429560040
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429565099",
    "pull_request_review_id": 417296060,
    "id": 429565099,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NTA5OQ==",
    "diff_hunk": "@@ -235,8 +248,6 @@ extern const char* GETCFCHECKPT;\n /**\n  * cfcheckpt is a response to a getcfcheckpt request containing a vector of\n  * evenly spaced filter headers for blocks on the requested chain.\n- * Only available with service bit NODE_COMPACT_FILTERS as described by\n- * BIP 157 & 158.",
    "path": "src/protocol.h",
    "position": 25,
    "original_position": 25,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fair enough",
    "created_at": "2020-05-23T17:49:33Z",
    "updated_at": "2020-05-23T17:49:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429565099",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429565099"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r429565099"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/429565099/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 239,
    "original_line": 239,
    "side": "LEFT",
    "in_reply_to_id": 429560040
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433696903",
    "pull_request_review_id": 422440280,
    "id": 433696903,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY5NjkwMw==",
    "diff_hunk": "@@ -100,12 +104,45 @@ def run_test(self):\n             [int(header, 16) for header in (stale_cfcheckpt,)]\n         )\n \n+        self.log.info(\"Check that peers can fetch cfheaders on active chain.\")\n+        request = msg_getcfheaders(\n+            filter_type=FILTER_TYPE_BASIC,\n+            start_height=1,\n+            stop_hash=int(main_block_hash, 16)\n+        )\n+        node0.send_and_ping(request)\n+        response = node0.last_message['cfheaders']\n+        assert_equal(len(response.hashes), 1000)\n+        assert_equal(\n+            compute_last_header(response.prev_header, response.hashes),\n+            int(main_cfcheckpt, 16)\n+        )\n+\n+        self.log.info(\"Check that peers can fetch cfheaders on stale chain.\")\n+        request = msg_getcfheaders(\n+            filter_type=FILTER_TYPE_BASIC,\n+            start_height=1,\n+            stop_hash=int(stale_block_hash, 16)\n+        )\n+        node0.send_and_ping(request)\n+        response = node0.last_message['cfheaders']\n+        assert_equal(len(response.hashes), 1000)",
    "path": "test/functional/p2p_blockfilters.py",
    "position": 44,
    "original_position": 44,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style nit: replace the multiple values of 1000 and of 16 in this file with well-named constants",
    "created_at": "2020-06-02T08:10:40Z",
    "updated_at": "2020-06-02T08:18:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r433696903",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433696903"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r433696903"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433696903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 129,
    "original_line": 129,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433697654",
    "pull_request_review_id": 422440280,
    "id": 433697654,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY5NzY1NA==",
    "diff_hunk": "@@ -330,6 +332,7 @@ def on_close(self):\n     def on_addr(self, message): pass\n     def on_block(self, message): pass\n     def on_blocktxn(self, message): pass\n+    def on_cfheaders(self, message): pass",
    "path": "test/functional/test_framework/mininode.py",
    "position": 20,
    "original_position": 20,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: sort here and lines 34 and 72",
    "created_at": "2020-06-02T08:11:58Z",
    "updated_at": "2020-06-02T08:18:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r433697654",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433697654"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r433697654"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433697654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 335,
    "original_line": 335,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433698370",
    "pull_request_review_id": 422440280,
    "id": 433698370,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY5ODM3MA==",
    "diff_hunk": "@@ -1983,14 +1985,16 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n  * @param[in]   pfrom           The peer that we received the request from\n  * @param[in]   chain_params    Chain parameters\n  * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   start_height    The start height for the request\n  * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[in]   max_height_diff The maximum number of items permitted to request, as specified in BIP 157",
    "path": "src/net_processing.cpp",
    "position": 15,
    "original_position": 15,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "db20d456f081ff7abec422336bb9d30cde2b1940",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree with @fjahr's comment and suggested change.",
    "created_at": "2020-06-02T08:13:11Z",
    "updated_at": "2020-06-02T08:18:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r433698370",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433698370"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r433698370"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433698370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1990,
    "original_line": 1990,
    "side": "RIGHT",
    "in_reply_to_id": 428944198
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433926144",
    "pull_request_review_id": 422743720,
    "id": 433926144,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkyNjE0NA==",
    "diff_hunk": "@@ -100,12 +104,45 @@ def run_test(self):\n             [int(header, 16) for header in (stale_cfcheckpt,)]\n         )\n \n+        self.log.info(\"Check that peers can fetch cfheaders on active chain.\")\n+        request = msg_getcfheaders(\n+            filter_type=FILTER_TYPE_BASIC,\n+            start_height=1,\n+            stop_hash=int(main_block_hash, 16)\n+        )\n+        node0.send_and_ping(request)\n+        response = node0.last_message['cfheaders']\n+        assert_equal(len(response.hashes), 1000)\n+        assert_equal(\n+            compute_last_header(response.prev_header, response.hashes),\n+            int(main_cfcheckpt, 16)\n+        )\n+\n+        self.log.info(\"Check that peers can fetch cfheaders on stale chain.\")\n+        request = msg_getcfheaders(\n+            filter_type=FILTER_TYPE_BASIC,\n+            start_height=1,\n+            stop_hash=int(stale_block_hash, 16)\n+        )\n+        node0.send_and_ping(request)\n+        response = node0.last_message['cfheaders']\n+        assert_equal(len(response.hashes), 1000)",
    "path": "test/functional/p2p_blockfilters.py",
    "position": 44,
    "original_position": 44,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The 16 is used to interpret a hex string into an int (RPC return values are strings), so we shouldn't have a constant for that. I tried replacing the 1000 with a constant, but I don't think it made things any clearer.",
    "created_at": "2020-06-02T14:35:55Z",
    "updated_at": "2020-06-02T14:35:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r433926144",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433926144"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r433926144"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433926144/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 129,
    "original_line": 129,
    "side": "RIGHT",
    "in_reply_to_id": 433696903
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433927925",
    "pull_request_review_id": 422746152,
    "id": 433927925,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkyNzkyNQ==",
    "diff_hunk": "@@ -330,6 +332,7 @@ def on_close(self):\n     def on_addr(self, message): pass\n     def on_block(self, message): pass\n     def on_blocktxn(self, message): pass\n+    def on_cfheaders(self, message): pass",
    "path": "test/functional/test_framework/mininode.py",
    "position": 20,
    "original_position": 20,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This was fixed in the following PR.",
    "created_at": "2020-06-02T14:38:28Z",
    "updated_at": "2020-06-02T14:38:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r433927925",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433927925"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r433927925"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433927925/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 335,
    "original_line": 335,
    "side": "RIGHT",
    "in_reply_to_id": 433697654
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433961139",
    "pull_request_review_id": 422789875,
    "id": 433961139,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk2MTEzOQ==",
    "diff_hunk": "@@ -1983,14 +1985,16 @@ void static ProcessOrphanTx(CConnman* connman, CTxMemPool& mempool, std::set<uin\n  * @param[in]   pfrom           The peer that we received the request from\n  * @param[in]   chain_params    Chain parameters\n  * @param[in]   filter_type     The filter type the request is for. Must be basic filters.\n+ * @param[in]   start_height    The start height for the request\n  * @param[in]   stop_hash       The stop_hash for the request\n+ * @param[in]   max_height_diff The maximum number of items permitted to request, as specified in BIP 157",
    "path": "src/net_processing.cpp",
    "position": 15,
    "original_position": 15,
    "commit_id": "5308c97ccaf0955e5840956bc1636108a43e6f46",
    "original_commit_id": "db20d456f081ff7abec422336bb9d30cde2b1940",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'll add this in #19070 if I need to retouch that branch",
    "created_at": "2020-06-02T15:23:38Z",
    "updated_at": "2020-06-02T15:23:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r433961139",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433961139"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19010#discussion_r433961139"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19010"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/433961139/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1990,
    "original_line": 1990,
    "side": "RIGHT",
    "in_reply_to_id": 428944198
  }
]