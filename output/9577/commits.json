[
  {
    "sha": "3f95a806b1cd2f3c944bda7bcc266498a59326e4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjk1YTgwNmIxY2QyZjNjOTQ0YmRhN2JjYzI2NjQ5OGE1OTMyNmU0",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-01-17T23:34:40Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-23T15:31:04Z"
      },
      "message": "Fix docstrings in qa tests\n\nThis commit fixes the module-level docstrings for the tests and helper\nmodules in qa. Many of these tests were uncommented previously - this\ncommit ensures that every test case has at least a minimum level of\ncommenting.",
      "tree": {
        "sha": "a1370c242d232e14a1c31a8bf203f7236342b953",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1370c242d232e14a1c31a8bf203f7236342b953"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f95a806b1cd2f3c944bda7bcc266498a59326e4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f95a806b1cd2f3c944bda7bcc266498a59326e4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f95a806b1cd2f3c944bda7bcc266498a59326e4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f95a806b1cd2f3c944bda7bcc266498a59326e4/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "61a640ea9741e5e76b945699a8332b0a9923339b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61a640ea9741e5e76b945699a8332b0a9923339b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/61a640ea9741e5e76b945699a8332b0a9923339b"
      }
    ],
    "stats": {
      "total": 873,
      "additions": 389,
      "deletions": 484
    },
    "files": [
      {
        "sha": "b32d4e2ce08300aa6985874081ec3a8844a7ff5d",
        "filename": "qa/rpc-tests/abandonconflict.py",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/abandonconflict.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,7 +2,14 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n+\"\"\"Test the abandontransaction RPC.\n+\n+ The abandontransaction RPC marks a transaction and all its in-wallet\n+ descendants as abandoned which allows their inputs to be respent. It can be\n+ used to replace \"stuck\" or evicted transactions. It only works on transactions\n+ which are not included in a block and are not currently in the mempool. It has\n+ no effect on transactions which are already conflicted or abandoned.\n+\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "b8dafff161a9135078a36f268e1615aab9855cb0",
        "filename": "qa/rpc-tests/assumevalid.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/assumevalid.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/assumevalid.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/assumevalid.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,8 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-assumevalid.py\n+\"\"\"Test logic for skipping signature validation on old blocks.\n \n Test logic for skipping signature validation on blocks which we've assumed\n valid (https://github.com/bitcoin/bitcoin/pull/9484)\n@@ -29,7 +28,7 @@\n     - node2 has -assumevalid set to the hash of block 102. Try to sync to\n       block 200. node2 will reject block 102 since it's assumed valid, but it\n       isn't buried by at least two weeks' work.\n-'''\n+\"\"\"\n \n from test_framework.mininode import *\n from test_framework.test_framework import BitcoinTestFramework"
      },
      {
        "sha": "ea9c3d73ab85119c0cefb78a7168c4fd226083cb",
        "filename": "qa/rpc-tests/bip65-cltv-p2p.py",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bip65-cltv-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bip65-cltv-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv-p2p.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,19 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test BIP65 (CHECKLOCKTIMEVERIFY).\n+\n+Connect to a single node.\n+Mine 2 (version 3) blocks (save the coinbases for later).\n+Generate 98 more version 3 blocks, verify the node accepts.\n+Mine 749 version 4 blocks, verify the node accepts.\n+Check that the new CLTV rules are not enforced on the 750th version 4 block.\n+Check that the new CLTV rules are enforced on the 751st version 4 block.\n+Mine 199 new version blocks.\n+Mine 1 old-version block.\n+Mine 1 new version block.\n+Mine 1 old version block, see that the node rejects.\n+\"\"\"\n \n from test_framework.test_framework import ComparisonTestFramework\n from test_framework.util import *\n@@ -20,19 +33,6 @@ def cltv_invalidate(tx):\n     tx.vin[0].scriptSig = CScript([OP_1NEGATE, OP_CHECKLOCKTIMEVERIFY, OP_DROP] +\n                                   list(CScript(tx.vin[0].scriptSig)))\n \n-'''\n-This test is meant to exercise BIP65 (CHECKLOCKTIMEVERIFY)\n-Connect to a single node.\n-Mine 2 (version 3) blocks (save the coinbases for later).\n-Generate 98 more version 3 blocks, verify the node accepts.\n-Mine 749 version 4 blocks, verify the node accepts.\n-Check that the new CLTV rules are not enforced on the 750th version 4 block.\n-Check that the new CLTV rules are enforced on the 751st version 4 block.\n-Mine 199 new version blocks.\n-Mine 1 old-version block.\n-Mine 1 new version block.\n-Mine 1 old version block, see that the node rejects.\n-'''\n \n class BIP65Test(ComparisonTestFramework):\n "
      },
      {
        "sha": "c9d02a98f3f41a42ba4bd34faaf7a879948c6993",
        "filename": "qa/rpc-tests/bip65-cltv.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bip65-cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bip65-cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test the CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic\n-#\n+\"\"\"Test the CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "836267ea7f776b4bcf93542ba79abb43ec662f8c",
        "filename": "qa/rpc-tests/bip68-112-113-p2p.py",
        "status": "modified",
        "additions": 11,
        "deletions": 12,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bip68-112-113-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bip68-112-113-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-112-113-p2p.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,18 +2,8 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test activation of the first version bits soft fork.\n \n-from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.util import *\n-from test_framework.mininode import ToHex, NetworkThread\n-from test_framework.blocktools import create_coinbase, create_block\n-from test_framework.comptool import TestInstance, TestManager\n-from test_framework.script import *\n-from io import BytesIO\n-import time\n-\n-'''\n-This test is meant to exercise activation of the first version bits soft fork\n This soft fork will activate the following BIPS:\n BIP 68  - nSequence relative lock times\n BIP 112 - CHECKSEQUENCEVERIFY\n@@ -51,7 +41,16 @@\n bip112txs_vary_OP_CSV - 16 txs with nSequence = 10 evaluated against varying {relative_locktimes of 10} OP_CSV OP_DROP\n bip112txs_vary_OP_CSV_9 - 16 txs with nSequence = 9 evaluated against varying {relative_locktimes of 10} OP_CSV OP_DROP\n bip112tx_special - test negative argument to OP_CSV\n-'''\n+\"\"\"\n+\n+from test_framework.test_framework import ComparisonTestFramework\n+from test_framework.util import *\n+from test_framework.mininode import ToHex, CTransaction, NetworkThread\n+from test_framework.blocktools import create_coinbase, create_block\n+from test_framework.comptool import TestInstance, TestManager\n+from test_framework.script import *\n+from io import BytesIO\n+import time\n \n base_relative_locktime = 10\n seq_disable_flag = 1<<31"
      },
      {
        "sha": "74ac393fe900db07bf7ab7919cc19a6da539f667",
        "filename": "qa/rpc-tests/bip68-sequence.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bip68-sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bip68-sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-sequence.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test BIP68 implementation\n-#\n+\"\"\"Test BIP68 implementation.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "70d4be3f6987354d89229d670c09612c075398ac",
        "filename": "qa/rpc-tests/bip9-softforks.py",
        "status": "modified",
        "additions": 18,
        "deletions": 20,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bip9-softforks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bip9-softforks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip9-softforks.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,20 +2,8 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test BIP 9 soft forks.\n \n-from test_framework.blockstore import BlockStore\n-from test_framework.test_framework import ComparisonTestFramework\n-from test_framework.util import *\n-from test_framework.mininode import CTransaction, NetworkThread\n-from test_framework.blocktools import create_coinbase, create_block\n-from test_framework.comptool import TestInstance, TestManager\n-from test_framework.script import CScript, OP_1NEGATE, OP_CHECKSEQUENCEVERIFY, OP_DROP\n-from io import BytesIO\n-import time\n-import itertools\n-\n-'''\n-This test is meant to exercise BIP forks\n Connect to a single node.\n regtest lock-in with 108/144 block signalling\n activation after a further 144 blocks\n@@ -26,8 +14,18 @@\n mine a further 143 blocks (LOCKED_IN)\n test that enforcement has not triggered (which triggers ACTIVE)\n test that enforcement has triggered\n-'''\n+\"\"\"\n \n+from test_framework.blockstore import BlockStore\n+from test_framework.test_framework import ComparisonTestFramework\n+from test_framework.util import *\n+from test_framework.mininode import CTransaction, NetworkThread\n+from test_framework.blocktools import create_coinbase, create_block\n+from test_framework.comptool import TestInstance, TestManager\n+from test_framework.script import CScript, OP_1NEGATE, OP_CHECKSEQUENCEVERIFY, OP_DROP\n+from io import BytesIO\n+import time\n+import itertools\n \n class BIP9SoftForksTest(ComparisonTestFramework):\n \n@@ -225,21 +223,21 @@ def donothing(self, tx):\n         return\n \n     def csv_invalidate(self, tx):\n-        '''Modify the signature in vin 0 of the tx to fail CSV\n+        \"\"\"Modify the signature in vin 0 of the tx to fail CSV\n         Prepends -1 CSV DROP in the scriptSig itself.\n-        '''\n+        \"\"\"\n         tx.vin[0].scriptSig = CScript([OP_1NEGATE, OP_CHECKSEQUENCEVERIFY, OP_DROP] +\n                                       list(CScript(tx.vin[0].scriptSig)))\n \n     def sequence_lock_invalidate(self, tx):\n-        '''Modify the nSequence to make it fails once sequence lock rule is activated (high timespan)\n-        '''\n+        \"\"\"Modify the nSequence to make it fails once sequence lock rule is\n+        activated (high timespan).\n+        \"\"\"\n         tx.vin[0].nSequence = 0x00FFFFFF\n         tx.nLockTime = 0\n \n     def mtp_invalidate(self, tx):\n-        '''Modify the nLockTime to make it fails once MTP rule is activated\n-        '''\n+        \"\"\"Modify the nLockTime to make it fails once MTP rule is activated.\"\"\"\n         # Disable Sequence lock, Activate nLockTime\n         tx.vin[0].nSequence = 0x90FFFFFF\n         tx.nLockTime = self.last_block_time"
      },
      {
        "sha": "b82ef89395a7e3585fe025049d9084557395f4ce",
        "filename": "qa/rpc-tests/bipdersig-p2p.py",
        "status": "modified",
        "additions": 15,
        "deletions": 16,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bipdersig-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bipdersig-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig-p2p.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,19 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test BIP66 (DER SIG).\n+\n+Connect to a single node.\n+Mine 2 (version 2) blocks (save the coinbases for later).\n+Generate 98 more version 2 blocks, verify the node accepts.\n+Mine 749 version 3 blocks, verify the node accepts.\n+Check that the new DERSIG rules are not enforced on the 750th version 3 block.\n+Check that the new DERSIG rules are enforced on the 751st version 3 block.\n+Mine 199 new version blocks.\n+Mine 1 old-version block.\n+Mine 1 new version block.\n+Mine 1 old version block, see that the node rejects.\n+\"\"\"\n \n from test_framework.test_framework import ComparisonTestFramework\n from test_framework.util import *\n@@ -15,10 +28,10 @@\n # A canonical signature consists of: \n # <30> <total len> <02> <len R> <R> <02> <len S> <S> <hashtype>\n def unDERify(tx):\n-    '''\n+    \"\"\"\n     Make the signature in vin 0 of a tx non-DER-compliant,\n     by adding padding after the S-value.\n-    '''\n+    \"\"\"\n     scriptSig = CScript(tx.vin[0].scriptSig)\n     newscript = []\n     for i in scriptSig:\n@@ -27,20 +40,6 @@ def unDERify(tx):\n         else:\n             newscript.append(i)\n     tx.vin[0].scriptSig = CScript(newscript)\n-    \n-'''\n-This test is meant to exercise BIP66 (DER SIG).\n-Connect to a single node.\n-Mine 2 (version 2) blocks (save the coinbases for later).\n-Generate 98 more version 2 blocks, verify the node accepts.\n-Mine 749 version 3 blocks, verify the node accepts.\n-Check that the new DERSIG rules are not enforced on the 750th version 3 block.\n-Check that the new DERSIG rules are enforced on the 751st version 3 block.\n-Mine 199 new version blocks.\n-Mine 1 old-version block.\n-Mine 1 new version block.\n-Mine 1 old version block, see that the node rejects.\n-'''\n             \n class BIP66Test(ComparisonTestFramework):\n "
      },
      {
        "sha": "fa54bc2749f4de0cae2d471ed117fdf6b6d11525",
        "filename": "qa/rpc-tests/bipdersig.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bipdersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bipdersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test the BIP66 changeover logic\n-#\n+\"\"\"Test the BIP66 changeover logic.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "67b58268402782f8cd79f068aeff558eacca4fcf",
        "filename": "qa/rpc-tests/blockchain.py",
        "status": "modified",
        "additions": 7,
        "deletions": 11,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/blockchain.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,11 +2,14 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPCs related to blockchainstate.\n \n-#\n-# Test RPC calls related to blockchain state. Tests correspond to code in\n-# rpc/blockchain.cpp.\n-#\n+Test the following RPCs:\n+    - gettxoutsetinfo\n+    - verifychain\n+\n+Tests correspond to code in rpc/blockchain.cpp.\n+\"\"\"\n \n from decimal import Decimal\n \n@@ -23,13 +26,6 @@\n \n \n class BlockchainTest(BitcoinTestFramework):\n-    \"\"\"\n-    Test blockchain-related RPC calls:\n-\n-        - gettxoutsetinfo\n-        - verifychain\n-\n-    \"\"\"\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "cc897a32c75a74b537e9655736b98d773d1e1bdd",
        "filename": "qa/rpc-tests/bumpfee.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bumpfee.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,7 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the bumpfee RPC.\"\"\"\n \n from segwit import send_to_witness\n from test_framework.test_framework import BitcoinTestFramework"
      },
      {
        "sha": "13eac92bbce717a189afa432887f3f20ad771604",
        "filename": "qa/rpc-tests/create_cache.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/create_cache.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/create_cache.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/create_cache.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,11 +2,12 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Create a blockchain cache.\n \n-#\n-# Helper script to create the cache\n-# (see BitcoinTestFramework.setup_chain)\n-#\n+Creating a cache of the blockchain speeds up test execution when running\n+multiple qa tests. This helper script is executed by rpc-tests when multiple\n+tests are being run in parallel.\n+\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n "
      },
      {
        "sha": "5555e96c4465539e4c86aa2f862133c116f3bf78",
        "filename": "qa/rpc-tests/decodescript.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/decodescript.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/decodescript.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/decodescript.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,14 +2,14 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test decoding scripts via decodescript RPC command.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n from test_framework.mininode import *\n from io import BytesIO\n \n class DecodeScriptTest(BitcoinTestFramework):\n-    \"\"\"Tests decoding scripts via RPC command \"decodescript\".\"\"\"\n \n     def __init__(self):\n         super().__init__()\n@@ -111,7 +111,7 @@ def decodescript_script_pub_key(self):\n         assert_equal('OP_IF ' + public_key + ' OP_CHECKSIGVERIFY OP_ELSE 500000 OP_CHECKLOCKTIMEVERIFY OP_DROP OP_ENDIF ' + public_key + ' OP_CHECKSIG', rpc_result['asm'])\n \n     def decoderawtransaction_asm_sighashtype(self):\n-        \"\"\"Tests decoding scripts via RPC command \"decoderawtransaction\".\n+        \"\"\"Test decoding scripts via RPC command \"decoderawtransaction\".\n \n         This test is in with the \"decodescript\" tests because they are testing the same \"asm\" script decodes.\n         \"\"\""
      },
      {
        "sha": "ff7121659b32c4c88f15e0877a196fb74153f48c",
        "filename": "qa/rpc-tests/disablewallet.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/disablewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/disablewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/disablewallet.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,11 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test a node with the -disablewallet option.\n \n-#\n-# Exercise API with -disablewallet.\n-#\n+- Test that validateaddress RPC works when running with -disablewallet\n+- Test that it is not possible to mine to an invalid address.\n+\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n@@ -24,7 +25,6 @@ def setup_network(self, split=False):\n         self.sync_all()\n \n     def run_test (self):\n-        # Check regression: https://github.com/bitcoin/bitcoin/issues/6963#issuecomment-154548880\n         x = self.nodes[0].validateaddress('3J98t1WpEZ73CNmQviecrnyiWrnqRhWNLy')\n         assert(x['isvalid'] == False)\n         x = self.nodes[0].validateaddress('mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ')"
      },
      {
        "sha": "c2724ba5df415839bf960691f39a570c36442ea8",
        "filename": "qa/rpc-tests/forknotify.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/forknotify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/forknotify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/forknotify.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test -alertnotify \n-#\n+\"\"\"Test the -alertnotify option.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "e789641298ea71537e791ea36e0bbf94a5510361",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the fundrawtransaction RPC.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "b73fea0695a407c2f83a12a1bb8aa217ad1c1a4a",
        "filename": "qa/rpc-tests/getblocktemplate_longpoll.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/getblocktemplate_longpoll.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/getblocktemplate_longpoll.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_longpoll.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test longpolling with getblocktemplate.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n@@ -22,10 +23,6 @@ def run(self):\n         self.node.getblocktemplate({'longpollid':self.longpollid})\n \n class GetBlockTemplateLPTest(BitcoinTestFramework):\n-    '''\n-    Test longpolling with getblocktemplate.\n-    '''\n-\n     def __init__(self):\n         super().__init__()\n         self.num_nodes = 4"
      },
      {
        "sha": "3b17dfcfb5d96d1d014721164613cf19c15f86be",
        "filename": "qa/rpc-tests/getblocktemplate_proposals.py",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/getblocktemplate_proposals.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/getblocktemplate_proposals.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_proposals.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test block proposals with getblocktemplate.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n@@ -66,9 +67,6 @@ def assert_template(node, tmpl, txlist, expect):\n         raise AssertionError('unexpected: %s' % (rsp,))\n \n class GetBlockTemplateProposalTest(BitcoinTestFramework):\n-    '''\n-    Test block proposals with getblocktemplate.\n-    '''\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "14222334a62d3c1903433d089d3ae231ce12fe5c",
        "filename": "qa/rpc-tests/getchaintips.py",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/getchaintips.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/getchaintips.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getchaintips.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,13 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the getchaintips RPC.\n \n-# Exercise the getchaintips API.  We introduce a network split, work\n-# on chains of different lengths, and join the network together again.\n-# This gives us two tips, verify that it works.\n+- introduce a network split\n+- work on chains of different lengths\n+- join the network together again\n+- verify that getchaintips now returns two chain tips.\n+\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal"
      },
      {
        "sha": "8f35f0ab8799e017f7437550e916769747452cec",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test rpc http basics\n-#\n+\"\"\"Test the RPC HTTP basics.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "18551caaf708fff34a416c76005461859e4fc67a",
        "filename": "qa/rpc-tests/import-rescan.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/import-rescan.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/import-rescan.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/import-rescan.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,7 +2,9 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test rescan behavior of importaddress, importpubkey, importprivkey, and\n+\"\"\"Test wallet import RPCs.\n+\n+Test rescan behavior of importaddress, importpubkey, importprivkey, and\n importmulti RPCs with different types of keys and rescan options.\n \n In the first part of the test, node 0 creates an address for each type of"
      },
      {
        "sha": "015336effef3d88c25c555ec7e60c9eed813b8de",
        "filename": "qa/rpc-tests/importmulti.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/importmulti.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,7 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n+\"\"\"Test the importmulti RPC.\"\"\"\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n "
      },
      {
        "sha": "a94112465635a04de7307aa3b11621930929eb91",
        "filename": "qa/rpc-tests/importprunedfunds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/importprunedfunds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/importprunedfunds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/importprunedfunds.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,7 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n+\"\"\"Test the importprunedfunds and removeprunedfunds RPCs.\"\"\"\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n "
      },
      {
        "sha": "92e65927d571c99172750e2a5043f9bdc1e47d26",
        "filename": "qa/rpc-tests/invalidateblock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/invalidateblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/invalidateblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidateblock.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test InvalidateBlock code\n-#\n+\"\"\"Test the invalidateblock RPC.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "eabc0db8df58325aec01794fcf2af2f287ba4240",
        "filename": "qa/rpc-tests/invalidblockrequest.py",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/invalidblockrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/invalidblockrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidblockrequest.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,14 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node responses to invalid blocks.\n+\n+In this test we connect to one node over p2p, and test block requests:\n+1) Valid blocks should be requested and become chain tip.\n+2) Invalid block with duplicated transaction should be re-requested.\n+3) Invalid block with bad coinbase value should be rejected and not\n+re-requested.\n+\"\"\"\n \n from test_framework.test_framework import ComparisonTestFramework\n from test_framework.util import *\n@@ -10,15 +18,6 @@\n import copy\n import time\n \n-\n-'''\n-In this test we connect to one node over p2p, and test block requests:\n-1) Valid blocks should be requested and become chain tip.\n-2) Invalid block with duplicated transaction should be re-requested.\n-3) Invalid block with bad coinbase value should be rejected and not\n-re-requested.\n-'''\n-\n # Use the ComparisonTestFramework with 1 node: only use --testbinary.\n class InvalidBlockRequestTest(ComparisonTestFramework):\n "
      },
      {
        "sha": "a9ac231f096a9baf8c58396c3e66c70000992aae",
        "filename": "qa/rpc-tests/invalidtxrequest.py",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/invalidtxrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/invalidtxrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidtxrequest.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,16 +2,17 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test node responses to invalid transactions.\n+\n+In this test we connect to one node over p2p, and test tx requests.\n+\"\"\"\n \n from test_framework.test_framework import ComparisonTestFramework\n from test_framework.comptool import TestManager, TestInstance, RejectResult\n from test_framework.blocktools import *\n import time\n \n \n-'''\n-In this test we connect to one node over p2p, and test tx requests.\n-'''\n \n # Use the ComparisonTestFramework with 1 node: only use --testbinary.\n class InvalidTxRequestTest(ComparisonTestFramework):"
      },
      {
        "sha": "4b9936a1fd9659382547490f3cb060d1969b43d9",
        "filename": "qa/rpc-tests/keypool.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/keypool.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,8 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Exercise the wallet keypool, and interaction with wallet encryption/locking\n+\"\"\"Test the wallet keypool and interaction with wallet encryption/locking.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "88304af5b006a7ead00d004d0bb1e601c6f97860",
        "filename": "qa/rpc-tests/listsinceblock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/listsinceblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/listsinceblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listsinceblock.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,7 @@\n # Copyright (c) 2017 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the listsincelast RPC.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal"
      },
      {
        "sha": "92fb96c8091e1b7b953558cfeb55736862a29fbc",
        "filename": "qa/rpc-tests/listtransactions.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listtransactions.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,8 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Exercise the listtransactions API\n+\"\"\"Test the listtransactions API.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "8ea405b4d57802ca833c72c9bda758c2f60397b6",
        "filename": "qa/rpc-tests/maxblocksinflight.py",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/maxblocksinflight.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/maxblocksinflight.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxblocksinflight.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,18 +2,19 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test nodes responses to having many blocks in flight.\n+\n+In this test we connect to one node over p2p, send it numerous inv's, and\n+compare the resulting number of getdata requests to a max allowed value.  We\n+test for exceeding 128 blocks in flight, which was the limit an 0.9 client will\n+reach. [0.10 clients shouldn't request more than 16 from a single peer.]\n+\"\"\"\n \n from test_framework.mininode import *\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n import logging\n \n-'''\n-In this test we connect to one node over p2p, send it numerous inv's, and\n-compare the resulting number of getdata requests to a max allowed value.  We\n-test for exceeding 128 blocks in flight, which was the limit an 0.9 client will\n-reach. [0.10 clients shouldn't request more than 16 from a single peer.]\n-'''\n MAX_REQUESTS = 128\n \n class TestManager(NodeConnCB):"
      },
      {
        "sha": "757aa60afd92fda02bf90a0e90105d8b3a4601e9",
        "filename": "qa/rpc-tests/maxuploadtarget.py",
        "status": "modified",
        "additions": 7,
        "deletions": 9,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxuploadtarget.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,21 +2,19 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n-import time\n-\n-'''\n-Test behavior of -maxuploadtarget.\n+\"\"\"Test behavior of -maxuploadtarget.\n \n * Verify that getdata requests for old blocks (>1week) are dropped\n if uploadtarget has been reached.\n * Verify that getdata requests for recent blocks are respecteved even\n if uploadtarget has been reached.\n * Verify that the upload counters are reset after 24 hours.\n-'''\n+\"\"\"\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n \n # TestNode: bare-bones \"peer\".  Used mostly as a conduit for a test to sending\n # p2p messages to a node, generating the messages in the main testing logic."
      },
      {
        "sha": "8fae92ad2b0dda678e2d0176f926ece9a8aa2b92",
        "filename": "qa/rpc-tests/mempool_limit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_limit.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,8 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Test mempool limiting together/eviction with the wallet\n+\"\"\"Test mempool limiting together/eviction with the wallet.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "388889d07c03b37bdfbd88435c1ce2f53ffaaefc",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,8 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Test descendant package tracking code\n+\"\"\"Test descendant package tracking code.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "2cd5573277cb18acbbd8383673507294d327e4b1",
        "filename": "qa/rpc-tests/mempool_reorg.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/mempool_reorg.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/mempool_reorg.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_reorg.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,11 +2,11 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool re-org scenarios.\n \n-#\n-# Test re-org scenarios with a mempool that contains transactions\n-# that spend (directly or indirectly) coinbase transactions.\n-#\n+Test re-org scenarios with a mempool that contains transactions\n+that spend (directly or indirectly) coinbase transactions.\n+\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "c7f37aaa449b8967681bd7c45b338868e954ac8b",
        "filename": "qa/rpc-tests/mempool_resurrect_test.py",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/mempool_resurrect_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/mempool_resurrect_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_resurrect_test.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,11 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test resurrection of mined transactions when\n-# the blockchain is re-organized.\n-#\n+\"\"\"Test resurrection of mined transactions when the blockchain is re-organized.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "da8485e2a271c53dfb83df733ce6f490afb07339",
        "filename": "qa/rpc-tests/mempool_spendcoinbase.py",
        "status": "modified",
        "additions": 9,
        "deletions": 10,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/mempool_spendcoinbase.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/mempool_spendcoinbase.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_spendcoinbase.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,16 +2,15 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test spending coinbase transactions.\n-# The coinbase transaction in block N can appear in block\n-# N+100... so is valid in the mempool when the best block\n-# height is N+99.\n-# This test makes sure coinbase spends that will be mature\n-# in the next block are accepted into the memory pool,\n-# but less mature coinbase spends are NOT.\n-#\n+\"\"\"Test spending coinbase transactions.\n+\n+The coinbase transaction in block N can appear in block\n+N+100... so is valid in the mempool when the best block\n+height is N+99.\n+This test makes sure coinbase spends that will be mature\n+in the next block are accepted into the memory pool,\n+but less mature coinbase spends are NOT.\n+\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "c4b45425d7c9bcac95e44a1e20a12379ad10734d",
        "filename": "qa/rpc-tests/merkle_blocks.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/merkle_blocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/merkle_blocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/merkle_blocks.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test merkleblock fetch/validation\n-#\n+\"\"\"Test gettxoutproof and verifytxoutproof RPCs.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "3b74bf1c4625181bc45f6924df25595894ec8b47",
        "filename": "qa/rpc-tests/multi_rpc.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/multi_rpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/multi_rpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/multi_rpc.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test multiple rpc user config option rpcauth\n-#\n+\"\"\"Test multiple RPC users.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import str_to_b64str, assert_equal"
      },
      {
        "sha": "89059d276080978a501a13f34a3693767adb2451",
        "filename": "qa/rpc-tests/nodehandling.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/nodehandling.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/nodehandling.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nodehandling.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test node handling\n-#\n+\"\"\"Test node handling.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "66c4e90f21de9676598f2a372fad53287dc39a63",
        "filename": "qa/rpc-tests/nulldummy.py",
        "status": "modified",
        "additions": 10,
        "deletions": 11,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/nulldummy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/nulldummy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nulldummy.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,16 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test NULLDUMMY softfork.\n+\n+Connect to a single node.\n+Generate 2 blocks (save the coinbases for later).\n+Generate 427 more blocks.\n+[Policy/Consensus] Check that NULLDUMMY compliant transactions are accepted in the 430th block.\n+[Policy] Check that non-NULLDUMMY transactions are rejected before activation.\n+[Consensus] Check that the new NULLDUMMY rules are not enforced on the 431st block.\n+[Policy/Consensus] Check that the new NULLDUMMY rules are enforced on the 432nd block.\n+\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n@@ -25,17 +35,6 @@ def trueDummy(tx):\n     tx.vin[0].scriptSig = CScript(newscript)\n     tx.rehash()\n \n-'''\n-This test is meant to exercise NULLDUMMY softfork.\n-Connect to a single node.\n-Generate 2 blocks (save the coinbases for later).\n-Generate 427 more blocks.\n-[Policy/Consensus] Check that NULLDUMMY compliant transactions are accepted in the 430th block.\n-[Policy] Check that non-NULLDUMMY transactions are rejected before activation.\n-[Consensus] Check that the new NULLDUMMY rules are not enforced on the 431st block.\n-[Policy/Consensus] Check that the new NULLDUMMY rules are enforced on the 432nd block.\n-'''\n-\n class NULLDUMMYTest(BitcoinTestFramework):\n \n     def __init__(self):"
      },
      {
        "sha": "2f21fa149af27823d5f1ab5a9ccbf8e84f88216c",
        "filename": "qa/rpc-tests/p2p-acceptblock.py",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-acceptblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-acceptblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-acceptblock.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,15 +2,7 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n-import time\n-from test_framework.blocktools import create_block, create_coinbase\n-\n-'''\n-AcceptBlockTest -- test processing of unrequested blocks.\n+\"\"\"Test processing of unrequested blocks.\n \n Since behavior differs when receiving unrequested blocks from whitelisted peers\n versus non-whitelisted peers, this tests the behavior of both (effectively two\n@@ -54,7 +46,13 @@\n \n 7. Send Node0 the missing block again.\n    Node0 should process and the tip should advance.\n-'''\n+\"\"\"\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+import time\n+from test_framework.blocktools import create_block, create_coinbase\n \n # TestNode: bare-bones \"peer\".  Used mostly as a conduit for a test to sending\n # p2p messages to a node, generating the messages in the main testing logic."
      },
      {
        "sha": "79561f35f7c7633cfa9033565596b4d8b67fb10e",
        "filename": "qa/rpc-tests/p2p-compactblocks.py",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-compactblocks.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,20 +2,18 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test compact blocks (BIP 152).\n+\n+Version 1 compact blocks are pre-segwit (txids)\n+Version 2 compact blocks are post-segwit (wtxids)\n+\"\"\"\n \n from test_framework.mininode import *\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n from test_framework.blocktools import create_block, create_coinbase, add_witness_commitment\n from test_framework.script import CScript, OP_TRUE\n \n-'''\n-CompactBlocksTest -- test compact blocks (BIP 152)\n-\n-Version 1 compact blocks are pre-segwit (txids)\n-Version 2 compact blocks are post-segwit (wtxids)\n-'''\n-\n # TestNode: A peer we use to send messages to bitcoind, and store responses.\n class TestNode(SingleNodeConnCB):\n     def __init__(self):"
      },
      {
        "sha": "1c62961db0b9762060102acc3585895af82ce8b3",
        "filename": "qa/rpc-tests/p2p-feefilter.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-feefilter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-feefilter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-feefilter.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,16 +2,13 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n+\"\"\"Test processing of feefilter messages.\"\"\"\n \n from test_framework.mininode import *\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n import time\n \n-'''\n-FeeFilterTest -- test processing of feefilter messages\n-'''\n \n def hashToHex(hash):\n     return format(hash, '064x')"
      },
      {
        "sha": "274dbb8a925f05606aea2d79d19ffcefe8eb078b",
        "filename": "qa/rpc-tests/p2p-fullblocktest.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-fullblocktest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-fullblocktest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-fullblocktest.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,14 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test block processing.\n+\n+This reimplements tests from the bitcoinj/FullBlockTestGenerator used\n+by the pull-tester.\n+\n+We use the testing framework in which we expect a particular answer from\n+each test.\n+\"\"\"\n \n from test_framework.test_framework import ComparisonTestFramework\n from test_framework.util import *\n@@ -17,14 +25,6 @@ def __init__(self, tx = CTransaction(), n = -1):\n         self.tx = tx\n         self.n = n  # the output we're spending\n \n-'''\n-This reimplements tests from the bitcoinj/FullBlockTestGenerator used\n-by the pull-tester.\n-\n-We use the testing framework in which we expect a particular answer from\n-each test.\n-'''\n-\n #  Use this class for tests that require behavior other than normal \"mininode\" behavior.\n #  For now, it is used to serialize a bloated varint (b64).\n class CBrokenBlock(CBlock):"
      },
      {
        "sha": "bf08ea32f4acc847f7422e76c5171e0305e4b322",
        "filename": "qa/rpc-tests/p2p-leaktests.py",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-leaktests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-leaktests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-leaktests.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,20 +2,18 @@\n # Copyright (c) 2017 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n-\n-'''\n-Test for message sending before handshake completion\n+\"\"\"Test message sending before handshake completion.\n \n A node should never send anything other than VERSION/VERACK/REJECT until it's\n received a VERACK.\n \n This test connects to a node and sends it a few messages, trying to intice it\n into sending us something it shouldn't.\n-'''\n+\"\"\"\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n \n banscore = 10\n "
      },
      {
        "sha": "c6b149021151f677339bd35f375118829285d89e",
        "filename": "qa/rpc-tests/p2p-mempool.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-mempool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-mempool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-mempool.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,11 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test p2p mempool message.\n+\n+Test that nodes are disconnected if they send mempool messages when bloom\n+filters are not enabled.\n+\"\"\"\n \n from test_framework.mininode import *\n from test_framework.test_framework import BitcoinTestFramework"
      },
      {
        "sha": "470a5398b661ce2b84c11bd69616750612075701",
        "filename": "qa/rpc-tests/p2p-segwit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-segwit.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,7 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test segwit transactions and blocks on P2P network.\"\"\"\n \n from test_framework.mininode import *\n from test_framework.test_framework import BitcoinTestFramework\n@@ -21,9 +22,6 @@\n \n MAX_SIGOP_COST = 80000\n \n-'''\n-SegWit p2p test.\n-'''\n \n # Calculate the virtual size of a witness block:\n # (base + witness/4)"
      },
      {
        "sha": "7f596b6e4b4bfc61e1847eb86d3a9b16badcccd3",
        "filename": "qa/rpc-tests/p2p-timeouts.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-timeouts.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-timeouts.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-timeouts.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,7 +2,7 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\" TimeoutsTest -- test various net timeouts (only in extended tests)\n+\"\"\"Test various net timeouts.\n \n - Create three bitcoind nodes:\n "
      },
      {
        "sha": "8e3e361fc17a84bbf47b79f0e29e5e11b6f450a2",
        "filename": "qa/rpc-tests/p2p-versionbits-warning.py",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-versionbits-warning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/p2p-versionbits-warning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-versionbits-warning.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,11 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test version bits warning system.\n+\n+Generate chains with block versions that appear to be signalling unknown\n+soft-forks, and test that warning alerts are generated.\n+\"\"\"\n \n from test_framework.mininode import *\n from test_framework.test_framework import BitcoinTestFramework\n@@ -10,13 +15,6 @@\n import time\n from test_framework.blocktools import create_block, create_coinbase\n \n-'''\n-Test version bits' warning system.\n-\n-Generate chains with block versions that appear to be signalling unknown\n-soft-forks, and test that warning alerts are generated.\n-'''\n-\n VB_PERIOD = 144 # versionbits period length for regtest\n VB_THRESHOLD = 108 # versionbits activation threshold for regtest\n VB_TOP_BITS = 0x20000000"
      },
      {
        "sha": "dde164f329093e549ba0e25e2b48aa0907992584",
        "filename": "qa/rpc-tests/preciousblock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/preciousblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/preciousblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/preciousblock.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test PreciousBlock code\n-#\n+\"\"\"Test the preciousblock RPC.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import ("
      },
      {
        "sha": "9a63d0838f2e336ffb93ab4027a0d5001ab943d1",
        "filename": "qa/rpc-tests/prioritise_transaction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/prioritise_transaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/prioritise_transaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/prioritise_transaction.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test PrioritiseTransaction code\n-#\n+\"\"\"Test the prioritisetransaction mining RPC.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "e4e231f3120a094186c555f6927bd88f2fe73c39",
        "filename": "qa/rpc-tests/proxy_test.py",
        "status": "modified",
        "additions": 15,
        "deletions": 14,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/proxy_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/proxy_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/proxy_test.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,20 +2,8 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test bitcoind with different proxy configuration.\n \n-import socket\n-import os\n-\n-from test_framework.socks5 import Socks5Configuration, Socks5Command, Socks5Server, AddressType\n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import (\n-    PORT_MIN,\n-    PORT_RANGE,\n-    start_nodes,\n-    assert_equal,\n-)\n-from test_framework.netutil import test_ipv6_local\n-'''\n Test plan:\n - Start bitcoind's with different proxy configurations\n - Use addnode to initiate connections\n@@ -37,7 +25,20 @@\n addnode connect to IPv6\n addnode connect to onion\n addnode connect to generic DNS name\n-'''\n+\"\"\"\n+\n+import socket\n+import os\n+\n+from test_framework.socks5 import Socks5Configuration, Socks5Command, Socks5Server, AddressType\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    PORT_MIN,\n+    PORT_RANGE,\n+    start_nodes,\n+    assert_equal,\n+)\n+from test_framework.netutil import test_ipv6_local\n \n RANGE_BEGIN = PORT_MIN + 2 * PORT_RANGE  # Start after p2p and rpc ports\n "
      },
      {
        "sha": "bfb4ea6d2e3b412ab6b1b8a4b0682832a67b09aa",
        "filename": "qa/rpc-tests/pruning.py",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/pruning.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,14 +2,12 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the pruning code.\n \n-#\n-# Test pruning code\n-# ********\n-# WARNING:\n-# This test uses 4GB of disk space.\n-# This test takes 30 mins or more (up to 2 hours)\n-# ********\n+WARNING:\n+This test uses 4GB of disk space.\n+This test takes 30 mins or more (up to 2 hours)\n+\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "5adef31207f86871592a35c7b6d998bbe773e561",
        "filename": "qa/rpc-tests/rawtransactions.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/rawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/rawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rawtransactions.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,14 +2,14 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"rawtranscation RPCs QA test.\n-\n-# Tests the following RPCs:\n-#    - createrawtransaction\n-#    - signrawtransaction\n-#    - sendrawtransaction\n-#    - decoderawtransaction\n-#    - getrawtransaction\n+\"\"\"Test the rawtranscation RPCs.\n+\n+Test the following RPCs:\n+   - createrawtransaction\n+   - signrawtransaction\n+   - sendrawtransaction\n+   - decoderawtransaction\n+   - getrawtransaction\n \"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework"
      },
      {
        "sha": "248bcdbd68cbaeb917ca076167a713d160dee809",
        "filename": "qa/rpc-tests/receivedby.py",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/receivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/receivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/receivedby.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,13 +2,11 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Exercise the listreceivedbyaddress API\n+\"\"\"Test the listreceivedbyaddress RPC.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n-\n def get_sub_array_from_array(object_array, to_match):\n     '''\n         Finds and returns a sub array from an array of arrays."
      },
      {
        "sha": "1b547a920f5b85b17b2a010007a44331fd1ddea3",
        "filename": "qa/rpc-tests/reindex.py",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/reindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/reindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/reindex.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,13 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test running bitcoind with -reindex and -reindex-chainstate options.\n+\n+- Start a single node and generate 3 blocks.\n+- Stop the node and restart it with -reindex. Verify that the node has reindexed up to block 3.\n+- Stop the node and restart it with -reindex-chainstate. Verify that the node has reindexed up to block 3.\n+\"\"\"\n \n-#\n-# Test -reindex and -reindex-chainstate with CheckBlockIndex\n-#\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     start_nodes,"
      },
      {
        "sha": "a3c1deddf6e9bc36827cca0914c6322721043d95",
        "filename": "qa/rpc-tests/replace-by-fee.py",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/replace-by-fee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/replace-by-fee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/replace-by-fee.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test replace by fee code\n-#\n+\"\"\"Test the RBF code.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n@@ -442,7 +439,7 @@ def test_too_many_replacements(self):\n         self.nodes[0].sendrawtransaction(double_tx_hex, True)\n \n     def test_opt_in(self):\n-        \"\"\" Replacing should only work if orig tx opted in \"\"\"\n+        \"\"\"Replacing should only work if orig tx opted in\"\"\"\n         tx0_outpoint = make_utxo(self.nodes[0], int(1.1*COIN))\n \n         # Create a non-opting in transaction"
      },
      {
        "sha": "9ca1cc187acd06d218a21c7f29c6f21e91195ff6",
        "filename": "qa/rpc-tests/rest.py",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rest.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,11 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test REST interface\n-#\n-\n+\"\"\"Test the REST API.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "89d74753cb1f3d69d229a0cc8a3c04f31aa142ce",
        "filename": "qa/rpc-tests/rpcbind_test.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/rpcbind_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/rpcbind_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcbind_test.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,8 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Test for -rpcbind, as well as -rpcallowip and -rpcconnect\n+\"\"\"Test running bitcoind with the -rpcbind and -rpcallowip options.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "f6175c8ca7c264c969dbb4d5fa71e8f2e6f00a14",
        "filename": "qa/rpc-tests/rpcnamedargs.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/rpcnamedargs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/rpcnamedargs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcnamedargs.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,7 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test using named arguments for RPCs.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import ("
      },
      {
        "sha": "f475427842b6af088e08a221c66714141a8d376d",
        "filename": "qa/rpc-tests/segwit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/segwit.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test the SegWit changeover logic\n-#\n+\"\"\"Test the SegWit changeover logic.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "16ca4a49134b359c986c6aba1bc53d083c5e9f0b",
        "filename": "qa/rpc-tests/sendheaders.py",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/sendheaders.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/sendheaders.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/sendheaders.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,14 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n-from test_framework.blocktools import create_block, create_coinbase\n-\n-'''\n-SendHeadersTest -- test behavior of headers messages to announce blocks.\n+\"\"\"Test behavior of headers messages to announce blocks.\n \n Setup: \n \n@@ -78,7 +71,13 @@\n    Expect: getheaders message each time.\n e. Announce one more that doesn't connect.\n    Expect: disconnect.\n-'''\n+\"\"\"\n+\n+from test_framework.mininode import *\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+from test_framework.blocktools import create_block, create_coinbase\n+\n \n direct_fetch_response_time = 0.05\n "
      },
      {
        "sha": "91f5abef5dee0ca1dedc259ac8ad636ce5fc8115",
        "filename": "qa/rpc-tests/signmessages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/signmessages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/signmessages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/signmessages.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,13 +2,12 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPC commands for signing and verifying messages.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n-\n class SignMessagesTest(BitcoinTestFramework):\n-    \"\"\"Tests RPC commands for signing and verifying messages.\"\"\"\n \n     def __init__(self):\n         super().__init__()"
      },
      {
        "sha": "b24162ab976fec4ddf115b53a4753aeefdb2e14f",
        "filename": "qa/rpc-tests/signrawtransactions.py",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/signrawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/signrawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/signrawtransactions.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,14 +2,13 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test transaction signing using the signrawtransaction RPC.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n \n class SignRawTransactionsTest(BitcoinTestFramework):\n-    \"\"\"Tests transaction signing via RPC command \"signrawtransaction\".\"\"\"\n-\n     def __init__(self):\n         super().__init__()\n         self.setup_clean_chain = True\n@@ -20,7 +19,7 @@ def setup_network(self, split=False):\n         self.is_network_split = False\n \n     def successful_signing_test(self):\n-        \"\"\"Creates and signs a valid raw transaction with one input.\n+        \"\"\"Create and sign a valid raw transaction with one input.\n \n         Expected results:\n \n@@ -65,7 +64,7 @@ def successful_signing_test(self):\n \n \n     def script_verification_error_test(self):\n-        \"\"\"Creates and signs a raw transaction with valid (vin 0), invalid (vin 1) and one missing (vin 2) input script.\n+        \"\"\"Create and sign a raw transaction with valid (vin 0), invalid (vin 1) and one missing (vin 2) input script.\n \n         Expected results:\n "
      },
      {
        "sha": "bde454968fa9fb2dac47d7855670c2aa01eca343",
        "filename": "qa/rpc-tests/smartfees.py",
        "status": "modified",
        "additions": 9,
        "deletions": 12,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/smartfees.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/smartfees.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/smartfees.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test fee estimation code\n-#\n+\"\"\"Test fee estimation code.\"\"\"\n \n from collections import OrderedDict\n from test_framework.test_framework import BitcoinTestFramework\n@@ -21,15 +18,15 @@\n SCRIPT_SIG = [\"0451025175\", \"0451025275\"]\n \n def small_txpuzzle_randfee(from_node, conflist, unconflist, amount, min_fee, fee_increment):\n-    '''\n+    \"\"\"\n     Create and send a transaction with a random fee.\n     The transaction pays to a trivial P2SH script, and assumes that its inputs\n     are of the same form.\n     The function takes a list of confirmed outputs and unconfirmed outputs\n     and attempts to use the confirmed list first for its inputs.\n     It adds the newly created outputs to the unconfirmed list.\n     Returns (raw transaction, fee)\n-    '''\n+    \"\"\"\n     # It's best to exponentially distribute our random fees\n     # because the buckets are exponentially spaced.\n     # Exponentially distributed from 1-128 * fee_increment\n@@ -71,12 +68,12 @@ def small_txpuzzle_randfee(from_node, conflist, unconflist, amount, min_fee, fee\n     return (completetx, fee)\n \n def split_inputs(from_node, txins, txouts, initial_split = False):\n-    '''\n+    \"\"\"\n     We need to generate a lot of very small inputs so we can generate a ton of transactions\n     and they will have low priority.\n     This function takes an input from txins, and creates and sends a transaction\n     which splits the value into 2 outputs which are appended to txouts.\n-    '''\n+    \"\"\"\n     prevtxout = txins.pop()\n     inputs = []\n     inputs.append({ \"txid\" : prevtxout[\"txid\"], \"vout\" : prevtxout[\"vout\"] })\n@@ -95,10 +92,10 @@ def split_inputs(from_node, txins, txouts, initial_split = False):\n     txouts.append({ \"txid\" : txid, \"vout\" : 1 , \"amount\" : rem_change})\n \n def check_estimates(node, fees_seen, max_invalid, print_estimates = True):\n-    '''\n+    \"\"\"\n     This function calls estimatefee and verifies that the estimates\n     meet certain invariants.\n-    '''\n+    \"\"\"\n     all_estimates = [ node.estimatefee(i) for i in range(1,26) ]\n     if print_estimates:\n         print([str(all_estimates[e-1]) for e in [1,2,3,6,15,25]])\n@@ -151,11 +148,11 @@ def __init__(self):\n         self.setup_clean_chain = False\n \n     def setup_network(self):\n-        '''\n+        \"\"\"\n         We'll setup the network to have 3 nodes that all mine with different parameters.\n         But first we need to use one node to create a lot of small low priority outputs\n         which we will use to generate our transactions.\n-        '''\n+        \"\"\"\n         self.nodes = []\n         # Use node0 to mine blocks for input splitting\n         self.nodes.append(start_node(0, self.options.tmpdir, [\"-maxorphantx=1000\","
      },
      {
        "sha": "96bebe1ea1608935a650bef2d10a45d00339df34",
        "filename": "qa/rpc-tests/test_framework/address.py",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/address.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/address.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/address.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,12 +2,7 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# address.py\n-#\n-# This file encodes and decodes BASE58 P2PKH and P2SH addresses\n-#\n+\"\"\"Encode and decode BASE58, P2PKH and P2SH addresses.\"\"\"\n \n from .script import hash256, hash160, sha256, CScript, OP_0\n from .util import bytes_to_hex_str, hex_str_to_bytes"
      },
      {
        "sha": "9ab3094b06744fe133022e8ee82b12dfe55833e8",
        "filename": "qa/rpc-tests/test_framework/authproxy.py",
        "status": "modified",
        "additions": 33,
        "deletions": 34,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/authproxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/authproxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/authproxy.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -1,37 +1,36 @@\n-\n-\"\"\"\n-  Copyright (c) 2011 Jeff Garzik\n-\n-  AuthServiceProxy has the following improvements over python-jsonrpc's\n-  ServiceProxy class:\n-\n-  - HTTP connections persist for the life of the AuthServiceProxy object\n-    (if server supports HTTP/1.1)\n-  - sends protocol 'version', per JSON-RPC 1.1\n-  - sends proper, incrementing 'id'\n-  - sends Basic HTTP authentication headers\n-  - parses all JSON numbers that look like floats as Decimal\n-  - uses standard Python json lib\n-\n-  Previous copyright, from python-jsonrpc/jsonrpc/proxy.py:\n-\n-  Copyright (c) 2007 Jan-Klaas Kollhof\n-\n-  This file is part of jsonrpc.\n-\n-  jsonrpc is free software; you can redistribute it and/or modify\n-  it under the terms of the GNU Lesser General Public License as published by\n-  the Free Software Foundation; either version 2.1 of the License, or\n-  (at your option) any later version.\n-\n-  This software is distributed in the hope that it will be useful,\n-  but WITHOUT ANY WARRANTY; without even the implied warranty of\n-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-  GNU Lesser General Public License for more details.\n-\n-  You should have received a copy of the GNU Lesser General Public License\n-  along with this software; if not, write to the Free Software\n-  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+# Copyright (c) 2011 Jeff Garzik\n+#\n+# Previous copyright, from python-jsonrpc/jsonrpc/proxy.py:\n+#\n+# Copyright (c) 2007 Jan-Klaas Kollhof\n+#\n+# This file is part of jsonrpc.\n+#\n+# jsonrpc is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU Lesser General Public License as published by\n+# the Free Software Foundation; either version 2.1 of the License, or\n+# (at your option) any later version.\n+#\n+# This software is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU Lesser General Public License for more details.\n+#\n+# You should have received a copy of the GNU Lesser General Public License\n+# along with this software; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n+\"\"\"HTTP proxy for opening RPC connection to bitcoind.\n+\n+AuthServiceProxy has the following improvements over python-jsonrpc's\n+ServiceProxy class:\n+\n+- HTTP connections persist for the life of the AuthServiceProxy object\n+  (if server supports HTTP/1.1)\n+- sends protocol 'version', per JSON-RPC 1.1\n+- sends proper, incrementing 'id'\n+- sends Basic HTTP authentication headers\n+- parses all JSON numbers that look like floats as Decimal\n+- uses standard Python json lib\n \"\"\"\n \n try:"
      },
      {
        "sha": "024611da6e079a7dc7d63b19824dc5fa505d9a83",
        "filename": "qa/rpc-tests/test_framework/bignum.py",
        "status": "modified",
        "additions": 3,
        "deletions": 7,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/bignum.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/bignum.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/bignum.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -1,15 +1,11 @@\n #!/usr/bin/env python3\n #\n-# bignum.py\n-#\n-# This file is copied from python-bitcoinlib.\n-#\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-\n-\"\"\"Bignum routines\"\"\"\n+\"\"\"Big number routines.\n \n+This file is copied from python-bitcoinlib.\n+\"\"\"\n \n import struct\n "
      },
      {
        "sha": "5280d18cdc606165ee092ef68ada1d6acfa4be86",
        "filename": "qa/rpc-tests/test_framework/blockstore.py",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/blockstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/blockstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/blockstore.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,16 +2,20 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-# BlockStore: a helper class that keeps a map of blocks and implements\n-#             helper functions for responding to getheaders and getdata,\n-#             and for constructing a getheaders message\n-#\n+\"\"\"BlockStore and TxStore helper classes.\"\"\"\n \n from .mininode import *\n from io import BytesIO\n import dbm.dumb as dbmd\n \n class BlockStore(object):\n+    \"\"\"BlockStore helper class.\n+\n+    BlockStore keeps a map of blocks and implements helper functions for\n+    responding to getheaders and getdata, and for constructing a getheaders\n+    message.\n+    \"\"\"\n+\n     def __init__(self, datadir):\n         self.blockDB = dbmd.open(datadir + \"/blocks\", 'c')\n         self.currentBlock = 0"
      },
      {
        "sha": "2c9a0857dfa8ce924f9ce2e97ee467f8570642e9",
        "filename": "qa/rpc-tests/test_framework/blocktools.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/blocktools.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/blocktools.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/blocktools.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -1,8 +1,8 @@\n #!/usr/bin/env python3\n-# blocktools.py - utilities for manipulating blocks and transactions\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Utilities for manipulating blocks and transactions.\"\"\"\n \n from .mininode import *\n from .script import CScript, OP_TRUE, OP_CHECKSIG, OP_RETURN"
      },
      {
        "sha": "b617895cac30277e4b6225dab7ce78140552e6e6",
        "filename": "qa/rpc-tests/test_framework/comptool.py",
        "status": "modified",
        "additions": 14,
        "deletions": 19,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/comptool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/comptool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/comptool.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,34 +2,29 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-from .mininode import *\n-from .blockstore import BlockStore, TxStore\n-from .util import p2p_port\n-\n-'''\n-This is a tool for comparing two or more bitcoinds to each other\n-using a script provided.\n+\"\"\"Compare two or more bitcoinds to each other.\n \n To use, create a class that implements get_tests(), and pass it in\n as the test generator to TestManager.  get_tests() should be a python\n generator that returns TestInstance objects.  See below for definition.\n-'''\n \n-# TestNode behaves as follows:\n-# Configure with a BlockStore and TxStore\n-# on_inv: log the message but don't request\n-# on_headers: log the chain tip\n-# on_pong: update ping response map (for synchronization)\n-# on_getheaders: provide headers via BlockStore\n-# on_getdata: provide blocks via BlockStore\n+TestNode behaves as follows:\n+    Configure with a BlockStore and TxStore\n+    on_inv: log the message but don't request\n+    on_headers: log the chain tip\n+    on_pong: update ping response map (for synchronization)\n+    on_getheaders: provide headers via BlockStore\n+    on_getdata: provide blocks via BlockStore\n+\"\"\"\n+\n+from .mininode import *\n+from .blockstore import BlockStore, TxStore\n+from .util import p2p_port\n \n global mininode_lock\n \n class RejectResult(object):\n-    '''\n-    Outcome that expects rejection of a transaction or block.\n-    '''\n+    \"\"\"Outcome that expects rejection of a transaction or block.\"\"\"\n     def __init__(self, code, reason=b''):\n         self.code = code\n         self.reason = reason"
      },
      {
        "sha": "3f87ef91f6163ed80b2a6c89acb83dadc32b8668",
        "filename": "qa/rpc-tests/test_framework/coverage.py",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/coverage.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/coverage.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/coverage.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,15 +2,12 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Utilities for doing coverage analysis on the RPC interface.\n \n-\"\"\"\n-This module contains utilities for doing coverage analysis on the RPC\n-interface.\n-\n-It provides a way to track which RPC commands are exercised during\n+Provides a way to track which RPC commands are exercised during\n testing.\n-\n \"\"\"\n+\n import os\n \n "
      },
      {
        "sha": "85a6158a2fd471ca7030a2fb8fbb47f503147b28",
        "filename": "qa/rpc-tests/test_framework/key.py",
        "status": "modified",
        "additions": 3,
        "deletions": 7,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/key.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/key.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/key.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -1,14 +1,10 @@\n # Copyright (c) 2011 Sam Rushing\n-#\n-# key.py - OpenSSL wrapper\n-#\n-# This file is modified from python-bitcoinlib.\n-#\n-\n-\"\"\"ECC secp256k1 crypto routines\n+\"\"\"ECC secp256k1 OpenSSL wrapper.\n \n WARNING: This module does not mlock() secrets; your private keys may end up on\n disk in swap! Use with caution!\n+\n+This file is modified from python-bitcoinlib.\n \"\"\"\n \n import ctypes"
      },
      {
        "sha": "b2292f6477482eae0b11c1a627e6f76f437cf7a0",
        "filename": "qa/rpc-tests/test_framework/mininode.py",
        "status": "modified",
        "additions": 15,
        "deletions": 17,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/mininode.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -4,23 +4,21 @@\n # Copyright (c) 2010-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# mininode.py - Bitcoin P2P network half-a-node\n-#\n-# This python code was modified from ArtForz' public domain  half-a-node, as\n-# found in the mini-node branch of http://github.com/jgarzik/pynode.\n-#\n-# NodeConn: an object which manages p2p connectivity to a bitcoin node\n-# NodeConnCB: a base class that describes the interface for receiving\n-#             callbacks with network messages from a NodeConn\n-# CBlock, CTransaction, CBlockHeader, CTxIn, CTxOut, etc....:\n-#     data structures that should map to corresponding structures in\n-#     bitcoin/primitives\n-# msg_block, msg_tx, msg_headers, etc.:\n-#     data structures that represent network messages\n-# ser_*, deser_*: functions that handle serialization/deserialization\n-\n+\"\"\"Bitcoin P2P network half-a-node.\n+\n+This python code was modified from ArtForz' public domain  half-a-node, as\n+found in the mini-node branch of http://github.com/jgarzik/pynode.\n+\n+NodeConn: an object which manages p2p connectivity to a bitcoin node\n+NodeConnCB: a base class that describes the interface for receiving\n+            callbacks with network messages from a NodeConn\n+CBlock, CTransaction, CBlockHeader, CTxIn, CTxOut, etc....:\n+    data structures that should map to corresponding structures in\n+    bitcoin/primitives\n+msg_block, msg_tx, msg_headers, etc.:\n+    data structures that represent network messages\n+ser_*, deser_*: functions that handle serialization/deserialization\n+\"\"\"\n \n import struct\n import socket"
      },
      {
        "sha": "45d8e22d2236338db616c99ae94d497558e06a92",
        "filename": "qa/rpc-tests/test_framework/netutil.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/netutil.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/netutil.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/netutil.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,8 +2,10 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Linux network utilities.\n \n-# Linux network utilities\n+Roughly based on http://voorloopnul.com/blog/a-python-netstat-in-less-than-100-lines-of-code/ by Ricardo Pascal\n+\"\"\"\n \n import sys\n import socket\n@@ -13,7 +15,6 @@\n import os\n from binascii import unhexlify, hexlify\n \n-# Roughly based on http://voorloopnul.com/blog/a-python-netstat-in-less-than-100-lines-of-code/ by Ricardo Pascal\n STATE_ESTABLISHED = '01'\n STATE_SYN_SENT  = '02'\n STATE_SYN_RECV = '03'"
      },
      {
        "sha": "3d9572788ebd016686a73f30223dd02064f8a48a",
        "filename": "qa/rpc-tests/test_framework/script.py",
        "status": "modified",
        "additions": 2,
        "deletions": 10,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/script.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,19 +2,11 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Functionality to build scripts, as well as SignatureHash().\n \n-#\n-# script.py\n-#\n-# This file is modified from python-bitcoinlib.\n-#\n-\n-\"\"\"Scripts\n-\n-Functionality to build scripts, as well as SignatureHash().\n+This file is modified from python-bitcoinlib.\n \"\"\"\n \n-\n from .mininode import CTransaction, CTxOut, sha256, hash256, uint256_from_str, ser_uint256, ser_string\n from binascii import hexlify\n import hashlib"
      },
      {
        "sha": "f68ecad36bbbdb0016d6039fb7c711ba38285792",
        "filename": "qa/rpc-tests/test_framework/siphash.py",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/siphash.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/siphash.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/siphash.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,11 +2,10 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Specialized SipHash-2-4 implementations.\n \n-#\n-# siphash.py - Specialized SipHash-2-4 implementations\n-#\n-# This implements SipHash-2-4 for 256-bit integers.\n+This implements SipHash-2-4 for 256-bit integers.\n+\"\"\"\n \n def rotl64(n, b):\n     return n >> (64 - b) | (n & ((1 << (64 - b)) - 1)) << b"
      },
      {
        "sha": "450bf3775eaa864b96e3ec77cbb0dad847b7e3ed",
        "filename": "qa/rpc-tests/test_framework/socks5.py",
        "status": "modified",
        "additions": 5,
        "deletions": 9,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/socks5.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/socks5.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/socks5.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,9 +2,7 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Dummy Socks5 server for testing.\n-'''\n+\"\"\"Dummy Socks5 server for testing.\"\"\"\n \n import socket, threading, queue\n import traceback, sys\n@@ -20,7 +18,7 @@ class AddressType:\n \n ### Utility functions\n def recvall(s, n):\n-    '''Receive n bytes from a socket, or fail'''\n+    \"\"\"Receive n bytes from a socket, or fail.\"\"\"\n     rv = bytearray()\n     while n > 0:\n         d = s.recv(n)\n@@ -32,15 +30,15 @@ def recvall(s, n):\n \n ### Implementation classes\n class Socks5Configuration(object):\n-    '''Proxy configuration'''\n+    \"\"\"Proxy configuration.\"\"\"\n     def __init__(self):\n         self.addr = None # Bind address (must be set)\n         self.af = socket.AF_INET # Bind address family\n         self.unauth = False  # Support unauthenticated\n         self.auth = False  # Support authentication\n \n class Socks5Command(object):\n-    '''Information about an incoming socks5 command'''\n+    \"\"\"Information about an incoming socks5 command.\"\"\"\n     def __init__(self, cmd, atyp, addr, port, username, password):\n         self.cmd = cmd # Command (one of Command.*)\n         self.atyp = atyp # Address type (one of AddressType.*)\n@@ -58,9 +56,7 @@ def __init__(self, serv, conn, peer):\n         self.peer = peer\n \n     def handle(self):\n-        '''\n-        Handle socks5 request according to RFC1928\n-        '''\n+        \"\"\"Handle socks5 request according to RFC192.\"\"\"\n         try:\n             # Verify socks version\n             ver = recvall(self.conn, 1)[0]"
      },
      {
        "sha": "c5e9c6a6589ab2e4e7f7da4905d07ddb45ccedc8",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,8 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Base class for RPC testing\n+\"\"\"Base class for RPC testing.\"\"\"\n \n import logging\n import optparse"
      },
      {
        "sha": "3a3e0dbd84183807f919122a835e39e00d388b32",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,11 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-\n-#\n-# Helpful routines for regression testing\n-#\n+\"\"\"Helpful routines for regression testing.\"\"\"\n \n import os\n import sys"
      },
      {
        "sha": "7a3b8d34744a9d28f4e4bfc4f1c5dbf4f5e4b654",
        "filename": "qa/rpc-tests/txn_clone.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/txn_clone.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/txn_clone.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txn_clone.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test proper accounting with an equivalent malleability clone\n-#\n+\"\"\"Test the wallet accounts properly when there are cloned transactions with malleated scriptsigs.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "5b12cf4c296cf905915c24bb8556b43063bd9d0b",
        "filename": "qa/rpc-tests/txn_doublespend.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/txn_doublespend.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/txn_doublespend.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txn_doublespend.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test proper accounting with a double-spend conflict\n-#\n+\"\"\"Test the wallet accounts properly when there is a double-spend conflict.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      },
      {
        "sha": "ea12d4ec2286127e8557335af58f953e9fca9987",
        "filename": "qa/rpc-tests/wallet-accounts.py",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/wallet-accounts.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/wallet-accounts.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet-accounts.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,14 +2,22 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test account RPCs.\n+\n+RPCs tested are:\n+    - getaccountaddress\n+    - getaddressesbyaccount\n+    - setaccount\n+    - sendfrom (with account arguments)\n+    - move (with account arguments)\n+\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     start_nodes,\n     assert_equal,\n )\n \n-\n class WalletAccountsTest(BitcoinTestFramework):\n \n     def __init__(self):"
      },
      {
        "sha": "b819b72b75f5bd0938c533c57ff9cf17ab55a896",
        "filename": "qa/rpc-tests/wallet-dump.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/wallet-dump.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/wallet-dump.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet-dump.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,7 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the dumpwallet RPC.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (start_nodes, start_node, assert_equal, bitcoind_processes)"
      },
      {
        "sha": "bf075900980d044dbec87cbcd605ca3fce595c5e",
        "filename": "qa/rpc-tests/wallet-hd.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/wallet-hd.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/wallet-hd.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet-hd.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,6 +2,7 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Hierarchical Deterministic wallet function.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import ("
      },
      {
        "sha": "ddeac657e51a82c556ec385166446c25cfef5681",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,7 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n+\"\"\"Test the wallet.\"\"\"\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n "
      },
      {
        "sha": "ea249096cf470fd74d1c4a11e093c740cfd171ef",
        "filename": "qa/rpc-tests/walletbackup.py",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/walletbackup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/walletbackup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/walletbackup.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,9 +2,7 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-\"\"\"\n-Exercise the wallet backup code.  Ported from walletbackup.sh.\n+\"\"\"Test the wallet backup features.\n \n Test case is:\n 4 nodes. 1 2 and 3 send transactions between each other,"
      },
      {
        "sha": "9597d05f3a5e37ad0f1a51e96d6e1b94b95f1f8f",
        "filename": "qa/rpc-tests/zapwallettxes.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/zapwallettxes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/zapwallettxes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zapwallettxes.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,7 +2,16 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the zapwallettxes functionality.\n \n+- start three bitcoind nodes\n+- create four transactions on node 0 - two are confirmed and two are\n+  unconfirmed.\n+- restart node 1 and verify that both the confirmed and the unconfirmed\n+  transactions are still available.\n+- restart node 0 and verify that the confirmed transactions are still\n+  available, but that the unconfirmed transaction has been zapped.\n+\"\"\"\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n "
      },
      {
        "sha": "1e2f06bd54b58ebe2bbca96502e748d52a9d1982",
        "filename": "qa/rpc-tests/zmq_test.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f95a806b1cd2f3c944bda7bcc266498a59326e4/qa/rpc-tests/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zmq_test.py?ref=3f95a806b1cd2f3c944bda7bcc266498a59326e4",
        "patch": "@@ -2,10 +2,7 @@\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test ZMQ interface\n-#\n+\"\"\"Test the ZMQ API.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *"
      }
    ]
  }
]