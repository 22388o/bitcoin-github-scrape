[
  {
    "sha": "be151fe4529ae3502a46f5bbf4f7c7c1587b0183",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZTE1MWZlNDUyOWFlMzUwMmE0NmY1YmJmNGY3YzdjMTU4N2IwMTgz",
    "commit": {
      "author": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-01-19T08:04:23Z"
      },
      "committer": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-01-22T23:16:06Z"
      },
      "message": "api: add api calls for send addresses.",
      "tree": {
        "sha": "35b26a3579d22a7db42516a1214eb5544436ef83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35b26a3579d22a7db42516a1214eb5544436ef83"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/be151fe4529ae3502a46f5bbf4f7c7c1587b0183",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be151fe4529ae3502a46f5bbf4f7c7c1587b0183",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/be151fe4529ae3502a46f5bbf4f7c7c1587b0183",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be151fe4529ae3502a46f5bbf4f7c7c1587b0183/comments",
    "author": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c3cd878b94e6aaa480d9fbced8d23965b096771",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c3cd878b94e6aaa480d9fbced8d23965b096771",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c3cd878b94e6aaa480d9fbced8d23965b096771"
      }
    ],
    "stats": {
      "total": 92,
      "additions": 92,
      "deletions": 0
    },
    "files": [
      {
        "sha": "78c03c9673182506c43ed66a17553db29e7eacff",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be151fe4529ae3502a46f5bbf4f7c7c1587b0183/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be151fe4529ae3502a46f5bbf4f7c7c1587b0183/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=be151fe4529ae3502a46f5bbf4f7c7c1587b0183",
        "patch": "@@ -264,6 +264,9 @@ static const CRPCCommand vRPCCommands[] =\n     { \"setaccount\",             &setaccount,             true,      false,      true },\n     { \"getaccount\",             &getaccount,             false,     false,      true },\n     { \"getaddressesbyaccount\",  &getaddressesbyaccount,  true,      false,      true },\n+    { \"getsendingaddress\",      &getsendingaddress,      true,      false,      true },\n+    { \"getsendingaddressesbylabel\", &getsendingaddressesbylabel, true, false,   true },\n+    { \"listsendingaddresses\",   &listsendingaddresses,   true,      false,      true },\n     { \"sendtoaddress\",          &sendtoaddress,          false,     false,      true },\n     { \"getreceivedbyaddress\",   &getreceivedbyaddress,   false,     false,      true },\n     { \"getreceivedbyaccount\",   &getreceivedbyaccount,   false,     false,      true },"
      },
      {
        "sha": "8557fa98495194095c40a8f0267b3212dc5d067c",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be151fe4529ae3502a46f5bbf4f7c7c1587b0183/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be151fe4529ae3502a46f5bbf4f7c7c1587b0183/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=be151fe4529ae3502a46f5bbf4f7c7c1587b0183",
        "patch": "@@ -129,6 +129,9 @@ extern json_spirit::Value getrawchangeaddress(const json_spirit::Array& params,\n extern json_spirit::Value setaccount(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getaccount(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getaddressesbyaccount(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value getsendingaddress(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value getsendingaddressesbylabel(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value listsendingaddresses(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value sendtoaddress(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value signmessage(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value verifymessage(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "5783a3a12b6cfd2ce275fc4affd3810c15e34209",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/be151fe4529ae3502a46f5bbf4f7c7c1587b0183/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/be151fe4529ae3502a46f5bbf4f7c7c1587b0183/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=be151fe4529ae3502a46f5bbf4f7c7c1587b0183",
        "patch": "@@ -170,6 +170,92 @@ Value getaccountaddress(const Array& params, bool fHelp)\n     return ret;\n }\n \n+Value getsendingaddressesbylabel(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getsendingaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the current Bitcoin sending addresses for specified label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"addresses\\\"    (array) The addresses\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getsendingaddressesbylabel\", \"\\\"noodles\\\"\")\n+            + HelpExampleRpc(\"getsendingaddressesbylabel\", \"\\\"noodles\\\"\")\n+        );\n+\n+    string strAccount = AccountFromValue(params[0]);\n+\n+    // Find all addresses that have the given account\n+    Array ret;\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+    {\n+        const CBitcoinAddress& address = item.first;\n+        const string& strName = item.second.name;\n+        if (!IsMine(*pwalletMain, address.Get()) && strName == strAccount)\n+            ret.push_back(address.ToString());\n+    }\n+\n+    return ret;\n+}\n+\n+Value getsendingaddress(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getsendingaddress \\\"label\\\"\\n\"\n+            \"\\nReturns the current Bitcoin sending address for specified label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"address\\\"    (string) The address\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getsendingaddress\", \"\\\"noodles\\\"\")\n+            + HelpExampleRpc(\"getsendingaddress\", \"\\\"noodles\\\"\")\n+        );\n+\n+    string strAccount = AccountFromValue(params[0]);\n+\n+    // Find the first address that has the given account\n+    string ret;\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+    {\n+        const CBitcoinAddress& address = item.first;\n+        const string& strName = item.second.name;\n+        if (!IsMine(*pwalletMain, address.Get()) && strName == strAccount)\n+        {\n+            ret = address.ToString();\n+            break;\n+        }\n+    }\n+\n+    return ret;\n+}\n+\n+Value listsendingaddresses(const Array& params, bool fHelp)\n+{\n+    if (fHelp)\n+        throw runtime_error(\n+            \"getsendingaddresses\\n\"\n+            \"\\nReturns the list of sending addresses.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"addresses\\\"    (object) The addresses by label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"listsendingaddresses\", \"\")\n+            + HelpExampleRpc(\"listsendingaddresses\", \"\")\n+        );\n+\n+    // Find all sending addresses and labels\n+    Object ret;\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+    {\n+        const CBitcoinAddress& address = item.first;\n+        const string& strName = item.second.name;\n+        if (!IsMine(*pwalletMain, address.Get()))\n+        {\n+            ret.push_back(Pair(strName, address.ToString()));\n+        }\n+    }\n+\n+    return ret;\n+}\n \n Value getrawchangeaddress(const Array& params, bool fHelp)\n {"
      }
    ]
  },
  {
    "sha": "0cb8f2deaf33c1812bd358be98bac1626d16589c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowY2I4ZjJkZWFmMzNjMTgxMmJkMzU4YmU5OGJhYzE2MjZkMTY1ODlj",
    "commit": {
      "author": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-01-22T23:45:27Z"
      },
      "committer": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-01-22T23:45:27Z"
      },
      "message": "api: remove getsendingaddress{,esbylabel} as they are not technically necessary.",
      "tree": {
        "sha": "4952d7d2dd895037ff8231ee029fe60766f361e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4952d7d2dd895037ff8231ee029fe60766f361e5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0cb8f2deaf33c1812bd358be98bac1626d16589c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0cb8f2deaf33c1812bd358be98bac1626d16589c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0cb8f2deaf33c1812bd358be98bac1626d16589c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0cb8f2deaf33c1812bd358be98bac1626d16589c/comments",
    "author": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "be151fe4529ae3502a46f5bbf4f7c7c1587b0183",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be151fe4529ae3502a46f5bbf4f7c7c1587b0183",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be151fe4529ae3502a46f5bbf4f7c7c1587b0183"
      }
    ],
    "stats": {
      "total": 63,
      "additions": 0,
      "deletions": 63
    },
    "files": [
      {
        "sha": "459e83651d749df5f8c549c0846d874f24687ef1",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0cb8f2deaf33c1812bd358be98bac1626d16589c/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0cb8f2deaf33c1812bd358be98bac1626d16589c/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=0cb8f2deaf33c1812bd358be98bac1626d16589c",
        "patch": "@@ -264,8 +264,6 @@ static const CRPCCommand vRPCCommands[] =\n     { \"setaccount\",             &setaccount,             true,      false,      true },\n     { \"getaccount\",             &getaccount,             false,     false,      true },\n     { \"getaddressesbyaccount\",  &getaddressesbyaccount,  true,      false,      true },\n-    { \"getsendingaddress\",      &getsendingaddress,      true,      false,      true },\n-    { \"getsendingaddressesbylabel\", &getsendingaddressesbylabel, true, false,   true },\n     { \"listsendingaddresses\",   &listsendingaddresses,   true,      false,      true },\n     { \"sendtoaddress\",          &sendtoaddress,          false,     false,      true },\n     { \"getreceivedbyaddress\",   &getreceivedbyaddress,   false,     false,      true },"
      },
      {
        "sha": "87d46b13ac68e1be973d133b88a3f3b5a1d5b35b",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0cb8f2deaf33c1812bd358be98bac1626d16589c/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0cb8f2deaf33c1812bd358be98bac1626d16589c/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=0cb8f2deaf33c1812bd358be98bac1626d16589c",
        "patch": "@@ -129,8 +129,6 @@ extern json_spirit::Value getrawchangeaddress(const json_spirit::Array& params,\n extern json_spirit::Value setaccount(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getaccount(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getaddressesbyaccount(const json_spirit::Array& params, bool fHelp);\n-extern json_spirit::Value getsendingaddress(const json_spirit::Array& params, bool fHelp);\n-extern json_spirit::Value getsendingaddressesbylabel(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value listsendingaddresses(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value sendtoaddress(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value signmessage(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "d4808c067dca6c06a69243550042ff761dadefbc",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 59,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0cb8f2deaf33c1812bd358be98bac1626d16589c/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0cb8f2deaf33c1812bd358be98bac1626d16589c/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=0cb8f2deaf33c1812bd358be98bac1626d16589c",
        "patch": "@@ -170,65 +170,6 @@ Value getaccountaddress(const Array& params, bool fHelp)\n     return ret;\n }\n \n-Value getsendingaddressesbylabel(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() != 1)\n-        throw runtime_error(\n-            \"getsendingaddressesbylabel \\\"label\\\"\\n\"\n-            \"\\nReturns the current Bitcoin sending addresses for specified label.\\n\"\n-            \"\\nResult:\\n\"\n-            \"\\\"addresses\\\"    (array) The addresses\\n\"\n-            \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getsendingaddressesbylabel\", \"\\\"noodles\\\"\")\n-            + HelpExampleRpc(\"getsendingaddressesbylabel\", \"\\\"noodles\\\"\")\n-        );\n-\n-    string strAccount = AccountFromValue(params[0]);\n-\n-    // Find all addresses that have the given account\n-    Array ret;\n-    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n-    {\n-        const CBitcoinAddress& address = item.first;\n-        const string& strName = item.second.name;\n-        if (!IsMine(*pwalletMain, address.Get()) && strName == strAccount)\n-            ret.push_back(address.ToString());\n-    }\n-\n-    return ret;\n-}\n-\n-Value getsendingaddress(const Array& params, bool fHelp)\n-{\n-    if (fHelp || params.size() != 1)\n-        throw runtime_error(\n-            \"getsendingaddress \\\"label\\\"\\n\"\n-            \"\\nReturns the current Bitcoin sending address for specified label.\\n\"\n-            \"\\nResult:\\n\"\n-            \"\\\"address\\\"    (string) The address\\n\"\n-            \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getsendingaddress\", \"\\\"noodles\\\"\")\n-            + HelpExampleRpc(\"getsendingaddress\", \"\\\"noodles\\\"\")\n-        );\n-\n-    string strAccount = AccountFromValue(params[0]);\n-\n-    // Find the first address that has the given account\n-    string ret;\n-    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n-    {\n-        const CBitcoinAddress& address = item.first;\n-        const string& strName = item.second.name;\n-        if (!IsMine(*pwalletMain, address.Get()) && strName == strAccount)\n-        {\n-            ret = address.ToString();\n-            break;\n-        }\n-    }\n-\n-    return ret;\n-}\n-\n Value listsendingaddresses(const Array& params, bool fHelp)\n {\n     if (fHelp)"
      }
    ]
  }
]