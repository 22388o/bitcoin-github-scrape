[
  {
    "sha": "19197d5e2973785e37b8b0eeefc3d6af0b2bb1fc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOTE5N2Q1ZTI5NzM3ODVlMzdiOGIwZWVlZmMzZDZhZjBiMmJiMWZj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2011-11-12T12:50:25Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2011-11-12T13:14:27Z"
      },
      "message": "Do not launch Shutdown in a new thread in case we are running the UI.\n\nThis leads to the bitcoin core being shut down while the UI is accessing it, and generally results in a segmentation fault or crash. In case it is desirable to make it possible to shutdown the GUI from its RPC server, we'll need to implement a signal for it. For the mean time, this is a safe stopgap.",
      "tree": {
        "sha": "44f74a22a5b460d923516354cbabf7581ccd2cdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44f74a22a5b460d923516354cbabf7581ccd2cdd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19197d5e2973785e37b8b0eeefc3d6af0b2bb1fc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19197d5e2973785e37b8b0eeefc3d6af0b2bb1fc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/19197d5e2973785e37b8b0eeefc3d6af0b2bb1fc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19197d5e2973785e37b8b0eeefc3d6af0b2bb1fc/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6be6be2ed9d5d4b9dc1657d434a7fed3b3935f6f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6be6be2ed9d5d4b9dc1657d434a7fed3b3935f6f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6be6be2ed9d5d4b9dc1657d434a7fed3b3935f6f"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "24864030c1b1ab78a398baac99a1e2f6ceeaa932",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19197d5e2973785e37b8b0eeefc3d6af0b2bb1fc/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19197d5e2973785e37b8b0eeefc3d6af0b2bb1fc/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=19197d5e2973785e37b8b0eeefc3d6af0b2bb1fc",
        "patch": "@@ -160,10 +160,13 @@ Value stop(const Array& params, bool fHelp)\n         throw runtime_error(\n             \"stop\\n\"\n             \"Stop bitcoin server.\");\n-\n+#ifndef QT_GUI\n     // Shutdown will take long enough that the response should get back\n     CreateThread(Shutdown, NULL);\n     return \"bitcoin server stopping\";\n+#else\n+    throw runtime_error(\"NYI: cannot shut down GUI with RPC command\");\n+#endif\n }\n \n \n@@ -2175,11 +2178,13 @@ void ThreadRPCServer2(void* parg)\n         else if (mapArgs.count(\"-daemon\"))\n             strWhatAmI = strprintf(_(\"To use the %s option\"), \"\\\"-daemon\\\"\");\n         PrintConsole(\n-            _(\"Warning: %s, you must set rpcpassword=<password>\\nin the configuration file: %s\\n\"\n+            _(\"Error: %s, you must set rpcpassword=<password>\\nin the configuration file: %s\\n\"\n               \"If the file does not exist, create it with owner-readable-only file permissions.\\n\"),\n                 strWhatAmI.c_str(),\n                 GetConfigFile().c_str());\n+#ifndef QT_GUI\n         CreateThread(Shutdown, NULL);\n+#endif\n         return;\n     }\n "
      }
    ]
  }
]