[
  {
    "sha": "dfb40dd0cdb8f3e65a3422c55353550c45130930",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZmI0MGRkMGNkYjhmM2U2NWEzNDIyYzU1MzUzNTUwYzQ1MTMwOTMw",
    "commit": {
      "author": {
        "name": "Mike Hearn",
        "email": "mike@plan99.net",
        "date": "2014-08-27T15:39:18Z"
      },
      "committer": {
        "name": "Mike Hearn",
        "email": "mike@plan99.net",
        "date": "2014-08-27T15:39:18Z"
      },
      "message": "Don't allow getutxo answer to go over the size of the send buffer.",
      "tree": {
        "sha": "e51e54ae9c472acc336442c8420dfdd07a158ee6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e51e54ae9c472acc336442c8420dfdd07a158ee6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dfb40dd0cdb8f3e65a3422c55353550c45130930",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfb40dd0cdb8f3e65a3422c55353550c45130930",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dfb40dd0cdb8f3e65a3422c55353550c45130930",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfb40dd0cdb8f3e65a3422c55353550c45130930/comments",
    "author": {
      "login": "mikehearn",
      "id": 971089,
      "node_id": "MDQ6VXNlcjk3MTA4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/971089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikehearn",
      "html_url": "https://github.com/mikehearn",
      "followers_url": "https://api.github.com/users/mikehearn/followers",
      "following_url": "https://api.github.com/users/mikehearn/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikehearn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikehearn/subscriptions",
      "organizations_url": "https://api.github.com/users/mikehearn/orgs",
      "repos_url": "https://api.github.com/users/mikehearn/repos",
      "events_url": "https://api.github.com/users/mikehearn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikehearn/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mikehearn",
      "id": 971089,
      "node_id": "MDQ6VXNlcjk3MTA4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/971089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikehearn",
      "html_url": "https://github.com/mikehearn",
      "followers_url": "https://api.github.com/users/mikehearn/followers",
      "following_url": "https://api.github.com/users/mikehearn/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikehearn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikehearn/subscriptions",
      "organizations_url": "https://api.github.com/users/mikehearn/orgs",
      "repos_url": "https://api.github.com/users/mikehearn/repos",
      "events_url": "https://api.github.com/users/mikehearn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikehearn/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd452c254fc66b6562b509ab00d6eb8e3c762106",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd452c254fc66b6562b509ab00d6eb8e3c762106",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd452c254fc66b6562b509ab00d6eb8e3c762106"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fba3d78ae620b52046a19f821e18d8ab814fc01b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfb40dd0cdb8f3e65a3422c55353550c45130930/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfb40dd0cdb8f3e65a3422c55353550c45130930/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=dfb40dd0cdb8f3e65a3422c55353550c45130930",
        "patch": "@@ -3519,6 +3519,7 @@ void static ProcessGetData(CNode* pfrom)\n     }\n }\n \n+// 8 bytes + sizeof(CTxOut)\n struct CCoin {\n     uint32_t nTxVer;   // Don't call this nVersion, that name has a special meaning inside IMPLEMENT_SERIALIZE\n     uint32_t nHeight;\n@@ -3529,6 +3530,10 @@ struct CCoin {\n         READWRITE(nHeight);\n         READWRITE(out);\n     )\n+\n+    size_t GetSizeOf() {\n+        return 8 /* two uint32_t */ + 8 /* out.nValue */ + out.scriptPubKey.size();\n+    }\n };\n \n bool ProcessGetUTXOs(const vector<COutPoint> &vOutPoints, bool fCheckMemPool, vector<unsigned char> *result, vector<CCoin> *resultCoins)\n@@ -3555,6 +3560,9 @@ bool ProcessGetUTXOs(const vector<COutPoint> &vOutPoints, bool fCheckMemPool, ve\n \n     LogPrint(\"net\", \"getutxos for %d queries %s mempool\\n\", vOutPoints.size(), fCheckMemPool ? \"with\" : \"without\");\n \n+    // Due to the above check max space the bitmap can use is 50,000 / 8 == 6250 bytes.\n+    size_t bytes_used = vOutPoints.size() / 8;\n+    size_t max_bytes = SendBufferSize();\n     boost::dynamic_bitset<unsigned char> hits(vOutPoints.size());\n     {\n         LOCK2(cs_main, mempool.cs);\n@@ -3577,6 +3585,9 @@ bool ProcessGetUTXOs(const vector<COutPoint> &vOutPoints, bool fCheckMemPool, ve\n                     coin.nHeight = coins.nHeight;\n                     coin.out = coins.vout.at(vOutPoints[i].n);\n                     assert(!coin.out.IsNull());\n+                    bytes_used += coin.GetSizeOf();\n+                    if (bytes_used > max_bytes)\n+                        return false;\n                     resultCoins->push_back(coin);\n                 }\n             }"
      }
    ]
  }
]