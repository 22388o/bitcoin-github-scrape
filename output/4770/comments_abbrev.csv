jgarzik,2014-08-27T15:43:53Z,Where are the tests that would have caught this in the first place?\nHave those tests been updated?\n,https://github.com/bitcoin/bitcoin/pull/4770#issuecomment-53592775,53592775,
luke-jr,2014-08-27T15:45:14Z,Any reason to allow >1? Seems like a good opportunity to discourage address reuse abuses.\n,https://github.com/bitcoin/bitcoin/pull/4770#issuecomment-53593140,53593140,
mikehearn,2014-08-27T15:56:06Z,"Jeff, once again you are asking questions that were already answered _in the description of the original patch_. Please do read that document, but I'll repeat the relevant section here:\n\n_Testing_\n\nI attempted to write unit tests for this, but Core has no infrastructure for building test chains .... the miner_tests.cpp code does it but at the cost of not allowing any other unit test to do so, ",https://github.com/bitcoin/bitcoin/pull/4770#issuecomment-53595846,53595846,
BitcoinPullTester,2014-08-27T15:56:36Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4770_dfb40dd0cdb8f3e65a3422c55353550c45130930/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4770#issuecomment-53595939,53595939,
jgarzik,2014-08-27T15:58:41Z,"That's a dodge.  Key phrase ""that would have caught this""\n\nIt is clearly possible to test that a P2P message does not return oversized output.\n",https://github.com/bitcoin/bitcoin/pull/4770#issuecomment-53596231,53596231,
mikehearn,2014-08-27T16:05:02Z,"Well, like I said, at the moment I'm not sure how to write a test for it and there are no examples to guide me. I tried to test ProcessGetUTXOs independently (that's why it's a separate function) but until Sergio's work lands there's no way to build test chains, so I didn't succeed.\n\nOnce there's the right infrastructure for writing this kind of unit test then I'd be happy to do so. I did write ",https://github.com/bitcoin/bitcoin/pull/4770#issuecomment-53597258,53597258,
btcdrak,2014-08-27T16:11:33Z,Seems like yet another reason to revert #4351 pending proper investigation and Sergio's patch to enable tests to be written. There is clearly zero urgency for this and it needs more time and consideration to find the right solution (or even decide if it should be a feature of p2p at all). There is no reason you can't write this for bitcoinj afterall...\n,https://github.com/bitcoin/bitcoin/pull/4770#issuecomment-53598218,53598218,
jgarzik,2014-09-14T14:50:52Z,Closing due to #4351 revert.  Presumably this gets rolled into the main getutxos implementation.\n,https://github.com/bitcoin/bitcoin/pull/4770#issuecomment-55527937,55527937,
sipa,2014-08-27T16:10:30Z,"You can use:\n\n```\nbytes_used += ::GetSerializeSize(coin, SER_NETWORK, PROTOCOL_VERSION);\n```\n\ninstead of defining a custom size computer.\n",https://github.com/bitcoin/bitcoin/pull/4770#discussion_r16785637,16785637,src/main.cpp
sipa,2014-08-27T16:11:17Z,So decreasing the send buffer size will increase the chance that we start disconnecting peers?\n,https://github.com/bitcoin/bitcoin/pull/4770#discussion_r16785793,16785793,src/main.cpp
mikehearn,2014-08-27T16:16:49Z,"How so? Like I said, requesting 50,000 outputs of a normal output would not even trigger problems. Requesting 50,000 outputs of the biggest output on the testnet doesn't even kill my node, it just bloats up and then shrinks a few seconds later. dhill had to run many times in parallel to get the effect of him running out of RAM.\n\nSo I don't see why shrinking the send buffer would cause problems f",https://github.com/bitcoin/bitcoin/pull/4770#discussion_r16786121,16786121,src/main.cpp
