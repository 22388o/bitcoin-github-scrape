[
  {
    "sha": "faf58961943361ef07382e693ab3da369be08abf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWY1ODk2MTk0MzM2MWVmMDczODJlNjkzYWIzZGEzNjliZTA4YWJm",
    "commit": {
      "author": {
        "name": "mech12",
        "email": "whdnrfo@gmail.com",
        "date": "2019-07-15T17:44:49Z"
      },
      "committer": {
        "name": "mech12",
        "email": "whdnrfo@gmail.com",
        "date": "2019-07-15T17:44:49Z"
      },
      "message": "olle 2",
      "tree": {
        "sha": "d85690853d3f59c7025fb580b0c9a67b2853afba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d85690853d3f59c7025fb580b0c9a67b2853afba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf58961943361ef07382e693ab3da369be08abf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf58961943361ef07382e693ab3da369be08abf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faf58961943361ef07382e693ab3da369be08abf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf58961943361ef07382e693ab3da369be08abf/comments",
    "author": {
      "login": "mech12",
      "id": 3130823,
      "node_id": "MDQ6VXNlcjMxMzA4MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3130823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mech12",
      "html_url": "https://github.com/mech12",
      "followers_url": "https://api.github.com/users/mech12/followers",
      "following_url": "https://api.github.com/users/mech12/following{/other_user}",
      "gists_url": "https://api.github.com/users/mech12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mech12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mech12/subscriptions",
      "organizations_url": "https://api.github.com/users/mech12/orgs",
      "repos_url": "https://api.github.com/users/mech12/repos",
      "events_url": "https://api.github.com/users/mech12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mech12/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mech12",
      "id": 3130823,
      "node_id": "MDQ6VXNlcjMxMzA4MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3130823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mech12",
      "html_url": "https://github.com/mech12",
      "followers_url": "https://api.github.com/users/mech12/followers",
      "following_url": "https://api.github.com/users/mech12/following{/other_user}",
      "gists_url": "https://api.github.com/users/mech12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mech12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mech12/subscriptions",
      "organizations_url": "https://api.github.com/users/mech12/orgs",
      "repos_url": "https://api.github.com/users/mech12/repos",
      "events_url": "https://api.github.com/users/mech12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mech12/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0822b44d8a68a3f29b12719523f6cb5253eb679c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0822b44d8a68a3f29b12719523f6cb5253eb679c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0822b44d8a68a3f29b12719523f6cb5253eb679c"
      }
    ],
    "stats": {
      "total": 109,
      "additions": 109,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f418c7c438edcae8b24e48a4d9a4dc0efa9a02eb",
        "filename": "sh.push",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf58961943361ef07382e693ab3da369be08abf/sh.push",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf58961943361ef07382e693ab3da369be08abf/sh.push",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/sh.push?ref=faf58961943361ef07382e693ab3da369be08abf",
        "patch": "@@ -0,0 +1,6 @@\n+git add *\n+git status\n+git commit -m \"$1\"\n+git pull\n+git push\n+"
      },
      {
        "sha": "9b32348e878309e9ba813a102907a57fe5dc8695",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf58961943361ef07382e693ab3da369be08abf/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf58961943361ef07382e693ab3da369be08abf/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=faf58961943361ef07382e693ab3da369be08abf",
        "patch": "@@ -22,7 +22,12 @@ static const CAmount COIN = 100000000;\n  * critical; in unusual circumstances like a(nother) overflow bug that allowed\n  * for the creation of coins out of thin air modification could lead to a fork.\n  * */\n+//mech12\n+#ifdef OLLE_BITCOIN_VER\n+static const CAmount MAX_MONEY = 9223372036854775000;\n+#else\n static const CAmount MAX_MONEY = 21000000 * COIN;\n+#endif\n inline bool MoneyRange(const CAmount& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n \n #endif //  BITCOIN_AMOUNT_H"
      },
      {
        "sha": "f2eb982aca0b20d925f9f1abd238a4dbb9a542af",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf58961943361ef07382e693ab3da369be08abf/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf58961943361ef07382e693ab3da369be08abf/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=faf58961943361ef07382e693ab3da369be08abf",
        "patch": "@@ -49,6 +49,21 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n  *     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n  *   vMerkleTree: 4a5e1e\n  */\n+\n+#ifdef OLLE_BITCOIN_VER\n+static CBlock CreateGenesisBlock_olle(uint32_t nTime //olle\n+    , uint32_t nNonce\n+    , uint32_t nBits\n+    , int32_t nVersion\n+    , const CAmount& genesisReward)\n+{\n+    //olle\n+    const char* pszTimestamp = \"olle = 1LXZp1j9U6VBUfKvqYtFrpDhE5r1LFijw1\";\n+    const CScript genesisOutputScript = CScript() << ParseHex(\"04c9a10450f6cc4dc587f18f0612c79e63499e69864765252ca4e191d12eef81ecc8385be50320de30d724369d1a02177a2d4277b304d9cbeeaed35368edd6f73c\") << OP_CHECKSIG;\n+    return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n+}\n+#endif\n+\n static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n     const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n@@ -70,8 +85,18 @@ class CMainParams : public CChainParams {\n         consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n         consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+\n+\n+#ifdef OLLE_BITCOIN_VER\n+        //mech12\n+        consensus.nPowTargetTimespan = 60 * 60; // 1 hour\n+        consensus.nPowTargetSpacing = 10 * 60;\n+#else        \n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n+#endif\n+\n+\n         consensus.fPowAllowMinDifficultyBlocks = false;\n         consensus.fPowNoRetargeting = false;\n         consensus.nRuleChangeActivationThreshold = 1916; // 95% of 2016\n@@ -110,10 +135,54 @@ class CMainParams : public CChainParams {\n         m_assumed_blockchain_size = 240;\n         m_assumed_chain_state_size = 3;\n \n+#ifdef OLLE_BITCOIN_VER\n+        genesis = CreateGenesisBlock_olle(\n+            1548720001, //= ('2019-01-29') original= 1231006505 (2009-01-03T18:15:05.000Z) ,//uint32_t nTime  \ube14\ub85d\uc758 \uc0dd\uc131\uc77c\uc2dc. new Date(1231006505*1000);\n+            2531516435,// uint32_t nNonce\n+            0x1d00ffff, // uint32_t nBits,  => 486604799\n+            1,//int32_t nVersion\n+            50 * COIN// const CAmount& genesisReward\n+           );\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+\n+        // genesis.nNonce = 0; \n+        // uint256 target = GetBlockProof_olle(genesis.nBits);\n+        // std::cout << \"target = \" << target.GetHex() << std::endl;\n+        // std::cout << \"consensus.powLimit = \" << consensus.powLimit.GetHex() << std::endl;\n+        // std::cout << \"genesis.GetHash() = \" << genesis.GetHash().GetHex() << std::endl;\n+\n+        // //for(int i=0; genesis.GetHash() < consensus.powLimit;++i){ \n+        // for(int i=0; target < genesis.GetHash();++i){ \n+        //     // printf(\"%d genesis.nNonce = %d\\n\",i, genesis.nNonce);//nonce\n+        //     // printf(\"    genesis.GetHash() = %s\\n\",  genesis.GetHash().ToString().c_str());//blockheader hash\n+        //     // printf(\"    genesis.hashMerkleRoot = %s\\n\",  genesis.hashMerkleRoot.ToString().c_str());//merkleroot hash\n+        //     genesis.nNonce++;\n+        //     if(genesis.nNonce==0){\n+        //         printf(\"genesis.nNonce==0\");\n+        //         ++genesis.nTime;\n+        //     }\n+\n+        // };\n+        // printf(\"find genesis.nTime = %d\\n\", genesis.nTime);//nonce\n+        // printf(\"find genesis.nNonce = %d\\n\", genesis.nNonce);//nonce\n+        // printf(\"find genesis.GetHash() = %s\\n\",  genesis.GetHash().ToString().c_str());//blockheader hash\n+        // printf(\"find genesis.hashMerkleRoot = %s\\n\",  genesis.hashMerkleRoot.ToString().c_str());//merkleroot hash\n+        // exit(1);\n+\n+        std::cout << \"\\n\\nroy olle consensus.hashGenesisBlock : \" << consensus.hashGenesisBlock.GetHex() << std::endl;\n+        std::cout << \"roy olle  genesis.hashMerkleRoot : \"  << genesis.hashMerkleRoot.GetHex() << std::endl;\n+        std::cout << \"\\n\\n\";\n+        assert(consensus.hashGenesisBlock == uint256S(\"0000000081ad4a71e13f60d3e420b5420c994f8d89f9c6f91b7f3d7c77ad3e22\"));//f856417948576cc9739d352971312c9724ceddc4bbb693ea16af8644cd251c06\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"188798287a2c35576e14f25a61b7bb918edc32e7c3215f0237b150409dd0d8a5\"));\n+\n+#else\n+\n         genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n         assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n         assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+#endif\n+\n \n         // Note that of those which support the service bits prefix, most only support a subset of\n         // possible options."
      },
      {
        "sha": "69a3ca0d3275f71f6bd2dc49ff09ba684e0e9e89",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf58961943361ef07382e693ab3da369be08abf/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf58961943361ef07382e693ab3da369be08abf/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=faf58961943361ef07382e693ab3da369be08abf",
        "patch": "@@ -16,7 +16,12 @@ static const unsigned int MAX_BLOCK_WEIGHT = 4000000;\n /** The maximum allowed number of signature check operations in a block (network rule) */\n static const int64_t MAX_BLOCK_SIGOPS_COST = 80000;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n+//mech12\n+#ifdef OLLE_BITCOIN_VER\n+static const int COINBASE_MATURITY = 5;\n+#else\n static const int COINBASE_MATURITY = 100;\n+#endif\n \n static const int WITNESS_SCALE_FACTOR = 4;\n "
      },
      {
        "sha": "825e180f1530135e5cec2a1870c7f13cca21db8a",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf58961943361ef07382e693ab3da369be08abf/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf58961943361ef07382e693ab3da369be08abf/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=faf58961943361ef07382e693ab3da369be08abf",
        "patch": "@@ -1014,7 +1014,11 @@ CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams)\n \n     CAmount nSubsidy = 50 * COIN;\n     // Subsidy is cut in half every 210,000 blocks which will occur approximately every 4 years.\n+    //mech12\n+    OLLE_BITCOIN();\n+#ifndef OLLE_BITCOIN_VER\n     nSubsidy >>= halvings;\n+#endif\n     return nSubsidy;\n }\n \n@@ -1683,7 +1687,10 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n     if (block.GetHash() == chainparams.GetConsensus().hashGenesisBlock) {\n         if (!fJustCheck)\n             view.SetBestBlock(pindex->GetBlockHash());\n+#ifndef OLLE_BITCOIN_VER // genesis tx\n         return true;\n+#endif\n+        OLLE_BITCOIN();\n     }\n \n     nBlocksTotal++;\n@@ -1788,7 +1795,13 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n     // post BIP34 before approximately height 486,000,000 and presumably will\n     // be reset before it reaches block 1,983,702 and starts doing unnecessary\n     // BIP30 checking again.\n+#ifdef OLLE_BITCOIN_VER //genesis tx\n+    if (block.GetHash() != chainparams.GetConsensus().hashGenesisBlock) {\n+        assert(pindex->pprev);\n+    }\n+#else\n     assert(pindex->pprev);\n+#endif\n     CBlockIndex *pindexBIP34height = pindex->pprev->GetAncestor(chainparams.GetConsensus().BIP34Height);\n     //Only continue to enforce if we're below BIP34 activation height or the block hash at that height doesn't correspond.\n     fEnforceBIP30 = fEnforceBIP30 && (!pindexBIP34height || !(pindexBIP34height->GetBlockHash() == chainparams.GetConsensus().BIP34Hash));\n@@ -1925,8 +1938,16 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n     if (fJustCheck)\n         return true;\n \n+#ifdef OLLE_BITCOIN_VER //genesis tx\n+    if (block.GetHash() != chainparams.GetConsensus().hashGenesisBlock)\n+    {\n+        if (!WriteUndoDataForBlock(blockundo, state, pindex, chainparams))\n+            return false;\n+    } \n+#else\n     if (!WriteUndoDataForBlock(blockundo, state, pindex, chainparams))\n         return false;\n+#endif\n \n     if (!pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n         pindex->RaiseValidity(BLOCK_VALID_SCRIPTS);"
      },
      {
        "sha": "caf0b13c0992654f8a165e390fb7b065c36669df",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf58961943361ef07382e693ab3da369be08abf/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf58961943361ef07382e693ab3da369be08abf/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=faf58961943361ef07382e693ab3da369be08abf",
        "patch": "@@ -42,4 +42,7 @@ static const int SHORT_IDS_BLOCKS_VERSION = 70014;\n //! not banning for invalid compact blocks starts with this version\n static const int INVALID_CB_NO_BAN_VERSION = 70015;\n \n+#define OLLE_BITCOIN_VER 1\n+inline void OLLE_BITCOIN(){} // version.h\ud30c\uc77c\uc774  inclide\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\uc6a9\n+\n #endif // BITCOIN_VERSION_H"
      }
    ]
  },
  {
    "sha": "7fd3be51d73c462a739223cfabfa170b8f85b38e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZmQzYmU1MWQ3M2M0NjJhNzM5MjIzY2ZhYmZhMTcwYjhmODViMzhl",
    "commit": {
      "author": {
        "name": "mech12",
        "email": "whdnrfo@gmail.com",
        "date": "2019-08-13T05:24:23Z"
      },
      "committer": {
        "name": "mech12",
        "email": "whdnrfo@gmail.com",
        "date": "2019-08-13T05:24:23Z"
      },
      "message": "x-code build",
      "tree": {
        "sha": "5632277262566b91db0f25ff8b1689a403178d36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5632277262566b91db0f25ff8b1689a403178d36"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7fd3be51d73c462a739223cfabfa170b8f85b38e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fd3be51d73c462a739223cfabfa170b8f85b38e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7fd3be51d73c462a739223cfabfa170b8f85b38e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fd3be51d73c462a739223cfabfa170b8f85b38e/comments",
    "author": {
      "login": "mech12",
      "id": 3130823,
      "node_id": "MDQ6VXNlcjMxMzA4MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3130823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mech12",
      "html_url": "https://github.com/mech12",
      "followers_url": "https://api.github.com/users/mech12/followers",
      "following_url": "https://api.github.com/users/mech12/following{/other_user}",
      "gists_url": "https://api.github.com/users/mech12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mech12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mech12/subscriptions",
      "organizations_url": "https://api.github.com/users/mech12/orgs",
      "repos_url": "https://api.github.com/users/mech12/repos",
      "events_url": "https://api.github.com/users/mech12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mech12/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mech12",
      "id": 3130823,
      "node_id": "MDQ6VXNlcjMxMzA4MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3130823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mech12",
      "html_url": "https://github.com/mech12",
      "followers_url": "https://api.github.com/users/mech12/followers",
      "following_url": "https://api.github.com/users/mech12/following{/other_user}",
      "gists_url": "https://api.github.com/users/mech12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mech12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mech12/subscriptions",
      "organizations_url": "https://api.github.com/users/mech12/orgs",
      "repos_url": "https://api.github.com/users/mech12/repos",
      "events_url": "https://api.github.com/users/mech12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mech12/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faf58961943361ef07382e693ab3da369be08abf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf58961943361ef07382e693ab3da369be08abf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faf58961943361ef07382e693ab3da369be08abf"
      }
    ],
    "stats": {
      "total": 1298,
      "additions": 1298,
      "deletions": 0
    },
    "files": [
      {
        "sha": "eae75532d165a60e639224959324174c80a72f5d",
        "filename": "contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.pbxproj",
        "status": "added",
        "additions": 219,
        "deletions": 0,
        "changes": 219,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fd3be51d73c462a739223cfabfa170b8f85b38e/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.pbxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fd3be51d73c462a739223cfabfa170b8f85b38e/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.pbxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.pbxproj?ref=7fd3be51d73c462a739223cfabfa170b8f85b38e",
        "patch": "@@ -0,0 +1,219 @@\n+// !$*UTF8*$!\n+{\n+\tarchiveVersion = 1;\n+\tclasses = {\n+\t};\n+\tobjectVersion = 50;\n+\tobjects = {\n+\n+/* Begin PBXFileReference section */\n+\t\tB0195F0C21F05922009E32D1 /* src */ = {isa = PBXFileReference; lastKnownFileType = folder; name = src; path = ../../../src; sourceTree = \"<group>\"; };\n+/* End PBXFileReference section */\n+\n+/* Begin PBXGroup section */\n+\t\tB059EBDC21F0572A002E3042 = {\n+\t\t\tisa = PBXGroup;\n+\t\t\tchildren = (\n+\t\t\t\tB0195F0C21F05922009E32D1 /* src */,\n+\t\t\t);\n+\t\t\tsourceTree = \"<group>\";\n+\t\t};\n+/* End PBXGroup section */\n+\n+/* Begin PBXLegacyTarget section */\n+\t\tB059EBE321F05753002E3042 /* bitcoind-make */ = {\n+\t\t\tisa = PBXLegacyTarget;\n+\t\t\tbuildArgumentsString = \"$(ACTION)\";\n+\t\t\tbuildConfigurationList = B059EBE421F05753002E3042 /* Build configuration list for PBXLegacyTarget \"bitcoind-make\" */;\n+\t\t\tbuildPhases = (\n+\t\t\t);\n+\t\t\tbuildToolPath = /usr/bin/make;\n+\t\t\tbuildWorkingDirectory = \"/Users/roy/12ships/bitcoin-alt\";\n+\t\t\tdependencies = (\n+\t\t\t);\n+\t\t\tname = \"bitcoind-make\";\n+\t\t\tpassBuildSettingsInEnvironment = 1;\n+\t\t\tproductName = \"bitcoind-make\";\n+\t\t};\n+/* End PBXLegacyTarget section */\n+\n+/* Begin PBXProject section */\n+\t\tB059EBDD21F0572A002E3042 /* Project object */ = {\n+\t\t\tisa = PBXProject;\n+\t\t\tattributes = {\n+\t\t\t\tLastUpgradeCheck = 1010;\n+\t\t\t\tTargetAttributes = {\n+\t\t\t\t\tB059EBE321F05753002E3042 = {\n+\t\t\t\t\t\tCreatedOnToolsVersion = 10.1;\n+\t\t\t\t\t};\n+\t\t\t\t};\n+\t\t\t};\n+\t\t\tbuildConfigurationList = B059EBE021F0572A002E3042 /* Build configuration list for PBXProject \"bitcoin-alt\" */;\n+\t\t\tcompatibilityVersion = \"Xcode 9.3\";\n+\t\t\tdevelopmentRegion = en;\n+\t\t\thasScannedForEncodings = 0;\n+\t\t\tknownRegions = (\n+\t\t\t\ten,\n+\t\t\t);\n+\t\t\tmainGroup = B059EBDC21F0572A002E3042;\n+\t\t\tprojectDirPath = \"\";\n+\t\t\tprojectRoot = \"\";\n+\t\t\ttargets = (\n+\t\t\t\tB059EBE321F05753002E3042 /* bitcoind-make */,\n+\t\t\t);\n+\t\t};\n+/* End PBXProject section */\n+\n+/* Begin XCBuildConfiguration section */\n+\t\tB059EBE121F0572A002E3042 /* Debug */ = {\n+\t\t\tisa = XCBuildConfiguration;\n+\t\t\tbuildSettings = {\n+\t\t\t};\n+\t\t\tname = Debug;\n+\t\t};\n+\t\tB059EBE221F0572A002E3042 /* Release */ = {\n+\t\t\tisa = XCBuildConfiguration;\n+\t\t\tbuildSettings = {\n+\t\t\t};\n+\t\t\tname = Release;\n+\t\t};\n+\t\tB059EBE521F05753002E3042 /* Debug */ = {\n+\t\t\tisa = XCBuildConfiguration;\n+\t\t\tbuildSettings = {\n+\t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n+\t\t\t\tCLANG_ANALYZER_NONNULL = YES;\n+\t\t\t\tCLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"gnu++14\";\n+\t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n+\t\t\t\tCLANG_ENABLE_MODULES = YES;\n+\t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n+\t\t\t\tCLANG_ENABLE_OBJC_WEAK = YES;\n+\t\t\t\tCLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;\n+\t\t\t\tCLANG_WARN_BOOL_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_COMMA = YES;\n+\t\t\t\tCLANG_WARN_CONSTANT_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;\n+\t\t\t\tCLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;\n+\t\t\t\tCLANG_WARN_DOCUMENTATION_COMMENTS = YES;\n+\t\t\t\tCLANG_WARN_EMPTY_BODY = YES;\n+\t\t\t\tCLANG_WARN_ENUM_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_INFINITE_RECURSION = YES;\n+\t\t\t\tCLANG_WARN_INT_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;\n+\t\t\t\tCLANG_WARN_OBJC_LITERAL_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;\n+\t\t\t\tCLANG_WARN_RANGE_LOOP_ANALYSIS = YES;\n+\t\t\t\tCLANG_WARN_STRICT_PROTOTYPES = YES;\n+\t\t\t\tCLANG_WARN_SUSPICIOUS_MOVE = YES;\n+\t\t\t\tCLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;\n+\t\t\t\tCLANG_WARN_UNREACHABLE_CODE = YES;\n+\t\t\t\tCLANG_WARN__DUPLICATE_METHOD_MATCH = YES;\n+\t\t\t\tCODE_SIGN_STYLE = Automatic;\n+\t\t\t\tCOPY_PHASE_STRIP = NO;\n+\t\t\t\tDEBUGGING_SYMBOLS = YES;\n+\t\t\t\tDEBUG_INFORMATION_FORMAT = dwarf;\n+\t\t\t\tENABLE_STRICT_OBJC_MSGSEND = YES;\n+\t\t\t\tENABLE_TESTABILITY = YES;\n+\t\t\t\tGCC_C_LANGUAGE_STANDARD = gnu11;\n+\t\t\t\tGCC_DYNAMIC_NO_PIC = NO;\n+\t\t\t\tGCC_GENERATE_DEBUGGING_SYMBOLS = YES;\n+\t\t\t\tGCC_NO_COMMON_BLOCKS = YES;\n+\t\t\t\tGCC_OPTIMIZATION_LEVEL = 0;\n+\t\t\t\tGCC_PREPROCESSOR_DEFINITIONS = (\n+\t\t\t\t\t\"DEBUG=1\",\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n+\t\t\t\tGCC_WARN_64_TO_32_BIT_CONVERSION = YES;\n+\t\t\t\tGCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;\n+\t\t\t\tGCC_WARN_UNDECLARED_SELECTOR = YES;\n+\t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n+\t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n+\t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n+\t\t\t\tMTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;\n+\t\t\t\tMTL_FAST_MATH = YES;\n+\t\t\t\tONLY_ACTIVE_ARCH = YES;\n+\t\t\t\tOTHER_CFLAGS = \"\";\n+\t\t\t\tOTHER_LDFLAGS = \"\";\n+\t\t\t\tPRODUCT_NAME = \"$(TARGET_NAME)\";\n+\t\t\t};\n+\t\t\tname = Debug;\n+\t\t};\n+\t\tB059EBE621F05753002E3042 /* Release */ = {\n+\t\t\tisa = XCBuildConfiguration;\n+\t\t\tbuildSettings = {\n+\t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n+\t\t\t\tCLANG_ANALYZER_NONNULL = YES;\n+\t\t\t\tCLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"gnu++14\";\n+\t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n+\t\t\t\tCLANG_ENABLE_MODULES = YES;\n+\t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n+\t\t\t\tCLANG_ENABLE_OBJC_WEAK = YES;\n+\t\t\t\tCLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;\n+\t\t\t\tCLANG_WARN_BOOL_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_COMMA = YES;\n+\t\t\t\tCLANG_WARN_CONSTANT_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;\n+\t\t\t\tCLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;\n+\t\t\t\tCLANG_WARN_DOCUMENTATION_COMMENTS = YES;\n+\t\t\t\tCLANG_WARN_EMPTY_BODY = YES;\n+\t\t\t\tCLANG_WARN_ENUM_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_INFINITE_RECURSION = YES;\n+\t\t\t\tCLANG_WARN_INT_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;\n+\t\t\t\tCLANG_WARN_OBJC_LITERAL_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;\n+\t\t\t\tCLANG_WARN_RANGE_LOOP_ANALYSIS = YES;\n+\t\t\t\tCLANG_WARN_STRICT_PROTOTYPES = YES;\n+\t\t\t\tCLANG_WARN_SUSPICIOUS_MOVE = YES;\n+\t\t\t\tCLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;\n+\t\t\t\tCLANG_WARN_UNREACHABLE_CODE = YES;\n+\t\t\t\tCLANG_WARN__DUPLICATE_METHOD_MATCH = YES;\n+\t\t\t\tCODE_SIGN_STYLE = Automatic;\n+\t\t\t\tCOPY_PHASE_STRIP = NO;\n+\t\t\t\tDEBUG_INFORMATION_FORMAT = \"dwarf-with-dsym\";\n+\t\t\t\tENABLE_NS_ASSERTIONS = NO;\n+\t\t\t\tENABLE_STRICT_OBJC_MSGSEND = YES;\n+\t\t\t\tGCC_C_LANGUAGE_STANDARD = gnu11;\n+\t\t\t\tGCC_NO_COMMON_BLOCKS = YES;\n+\t\t\t\tGCC_WARN_64_TO_32_BIT_CONVERSION = YES;\n+\t\t\t\tGCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;\n+\t\t\t\tGCC_WARN_UNDECLARED_SELECTOR = YES;\n+\t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n+\t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n+\t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n+\t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\n+\t\t\t\tMTL_FAST_MATH = YES;\n+\t\t\t\tOTHER_CFLAGS = \"\";\n+\t\t\t\tOTHER_LDFLAGS = \"\";\n+\t\t\t\tPRODUCT_NAME = \"$(TARGET_NAME)\";\n+\t\t\t};\n+\t\t\tname = Release;\n+\t\t};\n+/* End XCBuildConfiguration section */\n+\n+/* Begin XCConfigurationList section */\n+\t\tB059EBE021F0572A002E3042 /* Build configuration list for PBXProject \"bitcoin-alt\" */ = {\n+\t\t\tisa = XCConfigurationList;\n+\t\t\tbuildConfigurations = (\n+\t\t\t\tB059EBE121F0572A002E3042 /* Debug */,\n+\t\t\t\tB059EBE221F0572A002E3042 /* Release */,\n+\t\t\t);\n+\t\t\tdefaultConfigurationIsVisible = 0;\n+\t\t\tdefaultConfigurationName = Release;\n+\t\t};\n+\t\tB059EBE421F05753002E3042 /* Build configuration list for PBXLegacyTarget \"bitcoind-make\" */ = {\n+\t\t\tisa = XCConfigurationList;\n+\t\t\tbuildConfigurations = (\n+\t\t\t\tB059EBE521F05753002E3042 /* Debug */,\n+\t\t\t\tB059EBE621F05753002E3042 /* Release */,\n+\t\t\t);\n+\t\t\tdefaultConfigurationIsVisible = 0;\n+\t\t\tdefaultConfigurationName = Release;\n+\t\t};\n+/* End XCConfigurationList section */\n+\t};\n+\trootObject = B059EBDD21F0572A002E3042 /* Project object */;\n+}"
      },
      {
        "sha": "80eb53297e996d67c69220eb01551755bdc8c37c",
        "filename": "contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.xcworkspace/contents.xcworkspacedata",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fd3be51d73c462a739223cfabfa170b8f85b38e/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.xcworkspace/contents.xcworkspacedata",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fd3be51d73c462a739223cfabfa170b8f85b38e/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.xcworkspace/contents.xcworkspacedata",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.xcworkspace/contents.xcworkspacedata?ref=7fd3be51d73c462a739223cfabfa170b8f85b38e",
        "patch": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Workspace\n+   version = \"1.0\">\n+   <FileRef\n+      location = \"self:bitcoin-alt.xcodeproj\">\n+   </FileRef>\n+</Workspace>"
      },
      {
        "sha": "52f21651f7f07ae2bdc8eaffb93d0baacc497dda",
        "filename": "contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.xcworkspace/xcuserdata/roy.xcuserdatad/UserInterfaceState.xcuserstate",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fd3be51d73c462a739223cfabfa170b8f85b38e/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.xcworkspace/xcuserdata/roy.xcuserdatad/UserInterfaceState.xcuserstate",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fd3be51d73c462a739223cfabfa170b8f85b38e/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.xcworkspace/xcuserdata/roy.xcuserdatad/UserInterfaceState.xcuserstate",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.xcworkspace/xcuserdata/roy.xcuserdatad/UserInterfaceState.xcuserstate?ref=7fd3be51d73c462a739223cfabfa170b8f85b38e"
      },
      {
        "sha": "690fe424b6ef4d06596500f09765332c83fc2cb7",
        "filename": "contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/xcshareddata/xcschemes/bitcoind-make.xcscheme",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fd3be51d73c462a739223cfabfa170b8f85b38e/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/xcshareddata/xcschemes/bitcoind-make.xcscheme",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fd3be51d73c462a739223cfabfa170b8f85b38e/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/xcshareddata/xcschemes/bitcoind-make.xcscheme",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/xcshareddata/xcschemes/bitcoind-make.xcscheme?ref=7fd3be51d73c462a739223cfabfa170b8f85b38e",
        "patch": "@@ -0,0 +1,97 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Scheme\n+   LastUpgradeVersion = \"1010\"\n+   version = \"1.3\">\n+   <BuildAction\n+      parallelizeBuildables = \"YES\"\n+      buildImplicitDependencies = \"YES\">\n+      <BuildActionEntries>\n+         <BuildActionEntry\n+            buildForTesting = \"YES\"\n+            buildForRunning = \"YES\"\n+            buildForProfiling = \"YES\"\n+            buildForArchiving = \"YES\"\n+            buildForAnalyzing = \"YES\">\n+            <BuildableReference\n+               BuildableIdentifier = \"primary\"\n+               BlueprintIdentifier = \"B059EBE321F05753002E3042\"\n+               BuildableName = \"bitcoind-make\"\n+               BlueprintName = \"bitcoind-make\"\n+               ReferencedContainer = \"container:bitcoin-alt.xcodeproj\">\n+            </BuildableReference>\n+         </BuildActionEntry>\n+      </BuildActionEntries>\n+   </BuildAction>\n+   <TestAction\n+      buildConfiguration = \"Debug\"\n+      selectedDebuggerIdentifier = \"Xcode.DebuggerFoundation.Debugger.LLDB\"\n+      selectedLauncherIdentifier = \"Xcode.DebuggerFoundation.Launcher.LLDB\"\n+      shouldUseLaunchSchemeArgsEnv = \"YES\">\n+      <Testables>\n+      </Testables>\n+      <AdditionalOptions>\n+      </AdditionalOptions>\n+   </TestAction>\n+   <LaunchAction\n+      buildConfiguration = \"Debug\"\n+      selectedDebuggerIdentifier = \"Xcode.DebuggerFoundation.Debugger.LLDB\"\n+      selectedLauncherIdentifier = \"Xcode.DebuggerFoundation.Launcher.LLDB\"\n+      launchStyle = \"0\"\n+      useCustomWorkingDirectory = \"NO\"\n+      ignoresPersistentStateOnLaunch = \"NO\"\n+      debugDocumentVersioning = \"YES\"\n+      debugServiceExtension = \"internal\"\n+      allowLocationSimulation = \"YES\">\n+      <PathRunnable\n+         runnableDebuggingMode = \"0\"\n+         FilePath = \"/Users/roy/12ships/bitcoin-alt/src/bitcoind\">\n+      </PathRunnable>\n+      <MacroExpansion>\n+         <BuildableReference\n+            BuildableIdentifier = \"primary\"\n+            BlueprintIdentifier = \"B059EBE321F05753002E3042\"\n+            BuildableName = \"bitcoind-make\"\n+            BlueprintName = \"bitcoind-make\"\n+            ReferencedContainer = \"container:bitcoin-alt.xcodeproj\">\n+         </BuildableReference>\n+      </MacroExpansion>\n+      <CommandLineArguments>\n+         <CommandLineArgument\n+            argument = \"-debug=rpc -dns=0 -dnsseed=0 -datadir=$HOME/1/  -maxtipage=432000000 -printtoconsole\"\n+            isEnabled = \"YES\">\n+         </CommandLineArgument>\n+      </CommandLineArguments>\n+      <EnvironmentVariables>\n+         <EnvironmentVariable\n+            key = \"\"\n+            value = \"\"\n+            isEnabled = \"YES\">\n+         </EnvironmentVariable>\n+      </EnvironmentVariables>\n+      <AdditionalOptions>\n+      </AdditionalOptions>\n+   </LaunchAction>\n+   <ProfileAction\n+      buildConfiguration = \"Release\"\n+      shouldUseLaunchSchemeArgsEnv = \"YES\"\n+      savedToolIdentifier = \"\"\n+      useCustomWorkingDirectory = \"NO\"\n+      debugDocumentVersioning = \"YES\">\n+      <MacroExpansion>\n+         <BuildableReference\n+            BuildableIdentifier = \"primary\"\n+            BlueprintIdentifier = \"B059EBE321F05753002E3042\"\n+            BuildableName = \"bitcoind-make\"\n+            BlueprintName = \"bitcoind-make\"\n+            ReferencedContainer = \"container:bitcoin-alt.xcodeproj\">\n+         </BuildableReference>\n+      </MacroExpansion>\n+   </ProfileAction>\n+   <AnalyzeAction\n+      buildConfiguration = \"Debug\">\n+   </AnalyzeAction>\n+   <ArchiveAction\n+      buildConfiguration = \"Release\"\n+      revealArchiveInOrganizer = \"YES\">\n+   </ArchiveAction>\n+</Scheme>"
      },
      {
        "sha": "93aeb2aa41dce073c52876e65545a26e1ee17df8",
        "filename": "contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/xcuserdata/roy.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist",
        "status": "added",
        "additions": 327,
        "deletions": 0,
        "changes": 327,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fd3be51d73c462a739223cfabfa170b8f85b38e/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/xcuserdata/roy.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fd3be51d73c462a739223cfabfa170b8f85b38e/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/xcuserdata/roy.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/xcuserdata/roy.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist?ref=7fd3be51d73c462a739223cfabfa170b8f85b38e",
        "patch": "@@ -0,0 +1,327 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Bucket\n+   type = \"1\"\n+   version = \"2.0\">\n+   <Breakpoints>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/wallet/rpcwallet.cpp\"\n+            timestampString = \"570072786.74661\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"1019\"\n+            endingLineNumber = \"1019\"\n+            landmarkName = \"sendmany(const JSONRPCRequest&amp; request)\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"No\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/bitcoind.cpp\"\n+            timestampString = \"587366578.845022\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"120\"\n+            endingLineNumber = \"120\"\n+            landmarkName = \"AppInit(int argc, char* argv[])\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"No\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/bitcoind.cpp\"\n+            timestampString = \"587366578.845076\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"186\"\n+            endingLineNumber = \"186\"\n+            landmarkName = \"AppInit(int argc, char* argv[])\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/bitcoind.cpp\"\n+            timestampString = \"587366578.845116\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"181\"\n+            endingLineNumber = \"181\"\n+            landmarkName = \"AppInit(int argc, char* argv[])\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"No\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/init.cpp\"\n+            timestampString = \"569923804.469872\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"1248\"\n+            endingLineNumber = \"1248\"\n+            landmarkName = \"AppInitMain()\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/wallet/rpcwallet.cpp\"\n+            timestampString = \"570072786.747461\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"942\"\n+            endingLineNumber = \"942\"\n+            landmarkName = \"sendfrom(const JSONRPCRequest&amp; request)\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/wallet/rpcwallet.cpp\"\n+            timestampString = \"570072786.747678\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"421\"\n+            endingLineNumber = \"421\"\n+            landmarkName = \"SendMoney(CWallet * const pwallet, const CTxDestination &amp;address, CAmount nValue, bool fSubtractFeeFromAmount, CWalletTx&amp; wtxNew, const CCoinControl&amp; coin_control)\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/wallet/rpcwallet.cpp\"\n+            timestampString = \"570072786.7478729\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"431\"\n+            endingLineNumber = \"431\"\n+            landmarkName = \"SendMoney(CWallet * const pwallet, const CTxDestination &amp;address, CAmount nValue, bool fSubtractFeeFromAmount, CWalletTx&amp; wtxNew, const CCoinControl&amp; coin_control)\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/wallet/wallet.cpp\"\n+            timestampString = \"569923305.2452869\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"2930\"\n+            endingLineNumber = \"2930\"\n+            landmarkName = \"CWallet::CreateTransaction(const std::vector&lt;CRecipient&gt;&amp; vecSend, CWalletTx&amp; wtxNew, CReserveKey&amp; reservekey, CAmount&amp; nFeeRet, int&amp; nChangePosInOut, std::string&amp; strFailReason, const CCoinControl&amp; coin_control, bool sign)\"\n+            landmarkType = \"7\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/wallet/rpcwallet.cpp\"\n+            timestampString = \"570072786.74807\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"1097\"\n+            endingLineNumber = \"1097\"\n+            landmarkName = \"sendmany(const JSONRPCRequest&amp; request)\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/rpc/rawtransaction.cpp\"\n+            timestampString = \"570072786.748268\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"940\"\n+            endingLineNumber = \"940\"\n+            landmarkName = \"sendrawtransaction(const JSONRPCRequest&amp; request)\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"No\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/bitcoind.cpp\"\n+            timestampString = \"587366578.845296\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"66\"\n+            endingLineNumber = \"66\"\n+            landmarkName = \"AppInit(int argc, char* argv[])\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/chainparams.cpp\"\n+            timestampString = \"570629972.50869\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"100\"\n+            endingLineNumber = \"100\"\n+            landmarkName = \"GetBlockProof_olle(const uint32_t nBits)\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/validation.cpp\"\n+            timestampString = \"587364963.000703\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"1099\"\n+            endingLineNumber = \"1099\"\n+            landmarkName = \"ReadBlockFromDisk(CBlock&amp; block, const CDiskBlockPos&amp; pos, const Consensus::Params&amp; consensusParams)\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/validation.cpp\"\n+            timestampString = \"587364963.001965\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"1106\"\n+            endingLineNumber = \"1106\"\n+            landmarkName = \"ReadBlockFromDisk(CBlock&amp; block, const CDiskBlockPos&amp; pos, const Consensus::Params&amp; consensusParams)\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/validation.cpp\"\n+            timestampString = \"587364963.002158\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"1111\"\n+            endingLineNumber = \"1111\"\n+            landmarkName = \"ReadBlockFromDisk(CBlock&amp; block, const CDiskBlockPos&amp; pos, const Consensus::Params&amp; consensusParams)\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/validation.cpp\"\n+            timestampString = \"587364963.0023431\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"1110\"\n+            endingLineNumber = \"1110\"\n+            landmarkName = \"ReadBlockFromDisk(CBlock&amp; block, const CDiskBlockPos&amp; pos, const Consensus::Params&amp; consensusParams)\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/pow.cpp\"\n+            timestampString = \"570706521.764111\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"80\"\n+            endingLineNumber = \"80\"\n+            landmarkName = \"CheckProofOfWork(uint256 hash, unsigned int nBits, const Consensus::Params&amp; params)\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../../bitcoin-alt/src/validation.cpp\"\n+            timestampString = \"587366578.845458\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"1862\"\n+            endingLineNumber = \"1862\"\n+            landmarkName = \"CChainState::ConnectBlock(const CBlock&amp; block, CValidationState&amp; state, CBlockIndex* pindex, CCoinsViewCache&amp; view, const CChainParams&amp; chainparams, bool fJustCheck)\"\n+            landmarkType = \"7\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../../bitcoin-alt/src/validation.cpp\"\n+            timestampString = \"587366578.846036\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"1784\"\n+            endingLineNumber = \"1784\"\n+            landmarkName = \"CChainState::ConnectBlock(const CBlock&amp; block, CValidationState&amp; state, CBlockIndex* pindex, CCoinsViewCache&amp; view, const CChainParams&amp; chainparams, bool fJustCheck)\"\n+            landmarkType = \"7\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+   </Breakpoints>\n+</Bucket>"
      },
      {
        "sha": "75ae635ad998887eedb4809592c0d3d39e26d880",
        "filename": "src/src.xcodeproj/project.pbxproj",
        "status": "added",
        "additions": 648,
        "deletions": 0,
        "changes": 648,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fd3be51d73c462a739223cfabfa170b8f85b38e/src/src.xcodeproj/project.pbxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fd3be51d73c462a739223cfabfa170b8f85b38e/src/src.xcodeproj/project.pbxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/src.xcodeproj/project.pbxproj?ref=7fd3be51d73c462a739223cfabfa170b8f85b38e",
        "patch": "@@ -0,0 +1,648 @@\n+// !$*UTF8*$!\n+{\n+\tarchiveVersion = 1;\n+\tclasses = {\n+\t};\n+\tobjectVersion = 50;\n+\tobjects = {\n+\n+/* Begin PBXFileReference section */\n+\t\tB05E512423027B42004502D8 /* bitcoin_tx-bitcoin-tx.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"bitcoin_tx-bitcoin-tx.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E512523027B42004502D8 /* amount.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = amount.h; sourceTree = \"<group>\"; };\n+\t\tB05E512623027B42004502D8 /* chain.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = chain.h; sourceTree = \"<group>\"; };\n+\t\tB05E512723027B42004502D8 /* psbt.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = psbt.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E512823027B42004502D8 /* libbitcoin_util_a-clientversion.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_util_a-clientversion.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E512923027B42004502D8 /* reverse_iterator.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = reverse_iterator.h; sourceTree = \"<group>\"; };\n+\t\tB05E512A23027B42004502D8 /* libbitcoin_server_a-addrdb.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-addrdb.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E512B23027B42004502D8 /* flatfile.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = flatfile.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E512C23027B42004502D8 /* protocol.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = protocol.h; sourceTree = \"<group>\"; };\n+\t\tB05E512D23027B42004502D8 /* libbitcoin_wallet.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; path = libbitcoin_wallet.a; sourceTree = \"<group>\"; };\n+\t\tB05E512E23027B42004502D8 /* libbitcoin_server_a-httpserver.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-httpserver.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E512F23027B42004502D8 /* tinyformat.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = tinyformat.h; sourceTree = \"<group>\"; };\n+\t\tB05E513023027B42004502D8 /* timedata.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = timedata.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E513123027B42004502D8 /* Makefile.test.include */ = {isa = PBXFileReference; lastKnownFileType = text; path = Makefile.test.include; sourceTree = \"<group>\"; };\n+\t\tB05E513223027B42004502D8 /* bitcoin-wallet.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = \"bitcoin-wallet.cpp\"; sourceTree = \"<group>\"; };\n+\t\tB05E513323027B42004502D8 /* bitcoind.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = bitcoind.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E513423027B42004502D8 /* rest.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = rest.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E513523027B42004502D8 /* obj */ = {isa = PBXFileReference; lastKnownFileType = folder; path = obj; sourceTree = \"<group>\"; };\n+\t\tB05E513623027B42004502D8 /* consensus */ = {isa = PBXFileReference; lastKnownFileType = folder; path = consensus; sourceTree = \"<group>\"; };\n+\t\tB05E513723027B42004502D8 /* leveldb */ = {isa = PBXFileReference; lastKnownFileType = folder; path = leveldb; sourceTree = \"<group>\"; };\n+\t\tB05E513823027B42004502D8 /* flatfile.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = flatfile.h; sourceTree = \"<group>\"; };\n+\t\tB05E513923027B42004502D8 /* bench */ = {isa = PBXFileReference; lastKnownFileType = folder; path = bench; sourceTree = \"<group>\"; };\n+\t\tB05E513A23027B42004502D8 /* crypto */ = {isa = PBXFileReference; lastKnownFileType = folder; path = crypto; sourceTree = \"<group>\"; };\n+\t\tB05E513B23027B42004502D8 /* libbitcoin_common_a-chainparams.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-chainparams.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E513C23027B42004502D8 /* libbitcoin_common_a-compressor.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-compressor.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E513D23027B42004502D8 /* bitcoind */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.executable\"; path = bitcoind; sourceTree = \"<group>\"; };\n+\t\tB05E513E23027B42004502D8 /* validation.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = validation.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E513F23027B42004502D8 /* libbitcoin_util_a-random.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_util_a-random.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E514023027B42004502D8 /* blockfilter.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = blockfilter.h; sourceTree = \"<group>\"; };\n+\t\tB05E514123027B42004502D8 /* warnings.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = warnings.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E514223027B42004502D8 /* compat */ = {isa = PBXFileReference; lastKnownFileType = folder; path = compat; sourceTree = \"<group>\"; };\n+\t\tB05E514323027B42004502D8 /* libbitcoinconsensus_la-arith_uint256.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoinconsensus_la-arith_uint256.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E514423027B42004502D8 /* version.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = version.h; sourceTree = \"<group>\"; };\n+\t\tB05E514523027B42004502D8 /* httprpc.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = httprpc.h; sourceTree = \"<group>\"; };\n+\t\tB05E514623027B42004502D8 /* warnings.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = warnings.h; sourceTree = \"<group>\"; };\n+\t\tB05E514723027B42004502D8 /* libbitcoin_common_a-core_read.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-core_read.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E514823027B42004502D8 /* netmessagemaker.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = netmessagemaker.h; sourceTree = \"<group>\"; };\n+\t\tB05E514923027B42004502D8 /* coins.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = coins.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E514A23027B42004502D8 /* bitcoin-wallet */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.executable\"; path = \"bitcoin-wallet\"; sourceTree = \"<group>\"; };\n+\t\tB05E514B23027B42004502D8 /* addrman.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = addrman.h; sourceTree = \"<group>\"; };\n+\t\tB05E514C23027B42004502D8 /* threadinterrupt.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = threadinterrupt.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E514D23027B42004502D8 /* net.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = net.h; sourceTree = \"<group>\"; };\n+\t\tB05E514E23027B42004502D8 /* libbitcoin_common_a-merkleblock.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-merkleblock.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E514F23027B42004502D8 /* libbitcoin_server_a-torcontrol.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-torcontrol.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E515023027B42004502D8 /* key_io.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = key_io.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E515123027B42004502D8 /* bitcoind-bitcoind.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"bitcoind-bitcoind.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E515223027B42004502D8 /* pubkey.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = pubkey.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E515323027B42004502D8 /* streams.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = streams.h; sourceTree = \"<group>\"; };\n+\t\tB05E515423027B42004502D8 /* logging.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = logging.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E515523027B42004502D8 /* test */ = {isa = PBXFileReference; lastKnownFileType = folder; path = test; sourceTree = \"<group>\"; };\n+\t\tB05E515623027B42004502D8 /* sync.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = sync.h; sourceTree = \"<group>\"; };\n+\t\tB05E515723027B42004502D8 /* outputtype.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = outputtype.h; sourceTree = \"<group>\"; };\n+\t\tB05E515823027B42004502D8 /* noui.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = noui.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E515923027B42004502D8 /* libbitcoin_common.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; path = libbitcoin_common.a; sourceTree = \"<group>\"; };\n+\t\tB05E515A23027B42004502D8 /* util */ = {isa = PBXFileReference; lastKnownFileType = folder; path = util; sourceTree = \"<group>\"; };\n+\t\tB05E515B23027B42004502D8 /* base58.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = base58.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E515C23027B42004502D8 /* httprpc.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = httprpc.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E515D23027B42004502D8 /* dbwrapper.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = dbwrapper.h; sourceTree = \"<group>\"; };\n+\t\tB05E515E23027B42004502D8 /* shutdown.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = shutdown.h; sourceTree = \"<group>\"; };\n+\t\tB05E515F23027B42004502D8 /* config */ = {isa = PBXFileReference; lastKnownFileType = folder; path = config; sourceTree = \"<group>\"; };\n+\t\tB05E516023027B42004502D8 /* blockencodings.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = blockencodings.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E516123027B42004502D8 /* libbitcoinconsensus_la-hash.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoinconsensus_la-hash.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E516223027B42004502D8 /* libbitcoin_server.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; path = libbitcoin_server.a; sourceTree = \"<group>\"; };\n+\t\tB05E516323027B42004502D8 /* pow.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = pow.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E516423027B42004502D8 /* Makefile */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.make; path = Makefile; sourceTree = \"<group>\"; };\n+\t\tB05E516523027B42004502D8 /* base58.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = base58.h; sourceTree = \"<group>\"; };\n+\t\tB05E516623027B42004502D8 /* key.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = key.h; sourceTree = \"<group>\"; };\n+\t\tB05E516723027B42004502D8 /* random.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = random.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E516823027B42004502D8 /* banman.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = banman.h; sourceTree = \"<group>\"; };\n+\t\tB05E516923027B42004502D8 /* libbitcoin_common_a-bech32.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-bech32.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E516A23027B42004502D8 /* scheduler.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = scheduler.h; sourceTree = \"<group>\"; };\n+\t\tB05E516B23027B42004502D8 /* libbitcoin_server_a-pow.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-pow.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E516C23027B42004502D8 /* libbitcoin_server_a-blockencodings.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-blockencodings.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E516D23027B42004502D8 /* libbitcoin_common_a-bloom.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-bloom.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E516E23027B42004502D8 /* bitcoin-cli.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = \"bitcoin-cli.cpp\"; sourceTree = \"<group>\"; };\n+\t\tB05E516F23027B42004502D8 /* torcontrol.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = torcontrol.h; sourceTree = \"<group>\"; };\n+\t\tB05E517023027B42004502D8 /* shutdown.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = shutdown.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E517123027B42004502D8 /* noui.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = noui.h; sourceTree = \"<group>\"; };\n+\t\tB05E517223027B42004502D8 /* Makefile.qt.include */ = {isa = PBXFileReference; lastKnownFileType = text; path = Makefile.qt.include; sourceTree = \"<group>\"; };\n+\t\tB05E517323027B42004502D8 /* libbitcoin_common_a-coins.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-coins.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E517423027B42004502D8 /* netbase.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = netbase.h; sourceTree = \"<group>\"; };\n+\t\tB05E517523027B42004502D8 /* threadinterrupt.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = threadinterrupt.h; sourceTree = \"<group>\"; };\n+\t\tB05E517623027B42004502D8 /* qt */ = {isa = PBXFileReference; lastKnownFileType = folder; path = qt; sourceTree = \"<group>\"; };\n+\t\tB05E517723027B42004502D8 /* indirectmap.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = indirectmap.h; sourceTree = \"<group>\"; };\n+\t\tB05E517823027B42004502D8 /* bloom.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = bloom.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E517923027B42004502D8 /* libbitcoinconsensus_la-uint256.lo */ = {isa = PBXFileReference; lastKnownFileType = text; path = \"libbitcoinconsensus_la-uint256.lo\"; sourceTree = \"<group>\"; };\n+\t\tB05E517A23027B42004502D8 /* sync.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = sync.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E517B23027B42004502D8 /* libbitcoinconsensus_la-pubkey.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoinconsensus_la-pubkey.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E517C23027B42004502D8 /* core_write.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = core_write.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E517D23027B42004502D8 /* libbitcoin_cli.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; path = libbitcoin_cli.a; sourceTree = \"<group>\"; };\n+\t\tB05E517E23027B42004502D8 /* chainparams.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = chainparams.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E517F23027B42004502D8 /* chainparamsseeds.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = chainparamsseeds.h; sourceTree = \"<group>\"; };\n+\t\tB05E518023027B42004502D8 /* psbt.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = psbt.h; sourceTree = \"<group>\"; };\n+\t\tB05E518123027B42004502D8 /* prevector.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = prevector.h; sourceTree = \"<group>\"; };\n+\t\tB05E518223027B42004502D8 /* bitcoin-tx */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.executable\"; path = \"bitcoin-tx\"; sourceTree = \"<group>\"; };\n+\t\tB05E518323027B42004502D8 /* libbitcoin_server_a-validationinterface.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-validationinterface.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E518423027B42004502D8 /* attributes.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = attributes.h; sourceTree = \"<group>\"; };\n+\t\tB05E518523027B42004502D8 /* timedata.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = timedata.h; sourceTree = \"<group>\"; };\n+\t\tB05E518623027B42004502D8 /* libbitcoin_common_a-netaddress.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-netaddress.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E518723027B42004502D8 /* libbitcoin_server_a-versionbits.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-versionbits.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E518823027B42004502D8 /* libbitcoin_server_a-chain.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-chain.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E518923027B42004502D8 /* httpserver.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = httpserver.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E518A23027B42004502D8 /* logging.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = logging.h; sourceTree = \"<group>\"; };\n+\t\tB05E518B23027B42004502D8 /* merkleblock.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = merkleblock.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E518C23027B42004502D8 /* libbitcoin_server_a-txmempool.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-txmempool.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E518D23027B42004502D8 /* libbitcoin_server_a-txdb.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-txdb.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E518E23027B42004502D8 /* chainparamsbase.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = chainparamsbase.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E518F23027B42004502D8 /* optional.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = optional.h; sourceTree = \"<group>\"; };\n+\t\tB05E519023027B42004502D8 /* net_processing.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = net_processing.h; sourceTree = \"<group>\"; };\n+\t\tB05E519123027B42004502D8 /* httpserver.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = httpserver.h; sourceTree = \"<group>\"; };\n+\t\tB05E519223027B42004502D8 /* libbitcoin_common_a-versionbitsinfo.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-versionbitsinfo.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E519323027B42004502D8 /* versionbitsinfo.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = versionbitsinfo.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E519423027B42004502D8 /* txmempool.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = txmempool.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E519523027B42004502D8 /* net.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = net.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E519623027B42004502D8 /* scheduler.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = scheduler.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E519723027B42004502D8 /* validationinterface.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = validationinterface.h; sourceTree = \"<group>\"; };\n+\t\tB05E519823027B42004502D8 /* libbitcoin_common_a-key.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-key.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E519923027B42004502D8 /* compressor.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = compressor.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E519A23027B42004502D8 /* libbitcoin_server_a-init.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-init.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E519B23027B42004502D8 /* script */ = {isa = PBXFileReference; lastKnownFileType = folder; path = script; sourceTree = \"<group>\"; };\n+\t\tB05E519C23027B42004502D8 /* arith_uint256.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = arith_uint256.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E519D23027B42004502D8 /* libbitcoin_util_a-logging.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_util_a-logging.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E519E23027B42004502D8 /* key_io.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = key_io.h; sourceTree = \"<group>\"; };\n+\t\tB05E519F23027B42004502D8 /* libbitcoin_util.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; path = libbitcoin_util.a; sourceTree = \"<group>\"; };\n+\t\tB05E51A023027B42004502D8 /* chainparamsbase.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = chainparamsbase.h; sourceTree = \"<group>\"; };\n+\t\tB05E51A123027B42004502D8 /* pubkey.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = pubkey.h; sourceTree = \"<group>\"; };\n+\t\tB05E51A223027B42004502D8 /* bitcoin-tx.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = \"bitcoin-tx.cpp\"; sourceTree = \"<group>\"; };\n+\t\tB05E51A323027B42004502D8 /* libbitcoin_consensus_a-arith_uint256.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_consensus_a-arith_uint256.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51A423027B42004502D8 /* libbitcoin_server_a-net_processing.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-net_processing.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51A523027B42004502D8 /* libbitcoin_server_a-net.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-net.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51A623027B42004502D8 /* Makefile.am */ = {isa = PBXFileReference; lastKnownFileType = text; path = Makefile.am; sourceTree = \"<group>\"; };\n+\t\tB05E51A723027B42004502D8 /* Makefile.bench.include */ = {isa = PBXFileReference; lastKnownFileType = text; path = Makefile.bench.include; sourceTree = \"<group>\"; };\n+\t\tB05E51A823027B42004502D8 /* libbitcoinconsensus_la-hash.lo */ = {isa = PBXFileReference; lastKnownFileType = text; path = \"libbitcoinconsensus_la-hash.lo\"; sourceTree = \"<group>\"; };\n+\t\tB05E51A923027B42004502D8 /* primitives */ = {isa = PBXFileReference; lastKnownFileType = folder; path = primitives; sourceTree = \"<group>\"; };\n+\t\tB05E51AA23027B42004502D8 /* libbitcoin_common_a-psbt.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-psbt.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51AB23027B42004502D8 /* core_memusage.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = core_memusage.h; sourceTree = \"<group>\"; };\n+\t\tB05E51AC23027B42004502D8 /* libbitcoin_common_a-core_write.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-core_write.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51AD23027B42004502D8 /* net_processing.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = net_processing.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51AE23027B42004502D8 /* miner.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = miner.h; sourceTree = \"<group>\"; };\n+\t\tB05E51AF23027B42004502D8 /* libbitcoin_server_a-shutdown.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-shutdown.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51B023027B42004502D8 /* libbitcoin_server_a-httprpc.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-httprpc.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51B123027B42004502D8 /* secp256k1 */ = {isa = PBXFileReference; lastKnownFileType = folder; path = secp256k1; sourceTree = \"<group>\"; };\n+\t\tB05E51B223027B42004502D8 /* versionbitsinfo.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = versionbitsinfo.h; sourceTree = \"<group>\"; };\n+\t\tB05E51B323027B42004502D8 /* libbitcoin_consensus.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; path = libbitcoin_consensus.a; sourceTree = \"<group>\"; };\n+\t\tB05E51B423027B42004502D8 /* libbitcoin_server_a-addrman.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-addrman.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51B523027B42004502D8 /* libbitcoin_common_a-scheduler.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-scheduler.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51B623027B42004502D8 /* libbitcoinconsensus_la-pubkey.lo */ = {isa = PBXFileReference; lastKnownFileType = text; path = \"libbitcoinconsensus_la-pubkey.lo\"; sourceTree = \"<group>\"; };\n+\t\tB05E51B723027B42004502D8 /* libbitcoin_zmq.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; path = libbitcoin_zmq.a; sourceTree = \"<group>\"; };\n+\t\tB05E51B823027B42004502D8 /* addrdb.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = addrdb.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51B923027B42004502D8 /* libbitcoinconsensus_la-uint256.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoinconsensus_la-uint256.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51BA23027B42004502D8 /* outputtype.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = outputtype.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51BB23027B42004502D8 /* netaddress.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = netaddress.h; sourceTree = \"<group>\"; };\n+\t\tB05E51BC23027B42004502D8 /* uint256.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = uint256.h; sourceTree = \"<group>\"; };\n+\t\tB05E51BD23027B42004502D8 /* libbitcoin_consensus_a-hash.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_consensus_a-hash.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51BE23027B42004502D8 /* chain.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = chain.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51BF23027B42004502D8 /* support */ = {isa = PBXFileReference; lastKnownFileType = folder; path = support; sourceTree = \"<group>\"; };\n+\t\tB05E51C023027B42004502D8 /* netaddress.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = netaddress.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51C123027B42004502D8 /* coins.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = coins.h; sourceTree = \"<group>\"; };\n+\t\tB05E51C223027B42004502D8 /* dummywallet.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = dummywallet.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51C323027B42004502D8 /* libbitcoinconsensus_la-arith_uint256.lo */ = {isa = PBXFileReference; lastKnownFileType = text; path = \"libbitcoinconsensus_la-arith_uint256.lo\"; sourceTree = \"<group>\"; };\n+\t\tB05E51C423027B42004502D8 /* blockencodings.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = blockencodings.h; sourceTree = \"<group>\"; };\n+\t\tB05E51C523027B42004502D8 /* libbitcoin_server_a-flatfile.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-flatfile.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51C623027B42004502D8 /* blockfilter.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = blockfilter.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51C723027B42004502D8 /* libbitcoin_server_a-dbwrapper.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-dbwrapper.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51C823027B42004502D8 /* reverselock.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = reverselock.h; sourceTree = \"<group>\"; };\n+\t\tB05E51C923027B42004502D8 /* netbase.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = netbase.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51CA23027B42004502D8 /* libbitcoin_util_a-threadinterrupt.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_util_a-threadinterrupt.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51CB23027B42004502D8 /* fs.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = fs.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51CC23027B42004502D8 /* libbitcoin_server_a-rest.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-rest.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51CD23027B42004502D8 /* bloom.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = bloom.h; sourceTree = \"<group>\"; };\n+\t\tB05E51CE23027B42004502D8 /* cuckoocache.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = cuckoocache.h; sourceTree = \"<group>\"; };\n+\t\tB05E51CF23027B42004502D8 /* .clang-format */ = {isa = PBXFileReference; lastKnownFileType = text; path = \".clang-format\"; sourceTree = \"<group>\"; };\n+\t\tB05E51D023027B42004502D8 /* undo.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = undo.h; sourceTree = \"<group>\"; };\n+\t\tB05E51D123027B42004502D8 /* bech32.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = bech32.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51D223027B42004502D8 /* addrdb.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = addrdb.h; sourceTree = \"<group>\"; };\n+\t\tB05E51D323027B42004502D8 /* compat.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = compat.h; sourceTree = \"<group>\"; };\n+\t\tB05E51D423027B42004502D8 /* libbitcoin_util_a-chainparamsbase.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_util_a-chainparamsbase.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51D523027B42004502D8 /* libbitcoin_server_a-ui_interface.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-ui_interface.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51D623027B42004502D8 /* libbitcoin_server_a-blockfilter.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-blockfilter.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51D723027B42004502D8 /* wallet */ = {isa = PBXFileReference; lastKnownFileType = folder; path = wallet; sourceTree = \"<group>\"; };\n+\t\tB05E51D823027B42004502D8 /* validation.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = validation.h; sourceTree = \"<group>\"; };\n+\t\tB05E51D923027B42004502D8 /* arith_uint256.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = arith_uint256.h; sourceTree = \"<group>\"; };\n+\t\tB05E51DA23027B42004502D8 /* Makefile.qttest.include */ = {isa = PBXFileReference; lastKnownFileType = text; path = Makefile.qttest.include; sourceTree = \"<group>\"; };\n+\t\tB05E51DB23027B42004502D8 /* libbitcoinconsensus.la */ = {isa = PBXFileReference; lastKnownFileType = text; path = libbitcoinconsensus.la; sourceTree = \"<group>\"; };\n+\t\tB05E51DC23027B42004502D8 /* core_read.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = core_read.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51DD23027B42004502D8 /* index */ = {isa = PBXFileReference; lastKnownFileType = folder; path = index; sourceTree = \"<group>\"; };\n+\t\tB05E51DE23027B42004502D8 /* txdb.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = txdb.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51DF23027B42004502D8 /* ui_interface.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ui_interface.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51E023027B42004502D8 /* versionbits.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = versionbits.h; sourceTree = \"<group>\"; };\n+\t\tB05E51E123027B42004502D8 /* clientversion.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = clientversion.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51E223027B42004502D8 /* uint256.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = uint256.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51E323027B42004502D8 /* chainparams.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = chainparams.h; sourceTree = \"<group>\"; };\n+\t\tB05E51E423027B42004502D8 /* libbitcoin_consensus_a-pubkey.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_consensus_a-pubkey.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51E523027B42004502D8 /* span.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = span.h; sourceTree = \"<group>\"; };\n+\t\tB05E51E623027B42004502D8 /* protocol.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = protocol.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51E723027B42004502D8 /* threadsafety.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = threadsafety.h; sourceTree = \"<group>\"; };\n+\t\tB05E51E823027B42004502D8 /* libbitcoin_common_a-outputtype.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-outputtype.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51E923027B42004502D8 /* walletinitinterface.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = walletinitinterface.h; sourceTree = \"<group>\"; };\n+\t\tB05E51EA23027B42004502D8 /* bitcoin_cli-bitcoin-cli.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"bitcoin_cli-bitcoin-cli.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51EB23027B42004502D8 /* libbitcoin_server_a-validation.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-validation.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51EC23027B42004502D8 /* libbitcoin_common_a-warnings.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-warnings.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51ED23027B42004502D8 /* obj-test */ = {isa = PBXFileReference; lastKnownFileType = folder; path = \"obj-test\"; sourceTree = \"<group>\"; };\n+\t\tB05E51EE23027B42004502D8 /* clientversion.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = clientversion.h; sourceTree = \"<group>\"; };\n+\t\tB05E51EF23027B42004502D8 /* init.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = init.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51F023027B42004502D8 /* bitcoind-res.rc */ = {isa = PBXFileReference; lastKnownFileType = text; path = \"bitcoind-res.rc\"; sourceTree = \"<group>\"; };\n+\t\tB05E51F123027B42004502D8 /* core_io.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = core_io.h; sourceTree = \"<group>\"; };\n+\t\tB05E51F223027B42004502D8 /* torcontrol.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = torcontrol.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51F323027B42004502D8 /* hash.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = hash.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E51F423027B42004502D8 /* txdb.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = txdb.h; sourceTree = \"<group>\"; };\n+\t\tB05E51F523027B42004502D8 /* node */ = {isa = PBXFileReference; lastKnownFileType = folder; path = node; sourceTree = \"<group>\"; };\n+\t\tB05E51F623027B42004502D8 /* checkqueue.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = checkqueue.h; sourceTree = \"<group>\"; };\n+\t\tB05E51F723027B42004502D8 /* bitcoin-wallet-res.rc */ = {isa = PBXFileReference; lastKnownFileType = text; path = \"bitcoin-wallet-res.rc\"; sourceTree = \"<group>\"; };\n+\t\tB05E51F823027B42004502D8 /* rpc */ = {isa = PBXFileReference; lastKnownFileType = folder; path = rpc; sourceTree = \"<group>\"; };\n+\t\tB05E51F923027B42004502D8 /* serialize.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = serialize.h; sourceTree = \"<group>\"; };\n+\t\tB05E51FA23027B42004502D8 /* bitcoin-tx-res.rc */ = {isa = PBXFileReference; lastKnownFileType = text; path = \"bitcoin-tx-res.rc\"; sourceTree = \"<group>\"; };\n+\t\tB05E51FB23027B42004502D8 /* libbitcoin_server_a-timedata.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-timedata.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51FC23027B42004502D8 /* .deps */ = {isa = PBXFileReference; lastKnownFileType = folder; path = .deps; sourceTree = \"<group>\"; };\n+\t\tB05E51FD23027B42004502D8 /* libbitcoin_common_a-key_io.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-key_io.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E51FE23027B42004502D8 /* init.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = init.h; sourceTree = \"<group>\"; };\n+\t\tB05E51FF23027B42004502D8 /* univalue */ = {isa = PBXFileReference; lastKnownFileType = folder; path = univalue; sourceTree = \"<group>\"; };\n+\t\tB05E520023027B42004502D8 /* libbitcoin_server_a-miner.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-miner.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E520123027B42004502D8 /* validationinterface.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = validationinterface.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E520223027B42004502D8 /* libbitcoin_util_a-sync.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_util_a-sync.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E520323027B42004502D8 /* .libs */ = {isa = PBXFileReference; lastKnownFileType = folder; path = .libs; sourceTree = \"<group>\"; };\n+\t\tB05E520423027B42004502D8 /* versionbits.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = versionbits.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E520523027B42004502D8 /* compressor.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = compressor.h; sourceTree = \"<group>\"; };\n+\t\tB05E520623027B42004502D8 /* libbitcoin_common_a-base58.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-base58.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E520723027B42004502D8 /* Makefile.in */ = {isa = PBXFileReference; lastKnownFileType = text; path = Makefile.in; sourceTree = \"<group>\"; };\n+\t\tB05E520823027B42004502D8 /* pow.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = pow.h; sourceTree = \"<group>\"; };\n+\t\tB05E520923027B42004502D8 /* libbitcoin_util_a-fs.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_util_a-fs.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E520A23027B42004502D8 /* key.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = key.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E520B23027B42004502D8 /* bech32.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = bech32.h; sourceTree = \"<group>\"; };\n+\t\tB05E520C23027B42004502D8 /* banman.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = banman.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E520D23027B42004502D8 /* addrman.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = addrman.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E520E23027B42004502D8 /* txmempool.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = txmempool.h; sourceTree = \"<group>\"; };\n+\t\tB05E520F23027B42004502D8 /* zmq */ = {isa = PBXFileReference; lastKnownFileType = folder; path = zmq; sourceTree = \"<group>\"; };\n+\t\tB05E521023027B42004502D8 /* hash.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = hash.h; sourceTree = \"<group>\"; };\n+\t\tB05E521123027B42004502D8 /* libbitcoin_wallet_tool.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; path = libbitcoin_wallet_tool.a; sourceTree = \"<group>\"; };\n+\t\tB05E521223027B42004502D8 /* ui_interface.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ui_interface.h; sourceTree = \"<group>\"; };\n+\t\tB05E521323027B42004502D8 /* libbitcoin_common_a-protocol.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-protocol.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E521423027B42004502D8 /* dbwrapper.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = dbwrapper.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E521523027B42004502D8 /* libbitcoin_consensus_a-uint256.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_consensus_a-uint256.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E521623027B42004502D8 /* libbitcoin_common_a-netbase.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_common_a-netbase.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E521723027B42004502D8 /* random.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = random.h; sourceTree = \"<group>\"; };\n+\t\tB05E521823027B42004502D8 /* fs.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = fs.h; sourceTree = \"<group>\"; };\n+\t\tB05E521923027B42004502D8 /* policy */ = {isa = PBXFileReference; lastKnownFileType = folder; path = policy; sourceTree = \"<group>\"; };\n+\t\tB05E521A23027B42004502D8 /* libbitcoin_server_a-noui.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-noui.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E521B23027B42004502D8 /* miner.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = miner.cpp; sourceTree = \"<group>\"; };\n+\t\tB05E521C23027B42004502D8 /* Makefile.leveldb.include */ = {isa = PBXFileReference; lastKnownFileType = text; path = Makefile.leveldb.include; sourceTree = \"<group>\"; };\n+\t\tB05E521D23027B42004502D8 /* memusage.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = memusage.h; sourceTree = \"<group>\"; };\n+\t\tB05E521E23027B42004502D8 /* bitcoin-cli */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.executable\"; path = \"bitcoin-cli\"; sourceTree = \"<group>\"; };\n+\t\tB05E521F23027B42004502D8 /* limitedmap.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = limitedmap.h; sourceTree = \"<group>\"; };\n+\t\tB05E522023027B42004502D8 /* interfaces */ = {isa = PBXFileReference; lastKnownFileType = folder; path = interfaces; sourceTree = \"<group>\"; };\n+\t\tB05E522123027B42004502D8 /* libbitcoin_server_a-banman.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"libbitcoin_server_a-banman.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E522223027B42004502D8 /* bitcoin-cli-res.rc */ = {isa = PBXFileReference; lastKnownFileType = text; path = \"bitcoin-cli-res.rc\"; sourceTree = \"<group>\"; };\n+\t\tB05E522323027B42004502D8 /* bitcoin_wallet-bitcoin-wallet.o */ = {isa = PBXFileReference; lastKnownFileType = \"compiled.mach-o.objfile\"; path = \"bitcoin_wallet-bitcoin-wallet.o\"; sourceTree = \"<group>\"; };\n+\t\tB05E522423027B42004502D8 /* merkleblock.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = merkleblock.h; sourceTree = \"<group>\"; };\n+/* End PBXFileReference section */\n+\n+/* Begin PBXGroup section */\n+\t\tB05E511E23027B42004502D8 = {\n+\t\t\tisa = PBXGroup;\n+\t\t\tchildren = (\n+\t\t\t\tB05E512423027B42004502D8 /* bitcoin_tx-bitcoin-tx.o */,\n+\t\t\t\tB05E512523027B42004502D8 /* amount.h */,\n+\t\t\t\tB05E512623027B42004502D8 /* chain.h */,\n+\t\t\t\tB05E512723027B42004502D8 /* psbt.cpp */,\n+\t\t\t\tB05E512823027B42004502D8 /* libbitcoin_util_a-clientversion.o */,\n+\t\t\t\tB05E512923027B42004502D8 /* reverse_iterator.h */,\n+\t\t\t\tB05E512A23027B42004502D8 /* libbitcoin_server_a-addrdb.o */,\n+\t\t\t\tB05E512B23027B42004502D8 /* flatfile.cpp */,\n+\t\t\t\tB05E512C23027B42004502D8 /* protocol.h */,\n+\t\t\t\tB05E512D23027B42004502D8 /* libbitcoin_wallet.a */,\n+\t\t\t\tB05E512E23027B42004502D8 /* libbitcoin_server_a-httpserver.o */,\n+\t\t\t\tB05E512F23027B42004502D8 /* tinyformat.h */,\n+\t\t\t\tB05E513023027B42004502D8 /* timedata.cpp */,\n+\t\t\t\tB05E513123027B42004502D8 /* Makefile.test.include */,\n+\t\t\t\tB05E513223027B42004502D8 /* bitcoin-wallet.cpp */,\n+\t\t\t\tB05E513323027B42004502D8 /* bitcoind.cpp */,\n+\t\t\t\tB05E513423027B42004502D8 /* rest.cpp */,\n+\t\t\t\tB05E513523027B42004502D8 /* obj */,\n+\t\t\t\tB05E513623027B42004502D8 /* consensus */,\n+\t\t\t\tB05E513723027B42004502D8 /* leveldb */,\n+\t\t\t\tB05E513823027B42004502D8 /* flatfile.h */,\n+\t\t\t\tB05E513923027B42004502D8 /* bench */,\n+\t\t\t\tB05E513A23027B42004502D8 /* crypto */,\n+\t\t\t\tB05E513B23027B42004502D8 /* libbitcoin_common_a-chainparams.o */,\n+\t\t\t\tB05E513C23027B42004502D8 /* libbitcoin_common_a-compressor.o */,\n+\t\t\t\tB05E513D23027B42004502D8 /* bitcoind */,\n+\t\t\t\tB05E513E23027B42004502D8 /* validation.cpp */,\n+\t\t\t\tB05E513F23027B42004502D8 /* libbitcoin_util_a-random.o */,\n+\t\t\t\tB05E514023027B42004502D8 /* blockfilter.h */,\n+\t\t\t\tB05E514123027B42004502D8 /* warnings.cpp */,\n+\t\t\t\tB05E514223027B42004502D8 /* compat */,\n+\t\t\t\tB05E514323027B42004502D8 /* libbitcoinconsensus_la-arith_uint256.o */,\n+\t\t\t\tB05E514423027B42004502D8 /* version.h */,\n+\t\t\t\tB05E514523027B42004502D8 /* httprpc.h */,\n+\t\t\t\tB05E514623027B42004502D8 /* warnings.h */,\n+\t\t\t\tB05E514723027B42004502D8 /* libbitcoin_common_a-core_read.o */,\n+\t\t\t\tB05E514823027B42004502D8 /* netmessagemaker.h */,\n+\t\t\t\tB05E514923027B42004502D8 /* coins.cpp */,\n+\t\t\t\tB05E514A23027B42004502D8 /* bitcoin-wallet */,\n+\t\t\t\tB05E514B23027B42004502D8 /* addrman.h */,\n+\t\t\t\tB05E514C23027B42004502D8 /* threadinterrupt.cpp */,\n+\t\t\t\tB05E514D23027B42004502D8 /* net.h */,\n+\t\t\t\tB05E514E23027B42004502D8 /* libbitcoin_common_a-merkleblock.o */,\n+\t\t\t\tB05E514F23027B42004502D8 /* libbitcoin_server_a-torcontrol.o */,\n+\t\t\t\tB05E515023027B42004502D8 /* key_io.cpp */,\n+\t\t\t\tB05E515123027B42004502D8 /* bitcoind-bitcoind.o */,\n+\t\t\t\tB05E515223027B42004502D8 /* pubkey.cpp */,\n+\t\t\t\tB05E515323027B42004502D8 /* streams.h */,\n+\t\t\t\tB05E515423027B42004502D8 /* logging.cpp */,\n+\t\t\t\tB05E515523027B42004502D8 /* test */,\n+\t\t\t\tB05E515623027B42004502D8 /* sync.h */,\n+\t\t\t\tB05E515723027B42004502D8 /* outputtype.h */,\n+\t\t\t\tB05E515823027B42004502D8 /* noui.cpp */,\n+\t\t\t\tB05E515923027B42004502D8 /* libbitcoin_common.a */,\n+\t\t\t\tB05E515A23027B42004502D8 /* util */,\n+\t\t\t\tB05E515B23027B42004502D8 /* base58.cpp */,\n+\t\t\t\tB05E515C23027B42004502D8 /* httprpc.cpp */,\n+\t\t\t\tB05E515D23027B42004502D8 /* dbwrapper.h */,\n+\t\t\t\tB05E515E23027B42004502D8 /* shutdown.h */,\n+\t\t\t\tB05E515F23027B42004502D8 /* config */,\n+\t\t\t\tB05E516023027B42004502D8 /* blockencodings.cpp */,\n+\t\t\t\tB05E516123027B42004502D8 /* libbitcoinconsensus_la-hash.o */,\n+\t\t\t\tB05E516223027B42004502D8 /* libbitcoin_server.a */,\n+\t\t\t\tB05E516323027B42004502D8 /* pow.cpp */,\n+\t\t\t\tB05E516423027B42004502D8 /* Makefile */,\n+\t\t\t\tB05E516523027B42004502D8 /* base58.h */,\n+\t\t\t\tB05E516623027B42004502D8 /* key.h */,\n+\t\t\t\tB05E516723027B42004502D8 /* random.cpp */,\n+\t\t\t\tB05E516823027B42004502D8 /* banman.h */,\n+\t\t\t\tB05E516923027B42004502D8 /* libbitcoin_common_a-bech32.o */,\n+\t\t\t\tB05E516A23027B42004502D8 /* scheduler.h */,\n+\t\t\t\tB05E516B23027B42004502D8 /* libbitcoin_server_a-pow.o */,\n+\t\t\t\tB05E516C23027B42004502D8 /* libbitcoin_server_a-blockencodings.o */,\n+\t\t\t\tB05E516D23027B42004502D8 /* libbitcoin_common_a-bloom.o */,\n+\t\t\t\tB05E516E23027B42004502D8 /* bitcoin-cli.cpp */,\n+\t\t\t\tB05E516F23027B42004502D8 /* torcontrol.h */,\n+\t\t\t\tB05E517023027B42004502D8 /* shutdown.cpp */,\n+\t\t\t\tB05E517123027B42004502D8 /* noui.h */,\n+\t\t\t\tB05E517223027B42004502D8 /* Makefile.qt.include */,\n+\t\t\t\tB05E517323027B42004502D8 /* libbitcoin_common_a-coins.o */,\n+\t\t\t\tB05E517423027B42004502D8 /* netbase.h */,\n+\t\t\t\tB05E517523027B42004502D8 /* threadinterrupt.h */,\n+\t\t\t\tB05E517623027B42004502D8 /* qt */,\n+\t\t\t\tB05E517723027B42004502D8 /* indirectmap.h */,\n+\t\t\t\tB05E517823027B42004502D8 /* bloom.cpp */,\n+\t\t\t\tB05E517923027B42004502D8 /* libbitcoinconsensus_la-uint256.lo */,\n+\t\t\t\tB05E517A23027B42004502D8 /* sync.cpp */,\n+\t\t\t\tB05E517B23027B42004502D8 /* libbitcoinconsensus_la-pubkey.o */,\n+\t\t\t\tB05E517C23027B42004502D8 /* core_write.cpp */,\n+\t\t\t\tB05E517D23027B42004502D8 /* libbitcoin_cli.a */,\n+\t\t\t\tB05E517E23027B42004502D8 /* chainparams.cpp */,\n+\t\t\t\tB05E517F23027B42004502D8 /* chainparamsseeds.h */,\n+\t\t\t\tB05E518023027B42004502D8 /* psbt.h */,\n+\t\t\t\tB05E518123027B42004502D8 /* prevector.h */,\n+\t\t\t\tB05E518223027B42004502D8 /* bitcoin-tx */,\n+\t\t\t\tB05E518323027B42004502D8 /* libbitcoin_server_a-validationinterface.o */,\n+\t\t\t\tB05E518423027B42004502D8 /* attributes.h */,\n+\t\t\t\tB05E518523027B42004502D8 /* timedata.h */,\n+\t\t\t\tB05E518623027B42004502D8 /* libbitcoin_common_a-netaddress.o */,\n+\t\t\t\tB05E518723027B42004502D8 /* libbitcoin_server_a-versionbits.o */,\n+\t\t\t\tB05E518823027B42004502D8 /* libbitcoin_server_a-chain.o */,\n+\t\t\t\tB05E518923027B42004502D8 /* httpserver.cpp */,\n+\t\t\t\tB05E518A23027B42004502D8 /* logging.h */,\n+\t\t\t\tB05E518B23027B42004502D8 /* merkleblock.cpp */,\n+\t\t\t\tB05E518C23027B42004502D8 /* libbitcoin_server_a-txmempool.o */,\n+\t\t\t\tB05E518D23027B42004502D8 /* libbitcoin_server_a-txdb.o */,\n+\t\t\t\tB05E518E23027B42004502D8 /* chainparamsbase.cpp */,\n+\t\t\t\tB05E518F23027B42004502D8 /* optional.h */,\n+\t\t\t\tB05E519023027B42004502D8 /* net_processing.h */,\n+\t\t\t\tB05E519123027B42004502D8 /* httpserver.h */,\n+\t\t\t\tB05E519223027B42004502D8 /* libbitcoin_common_a-versionbitsinfo.o */,\n+\t\t\t\tB05E519323027B42004502D8 /* versionbitsinfo.cpp */,\n+\t\t\t\tB05E519423027B42004502D8 /* txmempool.cpp */,\n+\t\t\t\tB05E519523027B42004502D8 /* net.cpp */,\n+\t\t\t\tB05E519623027B42004502D8 /* scheduler.cpp */,\n+\t\t\t\tB05E519723027B42004502D8 /* validationinterface.h */,\n+\t\t\t\tB05E519823027B42004502D8 /* libbitcoin_common_a-key.o */,\n+\t\t\t\tB05E519923027B42004502D8 /* compressor.cpp */,\n+\t\t\t\tB05E519A23027B42004502D8 /* libbitcoin_server_a-init.o */,\n+\t\t\t\tB05E519B23027B42004502D8 /* script */,\n+\t\t\t\tB05E519C23027B42004502D8 /* arith_uint256.cpp */,\n+\t\t\t\tB05E519D23027B42004502D8 /* libbitcoin_util_a-logging.o */,\n+\t\t\t\tB05E519E23027B42004502D8 /* key_io.h */,\n+\t\t\t\tB05E519F23027B42004502D8 /* libbitcoin_util.a */,\n+\t\t\t\tB05E51A023027B42004502D8 /* chainparamsbase.h */,\n+\t\t\t\tB05E51A123027B42004502D8 /* pubkey.h */,\n+\t\t\t\tB05E51A223027B42004502D8 /* bitcoin-tx.cpp */,\n+\t\t\t\tB05E51A323027B42004502D8 /* libbitcoin_consensus_a-arith_uint256.o */,\n+\t\t\t\tB05E51A423027B42004502D8 /* libbitcoin_server_a-net_processing.o */,\n+\t\t\t\tB05E51A523027B42004502D8 /* libbitcoin_server_a-net.o */,\n+\t\t\t\tB05E51A623027B42004502D8 /* Makefile.am */,\n+\t\t\t\tB05E51A723027B42004502D8 /* Makefile.bench.include */,\n+\t\t\t\tB05E51A823027B42004502D8 /* libbitcoinconsensus_la-hash.lo */,\n+\t\t\t\tB05E51A923027B42004502D8 /* primitives */,\n+\t\t\t\tB05E51AA23027B42004502D8 /* libbitcoin_common_a-psbt.o */,\n+\t\t\t\tB05E51AB23027B42004502D8 /* core_memusage.h */,\n+\t\t\t\tB05E51AC23027B42004502D8 /* libbitcoin_common_a-core_write.o */,\n+\t\t\t\tB05E51AD23027B42004502D8 /* net_processing.cpp */,\n+\t\t\t\tB05E51AE23027B42004502D8 /* miner.h */,\n+\t\t\t\tB05E51AF23027B42004502D8 /* libbitcoin_server_a-shutdown.o */,\n+\t\t\t\tB05E51B023027B42004502D8 /* libbitcoin_server_a-httprpc.o */,\n+\t\t\t\tB05E51B123027B42004502D8 /* secp256k1 */,\n+\t\t\t\tB05E51B223027B42004502D8 /* versionbitsinfo.h */,\n+\t\t\t\tB05E51B323027B42004502D8 /* libbitcoin_consensus.a */,\n+\t\t\t\tB05E51B423027B42004502D8 /* libbitcoin_server_a-addrman.o */,\n+\t\t\t\tB05E51B523027B42004502D8 /* libbitcoin_common_a-scheduler.o */,\n+\t\t\t\tB05E51B623027B42004502D8 /* libbitcoinconsensus_la-pubkey.lo */,\n+\t\t\t\tB05E51B723027B42004502D8 /* libbitcoin_zmq.a */,\n+\t\t\t\tB05E51B823027B42004502D8 /* addrdb.cpp */,\n+\t\t\t\tB05E51B923027B42004502D8 /* libbitcoinconsensus_la-uint256.o */,\n+\t\t\t\tB05E51BA23027B42004502D8 /* outputtype.cpp */,\n+\t\t\t\tB05E51BB23027B42004502D8 /* netaddress.h */,\n+\t\t\t\tB05E51BC23027B42004502D8 /* uint256.h */,\n+\t\t\t\tB05E51BD23027B42004502D8 /* libbitcoin_consensus_a-hash.o */,\n+\t\t\t\tB05E51BE23027B42004502D8 /* chain.cpp */,\n+\t\t\t\tB05E51BF23027B42004502D8 /* support */,\n+\t\t\t\tB05E51C023027B42004502D8 /* netaddress.cpp */,\n+\t\t\t\tB05E51C123027B42004502D8 /* coins.h */,\n+\t\t\t\tB05E51C223027B42004502D8 /* dummywallet.cpp */,\n+\t\t\t\tB05E51C323027B42004502D8 /* libbitcoinconsensus_la-arith_uint256.lo */,\n+\t\t\t\tB05E51C423027B42004502D8 /* blockencodings.h */,\n+\t\t\t\tB05E51C523027B42004502D8 /* libbitcoin_server_a-flatfile.o */,\n+\t\t\t\tB05E51C623027B42004502D8 /* blockfilter.cpp */,\n+\t\t\t\tB05E51C723027B42004502D8 /* libbitcoin_server_a-dbwrapper.o */,\n+\t\t\t\tB05E51C823027B42004502D8 /* reverselock.h */,\n+\t\t\t\tB05E51C923027B42004502D8 /* netbase.cpp */,\n+\t\t\t\tB05E51CA23027B42004502D8 /* libbitcoin_util_a-threadinterrupt.o */,\n+\t\t\t\tB05E51CB23027B42004502D8 /* fs.cpp */,\n+\t\t\t\tB05E51CC23027B42004502D8 /* libbitcoin_server_a-rest.o */,\n+\t\t\t\tB05E51CD23027B42004502D8 /* bloom.h */,\n+\t\t\t\tB05E51CE23027B42004502D8 /* cuckoocache.h */,\n+\t\t\t\tB05E51CF23027B42004502D8 /* .clang-format */,\n+\t\t\t\tB05E51D023027B42004502D8 /* undo.h */,\n+\t\t\t\tB05E51D123027B42004502D8 /* bech32.cpp */,\n+\t\t\t\tB05E51D223027B42004502D8 /* addrdb.h */,\n+\t\t\t\tB05E51D323027B42004502D8 /* compat.h */,\n+\t\t\t\tB05E51D423027B42004502D8 /* libbitcoin_util_a-chainparamsbase.o */,\n+\t\t\t\tB05E51D523027B42004502D8 /* libbitcoin_server_a-ui_interface.o */,\n+\t\t\t\tB05E51D623027B42004502D8 /* libbitcoin_server_a-blockfilter.o */,\n+\t\t\t\tB05E51D723027B42004502D8 /* wallet */,\n+\t\t\t\tB05E51D823027B42004502D8 /* validation.h */,\n+\t\t\t\tB05E51D923027B42004502D8 /* arith_uint256.h */,\n+\t\t\t\tB05E51DA23027B42004502D8 /* Makefile.qttest.include */,\n+\t\t\t\tB05E51DB23027B42004502D8 /* libbitcoinconsensus.la */,\n+\t\t\t\tB05E51DC23027B42004502D8 /* core_read.cpp */,\n+\t\t\t\tB05E51DD23027B42004502D8 /* index */,\n+\t\t\t\tB05E51DE23027B42004502D8 /* txdb.cpp */,\n+\t\t\t\tB05E51DF23027B42004502D8 /* ui_interface.cpp */,\n+\t\t\t\tB05E51E023027B42004502D8 /* versionbits.h */,\n+\t\t\t\tB05E51E123027B42004502D8 /* clientversion.cpp */,\n+\t\t\t\tB05E51E223027B42004502D8 /* uint256.cpp */,\n+\t\t\t\tB05E51E323027B42004502D8 /* chainparams.h */,\n+\t\t\t\tB05E51E423027B42004502D8 /* libbitcoin_consensus_a-pubkey.o */,\n+\t\t\t\tB05E51E523027B42004502D8 /* span.h */,\n+\t\t\t\tB05E51E623027B42004502D8 /* protocol.cpp */,\n+\t\t\t\tB05E51E723027B42004502D8 /* threadsafety.h */,\n+\t\t\t\tB05E51E823027B42004502D8 /* libbitcoin_common_a-outputtype.o */,\n+\t\t\t\tB05E51E923027B42004502D8 /* walletinitinterface.h */,\n+\t\t\t\tB05E51EA23027B42004502D8 /* bitcoin_cli-bitcoin-cli.o */,\n+\t\t\t\tB05E51EB23027B42004502D8 /* libbitcoin_server_a-validation.o */,\n+\t\t\t\tB05E51EC23027B42004502D8 /* libbitcoin_common_a-warnings.o */,\n+\t\t\t\tB05E51ED23027B42004502D8 /* obj-test */,\n+\t\t\t\tB05E51EE23027B42004502D8 /* clientversion.h */,\n+\t\t\t\tB05E51EF23027B42004502D8 /* init.cpp */,\n+\t\t\t\tB05E51F023027B42004502D8 /* bitcoind-res.rc */,\n+\t\t\t\tB05E51F123027B42004502D8 /* core_io.h */,\n+\t\t\t\tB05E51F223027B42004502D8 /* torcontrol.cpp */,\n+\t\t\t\tB05E51F323027B42004502D8 /* hash.cpp */,\n+\t\t\t\tB05E51F423027B42004502D8 /* txdb.h */,\n+\t\t\t\tB05E51F523027B42004502D8 /* node */,\n+\t\t\t\tB05E51F623027B42004502D8 /* checkqueue.h */,\n+\t\t\t\tB05E51F723027B42004502D8 /* bitcoin-wallet-res.rc */,\n+\t\t\t\tB05E51F823027B42004502D8 /* rpc */,\n+\t\t\t\tB05E51F923027B42004502D8 /* serialize.h */,\n+\t\t\t\tB05E51FA23027B42004502D8 /* bitcoin-tx-res.rc */,\n+\t\t\t\tB05E51FB23027B42004502D8 /* libbitcoin_server_a-timedata.o */,\n+\t\t\t\tB05E51FC23027B42004502D8 /* .deps */,\n+\t\t\t\tB05E51FD23027B42004502D8 /* libbitcoin_common_a-key_io.o */,\n+\t\t\t\tB05E51FE23027B42004502D8 /* init.h */,\n+\t\t\t\tB05E51FF23027B42004502D8 /* univalue */,\n+\t\t\t\tB05E520023027B42004502D8 /* libbitcoin_server_a-miner.o */,\n+\t\t\t\tB05E520123027B42004502D8 /* validationinterface.cpp */,\n+\t\t\t\tB05E520223027B42004502D8 /* libbitcoin_util_a-sync.o */,\n+\t\t\t\tB05E520323027B42004502D8 /* .libs */,\n+\t\t\t\tB05E520423027B42004502D8 /* versionbits.cpp */,\n+\t\t\t\tB05E520523027B42004502D8 /* compressor.h */,\n+\t\t\t\tB05E520623027B42004502D8 /* libbitcoin_common_a-base58.o */,\n+\t\t\t\tB05E520723027B42004502D8 /* Makefile.in */,\n+\t\t\t\tB05E520823027B42004502D8 /* pow.h */,\n+\t\t\t\tB05E520923027B42004502D8 /* libbitcoin_util_a-fs.o */,\n+\t\t\t\tB05E520A23027B42004502D8 /* key.cpp */,\n+\t\t\t\tB05E520B23027B42004502D8 /* bech32.h */,\n+\t\t\t\tB05E520C23027B42004502D8 /* banman.cpp */,\n+\t\t\t\tB05E520D23027B42004502D8 /* addrman.cpp */,\n+\t\t\t\tB05E520E23027B42004502D8 /* txmempool.h */,\n+\t\t\t\tB05E520F23027B42004502D8 /* zmq */,\n+\t\t\t\tB05E521023027B42004502D8 /* hash.h */,\n+\t\t\t\tB05E521123027B42004502D8 /* libbitcoin_wallet_tool.a */,\n+\t\t\t\tB05E521223027B42004502D8 /* ui_interface.h */,\n+\t\t\t\tB05E521323027B42004502D8 /* libbitcoin_common_a-protocol.o */,\n+\t\t\t\tB05E521423027B42004502D8 /* dbwrapper.cpp */,\n+\t\t\t\tB05E521523027B42004502D8 /* libbitcoin_consensus_a-uint256.o */,\n+\t\t\t\tB05E521623027B42004502D8 /* libbitcoin_common_a-netbase.o */,\n+\t\t\t\tB05E521723027B42004502D8 /* random.h */,\n+\t\t\t\tB05E521823027B42004502D8 /* fs.h */,\n+\t\t\t\tB05E521923027B42004502D8 /* policy */,\n+\t\t\t\tB05E521A23027B42004502D8 /* libbitcoin_server_a-noui.o */,\n+\t\t\t\tB05E521B23027B42004502D8 /* miner.cpp */,\n+\t\t\t\tB05E521C23027B42004502D8 /* Makefile.leveldb.include */,\n+\t\t\t\tB05E521D23027B42004502D8 /* memusage.h */,\n+\t\t\t\tB05E521E23027B42004502D8 /* bitcoin-cli */,\n+\t\t\t\tB05E521F23027B42004502D8 /* limitedmap.h */,\n+\t\t\t\tB05E522023027B42004502D8 /* interfaces */,\n+\t\t\t\tB05E522123027B42004502D8 /* libbitcoin_server_a-banman.o */,\n+\t\t\t\tB05E522223027B42004502D8 /* bitcoin-cli-res.rc */,\n+\t\t\t\tB05E522323027B42004502D8 /* bitcoin_wallet-bitcoin-wallet.o */,\n+\t\t\t\tB05E522423027B42004502D8 /* merkleblock.h */,\n+\t\t\t);\n+\t\t\tsourceTree = \"<group>\";\n+\t\t};\n+/* End PBXGroup section */\n+\n+/* Begin PBXLegacyTarget section */\n+\t\tB05E512323027B42004502D8 /* src */ = {\n+\t\t\tisa = PBXLegacyTarget;\n+\t\t\tbuildArgumentsString = \"$(ACTION)\";\n+\t\t\tbuildConfigurationList = B05E522523027B42004502D8 /* Build configuration list for PBXLegacyTarget \"src\" */;\n+\t\t\tbuildPhases = (\n+\t\t\t);\n+\t\t\tbuildToolPath = /usr/bin/make;\n+\t\t\tbuildWorkingDirectory = \"/Users/roy/12ships/OlleChain-core2/src\";\n+\t\t\tdependencies = (\n+\t\t\t);\n+\t\t\tname = src;\n+\t\t\tpassBuildSettingsInEnvironment = 1;\n+\t\t\tproductName = src;\n+\t\t};\n+/* End PBXLegacyTarget section */\n+\n+/* Begin PBXProject section */\n+\t\tB05E511F23027B42004502D8 /* Project object */ = {\n+\t\t\tisa = PBXProject;\n+\t\t\tattributes = {\n+\t\t\t};\n+\t\t\tbuildConfigurationList = B05E512223027B42004502D8 /* Build configuration list for PBXProject \"src\" */;\n+\t\t\tcompatibilityVersion = \"Xcode 9.3\";\n+\t\t\tdevelopmentRegion = en;\n+\t\t\thasScannedForEncodings = 0;\n+\t\t\tknownRegions = (\n+\t\t\t\ten,\n+\t\t\t);\n+\t\t\tmainGroup = B05E511E23027B42004502D8;\n+\t\t\tprojectDirPath = \"\";\n+\t\t\tprojectRoot = \"\";\n+\t\t\ttargets = (\n+\t\t\t\tB05E512323027B42004502D8 /* src */,\n+\t\t\t);\n+\t\t};\n+/* End PBXProject section */\n+\n+/* Begin XCBuildConfiguration section */\n+\t\tB05E512023027B42004502D8 /* Debug */ = {\n+\t\t\tisa = XCBuildConfiguration;\n+\t\t\tbuildSettings = {\n+\t\t\t\tARCHS = \"$(ARCHS_STANDARD_32_BIT)\";\n+\t\t\t\tCOPY_PHASE_STRIP = NO;\n+\t\t\t\tGCC_WARN_ABOUT_RETURN_TYPE = YES;\n+\t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n+\t\t\t\tONLY_ACTIVE_ARCH = YES;\n+\t\t\t\tSDKROOT = macosx10.6;\n+\t\t\t};\n+\t\t\tname = Debug;\n+\t\t};\n+\t\tB05E512123027B42004502D8 /* Release */ = {\n+\t\t\tisa = XCBuildConfiguration;\n+\t\t\tbuildSettings = {\n+\t\t\t\tARCHS = \"$(ARCHS_STANDARD_32_BIT)\";\n+\t\t\t\tCOPY_PHASE_STRIP = YES;\n+\t\t\t\tGCC_WARN_ABOUT_RETURN_TYPE = YES;\n+\t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n+\t\t\t\tSDKROOT = macosx10.6;\n+\t\t\t};\n+\t\t\tname = Release;\n+\t\t};\n+\t\tB05E522623027B42004502D8 /* Debug */ = {\n+\t\t\tisa = XCBuildConfiguration;\n+\t\t\tbuildSettings = {\n+\t\t\t\tCOPY_PHASE_STRIP = NO;\n+\t\t\t\tDEBUGGING_SYMBOLS = YES;\n+\t\t\t\tGCC_DYNAMIC_NO_PIC = NO;\n+\t\t\t\tGCC_ENABLE_FIX_AND_CONTINUE = YES;\n+\t\t\t\tGCC_GENERATE_DEBUGGING_SYMBOLS = YES;\n+\t\t\t\tGCC_OPTIMIZATION_LEVEL = 0;\n+\t\t\t\tOTHER_CFLAGS = \"\";\n+\t\t\t\tOTHER_LDFLAGS = \"\";\n+\t\t\t\tPRODUCT_NAME = src;\n+\t\t\t};\n+\t\t\tname = Debug;\n+\t\t};\n+\t\tB05E522723027B42004502D8 /* Release */ = {\n+\t\t\tisa = XCBuildConfiguration;\n+\t\t\tbuildSettings = {\n+\t\t\t\tCOPY_PHASE_STRIP = YES;\n+\t\t\t\tDEBUG_INFORMATION_FORMAT = \"dwarf-with-dsym\";\n+\t\t\t\tGCC_ENABLE_FIX_AND_CONTINUE = NO;\n+\t\t\t\tOTHER_CFLAGS = \"\";\n+\t\t\t\tOTHER_LDFLAGS = \"\";\n+\t\t\t\tPRODUCT_NAME = src;\n+\t\t\t};\n+\t\t\tname = Release;\n+\t\t};\n+/* End XCBuildConfiguration section */\n+\n+/* Begin XCConfigurationList section */\n+\t\tB05E512223027B42004502D8 /* Build configuration list for PBXProject \"src\" */ = {\n+\t\t\tisa = XCConfigurationList;\n+\t\t\tbuildConfigurations = (\n+\t\t\t\tB05E512023027B42004502D8 /* Debug */,\n+\t\t\t\tB05E512123027B42004502D8 /* Release */,\n+\t\t\t);\n+\t\t\tdefaultConfigurationIsVisible = 0;\n+\t\t\tdefaultConfigurationName = Release;\n+\t\t};\n+\t\tB05E522523027B42004502D8 /* Build configuration list for PBXLegacyTarget \"src\" */ = {\n+\t\t\tisa = XCConfigurationList;\n+\t\t\tbuildConfigurations = (\n+\t\t\t\tB05E522623027B42004502D8 /* Debug */,\n+\t\t\t\tB05E522723027B42004502D8 /* Release */,\n+\t\t\t);\n+\t\t\tdefaultConfigurationIsVisible = 0;\n+\t\t\tdefaultConfigurationName = Release;\n+\t\t};\n+/* End XCConfigurationList section */\n+\t};\n+\trootObject = B05E511F23027B42004502D8 /* Project object */;\n+}"
      }
    ]
  },
  {
    "sha": "84a25f86f673cb95de2ec9c5107fcb641f215b65",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NGEyNWY4NmY2NzNjYjk1ZGUyZWM5YzUxMDdmY2I2NDFmMjE1YjY1",
    "commit": {
      "author": {
        "name": "mech12",
        "email": "whdnrfo@gmail.com",
        "date": "2019-08-13T07:09:05Z"
      },
      "committer": {
        "name": "mech12",
        "email": "whdnrfo@gmail.com",
        "date": "2019-08-13T07:09:05Z"
      },
      "message": "olle2 param",
      "tree": {
        "sha": "75e24f0bd47122187057f56fc0914d64ed824b48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75e24f0bd47122187057f56fc0914d64ed824b48"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84a25f86f673cb95de2ec9c5107fcb641f215b65",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84a25f86f673cb95de2ec9c5107fcb641f215b65",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/84a25f86f673cb95de2ec9c5107fcb641f215b65",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84a25f86f673cb95de2ec9c5107fcb641f215b65/comments",
    "author": {
      "login": "mech12",
      "id": 3130823,
      "node_id": "MDQ6VXNlcjMxMzA4MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3130823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mech12",
      "html_url": "https://github.com/mech12",
      "followers_url": "https://api.github.com/users/mech12/followers",
      "following_url": "https://api.github.com/users/mech12/following{/other_user}",
      "gists_url": "https://api.github.com/users/mech12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mech12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mech12/subscriptions",
      "organizations_url": "https://api.github.com/users/mech12/orgs",
      "repos_url": "https://api.github.com/users/mech12/repos",
      "events_url": "https://api.github.com/users/mech12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mech12/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mech12",
      "id": 3130823,
      "node_id": "MDQ6VXNlcjMxMzA4MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3130823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mech12",
      "html_url": "https://github.com/mech12",
      "followers_url": "https://api.github.com/users/mech12/followers",
      "following_url": "https://api.github.com/users/mech12/following{/other_user}",
      "gists_url": "https://api.github.com/users/mech12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mech12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mech12/subscriptions",
      "organizations_url": "https://api.github.com/users/mech12/orgs",
      "repos_url": "https://api.github.com/users/mech12/repos",
      "events_url": "https://api.github.com/users/mech12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mech12/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7fd3be51d73c462a739223cfabfa170b8f85b38e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fd3be51d73c462a739223cfabfa170b8f85b38e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7fd3be51d73c462a739223cfabfa170b8f85b38e"
      }
    ],
    "stats": {
      "total": 211,
      "additions": 179,
      "deletions": 32
    },
    "files": [
      {
        "sha": "7f35742cce48ea5ed78e58e5c2c5aa19c0d1df6a",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84a25f86f673cb95de2ec9c5107fcb641f215b65/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84a25f86f673cb95de2ec9c5107fcb641f215b65/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=84a25f86f673cb95de2ec9c5107fcb641f215b65",
        "patch": "@@ -128,3 +128,5 @@ db4/\n \n # clang-check\n *.plist\n+\n+*.tmp\n\\ No newline at end of file"
      },
      {
        "sha": "f877602ab81a0a9468c7de0f1b7c11b922171f08",
        "filename": "contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.xcworkspace/xcuserdata/roy.xcuserdatad/UserInterfaceState.xcuserstate",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84a25f86f673cb95de2ec9c5107fcb641f215b65/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.xcworkspace/xcuserdata/roy.xcuserdatad/UserInterfaceState.xcuserstate",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84a25f86f673cb95de2ec9c5107fcb641f215b65/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.xcworkspace/xcuserdata/roy.xcuserdatad/UserInterfaceState.xcuserstate",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/project.xcworkspace/xcuserdata/roy.xcuserdatad/UserInterfaceState.xcuserstate?ref=84a25f86f673cb95de2ec9c5107fcb641f215b65"
      },
      {
        "sha": "f68cc82e6a7dabf97b6370b434f1c2a652dbeab5",
        "filename": "contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/xcuserdata/roy.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist",
        "status": "modified",
        "additions": 149,
        "deletions": 6,
        "changes": 155,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84a25f86f673cb95de2ec9c5107fcb641f215b65/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/xcuserdata/roy.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84a25f86f673cb95de2ec9c5107fcb641f215b65/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/xcuserdata/roy.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/osx1/bitcoin-alt/bitcoin-alt.xcodeproj/xcuserdata/roy.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist?ref=84a25f86f673cb95de2ec9c5107fcb641f215b65",
        "patch": "@@ -26,7 +26,7 @@\n             ignoreCount = \"0\"\n             continueAfterRunningActions = \"No\"\n             filePath = \"../../../src/bitcoind.cpp\"\n-            timestampString = \"587366578.845022\"\n+            timestampString = \"587367966.243207\"\n             startingColumnNumber = \"9223372036854775807\"\n             endingColumnNumber = \"9223372036854775807\"\n             startingLineNumber = \"120\"\n@@ -42,7 +42,7 @@\n             ignoreCount = \"0\"\n             continueAfterRunningActions = \"No\"\n             filePath = \"../../../src/bitcoind.cpp\"\n-            timestampString = \"587366578.845076\"\n+            timestampString = \"587367966.243264\"\n             startingColumnNumber = \"9223372036854775807\"\n             endingColumnNumber = \"9223372036854775807\"\n             startingLineNumber = \"186\"\n@@ -58,7 +58,7 @@\n             ignoreCount = \"0\"\n             continueAfterRunningActions = \"No\"\n             filePath = \"../../../src/bitcoind.cpp\"\n-            timestampString = \"587366578.845116\"\n+            timestampString = \"587367966.243306\"\n             startingColumnNumber = \"9223372036854775807\"\n             endingColumnNumber = \"9223372036854775807\"\n             startingLineNumber = \"181\"\n@@ -186,7 +186,7 @@\n             ignoreCount = \"0\"\n             continueAfterRunningActions = \"No\"\n             filePath = \"../../../src/bitcoind.cpp\"\n-            timestampString = \"587366578.845296\"\n+            timestampString = \"587367966.243446\"\n             startingColumnNumber = \"9223372036854775807\"\n             endingColumnNumber = \"9223372036854775807\"\n             startingLineNumber = \"66\"\n@@ -298,7 +298,7 @@\n             ignoreCount = \"0\"\n             continueAfterRunningActions = \"No\"\n             filePath = \"../../../../bitcoin-alt/src/validation.cpp\"\n-            timestampString = \"587366578.845458\"\n+            timestampString = \"587367966.243569\"\n             startingColumnNumber = \"9223372036854775807\"\n             endingColumnNumber = \"9223372036854775807\"\n             startingLineNumber = \"1862\"\n@@ -314,7 +314,7 @@\n             ignoreCount = \"0\"\n             continueAfterRunningActions = \"No\"\n             filePath = \"../../../../bitcoin-alt/src/validation.cpp\"\n-            timestampString = \"587366578.846036\"\n+            timestampString = \"587367966.2441109\"\n             startingColumnNumber = \"9223372036854775807\"\n             endingColumnNumber = \"9223372036854775807\"\n             startingLineNumber = \"1784\"\n@@ -323,5 +323,148 @@\n             landmarkType = \"7\">\n          </BreakpointContent>\n       </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/bitcoind.cpp\"\n+            timestampString = \"587367966.244503\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"195\"\n+            endingLineNumber = \"195\"\n+            landmarkName = \"main(int argc, char* argv[])\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/bitcoind.cpp\"\n+            timestampString = \"587367966.2445461\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"64\"\n+            endingLineNumber = \"64\"\n+            landmarkName = \"AppInit(int argc, char* argv[])\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../src/bitcoind.cpp\"\n+            timestampString = \"587367966.244586\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"59\"\n+            endingLineNumber = \"59\"\n+            landmarkName = \"AppInit(int argc, char* argv[])\"\n+            landmarkType = \"9\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../../bitcoin-alt/src/validation.cpp\"\n+            timestampString = \"587367966.244625\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"2351\"\n+            endingLineNumber = \"2351\"\n+            landmarkName = \"CChainState::ConnectTip(CValidationState&amp; state, const CChainParams&amp; chainparams, CBlockIndex* pindexNew, const std::shared_ptr&lt;const CBlock&gt;&amp; pblock, ConnectTrace&amp; connectTrace, DisconnectedBlockTransactions &amp;disconnectpool)\"\n+            landmarkType = \"7\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../../bitcoin-alt/src/validation.cpp\"\n+            timestampString = \"587367966.245002\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"2669\"\n+            endingLineNumber = \"2669\"\n+            landmarkName = \"ActivateBestChain(CValidationState &amp;state, const CChainParams&amp; chainparams, std::shared_ptr&lt;const CBlock&gt; pblock)\"\n+            landmarkType = \"9\">\n+            <Locations>\n+               <Location\n+                  shouldBeEnabled = \"Yes\"\n+                  ignoreCount = \"0\"\n+                  continueAfterRunningActions = \"No\"\n+                  symbolName = \"ActivateBestChain(CValidationState&amp;, CChainParams const&amp;, std::__1::shared_ptr&lt;CBlock const&gt;)\"\n+                  moduleName = \"bitcoind\"\n+                  usesParentBreakpointCondition = \"Yes\"\n+                  urlString = \"file:///Users/roy/12ships/bitcoin-alt/src/validation.cpp\"\n+                  timestampString = \"587367966.5492001\"\n+                  startingColumnNumber = \"9223372036854775807\"\n+                  endingColumnNumber = \"9223372036854775807\"\n+                  startingLineNumber = \"2669\"\n+                  endingLineNumber = \"2669\"\n+                  offsetFromSymbolStart = \"55\">\n+               </Location>\n+               <Location\n+                  shouldBeEnabled = \"Yes\"\n+                  ignoreCount = \"0\"\n+                  continueAfterRunningActions = \"No\"\n+                  symbolName = \"LoadChainTip(CChainParams const&amp;)\"\n+                  moduleName = \"bitcoind\"\n+                  usesParentBreakpointCondition = \"Yes\"\n+                  urlString = \"file:///Users/roy/12ships/bitcoin-alt/src/validation.cpp\"\n+                  timestampString = \"587367966.550899\"\n+                  startingColumnNumber = \"9223372036854775807\"\n+                  endingColumnNumber = \"9223372036854775807\"\n+                  startingLineNumber = \"2669\"\n+                  endingLineNumber = \"2669\"\n+                  offsetFromSymbolStart = \"446\">\n+               </Location>\n+               <Location\n+                  shouldBeEnabled = \"Yes\"\n+                  ignoreCount = \"0\"\n+                  continueAfterRunningActions = \"No\"\n+                  symbolName = \"LoadExternalBlockFile(CChainParams const&amp;, __sFILE*, CDiskBlockPos*)\"\n+                  moduleName = \"bitcoind\"\n+                  usesParentBreakpointCondition = \"Yes\"\n+                  urlString = \"file:///Users/roy/12ships/bitcoin-alt/src/validation.cpp\"\n+                  timestampString = \"587367966.552622\"\n+                  startingColumnNumber = \"9223372036854775807\"\n+                  endingColumnNumber = \"9223372036854775807\"\n+                  startingLineNumber = \"2669\"\n+                  endingLineNumber = \"2669\"\n+                  offsetFromSymbolStart = \"2223\">\n+               </Location>\n+            </Locations>\n+         </BreakpointContent>\n+      </BreakpointProxy>\n+      <BreakpointProxy\n+         BreakpointExtensionID = \"Xcode.Breakpoint.FileBreakpoint\">\n+         <BreakpointContent\n+            shouldBeEnabled = \"Yes\"\n+            ignoreCount = \"0\"\n+            continueAfterRunningActions = \"No\"\n+            filePath = \"../../../../bitcoin-alt/src/validation.cpp\"\n+            timestampString = \"587367966.245392\"\n+            startingColumnNumber = \"9223372036854775807\"\n+            endingColumnNumber = \"9223372036854775807\"\n+            startingLineNumber = \"2590\"\n+            endingLineNumber = \"2590\"\n+            landmarkName = \"CChainState::ActivateBestChain(CValidationState &amp;state, const CChainParams&amp; chainparams, std::shared_ptr&lt;const CBlock&gt; pblock)\"\n+            landmarkType = \"7\">\n+         </BreakpointContent>\n+      </BreakpointProxy>\n    </Breakpoints>\n </Bucket>"
      },
      {
        "sha": "146b471b8b9268660a8b6554c967e8c2504308b3",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84a25f86f673cb95de2ec9c5107fcb641f215b65/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84a25f86f673cb95de2ec9c5107fcb641f215b65/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=84a25f86f673cb95de2ec9c5107fcb641f215b65",
        "patch": "@@ -24,9 +24,9 @@ static const CAmount COIN = 100000000;\n  * */\n //mech12\n #ifdef OLLE_BITCOIN_VER\n-static const CAmount MAX_MONEY = 9223372036854775000;\n+\tstatic const CAmount MAX_MONEY = 9223372036854775000;\n #else\n-static const CAmount MAX_MONEY = 21000000 * COIN;\n+\tstatic const CAmount MAX_MONEY = 21000000 * COIN;\n #endif\n inline bool MoneyRange(const CAmount& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n "
      },
      {
        "sha": "e1d49ef5f6458c79faa13f00b2557e9316fb37bc",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84a25f86f673cb95de2ec9c5107fcb641f215b65/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84a25f86f673cb95de2ec9c5107fcb641f215b65/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=84a25f86f673cb95de2ec9c5107fcb641f215b65",
        "patch": "@@ -17,6 +17,8 @@\n #include <boost/algorithm/string/classification.hpp>\n #include <boost/algorithm/string/split.hpp>\n \n+#define OLLE_BITCOIN_VER\n+\n static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n     CMutableTransaction txNew;"
      },
      {
        "sha": "63c8d66eb29e6d61589fed8dc0bea36fe5e5d98f",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84a25f86f673cb95de2ec9c5107fcb641f215b65/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84a25f86f673cb95de2ec9c5107fcb641f215b65/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=84a25f86f673cb95de2ec9c5107fcb641f215b65",
        "patch": "@@ -17,11 +17,11 @@ static const unsigned int MAX_BLOCK_WEIGHT = 4000000;\n static const int64_t MAX_BLOCK_SIGOPS_COST = 80000;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n //mech12\n-#ifdef OLLE_BITCOIN_VER\n-static const int COINBASE_MATURITY = 5;\n-#else\n+// #ifdef OLLE2_BITCOIN_VER\n+// static const int COINBASE_MATURITY = 5;\n+// #else\n static const int COINBASE_MATURITY = 100;\n-#endif\n+// #endif\n \n static const int WITNESS_SCALE_FACTOR = 4;\n "
      },
      {
        "sha": "f813a423d5819b2fb83217d257e033e6cde9da7d",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84a25f86f673cb95de2ec9c5107fcb641f215b65/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84a25f86f673cb95de2ec9c5107fcb641f215b65/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=84a25f86f673cb95de2ec9c5107fcb641f215b65",
        "patch": "@@ -1015,10 +1015,10 @@ CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams)\n     CAmount nSubsidy = 50 * COIN;\n     // Subsidy is cut in half every 210,000 blocks which will occur approximately every 4 years.\n     //mech12\n-    OLLE_BITCOIN();\n-#ifndef OLLE_BITCOIN_VER\n+//     OLLE_BITCOIN();\n+// #ifndef OLLE2_BITCOIN_VER\n     nSubsidy >>= halvings;\n-#endif\n+// #endif\n     return nSubsidy;\n }\n \n@@ -1687,10 +1687,10 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n     if (block.GetHash() == chainparams.GetConsensus().hashGenesisBlock) {\n         if (!fJustCheck)\n             view.SetBestBlock(pindex->GetBlockHash());\n-#ifndef OLLE_BITCOIN_VER // genesis tx\n+// #ifndef OLLE2_BITCOIN_VER // genesis tx\n         return true;\n-#endif\n-        OLLE_BITCOIN();\n+// #endif\n+//         OLLE_BITCOIN();\n     }\n \n     nBlocksTotal++;\n@@ -1795,13 +1795,13 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n     // post BIP34 before approximately height 486,000,000 and presumably will\n     // be reset before it reaches block 1,983,702 and starts doing unnecessary\n     // BIP30 checking again.\n-#ifdef OLLE_BITCOIN_VER //genesis tx\n-    if (block.GetHash() != chainparams.GetConsensus().hashGenesisBlock) {\n-        assert(pindex->pprev);\n-    }\n-#else\n+// #ifdef OLLE2_BITCOIN_VER //genesis tx\n+//     if (block.GetHash() != chainparams.GetConsensus().hashGenesisBlock) {\n+//         assert(pindex->pprev);\n+//     }\n+// #else\n     assert(pindex->pprev);\n-#endif\n+// #endif\n     CBlockIndex *pindexBIP34height = pindex->pprev->GetAncestor(chainparams.GetConsensus().BIP34Height);\n     //Only continue to enforce if we're below BIP34 activation height or the block hash at that height doesn't correspond.\n     fEnforceBIP30 = fEnforceBIP30 && (!pindexBIP34height || !(pindexBIP34height->GetBlockHash() == chainparams.GetConsensus().BIP34Hash));\n@@ -1938,16 +1938,16 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n     if (fJustCheck)\n         return true;\n \n-#ifdef OLLE_BITCOIN_VER //genesis tx\n-    if (block.GetHash() != chainparams.GetConsensus().hashGenesisBlock)\n-    {\n-        if (!WriteUndoDataForBlock(blockundo, state, pindex, chainparams))\n-            return false;\n-    } \n-#else\n+// #ifdef OLLE2_BITCOIN_VER //genesis tx\n+//     if (block.GetHash() != chainparams.GetConsensus().hashGenesisBlock)\n+//     {\n+//         if (!WriteUndoDataForBlock(blockundo, state, pindex, chainparams))\n+//             return false;\n+//     } \n+// #else\n     if (!WriteUndoDataForBlock(blockundo, state, pindex, chainparams))\n         return false;\n-#endif\n+// #endif\n \n     if (!pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n         pindex->RaiseValidity(BLOCK_VALID_SCRIPTS);"
      }
    ]
  },
  {
    "sha": "a888fa138fcb996efe7e3be5120403a0e0a77198",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphODg4ZmExMzhmY2I5OTZlZmU3ZTNiZTUxMjA0MDNhMGUwYTc3MTk4",
    "commit": {
      "author": {
        "name": "mech12",
        "email": "whdnrfo@gmail.com",
        "date": "2019-08-13T08:45:42Z"
      },
      "committer": {
        "name": "mech12",
        "email": "whdnrfo@gmail.com",
        "date": "2019-08-13T08:45:42Z"
      },
      "message": "block 1second",
      "tree": {
        "sha": "41ac6867e40885b6bc63de571e4004d42b7e3166",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41ac6867e40885b6bc63de571e4004d42b7e3166"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a888fa138fcb996efe7e3be5120403a0e0a77198",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a888fa138fcb996efe7e3be5120403a0e0a77198",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a888fa138fcb996efe7e3be5120403a0e0a77198",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a888fa138fcb996efe7e3be5120403a0e0a77198/comments",
    "author": {
      "login": "mech12",
      "id": 3130823,
      "node_id": "MDQ6VXNlcjMxMzA4MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3130823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mech12",
      "html_url": "https://github.com/mech12",
      "followers_url": "https://api.github.com/users/mech12/followers",
      "following_url": "https://api.github.com/users/mech12/following{/other_user}",
      "gists_url": "https://api.github.com/users/mech12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mech12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mech12/subscriptions",
      "organizations_url": "https://api.github.com/users/mech12/orgs",
      "repos_url": "https://api.github.com/users/mech12/repos",
      "events_url": "https://api.github.com/users/mech12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mech12/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mech12",
      "id": 3130823,
      "node_id": "MDQ6VXNlcjMxMzA4MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3130823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mech12",
      "html_url": "https://github.com/mech12",
      "followers_url": "https://api.github.com/users/mech12/followers",
      "following_url": "https://api.github.com/users/mech12/following{/other_user}",
      "gists_url": "https://api.github.com/users/mech12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mech12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mech12/subscriptions",
      "organizations_url": "https://api.github.com/users/mech12/orgs",
      "repos_url": "https://api.github.com/users/mech12/repos",
      "events_url": "https://api.github.com/users/mech12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mech12/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "84a25f86f673cb95de2ec9c5107fcb641f215b65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84a25f86f673cb95de2ec9c5107fcb641f215b65",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/84a25f86f673cb95de2ec9c5107fcb641f215b65"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b92c1ac54f8fda018d33caa2f2f7a3b64fbc1e06",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a888fa138fcb996efe7e3be5120403a0e0a77198/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a888fa138fcb996efe7e3be5120403a0e0a77198/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=a888fa138fcb996efe7e3be5120403a0e0a77198",
        "patch": "@@ -91,8 +91,8 @@ class CMainParams : public CChainParams {\n \n #ifdef OLLE_BITCOIN_VER\n         //mech12\n-        consensus.nPowTargetTimespan = 60 * 60; // 1 hour\n-        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.nPowTargetTimespan = 60;//60 * 60; // 1 hour\n+        consensus.nPowTargetSpacing = 1;//10 * 60; //10\ubd84\n #else        \n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;"
      }
    ]
  },
  {
    "sha": "db0b2c1e29ed0778d62aedcbb1f96f2ac34298b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYjBiMmMxZTI5ZWQwNzc4ZDYyYWVkY2JiMWY5NmYyYWMzNDI5OGI2",
    "commit": {
      "author": {
        "name": "mech12",
        "email": "whdnrfo@gmail.com",
        "date": "2019-08-13T09:21:19Z"
      },
      "committer": {
        "name": "mech12",
        "email": "whdnrfo@gmail.com",
        "date": "2019-08-13T09:21:19Z"
      },
      "message": "3second",
      "tree": {
        "sha": "16b49e7a2a70c222260f5ab40f01c6a477a18d9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16b49e7a2a70c222260f5ab40f01c6a477a18d9c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db0b2c1e29ed0778d62aedcbb1f96f2ac34298b6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db0b2c1e29ed0778d62aedcbb1f96f2ac34298b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/db0b2c1e29ed0778d62aedcbb1f96f2ac34298b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db0b2c1e29ed0778d62aedcbb1f96f2ac34298b6/comments",
    "author": {
      "login": "mech12",
      "id": 3130823,
      "node_id": "MDQ6VXNlcjMxMzA4MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3130823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mech12",
      "html_url": "https://github.com/mech12",
      "followers_url": "https://api.github.com/users/mech12/followers",
      "following_url": "https://api.github.com/users/mech12/following{/other_user}",
      "gists_url": "https://api.github.com/users/mech12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mech12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mech12/subscriptions",
      "organizations_url": "https://api.github.com/users/mech12/orgs",
      "repos_url": "https://api.github.com/users/mech12/repos",
      "events_url": "https://api.github.com/users/mech12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mech12/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mech12",
      "id": 3130823,
      "node_id": "MDQ6VXNlcjMxMzA4MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3130823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mech12",
      "html_url": "https://github.com/mech12",
      "followers_url": "https://api.github.com/users/mech12/followers",
      "following_url": "https://api.github.com/users/mech12/following{/other_user}",
      "gists_url": "https://api.github.com/users/mech12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mech12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mech12/subscriptions",
      "organizations_url": "https://api.github.com/users/mech12/orgs",
      "repos_url": "https://api.github.com/users/mech12/repos",
      "events_url": "https://api.github.com/users/mech12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mech12/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a888fa138fcb996efe7e3be5120403a0e0a77198",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a888fa138fcb996efe7e3be5120403a0e0a77198",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a888fa138fcb996efe7e3be5120403a0e0a77198"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "19728b2b0b26cabfbc5889bedebbb6fec2b77b60",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db0b2c1e29ed0778d62aedcbb1f96f2ac34298b6/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db0b2c1e29ed0778d62aedcbb1f96f2ac34298b6/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=db0b2c1e29ed0778d62aedcbb1f96f2ac34298b6",
        "patch": "@@ -92,7 +92,7 @@ class CMainParams : public CChainParams {\n #ifdef OLLE_BITCOIN_VER\n         //mech12\n         consensus.nPowTargetTimespan = 60;//60 * 60; // 1 hour\n-        consensus.nPowTargetSpacing = 1;//10 * 60; //10\ubd84\n+        consensus.nPowTargetSpacing = 3;//10 * 60; //10\ubd84\n #else        \n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;"
      }
    ]
  }
]