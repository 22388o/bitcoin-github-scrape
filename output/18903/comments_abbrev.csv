MarcoFalke,2020-05-07 13:08:02,Not sure why we are doing bash env var juggling here. This should be an option on the test framework like everything else. E.g. `--factor`,https://github.com/bitcoin/bitcoin/pull/18903#issuecomment-625244456,625244456,
fanquake,2020-05-07 13:23:23,"> Not sure why we are doing bash env var juggling here.\n\n🤷‍♂️  I just want to be able to run the full functional test suite locally without pointless failures. I don't understand how we've ended up with a test that will fail by default when run outside the CI.",https://github.com/bitcoin/bitcoin/pull/18903#issuecomment-625252879,625252879,
MarcoFalke,2020-05-07 13:32:05,A workaround could also be to remove the prev releases folder,https://github.com/bitcoin/bitcoin/pull/18903#issuecomment-625257731,625257731,
Sjors,2020-05-19 08:51:35,"`feature_backwards_compatibility.py` and `wallet_upgradewallet.py` are skipped when the `/releases` folder is absent. That folder is not in the repo. Once the folder is present, the test assumes you intend to use it and will fail if anything is missing. Unless you explicitly turn off `TEST_PREVIOUS_RELEASES`.\n\nHaving to always set `TEST_PREVIOUS_RELEASES=true` is annoying.\n\n> Not sure why ",https://github.com/bitcoin/bitcoin/pull/18903#issuecomment-630682049,630682049,
fanquake,2020-05-19 11:11:18,Closing in favour of #19014.,https://github.com/bitcoin/bitcoin/pull/18903#issuecomment-630751277,630751277,
MarcoFalke,2020-05-19 11:41:02,"Just to make sure, #19014 doesn't change any behaviour. You will still run into failures if the prev releases dir exists but is missing the binaries. The only way to fix that is to remove the dir or add the binaries.",https://github.com/bitcoin/bitcoin/pull/18903#issuecomment-630763939,630763939,
MarcoFalke,2020-05-07 13:29:23,"```suggestion\n        if os.getenv(""TEST_PREVIOUS_RELEASES"", ""false"") == ""false"":\n```\n\ndoes this pass?",https://github.com/bitcoin/bitcoin/pull/18903#discussion_r421503914,421503914,test/functional/test_framework/test_framework.py
