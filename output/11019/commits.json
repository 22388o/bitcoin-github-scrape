[
  {
    "sha": "f2b1a70e9b2b2c7c2cc13a930ca798ffe134a950",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMmIxYTcwZTliMmIyYzdjMmNjMTNhOTMwY2E3OThmZmUxMzRhOTUw",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-08-10T05:10:17Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-12-05T04:51:19Z"
      },
      "message": "[wallet] When a wallet transaction is not accepted into mempool, abandon it and return failure rather than silently ignoring.\nWhen silently ignoring (but keeping transaction around for rebroadcast later on), the wallet is in a limbo state with reference to the given UTXO. This does not appear in getbalance so the user momentarily looks as if they lost the whole amount, and block generation will not immediately bring the transaction back into mempool for privacy reasons (presumably).\nThis overlaps slightly with the walletrejectlongchains option, which will make additional checks to see if a transaction would be rejected due to chain length, but it does not rule out other reasons for mempool rejection, and the limbo state mentioned above is most likely undesirable even when users explicitly keep walletrejectlongchains turned off.",
      "tree": {
        "sha": "5a06759a071ee83987a1196cc9f2be049a4e96ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a06759a071ee83987a1196cc9f2be049a4e96ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f2b1a70e9b2b2c7c2cc13a930ca798ffe134a950",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlomJccACgkQV692LbM1\nMyKImg//cZPCxteKGa8myVxMwxtnMwkikqLw9rgC1uV5OA44ZZGpq+hh55gSAZ8f\nI+PJTJpwTZlC6OTb1hQKtY6DSnHpvcGDhd21rqwBnaljDHctifeb2kEImyuGuROq\nlWWvz+sqqdcohdKGIwldSygNRU3ow64nsHSt5FlQr2ziEq1qIJLQmRjgS3DQJkgH\nWkdG3zxejQU+JFbPd3gIGy3UpBQxDsI7dgXV8eMcdqtYQaGRDu9mAhEslqHjUIQr\n0VgBNrYm/B6QeWvYXHDnTFb054pv6zlwtP7yUaazx148LhiIvJMD4o+SdQbNp+mo\nNVLeFoSPTRNYK1shtjhaN3+rN4UyXdCaO52bOEzQDhtElCwBHbedHBY5QUO+1eUO\nnhVQHWu7Ph1s98keKeoye+MxvmWFIT//k4d4yamGrLB+QNNiPIAA/1QgoAzoScHx\nDkOIQW9R8FTemzec1Hc3HQ6kebcq6KOVqR9E+rJQF4hwigZR3SKdgZU8Mvx7JduX\ncLGIKNkQzT77v5+UNcHcXiTxskYTD7CR3rgTqeV21HPsdyZSdslrva7I7Sg2PwbO\n4xNegcGVFnPUH2wkafmE96j1vjEAwUznvZKiSZv5bRX6ui9iDrNFrc6I4HNABtYg\norj4WZAUJLx1HVzlwUin1JZNjs9gMEdABkM1Xi+GR6n7R5cf98c=\n=Q/f8\n-----END PGP SIGNATURE-----",
        "payload": "tree 5a06759a071ee83987a1196cc9f2be049a4e96ad\nparent c17f11f7b43ad3bd9e242c67db1f3679558a0581\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1502341817 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1512449479 +0900\n\n[wallet] When a wallet transaction is not accepted into mempool, abandon it and return failure rather than silently ignoring.\nWhen silently ignoring (but keeping transaction around for rebroadcast later on), the wallet is in a limbo state with reference to the given UTXO. This does not appear in getbalance so the user momentarily looks as if they lost the whole amount, and block generation will not immediately bring the transaction back into mempool for privacy reasons (presumably).\nThis overlaps slightly with the walletrejectlongchains option, which will make additional checks to see if a transaction would be rejected due to chain length, but it does not rule out other reasons for mempool rejection, and the limbo state mentioned above is most likely undesirable even when users explicitly keep walletrejectlongchains turned off.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2b1a70e9b2b2c7c2cc13a930ca798ffe134a950",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f2b1a70e9b2b2c7c2cc13a930ca798ffe134a950",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2b1a70e9b2b2c7c2cc13a930ca798ffe134a950/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c17f11f7b43ad3bd9e242c67db1f3679558a0581",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c17f11f7b43ad3bd9e242c67db1f3679558a0581",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c17f11f7b43ad3bd9e242c67db1f3679558a0581"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7ca9de1af9c2a1b91078eb66a5518606a35ef604",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f2b1a70e9b2b2c7c2cc13a930ca798ffe134a950/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f2b1a70e9b2b2c7c2cc13a930ca798ffe134a950/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=f2b1a70e9b2b2c7c2cc13a930ca798ffe134a950",
        "patch": "@@ -3036,7 +3036,8 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey, CCon\n             // Broadcast\n             if (!wtx.AcceptToMemoryPool(maxTxFee, state)) {\n                 LogPrintf(\"CommitTransaction(): Transaction cannot be broadcast immediately, %s\\n\", state.GetRejectReason());\n-                // TODO: if we expect the failure to be long term or permanent, instead delete wtx from the wallet and return failure.\n+                AbandonTransaction(wtxNew.GetHash());\n+                return false;\n             } else {\n                 wtx.RelayWalletTransaction(connman);\n             }"
      }
    ]
  },
  {
    "sha": "ffd583848c4351faaf78dff881e3a3e241bc8d37",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZmQ1ODM4NDhjNDM1MWZhYWY3OGRmZjg4MWUzYTNlMjQxYmM4ZDM3",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-08-10T05:11:20Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-12-05T04:53:47Z"
      },
      "message": "[wallet] Update feebumper code removing note about CommitTransaction never returning failure (it may, now).",
      "tree": {
        "sha": "a457b0e99270cd0dd134e91aba85cef70f3c8437",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a457b0e99270cd0dd134e91aba85cef70f3c8437"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ffd583848c4351faaf78dff881e3a3e241bc8d37",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlomJlsACgkQV692LbM1\nMyJWUg//RZJShHEf5V2PemL3ZUOSDWGSnWpcfbg6eJtPhQUERtTLSJ/w8SbAHDut\nKBndeajWf3C6XUw3t+QYqJl1EsBbJ0wTWmJ/4NczAHxDRMl0/1YLvVCcmBNUceyU\nbrAy9upBFxdTzZgICwPC9XdLbQywkPYMb0ZSEVnHbitCa9Pwn8hfom4bICfRz8R0\nmk8Pcj/Y8j+NNmgKycUX7h16XdMqAV7+XeCyE0ZP8JbkCr3zsGvlLZXmddZdt07t\np6tgrVS9P+a5i0ais1Trk6OSSstUnw45c6R4OiJg8W6e3fj1Y5YXFAmIuNzdkDyb\nBychW62FxZZteLoC8tpj0j1CI7J9tN1LHkOXp3UiVKFutbkWKolnYs3tMm485rpx\nQO7AVKWDUhk8O3PTNJoBSmkO2lAqIFVyBJeTCIqlhZT7wogkBfm2F6NpsQm1UO6f\ni0bL4FLF4oQgUr/cvWxY1UofjbYY45APwXkqRzlwCvcRjNzbv+TiVL2qE/zg4Jgt\n1NlBaQZFaWG2vaLwi3Mhhv8tbBk13L6dVLmYQW1NlJr7X8jmsS5k0My9wpqvbJqp\nB6PSLC6ojFldcaRyWOAf3I3BesK884GBm77V0Ny97WyiEN5NJFWJ97YZZcuv7Ohi\npIat+JVIbSNM4n4Qx1SMXHIY31YyDjs8nqwV6euM53OKibdbIM0=\n=TgY6\n-----END PGP SIGNATURE-----",
        "payload": "tree a457b0e99270cd0dd134e91aba85cef70f3c8437\nparent f2b1a70e9b2b2c7c2cc13a930ca798ffe134a950\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1502341880 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1512449627 +0900\n\n[wallet] Update feebumper code removing note about CommitTransaction never returning failure (it may, now).\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffd583848c4351faaf78dff881e3a3e241bc8d37",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ffd583848c4351faaf78dff881e3a3e241bc8d37",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffd583848c4351faaf78dff881e3a3e241bc8d37/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f2b1a70e9b2b2c7c2cc13a930ca798ffe134a950",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2b1a70e9b2b2c7c2cc13a930ca798ffe134a950",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f2b1a70e9b2b2c7c2cc13a930ca798ffe134a950"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f17a4cad1ab8b3aa99c6944818850ca6fbea409e",
        "filename": "src/wallet/feebumper.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffd583848c4351faaf78dff881e3a3e241bc8d37/src/wallet/feebumper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffd583848c4351faaf78dff881e3a3e241bc8d37/src/wallet/feebumper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.cpp?ref=ffd583848c4351faaf78dff881e3a3e241bc8d37",
        "patch": "@@ -266,7 +266,6 @@ Result CommitTransaction(CWallet* wallet, const uint256& txid, CMutableTransacti\n     wtxBumped.fFromMe = true;\n     CValidationState state;\n     if (!wallet->CommitTransaction(wtxBumped, reservekey, g_connman.get(), state)) {\n-        // NOTE: CommitTransaction never returns false, so this should never happen.\n         errors.push_back(strprintf(\"The transaction was rejected: %s\", state.GetRejectReason()));\n         return Result::WALLET_ERROR;\n     }"
      }
    ]
  },
  {
    "sha": "e87ebb5b66a7a5dac36405541b8b008ac66fcdec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODdlYmI1YjY2YTdhNWRhYzM2NDA1NTQxYjhiMDA4YWM2NmZjZGVj",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-08-10T05:38:25Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-12-05T04:54:06Z"
      },
      "message": "[test] Added longchain wallet tests and updated wallet.py test related to long chain without walletrejectlongchains.",
      "tree": {
        "sha": "9d8f039b1f494b3783110b35b62fb2557276817b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d8f039b1f494b3783110b35b62fb2557276817b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e87ebb5b66a7a5dac36405541b8b008ac66fcdec",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlomJm4ACgkQV692LbM1\nMyL7zQ/+Lj0fZl7NPKs3/i5PbWfqybiPlh2vO8GLhzCjHP2VSuwwVWXjIhLT+rI6\nfHI5knaE4cBqtxxk0BV+kZ+EnA+lqUhdnR8qVYTjiuzNlRXit7EYZV/qOwhOJGmi\n6IPgWpisZhGD90UIiBFRTNe8OC14xXwJPantQ1eWocSYFyULZDGduX3foifRUjdW\nZzzX5bNMD6DA7WPZKqhvKTKZOyB8vsVRmrt4st63Nl/tYyK0dE+dbIK6vvYheK5W\nTrGBMTR+zDeFZKAdb1BpszlfhQbUHaeKx4LrVHihfZRXeBFg/wN7WlfytuTrDA1I\nt5teNwSouWg+jTum7o+3ZhEsJLi4M7N2ECF5Dqhm5eF7mvsIQqjDlIX652XfCaDm\nJbTPvkQqMVj1fvmqvExLbUHEdYx1DgjZacFt9Ml1Q5P7V0hpFCu20ubSCONWqnsE\n+A2WSLONj1t0snuS/s8c+4UPSs6JwgCShqBWc7lDrFUQpOkqUtgWxK4A9K9PpI8x\nExygatXU/UMg6RnULCRmYcSyfRQ7Gyq2NYdAr2k7Sv2G3dcg2KfdMumTmoaonwXt\nwYNm5tWmnXYYEUBXpiwubk1RJE92zGSfkXzuPW4WSZiinP2Biaw7+T3pb9qWhzu5\ndlkLIXphiS5KaUk3r8c6cwBTSar+XW/unxZ36hS5M8viiXjEcxI=\n=LmWz\n-----END PGP SIGNATURE-----",
        "payload": "tree 9d8f039b1f494b3783110b35b62fb2557276817b\nparent ffd583848c4351faaf78dff881e3a3e241bc8d37\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1502343505 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1512449646 +0900\n\n[test] Added longchain wallet tests and updated wallet.py test related to long chain without walletrejectlongchains.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e87ebb5b66a7a5dac36405541b8b008ac66fcdec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e87ebb5b66a7a5dac36405541b8b008ac66fcdec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e87ebb5b66a7a5dac36405541b8b008ac66fcdec/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ffd583848c4351faaf78dff881e3a3e241bc8d37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffd583848c4351faaf78dff881e3a3e241bc8d37",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ffd583848c4351faaf78dff881e3a3e241bc8d37"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 71,
      "deletions": 6
    },
    "files": [
      {
        "sha": "4364d027aaeda6802412a2f2f1ed66719b08a87b",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e87ebb5b66a7a5dac36405541b8b008ac66fcdec/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e87ebb5b66a7a5dac36405541b8b008ac66fcdec/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=e87ebb5b66a7a5dac36405541b8b008ac66fcdec",
        "patch": "@@ -128,6 +128,7 @@\n     'uacomment.py',\n     'p2p-acceptblock.py',\n     'feature_logging.py',\n+    'wallet-longchain.py',\n ]\n \n EXTENDED_SCRIPTS = ["
      },
      {
        "sha": "5f4d7c5772e27ec8bd961a7e6af40b8c27ede28d",
        "filename": "test/functional/wallet-longchain.py",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e87ebb5b66a7a5dac36405541b8b008ac66fcdec/test/functional/wallet-longchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e87ebb5b66a7a5dac36405541b8b008ac66fcdec/test/functional/wallet-longchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet-longchain.py?ref=e87ebb5b66a7a5dac36405541b8b008ac66fcdec",
        "patch": "@@ -0,0 +1,67 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test long chained transactions in the wallet code.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (connect_nodes_bi,\n+                                 assert_equal,\n+                                )\n+\n+class WalletTestLongchain(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+\n+    def setup_network(self):\n+        self.add_nodes(3)\n+        self.start_node(0)\n+        self.start_node(1)\n+        self.start_node(2)\n+        connect_nodes_bi(self.nodes,0,1)\n+        connect_nodes_bi(self.nodes,1,2)\n+        connect_nodes_bi(self.nodes,0,2)\n+        self.sync_all([self.nodes[0:3]])\n+\n+    def run_test(self):\n+\n+        # Check that there's no UTXO on any of the nodes\n+        assert_equal(len(self.nodes[0].listunspent()), 0)\n+        assert_equal(len(self.nodes[1].listunspent()), 0)\n+\n+        self.log.info(\"Mining blocks...\")\n+\n+        self.nodes[0].generate(101)\n+\n+        walletinfo = self.nodes[0].getwalletinfo()\n+        assert_equal(walletinfo['immature_balance'], 5000)\n+        assert_equal(walletinfo['balance'], 50)\n+\n+        self.sync_all()\n+\n+        assert_equal(self.nodes[0].getbalance(), 50)\n+        assert_equal(self.nodes[1].getbalance(), 0)\n+\n+        # Check that only first node has UTXOs\n+        utxos = self.nodes[0].listunspent()\n+        assert_equal(len(utxos), 1)\n+        assert_equal(len(self.nodes[1].listunspent()), 0)\n+\n+        # Send 0.1 BTC 100 times (=10 BTC) to node 2; we will eventually hit the mempool chain limit\n+        for i in range(100):\n+            try:\n+                self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 0.1)\n+            except:\n+                break\n+        # After failure, we should have at least ~39 BTC left, as we would have at most sent 10*0.1\n+        # (plus 100 tx fees)\n+        assert(self.nodes[0].getbalance() > 25)\n+        self.sync_all()\n+        self.nodes[1].generate(1)\n+        self.sync_all()\n+        # After generating, we should be able to send again\n+        self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 39)\n+\n+if __name__ == '__main__':\n+    WalletTestLongchain().main()"
      },
      {
        "sha": "f81a5bb1f6a60b48294d0a6d3103088314e1c938",
        "filename": "test/functional/wallet.py",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e87ebb5b66a7a5dac36405541b8b008ac66fcdec/test/functional/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e87ebb5b66a7a5dac36405541b8b008ac66fcdec/test/functional/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet.py?ref=e87ebb5b66a7a5dac36405541b8b008ac66fcdec",
        "patch": "@@ -412,12 +412,9 @@ def run_test(self):\n         assert_equal(self.nodes[0].getmempoolinfo()['size'], chainlimit*2)\n         assert_equal(len(txid_list), chainlimit*2)\n \n-        # Without walletrejectlongchains, we will still generate a txid\n-        # The tx will be stored in the wallet but not accepted to the mempool\n-        extra_txid = self.nodes[0].sendtoaddress(sending_addr, Decimal('0.0001'))\n-        assert(extra_txid not in self.nodes[0].getrawmempool())\n-        assert(extra_txid in [tx[\"txid\"] for tx in self.nodes[0].listtransactions()])\n-        self.nodes[0].abandontransaction(extra_txid)\n+        # Even without walletrejectlongchains, if a txid we make has a too long\n+        # chain to go into the mempool, it will raise a JSON RPC error\n+        assert_raises_rpc_error(-4, \"too-long-mempool-chain\", self.nodes[0].sendtoaddress, sending_addr, Decimal('0.0001'))\n         total_txs = len(self.nodes[0].listtransactions(\"*\",99999))\n \n         # Try with walletrejectlongchains"
      }
    ]
  }
]