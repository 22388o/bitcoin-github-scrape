[
  {
    "sha": "b667a90389cce7e1bf882f4ac78323c48858efaa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNjY3YTkwMzg5Y2NlN2UxYmY4ODJmNGFjNzgzMjNjNDg4NThlZmFh",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-25T09:58:13Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-08-18T18:03:56Z"
      },
      "message": "tests: Add fuzzing harness for SigHasLowR(...) and ecdsa_signature_parse_der_lax(...)",
      "tree": {
        "sha": "6dfd7fc44223ecdb76e5d80e4f9e378ca97b7a4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6dfd7fc44223ecdb76e5d80e4f9e378ca97b7a4e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b667a90389cce7e1bf882f4ac78323c48858efaa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b667a90389cce7e1bf882f4ac78323c48858efaa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b667a90389cce7e1bf882f4ac78323c48858efaa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b667a90389cce7e1bf882f4ac78323c48858efaa/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a2a250c7d07bcb80cefca9dd4a7ce57f41291334",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2a250c7d07bcb80cefca9dd4a7ce57f41291334",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a2a250c7d07bcb80cefca9dd4a7ce57f41291334"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 41,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7670624f6a6e4e3b22545479c542be4f1e95b643",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b667a90389cce7e1bf882f4ac78323c48858efaa/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b667a90389cce7e1bf882f4ac78323c48858efaa/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=b667a90389cce7e1bf882f4ac78323c48858efaa",
        "patch": "@@ -132,6 +132,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/script_sigcache \\\n   test/fuzz/script_sign \\\n   test/fuzz/scriptnum_ops \\\n+  test/fuzz/secp256k1_ecdsa_signature_parse_der_lax \\\n   test/fuzz/service_deserialize \\\n   test/fuzz/signature_checker \\\n   test/fuzz/snapshotmetadata_deserialize \\\n@@ -1094,6 +1095,12 @@ test_fuzz_scriptnum_ops_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_scriptnum_ops_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_scriptnum_ops_SOURCES = test/fuzz/scriptnum_ops.cpp\n \n+test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_SOURCES = test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp\n+\n test_fuzz_service_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSERVICE_DESERIALIZE=1\n test_fuzz_service_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_service_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "fc14f41a0c6237d7b71a39e55be0410793943f40",
        "filename": "src/pubkey.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b667a90389cce7e1bf882f4ac78323c48858efaa/src/pubkey.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b667a90389cce7e1bf882f4ac78323c48858efaa/src/pubkey.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.cpp?ref=b667a90389cce7e1bf882f4ac78323c48858efaa",
        "patch": "@@ -24,7 +24,7 @@ secp256k1_context* secp256k1_context_verify = nullptr;\n  *  strict DER before being passed to this module, and we know it supports all\n  *  violations present in the blockchain before that point.\n  */\n-static int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const unsigned char *input, size_t inputlen) {\n+int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const unsigned char *input, size_t inputlen) {\n     size_t rpos, rlen, spos, slen;\n     size_t pos = 0;\n     size_t lenbyte;"
      },
      {
        "sha": "ed8c7aba89449ee26d0f7580f4b3c528ee5a00bb",
        "filename": "src/test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b667a90389cce7e1bf882f4ac78323c48858efaa/src/test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b667a90389cce7e1bf882f4ac78323c48858efaa/src/test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp?ref=b667a90389cce7e1bf882f4ac78323c48858efaa",
        "patch": "@@ -0,0 +1,33 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <key.h>\n+#include <secp256k1.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <vector>\n+\n+bool SigHasLowR(const secp256k1_ecdsa_signature* sig);\n+int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const unsigned char* input, size_t inputlen);\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const std::vector<uint8_t> signature_bytes = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+    if (signature_bytes.data() == nullptr) {\n+        return;\n+    }\n+    secp256k1_context* secp256k1_context_verify = secp256k1_context_create(SECP256K1_CONTEXT_VERIFY);\n+    secp256k1_ecdsa_signature sig_der_lax;\n+    const bool parsed_der_lax = ecdsa_signature_parse_der_lax(secp256k1_context_verify, &sig_der_lax, signature_bytes.data(), signature_bytes.size()) == 1;\n+    if (parsed_der_lax) {\n+        ECC_Start();\n+        (void)SigHasLowR(&sig_der_lax);\n+        ECC_Stop();\n+    }\n+    secp256k1_context_destroy(secp256k1_context_verify);\n+}"
      }
    ]
  },
  {
    "sha": "46fcac1e4b9e0b1026bc0b663582148b2fd60390",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NmZjYWMxZTRiOWUwYjEwMjZiYzBiNjYzNTgyMTQ4YjJmZDYwMzkw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-25T13:06:18Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-08-18T18:03:57Z"
      },
      "message": "tests: Add fuzzing harness for ec_seckey_import_der(...) and ec_seckey_export_der(...)",
      "tree": {
        "sha": "e124ec85d1df970fb7a1982165344b12dbdeaaa3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e124ec85d1df970fb7a1982165344b12dbdeaaa3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46fcac1e4b9e0b1026bc0b663582148b2fd60390",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46fcac1e4b9e0b1026bc0b663582148b2fd60390",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/46fcac1e4b9e0b1026bc0b663582148b2fd60390",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46fcac1e4b9e0b1026bc0b663582148b2fd60390/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b667a90389cce7e1bf882f4ac78323c48858efaa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b667a90389cce7e1bf882f4ac78323c48858efaa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b667a90389cce7e1bf882f4ac78323c48858efaa"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 47,
      "deletions": 2
    },
    "files": [
      {
        "sha": "fa805053d69610cb1eb20e5a74afd89739c9bf2d",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46fcac1e4b9e0b1026bc0b663582148b2fd60390/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46fcac1e4b9e0b1026bc0b663582148b2fd60390/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=46fcac1e4b9e0b1026bc0b663582148b2fd60390",
        "patch": "@@ -132,6 +132,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/script_sigcache \\\n   test/fuzz/script_sign \\\n   test/fuzz/scriptnum_ops \\\n+  test/fuzz/secp256k1_ec_seckey_import_export_der \\\n   test/fuzz/secp256k1_ecdsa_signature_parse_der_lax \\\n   test/fuzz/service_deserialize \\\n   test/fuzz/signature_checker \\\n@@ -1095,6 +1096,12 @@ test_fuzz_scriptnum_ops_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_scriptnum_ops_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_scriptnum_ops_SOURCES = test/fuzz/scriptnum_ops.cpp\n \n+test_fuzz_secp256k1_ec_seckey_import_export_der_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_secp256k1_ec_seckey_import_export_der_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_secp256k1_ec_seckey_import_export_der_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_secp256k1_ec_seckey_import_export_der_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_secp256k1_ec_seckey_import_export_der_SOURCES = test/fuzz/secp256k1_ec_seckey_import_export_der.cpp\n+\n test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "868a8b9b0e7ae4862e3d225a2c27befbc279f3d2",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46fcac1e4b9e0b1026bc0b663582148b2fd60390/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46fcac1e4b9e0b1026bc0b663582148b2fd60390/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=46fcac1e4b9e0b1026bc0b663582148b2fd60390",
        "patch": "@@ -31,7 +31,7 @@ static secp256k1_context* secp256k1_context_sign = nullptr;\n  *\n  * out32 must point to an output buffer of length at least 32 bytes.\n  */\n-static int ec_seckey_import_der(const secp256k1_context* ctx, unsigned char *out32, const unsigned char *seckey, size_t seckeylen) {\n+int ec_seckey_import_der(const secp256k1_context* ctx, unsigned char *out32, const unsigned char *seckey, size_t seckeylen) {\n     const unsigned char *end = seckey + seckeylen;\n     memset(out32, 0, 32);\n     /* sequence header */\n@@ -88,7 +88,7 @@ static int ec_seckey_import_der(const secp256k1_context* ctx, unsigned char *out\n  * will be set to the number of bytes used in the buffer.\n  * key32 must point to a 32-byte raw private key.\n  */\n-static int ec_seckey_export_der(const secp256k1_context *ctx, unsigned char *seckey, size_t *seckeylen, const unsigned char *key32, bool compressed) {\n+int ec_seckey_export_der(const secp256k1_context *ctx, unsigned char *seckey, size_t *seckeylen, const unsigned char *key32, bool compressed) {\n     assert(*seckeylen >= CKey::SIZE);\n     secp256k1_pubkey pubkey;\n     size_t pubkeylen = 0;"
      },
      {
        "sha": "d4f302a8d3240221e1f05b56cc5138820fd3c5f5",
        "filename": "src/test/fuzz/secp256k1_ec_seckey_import_export_der.cpp",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46fcac1e4b9e0b1026bc0b663582148b2fd60390/src/test/fuzz/secp256k1_ec_seckey_import_export_der.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46fcac1e4b9e0b1026bc0b663582148b2fd60390/src/test/fuzz/secp256k1_ec_seckey_import_export_der.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/secp256k1_ec_seckey_import_export_der.cpp?ref=46fcac1e4b9e0b1026bc0b663582148b2fd60390",
        "patch": "@@ -0,0 +1,38 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <key.h>\n+#include <secp256k1.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <vector>\n+\n+int ec_seckey_import_der(const secp256k1_context* ctx, unsigned char* out32, const unsigned char* seckey, size_t seckeylen);\n+int ec_seckey_export_der(const secp256k1_context* ctx, unsigned char* seckey, size_t* seckeylen, const unsigned char* key32, bool compressed);\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    secp256k1_context* secp256k1_context_sign = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);\n+    {\n+        std::vector<uint8_t> out32(32);\n+        (void)ec_seckey_import_der(secp256k1_context_sign, out32.data(), ConsumeFixedLengthByteVector(fuzzed_data_provider, CKey::SIZE).data(), CKey::SIZE);\n+    }\n+    {\n+        std::vector<uint8_t> seckey(CKey::SIZE);\n+        const std::vector<uint8_t> key32 = ConsumeFixedLengthByteVector(fuzzed_data_provider, 32);\n+        size_t seckeylen = CKey::SIZE;\n+        const bool compressed = fuzzed_data_provider.ConsumeBool();\n+        const bool exported = ec_seckey_export_der(secp256k1_context_sign, seckey.data(), &seckeylen, key32.data(), compressed);\n+        if (exported) {\n+            std::vector<uint8_t> out32(32);\n+            const bool imported = ec_seckey_import_der(secp256k1_context_sign, out32.data(), seckey.data(), seckey.size()) == 1;\n+            assert(imported && key32 == out32);\n+        }\n+    }\n+    secp256k1_context_destroy(secp256k1_context_sign);\n+}"
      }
    ]
  }
]