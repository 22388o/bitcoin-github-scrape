[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472789620",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15590#issuecomment-472789620",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15590",
    "id": 472789620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mjc4OTYyMA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T10:21:11Z",
    "updated_at": "2019-03-14T10:21:11Z",
    "author_association": "MEMBER",
    "body": "The `IsSegWit()` check mentioned in the description can be found here, but I'll hold off on a PR for now: https://github.com/Sjors/bitcoin/compare/2019/03/descriptor-address-type...Sjors:2019/03/descriptor-is-segwit",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472789620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473596344",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15590#issuecomment-473596344",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15590",
    "id": 473596344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzU5NjM0NA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-16T22:03:06Z",
    "updated_at": "2019-03-16T22:03:06Z",
    "author_association": "MEMBER",
    "body": "I don't think this makes sense. The address type is a property of a scriptPubKey, not of a descriptor (in particular, it's not well defined for `combo` descriptors).\n\nYou can already determine the address type of a scriptPubKey using ExtractDestination().",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473596344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/497205621",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15590#issuecomment-497205621",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15590",
    "id": 497205621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzIwNTYyMQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-30T05:15:24Z",
    "updated_at": "2020-02-05T03:11:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#18034](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/18034.html) (Get the OutputType for a descriptor by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/497205621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557671952",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15590#issuecomment-557671952",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15590",
    "id": 557671952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzY3MTk1Mg==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-22T19:56:05Z",
    "updated_at": "2019-11-22T19:56:25Z",
    "author_association": "MEMBER",
    "body": "@Sjors can you respond to sipa? I agree with him that this isn't really a property of descriptors, but I haven't looked into whether this makes your future work heaps easier or not. If not, let's close this :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557671952/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557778970",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15590#issuecomment-557778970",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15590",
    "id": 557778970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1Nzc3ODk3MA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-23T08:38:18Z",
    "updated_at": "2019-11-23T08:38:18Z",
    "author_association": "MEMBER",
    "body": "I still use this inside #16546 for external signer support. However that PR is built on top of descriptor wallet support #15764 which is still in flux. So it's probably more useful to discuss again when that's ready.\r\n\r\nThe use case here is that we obtain descriptors from a hardware wallet, e.g. via the HWI [getdescriptors](https://github.com/bitcoin-core/HWI/blob/d6799f366e5009ee637fac9acb075204d43e4c66/hwilib/cli.py#L147) call. This might be a mix of BIP44/49/84 descriptors. We then need to match those to the right output type in our wallet. That way if a user requests a legacy address, we give them a BIP44 derived address, vs. when they request a native segwit address, we'll give them a BIP84 derived address.\r\n\r\nIn order to match the right descriptor with the the right output type we need to parse it.\r\n\r\nI don't think it makes sense to start with a descriptor string, derive a random destination, get its script and then analyse that script to figure out if it's SegWit. The information is already in the descriptor string, so I think we should just use that.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557778970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557859028",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15590#issuecomment-557859028",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15590",
    "id": 557859028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1Nzg1OTAyOA==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-24T05:19:50Z",
    "updated_at": "2019-11-24T05:19:50Z",
    "author_association": "MEMBER",
    "body": "Perhaps in that case, it would be better to make a \"CanProvideAddressTypeX\" which takes a descriptor and an address type and returns a bool. Roughly provides the same functionality but makes more logical sense to me.\r\n\r\nCan't HWI just tell the wallet which descriptor it wants to use for which address type though?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557859028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557870777",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15590#issuecomment-557870777",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15590",
    "id": 557870777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1Nzg3MDc3Nw==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-24T09:13:04Z",
    "updated_at": "2019-11-24T09:13:04Z",
    "author_association": "MEMBER",
    "body": "The first suggestions seems doable, but not sure why it's better. By address type you mean OutputType? It seems less flexible though, as in the longer run I don't know if we really want to hold on to OutputType.\r\n\r\nE.g. multisig would likely only use bech32 and wrapped segwit, not legacy p2sh or bare multisig. All we need is the new AddressType to distinguish those.\r\n\r\nI can also imagine adding IsTaproot later, at which point our OutputType bech32 would be ambiguous.\r\n\r\nI'd like to keep HWI universal, not too Core specific. The only universal way we currently have to describe an address type is a descriptor.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557870777/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580503360",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15590#issuecomment-580503360",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15590",
    "id": 580503360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDUwMzM2MA==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-30T23:04:27Z",
    "updated_at": "2020-01-30T23:04:27Z",
    "author_association": "MEMBER",
    "body": "What exactly is the utility of knowing whether the address type is base58 or bech32? I don't think we have many things that depend on the encoding. Rather what we care about is the OutputType.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580503360/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580670210",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15590#issuecomment-580670210",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15590",
    "id": 580670210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDY3MDIxMA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-31T10:08:27Z",
    "updated_at": "2020-01-31T10:08:27Z",
    "author_association": "MEMBER",
    "body": "@achow101 my initial thinking was to stuff OutputType in the legacy box, along with its `GetDestinationForKey()`, `AddAndGetDestinationForScript`, etc,  and switch to the simpler `AddressType`. However it's still part of the `ScriptPubKeyMan` interface, so maybe not worth changing now.\r\n\r\nWhen sharing an address, the distinction between base58 and bech32 is all that matters. So ideally I'd like to see a world where `getnewaddress` only takes a boolean argument to indicate the user needs base58. The GUI already behaves that way. \r\n\r\nA standard wallet would have two descriptors instead of three: native segwit and wrapped segwit. If someone doesn't want to use SegWit, they can create a wallet with a single P2PKH descriptor; such a wallet can only generate a base58 address.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580670210/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580846062",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15590#issuecomment-580846062",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15590",
    "id": 580846062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDg0NjA2Mg==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-31T18:11:22Z",
    "updated_at": "2020-01-31T18:11:22Z",
    "author_association": "MEMBER",
    "body": "While it would be nice to just have the distinction be between base58 and bech32, I don't think we are going to lose the \"legacy\" distinction any time soon. Besides the whole backwards compatibility thing, there are still holdouts who insist on legacy addresses.\r\n\r\nThis also gets more complicated with taproot which don't allow for P2SH wrapped addresses. Even with just a base58 or bech32 address distinction, we would still need to distinguish between segwit v0 and segwit v1 addresses because inevitably someone will have implemented segwit incorrectly and can't send to v1 addresses.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580846062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580847050",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15590#issuecomment-580847050",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15590",
    "id": 580847050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDg0NzA1MA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-31T18:13:56Z",
    "updated_at": "2020-01-31T18:13:56Z",
    "author_association": "MEMBER",
    "body": ">  there are still holdouts who insist on legacy addresses\r\n\r\nYikes, there are services that refuse to send to p2sh? Do you have an example?\r\n\r\n> inevitably someone will have implemented segwit incorrectly and can't send to v1 addresses\r\n\r\nSadly that's conceivable... Especially since early on there was a recommendation to only allow v0.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580847050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584120739",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15590#issuecomment-584120739",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15590",
    "id": 584120739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDEyMDczOQ==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-10T13:25:18Z",
    "updated_at": "2020-02-10T13:25:18Z",
    "author_association": "MEMBER",
    "body": "Closing in favor of #18034",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584120739/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265116055",
    "pull_request_review_id": 213937066,
    "id": 265116055,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTExNjA1NQ==",
    "diff_hunk": "@@ -0,0 +1,27 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <addresstype.h>\n+\n+static const std::string ADDRESS_TYPE_STRING_BASE58 = \"legacy\";\n+static const std::string ADDRESS_TYPE_STRING_BECH32 = \"bech32\";\n+\n+Optional<AddressType> ParseAddressType(const std::string& type)\n+{\n+    if (type == ADDRESS_TYPE_STRING_BASE58) {\n+        return AddressType::BASE58;\n+    } else if (type == ADDRESS_TYPE_STRING_BECH32) {\n+        return AddressType::BECH32;\n+    }\n+    return nullopt;\n+}\n+\n+const std::string& FormatAddressType(AddressType type)\n+{\n+    switch (type) {\n+    case AddressType::BASE58: return ADDRESS_TYPE_STRING_BASE58;\n+    case AddressType::BECH32: return ADDRESS_TYPE_STRING_BECH32;\n+    default: assert(false);",
    "path": "src/addresstype.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "73d62d8b5c979bb3324bddd3fe8286c0d0245833",
    "original_commit_id": "3d63978d58b5f95c4e0bda5936cd399866169bc3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could remove the default case and move the assert after the switch, so that the compiler will issue a warning when the assert could be hit",
    "created_at": "2019-03-13T13:07:31Z",
    "updated_at": "2019-11-07T19:06:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15590#discussion_r265116055",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15590",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265116055"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15590#discussion_r265116055"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15590"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265116055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 25,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265492299",
    "pull_request_review_id": 214410355,
    "id": 265492299,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NTQ5MjI5OQ==",
    "diff_hunk": "@@ -0,0 +1,27 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <addresstype.h>\n+\n+static const std::string ADDRESS_TYPE_STRING_BASE58 = \"legacy\";\n+static const std::string ADDRESS_TYPE_STRING_BECH32 = \"bech32\";\n+\n+Optional<AddressType> ParseAddressType(const std::string& type)\n+{\n+    if (type == ADDRESS_TYPE_STRING_BASE58) {\n+        return AddressType::BASE58;\n+    } else if (type == ADDRESS_TYPE_STRING_BECH32) {\n+        return AddressType::BECH32;\n+    }\n+    return nullopt;\n+}\n+\n+const std::string& FormatAddressType(AddressType type)\n+{\n+    switch (type) {\n+    case AddressType::BASE58: return ADDRESS_TYPE_STRING_BASE58;\n+    case AddressType::BECH32: return ADDRESS_TYPE_STRING_BECH32;\n+    default: assert(false);",
    "path": "src/addresstype.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "73d62d8b5c979bb3324bddd3fe8286c0d0245833",
    "original_commit_id": "3d63978d58b5f95c4e0bda5936cd399866169bc3",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The compiler throws plenty of warnings even if I remove the `assert`:\r\n<img width=\"749\" alt=\"Schermafbeelding 2019-03-14 om 10 54 05\" src=\"https://user-images.githubusercontent.com/10217/54347597-95b80c00-4647-11e9-89fa-6aad4c77a4e5.png\">",
    "created_at": "2019-03-14T09:57:25Z",
    "updated_at": "2019-11-07T19:06:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15590#discussion_r265492299",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15590",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265492299"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15590#discussion_r265492299"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15590"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/265492299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 25,
    "side": "RIGHT",
    "in_reply_to_id": 265116055
  }
]