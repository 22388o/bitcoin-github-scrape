[
  {
    "sha": "7eb23490b9072658a9b9bffcab3cbf38b52b8149",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZWIyMzQ5MGI5MDcyNjU4YTliOWJmZmNhYjNjYmYzOGI1MmI4MTQ5",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-09-26T02:48:36Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-09-26T02:48:36Z"
      },
      "message": "RPC: Chainparams: Simplify -rpcport and CBaseMainParams (the latter...\n\nis just a very encapsulated global string var now [but it still\ndecides what dir to read fiked from])",
      "tree": {
        "sha": "72246c97feeeb0ea860626292737328906773116",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/72246c97feeeb0ea860626292737328906773116"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7eb23490b9072658a9b9bffcab3cbf38b52b8149",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJZycAEAAoJEIhmwY6hyUSi/kkP/2Qou0vAo233CuF7TVS6TXOa\n3BsxN9QhCChRcJs8IKl3ePMR7worHX99YkPpUeTIHxEG6sf9GSx3T7UFUGhprSzh\nQbepOXiSpDv0GW44l3TW7meq/iY2cIWZa3u/9tf8VC9tUkQZPZN+S+KlLaDXVGqd\nRfrDV8FLaFR/4FXelNhy35qNDLpb1/F8tdYo2+QdEdaDrEnx6eUQsIiTcvNreZW1\nG/RZ+7riR+vndyyK+giwISriGHqKYJx0PQvOJDKf9GgNqdiGvsxKF7zGIPT4NjWm\nPoYQO+7yc41emK2fMUS/DLo3z6SddukAsTL6aJAJW/uDMuERG+e8iBEVdi4NLjvL\nSrt176s06Xd22DGBBHz4E5KdMjUHKfEAd3kGAAR/TyGayKuh83nx6m4r34jyhxw/\nut3XowaJiI6vEvPMPiJKoscEXAj/kOoVMeTFwd9UyGMZb1IxnF3j3W2TeKI/Gxwm\nb/woiRHR/ZhRm5lk3zZAHNM9u8iWgmcb/zS9dftUdzde62w/sIEeDCJpQ+DKDYqD\nnO3z7sfuI8GriJSk4bpOurTynmbYCyD7XAFkWEqVhRS4PBGQN5S65DX49ocInmbP\n3/3p/Fp0yuUQqhHUdcLZFwIvRZ19ES405gvm/hK1MI5EWaq3Do34hx/PVoUBDBYJ\nu6Y9cYYEvHBiwUWTvFEY\n=4JhF\n-----END PGP SIGNATURE-----",
        "payload": "tree 72246c97feeeb0ea860626292737328906773116\nparent 8cf88b4aaeaf4f7446fea6dc6d2402a9cc9368eb\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1506394116 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1506394116 +0200\n\nRPC: Chainparams: Simplify -rpcport and CBaseMainParams (the latter...\n\nis just a very encapsulated global string var now [but it still\ndecides what dir to read fiked from])\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7eb23490b9072658a9b9bffcab3cbf38b52b8149",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7eb23490b9072658a9b9bffcab3cbf38b52b8149",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7eb23490b9072658a9b9bffcab3cbf38b52b8149/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8cf88b4aaeaf4f7446fea6dc6d2402a9cc9368eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cf88b4aaeaf4f7446fea6dc6d2402a9cc9368eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8cf88b4aaeaf4f7446fea6dc6d2402a9cc9368eb"
      }
    ],
    "stats": {
      "total": 72,
      "additions": 23,
      "deletions": 49
    },
    "files": [
      {
        "sha": "13daa42e00b8bef72517c2df31ac3807b6262b4c",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eb23490b9072658a9b9bffcab3cbf38b52b8149/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eb23490b9072658a9b9bffcab3cbf38b52b8149/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=7eb23490b9072658a9b9bffcab3cbf38b52b8149",
        "patch": "@@ -16,6 +16,13 @@ To receive security and update notifications, please subscribe to:\n \n   <https://bitcoincore.org/en/list/announcements/join/>\n \n+Testnets interface changes:\n+\n+- Command line argument -rpcport no longer has a complex default to\n+  think about. The default for bitcoin is 8332 and remains that.\n+  For testnet3 and regtest; explicitly specifying -rpcport=18332 and -rpcport=18443\n+  respectively is still possible as always. \n+\n How to Upgrade\n ==============\n "
      },
      {
        "sha": "b16b3a5f8783da1fec697806b86d7c6f8a0a127b",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eb23490b9072658a9b9bffcab3cbf38b52b8149/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eb23490b9072658a9b9bffcab3cbf38b52b8149/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=7eb23490b9072658a9b9bffcab3cbf38b52b8149",
        "patch": "@@ -40,7 +40,7 @@ std::string HelpMessageCli()\n     AppendParamsHelpMessages(strUsage);\n     strUsage += HelpMessageOpt(\"-named\", strprintf(_(\"Pass named instead of positional arguments (default: %s)\"), DEFAULT_NAMED));\n     strUsage += HelpMessageOpt(\"-rpcconnect=<ip>\", strprintf(_(\"Send commands to node running on <ip> (default: %s)\"), DEFAULT_RPCCONNECT));\n-    strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Connect to JSON-RPC on <port> (default: %u or testnet: %u)\"), defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort()));\n+    strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Connect to JSON-RPC on <port> (default: %u)\"), DEFAULT_RPC_PORT));\n     strUsage += HelpMessageOpt(\"-rpcwait\", _(\"Wait for RPC server to start\"));\n     strUsage += HelpMessageOpt(\"-rpcuser=<user>\", _(\"Username for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n@@ -198,7 +198,7 @@ static UniValue CallRPC(const std::string& strMethod, const UniValue& params)\n     //     1. -rpcport\n     //     2. port in -rpcconnect (ie following : in ipv4 or ]: in ipv6)\n     //     3. default port for chain\n-    int port = BaseParams().RPCPort();\n+    int port = DEFAULT_RPC_PORT;\n     SplitHostPort(gArgs.GetArg(\"-rpcconnect\", DEFAULT_RPCCONNECT), port, host);\n     port = gArgs.GetArg(\"-rpcport\", port);\n "
      },
      {
        "sha": "57c04c65c1753516ef6df42f93a369460c343e51",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 41,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eb23490b9072658a9b9bffcab3cbf38b52b8149/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eb23490b9072658a9b9bffcab3cbf38b52b8149/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=7eb23490b9072658a9b9bffcab3cbf38b52b8149",
        "patch": "@@ -24,44 +24,6 @@ void AppendParamsHelpMessages(std::string& strUsage, bool debugHelp)\n     }\n }\n \n-/**\n- * Main network\n- */\n-class CBaseMainParams : public CBaseChainParams\n-{\n-public:\n-    CBaseMainParams()\n-    {\n-        nRPCPort = 8332;\n-    }\n-};\n-\n-/**\n- * Testnet (v3)\n- */\n-class CBaseTestNetParams : public CBaseChainParams\n-{\n-public:\n-    CBaseTestNetParams()\n-    {\n-        nRPCPort = 18332;\n-        strDataDir = \"testnet3\";\n-    }\n-};\n-\n-/*\n- * Regression test\n- */\n-class CBaseRegTestParams : public CBaseChainParams\n-{\n-public:\n-    CBaseRegTestParams()\n-    {\n-        nRPCPort = 18443;\n-        strDataDir = \"regtest\";\n-    }\n-};\n-\n static std::unique_ptr<CBaseChainParams> globalChainBaseParams;\n \n const CBaseChainParams& BaseParams()\n@@ -73,11 +35,11 @@ const CBaseChainParams& BaseParams()\n std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain)\n {\n     if (chain == CBaseChainParams::MAIN)\n-        return std::unique_ptr<CBaseChainParams>(new CBaseMainParams());\n+        return std::unique_ptr<CBaseChainParams>(new CBaseChainParams());\n     else if (chain == CBaseChainParams::TESTNET)\n-        return std::unique_ptr<CBaseChainParams>(new CBaseTestNetParams());\n+        return std::unique_ptr<CBaseChainParams>(new CBaseChainParams(\"testnet3\"));\n     else if (chain == CBaseChainParams::REGTEST)\n-        return std::unique_ptr<CBaseChainParams>(new CBaseRegTestParams());\n+        return std::unique_ptr<CBaseChainParams>(new CBaseChainParams(\"regtest\"));\n     else\n         throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }"
      },
      {
        "sha": "0ad9eaf7abea5902e486451b9dc82336ed6593b0",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eb23490b9072658a9b9bffcab3cbf38b52b8149/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eb23490b9072658a9b9bffcab3cbf38b52b8149/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=7eb23490b9072658a9b9bffcab3cbf38b52b8149",
        "patch": "@@ -21,13 +21,14 @@ class CBaseChainParams\n     static const std::string TESTNET;\n     static const std::string REGTEST;\n \n+    CBaseChainParams() {};\n+    CBaseChainParams(const std::string& chain)\n+    {\n+        strDataDir = chain;\n+    }\n     const std::string& DataDir() const { return strDataDir; }\n-    int RPCPort() const { return nRPCPort; }\n \n protected:\n-    CBaseChainParams() {}\n-\n-    int nRPCPort;\n     std::string strDataDir;\n };\n "
      },
      {
        "sha": "70e40720a828ac07830697f8d90707eec325e001",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eb23490b9072658a9b9bffcab3cbf38b52b8149/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eb23490b9072658a9b9bffcab3cbf38b52b8149/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=7eb23490b9072658a9b9bffcab3cbf38b52b8149",
        "patch": "@@ -9,6 +9,7 @@\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n #include \"netbase.h\"\n+#include \"rpc/client.h\"\n #include \"rpc/protocol.h\" // For HTTP status codes\n #include \"sync.h\"\n #include \"ui_interface.h\"\n@@ -309,7 +310,7 @@ static bool ThreadHTTP(struct event_base* base, struct evhttp* http)\n /** Bind HTTP server to specified addresses */\n static bool HTTPBindAddresses(struct evhttp* http)\n {\n-    int defaultPort = gArgs.GetArg(\"-rpcport\", BaseParams().RPCPort());\n+    int defaultPort = gArgs.GetArg(\"-rpcport\", DEFAULT_RPC_PORT);\n     std::vector<std::pair<std::string, uint16_t> > endpoints;\n \n     // Determine what addresses to bind to"
      },
      {
        "sha": "262e7c361182529ef041f1bccaea90afa3a934cb",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eb23490b9072658a9b9bffcab3cbf38b52b8149/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eb23490b9072658a9b9bffcab3cbf38b52b8149/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=7eb23490b9072658a9b9bffcab3cbf38b52b8149",
        "patch": "@@ -28,6 +28,7 @@\n #include \"policy/feerate.h\"\n #include \"policy/fees.h\"\n #include \"policy/policy.h\"\n+#include \"rpc/client.h\"\n #include \"rpc/server.h\"\n #include \"rpc/register.h\"\n #include \"rpc/safemode.h\"\n@@ -496,7 +497,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-rpcuser=<user>\", _(\"Username for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcauth=<userpw>\", _(\"Username and hashed password for JSON-RPC connections. The field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A canonical python script is included in share/rpcuser. The client then connects normally using the rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This option can be specified multiple times\"));\n-    strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\"), defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort()));\n+    strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Listen for JSON-RPC connections on <port> (default: %u)\"), DEFAULT_RPC_PORT));\n     strUsage += HelpMessageOpt(\"-rpcallowip=<ip>\", _(\"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\"));\n     strUsage += HelpMessageOpt(\"-rpcserialversion\", strprintf(_(\"Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)\"), DEFAULT_RPC_SERIALIZE_VERSION));\n     strUsage += HelpMessageOpt(\"-rpcthreads=<n>\", strprintf(_(\"Set the number of threads to service RPC calls (default: %d)\"), DEFAULT_HTTP_THREADS));"
      },
      {
        "sha": "ac6a4e0f4ba5d1a38fce7b9a5b52f4cf25c22553",
        "filename": "src/rpc/client.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eb23490b9072658a9b9bffcab3cbf38b52b8149/src/rpc/client.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eb23490b9072658a9b9bffcab3cbf38b52b8149/src/rpc/client.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.h?ref=7eb23490b9072658a9b9bffcab3cbf38b52b8149",
        "patch": "@@ -8,6 +8,8 @@\n \n #include <univalue.h>\n \n+static const int DEFAULT_RPC_PORT = 8332;\n+\n /** Convert positional arguments to command-specific RPC representation */\n UniValue RPCConvertValues(const std::string& strMethod, const std::vector<std::string>& strParams);\n "
      }
    ]
  }
]