ryanofsky,2021-06-07 20:37:05,"The effort here seems good, but it seems to me this approach adds as many (or more?) `gArgs` usages as it removes. I think a better approach would build on #19101 to use [`WalletContext::args`](https://github.com/bitcoin/bitcoin/blob/e638acf6970394f8eb1957366ad2d39512f33b31/src/wallet/context.h#L25) instead of `gArgs`. #19101 is pretty simple PR and some more review would be welcome",https://github.com/bitcoin/bitcoin/pull/22183#issuecomment-856240294,856240294,
kiminuo,2021-06-07 20:58:33,"> The effort here seems good, but it seems to me this approach adds as many (or more?) `gArgs` usages as it removes.\n\nThe idea of this PR is just to ""move `gArgs`"" one level up. That's not that interesting result but it's very easy to review and to decide whether people see a benefit in the change in general. \n\nYour PR seems like a more robust approach to the problem. üëç I'll try to have a ",https://github.com/bitcoin/bitcoin/pull/22183#issuecomment-856252762,856252762,
ryanofsky,2021-06-07 21:09:56,"I guess it's possible the two PR's only overlap in some places and are mostly orthogonal since #19101 does not update the CWallet constructor and this PR does, but:\n\n- I think no new uses of `gArgs` should be necessary here, it should always be possible to pass `WalletContext::args` instead.\n- For the places where #19101 passes a WalletContext argument and this PR just passes an ArgsManager ",https://github.com/bitcoin/bitcoin/pull/22183#issuecomment-856259151,856259151,
DrahtBot,2021-06-07 22:22:39,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22787](https://github.com/bitcoin/bitcoin/pull/22787) (refactor: actual immutable pointing by kallewoof)\n* [#22766](htt",https://github.com/bitcoin/bitcoin/pull/22183#issuecomment-856301831,856301831,
kiminuo,2021-06-08 10:25:59,"> I guess it's possible the two PR's only overlap in some places and are mostly orthogonal since #19101 does not update the CWallet constructor and this PR does\n\nIt seems so. I would like to avoid competing with your PR so I will try to review your PR tomorrow, I'll leave this PR as a draft and I'll try to make an alternative PR based on yours to show how it would look like.\n\nIf anyone els",https://github.com/bitcoin/bitcoin/pull/22183#issuecomment-856648885,856648885,
ryanofsky,2021-06-08 12:49:22,"Thanks. Just to be clear about the previous comment https://github.com/bitcoin/bitcoin/pull/22183#issuecomment-856259151, I am saying I think the overlap between two PRs actually not so great, and my first suggestion there to avoid adding lots of new references to `gArgs` variable and instead pass `*context.args`, should be applicable with or without #19101. My second suggestion would just be to r",https://github.com/bitcoin/bitcoin/pull/22183#issuecomment-856737185,856737185,
kiminuo,2021-08-22 18:41:44,"@ryanofsky This PR is very modest follow-up to your #19101 at the moment as there are still some occurrences of `gArgs` in `src/wallet/wallet.cpp` file.\n\nTo remove the rest of `gArgs` from `wallet.cpp`, it seems I would need to pass `WalletContext` parameter to a `CWallet` constructor. I wonder what you think about this idea.",https://github.com/bitcoin/bitcoin/pull/22183#issuecomment-903312465,903312465,
kiminuo,2021-08-23 13:14:09,"> It also looks like it would be pretty straightforward to extend this and remove `gArgs` from wallet/load.cpp (but it would require a rebase to avoid conflicts from recent #22217 merge).\n\nI'll have a look. Thanks.\n\n> > To remove the rest of `gArgs` from `wallet.cpp`, it seems I would need to pass `WalletContext` parameter to a `CWallet` constructor. I wonder what you think about this idea",https://github.com/bitcoin/bitcoin/pull/22183#issuecomment-903756346,903756346,
ryanofsky,2021-08-23 14:53:05,"Code review ACK b1c01bc11d6869787eda10571439d01cc3e79d04. Only change since last review is using `ArgsManager& args = *Assert(context.args);` suggestion. Thanks for the update!\n\n> When passing `ArgsManager*`, one would get to the situation that on this [line](https://github.com/bitcoin/bitcoin/blob/b1c01bc11d6869787eda10571439d01cc3e79d04/src/wallet/wallet.cpp#L2512), one would have two option",https://github.com/bitcoin/bitcoin/pull/22183#issuecomment-903846133,903846133,
kiminuo,2021-08-25 19:36:16,"> It also looks like it would be pretty straightforward to extend this and remove `gArgs` from wallet/load.cpp (but it would require a rebase to avoid conflicts from recent #22217 merge).\n\n@ryanofsky I have added a commit that fixes this up. Thanks for the suggestion.",https://github.com/bitcoin/bitcoin/pull/22183#issuecomment-905817600,905817600,
ryanofsky,2021-09-08 15:37:22,"Saw this in IRC logs:\n\n> [21:05:16] \<achow101> ryanofsky: is it possible to get a WalletContext from within a CWallet?\n\n@achow101, it's intentional for CWallet not to have access to WalletContext. WalletContext is container for multiple wallets, and only meant to be used by RPC code and init code, not meant to be used by core wallet code. An individual CWallet is only meant to have access",https://github.com/bitcoin/bitcoin/pull/22183#issuecomment-915348120,915348120,
ryanofsky,2021-08-22 22:51:15,"In commit ""Use `context.args` in `CWallet::Create` instead of `gArgs`."" (1153ad33ffc821917c76777d971f0074f7af7590)\n\nJust as a style suggestion I might write:\n\n```c++\nArgsManager& args = *Assert(context.args);\n```\n\nabove and use `args` instead of `context.args` throughout this function for less verbosity and for a clearer assert error.",https://github.com/bitcoin/bitcoin/pull/22183#discussion_r693568947,693568947,src/wallet/wallet.cpp
kiminuo,2021-08-23 13:00:16,"Thank you üëç, I had something similar in mind.",https://github.com/bitcoin/bitcoin/pull/22183#discussion_r693949322,693949322,src/wallet/wallet.cpp
