[
  {
    "sha": "f117fb00da747147cddfb071c1427a2754c278cd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTE3ZmIwMGRhNzQ3MTQ3Y2RkZmIwNzFjMTQyN2EyNzU0YzI3OGNk",
    "commit": {
      "author": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2020-01-15T12:16:27Z"
      },
      "committer": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2020-01-15T12:16:27Z"
      },
      "message": "Replace coroutine with async def in p2p_invalid_messages.py",
      "tree": {
        "sha": "8c5f6a53a0474395900dc8cfc02712ad3ee9de4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c5f6a53a0474395900dc8cfc02712ad3ee9de4e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f117fb00da747147cddfb071c1427a2754c278cd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl4fApsZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqfxvvD/wLySy9enfBh0lSEBvSO29e\nOgamWqgM0Y3hL/QL35wfEsKmAbEUnw1lx87cX6AOHGvO5+sHVLBEwEL/5vZ8Z51u\nDqIoObIzqx8+gX2k/2DIRGdT6Xq1cZ8H7eCRlUOY/8nQInUAHKPkRpuTx9f+FbeD\n0ClI+hhWxQMmh2a4jRATXVDQCVt2TvZDegoRkFr7PRAtFRuhvxAECzfCstEGPh3H\n8WU6KcIlNdcmt1bg1BOqADekinQiCr1U9axA/PS9XgA0aG3Mn7kPIOXlp5Ik6tF6\nzFDUX6VeWVz5gBEhpG+9cU6yPpJ7PZ8NG9C0KOO8dzb6vKuWNF4m/MTzItHXH6QQ\n3DIqfq501yctYrpzTM1Rt+H8IJOGcu/plsumLNz3wo4uGM0cuTVZRkLoLagm5WwK\nTE9UL5Od1m0Y3FKfpaxGcl0vR82zLhM+cIMHKjvhYinOIvwRvqQY9qaqdmdsW2M3\n66t69nxfYkB6RvOXy1WWEi6xcg2HGCDB3+PFW/Kvc0OOfe5uZoicsCwGAHxmBdSl\nE+e1qdMCh0LOD59kYPHRW0xHMgCoxXG8qb7jrSwRImyK73ICP/MKW+kwROtdzE/X\n6l8Jput5chR+HUb+VocrzqIYy/ovrQR3uJw74qDhIp+NSEIaG9u7Wiao0t1zXp2/\nrMESLql8tErh2YD4k/q46w==\n=2gJv\n-----END PGP SIGNATURE-----",
        "payload": "tree 8c5f6a53a0474395900dc8cfc02712ad3ee9de4e\nparent ac61ec9da6793f00b29ba11f784b9b1c3ae662e9\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1579090587 +0200\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1579090587 +0200\n\nReplace coroutine with async def in p2p_invalid_messages.py\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f117fb00da747147cddfb071c1427a2754c278cd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f117fb00da747147cddfb071c1427a2754c278cd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f117fb00da747147cddfb071c1427a2754c278cd/comments",
    "author": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac61ec9da6793f00b29ba11f784b9b1c3ae662e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac61ec9da6793f00b29ba11f784b9b1c3ae662e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac61ec9da6793f00b29ba11f784b9b1c3ae662e9"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "07eacf410d888eda5b4978535147663b978bd472",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f117fb00da747147cddfb071c1427a2754c278cd/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f117fb00da747147cddfb071c1427a2754c278cd/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=f117fb00da747147cddfb071c1427a2754c278cd",
        "patch": "@@ -145,13 +145,13 @@ def run_test(self):\n     def test_magic_bytes(self):\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n \n-        def swap_magic_bytes():\n+        async def swap_magic_bytes():\n             conn._on_data = lambda: None  # Need to ignore all incoming messages from now, since they come with \"invalid\" magic bytes\n             conn.magic_bytes = b'\\x00\\x11\\x22\\x32'\n \n         # Call .result() to block until the atomic swap is complete, otherwise\n         # we might run into races later on\n-        asyncio.run_coroutine_threadsafe(asyncio.coroutine(swap_magic_bytes)(), NetworkThread.network_event_loop).result()\n+        asyncio.run_coroutine_threadsafe(swap_magic_bytes(), NetworkThread.network_event_loop).result()\n \n         with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: INVALID MESSAGESTART ping']):\n             conn.send_message(messages.msg_ping(nonce=0xff))"
      }
    ]
  }
]