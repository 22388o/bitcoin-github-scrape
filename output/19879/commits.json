[
  {
    "sha": "cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYjc5YjlkYmY0Y2QwNmUxN2M4YzY1YjM2YmYxNWMzZWEyNjQxZGU0",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-07-28T04:30:50Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-09-04T21:29:29Z"
      },
      "message": "[mempool] Revert unbroadcast set to tracking just txid\n\nWhen I originally implemented the unbroadcast set in 18038, it just tracked\ntxids. After 18038 was merged, I offered a patch to 18044 to make the\nunbroadcast changes compatible with wtxid relay. In this patch, I updated\n`unbroadcast_txids` to a map of txid -> wtxid. Post merge review comments shed\nlight on the fact that this update was unnecessary, and distracting. So, this\ncommit updates the unbroadcast ids back to a set.",
      "tree": {
        "sha": "43860832dcabade3ecfcfdba3af41ba10cfe9adb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43860832dcabade3ecfcfdba3af41ba10cfe9adb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "23d3ae7accfc690298b1b0bac9615155f485c5ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23d3ae7accfc690298b1b0bac9615155f485c5ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/23d3ae7accfc690298b1b0bac9615155f485c5ad"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 24,
      "deletions": 26
    },
    "files": [
      {
        "sha": "e1007e071f28e22ddbae72d59d1203c967113d79",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4",
        "patch": "@@ -889,15 +889,16 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n \n void PeerLogicValidation::ReattemptInitialBroadcast(CScheduler& scheduler) const\n {\n-    std::map<uint256, uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n+    std::set<uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n \n-    for (const auto& elem : unbroadcast_txids) {\n-        // Sanity check: all unbroadcast txns should exist in the mempool\n-        if (m_mempool.exists(elem.first)) {\n+    for (const auto& txid : unbroadcast_txids) {\n+        CTransactionRef tx = m_mempool.get(txid);\n+\n+        if (tx != nullptr) {\n             LOCK(cs_main);\n-            RelayTransaction(elem.first, elem.second, m_connman);\n+            RelayTransaction(txid, tx->GetWitnessHash(), m_connman);\n         } else {\n-            m_mempool.RemoveUnbroadcastTx(elem.first, true);\n+            m_mempool.RemoveUnbroadcastTx(txid, true);\n         }\n     }\n "
      },
      {
        "sha": "586bc8d2a9af40cdfc76d51094a0d1d5444e8ed7",
        "filename": "src/node/transaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4/src/node/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4/src/node/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/transaction.cpp?ref=cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4",
        "patch": "@@ -80,7 +80,7 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n     if (relay) {\n         // the mempool tracks locally submitted transactions to make a\n         // best-effort of initial broadcast\n-        node.mempool->AddUnbroadcastTx(hashTx, tx->GetWitnessHash());\n+        node.mempool->AddUnbroadcastTx(hashTx);\n \n         LOCK(cs_main);\n         RelayTransaction(hashTx, tx->GetWitnessHash(), *node.connman);"
      },
      {
        "sha": "62a836ce679bb0547e0e8c92a9d9c5bf8a461351",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4",
        "patch": "@@ -574,10 +574,9 @@ class CTxMemPool\n     std::vector<indexed_transaction_set::const_iterator> GetSortedDepthAndScore() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /**\n-     * track locally submitted transactions to periodically retry initial broadcast\n-     * map of txid -> wtxid\n+     * Track locally submitted transactions to periodically retry initial broadcast.\n      */\n-    std::map<uint256, uint256> m_unbroadcast_txids GUARDED_BY(cs);\n+    std::set<uint256> m_unbroadcast_txids GUARDED_BY(cs);\n \n public:\n     indirectmap<COutPoint, const CTransaction*> mapNextTx GUARDED_BY(cs);\n@@ -739,19 +738,20 @@ class CTxMemPool\n     size_t DynamicMemoryUsage() const;\n \n     /** Adds a transaction to the unbroadcast set */\n-    void AddUnbroadcastTx(const uint256& txid, const uint256& wtxid) {\n+    void AddUnbroadcastTx(const uint256& txid)\n+    {\n         LOCK(cs);\n-        // Sanity Check: the transaction should also be in the mempool\n-        if (exists(txid)) {\n-            m_unbroadcast_txids[txid] = wtxid;\n-        }\n-    }\n+        // Sanity check the transaction is in the mempool & insert into\n+        // unbroadcast set.\n+        if (exists(txid)) m_unbroadcast_txids.insert(txid);\n+    };\n \n     /** Removes a transaction from the unbroadcast set */\n     void RemoveUnbroadcastTx(const uint256& txid, const bool unchecked = false);\n \n     /** Returns transactions in unbroadcast set */\n-    std::map<uint256, uint256> GetUnbroadcastTxs() const {\n+    std::set<uint256> GetUnbroadcastTxs() const\n+    {\n         LOCK(cs);\n         return m_unbroadcast_txids;\n     }"
      },
      {
        "sha": "e17f804859b0fe1c16911fe60b7b5572e4dbc123",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 9,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4",
        "patch": "@@ -5116,21 +5116,18 @@ bool LoadMempool(CTxMemPool& pool)\n         }\n \n         // TODO: remove this try except in v0.22\n-        std::map<uint256, uint256> unbroadcast_txids;\n+        std::set<uint256> unbroadcast_txids;\n         try {\n           file >> unbroadcast_txids;\n           unbroadcast = unbroadcast_txids.size();\n         } catch (const std::exception&) {\n           // mempool.dat files created prior to v0.21 will not have an\n           // unbroadcast set. No need to log a failure if parsing fails here.\n         }\n-        for (const auto& elem : unbroadcast_txids) {\n-            // Don't add unbroadcast transactions that didn't get back into the\n-            // mempool.\n-            const CTransactionRef& added_tx = pool.get(elem.first);\n-            if (added_tx != nullptr) {\n-                pool.AddUnbroadcastTx(elem.first, added_tx->GetWitnessHash());\n-            }\n+        for (const auto& txid : unbroadcast_txids) {\n+            // Ensure transactions were accepted to mempool then add to\n+            // unbroadcast set.\n+            if (pool.get(txid) != nullptr) pool.AddUnbroadcastTx(txid);\n         }\n     } catch (const std::exception& e) {\n         LogPrintf(\"Failed to deserialize mempool data on disk: %s. Continuing anyway.\\n\", e.what());\n@@ -5147,7 +5144,7 @@ bool DumpMempool(const CTxMemPool& pool)\n \n     std::map<uint256, CAmount> mapDeltas;\n     std::vector<TxMempoolInfo> vinfo;\n-    std::map<uint256, uint256> unbroadcast_txids;\n+    std::set<uint256> unbroadcast_txids;\n \n     static Mutex dump_mutex;\n     LOCK(dump_mutex);"
      }
    ]
  },
  {
    "sha": "fc66d0a65cdc52a3b259effe0c29b5eafb1b5ff5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzY2ZDBhNjVjZGM1MmEzYjI1OWVmZmUwYzI5YjVlYWZiMWI1ZmY1",
    "commit": {
      "author": {
        "name": "Adam Jonas",
        "email": "jonas@chaincode.com",
        "date": "2020-08-17T20:35:03Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-09-04T21:37:44Z"
      },
      "message": "[p2p] Check for nullptr before dereferencing pointer",
      "tree": {
        "sha": "91038075c24af22566cc62fe0d3b36862376d347",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/91038075c24af22566cc62fe0d3b36862376d347"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc66d0a65cdc52a3b259effe0c29b5eafb1b5ff5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc66d0a65cdc52a3b259effe0c29b5eafb1b5ff5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fc66d0a65cdc52a3b259effe0c29b5eafb1b5ff5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc66d0a65cdc52a3b259effe0c29b5eafb1b5ff5/comments",
    "author": {
      "login": "adamjonas",
      "id": 755825,
      "node_id": "MDQ6VXNlcjc1NTgyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamjonas",
      "html_url": "https://github.com/adamjonas",
      "followers_url": "https://api.github.com/users/adamjonas/followers",
      "following_url": "https://api.github.com/users/adamjonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamjonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
      "organizations_url": "https://api.github.com/users/adamjonas/orgs",
      "repos_url": "https://api.github.com/users/adamjonas/repos",
      "events_url": "https://api.github.com/users/adamjonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamjonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb79b9dbf4cd06e17c8c65b36bf15c3ea2641de4"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "578d931505d108b1281780d774ff9846385e166a",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc66d0a65cdc52a3b259effe0c29b5eafb1b5ff5/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc66d0a65cdc52a3b259effe0c29b5eafb1b5ff5/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=fc66d0a65cdc52a3b259effe0c29b5eafb1b5ff5",
        "patch": "@@ -1509,8 +1509,9 @@ void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman&\n     {\n         LockAssertion lock(::cs_main);\n \n-        CNodeState &state = *State(pnode->GetId());\n-        if (state.m_wtxid_relay) {\n+        CNodeState* state = State(pnode->GetId());\n+        if (state == nullptr) return;\n+        if (state->m_wtxid_relay) {\n             pnode->PushTxInventory(wtxid);\n         } else {\n             pnode->PushTxInventory(txid);"
      }
    ]
  },
  {
    "sha": "125c0381266e0e05a408f8e1818501ab73d29110",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMjVjMDM4MTI2NmUwZTA1YTQwOGY4ZTE4MTg1MDFhYjczZDI5MTEw",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-08-25T00:00:05Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-09-04T21:42:30Z"
      },
      "message": "[p2p] Remove dead code\n\nThe else clause is dead code because the only way to not enter the if branch is\nif TX_WITNESS_STRIPPED is true. In that case, it would not have a witness to\nmatch the `tx.HasWitness()` else condition.\n\nCo-authored-by: Adam Jonas <jonas@chaincode.com>\nCo-authored-by: John Newbery <john@johnnewbery.com>",
      "tree": {
        "sha": "b45dc5bfd952bf948e55233fba305541e13f5845",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b45dc5bfd952bf948e55233fba305541e13f5845"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/125c0381266e0e05a408f8e1818501ab73d29110",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/125c0381266e0e05a408f8e1818501ab73d29110",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/125c0381266e0e05a408f8e1818501ab73d29110",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/125c0381266e0e05a408f8e1818501ab73d29110/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc66d0a65cdc52a3b259effe0c29b5eafb1b5ff5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc66d0a65cdc52a3b259effe0c29b5eafb1b5ff5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc66d0a65cdc52a3b259effe0c29b5eafb1b5ff5"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "3135fcb20e354001d569bf8d303a684fdeec7216",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/125c0381266e0e05a408f8e1818501ab73d29110/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/125c0381266e0e05a408f8e1818501ab73d29110/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=125c0381266e0e05a408f8e1818501ab73d29110",
        "patch": "@@ -3121,8 +3121,6 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\n                 if (RecursiveDynamicUsage(*ptx) < 100000) {\n                     AddToCompactExtraTransactions(ptx);\n                 }\n-            } else if (tx.HasWitness() && RecursiveDynamicUsage(*ptx) < 100000) {\n-                AddToCompactExtraTransactions(ptx);\n             }\n \n             if (pfrom.HasPermission(PF_FORCERELAY)) {"
      }
    ]
  },
  {
    "sha": "a8a64acaf32ac21feeb885671772282b531ef9a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOGE2NGFjYWYzMmFjMjFmZWViODg1NjcxNzcyMjgyYjUzMWVmOWEy",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-08-25T17:49:38Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2020-09-04T21:42:59Z"
      },
      "message": "[BroadcastTransaction] Remove unsafe move operator\n\nPreviously, `tx` was being read after having `std::move` called on it. The\nstd::move operator indicates to the compiler that this object may be \"moved\nfrom\", so we shouldn't subsequently read from it. The current code is not\nproblematic since tx is passed in as a const ref. But this `std::move` is at\nbest misleading & at worst problematic, so remove it.",
      "tree": {
        "sha": "3c470d1029df55eeb3411e08485fa6f43a0372dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3c470d1029df55eeb3411e08485fa6f43a0372dc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8a64acaf32ac21feeb885671772282b531ef9a2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8a64acaf32ac21feeb885671772282b531ef9a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a8a64acaf32ac21feeb885671772282b531ef9a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8a64acaf32ac21feeb885671772282b531ef9a2/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "125c0381266e0e05a408f8e1818501ab73d29110",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/125c0381266e0e05a408f8e1818501ab73d29110",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/125c0381266e0e05a408f8e1818501ab73d29110"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9ae47007433539d9f22eff5b0bd3e95283482f06",
        "filename": "src/node/transaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8a64acaf32ac21feeb885671772282b531ef9a2/src/node/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8a64acaf32ac21feeb885671772282b531ef9a2/src/node/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/transaction.cpp?ref=a8a64acaf32ac21feeb885671772282b531ef9a2",
        "patch": "@@ -38,8 +38,8 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n     if (!node.mempool->exists(hashTx)) {\n         // Transaction is not already in the mempool. Submit it.\n         TxValidationState state;\n-        if (!AcceptToMemoryPool(*node.mempool, state, std::move(tx),\n-                nullptr /* plTxnReplaced */, false /* bypass_limits */, max_tx_fee)) {\n+        if (!AcceptToMemoryPool(*node.mempool, state, tx,\n+                                nullptr /* plTxnReplaced */, false /* bypass_limits */, max_tx_fee)) {\n             err_string = state.ToString();\n             if (state.IsInvalid()) {\n                 if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS) {"
      }
    ]
  }
]