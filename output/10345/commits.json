[
  {
    "sha": "e2652002b6011f793185d473f87f1730c625593b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMjY1MjAwMmI2MDExZjc5MzE4NWQ0NzNmODdmMTczMGM2MjU1OTNi",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2017-05-05T18:37:01Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-05-08T18:27:04Z"
      },
      "message": "Delay parallel block download until chain has sufficient work\n\nnMinimumChainWork is an anti-DoS threshold; wait until we have a proposed\ntip with more work than that before downloading blocks towards that tip.",
      "tree": {
        "sha": "3d5f276189e3530e522eb4f7e432d47a8a688a75",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d5f276189e3530e522eb4f7e432d47a8a688a75"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e2652002b6011f793185d473f87f1730c625593b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2652002b6011f793185d473f87f1730c625593b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e2652002b6011f793185d473f87f1730c625593b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2652002b6011f793185d473f87f1730c625593b/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a796b2b53fe542e0f340f250f4f20d69efed8d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a796b2b53fe542e0f340f250f4f20d69efed8d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a796b2b53fe542e0f340f250f4f20d69efed8d0"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e4d8d62a28bf6edb053469a94652858da226440c",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2652002b6011f793185d473f87f1730c625593b/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2652002b6011f793185d473f87f1730c625593b/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=e2652002b6011f793185d473f87f1730c625593b",
        "patch": "@@ -480,7 +480,7 @@ void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<con\n     // Make sure pindexBestKnownBlock is up to date, we'll need it.\n     ProcessBlockAvailability(nodeid);\n \n-    if (state->pindexBestKnownBlock == NULL || state->pindexBestKnownBlock->nChainWork < chainActive.Tip()->nChainWork) {\n+    if (state->pindexBestKnownBlock == NULL || state->pindexBestKnownBlock->nChainWork < chainActive.Tip()->nChainWork || state->pindexBestKnownBlock->nChainWork < UintToArith256(consensusParams.nMinimumChainWork)) {\n         // This peer has nothing interesting.\n         return;\n     }"
      }
    ]
  },
  {
    "sha": "76f74811c44b5119d5c19364b0594d423248ac0e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NmY3NDgxMWM0NGI1MTE5ZDVjMTkzNjRiMDU5NGQ0MjMyNDhhYzBl",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-05-08T19:05:22Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-06-05T20:33:35Z"
      },
      "message": "Add timeout for headers sync\n\nAt startup, we choose one peer to serve us the headers chain, until\nour best header is close to caught up.  Disconnect this peer if more\nthan 15 minutes + 1ms/expected_header passes and our best header\nis still more than 1 day away from current time.",
      "tree": {
        "sha": "b4665449ef64f7e3c7e06b2724dcd265d8e1cb3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4665449ef64f7e3c7e06b2724dcd265d8e1cb3d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76f74811c44b5119d5c19364b0594d423248ac0e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76f74811c44b5119d5c19364b0594d423248ac0e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/76f74811c44b5119d5c19364b0594d423248ac0e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76f74811c44b5119d5c19364b0594d423248ac0e/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e2652002b6011f793185d473f87f1730c625593b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2652002b6011f793185d473f87f1730c625593b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e2652002b6011f793185d473f87f1730c625593b"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 41,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3a98b59b3f364edab2d2aa4d21bb9ebaf830642c",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76f74811c44b5119d5c19364b0594d423248ac0e/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76f74811c44b5119d5c19364b0594d423248ac0e/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=76f74811c44b5119d5c19364b0594d423248ac0e",
        "patch": "@@ -168,6 +168,8 @@ struct CNodeState {\n     int nUnconnectingHeaders;\n     //! Whether we've started headers synchronization with this peer.\n     bool fSyncStarted;\n+    //! When to potentially disconnect peer for stalling headers download\n+    int64_t nHeadersSyncTimeout;\n     //! Since when we're stalling block download progress (in microseconds), or 0.\n     int64_t nStallingSince;\n     std::list<QueuedBlock> vBlocksInFlight;\n@@ -207,6 +209,7 @@ struct CNodeState {\n         pindexBestHeaderSent = NULL;\n         nUnconnectingHeaders = 0;\n         fSyncStarted = false;\n+        nHeadersSyncTimeout = 0;\n         nStallingSince = 0;\n         nDownloadingSince = 0;\n         nBlocksInFlight = 0;\n@@ -2883,6 +2886,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n             // Only actively request headers from a single peer, unless we're close to today.\n             if ((nSyncStarted == 0 && fFetch) || pindexBestHeader->GetBlockTime() > GetAdjustedTime() - 24 * 60 * 60) {\n                 state.fSyncStarted = true;\n+                state.nHeadersSyncTimeout = GetTimeMicros() + HEADERS_DOWNLOAD_TIMEOUT_BASE + HEADERS_DOWNLOAD_TIMEOUT_PER_HEADER * (GetAdjustedTime() - pindexBestHeader->GetBlockTime())/(consensusParams.nPowTargetSpacing);\n                 nSyncStarted++;\n                 const CBlockIndex *pindexStart = pindexBestHeader;\n                 /* If possible, start at the block preceding the currently\n@@ -3206,6 +3210,39 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                 return true;\n             }\n         }\n+        // Check for headers sync timeouts\n+        if (state.fSyncStarted && state.nHeadersSyncTimeout < std::numeric_limits<int64_t>::max()) {\n+            // Detect whether this is a stalling initial-headers-sync peer\n+            if (pindexBestHeader->GetBlockTime() <= GetAdjustedTime() - 24*60*60) {\n+                if (nNow > state.nHeadersSyncTimeout && nSyncStarted == 1 && (nPreferredDownload - state.fPreferredDownload >= 1)) {\n+                    // Disconnect a (non-whitelisted) peer if it is our only sync peer,\n+                    // and we have others we could be using instead.\n+                    // Note: If all our peers are inbound, then we won't\n+                    // disconnect our sync peer for stalling; we have bigger\n+                    // problems if we can't get any outbound peers.\n+                    if (!pto->fWhitelisted) {\n+                        LogPrintf(\"Timeout downloading headers from peer=%d, disconnecting\\n\", pto->GetId());\n+                        pto->fDisconnect = true;\n+                        return true;\n+                    } else {\n+                        LogPrintf(\"Timeout downloading headers from whitelisted peer=%d, not disconnecting\\n\", pto->GetId());\n+                        // Reset the headers sync state so that we have a\n+                        // chance to try downloading from a different peer.\n+                        // Note: this will also result in at least one more\n+                        // getheaders message to be sent to\n+                        // this peer (eventually).\n+                        state.fSyncStarted = false;\n+                        nSyncStarted--;\n+                        state.nHeadersSyncTimeout = 0;\n+                    }\n+                }\n+            } else {\n+                // After we've caught up once, reset the timeout so we can't trigger\n+                // disconnect later.\n+                state.nHeadersSyncTimeout = std::numeric_limits<int64_t>::max();\n+            }\n+        }\n+\n \n         //\n         // Message: getdata (blocks)"
      },
      {
        "sha": "db6d81e6b67f47a56e45a17815fea164c33e263a",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76f74811c44b5119d5c19364b0594d423248ac0e/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76f74811c44b5119d5c19364b0594d423248ac0e/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=76f74811c44b5119d5c19364b0594d423248ac0e",
        "patch": "@@ -17,6 +17,10 @@ static const int64_t ORPHAN_TX_EXPIRE_TIME = 20 * 60;\n static const int64_t ORPHAN_TX_EXPIRE_INTERVAL = 5 * 60;\n /** Default number of orphan+recently-replaced txn to keep around for block reconstruction */\n static const unsigned int DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN = 100;\n+/** Headers download timeout expressed in microseconds\n+ *  Timeout = base + per_header * (expected number of headers) */\n+static constexpr int64_t HEADERS_DOWNLOAD_TIMEOUT_BASE = 15 * 60 * 1000000; // 15 minutes\n+static constexpr int64_t HEADERS_DOWNLOAD_TIMEOUT_PER_HEADER = 1000; // 1ms/header\n \n /** Register with a network node to receive its signals */\n void RegisterNodeSignals(CNodeSignals& nodeSignals);"
      }
    ]
  }
]