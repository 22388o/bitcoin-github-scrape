[
  {
    "sha": "7007402956579ace12d45cdcfae908802d3d6b6d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MDA3NDAyOTU2NTc5YWNlMTJkNDVjZGNmYWU5MDg4MDJkM2Q2YjZk",
    "commit": {
      "author": {
        "name": "Roy Badami",
        "email": "roy@gnomon.org.uk",
        "date": "2014-05-09T22:50:09Z"
      },
      "committer": {
        "name": "Roy Badami",
        "email": "roy@gnomon.org.uk",
        "date": "2014-05-17T13:49:02Z"
      },
      "message": "Implement SI-style (thin space) thoudands separator",
      "tree": {
        "sha": "ced19a39a086950f8078a24c6883f32dff4aee82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ced19a39a086950f8078a24c6883f32dff4aee82"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7007402956579ace12d45cdcfae908802d3d6b6d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7007402956579ace12d45cdcfae908802d3d6b6d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7007402956579ace12d45cdcfae908802d3d6b6d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7007402956579ace12d45cdcfae908802d3d6b6d/comments",
    "author": {
      "login": "roybadami",
      "id": 5601854,
      "node_id": "MDQ6VXNlcjU2MDE4NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5601854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roybadami",
      "html_url": "https://github.com/roybadami",
      "followers_url": "https://api.github.com/users/roybadami/followers",
      "following_url": "https://api.github.com/users/roybadami/following{/other_user}",
      "gists_url": "https://api.github.com/users/roybadami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roybadami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roybadami/subscriptions",
      "organizations_url": "https://api.github.com/users/roybadami/orgs",
      "repos_url": "https://api.github.com/users/roybadami/repos",
      "events_url": "https://api.github.com/users/roybadami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roybadami/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "roybadami",
      "id": 5601854,
      "node_id": "MDQ6VXNlcjU2MDE4NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5601854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roybadami",
      "html_url": "https://github.com/roybadami",
      "followers_url": "https://api.github.com/users/roybadami/followers",
      "following_url": "https://api.github.com/users/roybadami/following{/other_user}",
      "gists_url": "https://api.github.com/users/roybadami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roybadami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roybadami/subscriptions",
      "organizations_url": "https://api.github.com/users/roybadami/orgs",
      "repos_url": "https://api.github.com/users/roybadami/repos",
      "events_url": "https://api.github.com/users/roybadami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roybadami/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9b4b3cf9cf8c657550c4da20e446d8c8ced720c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b4b3cf9cf8c657550c4da20e446d8c8ced720c0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9b4b3cf9cf8c657550c4da20e446d8c8ced720c0"
      }
    ],
    "stats": {
      "total": 221,
      "additions": 184,
      "deletions": 37
    },
    "files": [
      {
        "sha": "e047c278b7eff950462c90861279b0959a498c59",
        "filename": "src/qt/bitcoinamountfield.cpp",
        "status": "modified",
        "additions": 47,
        "deletions": 2,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/bitcoinamountfield.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/bitcoinamountfield.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.cpp?ref=7007402956579ace12d45cdcfae908802d3d6b6d",
        "patch": "@@ -14,14 +14,59 @@\n #include <QKeyEvent>\n #include <qmath.h> // for qPow()\n \n+// QDoubleSpinBox that shows SI-style thin space thousands separators\n+class AmountSpinBox: public QDoubleSpinBox\n+{\n+public:\n+    explicit AmountSpinBox(QWidget *parent):\n+        QDoubleSpinBox(parent)\n+    {\n+    }\n+    QString textFromValue(double value) const\n+    {\n+        QStringList parts = QDoubleSpinBox::textFromValue(value).split(\".\");\n+        QString quotient_str = parts[0];\n+        QString remainder_str;\n+        if(parts.size() > 1)\n+            remainder_str = parts[1];\n+\n+        // Code duplication between here and BitcoinUnits::format\n+        // TODO: Figure out how to share this code\n+        QChar thin_sp(THIN_SP_CP);\n+        int q_size = quotient_str.size();\n+        if (q_size > 4)\n+            for (int i = 3; i < q_size; i += 3)\n+                quotient_str.insert(q_size - i, thin_sp);\n+\n+        int r_size = remainder_str.size();\n+        if (r_size > 4)\n+            for (int i = 3, adj = 0; i < r_size; i += 3, adj++)\n+                remainder_str.insert(i + adj, thin_sp);\n+\n+        if(remainder_str.isEmpty())\n+            return quotient_str;\n+        else\n+            return quotient_str + QString(\".\") + remainder_str;\n+    }\n+    QValidator::State validate (QString &text, int &pos) const\n+    {\n+        QString s(BitcoinUnits::removeSpaces(text));\n+        return QDoubleSpinBox::validate(s, pos);\n+    }\n+    double valueFromText(const QString& text) const\n+    {\n+        return QDoubleSpinBox::valueFromText(BitcoinUnits::removeSpaces(text));\n+    }\n+};\n+\n BitcoinAmountField::BitcoinAmountField(QWidget *parent) :\n     QWidget(parent),\n     amount(0),\n     currentUnit(-1)\n {\n     nSingleStep = 100000; // satoshis\n \n-    amount = new QDoubleSpinBox(this);\n+    amount = new AmountSpinBox(this);\n     amount->setLocale(QLocale::c());\n     amount->installEventFilter(this);\n     amount->setMaximumWidth(170);\n@@ -52,7 +97,7 @@ void BitcoinAmountField::setText(const QString &text)\n     if (text.isEmpty())\n         amount->clear();\n     else\n-        amount->setValue(text.toDouble());\n+        amount->setValue(BitcoinUnits::removeSpaces(text).toDouble());\n }\n \n void BitcoinAmountField::clear()"
      },
      {
        "sha": "1b5eaa2dc5f531e439a7325003d74c3f56074472",
        "filename": "src/qt/bitcoinunits.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 6,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/bitcoinunits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/bitcoinunits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.cpp?ref=7007402956579ace12d45cdcfae908802d3d6b6d",
        "patch": "@@ -50,8 +50,8 @@ QString BitcoinUnits::description(int unit)\n     switch(unit)\n     {\n     case BTC: return QString(\"Bitcoins\");\n-    case mBTC: return QString(\"Milli-Bitcoins (1 / 1,000)\");\n-    case uBTC: return QString(\"Micro-Bitcoins (1 / 1,000,000)\");\n+    case mBTC: return QString(\"Milli-Bitcoins (1 / 1\" THIN_SP_UTF8 \"000)\");\n+    case uBTC: return QString(\"Micro-Bitcoins (1 / 1\" THIN_SP_UTF8 \"000\" THIN_SP_UTF8 \"000)\");\n     default: return QString(\"???\");\n     }\n }\n@@ -100,7 +100,7 @@ int BitcoinUnits::decimals(int unit)\n     }\n }\n \n-QString BitcoinUnits::format(int unit, qint64 n, bool fPlus)\n+QString BitcoinUnits::format(int unit, qint64 n, bool fPlus, SeparatorStyle separators, bool fAlign)\n {\n     // Note: not using straight sprintf here because we do NOT want\n     // localized number formatting.\n@@ -119,6 +119,23 @@ QString BitcoinUnits::format(int unit, qint64 n, bool fPlus)\n     for (int i = remainder_str.size()-1; i>=2 && (remainder_str.at(i) == '0'); --i)\n         ++nTrim;\n     remainder_str.chop(nTrim);\n+    if (fAlign)\n+        remainder_str.append(QString(QChar(FIGURE_SP_CP)).repeated(nTrim));\n+\n+    // Use SI-stule separators as these are locale indendent and can't be\n+    // confused with the decimal marker.  Rule is to use a thin space every\n+    // three digits on *both* sides of the decimal point - but only if there\n+    // are five or more digits\n+    QChar thin_sp(THIN_SP_CP);\n+    int q_size = quotient_str.size();\n+    if (separators == separatorAlways || (separators == separatorStandard && q_size > 4))\n+        for (int i = 3; i < q_size; i += 3)\n+            quotient_str.insert(q_size - i, thin_sp);\n+\n+    int r_size = remainder_str.size();\n+    if (separators == separatorAlways || (separators == separatorStandard && r_size > 4))\n+        for (int i = 3, adj = 0; i < r_size ; i += 3, adj++)\n+            remainder_str.insert(i + adj, thin_sp);\n \n     if (n < 0)\n         quotient_str.insert(0, '-');\n@@ -127,17 +144,27 @@ QString BitcoinUnits::format(int unit, qint64 n, bool fPlus)\n     return quotient_str + QString(\".\") + remainder_str;\n }\n \n-QString BitcoinUnits::formatWithUnit(int unit, qint64 amount, bool plussign)\n+QString BitcoinUnits::formatWithUnit(int unit, qint64 amount, bool plussign, SeparatorStyle separators, bool fAlign)\n {\n-    return format(unit, amount, plussign) + QString(\" \") + name(unit);\n+    return format(unit, amount, plussign, separators, fAlign) + QString(\" \") + name(unit);\n }\n \n+QString BitcoinUnits::formatHtmlWithUnit(int unit, qint64 amount, bool plussign, SeparatorStyle separators)\n+{\n+    QString str(formatWithUnit(unit, amount, plussign, separators));\n+    str.replace(QChar(THIN_SP_CP), QString(THIN_SP_HTML));\n+    return QString(\"<span style='white-space: nowrap;'>%1</span>\").arg(str);\n+}\n+\n+\n bool BitcoinUnits::parse(int unit, const QString &value, qint64 *val_out)\n {\n     if(!valid(unit) || value.isEmpty())\n         return false; // Refuse to parse invalid unit or empty string\n     int num_decimals = decimals(unit);\n-    QStringList parts = value.split(\".\");\n+\n+    // Ignore spaces and thin spaces when parsing\n+    QStringList parts = removeSpaces(value).split(\".\");\n \n     if(parts.size() > 2)\n     {"
      },
      {
        "sha": "a3017b9a8b3ae015afabb4765ac81894e8e65a98",
        "filename": "src/qt/bitcoinunits.h",
        "status": "modified",
        "additions": 51,
        "deletions": 2,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/bitcoinunits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/bitcoinunits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.h?ref=7007402956579ace12d45cdcfae908802d3d6b6d",
        "patch": "@@ -8,6 +8,37 @@\n #include <QAbstractListModel>\n #include <QString>\n \n+// U+2009 THIN SPACE = UTF-8 E2 80 89\n+#define REAL_THIN_SP_CP 0x2009\n+#define REAL_THIN_SP_UTF8 \"\\xE2\\x80\\x89\"\n+#define REAL_THIN_SP_HTML \"&thinsp;\"\n+\n+// U+200A HAIR SPACE = UTF-8 E2 80 8A\n+#define HAIR_SP_CP 0x200A\n+#define HAIR_SP_UTF8 \"\\xE2\\x80\\x8A\"\n+#define HAIR_SP_HTML \"&#8202;\"\n+\n+// U+2006 SIX-PER-EM SPACE = UTF-8 E2 80 86\n+#define SIXPEREM_SP_CP 0x2006\n+#define SIXPEREM_SP_UTF8 \"\\xE2\\x80\\x86\"\n+#define SIXPEREM_SP_HTML \"&#8198;\"\n+\n+// U+2007 FIGURE SPACE = UTF-8 E2 80 87\n+#define FIGURE_SP_CP 0x2007\n+#define FIGURE_SP_UTF8 \"\\xE2\\x80\\x87\"\n+#define FIGURE_SP_HTML \"&#8199;\"\n+\n+// QMessageBox seems to have a bug whereby it doesn't display thin/hair spaces\n+// correctly.  Workaround is to display a space in a small font.  If you\n+// change this, please test that it doesn't cause the parent span to start\n+// wrapping.\n+#define HTML_HACK_SP \"<span style='white-space: nowrap; font-size: 6pt'> </span>\"\n+\n+// Define THIN_SP_* variables to be our preferred type of thin space\n+#define THIN_SP_CP   REAL_THIN_SP_CP\n+#define THIN_SP_UTF8 REAL_THIN_SP_UTF8\n+#define THIN_SP_HTML HTML_HACK_SP\n+\n /** Bitcoin unit definitions. Encapsulates parsing and formatting\n    and serves as list model for drop-down selection boxes.\n */\n@@ -28,6 +59,13 @@ class BitcoinUnits: public QAbstractListModel\n         uBTC\n     };\n \n+    enum SeparatorStyle\n+    {\n+        separatorNever,\n+        separatorStandard,\n+        separatorAlways\n+    };\n+\n     //! @name Static API\n     //! Unit conversion and formatting\n     ///@{\n@@ -49,9 +87,10 @@ class BitcoinUnits: public QAbstractListModel\n     //! Number of decimals left\n     static int decimals(int unit);\n     //! Format as string\n-    static QString format(int unit, qint64 amount, bool plussign=false);\n+    static QString format(int unit, qint64 amount, bool plussign=false, SeparatorStyle separators=separatorStandard, bool fAlign=false);\n     //! Format as string (with unit)\n-    static QString formatWithUnit(int unit, qint64 amount, bool plussign=false);\n+    static QString formatWithUnit(int unit, qint64 amount, bool plussign=false, SeparatorStyle separators=separatorStandard, bool fAlign=false);\n+    static QString formatHtmlWithUnit(int unit, qint64 amount, bool plussign=false, SeparatorStyle separators=separatorStandard);\n     //! Parse string to coin amount\n     static bool parse(int unit, const QString &value, qint64 *val_out);\n     ///@}\n@@ -67,6 +106,16 @@ class BitcoinUnits: public QAbstractListModel\n     QVariant data(const QModelIndex &index, int role) const;\n     ///@}\n \n+    static QString removeSpaces(QString text)\n+    {\n+        text.remove(' ');\n+        text.remove(QChar(THIN_SP_CP));\n+#if (THIN_SP_CP != REAL_THIN_SP_CP)\n+        text.remove(QChar(REAL_THIN_SP_CP));\n+#endif\n+        return text;\n+    }\n+\n private:\n     QList<BitcoinUnits::Unit> unitlist;\n };"
      },
      {
        "sha": "311563d94612c51b333876772d3752c145496d90",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=7007402956579ace12d45cdcfae908802d3d6b6d",
        "patch": "@@ -72,7 +72,7 @@ class TxViewDelegate : public QAbstractItemDelegate\n             foreground = option.palette.color(QPalette::Text);\n         }\n         painter->setPen(foreground);\n-        QString amountText = BitcoinUnits::formatWithUnit(unit, amount, true);\n+        QString amountText = BitcoinUnits::formatWithUnit(unit, amount, true, BitcoinUnits::separatorAlways, true);\n         if(!confirmed)\n         {\n             amountText = QString(\"[\") + amountText + QString(\"]\");\n@@ -141,10 +141,10 @@ void OverviewPage::setBalance(qint64 balance, qint64 unconfirmedBalance, qint64\n     currentBalance = balance;\n     currentUnconfirmedBalance = unconfirmedBalance;\n     currentImmatureBalance = immatureBalance;\n-    ui->labelBalance->setText(BitcoinUnits::formatWithUnit(unit, balance));\n-    ui->labelUnconfirmed->setText(BitcoinUnits::formatWithUnit(unit, unconfirmedBalance));\n-    ui->labelImmature->setText(BitcoinUnits::formatWithUnit(unit, immatureBalance));\n-    ui->labelTotal->setText(BitcoinUnits::formatWithUnit(unit, balance + unconfirmedBalance + immatureBalance));\n+    ui->labelBalance->setText(BitcoinUnits::formatWithUnit(unit, balance, false, BitcoinUnits::separatorAlways, true));\n+    ui->labelUnconfirmed->setText(BitcoinUnits::formatWithUnit(unit, unconfirmedBalance, false, BitcoinUnits::separatorAlways, true));\n+    ui->labelImmature->setText(BitcoinUnits::formatWithUnit(unit, immatureBalance, false, BitcoinUnits::separatorAlways, true));\n+    ui->labelTotal->setText(BitcoinUnits::formatWithUnit(unit, balance + unconfirmedBalance + immatureBalance, false, BitcoinUnits::separatorAlways, true));\n \n     // only show immature (newly mined) balance if it's non-zero, so as not to complicate things\n     // for the non-mining users"
      },
      {
        "sha": "f432c4add63b829257126776c01df720ee4c910b",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=7007402956579ace12d45cdcfae908802d3d6b6d",
        "patch": "@@ -142,7 +142,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n     foreach(const SendCoinsRecipient &rcp, recipients)\n     {\n         // generate bold amount string\n-        QString amount = \"<b>\" + BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), rcp.amount);\n+        QString amount = \"<b>\" + BitcoinUnits::formatHtmlWithUnit(model->getOptionsModel()->getDisplayUnit(), rcp.amount);\n         amount.append(\"</b>\");\n         // generate monospace address string\n         QString address = \"<span style='font-family: monospace;'>\" + rcp.address;\n@@ -210,7 +210,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n     {\n         // append fee string if a fee is required\n         questionString.append(\"<hr /><span style='color:#aa0000;'>\");\n-        questionString.append(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), txFee));\n+        questionString.append(BitcoinUnits::formatHtmlWithUnit(model->getOptionsModel()->getDisplayUnit(), txFee));\n         questionString.append(\"</span> \");\n         questionString.append(tr(\"added as transaction fee\"));\n     }\n@@ -222,10 +222,10 @@ void SendCoinsDialog::on_sendButton_clicked()\n     foreach(BitcoinUnits::Unit u, BitcoinUnits::availableUnits())\n     {\n         if(u != model->getOptionsModel()->getDisplayUnit())\n-            alternativeUnits.append(BitcoinUnits::formatWithUnit(u, totalAmount));\n+            alternativeUnits.append(BitcoinUnits::formatHtmlWithUnit(u, totalAmount));\n     }\n     questionString.append(tr(\"Total Amount %1 (= %2)\")\n-        .arg(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), totalAmount))\n+        .arg(BitcoinUnits::formatHtmlWithUnit(model->getOptionsModel()->getDisplayUnit(), totalAmount))\n         .arg(alternativeUnits.join(\" \" + tr(\"or\") + \" \")));\n \n     QMessageBox::StandardButton retval = QMessageBox::question(this, tr(\"Confirm send coins\"),"
      },
      {
        "sha": "0bb93035cc03d2b49a33b6494bead2424da6fcdd",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=7007402956579ace12d45cdcfae908802d3d6b6d",
        "patch": "@@ -138,7 +138,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, int vout, int u\n             nUnmatured += wallet->GetCredit(txout);\n         strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \";\n         if (wtx.IsInMainChain())\n-            strHTML += BitcoinUnits::formatWithUnit(unit, nUnmatured)+ \" (\" + tr(\"matures in %n more block(s)\", \"\", wtx.GetBlocksToMaturity()) + \")\";\n+            strHTML += BitcoinUnits::formatHtmlWithUnit(unit, nUnmatured)+ \" (\" + tr(\"matures in %n more block(s)\", \"\", wtx.GetBlocksToMaturity()) + \")\";\n         else\n             strHTML += \"(\" + tr(\"not accepted\") + \")\";\n         strHTML += \"<br>\";\n@@ -148,7 +148,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, int vout, int u\n         //\n         // Credit\n         //\n-        strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \" + BitcoinUnits::formatWithUnit(unit, nNet) + \"<br>\";\n+        strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, nNet) + \"<br>\";\n     }\n     else\n     {\n@@ -184,21 +184,21 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, int vout, int u\n                     }\n                 }\n \n-                strHTML += \"<b>\" + tr(\"Debit\") + \":</b> \" + BitcoinUnits::formatWithUnit(unit, -txout.nValue) + \"<br>\";\n+                strHTML += \"<b>\" + tr(\"Debit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, -txout.nValue) + \"<br>\";\n             }\n \n             if (fAllToMe)\n             {\n                 // Payment to self\n                 int64_t nChange = wtx.GetChange();\n                 int64_t nValue = nCredit - nChange;\n-                strHTML += \"<b>\" + tr(\"Debit\") + \":</b> \" + BitcoinUnits::formatWithUnit(unit, -nValue) + \"<br>\";\n-                strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \" + BitcoinUnits::formatWithUnit(unit, nValue) + \"<br>\";\n+                strHTML += \"<b>\" + tr(\"Debit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, -nValue) + \"<br>\";\n+                strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, nValue) + \"<br>\";\n             }\n \n             int64_t nTxFee = nDebit - wtx.GetValueOut();\n             if (nTxFee > 0)\n-                strHTML += \"<b>\" + tr(\"Transaction fee\") + \":</b> \" + BitcoinUnits::formatWithUnit(unit, -nTxFee) + \"<br>\";\n+                strHTML += \"<b>\" + tr(\"Transaction fee\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, -nTxFee) + \"<br>\";\n         }\n         else\n         {\n@@ -207,14 +207,14 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, int vout, int u\n             //\n             BOOST_FOREACH(const CTxIn& txin, wtx.vin)\n                 if (wallet->IsMine(txin))\n-                    strHTML += \"<b>\" + tr(\"Debit\") + \":</b> \" + BitcoinUnits::formatWithUnit(unit, -wallet->GetDebit(txin)) + \"<br>\";\n+                    strHTML += \"<b>\" + tr(\"Debit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, -wallet->GetDebit(txin)) + \"<br>\";\n             BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n                 if (wallet->IsMine(txout))\n-                    strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \" + BitcoinUnits::formatWithUnit(unit, wallet->GetCredit(txout)) + \"<br>\";\n+                    strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, wallet->GetCredit(txout)) + \"<br>\";\n         }\n     }\n \n-    strHTML += \"<b>\" + tr(\"Net amount\") + \":</b> \" + BitcoinUnits::formatWithUnit(unit, nNet, true) + \"<br>\";\n+    strHTML += \"<b>\" + tr(\"Net amount\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, nNet, true) + \"<br>\";\n \n     //\n     // Message\n@@ -260,10 +260,10 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, int vout, int u\n         strHTML += \"<hr><br>\" + tr(\"Debug information\") + \"<br><br>\";\n         BOOST_FOREACH(const CTxIn& txin, wtx.vin)\n             if(wallet->IsMine(txin))\n-                strHTML += \"<b>\" + tr(\"Debit\") + \":</b> \" + BitcoinUnits::formatWithUnit(unit, -wallet->GetDebit(txin)) + \"<br>\";\n+                strHTML += \"<b>\" + tr(\"Debit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, -wallet->GetDebit(txin)) + \"<br>\";\n         BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n             if(wallet->IsMine(txout))\n-                strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \" + BitcoinUnits::formatWithUnit(unit, wallet->GetCredit(txout)) + \"<br>\";\n+                strHTML += \"<b>\" + tr(\"Credit\") + \":</b> \" + BitcoinUnits::formatHtmlWithUnit(unit, wallet->GetCredit(txout)) + \"<br>\";\n \n         strHTML += \"<br><b>\" + tr(\"Transaction\") + \":</b><br>\";\n         strHTML += GUIUtil::HtmlEscape(wtx.ToString(), true);\n@@ -289,7 +289,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, int vout, int u\n                             strHTML += GUIUtil::HtmlEscape(wallet->mapAddressBook[address].name) + \" \";\n                         strHTML += QString::fromStdString(CBitcoinAddress(address).ToString());\n                     }\n-                    strHTML = strHTML + \" \" + tr(\"Amount\") + \"=\" + BitcoinUnits::formatWithUnit(unit, vout.nValue);\n+                    strHTML = strHTML + \" \" + tr(\"Amount\") + \"=\" + BitcoinUnits::formatHtmlWithUnit(unit, vout.nValue);\n                     strHTML = strHTML + \" IsMine=\" + (wallet->IsMine(vout) ? tr(\"true\") : tr(\"false\")) + \"</li>\";\n                 }\n             }"
      },
      {
        "sha": "c0f7edd87190827a112bd784a179052d84e94d10",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=7007402956579ace12d45cdcfae908802d3d6b6d",
        "patch": "@@ -5,7 +5,6 @@\n #include \"transactiontablemodel.h\"\n \n #include \"addresstablemodel.h\"\n-#include \"bitcoinunits.h\"\n #include \"guiconstants.h\"\n #include \"guiutil.h\"\n #include \"optionsmodel.h\"\n@@ -425,9 +424,9 @@ QVariant TransactionTableModel::addressColor(const TransactionRecord *wtx) const\n     return QVariant();\n }\n \n-QString TransactionTableModel::formatTxAmount(const TransactionRecord *wtx, bool showUnconfirmed) const\n+QString TransactionTableModel::formatTxAmount(const TransactionRecord *wtx, bool showUnconfirmed, BitcoinUnits::SeparatorStyle separators, bool fAlign) const\n {\n-    QString str = BitcoinUnits::format(walletModel->getOptionsModel()->getDisplayUnit(), wtx->credit + wtx->debit);\n+    QString str = BitcoinUnits::format(walletModel->getOptionsModel()->getDisplayUnit(), wtx->credit + wtx->debit, false, separators, fAlign);\n     if(showUnconfirmed)\n     {\n         if(!wtx->status.countsForBalance)\n@@ -512,7 +511,7 @@ QVariant TransactionTableModel::data(const QModelIndex &index, int role) const\n         case ToAddress:\n             return formatTxToAddress(rec, false);\n         case Amount:\n-            return formatTxAmount(rec);\n+            return formatTxAmount(rec, true, BitcoinUnits::separatorAlways, true);\n         }\n         break;\n     case Qt::EditRole:\n@@ -569,7 +568,8 @@ QVariant TransactionTableModel::data(const QModelIndex &index, int role) const\n     case ConfirmedRole:\n         return rec->status.countsForBalance;\n     case FormattedAmountRole:\n-        return formatTxAmount(rec, false);\n+\t// Used for copy/export, so don't include separators\n+        return formatTxAmount(rec, false, BitcoinUnits::separatorNever);\n     case StatusRole:\n         return rec->status.status;\n     }"
      },
      {
        "sha": "9ee375d7875fc122dcfbd43ead9de43d3e2b55f9",
        "filename": "src/qt/transactiontablemodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/transactiontablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/transactiontablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.h?ref=7007402956579ace12d45cdcfae908802d3d6b6d",
        "patch": "@@ -8,6 +8,8 @@\n #include <QAbstractTableModel>\n #include <QStringList>\n \n+#include \"bitcoinunits.h\"\n+\n class TransactionRecord;\n class TransactionTablePriv;\n class WalletModel;\n@@ -78,7 +80,7 @@ class TransactionTableModel : public QAbstractTableModel\n     QString formatTxDate(const TransactionRecord *wtx) const;\n     QString formatTxType(const TransactionRecord *wtx) const;\n     QString formatTxToAddress(const TransactionRecord *wtx, bool tooltip) const;\n-    QString formatTxAmount(const TransactionRecord *wtx, bool showUnconfirmed=true) const;\n+    QString formatTxAmount(const TransactionRecord *wtx, bool showUnconfirmed=true, BitcoinUnits::SeparatorStyle separators=BitcoinUnits::separatorStandard, bool fAlign=false) const;\n     QString formatTooltip(const TransactionRecord *rec) const;\n     QVariant txStatusDecoration(const TransactionRecord *wtx) const;\n     QVariant txAddressDecoration(const TransactionRecord *wtx) const;"
      },
      {
        "sha": "98914fc2d0cd3ad3a2c96590ca174f2596238be6",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=7007402956579ace12d45cdcfae908802d3d6b6d",
        "patch": "@@ -123,6 +123,8 @@ TransactionView::TransactionView(QWidget *parent) :\n     view->setTabKeyNavigation(false);\n     view->setContextMenuPolicy(Qt::CustomContextMenu);\n \n+    view->installEventFilter(this);\n+\n     transactionView = view;\n \n     // Actions\n@@ -480,3 +482,22 @@ void TransactionView::resizeEvent(QResizeEvent* event)\n     QWidget::resizeEvent(event);\n     columnResizingFixer->stretchColumnWidth(TransactionTableModel::ToAddress);\n }\n+\n+// Need to override default Ctrl+C action for amount as default behaviour is just to copy DisplayRole text\n+bool TransactionView::eventFilter(QObject *obj, QEvent *event)\n+{\n+    if (event->type() == QEvent::KeyPress)\n+    {\n+        QKeyEvent *ke = static_cast<QKeyEvent *>(event);\n+        if (ke->key() == Qt::Key_C && ke->modifiers().testFlag(Qt::ControlModifier))\n+        {\n+            QModelIndex i = this->transactionView->currentIndex();\n+            if (i.isValid() && i.column() == TransactionTableModel::Amount)\n+            {\n+                 GUIUtil::setClipboard(i.data(TransactionTableModel::FormattedAmountRole).toString());\n+                 return true;\n+            }\n+        }\n+    }\n+    return QWidget::eventFilter(obj, event);\n+}"
      },
      {
        "sha": "618efbc5658a14e17e25d2326fa3dd59500724b1",
        "filename": "src/qt/transactionview.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/transactionview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7007402956579ace12d45cdcfae908802d3d6b6d/src/qt/transactionview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.h?ref=7007402956579ace12d45cdcfae908802d3d6b6d",
        "patch": "@@ -8,6 +8,7 @@\n #include \"guiutil.h\"\n \n #include <QWidget>\n+#include <QKeyEvent>\n \n class TransactionFilterProxy;\n class WalletModel;\n@@ -78,6 +79,8 @@ class TransactionView : public QWidget\n \n     virtual void resizeEvent(QResizeEvent* event);\n \n+    bool eventFilter(QObject *obj, QEvent *event);\n+\n private slots:\n     void contextualMenu(const QPoint &);\n     void dateRangeChanged();"
      }
    ]
  },
  {
    "sha": "2e4fee2ac4824570c1340a8f8fe2aed4580de879",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZTRmZWUyYWM0ODI0NTcwYzEzNDBhOGY4ZmUyYWVkNDU4MGRlODc5",
    "commit": {
      "author": {
        "name": "Roy Badami",
        "email": "roy@gnomon.org.uk",
        "date": "2014-07-07T20:00:58Z"
      },
      "committer": {
        "name": "Roy Badami",
        "email": "roy@gnomon.org.uk",
        "date": "2014-07-07T20:00:58Z"
      },
      "message": "Show bitcoin quantities with full precision, even in the presence of trailing zeros",
      "tree": {
        "sha": "3e25c26cc3b6cc5ccc97c4b46969f76776d1bd86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e25c26cc3b6cc5ccc97c4b46969f76776d1bd86"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2e4fee2ac4824570c1340a8f8fe2aed4580de879",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e4fee2ac4824570c1340a8f8fe2aed4580de879",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2e4fee2ac4824570c1340a8f8fe2aed4580de879",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e4fee2ac4824570c1340a8f8fe2aed4580de879/comments",
    "author": {
      "login": "roybadami",
      "id": 5601854,
      "node_id": "MDQ6VXNlcjU2MDE4NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5601854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roybadami",
      "html_url": "https://github.com/roybadami",
      "followers_url": "https://api.github.com/users/roybadami/followers",
      "following_url": "https://api.github.com/users/roybadami/following{/other_user}",
      "gists_url": "https://api.github.com/users/roybadami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roybadami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roybadami/subscriptions",
      "organizations_url": "https://api.github.com/users/roybadami/orgs",
      "repos_url": "https://api.github.com/users/roybadami/repos",
      "events_url": "https://api.github.com/users/roybadami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roybadami/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "roybadami",
      "id": 5601854,
      "node_id": "MDQ6VXNlcjU2MDE4NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5601854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roybadami",
      "html_url": "https://github.com/roybadami",
      "followers_url": "https://api.github.com/users/roybadami/followers",
      "following_url": "https://api.github.com/users/roybadami/following{/other_user}",
      "gists_url": "https://api.github.com/users/roybadami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roybadami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roybadami/subscriptions",
      "organizations_url": "https://api.github.com/users/roybadami/orgs",
      "repos_url": "https://api.github.com/users/roybadami/repos",
      "events_url": "https://api.github.com/users/roybadami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roybadami/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7007402956579ace12d45cdcfae908802d3d6b6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7007402956579ace12d45cdcfae908802d3d6b6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7007402956579ace12d45cdcfae908802d3d6b6d"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 0,
      "deletions": 8
    },
    "files": [
      {
        "sha": "cf635e19418b43b71fad1d8da5f90c9a405f0294",
        "filename": "src/qt/bitcoinunits.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/qt/bitcoinunits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/qt/bitcoinunits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.cpp?ref=2e4fee2ac4824570c1340a8f8fe2aed4580de879",
        "patch": "@@ -114,14 +114,6 @@ QString BitcoinUnits::format(int unit, qint64 n, bool fPlus, SeparatorStyle sepa\n     QString quotient_str = QString::number(quotient);\n     QString remainder_str = QString::number(remainder).rightJustified(num_decimals, '0');\n \n-    // Right-trim excess zeros after the decimal point\n-    int nTrim = 0;\n-    for (int i = remainder_str.size()-1; i>=2 && (remainder_str.at(i) == '0'); --i)\n-        ++nTrim;\n-    remainder_str.chop(nTrim);\n-    if (fAlign)\n-        remainder_str.append(QString(QChar(FIGURE_SP_CP)).repeated(nTrim));\n-\n     // Use SI-stule separators as these are locale indendent and can't be\n     // confused with the decimal marker.  Rule is to use a thin space every\n     // three digits on *both* sides of the decimal point - but only if there"
      }
    ]
  },
  {
    "sha": "96df327834af3b55918adfac9b3f65adfc960b3a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NmRmMzI3ODM0YWYzYjU1OTE4YWRmYWM5YjNmNjVhZGZjOTYwYjNh",
    "commit": {
      "author": {
        "name": "Roy Badami",
        "email": "roy@gnomon.org.uk",
        "date": "2014-07-07T21:06:21Z"
      },
      "committer": {
        "name": "Roy Badami",
        "email": "roy@gnomon.org.uk",
        "date": "2014-07-07T21:06:21Z"
      },
      "message": "Merge remote-tracking branch 'upstream/master'\n\nConflicts:\n\tsrc/qt/overviewpage.cpp\n\tsrc/qt/transactiondesc.cpp",
      "tree": {
        "sha": "8bd199df46ea6f39f7094c0e7db2185b4d3f5d6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8bd199df46ea6f39f7094c0e7db2185b4d3f5d6d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96df327834af3b55918adfac9b3f65adfc960b3a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96df327834af3b55918adfac9b3f65adfc960b3a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/96df327834af3b55918adfac9b3f65adfc960b3a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96df327834af3b55918adfac9b3f65adfc960b3a/comments",
    "author": {
      "login": "roybadami",
      "id": 5601854,
      "node_id": "MDQ6VXNlcjU2MDE4NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5601854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roybadami",
      "html_url": "https://github.com/roybadami",
      "followers_url": "https://api.github.com/users/roybadami/followers",
      "following_url": "https://api.github.com/users/roybadami/following{/other_user}",
      "gists_url": "https://api.github.com/users/roybadami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roybadami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roybadami/subscriptions",
      "organizations_url": "https://api.github.com/users/roybadami/orgs",
      "repos_url": "https://api.github.com/users/roybadami/repos",
      "events_url": "https://api.github.com/users/roybadami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roybadami/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "roybadami",
      "id": 5601854,
      "node_id": "MDQ6VXNlcjU2MDE4NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5601854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roybadami",
      "html_url": "https://github.com/roybadami",
      "followers_url": "https://api.github.com/users/roybadami/followers",
      "following_url": "https://api.github.com/users/roybadami/following{/other_user}",
      "gists_url": "https://api.github.com/users/roybadami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roybadami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roybadami/subscriptions",
      "organizations_url": "https://api.github.com/users/roybadami/orgs",
      "repos_url": "https://api.github.com/users/roybadami/repos",
      "events_url": "https://api.github.com/users/roybadami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roybadami/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2e4fee2ac4824570c1340a8f8fe2aed4580de879",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e4fee2ac4824570c1340a8f8fe2aed4580de879",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2e4fee2ac4824570c1340a8f8fe2aed4580de879"
      },
      {
        "sha": "1fedd65fcf9ac04b70f0fa8cf6caa9629857d586",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fedd65fcf9ac04b70f0fa8cf6caa9629857d586",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1fedd65fcf9ac04b70f0fa8cf6caa9629857d586"
      }
    ],
    "stats": {
      "total": 27980,
      "additions": 19555,
      "deletions": 8425
    },
    "files": [
      {
        "sha": "4169a2d96c1bc08c81f8c1855ab5c321f53f0dc6",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -13,12 +13,19 @@ autom4te.cache/\n config.log\n config.status\n configure\n-src/bitcoin-config.h\n-src/bitcoin-config.h.in\n+src/config/bitcoin-config.h\n+src/config/bitcoin-config.h.in\n+src/config/stamp-h1\n src/build-aux/\n-src/stamp-h1\n share/setup.nsi\n share/qt/Info.plist\n+# Libtool\n+libtool\n+src/m4/libtool.m4\n+src/m4/ltoptions.m4\n+src/m4/ltsugar.m4\n+src/m4/ltversion.m4\n+src/m4/lt~obsolete.m4\n \n src/qt/*.moc\n src/qt/moc_*.cpp"
      },
      {
        "sha": "6219bd75a64975f94aa512cd25d9e5adf047a8f6",
        "filename": "COPYING",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,4 +1,4 @@\n-Copyright (c) 2009-2013 Bitcoin Developers\n+Copyright (c) 2009-2014 Bitcoin Developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "3a6a6b6d885305475bf0a3ee9809d59786e05cfc",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,6 +1,6 @@\n ACLOCAL_AMFLAGS = -I src/m4\n SUBDIRS = src\n-.PHONY: deploy\n+.PHONY: deploy FORCE\n \n GZIP_ENV=\"-9n\"\n \n@@ -35,6 +35,7 @@ COVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \\\n \n dist-hook:\n \t-$(MAKE) -C $(top_distdir)/src/leveldb clean\n+\t-$(MAKE) -C $(top_distdir)/src/secp256k1 distclean\n \t-$(GIT) archive --format=tar HEAD -- src/version.cpp | $(AMTAR) -C $(top_distdir) -xf -\n \n distcheck-hook:\n@@ -53,8 +54,8 @@ $(BITCOIN_WIN_INSTALLER): $(BITCOIND_BIN) $(BITCOIN_QT_BIN) $(BITCOIN_CLI_BIN)\n \t@test -f $(MAKENSIS) && $(MAKENSIS) $(top_builddir)/share/setup.nsi || \\\n \t  echo error: could not build $@\n \n-$(BITCOIND_BIN) $(BITCOIN_QT_BIN) $(BITCOIN_CLI_BIN):\n-\tmake -C $(dir $@) $(notdir $@)\n+$(if $(findstring src/,$(MAKECMDGOALS)),$(MAKECMDGOALS), none): FORCE\n+\t$(MAKE) -C src $(patsubst src/%,%,$@)\n \n $(OSX_APP)/Contents/PkgInfo:\n \t$(MKDIR_P) $(@D)"
      },
      {
        "sha": "081af80dcf1f5a0cb64bc22fa404c794116ea366",
        "filename": "README.md",
        "status": "modified",
        "additions": 43,
        "deletions": 6,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,7 +1,7 @@\n Bitcoin Core integration/staging tree\n =====================================\n \n-http://www.bitcoin.org\n+https://www.bitcoin.org\n \n Copyright (c) 2009-2014 Bitcoin Core Developers\n \n@@ -15,7 +15,7 @@ out collectively by the network. Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see http://www.bitcoin.org/en/download.\n+the Bitcoin Core software, see https://www.bitcoin.org/en/download.\n \n License\n -------\n@@ -49,8 +49,8 @@ Testing\n -------\n \n Testing and code review is the bottleneck for development; we get more pull\n-requests than we can review and test. Please be patient and help out, and\n-remember this is a security-critical project where any mistake might cost people\n+requests than we can review and test on short notice. Please be patient and help out by testing\n+other people's pull requests, and remember this is a security-critical project where any mistake might cost people\n lots of money.\n \n ### Automated Testing\n@@ -76,8 +76,45 @@ Translations\n Changes to translations as well as new translations can be submitted to\n [Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n \n-Periodically the translations are pulled from Transifex and merged into the git repository. See the\n+Translations are periodically pulled from Transifex and merged into the git repository. See the\n [translation process](doc/translation_process.md) for details on how this works.\n \n-**Important**: We do not accept translation changes as github pull request because the next\n+**Important**: We do not accept translation changes as GitHub pull requests because the next\n pull from Transifex would automatically overwrite them again.\n+\n+Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators).\n+\n+Development tips and tricks\n+---------------------------\n+\n+**compiling for debugging**\n+\n+Run configure with the --enable-debug option, then make. Or run configure with\n+CXXFLAGS=\"-g -ggdb -O0\" or whatever debug flags you need.\n+\n+**debug.log**\n+\n+If the code is behaving strangely, take a look in the debug.log file in the data directory;\n+error and debugging message are written there.\n+\n+The -debug=... command-line option controls debugging; running with just -debug will turn\n+on all categories (and give you a very large debug.log file).\n+\n+The Qt code routes qDebug() output to debug.log under category \"qt\": run with -debug=qt\n+to see it.\n+\n+**testnet and regtest modes**\n+\n+Run with the -testnet option to run with \"play bitcoins\" on the test network, if you\n+are testing multi-machine code that needs to operate across the internet.\n+\n+If you are testing something that can run on one machine, run with the -regtest option.\n+In regression test mode blocks can be created on-demand; see qa/rpc-tests/ for tests\n+that run in -regest mode.\n+\n+**DEBUG_LOCKORDER**\n+\n+Bitcoin Core is a multithreaded application, and deadlocks or other multithreading bugs\n+can be very difficult to track down. Compiling with -DDEBUG_LOCKORDER (configure\n+CXXFLAGS=\"-DDEBUG_LOCKORDER -g\") inserts run-time checks to keep track of what locks\n+are held, and adds warning to the debug.log file if inconsistencies are detected."
      },
      {
        "sha": "50b85bcba0638d7628f33fc03360f1c3f53dfe0e",
        "filename": "autogen.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -2,4 +2,7 @@\n set -e\n srcdir=\"$(dirname $0)\"\n cd \"$srcdir\"\n+if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"`which glibtoolize 2>/dev/null`\"; then\n+  export LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n+fi\n autoreconf --install --force"
      },
      {
        "sha": "dcaec0d4b05ebea2d06efa8314e6005a7a75336e",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 17,
        "deletions": 3,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -9,6 +9,7 @@ define(_COPYRIGHT_YEAR, 2014)\n AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[info@bitcoin.org],[bitcoin])\n AC_CONFIG_AUX_DIR([src/build-aux])\n AC_CONFIG_MACRO_DIR([src/m4])\n+LT_INIT([disable-shared])\n AC_CANONICAL_HOST\n AH_TOP([#ifndef BITCOIN_CONFIG_H])\n AH_TOP([#define BITCOIN_CONFIG_H])\n@@ -111,7 +112,7 @@ AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[spec\n \n \n AC_CONFIG_SRCDIR([src])\n-AC_CONFIG_HEADERS([src/bitcoin-config.h])\n+AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n \n dnl Checks for programs.\n AC_PROG_CXX\n@@ -303,6 +304,8 @@ INCLUDES=\"$INCLUDES $PTHREAD_CFLAGS\"\n # they also need to be passed down to any subprojects. Pull the results out of\n # the cache and add them to CPPFLAGS.\n AC_SYS_LARGEFILE\n+# detect POSIX or GNU variant of strerror_r\n+AC_FUNC_STRERROR_R\n \n if test x$ac_cv_sys_file_offset_bits != x &&\n    test x$ac_cv_sys_file_offset_bits != xno &&\n@@ -366,7 +369,14 @@ if test x$TARGET_OS = xdarwin; then\n   AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n fi\n \n-AC_CHECK_HEADERS([stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h])\n+AC_CHECK_HEADERS([endian.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h])\n+AC_SEARCH_LIBS([getaddrinfo_a], [anl], [AC_DEFINE(HAVE_GETADDRINFO_A, 1, [Define this symbol if you have getaddrinfo_a])])\n+AC_SEARCH_LIBS([inet_pton], [nsl resolv], [AC_DEFINE(HAVE_INET_PTON, 1, [Define this symbol if you have inet_pton])])\n+\n+AC_CHECK_DECLS([le32toh, le64toh, htole32, htole64, be32toh, be64toh, htobe32, htobe64],,,\n+\t\t[#if HAVE_ENDIAN_H\n+                 #include <endian.h>\n+                 #endif])\n \n dnl Check for MSG_NOSIGNAL\n AC_MSG_CHECKING(for MSG_NOSIGNAL)\n@@ -664,11 +674,15 @@ AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet == xyes])\n+AM_CONDITIONAL([ENABLE_TESTS],[test x$use_tests == xyes])\n+AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt == xyes])\n+AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$use_tests$bitcoin_enable_qt_test = xyesyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov == xyes])\n AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])\n AM_CONDITIONAL([USE_COMPARISON_TOOL_REORG_TESTS],[test x$use_comparison_tool_reorg_test != xno])\n AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n+AM_CONDITIONAL([USE_LIBSECP256K1],[test x$use_libsecp256k1 = xyes])\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n@@ -693,7 +707,7 @@ AC_SUBST(LEVELDB_TARGET_FLAGS)\n AC_SUBST(BUILD_TEST)\n AC_SUBST(BUILD_QT)\n AC_SUBST(BUILD_TEST_QT)\n-AC_CONFIG_FILES([Makefile src/Makefile src/test/Makefile src/qt/Makefile src/qt/test/Makefile share/setup.nsi share/qt/Info.plist])\n+AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist])\n AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n AC_CONFIG_FILES([qa/pull-tester/build-tests.sh],[chmod +x qa/pull-tester/build-tests.sh])\n AC_OUTPUT"
      },
      {
        "sha": "02577b1b6aab76987a71e5aea9c9ce023b4fd66e",
        "filename": "contrib/bitrpc/bitrpc.py",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/bitrpc/bitrpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/bitrpc/bitrpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitrpc/bitrpc.py?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -22,6 +22,18 @@\n         print access.backupwallet(path)\n     except:\n         print \"\\n---An error occurred---\\n\"\n+        \n+elif cmd == \"encryptwallet\":\n+    try:\n+        pwd = getpass.getpass(prompt=\"Enter passphrase: \")\n+        pwd2 = getpass.getpass(prompt=\"Repeat passphrase: \")\n+        if pwd == pwd2:\n+            access.encryptwallet(pwd)\n+            print \"\\n---Wallet encrypted. Server stopping, restart to run with encrypted wallet---\\n\"\n+        else:\n+            print \"\\n---Passphrases do not match---\\n\"\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getaccount\":\n     try:"
      },
      {
        "sha": "a04e88d4e175ba0af280d7f791c5e5ba496bdbc2",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -6,6 +6,7 @@ Uploaders: Micah Anderson <micah@debian.org>\n Build-Depends: debhelper,\n  devscripts,\n  automake,\n+ libtool,\n  bash-completion,\n  libboost-system-dev (>> 1.35) | libboost-system1.35-dev,\n  libdb4.8++-dev,"
      },
      {
        "sha": "0aa8674af9c8f4c20c1d3eaf0f5e158cd3b8cc63",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 63,
        "deletions": 32,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,79 +1,110 @@\n-# bitcoin.conf configuration file. Lines beginning with # are comments.\n-\n-\n+##\n+## bitcoin.conf configuration file. Lines beginning with # are comments.\n+##\n+ \n # Network-related settings:\n \n # Run on the test network instead of the real bitcoin network.\n-#testnet=1\n+#testnet=0\n+\n+# Run a regression test network\n+#regtest=0\n \n # Connect via a socks4 proxy\n #proxy=127.0.0.1:9050\n \n+##############################################################\n+##            Quick Primer on addnode vs connect            ##\n+##  Let's say for instance you use addnode=4.2.2.4          ##\n+##  addnode will connect you to and tell you about the      ##\n+##    nodes connected to 4.2.2.4.  In addition it will tell ##\n+##    the other nodes connected to it that you exist so     ##\n+##    they can connect to you.                              ##\n+##  connect will not do the above when you 'connect' to it. ##\n+##    It will *only* connect you to 4.2.2.4 and no one else.##\n+##                                                          ##\n+##  So if you're behind a firewall, or have other problems  ##\n+##  finding nodes, add some using 'addnode'.                ##\n+##                                                          ##\n+##  If you want to stay private, use 'connect' to only      ##\n+##  connect to \"trusted\" nodes.                             ##\n+##                                                          ##\n+##  If you run multiple nodes on a LAN, there's no need for ##\n+##  all of them to open lots of connections.  Instead       ##\n+##  'connect' them all to one node that is port forwarded   ##\n+##  and has lots of connections.                            ##\n+##       Thanks goes to [Noodle] on Freenode.               ##\n+##############################################################\n+\n # Use as many addnode= settings as you like to connect to specific peers\n #addnode=69.164.218.197\n #addnode=10.0.0.2:8333\n \n-# ... or use as many connect= settings as you like to connect ONLY\n-# to specific peers:\n+# Alternatively use as many connect= settings as you like to connect ONLY to specific peers\n #connect=69.164.218.197\n #connect=10.0.0.1:8333\n \n+# Listening mode, enabled by default except when 'connect' is being used\n+#listen=1\n+\n # Maximum number of inbound+outbound connections.\n #maxconnections=\n \n-\n+#\n # JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n+#\n \n-# server=1 tells Bitcoin to accept JSON-RPC commands.\n-#server=1\n+# server=1 tells Bitcoin-QT and bitcoind to accept JSON-RPC commands\n+#server=0\n \n # You must set rpcuser and rpcpassword to secure the JSON-RPC api\n #rpcuser=Ulysseys\n-#rpcpassword=YourSuperGreatPasswordNumber_385593\n+#rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n+\n+# How many seconds bitcoin will wait for a complete RPC HTTP request.\n+# after the HTTP connection is established. \n+#rpctimeout=30\n \n-# By default, only RPC connections from localhost are allowed.  Specify\n-# as many rpcallowip= settings as you like to allow connections from\n-# other hosts (and you may use * as a wildcard character):\n-#rpcallowip=10.1.1.34\n-#rpcallowip=192.168.1.*\n+# By default, only RPC connections from localhost are allowed.\n+# Specify as many rpcallowip= settings as you like to allow connections from other hosts,\n+# either as a single IPv4/IPv6 or with a subnet specification.\n+\n+# NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n+# because the rpcpassword is transmitted over the network unencrypted.\n+\n+# server=1 tells Bitcoin-QT to accept JSON-RPC commands.\n+# it is also read by bitcoind to determine if RPC should be enabled \n+#rpcallowip=10.1.1.34/255.255.255.0\n+#rpcallowip=1.2.3.4/24\n+#rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n \n # Listen for RPC connections on this TCP port:\n-rpcport=8332\n+#rpcport=8332\n \n # You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind\n # running on another host using this option:\n-rpcconnect=127.0.0.1\n+#rpcconnect=127.0.0.1\n \n # Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate\n # with Bitcoin -server or bitcoind\n #rpcssl=1\n \n # OpenSSL settings used when rpcssl=1\n-rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH\n-rpcsslcertificatechainfile=server.cert\n-rpcsslprivatekeyfile=server.pem\n+#rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH\n+#rpcsslcertificatechainfile=server.cert\n+#rpcsslprivatekeyfile=server.pem\n \n \n # Miscellaneous options\n \n-# Set gen=1 to attempt to generate bitcoins\n-gen=0\n-\n-# Use SSE instructions to try to generate bitcoins faster.\n-#4way=1\n-\n # Pre-generate this many public/private key pairs, so wallet backups will be valid for\n # both prior transactions and several dozen future transactions.\n-keypool=100\n+#keypool=100\n \n # Pay an optional transaction fee every time you send bitcoins.  Transactions with fees\n # are more likely than free transactions to be included in generated blocks, so may\n # be validated sooner.\n-paytxfee=0.00\n-\n-# Allow direct connections for the 'pay via IP address' feature.\n-#allowreceivebyip=1\n-\n+#paytxfee=0.00\n \n # User interface options\n "
      },
      {
        "sha": "25a423f9c425111e5d8ea61e48868f292c9a5594",
        "filename": "contrib/debian/manpages/bitcoin-qt.1",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/debian/manpages/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/debian/manpages/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-qt.1?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -139,6 +139,9 @@ Execute command when the best block changes (%s in cmd is replaced by block hash\n \\fB\\-walletnotify=\\fR<cmd>\n Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\n .TP\n+\\fB\\-respendnotify=\\fR<cmd>\n+Execute command when a network tx respends wallet tx input (%s=respend TxID, %t=wallet TxID)\n+.TP\n \\fB\\-alertnotify=\\fR<cmd>\n Execute command when a relevant alert is received (%s in cmd is replaced by message)\n .TP"
      },
      {
        "sha": "7438b4b66ad7f3c91e887ccec37caf8632f62b3b",
        "filename": "contrib/debian/manpages/bitcoin.conf.5",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/debian/manpages/bitcoin.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/debian/manpages/bitcoin.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin.conf.5?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -37,9 +37,6 @@ You must set *rpcuser* to secure the JSON-RPC api.\n \\fBrpcpassword=\\fR\\fI'password'\\fR\n You must set *rpcpassword* to secure the JSON-RPC api.\n .TP\n-\\fBrpctimeout=\\fR\\fI'30'\\fR\n-How many seconds *bitcoin* will wait for a complete RPC HTTP request, after the HTTP connection is established.\n-.TP\n \\fBrpcallowip=\\fR\\fI'192.168.1.*'\\fR\n By default, only RPC connections from localhost are allowed. Specify as many *rpcallowip=* settings as you like to allow connections from other hosts (and you may use * as a wildcard character).\n .TP"
      },
      {
        "sha": "82212221334ab96b2ddfdf31382c1dacb684522c",
        "filename": "contrib/gitian-descriptors/deps-linux.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/deps-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/deps-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-linux.yml?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -16,7 +16,7 @@ packages:\n reference_datetime: \"2013-06-01 00:00:00\"\n remotes: []\n files:\n-- \"openssl-1.0.1g.tar.gz\"\n+- \"openssl-1.0.1h.tar.gz\"\n - \"miniupnpc-1.9.tar.gz\"\n - \"qrencode-3.4.3.tar.bz2\"\n - \"protobuf-2.5.0.tar.bz2\"\n@@ -30,15 +30,15 @@ script: |\n   export TZ=UTC\n   export LIBRARY_PATH=\"$STAGING/lib\"\n   # Integrity Check\n-  echo \"53cb818c3b90e507a8348f4f5eaedb05d8bfe5358aabb508b7263cc670c3e028  openssl-1.0.1g.tar.gz\"  | sha256sum -c\n+  echo \"9d1c8a9836aa63e2c6adb684186cbd4371c9e9dcc01d6e3bb447abf2d4d3d093  openssl-1.0.1h.tar.gz\"  | sha256sum -c\n   echo \"2923e453e880bb949e3d4da9f83dd3cb6f08946d35de0b864d0339cf70934464  miniupnpc-1.9.tar.gz\"   | sha256sum -c\n   echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n   echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n   echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"    | sha256sum -c\n \n   #\n-  tar xzf openssl-1.0.1g.tar.gz\n-  cd openssl-1.0.1g\n+  tar xzf openssl-1.0.1h.tar.gz\n+  cd openssl-1.0.1h\n   #   need -fPIC to avoid relocation error in 64 bit builds\n   ./config no-shared no-zlib no-dso no-krb5 --openssldir=$STAGING -fPIC\n   #   need to build OpenSSL with faketime because a timestamp is embedded into cversion.o\n@@ -95,4 +95,4 @@ script: |\n   done\n   #\n   cd $STAGING\n-  find include lib bin host | sort | zip -X@ $OUTDIR/bitcoin-deps-linux${GBUILD_BITS}-gitian-r5.zip\n+  find include lib bin host | sort | zip -X@ $OUTDIR/bitcoin-deps-linux${GBUILD_BITS}-gitian-r6.zip"
      },
      {
        "sha": "fabc2949ebb32b9e50d4ab64708b16e97d18635b",
        "filename": "contrib/gitian-descriptors/deps-win.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/deps-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/deps-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-win.yml?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -14,7 +14,7 @@ packages:\n reference_datetime: \"2011-01-30 00:00:00\"\n remotes: []\n files:\n-- \"openssl-1.0.1g.tar.gz\"\n+- \"openssl-1.0.1h.tar.gz\"\n - \"db-4.8.30.NC.tar.gz\"\n - \"miniupnpc-1.9.tar.gz\"\n - \"zlib-1.2.8.tar.gz\"\n@@ -28,7 +28,7 @@ script: |\n   INDIR=$HOME/build\n   TEMPDIR=$HOME/tmp\n   # Input Integrity Check\n-  echo \"53cb818c3b90e507a8348f4f5eaedb05d8bfe5358aabb508b7263cc670c3e028  openssl-1.0.1g.tar.gz\"  | sha256sum -c\n+  echo \"9d1c8a9836aa63e2c6adb684186cbd4371c9e9dcc01d6e3bb447abf2d4d3d093  openssl-1.0.1h.tar.gz\"  | sha256sum -c\n   echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"    | sha256sum -c\n   echo \"2923e453e880bb949e3d4da9f83dd3cb6f08946d35de0b864d0339cf70934464  miniupnpc-1.9.tar.gz\"   | sha256sum -c\n   echo \"36658cb768a54c1d4dec43c3116c27ed893e88b02ecfcb44f2166f9c0b7f2a0d  zlib-1.2.8.tar.gz\"      | sha256sum -c\n@@ -48,8 +48,8 @@ script: |\n     mkdir -p $INSTALLPREFIX $BUILDDIR\n     cd $BUILDDIR\n     #\n-    tar xzf $INDIR/openssl-1.0.1g.tar.gz\n-    cd openssl-1.0.1g\n+    tar xzf $INDIR/openssl-1.0.1h.tar.gz\n+    cd openssl-1.0.1h\n     if [ \"$BITS\" == \"32\" ]; then\n       OPENSSL_TGT=mingw\n     else\n@@ -124,5 +124,5 @@ script: |\n     done\n     #\n     cd $INSTALLPREFIX\n-    find include lib | sort | zip -X@ $OUTDIR/bitcoin-deps-win$BITS-gitian-r12.zip\n+    find include lib | sort | zip -X@ $OUTDIR/bitcoin-deps-win$BITS-gitian-r13.zip\n   done # for BITS in"
      },
      {
        "sha": "65a6c3c1e9c03045d74f662e79f8fec64fcfc3f2",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -25,8 +25,8 @@ remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"bitcoin-deps-linux32-gitian-r5.zip\"\n-- \"bitcoin-deps-linux64-gitian-r5.zip\"\n+- \"bitcoin-deps-linux32-gitian-r6.zip\"\n+- \"bitcoin-deps-linux64-gitian-r6.zip\"\n - \"boost-linux32-1.55.0-gitian-r1.zip\"\n - \"boost-linux64-1.55.0-gitian-r1.zip\"\n - \"qt-linux32-4.6.4-gitian-r1.tar.gz\"\n@@ -43,7 +43,7 @@ script: |\n   #\n   mkdir -p $STAGING\n   cd $STAGING\n-  unzip ../build/bitcoin-deps-linux${GBUILD_BITS}-gitian-r5.zip\n+  unzip ../build/bitcoin-deps-linux${GBUILD_BITS}-gitian-r6.zip\n   unzip ../build/boost-linux${GBUILD_BITS}-1.55.0-gitian-r1.zip\n   tar -zxf ../build/qt-linux${GBUILD_BITS}-4.6.4-gitian-r1.tar.gz\n   cd ../build"
      },
      {
        "sha": "bc3d561c357089535420f7d25d9abcf57dc8838f",
        "filename": "contrib/gitian-descriptors/gitian-osx-bitcoin.yml",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/gitian-osx-bitcoin.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/gitian-osx-bitcoin.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-bitcoin.yml?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,61 @@\n+---\n+name: \"bitcoin\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"i386\"\n+packages:\n+- \"git-core\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"pkg-config\"\n+- \"p7zip-full\"\n+- \"libtool\"\n+\n+reference_datetime: \"2013-06-01 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files:\n+- \"osx-native-depends-r3.tar.gz\"\n+- \"osx-depends-r4.tar.gz\"\n+- \"osx-depends-qt-5.2.1-r4.tar.gz\"\n+- \"MacOSX10.7.sdk.tar.gz\"\n+\n+script: |\n+\n+  HOST=x86_64-apple-darwin11\n+  PREFIX=`pwd`/osx-cross-depends/prefix\n+  SDK=`pwd`/osx-cross-depends/SDKs/MacOSX10.7.sdk\n+  NATIVEPREFIX=`pwd`/osx-cross-depends/native-prefix\n+  export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+\n+  export SOURCES_PATH=`pwd`\n+\n+  mkdir -p osx-cross-depends/SDKs\n+\n+  tar -C osx-cross-depends/SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n+\n+  tar -C osx-cross-depends -xf osx-native-depends-r3.tar.gz\n+  tar -C osx-cross-depends -xf osx-depends-r4.tar.gz\n+  tar -C osx-cross-depends -xf osx-depends-qt-5.2.1-r4.tar.gz\n+  export PATH=`pwd`/osx-cross-depends/native-prefix/bin:$PATH\n+\n+  cd bitcoin\n+\n+  export ZERO_AR_DATE=1\n+  export QT_RCC_TEST=1\n+  ./autogen.sh\n+  ./configure --host=${HOST} --with-boost=${PREFIX} CC=clang CXX=clang++ OBJC=clang OBJCXX=clang++ CFLAGS=\"-target ${HOST} -mmacosx-version-min=10.6 --sysroot ${SDK} -msse2 -Qunused-arguments\" CXXFLAGS=\"-target ${HOST} -mmacosx-version-min=10.6 --sysroot ${SDK} -msse2 -Qunused-arguments\" LDFLAGS=\"-B${NATIVEPREFIX}/bin -L${PREFIX}/lib -L${SDK}/usr/lib/i686-apple-darwin10/4.2.1\" CPPFLAGS=\"-I${NATIVEPREFIX}/lib/clang/3.2/include -I${PREFIX}/include\" SSL_LIBS=\"-lz -lssl -lcrypto\" --disable-tests -with-gui=qt5 PKG_CONFIG_LIBDIR=\"${PREFIX}/lib/pkgconfig\" --disable-dependency-tracking --disable-maintainer-mode\n+  make dist\n+  mkdir -p distsrc\n+  cd distsrc\n+  tar --strip-components=1 -xf ../bitcoin-*.tar*\n+  ./configure --host=${HOST} --with-boost=${PREFIX} CC=clang CXX=clang++ OBJC=clang OBJCXX=clang++ CFLAGS=\"-target ${HOST} -mmacosx-version-min=10.6 --sysroot ${SDK} -msse2 -Qunused-arguments\" CXXFLAGS=\"-target ${HOST} -mmacosx-version-min=10.6 --sysroot ${SDK} -msse2 -Qunused-arguments\" LDFLAGS=\"-B${NATIVEPREFIX}/bin -L${PREFIX}/lib -L${SDK}/usr/lib/i686-apple-darwin10/4.2.1\" CPPFLAGS=\"-I${NATIVEPREFIX}/lib/clang/3.2/include -I${PREFIX}/include\" SSL_LIBS=\"-lz -lssl -lcrypto\" --disable-tests -with-gui=qt5 PKG_CONFIG_LIBDIR=\"${PREFIX}/lib/pkgconfig\"  --disable-dependency-tracking --disable-maintainer-mode\n+  make $MAKEOPTS\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  make deploy\n+  dmg dmg Bitcoin-Qt.dmg $OUTDIR/Bitcoin-Qt.dmg"
      },
      {
        "sha": "07a021cf0c59ac7d6f96c80ea1cc00b56a402e18",
        "filename": "contrib/gitian-descriptors/gitian-osx-depends.yml",
        "status": "added",
        "additions": 159,
        "deletions": 0,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/gitian-osx-depends.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/gitian-osx-depends.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-depends.yml?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,159 @@\n+---\n+name: \"osx-depends\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"i386\"\n+packages:\n+- \"git-core\"\n+- \"automake\"\n+- \"p7zip-full\"\n+\n+reference_datetime: \"2013-06-01 00:00:00\"\n+remotes: []\n+files:\n+- \"boost_1_55_0.tar.bz2\"\n+- \"db-4.8.30.NC.tar.gz\"\n+- \"miniupnpc-1.9.tar.gz\"\n+- \"openssl-1.0.1h.tar.gz\"\n+- \"protobuf-2.5.0.tar.bz2\"\n+- \"qrencode-3.4.3.tar.bz2\"\n+- \"MacOSX10.7.sdk.tar.gz\"\n+- \"osx-native-depends-r3.tar.gz\"\n+\n+script: |\n+\n+  echo \"fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52  boost_1_55_0.tar.bz2\" | sha256sum -c\n+  echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\" | sha256sum -c\n+  echo \"2923e453e880bb949e3d4da9f83dd3cb6f08946d35de0b864d0339cf70934464  miniupnpc-1.9.tar.gz\" | sha256sum -c\n+  echo \"9d1c8a9836aa63e2c6adb684186cbd4371c9e9dcc01d6e3bb447abf2d4d3d093  openssl-1.0.1h.tar.gz\" | sha256sum -c\n+  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n+  echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n+\n+  REVISION=r4\n+  export SOURCES_PATH=`pwd`\n+  export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export PATH=$HOME:$PATH\n+  export SOURCES_PATH=`pwd`\n+  export ZERO_AR_DATE=1\n+\n+  mkdir -p osx-cross-depends/build\n+  cd osx-cross-depends\n+\n+  PREFIX=`pwd`/prefix\n+  NATIVEPREFIX=`pwd`/native-prefix\n+  BUILD_BASE=`pwd`/build\n+  SDK=`pwd`/SDKs/MacOSX10.7.sdk\n+  HOST=x86_64-apple-darwin11\n+  MIN_VERSION=10.6\n+\n+  INT_CFLAGS=\"-target ${HOST} -mmacosx-version-min=${MIN_VERSION} --sysroot ${SDK} -msse2 -Qunused-arguments\"\n+  INT_CXXFLAGS=\"${INT_CFLAGS}\"\n+  INT_LDFLAGS=\"-L${PREFIX}/lib -L${SDK}/usr/lib/i686-apple-darwin10/4.2.1\"\n+  INT_LDFLAGS_CLANG=\"-B${NATIVEPREFIX}/bin\"\n+  INT_CPPFLAGS=\"-I${PREFIX}/include\"\n+  INT_CC=clang\n+  INT_CXX=clang++\n+  INT_OBJC=clang\n+  INT_OBJCXX=clang++\n+  INT_AR=${HOST}-ar\n+  INT_RANLIB=${HOST}-ranlib\n+  INT_LIBTOOL=${HOST}-libtool\n+  INT_INSTALL_NAME_TOOL=${HOST}-install_name_tool\n+\n+  export PATH=${NATIVEPREFIX}/bin:${PATH}\n+\n+  mkdir -p ${NATIVEPREFIX}/bin\n+  mkdir -p ${NATIVEPREFIX}/lib\n+  mkdir -p ${PREFIX}/bin\n+  mkdir -p ${PREFIX}/lib\n+  mkdir -p ${BUILD_BASE}\n+\n+  mkdir -p SDKs\n+  tar -C SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n+\n+  tar xf /home/ubuntu/build/osx-native-depends-r3.tar.gz\n+\n+  # bdb\n+  SOURCE_FILE=${SOURCES_PATH}/db-4.8.30.NC.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/db-4.8.30.NC\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  sed -i 's/__atomic_compare_exchange/__atomic_compare_exchange_db/g' ${BUILD_DIR}/dbinc/atomic.h\n+  pushd ${BUILD_DIR}\n+  cd build_unix;\n+  ../dist/configure --host=${HOST} --prefix=\"${PREFIX}\" --disable-shared --enable-cxx CC=\"${INT_CC}\" CXX=\"${INT_CXX}\" AR=\"${INT_AR}\" RANLIB=\"${INT_RANLIB}\" OBJC=\"${INT_OBJC}\" OBJCXX=\"${INT_OBJCXX}\" CFLAGS=\"${INT_CFLAGS}\" CXXFLAGS=\"${INT_CXXFLAGS}\" LDFLAGS=\"${INT_CLANG_LDFLAGS} ${INT_LDFLAGS}\" CPPFLAGS=\"${INT_CPPFLAGS}\"\n+  make $MAKEOPTS libdb.a libdb_cxx.a\n+  make  install_lib install_include\n+  popd\n+\n+  # openssl\n+  SOURCE_FILE=${SOURCES_PATH}/openssl-1.0.1h.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/openssl-1.0.1h\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  pushd ${BUILD_DIR}\n+  sed -ie \"s|cc:|${INT_CC}:|\" ${BUILD_DIR}/Configure\n+  sed -ie \"s|\\(-arch [_a-zA-Z0-9]*\\)|\\1 --sysroot ${SDK}  -target ${HOST} -msse2|\" ${BUILD_DIR}/Configure\n+  AR=\"${INT_AR}\" RANLIB=\"${INT_RANLIB}\" ./Configure --prefix=${PREFIX} --openssldir=${PREFIX}/etc/openssl zlib shared no-krb5 darwin64-x86_64-cc ${INT_LDFLAGS} ${INT_CLANG_LDFLAGS} ${INT_CPPFLAGS}\n+  sed -i \"s|engines apps test|engines|\" ${BUILD_DIR}/Makefile\n+  sed -i \"/define DATE/d\" ${BUILD_DIR}/crypto/Makefile\n+  make -j1 build_libs libcrypto.pc libssl.pc openssl.pc\n+  make -j1 install_sw\n+  popd\n+\n+  #libminiupnpc\n+  SOURCE_FILE=${SOURCES_PATH}/miniupnpc-1.9.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/miniupnpc-1.9\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  pushd ${BUILD_DIR}\n+  CFLAGS=\"${INT_CFLAGS} ${INT_CPPFLAGS}\" make $MAKEOPTS OS=Darwin CC=\"${INT_CC}\" AR=\"${INT_AR}\" libminiupnpc.a\n+  install -d ${PREFIX}/include/miniupnpc\n+  install *.h ${PREFIX}/include/miniupnpc\n+  install libminiupnpc.a  ${PREFIX}/lib\n+  popd\n+\n+  # qrencode\n+  SOURCE_FILE=${SOURCES_PATH}/qrencode-3.4.3.tar.bz2\n+  BUILD_DIR=${BUILD_BASE}/qrencode-3.4.3\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  pushd ${BUILD_DIR}\n+\n+  # m4 folder is not included in the stable release, which can confuse aclocal\n+  # if its timestamp ends up being earlier than configure.ac when extracted\n+  touch aclocal.m4\n+  ./configure --host=${HOST} --prefix=\"${PREFIX}\" --disable-shared CC=\"${INT_CC}\" CXX=\"${INT_CXX}\" AR=\"${INT_AR}\" RANLIB=\"${INT_RANLIB}\" OBJC=\"${INT_OBJC}\" OBJCXX=\"${INT_OBJCXX}\" CFLAGS=\"${INT_CFLAGS}\" CXXFLAGS=\"${INT_CXXFLAGS}\" LDFLAGS=\"${INT_CLANG_LDFLAGS} ${INT_LDFLAGS}\" CPPFLAGS=\"${INT_CPPFLAGS}\" --disable-shared -without-tools --disable-sdltest --disable-dependency-tracking\n+  make $MAKEOPTS\n+  make install\n+  popd\n+\n+  # libprotobuf\n+  SOURCE_FILE=${SOURCES_PATH}/protobuf-2.5.0.tar.bz2\n+  BUILD_DIR=${BUILD_BASE}/protobuf-2.5.0\n+\n+  tar -C ${BUILD_BASE} -xjf ${SOURCE_FILE}\n+  pushd ${BUILD_DIR}\n+  ./configure --host=${HOST} --prefix=\"${PREFIX}\" --disable-shared --enable-cxx CC=\"${INT_CC}\" CXX=\"${INT_CXX}\" AR=\"${INT_AR}\" RANLIB=\"${INT_RANLIB}\" OBJC=\"${INT_OBJC}\" OBJCXX=\"${INT_OBJCXX}\" CFLAGS=\"${INT_CFLAGS}\" CXXFLAGS=\"${INT_CXXFLAGS}\" LDFLAGS=\"${INT_CLANG_LDFLAGS} ${INT_LDFLAGS}\" CPPFLAGS=\"${INT_CPPFLAGS}\" --enable-shared=no --disable-dependency-tracking --with-protoc=${NATIVEPREFIX}/bin/protoc\n+  cd src\n+  make $MAKEOPTS libprotobuf.la\n+  make install-libLTLIBRARIES install-nobase_includeHEADERS\n+  cd ..\n+  make install-pkgconfigDATA\n+  popd\n+\n+  # boost\n+  SOURCE_FILE=${SOURCES_PATH}/boost_1_55_0.tar.bz2\n+  BUILD_DIR=${BUILD_BASE}/boost_1_55_0\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  pushd ${BUILD_DIR}\n+  ./bootstrap.sh --with-libraries=chrono,filesystem,program_options,system,thread,test\n+  echo \"using darwin : : ${INT_CXX} : <cxxflags>\\\"${INT_CFLAGS} ${INT_CPPFLAGS}\\\" <linkflags>\\\"${INT_LDFLAGS} ${INT_CLANG_LDFLAGS}\\\" <archiver>\\\"${INT_LIBTOOL}\\\" <striper>\\\"${INT_STRIP}\\\" : ;\" > \"user-config.jam\"\n+  ./b2 -d2 --layout=tagged --build-type=complete --prefix=\"${PREFIX}\" --toolset=darwin-4.2.1 --user-config=user-config.jam variant=release threading=multi link=static install\n+  popd\n+\n+  export GZIP=\"-9n\"\n+  find prefix | sort | tar --no-recursion -czf osx-depends-${REVISION}.tar.gz -T -\n+\n+  mv osx-depends-${REVISION}.tar.gz $OUTDIR"
      },
      {
        "sha": "a753ad704ffe70d56f20be3562f2152d48862be9",
        "filename": "contrib/gitian-descriptors/gitian-osx-native.yml",
        "status": "added",
        "additions": 178,
        "deletions": 0,
        "changes": 178,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/gitian-osx-native.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/gitian-osx-native.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-native.yml?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,178 @@\n+---\n+name: \"osx-native\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"i386\"\n+packages:\n+- \"git-core\"\n+- \"automake\"\n+- \"faketime\"\n+- \"libssl-dev\"\n+- \"libbz2-dev\"\n+- \"libz-dev\"\n+- \"cmake\"\n+- \"libcap-dev\"\n+- \"p7zip-full\"\n+- \"uuid-dev\"\n+\n+reference_datetime: \"2013-06-01 00:00:00\"\n+remotes: []\n+files:\n+- \"10cc648683617cca8bcbeae507888099b41b530c.tar.gz\"\n+- \"cctools-809.tar.gz\"\n+- \"dyld-195.5.tar.gz\"\n+- \"ld64-127.2.tar.gz\"\n+- \"protobuf-2.5.0.tar.bz2\"\n+- \"MacOSX10.7.sdk.tar.gz\"\n+- \"cdrkit-1.1.11.tar.gz\"\n+- \"libdmg-hfsplus-v0.1.tar.gz\"\n+- \"clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\"\n+- \"cdrkit-deterministic.patch\"\n+\n+\n+script: |\n+\n+  echo \"18406961fd4a1ec5c7ea35c91d6a80a2f8bb797a2bd243a610bd75e13eff9aca  10cc648683617cca8bcbeae507888099b41b530c.tar.gz\" | sha256sum -c\n+  echo \"03ba62749b843b131c7304a044a98c6ffacd65b1399b921d69add0375f79d8ad  cctools-809.tar.gz\" | sha256sum -c\n+  echo \"2cf0484c87cf79b606b351a7055a247dae84093ae92c747a74e0cde2c8c8f83c  dyld-195.5.tar.gz\" | sha256sum -c\n+  echo \"97b75547b2bd761306ab3e15ae297f01e7ab9760b922bc657f4ef72e4e052142  ld64-127.2.tar.gz\" | sha256sum -c\n+  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n+  echo \"d1c030756ecc182defee9fe885638c1785d35a2c2a297b4604c0e0dcc78e47da  cdrkit-1.1.11.tar.gz\" | sha256sum -c\n+  echo \"6569a02eb31c2827080d7d59001869ea14484c281efab0ae7f2b86af5c3120b3  libdmg-hfsplus-v0.1.tar.gz\" | sha256sum -c\n+  echo \"b9d57a88f9514fa1f327a1a703756d0c1c960f4c58494a5bd80313245d13ffff  clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\" | sha256sum -c\n+  echo \"cc12bdbd7a09f71cb2a6a3e6ec3e0abe885ca7111c2b47857f5095e5980caf4f  cdrkit-deterministic.patch\" | sha256sum -c\n+\n+\n+  REVISION=r3\n+  export REFERENCE_DATETIME\n+  export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+\n+  REAL_AR=`which ar`\n+  REAL_RANLIB=`which ranlib`\n+  REAL_DATE=`which date`\n+\n+  echo '#!/bin/bash' > $HOME/ar\n+  echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/ar\n+  echo \"$REAL_AR \\\"\\$@\\\"\" >> $HOME/ar\n+\n+  echo '#!/bin/bash' > $HOME/ranlib\n+  echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/ranlib\n+  echo \"$REAL_RANLIB \\\"\\$@\\\"\" >> $HOME/ranlib\n+\n+  echo '#!/bin/bash' > $HOME/date\n+  echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/date\n+  echo \"$REAL_DATE \\\"\\$@\\\"\" >> $HOME/date\n+\n+  chmod +x $HOME/ar $HOME/ranlib $HOME/date\n+\n+\n+  export PATH=$HOME:$PATH\n+  export SOURCES_PATH=`pwd`\n+\n+  mkdir -p osx-cross-depends/build\n+  cd osx-cross-depends\n+\n+  NATIVEPREFIX=`pwd`/native-prefix\n+  BUILD_BASE=`pwd`/build\n+  SDK=`pwd`/SDKs/MacOSX10.7.sdk\n+  HOST=x86_64-apple-darwin11\n+  MIN_VERSION=10.6\n+\n+  CFLAGS=\"\"\n+  CXXFLAGS=\"${CFLAGS}\"\n+  LDFLAGS=\"-L${NATIVEPREFIX}/lib\"\n+\n+  export PATH=${NATIVEPREFIX}/bin:${PATH}\n+\n+  mkdir -p ${NATIVEPREFIX}/bin\n+  mkdir -p ${NATIVEPREFIX}/lib\n+\n+  mkdir -p SDKs\n+  tar -C SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n+\n+  #  Clang\n+  SOURCE_FILE=${SOURCES_PATH}/clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/clang+llvm-3.2-x86-linux-ubuntu-12.04\n+\n+  mkdir -p ${NATIVEPREFIX}/lib/clang/3.2/include\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  cp ${BUILD_DIR}/bin/clang ${NATIVEPREFIX}/bin/\n+  cp ${BUILD_DIR}/bin/clang++ ${NATIVEPREFIX}/bin/\n+  cp ${BUILD_DIR}/lib/libLTO.so ${NATIVEPREFIX}/lib/\n+  cp ${BUILD_DIR}/lib/clang/3.2/include/* ${NATIVEPREFIX}/lib/clang/3.2/include\n+\n+  # cctools\n+  SOURCE_FILE=${SOURCES_PATH}/10cc648683617cca8bcbeae507888099b41b530c.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/toolchain4-10cc648683617cca8bcbeae507888099b41b530c\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  mkdir -p ${BUILD_DIR}/sdks\n+  pushd ${BUILD_DIR}/sdks;\n+  ln -sf ${SDK} MacOSX10.7.sdk\n+  ln -sf ${SOURCES_PATH}/cctools-809.tar.gz ${BUILD_DIR}/cctools2odcctools/cctools-809.tar.gz\n+  ln -sf ${SOURCES_PATH}/ld64-127.2.tar.gz ${BUILD_DIR}/cctools2odcctools/ld64-127.2.tar.gz\n+  ln -sf ${SOURCES_PATH}/dyld-195.5.tar.gz ${BUILD_DIR}/cctools2odcctools/dyld-195.5.tar.gz\n+\n+  tar -C ${BUILD_DIR} -xf ${SOURCES_PATH}/clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\n+  #   Hack in the use of our llvm headers rather than grabbing the old llvm-gcc.\n+  sed -i \"s|GCC_DIR|LLVM_CLANG_DIR|g\" ${BUILD_DIR}/cctools2odcctools/extract.sh\n+  sed -i \"s|llvmgcc42-2336.1|clang+llvm-3.2-x86-linux-ubuntu-12.04|g\" ${BUILD_DIR}/cctools2odcctools/extract.sh\n+  sed -i \"s|\\${LLVM_CLANG_DIR}/llvmCore/include/llvm-c|\\${LLVM_CLANG_DIR}/include/llvm-c \\${LLVM_CLANG_DIR}/include/llvm |\" ${BUILD_DIR}/cctools2odcctools/extract.sh\n+\n+  sed -i \"s|fAC_INIT|AC_INIT|\" ${BUILD_DIR}/cctools2odcctools/files/configure.ac\n+  sed -i 's/\\# Dynamically linked LTO/\\t ;\\&\\n\\t linux*)\\n# Dynamically linked LTO/' ${BUILD_DIR}/cctools2odcctools/files/configure.ac\n+\n+  cd ${BUILD_DIR}/cctools2odcctools\n+  ./extract.sh --osxver 10.7\n+  cd odcctools-809\n+  ./configure --prefix=${NATIVEPREFIX} --target=${HOST} CFLAGS=\"${CFLAGS} -I${NATIVEPREFIX}/include -D__DARWIN_UNIX03 -D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS\" LDFLAGS=\"${LDFLAGS} -Wl,-rpath=\\\\\\$\\$ORIGIN/../lib\" --with-sysroot=${SDK}\n+\n+  #   The 'PC' define in sparc/reg.h conflicts but doesn't get used anyway. Just rename it.\n+  sed -i \"s|define\\tPC|define\\tPC_|\"  ${BUILD_DIR}/cctools2odcctools/odcctools-809/include/architecture/sparc/reg.h\n+  make $MAKEOPTS\n+  make install\n+  popd\n+\n+  # protoc\n+  SOURCE_FILE=${SOURCES_PATH}/protobuf-2.5.0.tar.bz2\n+  BUILD_DIR=${BUILD_BASE}/protobuf-2.5.0\n+\n+  tar -C ${BUILD_BASE} -xjf ${SOURCE_FILE}\n+  pushd ${BUILD_DIR};\n+  ./configure --enable-shared=no --disable-dependency-tracking --prefix=${NATIVEPREFIX}\n+  make $MAKEOPTS\n+  cp ${BUILD_DIR}/src/protoc ${NATIVEPREFIX}/bin/\n+  popd\n+\n+  # cdrkit\n+  SOURCE_FILE=${SOURCES_PATH}/cdrkit-1.1.11.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/cdrkit-1.1.11\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  pushd ${BUILD_DIR}\n+  patch -p1 < ${SOURCES_PATH}/cdrkit-deterministic.patch\n+  cmake -DCMAKE_INSTALL_PREFIX=${NATIVEPREFIX}\n+  make $MAKEOPTS genisoimage\n+  make -C genisoimage install\n+  popd\n+\n+  # libdmg-hfsplus\n+  SOURCE_FILE=${SOURCES_PATH}/libdmg-hfsplus-v0.1.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/libdmg-hfsplus-libdmg-hfsplus-v0.1\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  mkdir -p ${BUILD_DIR}/build\n+  pushd ${BUILD_DIR}/build\n+  cmake -DCMAKE_INSTALL_PREFIX:PATH=${NATIVEPREFIX}/bin ..\n+  make $MAKEOPTS\n+  make install\n+  popd\n+\n+  rm -rf native-prefix/docs\n+\n+  export GZIP=\"-9n\"\n+  find native-prefix | sort | tar --no-recursion -czf osx-native-depends-$REVISION.tar.gz -T -\n+  mv osx-native-depends-$REVISION.tar.gz $OUTDIR"
      },
      {
        "sha": "5e0ad9222a855c0b22a58470b975f280e7b37d2c",
        "filename": "contrib/gitian-descriptors/gitian-osx-qt.yml",
        "status": "added",
        "additions": 186,
        "deletions": 0,
        "changes": 186,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/gitian-osx-qt.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/gitian-osx-qt.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-qt.yml?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,186 @@\n+---\n+name: \"osx-qt\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"i386\"\n+packages:\n+- \"git-core\"\n+- \"automake\"\n+- \"p7zip-full\"\n+\n+reference_datetime: \"2013-06-01 00:00:00\"\n+remotes: []\n+files:\n+- \"qt-everywhere-opensource-src-5.2.1.tar.gz\"\n+- \"osx-native-depends-r3.tar.gz\"\n+- \"osx-depends-r4.tar.gz\"\n+- \"MacOSX10.7.sdk.tar.gz\"\n+\n+script: |\n+\n+  echo \"84e924181d4ad6db00239d87250cc89868484a14841f77fb85ab1f1dbdcd7da1  qt-everywhere-opensource-src-5.2.1.tar.gz\" | sha256sum -c\n+\n+  REVISION=r4\n+  export SOURCES_PATH=`pwd`\n+  export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export ZERO_AR_DATE=1\n+\n+  export TZ=UTC\n+\n+  REAL_DATE=`which date`\n+  echo '#!/bin/bash' > $HOME/date\n+  echo \"$REAL_DATE -d \\\"${REFERENCE_DATETIME}\\\" \\\"\\$@\\\"\" >> $HOME/date\n+\n+  chmod +x $HOME/date\n+  export PATH=$HOME:$PATH\n+\n+  mkdir -p osx-cross-depends/build\n+  cd osx-cross-depends\n+\n+  PREFIX=`pwd`/prefix\n+  NATIVEPREFIX=`pwd`/native-prefix\n+  BUILD_BASE=`pwd`/build\n+  SDK=`pwd`/SDKs/MacOSX10.7.sdk\n+  HOST=x86_64-apple-darwin11\n+  MIN_VERSION=10.6\n+\n+  INT_CFLAGS=\"-target ${HOST} -mmacosx-version-min=${MIN_VERSION} --sysroot ${SDK} -msse2 -Qunused-arguments\"\n+  INT_CXXFLAGS=\"${INT_CFLAGS}\"\n+  INT_LDFLAGS=\"-L${PREFIX}/lib -L${SDK}/usr/lib/i686-apple-darwin10/4.2.1\"\n+  INT_LDFLAGS_CLANG=\"-B${NATIVEPREFIX}/bin\"\n+  INT_CPPFLAGS=\"-I${PREFIX}/include\"\n+  INT_CC=clang\n+  INT_CXX=clang++\n+  INT_OBJC=clang\n+  INT_OBJCXX=clang++\n+  INT_AR=${HOST}-ar\n+  INT_RANLIB=${HOST}-ranlib\n+  INT_LIBTOOL=${HOST}-libtool\n+  INT_INSTALL_NAME_TOOL=${HOST}-install_name_tool\n+\n+  export PATH=${NATIVEPREFIX}/bin:${PATH}\n+\n+  mkdir -p ${NATIVEPREFIX}/bin\n+  mkdir -p ${NATIVEPREFIX}/lib\n+  mkdir -p ${PREFIX}/bin\n+  mkdir -p ${PREFIX}/lib\n+  mkdir -p ${BUILD_BASE}\n+\n+  mkdir -p SDKs\n+  tar -C SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n+\n+  tar xf /home/ubuntu/build/osx-native-depends-r3.tar.gz\n+\n+  export PATH=`pwd`/native-prefix/bin:$PATH\n+  tar xf /home/ubuntu/build/osx-depends-r4.tar.gz\n+\n+  SOURCE_FILE=${SOURCES_PATH}/qt-everywhere-opensource-src-5.2.1.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/qt-everywhere-opensource-src-5.2.1\n+\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+\n+  # Install our mkspec. All files are pulled from the macx-clang spec, except for\n+  # our custom qmake.conf\n+  SPECFILE=${BUILD_DIR}/qtbase/mkspecs/macx-clang-linux/qmake.conf\n+\n+  mkdir -p ${BUILD_DIR}/qtbase/mkspecs/macx-clang-linux\n+  cp -f ${BUILD_DIR}/qtbase/mkspecs/macx-clang/Info.plist.lib ${BUILD_DIR}/qtbase/mkspecs/macx-clang-linux/\n+  cp -f ${BUILD_DIR}/qtbase/mkspecs/macx-clang/Info.plist.app ${BUILD_DIR}/qtbase/mkspecs/macx-clang-linux/\n+  cp -f ${BUILD_DIR}/qtbase/mkspecs/macx-clang/qplatformdefs.h ${BUILD_DIR}/qtbase/mkspecs/macx-clang-linux/\n+\n+  cat > ${SPECFILE} <<ENDCONF\n+ \n+  MAKEFILE_GENERATOR      = UNIX\n+  CONFIG                 += app_bundle incremental global_init_link_order lib_version_first plugin_no_soname absolute_library_soname\n+  QMAKE_INCREMENTAL_STYLE = sublib\n+\n+  include(../common/macx.conf)\n+  include(../common/gcc-base-mac.conf)\n+  include(../common/clang.conf)\n+  include(../common/clang-mac.conf)\n+\n+  QMAKE_XCODE_VERSION=4.3\n+  QMAKE_XCODE_DEVELOPER_PATH=/Developer\n+\n+  QMAKE_MACOSX_DEPLOYMENT_TARGET = ${MIN_VERSION}\n+\n+  QMAKE_MAC_SDK=macosx\n+  QMAKE_MAC_SDK.macosx.path = ${SDK}\n+  QMAKE_MAC_SDK.macosx.platform_name = macosx\n+  QMAKE_MAC_SDK_PATH=${SDK}\n+\n+  QMAKE_CFLAGS += -target ${HOST}\n+  QMAKE_OBJECTIVE_CFLAGS += -target ${HOST}\n+  QMAKE_CXXFLAGS += -target ${HOST}\n+\n+  QMAKE_LFLAGS += -target ${HOST}\n+  QMAKE_AR = ${HOST}-ar cq\n+  QMAKE_RANLIB=${HOST}-ranlib\n+  QMAKE_LIBTOOL=${HOST}-libtool\n+  QMAKE_INSTALL_NAME_TOOL=${HOST}-install_name_tool\n+\n+  load(qt_config)\n+ \n+  ENDCONF\n+\n+  pushd ${BUILD_DIR}\n+  ./configure -release -opensource -openssl-linked \\\n+  -no-audio-backend  -no-javascript-jit -no-sql-sqlite -no-sql-tds \\\n+  -no-cups -no-iconv -no-dbus -no-gif -no-audio-backend -no-freetype \\\n+  -no-javascript-jit -no-sql-sqlite -no-nis -no-cups -no-iconv -no-pch \\\n+  -no-dbus -no-gif -no-sm -nomake examples -no-feature-style-plastique \\\n+  -no-xcb -no-qml-debug -no-pch -no-nis \\\n+  -no-feature-style-cde -no-feature-style-s60 -no-feature-style-motif \\\n+  -no-feature-style-windowsmobile -no-feature-style-windowsce \\\n+  -no-feature-style-cleanlooks \\\n+  -no-sql-db2 -no-sql-ibase -no-sql-oci -no-sql-tds -no-sql-mysql \\\n+  -no-sql-odbc -no-sql-psql -no-sql-sqlite -no-sql-sqlite2 \\\n+  -skip qtsvg -skip qtwebkit -skip qtwebkit-examples -skip qtserialport \\\n+  -skip qtdeclarative -skip qtmultimedia -skip qtimageformats \\\n+  -skip qtlocation -skip qtsensors -skip qtquick1 -skip qtxmlpatterns \\\n+  -skip qtquickcontrols -skip qtactiveqt -skip qtconnectivity \\\n+  -skip qtwinextras -skip qtscript \\\n+  -prefix ${PREFIX} -bindir ${NATIVEPREFIX}/bin \\\n+  -confirm-license -xplatform macx-clang-linux -v ${INT_LDFLAGS}\n+\n+  # RCC's output is sorted using each file entry's hash as the key. Unfortunately,\n+  # the hash function uses a random seed for each run so the results aren't\n+  # deterministic. This leads to static resources being defined in a random order,\n+  # which in-turn means that object files are not predictable.\n+  # Fortunately, this upsets Qt's unit tests as well, so they've added the\n+  # QT_RCC_TEST environment variable to set a pre-defined seed. Here, do the same\n+  # thing for the same reason.\n+  QT_RCC_TEST=1 make $MAKEOPTS module-qtbase-make_first\n+\n+\n+  make $MAKEOPTS module-qttranslations-make_first\n+  make $MAKEOPTS module-qttools-make_first\n+  make $MAKEOPTS -C qtbase\n+  make -C qtbase install\n+  make -C qttranslations install\n+  make -C qttools/src/linguist install\n+  popd\n+\n+  # This file should not be installed to the destination. It's native and\n+  # non-deterministic. Remove it.\n+  # See: https://bugreports.qt-project.org/browse/QTBUG-31393\n+  rm -f ${PREFIX}/lib/libQt5Bootstrap.a\n+\n+  rm -f ${PREFIX}/lib/Qt*.framework/Qt*.prl\n+  pushd ${PREFIX}/include\n+  ln -sf ../lib/QtNetwork.framework/Headers/ QtNetwork\n+  ln -sf ../lib/QtWidgets.framework/Headers/ QtWidgets\n+  ln -sf ../lib/QtGui.framework/Headers/ QtGui\n+  ln -sf ../lib/QtCore.framework/Headers/ QtCore\n+  ln -sf ../lib/QtTest.framework/Headers/ QtTest\n+  popd\n+\n+  rm -f ${PREFIX}/lib/*.la\n+  find ${PREFIX}/lib -name \"*.prl\" -delete\n+\n+  export GZIP=\"-9n\"\n+  find native-prefix prefix | sort | tar --no-recursion -czf osx-depends-qt-5.2.1-${REVISION}.tar.gz -T -\n+\n+  mv osx-depends-qt-5.2.1-${REVISION}.tar.gz $OUTDIR"
      },
      {
        "sha": "245f15ccab873d323925d2571d599c94339624b0",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -26,8 +26,8 @@ files:\n - \"qt-win64-5.2.0-gitian-r3.zip\"\n - \"boost-win32-1.55.0-gitian-r6.zip\"\n - \"boost-win64-1.55.0-gitian-r6.zip\"\n-- \"bitcoin-deps-win32-gitian-r12.zip\"\n-- \"bitcoin-deps-win64-gitian-r12.zip\"\n+- \"bitcoin-deps-win32-gitian-r13.zip\"\n+- \"bitcoin-deps-win64-gitian-r13.zip\"\n - \"protobuf-win32-2.5.0-gitian-r4.zip\"\n - \"protobuf-win64-2.5.0-gitian-r4.zip\"\n script: |\n@@ -61,7 +61,7 @@ script: |\n     cd $STAGING\n     unzip $INDIR/qt-win${BITS}-5.2.0-gitian-r3.zip\n     unzip $INDIR/boost-win${BITS}-1.55.0-gitian-r6.zip\n-    unzip $INDIR/bitcoin-deps-win${BITS}-gitian-r12.zip\n+    unzip $INDIR/bitcoin-deps-win${BITS}-gitian-r13.zip\n     unzip $INDIR/protobuf-win${BITS}-2.5.0-gitian-r4.zip\n     if [ \"$NEEDDIST\" == \"1\" ]; then\n       # Make source code archive which is architecture independent so it only needs to be done once"
      },
      {
        "sha": "b163b4bb8c1f50a46ab04b65b18debd1b7b79113",
        "filename": "contrib/gitian-descriptors/qt-linux.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/qt-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/qt-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-linux.yml?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -40,6 +40,7 @@ script: |\n   tar xzf qt-everywhere-opensource-src-4.6.4.tar.gz\n   cd qt-everywhere-opensource-src-4.6.4\n   QTBUILDDIR=$(pwd)\n+  sed 's/TODAY=`date +%Y-%m-%d`/TODAY=2011-01-30/' -i configure\n \n   # Need to build 4.6-versioned host utilities as well (lrelease/qrc/lupdate/...)\n   ./configure -prefix $INSTALLPREFIX -confirm-license -release -opensource -no-qt3support -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit -no-webkit -no-svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -no-opengl -nomake examples -nomake demos -nomake docs"
      },
      {
        "sha": "7000c70051181da59984f878769598d73b9a7942",
        "filename": "contrib/gitian-descriptors/qt-win.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/qt-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-descriptors/qt-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-win.yml?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -15,8 +15,8 @@ reference_datetime: \"2011-01-30 00:00:00\"\n remotes: []\n files:\n - \"qt-everywhere-opensource-src-5.2.0.tar.gz\"\n-- \"bitcoin-deps-win32-gitian-r12.zip\"\n-- \"bitcoin-deps-win64-gitian-r12.zip\"\n+- \"bitcoin-deps-win32-gitian-r13.zip\"\n+- \"bitcoin-deps-win64-gitian-r13.zip\"\n script: |\n   # Defines\n   export TZ=UTC\n@@ -48,7 +48,7 @@ script: |\n     #\n     # Need mingw-compiled openssl from bitcoin-deps:\n     cd $DEPSDIR\n-    unzip $INDIR/bitcoin-deps-win${BITS}-gitian-r12.zip\n+    unzip $INDIR/bitcoin-deps-win${BITS}-gitian-r13.zip\n     #\n     cd $BUILDDIR\n     #"
      },
      {
        "sha": "6b0bd240ba4cf8df485a8caa689717a12ef6b3c8",
        "filename": "contrib/gitian-downloader/cfields-key.pgp",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-downloader/cfields-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-downloader/cfields-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/cfields-key.pgp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,52 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.12 (GNU/Linux)\n+\n+mQINBFOHTh4BEADdKsRvmNhX+B+bcPsgMkp8ztwJA5g/rmrOlHQpKOOf4P2tAr6w\n+FmXCChWF9Iq3pDFQ0t0iq5rgisFPyrGVT/VToMmH+/PSLTyIdAlgkRYDMAPsMAFV\n+MaADH4yiAgJ3cdXtysjaNQV5O25ypqq6/obUjZJD5Enn6b/UgHe2+7LTmTNsskOx\n+5s/WPPht79EY1kM4JQfmDx68CsmqeSAlT6yeO3RQcLn/l46cfXiwzMO4h1hsZS1r\n+pgciRp0EHK9uAjF2rjqt8v4SDxwyTnwfpBBulzvH9mBf+HRXWzoTMR4sC/oOZext\n+hKAH/ex47BxN3HU3ftNhCK2c1xcU1UOGSjbf0RdbwuSCxxa7mktEDumvOxAk9EBB\n++PDPv7jO1FBK3rsJdscYQIL0AiRyO49VfNLARa34OqUi8pOAxKBQ9plO02W1gp7a\n+DVBPI05TZ46Y8dTR2Bc1raAgOyxnXM7jfiQG2gSULiKAJAI4HwOiodaiiHAxDaIo\n+a3mtsmfN25TZUQuA0I0BvHbJvLRlVnyZm3XVOcwReKJpZJV4qRhd3XNrERZdz6ZK\n+cAZnyC/X+Uzo4HfnVSsJk1GpIa4seYyrVCFfHMiAA6SkgAUFbV26KCOv4rNR2GlV\n+l2fVhu1RKOEUJ8nRcEqf93SehRVYdI67LepIPgmIwi0KG4HhoTbIHDAKWQARAQAB\n+tCtDb3J5IEZpZWxkcyA8Y2ZpZWxkc0BiaXRjb2luZm91bmRhdGlvbi5vcmc+iQI4\n+BBMBAgAiBQJTh04eAhsDBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRAcJJH/\n+6w73cBTiEADIGZSueBFmaOTJCgasKGguHns/n8P94EQBZr07rrgN99Rzp85WvDUN\n+Qa72wj3GNcAffN7aZlIWv4g+fjyr9AzHekjI/7iwwSYIfjfTR/xRUW7czRfKAOrK\n+iwpEzgv440i7PBvkS/AhNdUNkm+cJvaQUej/F2/O52qDLEpHuzvjAUUWlSeF9/oO\n+AjM9dfC24L5k5cVwQvH9noxk3EyuE7BuiGE5a+kKiORrtxiHeUG6GYQxuqrPucLU\n+fI67ETyXa0YSpYm5/O65BKMTMpmkMvv1JC2kqqsYTrO5p158CrKzq2xvpuG4ABsb\n+9KwICUGW31Ndr6TXwQJFa1b7VK4G1g6M1DFkVTOLJnEyOwgYxsXrV5QFpzpAOAji\n+6KcxNGeow1avAFYbqjjLgu9UNuq6b8du13hjkQxVs2NAP1Kd/u2ADwxQHMhZGVEC\n+9LIcLVSP9ShY6fR8m6fwSlJfpiV81uLNVD8KIyvp+pYTQ/FnxoPhPIwalYquBZKi\n+0u38igW75IzZ0fYvJgTumE/8ofSVkutVtrQb21eJclVrJGMNweTlJcJhAWdKkjDC\n+e6mSj8GItKV1ef+eusXSzs/wPyTaqgkELvvAOZdwUq3kobQErE5HOuPEOvcwuY96\n+DcxLexirCGW5wCUq7Db0c0dUjQwzzb5OTW2jdnPVR0qxi29TnOJ2aLkCDQRTh04e\n+ARAAuJKpI6NTCQrjEqe9AYywN8676+fPS5bqXkyb/iub6MXeQdwpH0K42lXAaYMq\n+ow/0aLlvGWCHuJJGozoOWpTzQ+VPbhpdARoLCop5fYTpy8Q17ubLeeODDtr6jtDN\n+lmg+9PBIErIVUnUS2wNZuJRVsfwlLaU3T2v8kQnQ6AEbl/QwyWW9nB8rAWBu6Hvs\n+VdtcBmtHSr9xAGBGfW6rSVhTitikR4lWJPdNJxI3pLaswpLIUIQ1rssKO4glljcp\n+C6nhMvRkDLvDFvDP9QnmwY/A4ch5S6ANPrhOjQuu9njjQ+/ImrJTjAXqHwg5KdTc\n+NKxufgvi9elOQ422o0No3yKdRoRA4kdcUmqA9gNZDyX0ZTd17aNqc42Zt3aYLJ11\n+bLZZp0qnfhkmhbsBZZtaLNkuF+RGPWysxY7KPMm+nHn6f3Wpr18E+T02wi02r4nS\n+HOQI+gppDqy3Vq3ZZNoUZynctiLZVHkqi+WYXqfD2tEn8UJKpht7jrZlNgkHFgT7\n+T0/U4+JmaQ/HltE+IexAIH0GP0Jt6hmRoZimdoy8Q8NY5t/fn9CQNJm5InrHvooN\n+aFmZMvzGTGiTqBqnA/7k9FCUEG98LK11MsIssY8YE/F6HD69R3ISyRvhUbpFvhD8\n+c6zOkEKngTWvyRevrDrDz2yoZ1+T1X350+92rbEc/8WyutcAEQEAAYkCHwQYAQIA\n+CQUCU4dOHgIbDAAKCRAcJJH/6w73cAakEACv4EUEjtFjqnGB0Lru5FKs1obWcf37\n+c4a5yYvOw58dkEZ9hsq34qWGLT128n6R24KEG+3O4CbplAD5Kt2eAPracbPHMAn8\n+TGmC+KjiGlBR5xCY9dD0fn5EbRWOa+Fdcj1DpneaqMl9vLnBbqGp7pa/MwSOc+FB\n+0Ms2rcGJJMNHgITfP22eCf6pvf/xq7kKbUJ3Kjqdc2hWlRMjC/OOeITdrgycfDk/\n+AOzLNqk5q7bYOxna6rWDLGSkCATyQKaBTVK7wRd1VrIhI4vfFqy+BWYXyXJ0pxjS\n+eaCDwbWHX/KW+0qLsmHxFMAyHJPjs8LEwK/DRbmWhe1HzPcBKmpyjqlkuxPjAdSl\n+hP4+IBvVNLf2Kh3uFHehk9A6oCYZGe3lLfQnOxIantXF7IROTmiZZsb+08w6cIXE\n++r6kWG6vP2aCVtzYNfY+2p5xfg3yMxcxENJki1WSCOq6WVf9IWFzSJu+0+eazD3L\n+3QpZoSX5VvT6x05C0Ay1ert0Q5MyF84Eh8mDqL4PhpWtQhZMp8SG4jqFVgrhM4sl\n+vWGYXGns4tbnNPiiksjBD8TTvG3+mt48sNJIpHThjdWJSZjllYG7jV8oi7HrX8M2\n+LOwWWLYxHkqi9wpmrWHSmniex6ABozcqrb+EgSMnHuSd7glmOJxHToJIudJbKG5D\n+MrD0ofsytfy1LQ==\n+=DE4h\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "f5e6382b846d1826f3c4a8306a1d39d4cf1031bc",
        "filename": "contrib/gitian-downloader/linux-download-config",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-downloader/linux-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-downloader/linux-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/linux-download-config?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -37,3 +37,6 @@ signers:\n   E944AE667CF960B1004BC32FCA662BE18B877A60:\n     name: \"Andreas Schildbach\"\n     key: aschildbach\n+  C060A6635913D98A3587D7DB1C2491FFEB0EF770:\n+    name: \"Cory Fields\"\n+    key: \"cfields\""
      },
      {
        "sha": "06c164180d5076483c83119ce378f830a671ccb4",
        "filename": "contrib/gitian-downloader/win32-download-config",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-downloader/win32-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/gitian-downloader/win32-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/win32-download-config?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -37,3 +37,6 @@ signers:\n   E944AE667CF960B1004BC32FCA662BE18B877A60:\n     name: \"Andreas Schildbach\"\n     key: aschildbach\n+  C060A6635913D98A3587D7DB1C2491FFEB0EF770:\n+    name: \"Cory Fields\"\n+    key: \"cfields\""
      },
      {
        "sha": "0aa57b4777132056049ee69cc02d3305f06a8d31",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,9 +1,5 @@\n ### MacDeploy ###\n \n-You will need the appscript package for the fancy disk image creation to work:\n-\n-\tsudo easy_install appscript\n-\n For Snow Leopard (which uses [Python 2.6](http://www.python.org/download/releases/2.6/)), you will need the param_parser package:\n \t\n \tsudo easy_install argparse"
      },
      {
        "sha": "ce4169a4106da18ce912cd7667cae400fa3277cd",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 2,
        "deletions": 13,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -19,7 +19,6 @@\n \n import subprocess, sys, re, os, shutil, stat, os.path\n from string import Template\n-from time import sleep\n from argparse import ArgumentParser\n \n # This is ported from the original macdeployqt with modifications\n@@ -488,16 +487,6 @@ if len(config.fancy) == 1:\n             sys.stderr.write(\"Error: Could not import plistlib which is required for fancy disk images.\\n\")\n         sys.exit(1)\n     \n-    if verbose >= 3:\n-        print \"Fancy: Importing appscript...\"\n-    try:\n-        import appscript\n-    except ImportError:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not import appscript which is required for fancy disk images.\\n\")\n-            sys.stderr.write(\"Please install it e.g. with \\\"sudo easy_install appscript\\\".\\n\")\n-        sys.exit(1)\n-    \n     p = config.fancy[0]\n     if verbose >= 3:\n         print \"Fancy: Loading \\\"%s\\\"...\" % p\n@@ -580,7 +569,7 @@ try:\n except RuntimeError as e:\n     if verbose >= 1:\n         sys.stderr.write(\"Error: %s\\n\" % str(e))\n-    sys.exit(ret)\n+    sys.exit(1)\n \n # ------------------------------------------------\n \n@@ -593,7 +582,7 @@ if config.plugins:\n     except RuntimeError as e:\n         if verbose >= 1:\n             sys.stderr.write(\"Error: %s\\n\" % str(e))\n-        sys.exit(ret)\n+        sys.exit(1)\n \n # ------------------------------------------------\n "
      },
      {
        "sha": "8c038865bdaff592aed1cd8757733b4a78e23507",
        "filename": "contrib/verifysfbinaries/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/verifysfbinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/verifysfbinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifysfbinaries/README.md?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,5 +1,5 @@\n ### Verify SF Binaries ###\n-This script attempts to download the signature file `SHA256SUMS.asc` from SourceForge.\n+This script attempts to download the signature file `SHA256SUMS.asc` from https://bitcoin.org.\n \n It first checks if the signature passes, and then downloads the files specified in the file, and checks if the hashes of these files match those that are specified in the signature file.\n "
      },
      {
        "sha": "3eb46938835cc3e8ad4fe1a6d9b73bad602fc5c0",
        "filename": "contrib/verifysfbinaries/verify.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/verifysfbinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/contrib/verifysfbinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifysfbinaries/verify.sh?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,6 +1,6 @@\n #!/bin/bash\n \n-###   This script attempts to download the signature file SHA256SUMS.asc from SourceForge\n+###   This script attempts to download the signature file SHA256SUMS.asc from bitcoin.org\n ###   It first checks if the signature passes, and then downloads the files specified in\n ###   the file, and checks if the hashes of these files match those that are specified\n ###   in the signature file.\n@@ -18,11 +18,11 @@ WORKINGDIR=\"/tmp/bitcoin\"\n TMPFILE=\"hashes.tmp\"\n \n #this URL is used if a version number is not specified as an argument to the script\n-SIGNATUREFILE=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/bitcoin-0.9.0rc1/SHA256SUMS.asc\"\n+SIGNATUREFILE=\"https://bitcoin.org/bin/0.9.2.1/SHA256SUMS.asc\"\n \n SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n RCSUBDIR=\"test/\"\n-BASEDIR=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/\"\n+BASEDIR=\"https://bitcoin.org/bin/\"\n VERSIONPREFIX=\"bitcoin-\"\n RCVERSIONSTRING=\"rc\"\n \n@@ -62,7 +62,7 @@ WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n #and then see if wget completed successfully\n if [ $? -ne 0 ]; then\n    echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n-   echo \"[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.7.1-rc1)\"\n+   echo \"[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.9.2-rc1)\"\n    echo \"wget output:\"\n    echo \"$WGETOUT\"|sed 's/^/\\t/g'\n    exit 2"
      },
      {
        "sha": "2be56c15926c7b7d3e8186520b9e03da91fe192f",
        "filename": "doc/README_osx.txt",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/doc/README_osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/doc/README_osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.txt?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,75 @@\n+Deterministic OSX Dmg Notes.\n+\n+Working OSX DMG's are created in Linux by combining a recent clang,\n+the Apple's binutils (ld, ar, etc), and DMG authoring tools.\n+\n+Apple uses clang extensively for development and has upstreamed the necessary\n+functionality so that a vanilla clang can take advantage. It supports the use\n+of -F, -target, -mmacosx-version-min, and --sysroot, which are all necessary\n+when building for OSX. A pre-compiled version of 3.2 is used because it was not\n+available in the Precise repositories at the time this work was started. In the\n+future, it can be switched to use system packages instead.\n+\n+Apple's version of binutils (called cctools) contains lots of functionality\n+missing in the FSF's binutils. In addition to extra linker options for\n+frameworks and sysroots, several other tools are needed as well such as\n+install_name_tool, lipo, and nmedit. These do not build under linux, so they\n+have been patched to do so. The work here was used as a starting point:\n+https://github.com/mingwandroid/toolchain4\n+\n+In order to build a working toolchain, the following source packages are needed\n+from Apple: cctools, dyld, and ld64.\n+\n+Beware. This part is ugly. Very very very ugly. In the future, this should be\n+broken out into a new repository and cleaned up. Additionally, the binaries\n+only work when built as x86 and not x86_64. This is an especially nasty\n+limitation because it must be linked with the toolchain's libLTO.so, meaning\n+that the entire toolchain must be x86. Gitian x86_64 should not be used until\n+this has been fixed, because it would mean that several native dependencies\n+(openssl, libuuid, etc) would need to be built as x86 first.\n+\n+These tools inject timestamps by default, which produce non-deterministic\n+binaries. The ZERO_AR_DATE environment variable is used to disable that.\n+\n+This version of cctools has been patched to use the current version of clang's\n+headers and and its libLTO.so rather than those from llvmgcc, as it was\n+originally done in toolchain4.\n+\n+To complicate things further, all builds must target an Apple SDK. These SDKs\n+are free to download, but not redistributable.\n+To obtain it, register for a developer account, then download xcode4630916281a.dmg:\n+https://developer.apple.com/downloads/download.action?path=Developer_Tools/xcode_4.6.3/xcode4630916281a.dmg\n+This file is several gigabytes in size, but only a single directory inside is\n+needed: Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk\n+\n+Unfortunately, the usual linux tools (7zip, hpmount, loopback mount) are incapable of opening this file.\n+To create a tarball suitable for gitian input, mount the dmg in OSX, then create it with:\n+  $ tar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.7.sdk.tar.gz MacOSX10.7.sdk\n+\n+\n+The gitian descriptors build 2 sets of files: Linux tools, then Apple binaries\n+which are created using these tools. The build process has been designed to\n+avoid including the SDK's files in Gitian's outputs. All interim tarballs are\n+fully deterministic and may be freely redistributed.\n+\n+genisoimage is used to create the initial DMG. It is not deterministic as-is,\n+so it has been patched. A system genisoimage will work fine, but it will not\n+be deterministic because the file-order will change between invocations.\n+The patch can be seen here:\n+https://raw.githubusercontent.com/theuni/osx-cross-depends/master/patches/cdrtools/genisoimage.diff\n+No effort was made to fix this cleanly, so it likely leaks memory badly. But\n+it's only used for a single invocation, so that's no real concern.\n+\n+genisoimage cannot compress DMGs, so afterwards, the 'dmg' tool from the\n+libdmg-hfsplus project is used to compress it. There are several bugs in this\n+tool and its maintainer has seemingly abandoned the project. It has been forked\n+and is available (with fixes) here: https://github.com/theuni/libdmg-hfsplus .\n+\n+The 'dmg' tool has the ability to create DMG's from scratch as well, but this\n+functionality is broken. Only the compression feature is currently used.\n+Ideally, the creation could be fixed and genisoimage would no longer be necessary.\n+\n+Background images and other features can be added to DMG files by inserting a\n+.DS_Store before creation. The easiest way to create this file is to build a\n+DMG without one, move it to a device running OSX, customize the layout, then\n+grab the .DS_Store file for later use. That is the approach taken here."
      },
      {
        "sha": "bc42723b125515bc54e9b65cee4e77183e2357ef",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 10,
        "deletions": 14,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -22,19 +22,16 @@ Xcode 4.3 or later, you'll need to install its command line tools. This can\n be done in `Xcode > Preferences > Downloads > Components` and generally must\n be re-done or updated every time Xcode is updated.\n \n-There's an assumption that you already have `git` installed, as well. If\n+There's also an assumption that you already have `git` installed. If\n not, it's the path of least resistance to install [Github for Mac](https://mac.github.com/)\n (OS X 10.7+) or\n [Git for OS X](https://code.google.com/p/git-osx-installer/). It is also\n available via Homebrew or MacPorts.\n \n You will also need to install [Homebrew](http://brew.sh)\n or [MacPorts](https://www.macports.org/) in order to install library\n-dependencies. It's largely a religious decision which to choose, but, as of\n-December 2012, MacPorts is a little easier because you can just install the\n-dependencies immediately - no other work required. If you're unsure, read\n-the instructions through first in order to assess what you want to do.\n-Homebrew is a little more popular among those newer to OS X.\n+dependencies. It's largely a religious decision which to choose, however, Homebrew\n+is now used for building release versions.\n \n The installation of the actual dependencies is covered in the Instructions\n sections below.\n@@ -44,9 +41,7 @@ Instructions: MacPorts\n \n ### Install dependencies\n \n-Installing the dependencies using MacPorts is very straightforward.\n-\n-    sudo port install boost db48@+no_java openssl miniupnpc autoconf pkgconfig automake\n+    sudo port install boost db48@+no_java openssl miniupnpc autoconf pkgconfig automake libtool\n \n Optional: install Qt4\n \n@@ -74,13 +69,13 @@ Instructions: Homebrew\n \n #### Install dependencies using Homebrew\n \n-        brew install autoconf automake berkeley-db4 boost miniupnpc openssl pkg-config protobuf qt\n+        brew install autoconf automake libtool berkeley-db4 boost miniupnpc openssl pkg-config protobuf qt\n \n Note: After you have installed the dependencies, you should check that the Homebrew installed version of OpenSSL is the one available for compilation. You can check this by typing\n \n         openssl version\n \n-into Terminal. You should see OpenSSL 1.0.1f 6 Jan 2014.\n+into Terminal. You should see OpenSSL 1.0.1h 5 Jun 2014.\n \n If not, you can ensure that the Homebrew OpenSSL is correctly linked by running\n \n@@ -103,7 +98,7 @@ PATH.\n         ./configure\n         make\n \n-3.  It is a good idea to build and run the unit tests, too:\n+3.  It is also a good idea to build and run the unit tests:\n \n         make check\n \n@@ -131,7 +126,7 @@ For MacPorts, that means editing your macports.conf and setting\n ... and then uninstalling and re-installing, or simply rebuilding, all ports.\n \n As of December 2012, the `boost` port does not obey `macosx_deployment_target`.\n-Download `http://gavinandresen-bitcoin.s3.amazonaws.com/boost_macports_fix.zip`\n+Download `https://gavinandresen-bitcoin.s3.amazonaws.com/boost_macports_fix.zip`\n for a fix.\n \n Once dependencies are compiled, see release-process.md for how the Bitcoin-Qt.app\n@@ -149,13 +144,14 @@ commands:\n     echo -e \"rpcuser=bitcoinrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n     chmod 600 \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n \n-When next you run it, it will start downloading the blockchain, but it won't\n+The next time you run it, it will start downloading the blockchain, but it won't\n output anything while it's doing this. This process may take several hours;\n you can monitor its process by looking at the debug.log file, like this:\n \n     tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n \n Other commands:\n+-------\n \n     ./bitcoind -daemon # to start the bitcoin daemon.\n     ./bitcoin-cli --help  # for a list of command-line options."
      },
      {
        "sha": "0f381d56c561da5f860742fac1ebf8cdc9097300",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 14,
        "deletions": 7,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -2,6 +2,16 @@ UNIX BUILD NOTES\n ====================\n Some notes on how to build Bitcoin in Unix. \n \n+Note\n+---------------------\n+Always use absolute paths to configure and compile bitcoin and the dependencies,\n+for example, when specifying the the path of the dependency:\n+\n+\t../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n+\n+Here BDB_PREFIX must absolute path - it is defined using $(pwd) which ensures\n+the usage of the absolute path.\n+\n To Build\n ---------------------\n \n@@ -51,10 +61,8 @@ Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n \n-\tsudo apt-get install build-essential\n-\tsudo apt-get install libtool autotools-dev autoconf\n-\tsudo apt-get install libssl-dev\n-\n+\tsudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev\n+\t\n for Ubuntu 12.04 and later:\n \n \tsudo apt-get install libboost-all-dev\n@@ -83,10 +91,9 @@ To enable the change run\n \n \tsudo apt-get update\n \n-for other Ubuntu & Debian:\n+for other Debian & Ubuntu (with ppa):\n \n-\tsudo apt-get install libdb4.8-dev\n-\tsudo apt-get install libdb4.8++-dev\n+\tsudo apt-get install libdb4.8-dev libdb4.8++-dev\n \n Optional:\n "
      },
      {
        "sha": "2f332e92f0e938e865badd3c5d4bf989c98f0417",
        "filename": "doc/coding.md",
        "status": "modified",
        "additions": 48,
        "deletions": 27,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/doc/coding.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/doc/coding.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/coding.md?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -4,44 +4,65 @@ Coding\n Please be consistent with the existing coding style.\n \n Block style:\n-\n-\tbool Function(char* psz, int n)\n-\t{\n-\t    // Comment summarising what this section of code does\n-\t    for (int i = 0; i < n; i++)\n-\t    {\n-\t        // When something fails, return early\n-\t        if (!Something())\n-\t            return false;\n-\t        ...\n-\t    }\n-\t\n-\t    // Success return is usually at the end\n-\t    return true;\n-\t}\n-\n+```c++\n+    bool Function(char* psz, int n)\n+    {\n+        // Comment summarising what this section of code does\n+        for (int i = 0; i < n; i++)\n+        {\n+            // When something fails, return early\n+            if (!Something())\n+                return false;\n+            ...\n+        }\n+\n+        // Success return is usually at the end\n+        return true;\n+    }\n+```\n - ANSI/Allman block style\n - 4 space indenting, no tabs\n - No extra spaces inside parenthesis; please don't do ( this )\n - No space after function names, one space after if, for and while\n+- Includes need to be ordered alphabetically, separate own and foreign headers with a new-line (example key.cpp):\n+```c++\n+#include \"key.h\"\n+\n+#include \"crypto/sha2.h\"\n+#include \"util.h\"\n \n+#include <openssl/foo.h>\n+```\n+- Class or struct keywords in header files need to be ordered alphabetically:\n+```c++\n+class CAlpha;\n+class CBeta;\n+```\n+- When using namespace keyword use the following form:\n+```c++\n+namespace Foo {\n+\n+...\n+\n+} // Foo\n+```\n Variable names begin with the type in lowercase, like nSomeVariable.\n Please don't put the first word of the variable name in lowercase like\n someVariable.\n \n Common types:\n \n-\tn       integer number: short, unsigned short, int, unsigned int, int64, uint64, sometimes char if used as a number\n-\td       double, float\n-\tf       flag\n-\thash    uint256\n-\tp       pointer or array, one p for each level of indirection\n-\tpsz     pointer to null terminated string\n-\tstr     string object\n-\tv       vector or similar list objects\n-\tmap     map or multimap\n-\tset     set or multiset\n-\tbn      CBigNum\n+    n       integer number: short, unsigned short, int, unsigned int, int64, uint64, sometimes char if used as a number\n+    d       double, float\n+    f       flag\n+    hash    uint256\n+    p       pointer or array, one p for each level of indirection\n+    psz     pointer to null terminated string\n+    str     string object\n+    v       vector or similar list objects\n+    map     map or multimap\n+    set     set or multiset\n+    bn      CBigNum\n \n Doxygen comments\n -----------------"
      },
      {
        "sha": "b356a5d88d8d28bae1f683b8c17448e409ee162f",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 36,
        "deletions": 36,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -4,8 +4,8 @@ Gitian building\n *Setup instructions for a gitian build of Bitcoin using a Debian VM or physical system.*\n \n Gitian is the deterministic build process that is used to build the Bitcoin\n-Core executables [1]. It provides a way to be reasonably sure that the\n-executables are really built from source on github. It also makes sure that\n+Core executables. It provides a way to be reasonably sure that the\n+executables are really built from source on GitHub. It also makes sure that\n the same, tested dependencies are used and statically built into the executable.\n \n Multiple developers build the source code by following a specific descriptor\n@@ -17,9 +17,6 @@ More independent gitian builders are needed, which is why I wrote this\n guide. It is preferred to follow these steps yourself instead of using someone else's\n VM image to avoid 'contaminating' the build.\n \n-[1] For all platforms except for MacOSX, at this point. Work for deterministic\n-builds for Mac is under way here: https://github.com/theuni/osx-cross-depends .\n-\n Table of Contents\n ------------------\n \n@@ -34,19 +31,22 @@ Table of Contents\n - [Signing externally](#signing-externally)\n - [Uploading signatures](#uploading-signatures)\n \n-Create a new VirtualBox VM\n----------------------------\n+Preparing the Gitian builder host\n+---------------------------------\n \n-The first step is to create a new Virtual Machine, which will be explained in\n-this section.  This VM will be used to do the Gitian builds. In this guide it\n-will be explained how to set up the environment, and how to get the builds\n-started.\n+The first step is to prepare the host environment that will be used to perform the Gitian builds.\n+This guide explains how to set up the environment, and how to start the builds.\n \n-Debian Linux was chosen as the host distribution because it has a lightweight install (in\n-contrast to Ubuntu) and is readily available. We here show the steps for\n-VirtualBox [1], but any kind of virtualization can be used. You can also install\n-on actual hardware instead of using a VM, in this case you can skip this section.\n+Debian Linux was chosen as the host distribution because it has a lightweight install (in contrast to Ubuntu) and is readily available.\n+Any kind of virtualization can be used, for example:\n+- [VirtualBox](https://www.virtualbox.org/), covered by this guide\n+- [KVM](http://www.linux-kvm.org/page/Main_Page)\n+- [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-bitcoin-host/README.md).\n \n+You can also install on actual hardware instead of using virtualization.\n+\n+Create a new VirtualBox VM\n+---------------------------\n In the VirtualBox GUI click \"Create\" and choose the following parameters in the wizard:\n \n ![](gitian-building/create_vm_page1.png)\n@@ -74,11 +74,11 @@ In the VirtualBox GUI click \"Create\" and choose the following parameters in the\n - Disk size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side \n - Push the `Create` button\n \n-Get the [Debian 7.4 net installer](http://cdimage.debian.org/debian-cd/7.4.0/amd64/iso-cd/debian-7.4.0-amd64-netinst.iso).\n+Get the [Debian 7.4 net installer](http://ftp.at.debian.org/debian-jigdo/current/amd64/iso-cd/debian-7.4.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n This DVD image can be validated using a SHA256 hashing tool, for example on\n Unixy OSes by entering the following in a terminal:\n \n-    echo \"b712a141bc60269db217d3b3e456179bd6b181645f90e4aac9c42ed63de492e9  /home/orion/Downloads/debian-7.4.0-amd64-netinst.iso\" | sha256sum -c\n+    echo \"b712a141bc60269db217d3b3e456179bd6b181645f90e4aac9c42ed63de492e9  debian-7.4.0-amd64-netinst.iso\" | sha256sum -c\n     # (must return OK)\n \n After creating the VM, we need to configure it. \n@@ -106,8 +106,6 @@ Then start the VM. On the first launch you will be asked for a CD or DVD image.\n \n ![](gitian-building/select_startup_disk.png)\n \n-[1] https://www.virtualbox.org/\n-\n Installing Debian\n ------------------\n \n@@ -133,7 +131,7 @@ and proceed, just press `Enter`. To select a different button, press `Tab`.\n \n ![](gitian-building/debian_install_5_configure_the_network.png)\n \n-- Choose a root password and enter it twice (and remember it for later) \n+- Choose a root password and enter it twice (remember it for later) \n \n ![](gitian-building/debian_install_6a_set_up_root_password.png)\n \n@@ -142,7 +140,7 @@ and proceed, just press `Enter`. To select a different button, press `Tab`.\n ![](gitian-building/debian_install_7_set_up_user_fullname.png)\n ![](gitian-building/debian_install_8_set_up_username.png)\n \n-- Choose a user password and enter it twice (and remember it for later) \n+- Choose a user password and enter it twice (remember it for later) \n \n ![](gitian-building/debian_install_9_user_password.png)\n \n@@ -235,7 +233,7 @@ adduser debian sudo\n When you get a colorful screen with a question about the 'LXC directory', just\n go with the default (`/var/lib/lxc`).\n \n-Then set up LXC and the rest with the following is a complex jumble of settings and workarounds:\n+Then set up LXC and the rest with the following, which is a complex jumble of settings and workarounds:\n \n ```bash\n # the version of lxc-start in Debian 7.4 needs to run as root, so make sure\n@@ -279,11 +277,14 @@ cd ..\n \n **Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n \n-Clone the git repositories for bitcoin and gitian,\n+Clone the git repositories for bitcoin and gitian and then checkout the bitcoin version that you want to build.\n \n ```bash\n git clone https://github.com/devrandom/gitian-builder.git\n git clone https://github.com/bitcoin/bitcoin\n+cd bitcoin\n+git checkout v${VERSION}\n+cd ..\n ```\n \n Setting up gitian images\n@@ -315,10 +316,10 @@ you will find a list of `wget` commands that can be executed to get the dependen\n \n I needed to add `--no-check-certificate` to the OpenSSL wget line to make it work.\n Likely this is because the ca-certificates in Debian 7.4 is fairly old. This does not create a \n-security issue as the gitian descriptors check integrity of the input archives and refuse to work\n+security issue as the gitian descriptors check the integrity of the input archives and refuse to work\n if any one is corrupted.\n \n-After downloading the archives, execute the `gbuild` commends to build the dependencies.\n+After downloading the archives, execute the `gbuild` commands to build the dependencies.\n This can take a long time, but only has to be done when the dependencies change, for example\n to upgrade the used version.\n \n@@ -335,7 +336,7 @@ tail -f var/build.log\n Building Bitcoin\n ----------------\n \n-To build Bitcoin (for Linux and/or Windows) just follow the steps under 'perform\n+To build Bitcoin (for Linux, OSX and Windows) just follow the steps under 'perform\n gitian builds' in [doc/release-process.md](release-process.md) in the bitcoin repository.\n \n Output from `gbuild` will look something like\n@@ -368,7 +369,7 @@ can be inspected in `var/install.log` and `var/build.log`.\n Building an alternative repository\n -----------------------------------\n \n-If you want to do a test build of a pull on github it can be useful to point\n+If you want to do a test build of a pull on GitHub it can be useful to point\n the gitian builder at an alternative repository, using the same descriptors\n and inputs.\n \n@@ -378,22 +379,24 @@ URL=https://github.com/laanwj/bitcoin.git\n COMMIT=2014_03_windows_unicode_path\n ./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n ./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n ```\n \n Signing externally\n -------------------\n \n-If you want to do the PGP signing on another device that's possible too; just define `SIGNER` as mentioned\n-and follow the steps in the build process as normally.\n+If you want to do the PGP signing on another device that's also possible; just define `SIGNER` as mentioned\n+and follow the steps in the build process as normal.\n \n     gpg: skipped \"laanwj\": secret key not available\n \n When you execute `gsign` you will get an error from GPG, which can be ignored. Copy the resulting `.assert` files\n in `gitian.sigs` to your signing machine and do\n \n ```bash\n-    gpg --detach-sign ${VERSION}/${SIGNER}/bitcoin-build.assert\n+    gpg --detach-sign ${VERSION}-linux/${SIGNER}/bitcoin-build.assert\n     gpg --detach-sign ${VERSION}-win/${SIGNER}/bitcoin-build.assert\n+    gpg --detach-sign ${VERSION}-osx/${SIGNER}/bitcoin-build.assert\n ```\n \n This will create the `.sig` files that can be committed together with the `.assert` files to assert your\n@@ -402,9 +405,6 @@ gitian build.\n Uploading signatures\n ---------------------\n \n-After building and signing you can push your signatures (both the `.assert` and\n-`.assert.sig` files) to the\n-[bitcoin/gitian.sigs](https://github.com/bitcoin/gitian.sigs/) repository, or\n-if not possible create a pull request. You can also mail the files to me\n-(laanwj@gmail.com) and I'll commit them.\n-\n+After building and signing you can push your signatures (both the `.assert` and `.assert.sig` files) to the\n+[bitcoin/gitian.sigs](https://github.com/bitcoin/gitian.sigs/) repository, or if that's not possible create a pull\n+request. You can also mail the files to me (laanwj@gmail.com) and I'll commit them."
      },
      {
        "sha": "66059800b67bedc438b0c6fe07aae2ea39e14ae0",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 85,
        "deletions": 0,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,2 +1,87 @@\n (note: this is a temporary file, to be added-to by anybody, and moved to\n release-notes at release time)\n+\n+Transaction fee changes\n+=======================\n+\n+This release automatically estimates how high a transaction fee (or how\n+high a priority) transactions require to be confirmed quickly. The default\n+settings will create transactions that confirm quickly; see the new\n+'txconfirmtarget' setting to control the tradeoff between fees and\n+confirmation times.\n+\n+Prior releases used hard-coded fees (and priorities), and would\n+sometimes create transactions that took a very long time to confirm.\n+\n+\n+New Command Line Options\n+========================\n+\n+-txconfirmtarget=n : create transactions that have enough fees (or priority)\n+so they are likely to confirm within n blocks (default: 1). This setting\n+is over-ridden by the -paytxfee option.\n+\n+New RPC methods\n+===============\n+\n+Fee/Priority estimation\n+-----------------------\n+\n+estimatefee nblocks : Returns approximate fee-per-1,000-bytes needed for\n+a transaction to be confirmed within nblocks. Returns -1 if not enough\n+transactions have been observed to compute a good estimate.\n+\n+estimatepriority nblocks : Returns approximate priority needed for\n+a zero-fee transaction to confirm within nblocks. Returns -1 if not\n+enough free transactions have been observed to compute a good\n+estimate.\n+\n+Statistics used to estimate fees and priorities are saved in the\n+data directory in the 'fee_estimates.dat' file just before\n+program shutdown, and are read in at startup.\n+\n+Double-Spend Relay and Alerts\n+=============================\n+VERY IMPORTANT: *It has never been safe, and remains unsafe, to rely*\n+*on unconfirmed transactions.*\n+\n+Relay\n+-----\n+When an attempt is seen on the network to spend the same unspent funds\n+more than once, it is no longer ignored.  Instead, it is broadcast, to\n+serve as an alert.  This broadcast is subject to protections against\n+denial-of-service attacks.\n+\n+Wallets and other bitcoin services should alert their users to\n+double-spends that affect them.  Merchants and other users may have\n+enough time to withhold goods or services when payment becomes\n+uncertain, until confirmation.\n+\n+Bitcoin Core Wallet Alerts\n+--------------------------\n+The Bitcoin Core wallet now makes respend attempts visible in several\n+ways.\n+\n+If you are online, and a respend affecting one of your wallet\n+transactions is seen, a notification is immediately issued to the\n+command registered with `-respendnotify=<cmd>`.  Additionally, if\n+using the GUI:\n+ - An alert box is immediately displayed.\n+ - The affected wallet transaction is highlighted in red until it is\n+   confirmed (and it may never be confirmed).\n+\n+A `respendsobserved` array is added to `gettransaction`, `listtransactions`,\n+and `listsinceblock` RPC results.\n+\n+Warning\n+-------\n+*If you rely on an unconfirmed transaction, these change do VERY*\n+*LITTLE to protect you from a malicious double-spend, because:*\n+\n+ - You may learn about the respend too late to avoid doing whatever\n+   you were being paid for\n+ - Using other relay rules, a double-spender can craft his crime to\n+   resist broadcast\n+ - Miners can choose which conflicting spend to confirm, and some\n+   miners may not confirm the first acceptable spend they see\n+"
      },
      {
        "sha": "0552053d27b8f76e9f5a80cdfcfb0420d64afc86",
        "filename": "doc/release-notes/release-notes-0.9.1.md",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/doc/release-notes/release-notes-0.9.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/doc/release-notes/release-notes-0.9.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.1.md?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,53 @@\n+Bitcoin Core version 0.9.1 is now available from:\n+\n+  https://bitcoin.org/bin/0.9.1/\n+\n+This is a security update. It is recommended to upgrade to this release\n+as soon as possible.\n+\n+It is especially important to upgrade if you currently have version\n+0.9.0 installed and are using the graphical interface OR you are using\n+bitcoind from any pre-0.9.1 version, and have enabled SSL for RPC and\n+have configured allowip to allow rpc connections from potentially\n+hostile hosts.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+If you are upgrading from version 0.7.2 or earlier, the first time you run\n+0.9.1 your blockchain files will be re-indexed, which will take anywhere from \n+30 minutes to several hours, depending on the speed of your machine.\n+\n+0.9.1 Release notes\n+=======================\n+\n+No code changes were made between 0.9.0 and 0.9.1. Only the dependencies were changed.\n+\n+- Upgrade OpenSSL to 1.0.1g. This release fixes the following vulnerabilities which can\n+  affect the Bitcoin Core software:\n+\n+  - CVE-2014-0160 (\"heartbleed\")\n+    A missing bounds check in the handling of the TLS heartbeat extension can\n+    be used to reveal up to 64k of memory to a connected client or server.\n+\n+  - CVE-2014-0076\n+    The Montgomery ladder implementation in OpenSSL does not ensure that\n+    certain swap operations have a constant-time behavior, which makes it\n+    easier for local users to obtain ECDSA nonces via a FLUSH+RELOAD cache\n+    side-channel attack.\n+\n+- Add statically built executables to Linux build\n+\n+Credits\n+--------\n+\n+Credits go to the OpenSSL team for fixing the vulnerabilities quickly."
      },
      {
        "sha": "3168ad1a5ad79a7d9ea5dcbf35b8e924dcaaa752",
        "filename": "doc/release-notes/release-notes-0.9.2.1.md",
        "status": "added",
        "additions": 207,
        "deletions": 0,
        "changes": 207,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/doc/release-notes/release-notes-0.9.2.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/doc/release-notes/release-notes-0.9.2.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.1.md?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,207 @@\n+Bitcoin Core version 0.9.2.1 is now available from:\n+\n+  https://bitcoin.org/bin/0.9.2.1/\n+\n+This is a new minor version release, bringing mostly bug fixes and some minor\n+improvements. OpenSSL has been updated because of a security issue (CVE-2014-0224).\n+Upgrading to this release is recommended.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+If you are upgrading from version 0.7.2 or earlier, the first time you run\n+0.9.2.1 your blockchain files will be re-indexed, which will take anywhere from \n+30 minutes to several hours, depending on the speed of your machine.\n+\n+Downgrading warnings\n+--------------------\n+\n+The 'chainstate' for this release is not always compatible with previous\n+releases, so if you run 0.9.x and then decide to switch back to a\n+0.8.x release you might get a blockchain validation error when starting the\n+old release (due to 'pruned outputs' being omitted from the index of\n+unspent transaction outputs).\n+\n+Running the old release with the -reindex option will rebuild the chainstate\n+data structures and correct the problem.\n+\n+Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\n+the blockchain for missing spent coins, which will take a long time (tens\n+of minutes on a typical machine).\n+\n+Important changes\n+==================\n+\n+Gitian OSX build\n+-----------------\n+\n+The deterministic build system that was already used for Windows and Linux\n+builds is now used for OSX as well. Although the resulting executables have\n+been tested quite a bit, there could be possible regressions. Be sure to report\n+these on the Github bug tracker mentioned above.\n+\n+Compatibility of Linux build\n+-----------------------------\n+\n+For Linux we now build against Qt 4.6, and filter the symbols for libstdc++ and glibc.\n+This brings back compatibility with\n+\n+- Debian 6+ / Tails\n+- Ubuntu 10.04\n+- CentOS 6.5\n+\n+0.9.2 - 0.9.2.1 Release notes\n+=======================\n+\n+The OpenSSL dependency in the gitian builds has been upgraded to 1.0.1h because of CVE-2014-0224.\n+\n+RPC:\n+\n+- Add `getwalletinfo`, `getblockchaininfo` and `getnetworkinfo` calls (will replace hodge-podge `getinfo` at some point)\n+- Add a `relayfee` field to `getnetworkinfo`\n+- Fix RPC related shutdown hangs and leaks\n+- Always show syncnode in `getpeerinfo`\n+- `sendrawtransaction`: report the reject code and reason, and make it possible to re-send transactions that are already in the mempool\n+- `getmininginfo` show right genproclimit\n+\n+Command-line options:\n+\n+- Fix `-printblocktree` output\n+- Show error message if ReadConfigFile fails\n+\n+Block-chain handling and storage:\n+\n+- Fix for GetBlockValue() after block 13,440,000 (BIP42)\n+- Upgrade leveldb to 1.17\n+\n+Protocol and network code:\n+\n+- Per-peer block download tracking and stalled download detection\n+- Add new DNS seed from bitnodes.io\n+- Prevent socket leak in ThreadSocketHandler and correct some proxy related socket leaks\n+- Use pnode->nLastRecv as sync score (was the wrong way around)\n+\n+Wallet:\n+\n+- Make GetAvailableCredit run GetHash() only once per transaction (performance improvement)\n+- Lower paytxfee warning threshold from 0.25 BTC to 0.01 BTC\n+- Fix importwallet nTimeFirstKey (trigger necessary rescans)\n+- Log BerkeleyDB version at startup\n+- CWallet init fix\n+\n+Build system:\n+\n+- Add OSX build descriptors to gitian\n+- Fix explicit --disable-qt-dbus\n+- Don't require db_cxx.h when compiling with wallet disabled and GUI enabled\n+- Improve missing boost error reporting\n+- Upgrade miniupnpc version to 1.9\n+- gitian-linux: --enable-glibc-back-compat for binary compatibility with old distributions\n+- gitian: don't export any symbols from executable\n+- gitian: build against Qt 4.6\n+- devtools: add script to check symbols from Linux gitian executables\n+- Remove build-time no-IPv6 setting\n+\n+GUI:\n+\n+- Fix various coin control visual issues\n+- Show number of in/out connections in debug console\n+- Show weeks as well as years behind for long timespans behind\n+- Enable and disable the Show and Remove buttons for requested payments history based on whether any entry is selected.\n+- Show also value for options overridden on command line in options dialog\n+- Fill in label from address book also for URIs\n+- Fixes feel when resizing the last column on tables (issue #2862)\n+- Fix ESC in disablewallet mode\n+- Add expert section to wallet tab in optionsdialog\n+- Do proper boost::path conversion (fixes unicode in datadir)\n+- Only override -datadir if different from the default (fixes -datadir in config file)\n+- Show rescan progress at start-up\n+- Show importwallet progress\n+- Get required locks upfront in polling functions (avoids hanging on locks)\n+- Catch Windows shutdown events while client is running\n+- Optionally add third party links to transaction context menu\n+- Check for !pixmap() before trying to export QR code (avoids crashes when no QR code could be generated)\n+- Fix \"Start bitcoin on system login\"\n+\n+Miscellaneous:\n+\n+- Replace non-threadsafe C functions (gmtime, strerror and setlocale)\n+- Add missing cs_main and wallet locks\n+- Avoid exception at startup when system locale not recognized\n+- Changed bitrpc.py's raw_input to getpass for passwords to conceal characters during command line input\n+- devtools: add a script to fetch and postprocess translations\n+\n+Credits\n+--------\n+\n+Thanks to everyone who contributed to this release:\n+\n+- Addy Yeow\n+- Altoidnerd\n+- Andrea D'Amore\n+- Andreas Schildbach\n+- Bardi Harborow\n+- Brandon Dahler\n+- Bryan Bishop\n+- Chris Beams\n+- Christian von Roques\n+- Cory Fields\n+- Cozz Lovan\n+- daniel\n+- Daniel Newton\n+- David A. Harding\n+- ditto-b\n+- duanemoody\n+- Eric S. Bullington\n+- Fabian Raetz\n+- Gavin Andresen\n+- Gregory Maxwell\n+- gubatron\n+- Haakon Nilsen\n+- harry\n+- Hector Jusforgues\n+- Isidoro Ghezzi\n+- Jeff Garzik\n+- Johnathan Corgan\n+- jtimon\n+- Kamil Domanski\n+- langerhans\n+- Luke Dashjr\n+- Manuel Araoz\n+- Mark Friedenbach\n+- Matt Corallo\n+- Matthew Bogosian\n+- Meeh\n+- Michael Ford\n+- Michagogo\n+- Mikael Wikman\n+- Mike Hearn\n+- olalonde\n+- paveljanik\n+- peryaudo\n+- Philip Kaufmann\n+- philsong\n+- Pieter Wuille\n+- R E Broadley\n+- richierichrawr\n+- Rune K. Svendsen\n+- rxl\n+- shshshsh\n+- Simon de la Rouviere\n+- Stuart Cardall\n+- super3\n+- Telepatheic\n+- Thomas Zander\n+- Torstein Huseb\u00f8\n+- Warren Togami\n+- Wladimir J. van der Laan\n+- Yoichi Hirai"
      },
      {
        "sha": "a2749e549f7663f674d496da600c0bf282a851d2",
        "filename": "doc/release-notes/release-notes-0.9.2.md",
        "status": "added",
        "additions": 207,
        "deletions": 0,
        "changes": 207,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/doc/release-notes/release-notes-0.9.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/doc/release-notes/release-notes-0.9.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.md?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,207 @@\n+Bitcoin Core version 0.9.2 is now available from:\n+\n+  https://bitcoin.org/bin/0.9.2/\n+\n+This is a new minor version release, bringing mostly bug fixes and some minor\n+improvements. OpenSSL has been updated because of a security issue (CVE-2014-0224).\n+Upgrading to this release is recommended.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+If you are upgrading from version 0.7.2 or earlier, the first time you run\n+0.9.2 your blockchain files will be re-indexed, which will take anywhere from \n+30 minutes to several hours, depending on the speed of your machine.\n+\n+Downgrading warnings\n+--------------------\n+\n+The 'chainstate' for this release is not always compatible with previous\n+releases, so if you run 0.9.x and then decide to switch back to a\n+0.8.x release you might get a blockchain validation error when starting the\n+old release (due to 'pruned outputs' being omitted from the index of\n+unspent transaction outputs).\n+\n+Running the old release with the -reindex option will rebuild the chainstate\n+data structures and correct the problem.\n+\n+Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\n+the blockchain for missing spent coins, which will take a long time (tens\n+of minutes on a typical machine).\n+\n+Important changes\n+==================\n+\n+Gitian OSX build\n+-----------------\n+\n+The deterministic build system that was already used for Windows and Linux\n+builds is now used for OSX as well. Although the resulting executables have\n+been tested quite a bit, there could be possible regressions. Be sure to report\n+these on the Github bug tracker mentioned above.\n+\n+Compatibility of Linux build\n+-----------------------------\n+\n+For Linux we now build against Qt 4.6, and filter the symbols for libstdc++ and glibc.\n+This brings back compatibility with\n+\n+- Debian 6+ / Tails\n+- Ubuntu 10.04\n+- CentOS 6.5\n+\n+0.9.2 Release notes\n+=======================\n+\n+The OpenSSL dependency in the gitian builds has been upgraded to 1.0.1h because of CVE-2014-0224.\n+\n+RPC:\n+\n+- Add `getwalletinfo`, `getblockchaininfo` and `getnetworkinfo` calls (will replace hodge-podge `getinfo` at some point)\n+- Add a `relayfee` field to `getnetworkinfo`\n+- Fix RPC related shutdown hangs and leaks\n+- Always show syncnode in `getpeerinfo`\n+- `sendrawtransaction`: report the reject code and reason, and make it possible to re-send transactions that are already in the mempool\n+- `getmininginfo` show right genproclimit\n+\n+Command-line options:\n+\n+- Fix `-printblocktree` output\n+- Show error message if ReadConfigFile fails\n+\n+Block-chain handling and storage:\n+\n+- Fix for GetBlockValue() after block 13,440,000 (BIP42)\n+- Upgrade leveldb to 1.17\n+\n+Protocol and network code:\n+\n+- Per-peer block download tracking and stalled download detection\n+- Add new DNS seed from bitnodes.io\n+- Prevent socket leak in ThreadSocketHandler and correct some proxy related socket leaks\n+- Use pnode->nLastRecv as sync score (was the wrong way around)\n+\n+Wallet:\n+\n+- Make GetAvailableCredit run GetHash() only once per transaction (performance improvement)\n+- Lower paytxfee warning threshold from 0.25 BTC to 0.01 BTC\n+- Fix importwallet nTimeFirstKey (trigger necessary rescans)\n+- Log BerkeleyDB version at startup\n+- CWallet init fix\n+\n+Build system:\n+\n+- Add OSX build descriptors to gitian\n+- Fix explicit --disable-qt-dbus\n+- Don't require db_cxx.h when compiling with wallet disabled and GUI enabled\n+- Improve missing boost error reporting\n+- Upgrade miniupnpc version to 1.9\n+- gitian-linux: --enable-glibc-back-compat for binary compatibility with old distributions\n+- gitian: don't export any symbols from executable\n+- gitian: build against Qt 4.6\n+- devtools: add script to check symbols from Linux gitian executables\n+- Remove build-time no-IPv6 setting\n+\n+GUI:\n+\n+- Fix various coin control visual issues\n+- Show number of in/out connections in debug console\n+- Show weeks as well as years behind for long timespans behind\n+- Enable and disable the Show and Remove buttons for requested payments history based on whether any entry is selected.\n+- Show also value for options overridden on command line in options dialog\n+- Fill in label from address book also for URIs\n+- Fixes feel when resizing the last column on tables (issue #2862)\n+- Fix ESC in disablewallet mode\n+- Add expert section to wallet tab in optionsdialog\n+- Do proper boost::path conversion (fixes unicode in datadir)\n+- Only override -datadir if different from the default (fixes -datadir in config file)\n+- Show rescan progress at start-up\n+- Show importwallet progress\n+- Get required locks upfront in polling functions (avoids hanging on locks)\n+- Catch Windows shutdown events while client is running\n+- Optionally add third party links to transaction context menu\n+- Check for !pixmap() before trying to export QR code (avoids crashes when no QR code could be generated)\n+- Fix \"Start bitcoin on system login\"\n+\n+Miscellaneous:\n+\n+- Replace non-threadsafe C functions (gmtime, strerror and setlocale)\n+- Add missing cs_main and wallet locks\n+- Avoid exception at startup when system locale not recognized\n+- Changed bitrpc.py's raw_input to getpass for passwords to conceal characters during command line input\n+- devtools: add a script to fetch and postprocess translations\n+\n+Credits\n+--------\n+\n+Thanks to everyone who contributed to this release:\n+\n+- Addy Yeow\n+- Altoidnerd\n+- Andrea D'Amore\n+- Andreas Schildbach\n+- Bardi Harborow\n+- Brandon Dahler\n+- Bryan Bishop\n+- Chris Beams\n+- Christian von Roques\n+- Cory Fields\n+- Cozz Lovan\n+- daniel\n+- Daniel Newton\n+- David A. Harding\n+- ditto-b\n+- duanemoody\n+- Eric S. Bullington\n+- Fabian Raetz\n+- Gavin Andresen\n+- Gregory Maxwell\n+- gubatron\n+- Haakon Nilsen\n+- harry\n+- Hector Jusforgues\n+- Isidoro Ghezzi\n+- Jeff Garzik\n+- Johnathan Corgan\n+- jtimon\n+- Kamil Domanski\n+- langerhans\n+- Luke Dashjr\n+- Manuel Araoz\n+- Mark Friedenbach\n+- Matt Corallo\n+- Matthew Bogosian\n+- Meeh\n+- Michael Ford\n+- Michagogo\n+- Mikael Wikman\n+- Mike Hearn\n+- olalonde\n+- paveljanik\n+- peryaudo\n+- Philip Kaufmann\n+- philsong\n+- Pieter Wuille\n+- R E Broadley\n+- richierichrawr\n+- Rune K. Svendsen\n+- rxl\n+- shshshsh\n+- Simon de la Rouviere\n+- Stuart Cardall\n+- super3\n+- Telepatheic\n+- Thomas Zander\n+- Torstein Huseb\u00f8\n+- Warren Togami\n+- Wladimir J. van der Laan\n+- Yoichi Hirai"
      },
      {
        "sha": "c58838141196c6202a255920af551a7328b19209",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 52,
        "deletions": 59,
        "changes": 111,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -23,7 +23,7 @@ Release Process\n \n * * *\n \n-##perform gitian builds\n+###perform gitian builds\n \n  From a directory containing the bitcoin source, gitian-builder and gitian.sigs\n   \n@@ -34,21 +34,40 @@ Release Process\n \tpopd\n \tpushd ./gitian-builder\n \n- Fetch and build inputs: (first time, or when dependency versions change)\n-\n+###fetch and build inputs: (first time, or when dependency versions change)\n+ \n \tmkdir -p inputs; cd inputs/\n+\n+ Register and download the Apple SDK: (see OSX Readme for details)\n+ \n+ https://developer.apple.com/downloads/download.action?path=Developer_Tools/xcode_4.6.3/xcode4630916281a.dmg\n+ \n+ Using a Mac, create a tarball for the 10.7 SDK and copy it to the inputs directory:\n+ \n+\ttar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.7.sdk.tar.gz MacOSX10.7.sdk\n+\n+ Download remaining inputs, and build everything:\n+ \n \twget 'http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.9.tar.gz' -O miniupnpc-1.9.tar.gz\n-\twget 'https://www.openssl.org/source/openssl-1.0.1g.tar.gz'\n+\twget 'https://www.openssl.org/source/openssl-1.0.1h.tar.gz'\n \twget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n \twget 'http://zlib.net/zlib-1.2.8.tar.gz'\n \twget 'ftp://ftp.simplesystems.org/pub/png/src/history/libpng16/libpng-1.6.8.tar.gz'\n \twget 'https://fukuchi.org/works/qrencode/qrencode-3.4.3.tar.bz2'\n \twget 'https://downloads.sourceforge.net/project/boost/boost/1.55.0/boost_1_55_0.tar.bz2'\n-\twget 'https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch' -O \\ \n-\t     boost-mingw-gas-cross-compile-2013-03-03.patch\n+\twget 'https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch' -O boost-mingw-gas-cross-compile-2013-03-03.patch\n \twget 'https://download.qt-project.org/official_releases/qt/5.2/5.2.0/single/qt-everywhere-opensource-src-5.2.0.tar.gz'\n+\twget 'https://download.qt-project.org/official_releases/qt/5.2/5.2.1/single/qt-everywhere-opensource-src-5.2.1.tar.gz'\n \twget 'https://download.qt-project.org/archive/qt/4.6/qt-everywhere-opensource-src-4.6.4.tar.gz'\n \twget 'https://protobuf.googlecode.com/files/protobuf-2.5.0.tar.bz2'\n+\twget 'https://github.com/mingwandroid/toolchain4/archive/10cc648683617cca8bcbeae507888099b41b530c.tar.gz'\n+\twget 'http://www.opensource.apple.com/tarballs/cctools/cctools-809.tar.gz'\n+\twget 'http://www.opensource.apple.com/tarballs/dyld/dyld-195.5.tar.gz'\n+\twget 'http://www.opensource.apple.com/tarballs/ld64/ld64-127.2.tar.gz'\n+\twget 'http://cdrkit.org/releases/cdrkit-1.1.11.tar.gz'\n+\twget 'https://github.com/theuni/libdmg-hfsplus/archive/libdmg-hfsplus-v0.1.tar.gz'\n+\twget 'http://llvm.org/releases/3.2/clang+llvm-3.2-x86-linux-ubuntu-12.04.tar.gz' -O clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\n+\twget 'https://raw.githubusercontent.com/theuni/osx-cross-depends/master/patches/cdrtools/genisoimage.diff' -O cdrkit-deterministic.patch\n \tcd ..\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/boost-linux.yml\n \tmv build/out/boost-*.zip inputs/\n@@ -64,28 +83,38 @@ Release Process\n \tmv build/out/qt-*.zip inputs/\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/protobuf-win.yml\n \tmv build/out/protobuf-*.zip inputs/\n+\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/gitian-osx-native.yml\n+\tmv build/out/osx-*.tar.gz inputs/\n+\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/gitian-osx-depends.yml\n+\tmv build/out/osx-*.tar.gz inputs/\n+\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/gitian-osx-qt.yml\n+\tmv build/out/osx-*.tar.gz inputs/\n \n  The expected SHA256 hashes of the intermediate inputs are:\n \n-    35c3dfd8b9362f59e81b51881b295232e3bc9e286f1add193b59d486d9ac4a5c  bitcoin-deps-linux32-gitian-r5.zip\n-    571789867d172500fa96d63d0ba8c5b1e1a3d6f44f720eddf2f93665affc88b3  bitcoin-deps-linux64-gitian-r5.zip\n     f29b7d9577417333fb56e023c2977f5726a7c297f320b175a4108cf7cd4c2d29  boost-linux32-1.55.0-gitian-r1.zip\n     88232451c4104f7eb16e469ac6474fd1231bd485687253f7b2bdf46c0781d535  boost-linux64-1.55.0-gitian-r1.zip\n-    74ec2d301cf1a9d03b194153f545102ba45dad02b390485212fe6717de486361  qt-linux32-4.6.4-gitian-r1.tar.gz\n-    01d0477e299467f09280f15424781154e2b1ea4072c5edb16e044c234954fd9a  qt-linux64-4.6.4-gitian-r1.tar.gz\n+    46710f673467e367738d8806e45b4cb5931aaeea61f4b6b55a68eea56d5006c5  bitcoin-deps-linux32-gitian-r6.zip\n+    f03be39fb26670243d3a659e64d18e19d03dec5c11e9912011107768390b5268  bitcoin-deps-linux64-gitian-r6.zip\n+    57e57dbdadc818cd270e7e00500a5e1085b3bcbdef69a885f0fb7573a8d987e1  qt-linux32-4.6.4-gitian-r1.tar.gz\n+    60eb4b9c5779580b7d66529efa5b2836ba1a70edde2a0f3f696d647906a826be  qt-linux64-4.6.4-gitian-r1.tar.gz\n     60dc2d3b61e9c7d5dbe2f90d5955772ad748a47918ff2d8b74e8db9b1b91c909  boost-win32-1.55.0-gitian-r6.zip\n     f65fcaf346bc7b73bc8db3a8614f4f6bee2f61fcbe495e9881133a7c2612a167  boost-win64-1.55.0-gitian-r6.zip\n-    97e62002d338885336bb24e7cbb9471491294bd8857af7a83d18c0961f864ec0  bitcoin-deps-win32-gitian-r11.zip\n-    ee3ea2d5aac1a67ea6bfbea2c04068a7c0940616ce48ee4f37c264bb9d4438ef  bitcoin-deps-win64-gitian-r11.zip\n+    70de248cd0dd7e7476194129e818402e974ca9c5751cbf591644dc9f332d3b59  bitcoin-deps-win32-gitian-r13.zip\n+    9eace4c76f639f4f3580a478eee4f50246e1bbb5ccdcf37a158261a5a3fa3e65  bitcoin-deps-win64-gitian-r13.zip\n     963e3e5e85879010a91143c90a711a5d1d5aba992e38672cdf7b54e42c56b2f1  qt-win32-5.2.0-gitian-r3.zip\n     751c579830d173ef3e6f194e83d18b92ebef6df03289db13ab77a52b6bc86ef0  qt-win64-5.2.0-gitian-r3.zip\n     e2e403e1a08869c7eed4d4293bce13d51ec6a63592918b90ae215a0eceb44cb4  protobuf-win32-2.5.0-gitian-r4.zip\n     a0999037e8b0ef9ade13efd88fee261ba401f5ca910068b7e0cd3262ba667db0  protobuf-win64-2.5.0-gitian-r4.zip\n+    512bc0622c883e2e0f4cbc3fedfd8c2402d06c004ce6fb32303cc2a6f405b6df  osx-native-depends-r3.tar.gz\n+    927e4b222be6d590b4bc2fc185872a5d0ca5c322adb983764d3ed84be6bdbc81  osx-depends-r4.tar.gz\n+    ec95abef1df2b096a970359787c01d8c45e2a4475b7ae34e12c022634fbdba8a  osx-depends-qt-5.2.1-r4.tar.gz\n \n- Build bitcoind and bitcoin-qt on Linux32, Linux64, and Win32:\n+\n+ Build Bitcoin Core for Linux, Windows, and OS X:\n   \n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t./bin/gsign --signer $SIGNER --release ${VERSION} --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+\t./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \tpushd build/out\n \tzip -r bitcoin-${VERSION}-linux-gitian.zip *\n \tmv bitcoin-${VERSION}-linux-gitian.zip ../../../\n@@ -96,13 +125,19 @@ Release Process\n \tzip -r bitcoin-${VERSION}-win-gitian.zip *\n \tmv bitcoin-${VERSION}-win-gitian.zip ../../../\n \tpopd\n+        ./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx-bitcoin.yml\n+        ./bin/gsign --signer $SIGNER --release ${VERSION}-osx --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-bitcoin.yml\n+\tpushd build/out\n+\tmv Bitcoin-Qt.dmg ../../../\n+\tpopd\n \tpopd\n \n   Build output expected:\n \n   1. linux 32-bit and 64-bit binaries + source (bitcoin-${VERSION}-linux-gitian.zip)\n   2. windows 32-bit and 64-bit binaries + installer + source (bitcoin-${VERSION}-win-gitian.zip)\n-  3. Gitian signatures (in gitian.sigs/${VERSION}[-win]/(your gitian key)/\n+  3. OSX installer (Bitcoin-Qt.dmg)\n+  4. Gitian signatures (in gitian.sigs/${VERSION}-<linux|win|osx>/(your gitian key)/\n \n repackage gitian builds for release as stand-alone zip/tar/installer exe\n \n@@ -119,21 +154,6 @@ repackage gitian builds for release as stand-alone zip/tar/installer exe\n \tzip -r bitcoin-${VERSION}-win.zip bitcoin-${VERSION}-win\n \trm -rf bitcoin-${VERSION}-win\n \n-**Perform Mac build:**\n-\n-  OSX binaries are created by Gavin Andresen on a 64-bit, OSX 10.6 machine.\n-\n-\t./autogen.sh\n-        SDK=$(xcode-select --print-path)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.6.sdk\n-        CXXFLAGS=\"-mmacosx-version-min=10.6 -isysroot $SDK\" ./configure --enable-upnp-default\n-\tmake\n-\texport QTDIR=/opt/local/share/qt4  # needed to find translations/qt_*.qm files\n-\tT=$(contrib/qt_translations.py $QTDIR/translations src/qt/locale)\n-        export CODESIGNARGS='--keychain ...path_to_keychain --sign \"Developer ID Application: BITCOIN FOUNDATION, INC., THE\"'\n-\tpython2.7 contrib/macdeploy/macdeployqtplus Bitcoin-Qt.app -sign -add-qt-tr $T -dmg -fancy contrib/macdeploy/fancy.plist\n-\n- Build output expected: Bitcoin-Qt.dmg\n-\n ###Next steps:\n \n * Code-sign Windows -setup.exe (in a Windows virtual machine using signtool)\n@@ -157,8 +177,9 @@ repackage gitian builds for release as stand-alone zip/tar/installer exe\n Commit your signature to gitian.sigs:\n \n \tpushd gitian.sigs\n-\tgit add ${VERSION}/${SIGNER}\n+\tgit add ${VERSION}-linux/${SIGNER}\n \tgit add ${VERSION}-win/${SIGNER}\n+\tgit add ${VERSION}-osx/${SIGNER}\n \tgit commit -a\n \tgit push  # Assuming you can push to the gitian.sigs tree\n \tpopd\n@@ -167,34 +188,6 @@ Commit your signature to gitian.sigs:\n \n ### After 3 or more people have gitian-built, repackage gitian-signed zips:\n \n-From a directory containing bitcoin source, gitian.sigs and gitian zips\n-\n-\texport VERSION=(new version, e.g. 0.8.0)\n-\tmkdir bitcoin-${VERSION}-linux-gitian\n-\tpushd bitcoin-${VERSION}-linux-gitian\n-\tunzip ../bitcoin-${VERSION}-linux-gitian.zip\n-\tmkdir gitian\n-\tcp ../bitcoin/contrib/gitian-downloader/*.pgp ./gitian/\n-\tfor signer in $(ls ../gitian.sigs/${VERSION}/); do\n-\t cp ../gitian.sigs/${VERSION}/${signer}/bitcoin-build.assert ./gitian/${signer}-build.assert\n-\t cp ../gitian.sigs/${VERSION}/${signer}/bitcoin-build.assert.sig ./gitian/${signer}-build.assert.sig\n-\tdone\n-\tzip -r bitcoin-${VERSION}-linux-gitian.zip *\n-\tcp bitcoin-${VERSION}-linux-gitian.zip ../\n-\tpopd\n-\tmkdir bitcoin-${VERSION}-win-gitian\n-\tpushd bitcoin-${VERSION}-win-gitian\n-\tunzip ../bitcoin-${VERSION}-win-gitian.zip\n-\tmkdir gitian\n-\tcp ../bitcoin/contrib/gitian-downloader/*.pgp ./gitian/\n-\tfor signer in $(ls ../gitian.sigs/${VERSION}-win/); do\n-\t cp ../gitian.sigs/${VERSION}-win/${signer}/bitcoin-build.assert ./gitian/${signer}-build.assert\n-\t cp ../gitian.sigs/${VERSION}-win/${signer}/bitcoin-build.assert.sig ./gitian/${signer}-build.assert.sig\n-\tdone\n-\tzip -r bitcoin-${VERSION}-win-gitian.zip *\n-\tcp bitcoin-${VERSION}-win-gitian.zip ../\n-\tpopd\n-\n - Upload gitian zips to SourceForge\n \n - Announce the release:"
      },
      {
        "sha": "61a0a0ffed986f5ff8d141afa2789bd89d13b52e",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,7 +1,7 @@\n Translations\n ============\n \n-The Qt GUI can be easily translated into other languages. Here's how we\n+The Bitcoin Core GUI can be easily translated into other languages. Here's how we\n handle those translations.\n \n Files and Folders"
      },
      {
        "sha": "9bea2e355e15da0b8f66acff974ea655966c88dc",
        "filename": "qa/rpc-tests/netutil.py",
        "status": "added",
        "additions": 134,
        "deletions": 0,
        "changes": 134,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/qa/rpc-tests/netutil.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/qa/rpc-tests/netutil.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/netutil.py?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,134 @@\n+# Linux network utilities\n+import sys\n+import socket\n+import fcntl\n+import struct\n+import array\n+import os\n+import binascii\n+\n+# Roughly based on http://voorloopnul.com/blog/a-python-netstat-in-less-than-100-lines-of-code/ by Ricardo Pascal\n+STATE_ESTABLISHED = '01'\n+STATE_SYN_SENT  = '02'\n+STATE_SYN_RECV = '03'\n+STATE_FIN_WAIT1 = '04'\n+STATE_FIN_WAIT2 = '05'\n+STATE_TIME_WAIT = '06'\n+STATE_CLOSE = '07'\n+STATE_CLOSE_WAIT = '08'\n+STATE_LAST_ACK = '09'\n+STATE_LISTEN = '0A'\n+STATE_CLOSING = '0B'\n+\n+def get_socket_inodes(pid):\n+    '''\n+    Get list of socket inodes for process pid.\n+    '''\n+    base = '/proc/%i/fd' % pid\n+    inodes = []\n+    for item in os.listdir(base):\n+        target = os.readlink(os.path.join(base, item))\n+        if target.startswith('socket:'):\n+            inodes.append(int(target[8:-1]))\n+    return inodes\n+\n+def _remove_empty(array):\n+    return [x for x in array if x !='']\n+\n+def _convert_ip_port(array):\n+    host,port = array.split(':')\n+    # convert host from mangled-per-four-bytes form as used by kernel\n+    host = binascii.unhexlify(host)\n+    host_out = ''\n+    for x in range(0, len(host)/4):\n+        (val,) = struct.unpack('=I', host[x*4:(x+1)*4])\n+        host_out += '%08x' % val\n+\n+    return host_out,int(port,16)\n+\n+def netstat(typ='tcp'):\n+    '''\n+    Function to return a list with status of tcp connections at linux systems\n+    To get pid of all network process running on system, you must run this script\n+    as superuser\n+    '''\n+    with open('/proc/net/'+typ,'r') as f:\n+        content = f.readlines()\n+        content.pop(0)\n+    result = []\n+    for line in content:\n+        line_array = _remove_empty(line.split(' '))     # Split lines and remove empty spaces.\n+        tcp_id = line_array[0]\n+        l_addr = _convert_ip_port(line_array[1])\n+        r_addr = _convert_ip_port(line_array[2])\n+        state = line_array[3]\n+        inode = int(line_array[9])                      # Need the inode to match with process pid.\n+        nline = [tcp_id, l_addr, r_addr, state, inode]\n+        result.append(nline)\n+    return result\n+\n+def get_bind_addrs(pid):\n+    '''\n+    Get bind addresses as (host,port) tuples for process pid.\n+    '''\n+    inodes = get_socket_inodes(pid)\n+    bind_addrs = []\n+    for conn in netstat('tcp') + netstat('tcp6'):\n+        if conn[3] == STATE_LISTEN and conn[4] in inodes:\n+            bind_addrs.append(conn[1])\n+    return bind_addrs\n+\n+# from: http://code.activestate.com/recipes/439093/\n+def all_interfaces():\n+    '''\n+    Return all interfaces that are up\n+    '''\n+    is_64bits = sys.maxsize > 2**32\n+    struct_size = 40 if is_64bits else 32\n+    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n+    max_possible = 8 # initial value\n+    while True:\n+        bytes = max_possible * struct_size\n+        names = array.array('B', '\\0' * bytes)\n+        outbytes = struct.unpack('iL', fcntl.ioctl(\n+            s.fileno(),\n+            0x8912,  # SIOCGIFCONF\n+            struct.pack('iL', bytes, names.buffer_info()[0])\n+        ))[0]\n+        if outbytes == bytes:\n+            max_possible *= 2\n+        else:\n+            break\n+    namestr = names.tostring()\n+    return [(namestr[i:i+16].split('\\0', 1)[0],\n+             socket.inet_ntoa(namestr[i+20:i+24]))\n+            for i in range(0, outbytes, struct_size)]\n+\n+def addr_to_hex(addr):\n+    '''\n+    Convert string IPv4 or IPv6 address to binary address as returned by\n+    get_bind_addrs.\n+    Very naive implementation that certainly doesn't work for all IPv6 variants.\n+    '''\n+    if '.' in addr: # IPv4\n+        addr = [int(x) for x in addr.split('.')]\n+    elif ':' in addr: # IPv6\n+        sub = [[], []] # prefix, suffix\n+        x = 0\n+        addr = addr.split(':')\n+        for i,comp in enumerate(addr):\n+            if comp == '':\n+                if i == 0 or i == (len(addr)-1): # skip empty component at beginning or end\n+                    continue\n+                x += 1 # :: skips to suffix\n+                assert(x < 2)\n+            else: # two bytes per component\n+                val = int(comp, 16)\n+                sub[x].append(val >> 8)\n+                sub[x].append(val & 0xff)\n+        nullbytes = 16 - len(sub[0]) - len(sub[1])\n+        assert((x == 0 and nullbytes == 0) or (x == 1 and nullbytes > 0))\n+        addr = sub[0] + ([0] * nullbytes) + sub[1]\n+    else:\n+        raise ValueError('Could not parse address %s' % addr)\n+    return binascii.hexlify(bytearray(addr))"
      },
      {
        "sha": "7f2d79b3c1b461e8453e9b9f6ad92c0b340fae0b",
        "filename": "qa/rpc-tests/receivedby.py",
        "status": "added",
        "additions": 225,
        "deletions": 0,
        "changes": 225,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/qa/rpc-tests/receivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/qa/rpc-tests/receivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/receivedby.py?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,225 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Exercise the listtransactions API\n+\n+# Add python-bitcoinrpc to module search path:\n+\n+import os\n+import sys\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n+\n+import json\n+import shutil\n+import subprocess\n+import tempfile\n+import traceback\n+\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+\n+def get_sub_array_from_array(object_array, to_match):\n+    '''\n+        Finds and returns a sub array from an array of arrays.\n+        to_match should be a unique idetifier of a sub array\n+    '''\n+    num_matched = 0\n+    for item in object_array:\n+        all_match = True\n+        for key,value in to_match.items():\n+            if item[key] != value:\n+                all_match = False\n+        if not all_match:\n+            continue\n+        return item\n+    return []\n+\n+def check_array_result(object_array, to_match, expected, should_not_find = False):\n+    \"\"\"\n+        Pass in array of JSON objects, a dictionary with key/value pairs\n+        to match against, and another dictionary with expected key/value\n+        pairs.\n+        If the should_not_find flag is true, to_match should not be found in object_array\n+        \"\"\"\n+    if should_not_find == True:\n+        expected = { }\n+    num_matched = 0\n+    for item in object_array:\n+        all_match = True\n+        for key,value in to_match.items():\n+            if item[key] != value:\n+                all_match = False\n+        if not all_match:\n+            continue\n+        for key,value in expected.items():\n+            if item[key] != value:\n+                raise AssertionError(\"%s : expected %s=%s\"%(str(item), str(key), str(value)))\n+            num_matched = num_matched+1\n+    if num_matched == 0 and should_not_find != True:\n+        raise AssertionError(\"No objects matched %s\"%(str(to_match)))\n+    if num_matched > 0 and should_not_find == True:\n+        raise AssertionError(\"Objects was matched %s\"%(str(to_match)))\n+\n+def run_test(nodes):\n+    '''\n+        listreceivedbyaddress Test\n+    '''\n+    # Send from node 0 to 1\n+    addr = nodes[1].getnewaddress()\n+    txid = nodes[0].sendtoaddress(addr, 0.1)\n+    sync_mempools(nodes)\n+    \n+    #Check not listed in listreceivedbyaddress because has 0 confirmations\n+    check_array_result(nodes[1].listreceivedbyaddress(),\n+                       {\"address\":addr},\n+                       { },\n+                       True)\n+    #Bury Tx under 10 block so it will be returned by listreceivedbyaddress\n+    nodes[1].setgenerate(True, 10)\n+    sync_blocks(nodes)\n+    check_array_result(nodes[1].listreceivedbyaddress(),\n+                       {\"address\":addr},\n+                       {\"address\":addr, \"account\":\"\", \"amount\":Decimal(\"0.1\"), \"confirmations\":10, \"txids\":[txid,]})\n+    #With min confidence < 10\n+    check_array_result(nodes[1].listreceivedbyaddress(5),\n+                       {\"address\":addr},\n+                       {\"address\":addr, \"account\":\"\", \"amount\":Decimal(\"0.1\"), \"confirmations\":10, \"txids\":[txid,]})\n+    #With min confidence > 10, should not find Tx\n+    check_array_result(nodes[1].listreceivedbyaddress(11),{\"address\":addr},{ },True)\n+\n+    #Empty Tx\n+    addr = nodes[1].getnewaddress()\n+    check_array_result(nodes[1].listreceivedbyaddress(0,True),\n+                       {\"address\":addr},\n+                       {\"address\":addr, \"account\":\"\", \"amount\":0, \"confirmations\":0, \"txids\":[]})\n+\n+    '''\n+        getreceivedbyaddress Test\n+    '''\n+    # Send from node 0 to 1\n+    addr = nodes[1].getnewaddress()\n+    txid = nodes[0].sendtoaddress(addr, 0.1)\n+    sync_mempools(nodes)\n+\n+    #Check balance is 0 because of 0 confirmations\n+    balance = nodes[1].getreceivedbyaddress(addr)\n+    if balance != Decimal(\"0.0\"):\n+        raise AssertionError(\"Wrong balance returned by getreceivedbyaddress, %0.2f\"%(balance))\n+\n+    #Check balance is 0.1\n+    balance = nodes[1].getreceivedbyaddress(addr,0)\n+    if balance != Decimal(\"0.1\"):\n+        raise AssertionError(\"Wrong balance returned by getreceivedbyaddress, %0.2f\"%(balance))\n+\n+    #Bury Tx under 10 block so it will be returned by the default getreceivedbyaddress\n+    nodes[1].setgenerate(True, 10)\n+    sync_blocks(nodes)\n+    balance = nodes[1].getreceivedbyaddress(addr)\n+    if balance != Decimal(\"0.1\"):\n+        raise AssertionError(\"Wrong balance returned by getreceivedbyaddress, %0.2f\"%(balance))\n+\n+    '''\n+        listreceivedbyaccount + getreceivedbyaccount Test\n+    '''\n+    #set pre-state\n+    addrArr = nodes[1].getnewaddress()\n+    account = nodes[1].getaccount(addrArr)\n+    received_by_account_json = get_sub_array_from_array(nodes[1].listreceivedbyaccount(),{\"account\":account})\n+    if len(received_by_account_json) == 0:\n+        raise AssertionError(\"No accounts found in node\")\n+    balance_by_account = rec_by_accountArr = nodes[1].getreceivedbyaccount(account)\n+\n+    txid = nodes[0].sendtoaddress(addr, 0.1)\n+\n+    # listreceivedbyaccount should return received_by_account_json because of 0 confirmations\n+    check_array_result(nodes[1].listreceivedbyaccount(),\n+                   {\"account\":account},\n+                   received_by_account_json)\n+\n+    # getreceivedbyaddress should return same balance because of 0 confirmations\n+    balance = nodes[1].getreceivedbyaccount(account)\n+    if balance != balance_by_account:\n+        raise AssertionError(\"Wrong balance returned by getreceivedbyaccount, %0.2f\"%(balance))\n+\n+    nodes[1].setgenerate(True, 10)\n+    sync_blocks(nodes)\n+    # listreceivedbyaccount should return updated account balance\n+    check_array_result(nodes[1].listreceivedbyaccount(),\n+                       {\"account\":account},\n+                       {\"account\":received_by_account_json[\"account\"], \"amount\":(received_by_account_json[\"amount\"] + Decimal(\"0.1\"))})\n+\n+    # getreceivedbyaddress should return updates balance\n+    balance = nodes[1].getreceivedbyaccount(account)\n+    if balance != balance_by_account + Decimal(\"0.1\"):\n+        raise AssertionError(\"Wrong balance returned by getreceivedbyaccount, %0.2f\"%(balance))\n+\n+    #Create a new account named \"mynewaccount\" that has a 0 balance\n+    nodes[1].getaccountaddress(\"mynewaccount\")\n+    received_by_account_json = get_sub_array_from_array(nodes[1].listreceivedbyaccount(0,True),{\"account\":\"mynewaccount\"})\n+    if len(received_by_account_json) == 0:\n+        raise AssertionError(\"No accounts found in node\")\n+\n+    # Test includeempty of listreceivedbyaccount\n+    if received_by_account_json[\"amount\"] != Decimal(\"0.0\"):\n+        raise AssertionError(\"Wrong balance returned by listreceivedbyaccount, %0.2f\"%(received_by_account_json[\"amount\"]))\n+\n+    # Test getreceivedbyaccount for 0 amount accounts\n+    balance = nodes[1].getreceivedbyaccount(\"mynewaccount\")\n+    if balance != Decimal(\"0.0\"):\n+        raise AssertionError(\"Wrong balance returned by getreceivedbyaccount, %0.2f\"%(balance))\n+\n+def main():\n+    import optparse\n+\n+    parser = optparse.OptionParser(usage=\"%prog [options]\")\n+    parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n+                      help=\"Leave bitcoinds and test.* datadir on exit or error\")\n+    parser.add_option(\"--srcdir\", dest=\"srcdir\", default=\"../../src\",\n+                      help=\"Source directory containing bitcoind/bitcoin-cli (default: %default%)\")\n+    parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n+                      help=\"Root directory for datadirs\")\n+    (options, args) = parser.parse_args()\n+\n+    os.environ['PATH'] = options.srcdir+\":\"+os.environ['PATH']\n+\n+    check_json_precision()\n+\n+    success = False\n+    nodes = []\n+    try:\n+        print(\"Initializing test directory \"+options.tmpdir)\n+        if not os.path.isdir(options.tmpdir):\n+            os.makedirs(options.tmpdir)\n+        initialize_chain(options.tmpdir)\n+\n+        nodes = start_nodes(2, options.tmpdir)\n+        connect_nodes(nodes[1], 0)\n+        sync_blocks(nodes)\n+\n+        run_test(nodes)\n+\n+        success = True\n+\n+    except AssertionError as e:\n+        print(\"Assertion failed: \"+e.message)\n+    except Exception as e:\n+        print(\"Unexpected exception caught during testing: \"+str(e))\n+        traceback.print_tb(sys.exc_info()[2])\n+\n+    if not options.nocleanup:\n+        print(\"Cleaning up\")\n+        stop_nodes(nodes)\n+        wait_bitcoinds()\n+        shutil.rmtree(options.tmpdir)\n+\n+    if success:\n+        print(\"Tests successful\")\n+        sys.exit(0)\n+    else:\n+        print(\"Failed\")\n+        sys.exit(1)\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "a823404e0046da4f3ec84d1c3c75a5bb45daa90b",
        "filename": "qa/rpc-tests/rpcbind_test.py",
        "status": "added",
        "additions": 154,
        "deletions": 0,
        "changes": 154,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/qa/rpc-tests/rpcbind_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/qa/rpc-tests/rpcbind_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcbind_test.py?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,154 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Test for -rpcbind, as well as -rpcallowip and -rpcconnect\n+\n+# Add python-bitcoinrpc to module search path:\n+import os\n+import sys\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n+\n+import json\n+import shutil\n+import subprocess\n+import tempfile\n+import traceback\n+\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+from netutil import *\n+\n+def run_bind_test(tmpdir, allow_ips, connect_to, addresses, expected):\n+    '''\n+    Start a node with requested rpcallowip and rpcbind parameters,\n+    then try to connect, and check if the set of bound addresses\n+    matches the expected set.\n+    '''\n+    expected = [(addr_to_hex(addr), port) for (addr, port) in expected]\n+    base_args = ['-disablewallet', '-nolisten']\n+    if allow_ips:\n+        base_args += ['-rpcallowip=' + x for x in allow_ips]\n+    binds = ['-rpcbind='+addr for addr in addresses]\n+    nodes = start_nodes(1, tmpdir, [base_args + binds], connect_to)\n+    try:\n+        pid = bitcoind_processes[0].pid\n+        assert_equal(set(get_bind_addrs(pid)), set(expected))\n+    finally:\n+        stop_nodes(nodes)\n+        wait_bitcoinds()\n+\n+def run_allowip_test(tmpdir, allow_ips, rpchost, rpcport):\n+    '''\n+    Start a node with rpcwallow IP, and request getinfo\n+    at a non-localhost IP.\n+    '''\n+    base_args = ['-disablewallet', '-nolisten'] + ['-rpcallowip='+x for x in allow_ips]\n+    nodes = start_nodes(1, tmpdir, [base_args])\n+    try:\n+        # connect to node through non-loopback interface\n+        url = \"http://rt:rt@%s:%d\" % (rpchost, rpcport,)\n+        node = AuthServiceProxy(url)\n+        node.getinfo()\n+    finally:\n+        node = None # make sure connection will be garbage collected and closed\n+        stop_nodes(nodes)\n+        wait_bitcoinds()\n+\n+\n+def run_test(tmpdir):\n+    assert(sys.platform == 'linux2') # due to OS-specific network stats queries, this test works only on Linux\n+    # find the first non-loopback interface for testing\n+    non_loopback_ip = None\n+    for name,ip in all_interfaces():\n+        if ip != '127.0.0.1':\n+            non_loopback_ip = ip\n+            break\n+    if non_loopback_ip is None:\n+        assert(not 'This test requires at least one non-loopback IPv4 interface')\n+    print(\"Using interface %s for testing\" % non_loopback_ip)\n+\n+    defaultport = rpc_port(0)\n+\n+    # check default without rpcallowip (IPv4 and IPv6 localhost)\n+    run_bind_test(tmpdir, None, '127.0.0.1', [],\n+        [('127.0.0.1', defaultport), ('::1', defaultport)])\n+    # check default with rpcallowip (IPv6 any)\n+    run_bind_test(tmpdir, ['127.0.0.1'], '127.0.0.1', [],\n+        [('::0', defaultport)])\n+    # check only IPv4 localhost (explicit)\n+    run_bind_test(tmpdir, ['127.0.0.1'], '127.0.0.1', ['127.0.0.1'],\n+        [('127.0.0.1', defaultport)])\n+    # check only IPv4 localhost (explicit) with alternative port\n+    run_bind_test(tmpdir, ['127.0.0.1'], '127.0.0.1:32171', ['127.0.0.1:32171'],\n+        [('127.0.0.1', 32171)])\n+    # check only IPv4 localhost (explicit) with multiple alternative ports on same host\n+    run_bind_test(tmpdir, ['127.0.0.1'], '127.0.0.1:32171', ['127.0.0.1:32171', '127.0.0.1:32172'],\n+        [('127.0.0.1', 32171), ('127.0.0.1', 32172)])\n+    # check only IPv6 localhost (explicit)\n+    run_bind_test(tmpdir, ['[::1]'], '[::1]', ['[::1]'],\n+        [('::1', defaultport)])\n+    # check both IPv4 and IPv6 localhost (explicit)\n+    run_bind_test(tmpdir, ['127.0.0.1'], '127.0.0.1', ['127.0.0.1', '[::1]'],\n+        [('127.0.0.1', defaultport), ('::1', defaultport)])\n+    # check only non-loopback interface\n+    run_bind_test(tmpdir, [non_loopback_ip], non_loopback_ip, [non_loopback_ip],\n+        [(non_loopback_ip, defaultport)])\n+\n+    # Check that with invalid rpcallowip, we are denied\n+    run_allowip_test(tmpdir, [non_loopback_ip], non_loopback_ip, defaultport)\n+    try:\n+        run_allowip_test(tmpdir, ['1.1.1.1'], non_loopback_ip, defaultport)\n+        assert(not 'Connection not denied by rpcallowip as expected')\n+    except ValueError:\n+        pass\n+\n+def main():\n+    import optparse\n+\n+    parser = optparse.OptionParser(usage=\"%prog [options]\")\n+    parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n+                      help=\"Leave bitcoinds and test.* datadir on exit or error\")\n+    parser.add_option(\"--srcdir\", dest=\"srcdir\", default=\"../../src\",\n+                      help=\"Source directory containing bitcoind/bitcoin-cli (default: %default%)\")\n+    parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n+                      help=\"Root directory for datadirs\")\n+    (options, args) = parser.parse_args()\n+\n+    os.environ['PATH'] = options.srcdir+\":\"+os.environ['PATH']\n+\n+    check_json_precision()\n+\n+    success = False\n+    nodes = []\n+    try:\n+        print(\"Initializing test directory \"+options.tmpdir)\n+        if not os.path.isdir(options.tmpdir):\n+            os.makedirs(options.tmpdir)\n+        initialize_chain(options.tmpdir)\n+\n+        run_test(options.tmpdir)\n+\n+        success = True\n+\n+    except AssertionError as e:\n+        print(\"Assertion failed: \"+e.message)\n+    except Exception as e:\n+        print(\"Unexpected exception caught during testing: \"+str(e))\n+        traceback.print_tb(sys.exc_info()[2])\n+\n+    if not options.nocleanup:\n+        print(\"Cleaning up\")\n+        wait_bitcoinds()\n+        shutil.rmtree(options.tmpdir)\n+\n+    if success:\n+        print(\"Tests successful\")\n+        sys.exit(0)\n+    else:\n+        print(\"Failed\")\n+        sys.exit(1)\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "e8abbfba194efa9313a2117af7a9522b56df7366",
        "filename": "qa/rpc-tests/smartfees.py",
        "status": "added",
        "additions": 142,
        "deletions": 0,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/qa/rpc-tests/smartfees.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/qa/rpc-tests/smartfees.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/smartfees.py?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,142 @@\n+#!/usr/bin/env python\n+\n+#\n+# Test fee estimation code\n+#\n+\n+# Add python-bitcoinrpc to module search path:\n+import os\n+import sys\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n+\n+import json\n+import random\n+import shutil\n+import subprocess\n+import tempfile\n+import traceback\n+\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+\n+\n+def run_test(nodes, test_dir):\n+    nodes.append(start_node(0, test_dir,\n+                            [\"-debug=mempool\", \"-debug=estimatefee\"]))\n+    # Node1 mines small-but-not-tiny blocks, and allows free transactions.\n+    # NOTE: the CreateNewBlock code starts counting block size at 1,000 bytes,\n+    # so blockmaxsize of 2,000 is really just 1,000 bytes (room enough for\n+    # 6 or 7 transactions)\n+    nodes.append(start_node(1, test_dir,\n+                            [\"-blockprioritysize=1500\", \"-blockmaxsize=2000\",\n+                             \"-debug=mempool\", \"-debug=estimatefee\"]))\n+    connect_nodes(nodes[1], 0)\n+\n+    # Node2 is a stingy miner, that\n+    # produces very small blocks (room for only 3 or so transactions)\n+    node2args = [ \"-blockprioritysize=0\", \"-blockmaxsize=1500\",\n+                             \"-debug=mempool\", \"-debug=estimatefee\"]\n+    nodes.append(start_node(2, test_dir, node2args))\n+    connect_nodes(nodes[2], 0)\n+\n+    sync_blocks(nodes)\n+\n+    # Prime the memory pool with pairs of transactions\n+    # (high-priority, random fee and zero-priority, random fee)\n+    min_fee = Decimal(\"0.001\")\n+    fees_per_kb = [];\n+    for i in range(12):\n+        (txid, txhex, fee) = random_zeropri_transaction(nodes, Decimal(\"1.1\"),\n+                                                        min_fee, min_fee, 20)\n+        tx_kbytes = (len(txhex)/2)/1000.0\n+        fees_per_kb.append(float(fee)/tx_kbytes)\n+\n+    # Mine blocks with node2 until the memory pool clears:\n+    count_start = nodes[2].getblockcount()\n+    while len(nodes[2].getrawmempool()) > 0:\n+        nodes[2].setgenerate(True, 1)\n+        sync_blocks(nodes)\n+\n+    all_estimates = [ nodes[0].estimatefee(i) for i in range(1,20) ]\n+    print(\"Fee estimates, super-stingy miner: \"+str([str(e) for e in all_estimates]))\n+\n+    # Estimates should be within the bounds of what transactions fees actually were:\n+    delta = 1.0e-6 # account for rounding error\n+    for e in filter(lambda x: x >= 0, all_estimates):\n+        if float(e)+delta < min(fees_per_kb) or float(e)-delta > max(fees_per_kb):\n+            raise AssertionError(\"Estimated fee (%f) out of range (%f,%f)\"%(float(e), min_fee_kb, max_fee_kb))\n+\n+    # Generate transactions while mining 30 more blocks, this time with node1:\n+    for i in range(30):\n+        for j in range(random.randrange(6-4,6+4)):\n+            (txid, txhex, fee) = random_transaction(nodes, Decimal(\"1.1\"),\n+                                                    Decimal(\"0.0\"), min_fee, 20)\n+            tx_kbytes = (len(txhex)/2)/1000.0\n+            fees_per_kb.append(float(fee)/tx_kbytes)\n+        nodes[1].setgenerate(True, 1)\n+        sync_blocks(nodes)\n+\n+    all_estimates = [ nodes[0].estimatefee(i) for i in range(1,20) ]\n+    print(\"Fee estimates, more generous miner: \"+str([ str(e) for e in all_estimates]))\n+    for e in filter(lambda x: x >= 0, all_estimates):\n+        if float(e)+delta < min(fees_per_kb) or float(e)-delta > max(fees_per_kb):\n+            raise AssertionError(\"Estimated fee (%f) out of range (%f,%f)\"%(float(e), min_fee_kb, max_fee_kb))\n+\n+    # Finish by mining a normal-sized block:\n+    while len(nodes[0].getrawmempool()) > 0:\n+        nodes[0].setgenerate(True, 1)\n+        sync_blocks(nodes)\n+\n+    final_estimates = [ nodes[0].estimatefee(i) for i in range(1,20) ]\n+    print(\"Final fee estimates: \"+str([ str(e) for e in final_estimates]))\n+\n+def main():\n+    import optparse\n+\n+    parser = optparse.OptionParser(usage=\"%prog [options]\")\n+    parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n+                      help=\"Leave bitcoinds and test.* datadir on exit or error\")\n+    parser.add_option(\"--srcdir\", dest=\"srcdir\", default=\"../../src\",\n+                      help=\"Source directory containing bitcoind/bitcoin-cli (default: %default%)\")\n+    parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n+                      help=\"Root directory for datadirs\")\n+    (options, args) = parser.parse_args()\n+\n+    os.environ['PATH'] = options.srcdir+\":\"+os.environ['PATH']\n+\n+    check_json_precision()\n+\n+    success = False\n+    nodes = []\n+    try:\n+        print(\"Initializing test directory \"+options.tmpdir)\n+        print(\"  node0 running at: 127.0.0.1:%d\"%(p2p_port(0)))\n+        if not os.path.isdir(options.tmpdir):\n+            os.makedirs(options.tmpdir)\n+        initialize_chain(options.tmpdir)\n+\n+        run_test(nodes, options.tmpdir)\n+\n+        success = True\n+\n+    except AssertionError as e:\n+        print(\"Assertion failed: \"+e.message)\n+    except Exception as e:\n+        print(\"Unexpected exception caught during testing: \"+str(e))\n+        traceback.print_tb(sys.exc_info()[2])\n+\n+    if not options.nocleanup:\n+        print(\"Cleaning up\")\n+        stop_nodes(nodes)\n+        wait_bitcoinds()\n+        shutil.rmtree(options.tmpdir)\n+\n+    if success:\n+        print(\"Tests successful\")\n+        sys.exit(0)\n+    else:\n+        print(\"Failed\")\n+        sys.exit(1)\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "27c9f778f63d86a851c77b45569b74fd728ad267",
        "filename": "qa/rpc-tests/util.py",
        "status": "modified",
        "additions": 169,
        "deletions": 27,
        "changes": 196,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/qa/rpc-tests/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/qa/rpc-tests/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.py?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -12,15 +12,19 @@\n \n from decimal import Decimal\n import json\n+import random\n import shutil\n import subprocess\n import time\n+import re\n \n from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n from util import *\n \n-START_P2P_PORT=11000\n-START_RPC_PORT=11100\n+def p2p_port(n):\n+    return 11000 + n + os.getpid()%999\n+def rpc_port(n):\n+    return 12000 + n + os.getpid()%999\n \n def check_json_precision():\n     \"\"\"Make sure json library being used does not lose precision converting BTC values\"\"\"\n@@ -57,6 +61,18 @@ def sync_mempools(rpc_connections):\n \n bitcoind_processes = []\n \n+def initialize_datadir(dir, n):\n+    datadir = os.path.join(dir, \"node\"+str(n))\n+    if not os.path.isdir(datadir):\n+        os.makedirs(datadir)\n+    with open(os.path.join(datadir, \"bitcoin.conf\"), 'w') as f:\n+        f.write(\"regtest=1\\n\");\n+        f.write(\"rpcuser=rt\\n\");\n+        f.write(\"rpcpassword=rt\\n\");\n+        f.write(\"port=\"+str(p2p_port(n))+\"\\n\");\n+        f.write(\"rpcport=\"+str(rpc_port(n))+\"\\n\");\n+    return datadir\n+\n def initialize_chain(test_dir):\n     \"\"\"\n     Create (or copy from cache) a 200-block-long chain and\n@@ -68,25 +84,18 @@ def initialize_chain(test_dir):\n         devnull = open(\"/dev/null\", \"w+\")\n         # Create cache directories, run bitcoinds:\n         for i in range(4):\n-            datadir = os.path.join(\"cache\", \"node\"+str(i))\n-            os.makedirs(datadir)\n-            with open(os.path.join(datadir, \"bitcoin.conf\"), 'w') as f:\n-                f.write(\"regtest=1\\n\");\n-                f.write(\"rpcuser=rt\\n\");\n-                f.write(\"rpcpassword=rt\\n\");\n-                f.write(\"port=\"+str(START_P2P_PORT+i)+\"\\n\");\n-                f.write(\"rpcport=\"+str(START_RPC_PORT+i)+\"\\n\");\n+            datadir=initialize_datadir(\"cache\", i)\n             args = [ \"bitcoind\", \"-keypool=1\", \"-datadir=\"+datadir ]\n             if i > 0:\n-                args.append(\"-connect=127.0.0.1:\"+str(START_P2P_PORT))\n+                args.append(\"-connect=127.0.0.1:\"+str(p2p_port(0)))\n             bitcoind_processes.append(subprocess.Popen(args))\n             subprocess.check_call([ \"bitcoin-cli\", \"-datadir=\"+datadir,\n                                     \"-rpcwait\", \"getblockcount\"], stdout=devnull)\n         devnull.close()\n         rpcs = []\n         for i in range(4):\n             try:\n-                url = \"http://rt:rt@127.0.0.1:%d\"%(START_RPC_PORT+i,)\n+                url = \"http://rt:rt@127.0.0.1:%d\"%(rpc_port(i),)\n                 rpcs.append(AuthServiceProxy(url))\n             except:\n                 sys.stderr.write(\"Error connecting to \"+url+\"\\n\")\n@@ -111,23 +120,50 @@ def initialize_chain(test_dir):\n         from_dir = os.path.join(\"cache\", \"node\"+str(i))\n         to_dir = os.path.join(test_dir,  \"node\"+str(i))\n         shutil.copytree(from_dir, to_dir)\n+        initialize_datadir(test_dir, i) # Overwrite port/rpcport in bitcoin.conf\n+\n+def _rpchost_to_args(rpchost):\n+    '''Convert optional IP:port spec to rpcconnect/rpcport args'''\n+    if rpchost is None:\n+        return []\n+\n+    match = re.match('(\\[[0-9a-fA-f:]+\\]|[^:]+)(?::([0-9]+))?$', rpchost)\n+    if not match:\n+        raise ValueError('Invalid RPC host spec ' + rpchost)\n+\n+    rpcconnect = match.group(1)\n+    rpcport = match.group(2)\n+\n+    if rpcconnect.startswith('['): # remove IPv6 [...] wrapping\n+        rpcconnect = rpcconnect[1:-1]\n \n-def start_nodes(num_nodes, dir):\n-    # Start bitcoinds, and wait for RPC interface to be up and running:\n+    rv = ['-rpcconnect=' + rpcconnect]\n+    if rpcport:\n+        rv += ['-rpcport=' + rpcport]\n+    return rv\n+\n+def start_node(i, dir, extra_args=None, rpchost=None):\n+    \"\"\"\n+    Start a bitcoind and return RPC connection to it\n+    \"\"\"\n+    datadir = os.path.join(dir, \"node\"+str(i))\n+    args = [ \"bitcoind\", \"-datadir=\"+datadir, \"-keypool=1\" ]\n+    if extra_args is not None: args.extend(extra_args)\n+    bitcoind_processes.append(subprocess.Popen(args))\n     devnull = open(\"/dev/null\", \"w+\")\n-    for i in range(num_nodes):\n-        datadir = os.path.join(dir, \"node\"+str(i))\n-        args = [ \"bitcoind\", \"-datadir=\"+datadir ]\n-        bitcoind_processes.append(subprocess.Popen(args))\n-        subprocess.check_call([ \"bitcoin-cli\", \"-datadir=\"+datadir,\n-                                  \"-rpcwait\", \"getblockcount\"], stdout=devnull)\n+    subprocess.check_call([ \"bitcoin-cli\", \"-datadir=\"+datadir] +\n+                          _rpchost_to_args(rpchost)  +\n+                          [\"-rpcwait\", \"getblockcount\"], stdout=devnull)\n     devnull.close()\n-    # Create&return JSON-RPC connections\n-    rpc_connections = []\n-    for i in range(num_nodes):\n-        url = \"http://rt:rt@127.0.0.1:%d\"%(START_RPC_PORT+i,)\n-        rpc_connections.append(AuthServiceProxy(url))\n-    return rpc_connections\n+    url = \"http://rt:rt@%s:%d\" % (rpchost or '127.0.0.1', rpc_port(i))\n+    return AuthServiceProxy(url)\n+\n+def start_nodes(num_nodes, dir, extra_args=None, rpchost=None):\n+    \"\"\"\n+    Start multiple bitcoinds, return RPC connections to them\n+    \"\"\"\n+    if extra_args is None: extra_args = [ None for i in range(num_nodes) ]\n+    return [ start_node(i, dir, extra_args[i], rpchost) for i in range(num_nodes) ]\n \n def debug_log(dir, n_node):\n     return os.path.join(dir, \"node\"+str(n_node), \"regtest\", \"debug.log\")\n@@ -144,8 +180,114 @@ def wait_bitcoinds():\n     del bitcoind_processes[:]\n \n def connect_nodes(from_connection, node_num):\n-    ip_port = \"127.0.0.1:\"+str(START_P2P_PORT+node_num)\n+    ip_port = \"127.0.0.1:\"+str(p2p_port(node_num))\n     from_connection.addnode(ip_port, \"onetry\")\n+    # poll until version handshake complete to avoid race conditions\n+    # with transaction relaying\n+    while any(peer['version'] == 0 for peer in from_connection.getpeerinfo()):\n+        time.sleep(0.1)\n+\n+def find_output(node, txid, amount):\n+    \"\"\"\n+    Return index to output of txid with value amount\n+    Raises exception if there is none.\n+    \"\"\"\n+    txdata = node.getrawtransaction(txid, 1)\n+    for i in range(len(txdata[\"vout\"])):\n+        if txdata[\"vout\"][i][\"value\"] == amount:\n+            return i\n+    raise RuntimeError(\"find_output txid %s : %s not found\"%(txid,str(amount)))\n+\n+def gather_inputs(from_node, amount_needed):\n+    \"\"\"\n+    Return a random set of unspent txouts that are enough to pay amount_needed\n+    \"\"\"\n+    utxo = from_node.listunspent(1)\n+    random.shuffle(utxo)\n+    inputs = []\n+    total_in = Decimal(\"0.00000000\")\n+    while total_in < amount_needed and len(utxo) > 0:\n+        t = utxo.pop()\n+        total_in += t[\"amount\"]\n+        inputs.append({ \"txid\" : t[\"txid\"], \"vout\" : t[\"vout\"], \"address\" : t[\"address\"] } )\n+    if total_in < amount_needed:\n+        raise RuntimeError(\"Insufficient funds: need %d, have %d\"%(amount+fee*2, total_in))\n+    return (total_in, inputs)\n+\n+def make_change(from_node, amount_in, amount_out, fee):\n+    \"\"\"\n+    Create change output(s), return them\n+    \"\"\"\n+    outputs = {}\n+    amount = amount_out+fee\n+    change = amount_in - amount\n+    if change > amount*2:\n+        # Create an extra change output to break up big inputs\n+        outputs[from_node.getnewaddress()] = float(change/2)\n+        change = change/2\n+    if change > 0:\n+        outputs[from_node.getnewaddress()] = float(change)\n+    return outputs\n+\n+def send_zeropri_transaction(from_node, to_node, amount, fee):\n+    \"\"\"\n+    Create&broadcast a zero-priority transaction.\n+    Returns (txid, hex-encoded-txdata)\n+    Ensures transaction is zero-priority by first creating a send-to-self,\n+    then using it's output\n+    \"\"\"\n+\n+    # Create a send-to-self with confirmed inputs:\n+    self_address = from_node.getnewaddress()\n+    (total_in, inputs) = gather_inputs(from_node, amount+fee*2)\n+    outputs = make_change(from_node, total_in, amount+fee, fee)\n+    outputs[self_address] = float(amount+fee)\n+\n+    self_rawtx = from_node.createrawtransaction(inputs, outputs)\n+    self_signresult = from_node.signrawtransaction(self_rawtx)\n+    self_txid = from_node.sendrawtransaction(self_signresult[\"hex\"], True)\n+\n+    vout = find_output(from_node, self_txid, amount+fee)\n+    # Now immediately spend the output to create a 1-input, 1-output\n+    # zero-priority transaction:\n+    inputs = [ { \"txid\" : self_txid, \"vout\" : vout } ]\n+    outputs = { to_node.getnewaddress() : float(amount) }\n+\n+    rawtx = from_node.createrawtransaction(inputs, outputs)\n+    signresult = from_node.signrawtransaction(rawtx)\n+    txid = from_node.sendrawtransaction(signresult[\"hex\"], True)\n+\n+    return (txid, signresult[\"hex\"])\n+\n+def random_zeropri_transaction(nodes, amount, min_fee, fee_increment, fee_variants):\n+    \"\"\"\n+    Create a random zero-priority transaction.\n+    Returns (txid, hex-encoded-transaction-data, fee)\n+    \"\"\"\n+    from_node = random.choice(nodes)\n+    to_node = random.choice(nodes)\n+    fee = min_fee + fee_increment*random.randint(0,fee_variants)\n+    (txid, txhex) = send_zeropri_transaction(from_node, to_node, amount, fee)\n+    return (txid, txhex, fee)\n+\n+def random_transaction(nodes, amount, min_fee, fee_increment, fee_variants):\n+    \"\"\"\n+    Create a random transaction.\n+    Returns (txid, hex-encoded-transaction-data, fee)\n+    \"\"\"\n+    from_node = random.choice(nodes)\n+    to_node = random.choice(nodes)\n+    fee = min_fee + fee_increment*random.randint(0,fee_variants)\n+\n+    (total_in, inputs) = gather_inputs(from_node, amount+fee)\n+    outputs = make_change(from_node, total_in, amount, fee)\n+    outputs[to_node.getnewaddress()] = float(amount)\n+\n+    rawtx = from_node.createrawtransaction(inputs, outputs)\n+    signresult = from_node.signrawtransaction(rawtx)\n+    txid = from_node.sendrawtransaction(signresult[\"hex\"], True)\n+\n+    return (txid, signresult[\"hex\"], fee)\n \n def assert_equal(thing1, thing2):\n     if thing1 != thing2:"
      },
      {
        "sha": "b726ef627fac4139a690f058df3d25e2aa617bb9",
        "filename": "qa/rpc-tests/util.sh",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/qa/rpc-tests/util.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/qa/rpc-tests/util.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.sh?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -38,6 +38,10 @@ function AssertEqual {\n   if (( $( echo \"$1 == $2\" | bc ) == 0 ))\n   then\n     echoerr \"AssertEqual: $1 != $2\"\n+    declare -f CleanUp > /dev/null 2>&1\n+    if [[ $? -eq 0 ]] ; then\n+        CleanUp\n+    fi\n     exit 1\n   fi\n }\n@@ -49,6 +53,10 @@ function CheckBalance {\n   if (( $( echo \"$B == $EXPECT\" | bc ) == 0 ))\n   then\n     echoerr \"bad balance: $B (expected $2)\"\n+    declare -f CleanUp > /dev/null 2>&1\n+    if [[ $? -eq 0 ]] ; then\n+        CleanUp\n+    fi\n     exit 1\n   fi\n }"
      },
      {
        "sha": "bc52a7dacd205bc1364f33992ccc2b5ace1fe7b6",
        "filename": "qa/rpc-tests/zapwallettxes.sh",
        "status": "added",
        "additions": 161,
        "deletions": 0,
        "changes": 161,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/qa/rpc-tests/zapwallettxes.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/qa/rpc-tests/zapwallettxes.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zapwallettxes.sh?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,161 @@\n+#!/usr/bin/env bash\n+\n+# Test -zapwallettxes=<mode>\n+\n+if [ $# -lt 1 ]; then\n+        echo \"Usage: $0 path_to_binaries\"\n+        echo \"e.g. $0 ../../src\"\n+        exit 1\n+fi\n+\n+set -f\n+\n+BITCOIND=${1}/bitcoind\n+CLI=${1}/bitcoin-cli\n+\n+DIR=\"${BASH_SOURCE%/*}\"\n+SENDANDWAIT=\"${DIR}/send.sh\"\n+if [[ ! -d \"$DIR\" ]]; then DIR=\"$PWD\"; fi\n+. \"$DIR/util.sh\"\n+\n+D=$(mktemp -d test.XXXXX)\n+\n+D1=${D}/node1\n+CreateDataDir \"$D1\" port=11000 rpcport=11001\n+B1ARGS=\"-datadir=$D1\"\n+$BITCOIND $B1ARGS &\n+B1PID=$!\n+\n+D2=${D}/node2\n+CreateDataDir \"$D2\" port=11010 rpcport=11011\n+B2ARGS=\"-datadir=$D2\"\n+$BITCOIND $B2ARGS &\n+B2PID=$!\n+\n+function CleanUp {\n+$CLI $B2ARGS stop > /dev/null 2>&1\n+wait $B2PID\n+$CLI $B1ARGS stop > /dev/null 2>&1\n+wait $B1PID\n+\n+rm -rf $D\n+}\n+\n+# 110 blocks, 10 mature == 500 XBT\n+$CLI $B1ARGS setgenerate true 110\n+$CLI $B2ARGS setgenerate true 110\n+\n+CheckBalance \"$B1ARGS\" 500\n+CheckBalance \"$B2ARGS\" 500\n+\n+# Send 10 XBT\n+TXID1_DEFAULT=$($CLI $B1ARGS sendtoaddress \"mrhz5ZgSF3C1BSdyCKt3gEdhKoRL5BNfJV\" 10)\n+TXID2_DEFAULT=$($CLI $B2ARGS sendtoaddress \"mrhz5ZgSF3C1BSdyCKt3gEdhKoRL5BNfJV\" 10)\n+\n+CheckBalance $B1ARGS 490\n+CheckBalance $B2ARGS 490\n+\n+# Move 10 XBT to testaccount\n+TMP=$($CLI $B1ARGS move \"\" \"testaccount\" 10)\n+TMP=$($CLI $B2ARGS move \"\" \"testaccount\" 10)\n+\n+CheckBalance $B1ARGS 10 \"testaccount\"\n+CheckBalance $B2ARGS 10 \"testaccount\"\n+\n+# Send 1 XBT from testaccount\n+TXID1_TESTACCOUNT=$($CLI $B1ARGS sendfrom \"testaccount\" \"mrhz5ZgSF3C1BSdyCKt3gEdhKoRL5BNfJV\" 1)\n+TXID2_TESTACCOUNT=$($CLI $B2ARGS sendfrom \"testaccount\" \"mrhz5ZgSF3C1BSdyCKt3gEdhKoRL5BNfJV\" 1)\n+\n+CheckBalance $B1ARGS 9 \"testaccount\"\n+CheckBalance $B2ARGS 9 \"testaccount\"\n+\n+CheckBalance $B1ARGS 489\n+CheckBalance $B2ARGS 489\n+\n+# Confirm transactions\n+$CLI $B1ARGS setgenerate true 1\n+$CLI $B2ARGS setgenerate true 1\n+\n+# Create unconfirmed transaction\n+TXID1_UNCONFIRMED=$($CLI $B1ARGS sendtoaddress \"mrhz5ZgSF3C1BSdyCKt3gEdhKoRL5BNfJV\" 1)\n+TXID2_UNCONFIRMED=$($CLI $B2ARGS sendtoaddress \"mrhz5ZgSF3C1BSdyCKt3gEdhKoRL5BNfJV\" 1)\n+\n+# check balance (we created another 50 and spent 1 in the meantime)\n+CheckBalance $B1ARGS 538\n+CheckBalance $B2ARGS 538\n+\n+# Safety check, if unconfirmed transactions are there\n+$CLI $B1ARGS gettransaction $TXID1_UNCONFIRMED > /dev/null 2>&1\n+if [[ $? -ne 0 ]] ; then\n+    echoerr \"gettransaction1_1: $TXID1_UNCONFIRMED failed\"\n+    CleanUp\n+    exit 1\n+fi\n+$CLI $B2ARGS gettransaction $TXID2_UNCONFIRMED > /dev/null 2>&1\n+if [[ $? -ne 0 ]] ; then\n+    echoerr \"gettransaction2_1: $TXID2_UNCONFIRMED failed\"\n+    CleanUp\n+    exit 1\n+fi\n+\n+# stop nodes\n+$CLI $B2ARGS stop > /dev/null 2>&1\n+wait $B2PID\n+$CLI $B1ARGS stop > /dev/null 2>&1\n+wait $B1PID\n+\n+# restart nodes with -zapwallettxes\n+$BITCOIND -zapwallettxes=1 $B1ARGS &\n+B1PID=$!\n+$BITCOIND -zapwallettxes=2 $B2ARGS &\n+B2PID=$!\n+\n+# check if confirmed transactions are there\n+$CLI $B1ARGS gettransaction $TXID1_DEFAULT > /dev/null 2>&1\n+if [[ $? -ne 0 ]] ; then\n+    echoerr \"check confirmed transaction 1: $TXID1_DEFAULT failed\"\n+    CleanUp\n+    exit 1\n+fi\n+$CLI $B2ARGS gettransaction $TXID2_DEFAULT > /dev/null 2>&1\n+if [[ $? -ne 0 ]] ; then\n+    echoerr \"check confirmed transaction 2: $TXID2_DEFAULT failed\"\n+    CleanUp\n+    exit 1\n+fi\n+$CLI $B1ARGS gettransaction $TXID1_TESTACCOUNT > /dev/null 2>&1\n+if [[ $? -ne 0 ]] ; then\n+    echoerr \"check confirmed transaction 3: $TXID1_TESTACCOUNT failed\"\n+    CleanUp\n+    exit 1\n+fi\n+$CLI $B2ARGS gettransaction $TXID2_TESTACCOUNT > /dev/null 2>&1\n+if [[ $? -ne 0 ]] ; then\n+    echoerr \"check confirmed transaction 4: $TXID2_TESTACCOUNT failed\"\n+    CleanUp\n+    exit 1\n+fi\n+\n+# check if unconfirmed transaction is gone\n+$CLI $B1ARGS gettransaction $TXID1_UNCONFIRMED > /dev/null 2>&1\n+if [[ $? -eq 0 ]] ; then\n+    echoerr \"check unconfirmed transaction 1: $TXID1_UNCONFIRMED failed\"\n+    CleanUp\n+    exit 1\n+fi\n+$CLI $B2ARGS gettransaction $TXID2_UNCONFIRMED > /dev/null 2>&1\n+if [[ $? -eq 0 ]] ; then\n+    echoerr \"check unconfirmed transaction 2: $TXID2_UNCONFIRMED failed\"\n+    CleanUp\n+    exit 1\n+fi\n+\n+# check zapwallet mode 1, testaccount balance must be 9 (keeping transaction metadata)\n+CheckBalance $B1ARGS 9 \"testaccount\"\n+\n+# check zapwallet mode 2, testaccount balance must be 10 (dropping transaction metadata)\n+CheckBalance $B2ARGS 10 \"testaccount\"\n+\n+echo \"Tests successful, cleaning up\"\n+CleanUp\n+exit 0"
      },
      {
        "sha": "0800b3122971c11e8d9c35baacc68249b70ac0be",
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -16,7 +16,7 @@ fi\n DESC=\"\"\n SUFFIX=\"\"\n LAST_COMMIT_DATE=\"\"\n-if [ -e \"$(which git)\" -a -d \".git\" ]; then\n+if [ -e \"$(which git 2>/dev/null)\" -a -d \".git\" ]; then\n     # clean 'dirty' status of touched files that haven't been modified\n     git diff >/dev/null 2>/dev/null \n "
      },
      {
        "sha": "d4bd58513884cca3409ddbce15cdb3c381490bfb",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -7,8 +7,9 @@\n import glob\n import operator\n import os\n+import sys\n \n-OUT_CPP=\"src/qt/bitcoinstrings.cpp\"\n+OUT_CPP=\"qt/bitcoinstrings.cpp\"\n EMPTY=['\"\"']\n \n def parse_po(text):\n@@ -47,7 +48,7 @@ def parse_po(text):\n \n     return messages\n \n-files = glob.glob('src/*.cpp') + glob.glob('src/*.h') \n+files = sys.argv[1:]\n \n # xgettext -n --keyword=_ $FILES\n XGETTEXT=os.getenv('XGETTEXT', 'xgettext')"
      },
      {
        "sha": "e2a62c9699ee8941be9376af2c5dbc760b24bf35",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 136,
        "deletions": 36,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,16 +1,54 @@\n-include Makefile.include\n+AM_CPPFLAGS =  $(INCLUDES)\n+AM_LDFLAGS = $(PTHREAD_CFLAGS)\n \n-AM_CPPFLAGS += -I$(builddir)\n+if USE_LIBSECP256K1\n+secp256k1/libsecp256k1.la: $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n+\t@$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)\n+endif\n+\n+if EMBEDDED_LEVELDB\n+LEVELDB_CPPFLAGS += -I$(srcdir)/leveldb/include\n+LEVELDB_CPPFLAGS += -I$(srcdir)/leveldb/helpers/memenv\n+LIBLEVELDB += $(builddir)/leveldb/libleveldb.a\n+LIBMEMENV  += $(builddir)/leveldb/libmemenv.a\n+\n+# NOTE: This dependency is not strictly necessary, but without it make may try to build both in parallel, which breaks the LevelDB build system in a race\n+$(LIBLEVELDB): $(LIBMEMENV)\n+\n+$(LIBLEVELDB) $(LIBMEMENV):\n+\t@echo \"Building LevelDB ...\" && $(MAKE) -C $(@D) $(@F) CXX=\"$(CXX)\" \\\n+\t  CC=\"$(CC)\" PLATFORM=$(TARGET_OS) AR=\"$(AR)\" $(LEVELDB_TARGET_FLAGS) \\\n+          OPT=\"$(CXXFLAGS) $(CPPFLAGS)\"\n+endif\n+\n+BITCOIN_CONFIG_INCLUDES=-I$(builddir)/config\n+BITCOIN_INCLUDES=-I$(builddir) -I$(builddir)/obj $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS)\n+\n+if USE_LIBSECP256K1\n+BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n+endif\n+\n+LIBBITCOIN_SERVER=libbitcoin_server.a\n+LIBBITCOIN_WALLET=libbitcoin_wallet.a\n+LIBBITCOIN_COMMON=libbitcoin_common.a\n+LIBBITCOIN_CLI=libbitcoin_cli.a\n+LIBBITCOIN_UTIL=libbitcoin_util.a\n+LIBBITCOIN_CRYPTO=crypto/libbitcoin_crypto.a\n+LIBBITCOINQT=qt/libbitcoinqt.a\n \n noinst_LIBRARIES = \\\n   libbitcoin_server.a \\\n   libbitcoin_common.a \\\n-  libbitcoin_cli.a\n+  libbitcoin_cli.a \\\n+  libbitcoin_util.a \\\n+  crypto/libbitcoin_crypto.a\n if ENABLE_WALLET\n+BITCOIN_INCLUDES += $(BDB_CPPFLAGS)\n noinst_LIBRARIES += libbitcoin_wallet.a\n endif\n \n bin_PROGRAMS =\n+TESTS =\n \n if BUILD_BITCOIND\n   bin_PROGRAMS += bitcoind\n@@ -20,17 +58,16 @@ if BUILD_BITCOIN_CLI\n   bin_PROGRAMS += bitcoin-cli\n endif\n \n-SUBDIRS = . $(BUILD_QT) $(BUILD_TEST)\n-DIST_SUBDIRS = . qt test\n .PHONY: FORCE\n # bitcoin core #\n BITCOIN_CORE_H = \\\n   addrman.h \\\n   alert.h \\\n   allocators.h \\\n-  base58.h bignum.h \\\n+  base58.h \\\n   bloom.h \\\n   chainparams.h \\\n+  chainparamsbase.h \\\n   checkpoints.h \\\n   checkqueue.h \\\n   clientversion.h \\\n@@ -52,6 +89,7 @@ BITCOIN_CORE_H = \\\n   netbase.h \\\n   net.h \\\n   noui.h \\\n+  pow.h \\\n   protocol.h \\\n   rpcclient.h \\\n   rpcprotocol.h \\\n@@ -60,6 +98,7 @@ BITCOIN_CORE_H = \\\n   serialize.h \\\n   sync.h \\\n   threadsafety.h \\\n+  timedata.h \\\n   tinyformat.h \\\n   txdb.h \\\n   txmempool.h \\\n@@ -68,7 +107,8 @@ BITCOIN_CORE_H = \\\n   util.h \\\n   version.h \\\n   walletdb.h \\\n-  wallet.h\n+  wallet.h \\\n+  compat/sanity.h\n \n JSON_H = \\\n   json/json_spirit.h \\\n@@ -82,35 +122,40 @@ JSON_H = \\\n   json/json_spirit_writer_template.h\n \n obj/build.h: FORCE\n-\t@$(MKDIR_P) $(abs_top_builddir)/src/obj\n+\t@$(MKDIR_P) $(builddir)/obj\n \t@$(top_srcdir)/share/genbuild.sh $(abs_top_builddir)/src/obj/build.h \\\n \t  $(abs_top_srcdir)\n-version.o: obj/build.h\n+libbitcoin_util_a-version.$(OBJEXT): obj/build.h\n \n+# server: shared between bitcoind and bitcoin-qt\n+libbitcoin_server_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n libbitcoin_server_a_SOURCES = \\\n   addrman.cpp \\\n   alert.cpp \\\n   bloom.cpp \\\n   checkpoints.cpp \\\n-  coins.cpp \\\n   init.cpp \\\n-  keystore.cpp \\\n   leveldbwrapper.cpp \\\n   main.cpp \\\n   miner.cpp \\\n   net.cpp \\\n   noui.cpp \\\n+  pow.cpp \\\n   rpcblockchain.cpp \\\n   rpcmining.cpp \\\n   rpcmisc.cpp \\\n   rpcnet.cpp \\\n   rpcrawtransaction.cpp \\\n   rpcserver.cpp \\\n+  timedata.cpp \\\n   txdb.cpp \\\n   txmempool.cpp \\\n   $(JSON_H) \\\n   $(BITCOIN_CORE_H)\n \n+# wallet: shared between bitcoind and bitcoin-qt, but only linked\n+# when wallet enabled\n+libbitcoin_wallet_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n libbitcoin_wallet_a_SOURCES = \\\n   db.cpp \\\n   crypter.cpp \\\n@@ -120,41 +165,74 @@ libbitcoin_wallet_a_SOURCES = \\\n   walletdb.cpp \\\n   $(BITCOIN_CORE_H)\n \n+# crypto primitives library\n+crypto_libbitcoin_crypto_a_CPPFLAGS = $(BITCOIN_CONFIG_INCLUDES)\n+crypto_libbitcoin_crypto_a_SOURCES = \\\n+  crypto/sha1.cpp \\\n+  crypto/sha2.cpp \\\n+  crypto/ripemd160.cpp \\\n+  crypto/common.h \\\n+  crypto/sha2.h \\\n+  crypto/sha1.h \\\n+  crypto/ripemd160.h\n+\n+# common: shared between bitcoind, and bitcoin-qt and non-server tools\n+libbitcoin_common_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n libbitcoin_common_a_SOURCES = \\\n-  base58.cpp \\\n   allocators.cpp \\\n+  base58.cpp \\\n   chainparams.cpp \\\n+  coins.cpp \\\n   core.cpp \\\n   hash.cpp \\\n   key.cpp \\\n+  keystore.cpp \\\n   netbase.cpp \\\n   protocol.cpp \\\n-  rpcprotocol.cpp \\\n   script.cpp \\\n+  $(BITCOIN_CORE_H)\n+\n+# util: shared between all executables.\n+# This library *must* be included to make sure that the glibc\n+# backward-compatibility objects and their sanity checks are linked.\n+libbitcoin_util_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n+libbitcoin_util_a_SOURCES = \\\n+  chainparamsbase.cpp \\\n+  rpcprotocol.cpp \\\n   sync.cpp \\\n+  uint256.cpp \\\n   util.cpp \\\n   version.cpp \\\n+  compat/glibc_sanity.cpp \\\n+  compat/glibcxx_sanity.cpp \\\n   $(BITCOIN_CORE_H)\n \n if GLIBC_BACK_COMPAT\n-libbitcoin_common_a_SOURCES += compat/glibc_compat.cpp\n-libbitcoin_common_a_SOURCES += compat/glibcxx_compat.cpp\n+libbitcoin_util_a_SOURCES += compat/glibc_compat.cpp\n+libbitcoin_util_a_SOURCES += compat/glibcxx_compat.cpp\n endif\n \n+# cli: shared between bitcoin-cli and bitcoin-qt\n libbitcoin_cli_a_SOURCES = \\\n   rpcclient.cpp \\\n   $(BITCOIN_CORE_H)\n \n-nodist_libbitcoin_common_a_SOURCES = $(top_srcdir)/src/obj/build.h\n+nodist_libbitcoin_util_a_SOURCES = $(srcdir)/obj/build.h\n #\n \n # bitcoind binary #\n bitcoind_LDADD = \\\n-  libbitcoin_server.a \\\n-  libbitcoin_cli.a \\\n-  libbitcoin_common.a \\\n+  $(LIBBITCOIN_SERVER) \\\n+  $(LIBBITCOIN_COMMON) \\\n+  $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CRYPTO) \\\n   $(LIBLEVELDB) \\\n   $(LIBMEMENV)\n+\n+if USE_LIBSECP256K1\n+  bitcoind_LDADD += secp256k1/libsecp256k1.la\n+endif\n+\n if ENABLE_WALLET\n bitcoind_LDADD += libbitcoin_wallet.a\n endif\n@@ -165,39 +243,61 @@ if TARGET_WINDOWS\n bitcoind_SOURCES += bitcoind-res.rc\n endif\n \n-AM_CPPFLAGS += $(BDB_CPPFLAGS)\n bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS)\n+bitcoind_CPPFLAGS = $(BITCOIN_INCLUDES)\n \n # bitcoin-cli binary #\n bitcoin_cli_LDADD = \\\n-  libbitcoin_cli.a \\\n-  libbitcoin_common.a \\\n+  $(LIBBITCOIN_CLI) \\\n+  $(LIBBITCOIN_COMMON) \\\n+  $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CRYPTO) \\\n   $(BOOST_LIBS)\n-bitcoin_cli_SOURCES = bitcoin-cli.cpp\n+bitcoin_cli_SOURCES = \\\n+  bitcoin-cli.cpp\n+\n+if USE_LIBSECP256K1\n+  bitcoin_cli_LDADD += secp256k1/libsecp256k1.la\n+endif\n+bitcoin_cli_CPPFLAGS = $(BITCOIN_INCLUDES)\n #\n \n if TARGET_WINDOWS\n bitcoin_cli_SOURCES += bitcoin-cli-res.rc\n endif\n \n-# NOTE: This dependency is not strictly necessary, but without it make may try to build both in parallel, which breaks the LevelDB build system in a race\n-leveldb/libleveldb.a: leveldb/libmemenv.a\n-\n-leveldb/%.a:\n-\t@echo \"Building LevelDB ...\" && $(MAKE) -C $(@D) $(@F) CXX=\"$(CXX)\" \\\n-\t  CC=\"$(CC)\" PLATFORM=$(TARGET_OS) AR=\"$(AR)\" $(LEVELDB_TARGET_FLAGS) \\\n-\t  OPT=\"$(CXXFLAGS) $(CPPFLAGS)\"\n-\n-qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_cli_a_SOURCES)\n-\t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n-\t@cd $(top_srcdir); XGETTEXT=$(XGETTEXT) share/qt/extract_strings_qt.py\n-\n CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno\n \n DISTCLEANFILES = obj/build.h\n \n-EXTRA_DIST = leveldb Makefile.include\n+EXTRA_DIST = leveldb secp256k1\n \n clean-local:\n \t-$(MAKE) -C leveldb clean\n+\t-$(MAKE) -C secp256k1 clean\n \trm -f leveldb/*/*.gcno leveldb/helpers/memenv/*.gcno\n+\t-rm -f config.h\n+\n+.rc.o:\n+\t@test -f $(WINDRES)\n+\t$(AM_V_GEN) $(WINDRES) -i $< -o $@\n+\n+.mm.o:\n+\t$(AM_V_CXX) $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n+\t  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<\n+\n+%.pb.cc %.pb.h: %.proto\n+\t@test -f $(PROTOC)\n+\t$(AM_V_GEN) $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)\n+\n+if ENABLE_TESTS\n+include Makefile.test.include\n+endif\n+\n+if ENABLE_QT\n+include Makefile.qt.include\n+endif\n+\n+if ENABLE_QT_TESTS\n+include Makefile.qttest.include\n+endif"
      },
      {
        "sha": "2fc6cd7775153180d80d266595bb83a613ff9fa9",
        "filename": "src/Makefile.include",
        "status": "removed",
        "additions": 0,
        "deletions": 79,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=2e4fee2ac4824570c1340a8f8fe2aed4580de879",
        "patch": "@@ -1,79 +0,0 @@\n-if EMBEDDED_LEVELDB\n-LEVELDB_CPPFLAGS += -I$(top_srcdir)/src/leveldb/include\n-LEVELDB_CPPFLAGS += -I$(top_srcdir)/src/leveldb/helpers/memenv\n-LIBLEVELDB += $(top_builddir)/src/leveldb/libleveldb.a\n-LIBMEMENV  += $(top_builddir)/src/leveldb/libmemenv.a\n-endif\n-\n-AM_CPPFLAGS =  $(INCLUDES) \\\n-  -I$(top_builddir)/src/obj \\\n-  $(BDB_CPPFLAGS) \\\n-  $(BOOST_CPPFLAGS) $(BOOST_INCLUDES)\n-AM_CPPFLAGS += $(LEVELDB_CPPFLAGS)\n-AM_LDFLAGS = $(PTHREAD_CFLAGS)\n-\n-LIBBITCOIN_SERVER=$(top_builddir)/src/libbitcoin_server.a\n-LIBBITCOIN_WALLET=$(top_builddir)/src/libbitcoin_wallet.a\n-LIBBITCOIN_COMMON=$(top_builddir)/src/libbitcoin_common.a\n-LIBBITCOIN_CLI=$(top_builddir)/src/libbitcoin_cli.a\n-LIBBITCOINQT=$(top_builddir)/src/qt/libbitcoinqt.a\n-\n-$(LIBBITCOIN):\n-\t$(MAKE) -C $(top_builddir)/src $(@F)\n-\n-if EMBEDDED_LEVELDB\n-$(LIBLEVELDB) $(LIBMEMENV):\n-\t$(MAKE) -C $(top_builddir)/src leveldb/$(@F)\n-endif\n-\n-$(LIBBITCOINQT):\n-\t$(MAKE) -C $(top_builddir)/src/qt $(@F)\n-\n-.mm.o:\n-\t$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n-\t  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<\n-\n-.rc.o:\n-\t@test -f $(WINDRES) && $(WINDRES) -i $< -o $@ || \\\n-          echo error: could not build $@\n-\n-ui_%.h: %.ui\n-\t@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)\n-\t@test -f $(UIC) && QT_SELECT=$(QT_SELECT) $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@\n-\t$(SED) -e '/^\\*\\*.*Created:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@{.n,}\n-\t$(SED) -e '/^\\*\\*.*by:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@{.n,}\n-\n-%.moc: %.cpp\n-\tQT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n-\t$(SED) -e '/^\\*\\*.*Created:/d' $@ > $@.n && mv $@{.n,}\n-\t$(SED) -e '/^\\*\\*.*by:/d' $@ > $@.n && mv $@{.n,}\n-\n-moc_%.cpp: %.h\n-\tQT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n-\t$(SED) -e '/^\\*\\*.*Created:/d' $@ > $@.n && mv $@{.n,}\n-\t$(SED) -e '/^\\*\\*.*by:/d' $@ > $@.n && mv $@{.n,}\n-\n-%.qm: %.ts\n-\t@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)\n-\t@test -f $(LRELEASE) && QT_SELECT=$(QT_SELECT) $(LRELEASE) $(abs_srcdir)/$< -qm $(abs_builddir)/$@ || \\\n-\t echo error: could not build $(abs_builddir)/$@\n-\n-%.pb.cc %.pb.h: %.proto\n-\ttest -f $(PROTOC) && $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)  || \\\n-\t  echo error: could not build $@\n-\n-%.json.h: %.json\n-\t@$(MKDIR_P) $(@D)\n-\t@echo \"namespace json_tests{\" > $@\n-\t@echo \"static unsigned const char $(*F)[] = {\" >> $@\n-\t@$(HEXDUMP) -v -e '8/1 \"0x%02x, \"' -e '\"\\n\"' $< | $(SED) -e 's/0x  ,//g' >> $@\n-\t@echo \"};};\" >> $@\n-\t@echo \"Generated $@\"\n-\n-%.raw.h: %.raw\n-\t@$(MKDIR_P) $(@D)\n-\t@echo \"namespace alert_tests{\" > $@\n-\t@echo \"static unsigned const char $(*F)[] = {\" >> $@\n-\t@$(HEXDUMP) -v -e '8/1 \"0x%02x, \"' -e '\"\\n\"' $< | $(SED) -e 's/0x  ,//g' >> $@\n-\t@echo \"};};\" >> $@\n-\t@echo \"Generated $@\""
      },
      {
        "sha": "d97c2d064a99d23a989013f567c15254c43079ca",
        "filename": "src/Makefile.qt.include",
        "status": "added",
        "additions": 417,
        "deletions": 0,
        "changes": 417,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,417 @@\n+bin_PROGRAMS += qt/bitcoin-qt\n+noinst_LIBRARIES += qt/libbitcoinqt.a\n+\n+# bitcoin qt core #\n+QT_TS = \\\n+  qt/locale/bitcoin_ach.ts \\\n+  qt/locale/bitcoin_af_ZA.ts \\\n+  qt/locale/bitcoin_ar.ts \\\n+  qt/locale/bitcoin_be_BY.ts \\\n+  qt/locale/bitcoin_bg.ts \\\n+  qt/locale/bitcoin_bs.ts \\\n+  qt/locale/bitcoin_ca_ES.ts \\\n+  qt/locale/bitcoin_ca.ts \\\n+  qt/locale/bitcoin_ca@valencia.ts \\\n+  qt/locale/bitcoin_cmn.ts \\\n+  qt/locale/bitcoin_cs.ts \\\n+  qt/locale/bitcoin_cy.ts \\\n+  qt/locale/bitcoin_da.ts \\\n+  qt/locale/bitcoin_de.ts \\\n+  qt/locale/bitcoin_el_GR.ts \\\n+  qt/locale/bitcoin_en.ts \\\n+  qt/locale/bitcoin_eo.ts \\\n+  qt/locale/bitcoin_es_CL.ts \\\n+  qt/locale/bitcoin_es_DO.ts \\\n+  qt/locale/bitcoin_es_MX.ts \\\n+  qt/locale/bitcoin_es.ts \\\n+  qt/locale/bitcoin_es_UY.ts \\\n+  qt/locale/bitcoin_et.ts \\\n+  qt/locale/bitcoin_eu_ES.ts \\\n+  qt/locale/bitcoin_fa_IR.ts \\\n+  qt/locale/bitcoin_fa.ts \\\n+  qt/locale/bitcoin_fi.ts \\\n+  qt/locale/bitcoin_fr_CA.ts \\\n+  qt/locale/bitcoin_fr.ts \\\n+  qt/locale/bitcoin_gl.ts \\\n+  qt/locale/bitcoin_gu_IN.ts \\\n+  qt/locale/bitcoin_he.ts \\\n+  qt/locale/bitcoin_hi_IN.ts \\\n+  qt/locale/bitcoin_hr.ts \\\n+  qt/locale/bitcoin_hu.ts \\\n+  qt/locale/bitcoin_id_ID.ts \\\n+  qt/locale/bitcoin_it.ts \\\n+  qt/locale/bitcoin_ja.ts \\\n+  qt/locale/bitcoin_ka.ts \\\n+  qt/locale/bitcoin_kk_KZ.ts \\\n+  qt/locale/bitcoin_ko_KR.ts \\\n+  qt/locale/bitcoin_ky.ts \\\n+  qt/locale/bitcoin_la.ts \\\n+  qt/locale/bitcoin_lt.ts \\\n+  qt/locale/bitcoin_lv_LV.ts \\\n+  qt/locale/bitcoin_mn.ts \\\n+  qt/locale/bitcoin_ms_MY.ts \\\n+  qt/locale/bitcoin_nb.ts \\\n+  qt/locale/bitcoin_nl.ts \\\n+  qt/locale/bitcoin_pam.ts \\\n+  qt/locale/bitcoin_pl.ts \\\n+  qt/locale/bitcoin_pt_BR.ts \\\n+  qt/locale/bitcoin_pt_PT.ts \\\n+  qt/locale/bitcoin_ro_RO.ts \\\n+  qt/locale/bitcoin_ru.ts \\\n+  qt/locale/bitcoin_sah.ts \\\n+  qt/locale/bitcoin_sk.ts \\\n+  qt/locale/bitcoin_sl_SI.ts \\\n+  qt/locale/bitcoin_sq.ts \\\n+  qt/locale/bitcoin_sr.ts \\\n+  qt/locale/bitcoin_sv.ts \\\n+  qt/locale/bitcoin_th_TH.ts \\\n+  qt/locale/bitcoin_tr.ts \\\n+  qt/locale/bitcoin_uk.ts \\\n+  qt/locale/bitcoin_ur_PK.ts \\\n+  qt/locale/bitcoin_uz@Cyrl.ts \\\n+  qt/locale/bitcoin_vi.ts \\\n+  qt/locale/bitcoin_vi_VN.ts \\\n+  qt/locale/bitcoin_zh_CN.ts \\\n+  qt/locale/bitcoin_zh_HK.ts \\\n+  qt/locale/bitcoin_zh_TW.ts\n+\n+QT_FORMS_UI = \\\n+  qt/forms/addressbookpage.ui \\\n+  qt/forms/askpassphrasedialog.ui \\\n+  qt/forms/coincontroldialog.ui \\\n+  qt/forms/editaddressdialog.ui \\\n+  qt/forms/helpmessagedialog.ui \\\n+  qt/forms/intro.ui \\\n+  qt/forms/openuridialog.ui \\\n+  qt/forms/optionsdialog.ui \\\n+  qt/forms/overviewpage.ui \\\n+  qt/forms/receivecoinsdialog.ui \\\n+  qt/forms/receiverequestdialog.ui \\\n+  qt/forms/rpcconsole.ui \\\n+  qt/forms/sendcoinsdialog.ui \\\n+  qt/forms/sendcoinsentry.ui \\\n+  qt/forms/signverifymessagedialog.ui \\\n+  qt/forms/transactiondescdialog.ui\n+\n+QT_MOC_CPP = \\\n+  qt/moc_addressbookpage.cpp \\\n+  qt/moc_addresstablemodel.cpp \\\n+  qt/moc_askpassphrasedialog.cpp \\\n+  qt/moc_bitcoinaddressvalidator.cpp \\\n+  qt/moc_bitcoinamountfield.cpp \\\n+  qt/moc_bitcoingui.cpp \\\n+  qt/moc_bitcoinunits.cpp \\\n+  qt/moc_clientmodel.cpp \\\n+  qt/moc_coincontroldialog.cpp \\\n+  qt/moc_coincontroltreewidget.cpp \\\n+  qt/moc_csvmodelwriter.cpp \\\n+  qt/moc_editaddressdialog.cpp \\\n+  qt/moc_guiutil.cpp \\\n+  qt/moc_intro.cpp \\\n+  qt/moc_macdockiconhandler.cpp \\\n+  qt/moc_macnotificationhandler.cpp \\\n+  qt/moc_monitoreddatamapper.cpp \\\n+  qt/moc_notificator.cpp \\\n+  qt/moc_openuridialog.cpp \\\n+  qt/moc_optionsdialog.cpp \\\n+  qt/moc_optionsmodel.cpp \\\n+  qt/moc_overviewpage.cpp \\\n+  qt/moc_peertablemodel.cpp \\\n+  qt/moc_paymentserver.cpp \\\n+  qt/moc_qvalidatedlineedit.cpp \\\n+  qt/moc_qvaluecombobox.cpp \\\n+  qt/moc_receivecoinsdialog.cpp \\\n+  qt/moc_receiverequestdialog.cpp \\\n+  qt/moc_recentrequeststablemodel.cpp \\\n+  qt/moc_rpcconsole.cpp \\\n+  qt/moc_sendcoinsdialog.cpp \\\n+  qt/moc_sendcoinsentry.cpp \\\n+  qt/moc_signverifymessagedialog.cpp \\\n+  qt/moc_splashscreen.cpp \\\n+  qt/moc_trafficgraphwidget.cpp \\\n+  qt/moc_transactiondesc.cpp \\\n+  qt/moc_transactiondescdialog.cpp \\\n+  qt/moc_transactionfilterproxy.cpp \\\n+  qt/moc_transactiontablemodel.cpp \\\n+  qt/moc_transactionview.cpp \\\n+  qt/moc_utilitydialog.cpp \\\n+  qt/moc_walletframe.cpp \\\n+  qt/moc_walletmodel.cpp \\\n+  qt/moc_walletview.cpp\n+\n+BITCOIN_MM = \\\n+  qt/macdockiconhandler.mm \\\n+  qt/macnotificationhandler.mm\n+\n+QT_MOC = \\\n+  qt/bitcoin.moc \\\n+  qt/intro.moc \\\n+  qt/overviewpage.moc \\\n+  qt/rpcconsole.moc\n+\n+QT_QRC_CPP = qt/qrc_bitcoin.cpp\n+QT_QRC = qt/bitcoin.qrc\n+QT_QRC_LOCALE_CPP = qt/qrc_bitcoin_locale.cpp\n+QT_QRC_LOCALE = qt/bitcoin_locale.qrc\n+\n+PROTOBUF_CC = qt/paymentrequest.pb.cc\n+PROTOBUF_H = qt/paymentrequest.pb.h\n+PROTOBUF_PROTO = qt/paymentrequest.proto\n+\n+BITCOIN_QT_H = \\\n+  qt/addressbookpage.h \\\n+  qt/addresstablemodel.h \\\n+  qt/askpassphrasedialog.h \\\n+  qt/bitcoinaddressvalidator.h \\\n+  qt/bitcoinamountfield.h \\\n+  qt/bitcoingui.h \\\n+  qt/bitcoinunits.h \\\n+  qt/clientmodel.h \\\n+  qt/coincontroldialog.h \\\n+  qt/coincontroltreewidget.h \\\n+  qt/csvmodelwriter.h \\\n+  qt/editaddressdialog.h \\\n+  qt/guiconstants.h \\\n+  qt/guiutil.h \\\n+  qt/intro.h \\\n+  qt/macdockiconhandler.h \\\n+  qt/macnotificationhandler.h \\\n+  qt/monitoreddatamapper.h \\\n+  qt/notificator.h \\\n+  qt/openuridialog.h \\\n+  qt/optionsdialog.h \\\n+  qt/optionsmodel.h \\\n+  qt/overviewpage.h \\\n+  qt/paymentrequestplus.h \\\n+  qt/paymentserver.h \\\n+  qt/peertablemodel.h \\\n+  qt/qvalidatedlineedit.h \\\n+  qt/qvaluecombobox.h \\\n+  qt/receivecoinsdialog.h \\\n+  qt/receiverequestdialog.h \\\n+  qt/recentrequeststablemodel.h \\\n+  qt/rpcconsole.h \\\n+  qt/sendcoinsdialog.h \\\n+  qt/sendcoinsentry.h \\\n+  qt/signverifymessagedialog.h \\\n+  qt/splashscreen.h \\\n+  qt/trafficgraphwidget.h \\\n+  qt/transactiondesc.h \\\n+  qt/transactiondescdialog.h \\\n+  qt/transactionfilterproxy.h \\\n+  qt/transactionrecord.h \\\n+  qt/transactiontablemodel.h \\\n+  qt/transactionview.h \\\n+  qt/utilitydialog.h \\\n+  qt/walletframe.h \\\n+  qt/walletmodel.h \\\n+  qt/walletmodeltransaction.h \\\n+  qt/walletview.h \\\n+  qt/winshutdownmonitor.h\n+\n+RES_ICONS = \\\n+  qt/res/icons/add.png \\\n+  qt/res/icons/address-book.png \\\n+  qt/res/icons/bitcoin.ico \\\n+  qt/res/icons/bitcoin.png \\\n+  qt/res/icons/bitcoin_testnet.ico \\\n+  qt/res/icons/bitcoin_testnet.png \\\n+  qt/res/icons/clock1.png \\\n+  qt/res/icons/clock2.png \\\n+  qt/res/icons/clock3.png \\\n+  qt/res/icons/clock4.png \\\n+  qt/res/icons/clock5.png \\\n+  qt/res/icons/configure.png \\\n+  qt/res/icons/connect0_16.png \\\n+  qt/res/icons/connect1_16.png \\\n+  qt/res/icons/connect2_16.png \\\n+  qt/res/icons/connect3_16.png \\\n+  qt/res/icons/connect4_16.png \\\n+  qt/res/icons/debugwindow.png \\\n+  qt/res/icons/edit.png \\\n+  qt/res/icons/editcopy.png \\\n+  qt/res/icons/editpaste.png \\\n+  qt/res/icons/export.png \\\n+  qt/res/icons/filesave.png \\\n+  qt/res/icons/history.png \\\n+  qt/res/icons/key.png \\\n+  qt/res/icons/lock_closed.png \\\n+  qt/res/icons/lock_open.png \\\n+  qt/res/icons/overview.png \\\n+  qt/res/icons/qrcode.png \\\n+  qt/res/icons/quit.png \\\n+  qt/res/icons/receive.png \\\n+  qt/res/icons/remove.png \\\n+  qt/res/icons/send.png \\\n+  qt/res/icons/synced.png \\\n+  qt/res/icons/toolbar.png \\\n+  qt/res/icons/toolbar_testnet.png \\\n+  qt/res/icons/transaction0.png \\\n+  qt/res/icons/transaction2.png \\\n+  qt/res/icons/transaction_conflicted.png \\\n+  qt/res/icons/tx_inout.png \\\n+  qt/res/icons/tx_input.png \\\n+  qt/res/icons/tx_output.png \\\n+  qt/res/icons/tx_mined.png \\\n+  qt/res/icons/unit_btc.png \\\n+  qt/res/icons/unit_mbtc.png \\\n+  qt/res/icons/unit_ubtc.png\n+\n+BITCOIN_QT_CPP = \\\n+  qt/bitcoinaddressvalidator.cpp \\\n+  qt/bitcoinamountfield.cpp \\\n+  qt/bitcoingui.cpp \\\n+  qt/bitcoinunits.cpp \\\n+  qt/clientmodel.cpp \\\n+  qt/csvmodelwriter.cpp \\\n+  qt/guiutil.cpp \\\n+  qt/intro.cpp \\\n+  qt/monitoreddatamapper.cpp \\\n+  qt/notificator.cpp \\\n+  qt/optionsdialog.cpp \\\n+  qt/optionsmodel.cpp \\\n+  qt/peertablemodel.cpp \\\n+  qt/qvalidatedlineedit.cpp \\\n+  qt/qvaluecombobox.cpp \\\n+  qt/rpcconsole.cpp \\\n+  qt/splashscreen.cpp \\\n+  qt/trafficgraphwidget.cpp \\\n+  qt/utilitydialog.cpp \\\n+  qt/winshutdownmonitor.cpp\n+\n+if ENABLE_WALLET\n+BITCOIN_QT_CPP += \\\n+  qt/addressbookpage.cpp \\\n+  qt/addresstablemodel.cpp \\\n+  qt/askpassphrasedialog.cpp \\\n+  qt/coincontroldialog.cpp \\\n+  qt/coincontroltreewidget.cpp \\\n+  qt/editaddressdialog.cpp \\\n+  qt/openuridialog.cpp \\\n+  qt/overviewpage.cpp \\\n+  qt/paymentrequestplus.cpp \\\n+  qt/paymentserver.cpp \\\n+  qt/receivecoinsdialog.cpp \\\n+  qt/receiverequestdialog.cpp \\\n+  qt/recentrequeststablemodel.cpp \\\n+  qt/sendcoinsdialog.cpp \\\n+  qt/sendcoinsentry.cpp \\\n+  qt/signverifymessagedialog.cpp \\\n+  qt/transactiondesc.cpp \\\n+  qt/transactiondescdialog.cpp \\\n+  qt/transactionfilterproxy.cpp \\\n+  qt/transactionrecord.cpp \\\n+  qt/transactiontablemodel.cpp \\\n+  qt/transactionview.cpp \\\n+  qt/walletframe.cpp \\\n+  qt/walletmodel.cpp \\\n+  qt/walletmodeltransaction.cpp \\\n+  qt/walletview.cpp\n+endif\n+\n+RES_IMAGES = \\\n+  qt/res/images/about.png \\\n+  qt/res/images/splash.png \\\n+  qt/res/images/splash_testnet.png\n+\n+RES_MOVIES = $(wildcard qt/res/movies/spinner-*.png)\n+\n+BITCOIN_RC = qt/res/bitcoin-qt-res.rc\n+\n+BITCOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \\\n+  -I$(builddir)/qt/forms\n+\n+qt_libbitcoinqt_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n+\n+qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \\\n+  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n+\n+nodist_qt_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \\\n+  $(PROTOBUF_H) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)\n+\n+# forms/foo.h -> forms/ui_foo.h\n+QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))\n+\n+# Most files will depend on the forms and moc files as includes. Generate them\n+# before anything else.\n+$(QT_MOC): $(QT_FORMS_H)\n+$(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) : | $(QT_MOC)\n+\n+#Generating these with a half-written protobuf header leads to wacky results.\n+#This makes sure it's done.\n+$(QT_MOC): $(PROTOBUF_H)\n+$(QT_MOC_CPP): $(PROTOBUF_H)\n+\n+# bitcoin-qt binary #\n+qt_bitcoin_qt_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+  $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n+\n+qt_bitcoin_qt_SOURCES = qt/bitcoin.cpp\n+if TARGET_DARWIN\n+  qt_bitcoin_qt_SOURCES += $(BITCOIN_MM)\n+endif\n+if TARGET_WINDOWS\n+  qt_bitcoin_qt_SOURCES += $(BITCOIN_RC)\n+endif\n+qt_bitcoin_qt_LDADD = qt/libbitcoinqt.a $(LIBBITCOIN_SERVER)\n+if ENABLE_WALLET\n+qt_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBLEVELDB) $(LIBMEMENV) \\\n+  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n+if USE_LIBSECP256K1\n+  qt_bitcoin_qt_LDADD += secp256k1/libsecp256k1.la\n+endif\n+qt_bitcoin_qt_LDFLAGS = $(QT_LDFLAGS)\n+\n+#locale/foo.ts -> locale/foo.qm\n+QT_QM=$(QT_TS:.ts=.qm)\n+\n+.SECONDARY: $(QT_QM)\n+\n+qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES)\n+\t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n+\t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) ../share/qt/extract_strings_qt.py $^\n+\n+translate: qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n+\t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\"\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts qt/locale/bitcoin_en.ts\n+\n+$(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)\n+\t@test -f $(RCC)\n+\t@test -f $(@D)/$(<F) || cp -f $< $(@D)\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin_locale $(@D)/$(<F) | \\\n+\t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n+\n+$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)\n+\t@test -f $(RCC)\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin $< | \\\n+\t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n+\n+CLEAN_QT = $(nodist_qt_libbitcoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno\n+\n+CLEANFILES += $(CLEAN_QT)\n+\n+bitcoin_qt_clean: FORCE\n+\trm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) qt/bitcoin-qt$(EXEEXT) $(LIBBITCOINQT)\n+\n+bitcoin_qt : qt/bitcoin-qt$(EXEEXT)\n+\n+ui_%.h: %.ui\n+\t@test -f $(UIC)\n+\t@$(MKDIR_P) $(@D)\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo \"Error creating $@\"; false)\n+\n+%.moc: %.cpp\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) $< | \\\n+\t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n+\n+moc_%.cpp: %.h\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) $< | \\\n+\t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n+\n+%.qm: %.ts\n+\t@test -f $(LRELEASE)\n+\t@$(MKDIR_P) $(@D)\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LRELEASE) -silent $< -qm $@"
      },
      {
        "sha": "7e10ce5a96397c24fd03c41b11720f4f111dde7b",
        "filename": "src/Makefile.qttest.include",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,51 @@\n+bin_PROGRAMS += qt/test/test_bitcoin-qt\n+TESTS += qt/test/test_bitcoin-qt\n+\n+TEST_QT_MOC_CPP = qt/test/moc_uritests.cpp\n+\n+if ENABLE_WALLET\n+TEST_QT_MOC_CPP += qt/test/moc_paymentservertests.cpp\n+endif\n+\n+TEST_QT_H = \\\n+  qt/test/uritests.h \\\n+  qt/test/paymentrequestdata.h \\\n+  qt/test/paymentservertests.h\n+\n+qt_test_test_bitcoin_qt_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+  $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n+\n+qt_test_test_bitcoin_qt_SOURCES = \\\n+  qt/test/test_main.cpp \\\n+  qt/test/uritests.cpp \\\n+  $(TEST_QT_H)\n+if ENABLE_WALLET\n+qt_test_test_bitcoin_qt_SOURCES += \\\n+  qt/test/paymentservertests.cpp\n+endif\n+\n+nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n+\n+qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n+if ENABLE_WALLET\n+qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBLEVELDB) \\\n+  $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n+  $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n+if USE_LIBSECP256K1\n+  qt_test_test_bitcoin_qt_LDADD += secp256k1/libsecp256k1.la\n+endif\n+qt_test_test_bitcoin_qt_LDFLAGS = $(QT_LDFLAGS)\n+\n+CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n+\n+CLEANFILES += $(CLEAN_BITCOIN_QT_TEST)\n+\n+test_bitcoin_qt : qt/test/test_bitcoin-qt$(EXEEXT)\n+\n+test_bitcoin_qt_check : qt/test/test_bitcoin-qt$(EXEEXT) FORCE\n+\t$(MAKE) check-TESTS TESTS=$^\n+\n+test_bitcoin_qt_clean: FORCE\n+\trm -f $(CLEAN_BITCOIN_QT_TEST) $(qt_test_test_bitcoin_qt_OBJECTS)"
      },
      {
        "sha": "12b90adca3e7d8190de63841619e8e610d52a405",
        "filename": "src/Makefile.test.include",
        "status": "added",
        "additions": 109,
        "deletions": 0,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,109 @@\n+TESTS += test/test_bitcoin\n+bin_PROGRAMS += test/test_bitcoin\n+TEST_SRCDIR = test\n+TEST_BINARY=test/test_bitcoin$(EXEEXT)\n+\n+JSON_TEST_FILES = \\\n+  test/data/script_valid.json \\\n+  test/data/base58_keys_valid.json \\\n+  test/data/sig_canonical.json \\\n+  test/data/sig_noncanonical.json \\\n+  test/data/base58_encode_decode.json \\\n+  test/data/base58_keys_invalid.json \\\n+  test/data/script_invalid.json \\\n+  test/data/tx_invalid.json \\\n+  test/data/tx_valid.json \\\n+  test/data/sighash.json\n+\n+RAW_TEST_FILES = test/data/alertTests.raw\n+\n+GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)\n+\n+BITCOIN_TESTS =\\\n+  test/bignum.h \\\n+  test/alert_tests.cpp \\\n+  test/allocator_tests.cpp \\\n+  test/base32_tests.cpp \\\n+  test/base58_tests.cpp \\\n+  test/base64_tests.cpp \\\n+  test/bloom_tests.cpp \\\n+  test/canonical_tests.cpp \\\n+  test/checkblock_tests.cpp \\\n+  test/Checkpoints_tests.cpp \\\n+  test/compress_tests.cpp \\\n+  test/crypto_tests.cpp \\\n+  test/DoS_tests.cpp \\\n+  test/getarg_tests.cpp \\\n+  test/hash_tests.cpp \\\n+  test/key_tests.cpp \\\n+  test/main_tests.cpp \\\n+  test/miner_tests.cpp \\\n+  test/mruset_tests.cpp \\\n+  test/multisig_tests.cpp \\\n+  test/netbase_tests.cpp \\\n+  test/pmt_tests.cpp \\\n+  test/rpc_tests.cpp \\\n+  test/script_P2SH_tests.cpp \\\n+  test/script_tests.cpp \\\n+  test/serialize_tests.cpp \\\n+  test/sigopcount_tests.cpp \\\n+  test/skiplist_tests.cpp \\\n+  test/test_bitcoin.cpp \\\n+  test/transaction_tests.cpp \\\n+  test/uint256_tests.cpp \\\n+  test/util_tests.cpp \\\n+  test/scriptnum_tests.cpp \\\n+  test/sighash_tests.cpp\n+\n+if ENABLE_WALLET\n+BITCOIN_TESTS += \\\n+  test/accounting_tests.cpp \\\n+  test/wallet_tests.cpp \\\n+  test/rpc_wallet_tests.cpp\n+endif\n+\n+test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n+test_test_bitcoin_CPPFLAGS = $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n+test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBLEVELDB) $(LIBMEMENV) \\\n+  $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+if ENABLE_WALLET\n+test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+\n+if USE_LIBSECP256K1\n+  test_test_bitcoin_LDADD += secp256k1/libsecp256k1.la\n+endif\n+\n+test_test_bitcoin_LDADD += $(BDB_LIBS)\n+\n+nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n+\n+$(BITCOIN_TESTS): $(GENERATED_TEST_FILES)\n+\n+CLEAN_BITCOIN_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES)\n+\n+CLEANFILES += $(CLEAN_BITCOIN_TEST)\n+\n+bitcoin_test: $(TEST_BINARY)\n+\n+bitcoin_test_check: $(TEST_BINARY) FORCE\n+\t$(MAKE) check-TESTS TESTS=$^\n+\n+bitcoin_test_clean : FORCE\n+\trm -f $(CLEAN_BITCOIN_TEST) $(test_test_bitcoin_OBJECTS) $(TEST_BINARY)\n+\n+%.json.h: %.json\n+\t@$(MKDIR_P) $(@D)\n+\t@echo \"namespace json_tests{\" > $@\n+\t@echo \"static unsigned const char $(*F)[] = {\" >> $@\n+\t@$(HEXDUMP) -v -e '8/1 \"0x%02x, \"' -e '\"\\n\"' $< | $(SED) -e 's/0x  ,//g' >> $@\n+\t@echo \"};};\" >> $@\n+\t@echo \"Generated $@\"\n+\n+%.raw.h: %.raw\n+\t@$(MKDIR_P) $(@D)\n+\t@echo \"namespace alert_tests{\" > $@\n+\t@echo \"static unsigned const char $(*F)[] = {\" >> $@\n+\t@$(HEXDUMP) -v -e '8/1 \"0x%02x, \"' -e '\"\\n\"' $< | $(SED) -e 's/0x  ,//g' >> $@\n+\t@echo \"};};\" >> $@\n+\t@echo \"Generated $@\""
      },
      {
        "sha": "c4c296560eab961b301e324df7fd8a46b22d7395",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -8,6 +8,7 @@\n #include \"netbase.h\"\n #include \"protocol.h\"\n #include \"sync.h\"\n+#include \"timedata.h\"\n #include \"util.h\"\n \n #include <map>\n@@ -420,7 +421,7 @@ class CAddrMan\n             Check();\n         }\n         if (fRet)\n-            LogPrint(\"addrman\", \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort().c_str(), source.ToString().c_str(), nTried, nNew);\n+            LogPrint(\"addrman\", \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort().c_str(), source.ToString(), nTried, nNew);\n         return fRet;\n     }\n \n@@ -436,7 +437,7 @@ class CAddrMan\n             Check();\n         }\n         if (nAdd)\n-            LogPrint(\"addrman\", \"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString().c_str(), nTried, nNew);\n+            LogPrint(\"addrman\", \"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString(), nTried, nNew);\n         return nAdd > 0;\n     }\n "
      },
      {
        "sha": "258a2b52c4f770a7266aad5385a6aba1db0e9514",
        "filename": "src/alert.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/alert.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/alert.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -5,8 +5,10 @@\n \n #include \"alert.h\"\n \n+#include \"chainparams.h\"\n #include \"key.h\"\n #include \"net.h\"\n+#include \"timedata.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n "
      },
      {
        "sha": "c9e91beef1d5cf4f4b29017d8dcaff6ca152ac36",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 184,
        "deletions": 0,
        "changes": 184,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -2,11 +2,18 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"base58.h\"\n+\n+#include \"hash.h\"\n+#include \"uint256.h\"\n+\n #include <assert.h>\n #include <stdint.h>\n #include <string.h>\n #include <vector>\n #include <string>\n+#include <boost/variant/apply_visitor.hpp>\n+#include <boost/variant/static_visitor.hpp>\n \n /* All alphanumeric characters except for \"0\", \"I\", \"O\", and \"l\" */\n static const char* pszBase58 = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n@@ -89,3 +96,180 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n         str += pszBase58[*(it++)];\n     return str;\n }\n+\n+std::string EncodeBase58(const std::vector<unsigned char>& vch) {\n+    return EncodeBase58(&vch[0], &vch[0] + vch.size());\n+}\n+\n+bool DecodeBase58(const std::string& str, std::vector<unsigned char>& vchRet) {\n+    return DecodeBase58(str.c_str(), vchRet);\n+}\n+\n+std::string EncodeBase58Check(const std::vector<unsigned char>& vchIn) {\n+    // add 4-byte hash check to the end\n+    std::vector<unsigned char> vch(vchIn);\n+    uint256 hash = Hash(vch.begin(), vch.end());\n+    vch.insert(vch.end(), (unsigned char*)&hash, (unsigned char*)&hash + 4);\n+    return EncodeBase58(vch);\n+}\n+\n+bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet) {\n+    if (!DecodeBase58(psz, vchRet) ||\n+        (vchRet.size() < 4))\n+    {\n+        vchRet.clear();\n+        return false;\n+    }\n+    // re-calculate the checksum, insure it matches the included 4-byte checksum\n+    uint256 hash = Hash(vchRet.begin(), vchRet.end()-4);\n+    if (memcmp(&hash, &vchRet.end()[-4], 4) != 0)\n+    {\n+        vchRet.clear();\n+        return false;\n+    }\n+    vchRet.resize(vchRet.size()-4);\n+    return true;\n+}\n+\n+bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRet) {\n+    return DecodeBase58Check(str.c_str(), vchRet);\n+}\n+\n+CBase58Data::CBase58Data() {\n+    vchVersion.clear();\n+    vchData.clear();\n+}\n+\n+void CBase58Data::SetData(const std::vector<unsigned char> &vchVersionIn, const void* pdata, size_t nSize) {\n+    vchVersion = vchVersionIn;\n+    vchData.resize(nSize);\n+    if (!vchData.empty())\n+        memcpy(&vchData[0], pdata, nSize);\n+}\n+\n+void CBase58Data::SetData(const std::vector<unsigned char> &vchVersionIn, const unsigned char *pbegin, const unsigned char *pend) {\n+    SetData(vchVersionIn, (void*)pbegin, pend - pbegin);\n+}\n+\n+bool CBase58Data::SetString(const char* psz, unsigned int nVersionBytes) {\n+    std::vector<unsigned char> vchTemp;\n+    bool rc58 = DecodeBase58Check(psz, vchTemp);\n+    if ((!rc58) || (vchTemp.size() < nVersionBytes)) {\n+        vchData.clear();\n+        vchVersion.clear();\n+        return false;\n+    }\n+    vchVersion.assign(vchTemp.begin(), vchTemp.begin() + nVersionBytes);\n+    vchData.resize(vchTemp.size() - nVersionBytes);\n+    if (!vchData.empty())\n+        memcpy(&vchData[0], &vchTemp[nVersionBytes], vchData.size());\n+    OPENSSL_cleanse(&vchTemp[0], vchData.size());\n+    return true;\n+}\n+\n+bool CBase58Data::SetString(const std::string& str) {\n+    return SetString(str.c_str());\n+}\n+\n+std::string CBase58Data::ToString() const {\n+    std::vector<unsigned char> vch = vchVersion;\n+    vch.insert(vch.end(), vchData.begin(), vchData.end());\n+    return EncodeBase58Check(vch);\n+}\n+\n+int CBase58Data::CompareTo(const CBase58Data& b58) const {\n+    if (vchVersion < b58.vchVersion) return -1;\n+    if (vchVersion > b58.vchVersion) return  1;\n+    if (vchData < b58.vchData)   return -1;\n+    if (vchData > b58.vchData)   return  1;\n+    return 0;\n+}\n+\n+namespace {\n+\n+    class CBitcoinAddressVisitor : public boost::static_visitor<bool> {\n+    private:\n+        CBitcoinAddress *addr;\n+    public:\n+        CBitcoinAddressVisitor(CBitcoinAddress *addrIn) : addr(addrIn) { }\n+\n+        bool operator()(const CKeyID &id) const { return addr->Set(id); }\n+        bool operator()(const CScriptID &id) const { return addr->Set(id); }\n+        bool operator()(const CNoDestination &no) const { return false; }\n+    };\n+\n+} // anon namespace\n+\n+bool CBitcoinAddress::Set(const CKeyID &id) {\n+    SetData(Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS), &id, 20);\n+    return true;\n+}\n+\n+bool CBitcoinAddress::Set(const CScriptID &id) {\n+    SetData(Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS), &id, 20);\n+    return true;\n+}\n+\n+bool CBitcoinAddress::Set(const CTxDestination &dest) {\n+    return boost::apply_visitor(CBitcoinAddressVisitor(this), dest);\n+}\n+\n+bool CBitcoinAddress::IsValid() const {\n+    bool fCorrectSize = vchData.size() == 20;\n+    bool fKnownVersion = vchVersion == Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS) ||\n+                         vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n+    return fCorrectSize && fKnownVersion;\n+}\n+\n+CTxDestination CBitcoinAddress::Get() const {\n+    if (!IsValid())\n+        return CNoDestination();\n+    uint160 id;\n+    memcpy(&id, &vchData[0], 20);\n+    if (vchVersion == Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS))\n+        return CKeyID(id);\n+    else if (vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS))\n+        return CScriptID(id);\n+    else\n+        return CNoDestination();\n+}\n+\n+bool CBitcoinAddress::GetKeyID(CKeyID &keyID) const {\n+    if (!IsValid() || vchVersion != Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS))\n+        return false;\n+    uint160 id;\n+    memcpy(&id, &vchData[0], 20);\n+    keyID = CKeyID(id);\n+    return true;\n+}\n+\n+bool CBitcoinAddress::IsScript() const {\n+    return IsValid() && vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n+}\n+\n+void CBitcoinSecret::SetKey(const CKey& vchSecret) {\n+    assert(vchSecret.IsValid());\n+    SetData(Params().Base58Prefix(CChainParams::SECRET_KEY), vchSecret.begin(), vchSecret.size());\n+    if (vchSecret.IsCompressed())\n+        vchData.push_back(1);\n+}\n+\n+CKey CBitcoinSecret::GetKey() {\n+    CKey ret;\n+    ret.Set(&vchData[0], &vchData[32], vchData.size() > 32 && vchData[32] == 1);\n+    return ret;\n+}\n+\n+bool CBitcoinSecret::IsValid() const {\n+    bool fExpectedFormat = vchData.size() == 32 || (vchData.size() == 33 && vchData[32] == 1);\n+    bool fCorrectVersion = vchVersion == Params().Base58Prefix(CChainParams::SECRET_KEY);\n+    return fExpectedFormat && fCorrectVersion;\n+}\n+\n+bool CBitcoinSecret::SetString(const char* pszSecret) {\n+    return CBase58Data::SetString(pszSecret) && IsValid();\n+}\n+\n+bool CBitcoinSecret::SetString(const std::string& strSecret) {\n+    return SetString(strSecret.c_str());\n+}"
      },
      {
        "sha": "70681f589a6ab973e8999e48bd094b07e9cdc2c6",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 34,
        "deletions": 225,
        "changes": 259,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -15,17 +15,12 @@\n #define BITCOIN_BASE58_H\n \n #include \"chainparams.h\"\n-#include \"hash.h\"\n #include \"key.h\"\n #include \"script.h\"\n-#include \"uint256.h\"\n \n #include <string>\n #include <vector>\n \n-#include <boost/variant/apply_visitor.hpp>\n-#include <boost/variant/static_visitor.hpp>\n-\n /**\n  * Encode a byte sequence as a base58-encoded string.\n  * pbegin and pend cannot be NULL, unless both are.\n@@ -35,10 +30,7 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n /**\n  * Encode a byte vector as a base58-encoded string\n  */\n-inline std::string EncodeBase58(const std::vector<unsigned char>& vch)\n-{\n-    return EncodeBase58(&vch[0], &vch[0] + vch.size());\n-}\n+std::string EncodeBase58(const std::vector<unsigned char>& vch);\n \n /**\n  * Decode a base58-encoded string (psz) into a byte vector (vchRet).\n@@ -51,55 +43,24 @@ bool DecodeBase58(const char* psz, std::vector<unsigned char>& vchRet);\n  * Decode a base58-encoded string (str) into a byte vector (vchRet).\n  * return true if decoding is successful.\n  */\n-inline bool DecodeBase58(const std::string& str, std::vector<unsigned char>& vchRet)\n-{\n-    return DecodeBase58(str.c_str(), vchRet);\n-}\n+bool DecodeBase58(const std::string& str, std::vector<unsigned char>& vchRet);\n \n /**\n  * Encode a byte vector into a base58-encoded string, including checksum\n  */\n-inline std::string EncodeBase58Check(const std::vector<unsigned char>& vchIn)\n-{\n-    // add 4-byte hash check to the end\n-    std::vector<unsigned char> vch(vchIn);\n-    uint256 hash = Hash(vch.begin(), vch.end());\n-    vch.insert(vch.end(), (unsigned char*)&hash, (unsigned char*)&hash + 4);\n-    return EncodeBase58(vch);\n-}\n+std::string EncodeBase58Check(const std::vector<unsigned char>& vchIn);\n \n /**\n  * Decode a base58-encoded string (psz) that includes a checksum into a byte\n  * vector (vchRet), return true if decoding is successful\n  */\n-inline bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet)\n-{\n-    if (!DecodeBase58(psz, vchRet))\n-        return false;\n-    if (vchRet.size() < 4)\n-    {\n-        vchRet.clear();\n-        return false;\n-    }\n-    // re-calculate the checksum, insure it matches the included 4-byte checksum\n-    uint256 hash = Hash(vchRet.begin(), vchRet.end()-4);\n-    if (memcmp(&hash, &vchRet.end()[-4], 4) != 0)\n-    {\n-        vchRet.clear();\n-        return false;\n-    }\n-    vchRet.resize(vchRet.size()-4);\n-    return true;\n-}\n+inline bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet);\n \n /**\n  * Decode a base58-encoded string (str) that includes a checksum into a byte\n  * vector (vchRet), return true if decoding is successful\n  */\n-inline bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRet)\n-{\n-    return DecodeBase58Check(str.c_str(), vchRet);\n-}\n+inline bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRet);\n \n /**\n  * Base class for all base58-encoded data\n@@ -114,64 +75,15 @@ class CBase58Data\n     typedef std::vector<unsigned char, zero_after_free_allocator<unsigned char> > vector_uchar;\n     vector_uchar vchData;\n \n-    CBase58Data()\n-    {\n-        vchVersion.clear();\n-        vchData.clear();\n-    }\n-\n-    void SetData(const std::vector<unsigned char> &vchVersionIn, const void* pdata, size_t nSize)\n-    {\n-        vchVersion = vchVersionIn;\n-        vchData.resize(nSize);\n-        if (!vchData.empty())\n-            memcpy(&vchData[0], pdata, nSize);\n-    }\n-\n-    void SetData(const std::vector<unsigned char> &vchVersionIn, const unsigned char *pbegin, const unsigned char *pend)\n-    {\n-        SetData(vchVersionIn, (void*)pbegin, pend - pbegin);\n-    }\n+    CBase58Data();\n+    void SetData(const std::vector<unsigned char> &vchVersionIn, const void* pdata, size_t nSize);\n+    void SetData(const std::vector<unsigned char> &vchVersionIn, const unsigned char *pbegin, const unsigned char *pend);\n \n public:\n-    bool SetString(const char* psz, unsigned int nVersionBytes = 1)\n-    {\n-        std::vector<unsigned char> vchTemp;\n-        DecodeBase58Check(psz, vchTemp);\n-        if (vchTemp.size() < nVersionBytes)\n-        {\n-            vchData.clear();\n-            vchVersion.clear();\n-            return false;\n-        }\n-        vchVersion.assign(vchTemp.begin(), vchTemp.begin() + nVersionBytes);\n-        vchData.resize(vchTemp.size() - nVersionBytes);\n-        if (!vchData.empty())\n-            memcpy(&vchData[0], &vchTemp[nVersionBytes], vchData.size());\n-        OPENSSL_cleanse(&vchTemp[0], vchData.size());\n-        return true;\n-    }\n-\n-    bool SetString(const std::string& str)\n-    {\n-        return SetString(str.c_str());\n-    }\n-\n-    std::string ToString() const\n-    {\n-        std::vector<unsigned char> vch = vchVersion;\n-        vch.insert(vch.end(), vchData.begin(), vchData.end());\n-        return EncodeBase58Check(vch);\n-    }\n-\n-    int CompareTo(const CBase58Data& b58) const\n-    {\n-        if (vchVersion < b58.vchVersion) return -1;\n-        if (vchVersion > b58.vchVersion) return  1;\n-        if (vchData < b58.vchData)   return -1;\n-        if (vchData > b58.vchData)   return  1;\n-        return 0;\n-    }\n+    bool SetString(const char* psz, unsigned int nVersionBytes = 1);\n+    bool SetString(const std::string& str);\n+    std::string ToString() const;\n+    int CompareTo(const CBase58Data& b58) const;\n \n     bool operator==(const CBase58Data& b58) const { return CompareTo(b58) == 0; }\n     bool operator<=(const CBase58Data& b58) const { return CompareTo(b58) <= 0; }\n@@ -186,140 +98,37 @@ class CBase58Data\n  * Script-hash-addresses have version 5 (or 196 testnet).\n  * The data vector contains RIPEMD160(SHA256(cscript)), where cscript is the serialized redemption script.\n  */\n-class CBitcoinAddress;\n-class CBitcoinAddressVisitor : public boost::static_visitor<bool>\n-{\n-private:\n-    CBitcoinAddress *addr;\n+class CBitcoinAddress : public CBase58Data {\n public:\n-    CBitcoinAddressVisitor(CBitcoinAddress *addrIn) : addr(addrIn) { }\n-    bool operator()(const CKeyID &id) const;\n-    bool operator()(const CScriptID &id) const;\n-    bool operator()(const CNoDestination &no) const;\n+    bool Set(const CKeyID &id);\n+    bool Set(const CScriptID &id);\n+    bool Set(const CTxDestination &dest);\n+    bool IsValid() const;\n+\n+    CBitcoinAddress() {}\n+    CBitcoinAddress(const CTxDestination &dest) { Set(dest); }\n+    CBitcoinAddress(const std::string& strAddress) { SetString(strAddress); }\n+    CBitcoinAddress(const char* pszAddress) { SetString(pszAddress); }\n+\n+    CTxDestination Get() const;\n+    bool GetKeyID(CKeyID &keyID) const;\n+    bool IsScript() const;\n };\n \n-class CBitcoinAddress : public CBase58Data\n-{\n-public:\n-    bool Set(const CKeyID &id) {\n-        SetData(Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS), &id, 20);\n-        return true;\n-    }\n-\n-    bool Set(const CScriptID &id) {\n-        SetData(Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS), &id, 20);\n-        return true;\n-    }\n-\n-    bool Set(const CTxDestination &dest)\n-    {\n-        return boost::apply_visitor(CBitcoinAddressVisitor(this), dest);\n-    }\n-\n-    bool IsValid() const\n-    {\n-        bool fCorrectSize = vchData.size() == 20;\n-        bool fKnownVersion = vchVersion == Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS) ||\n-                             vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n-        return fCorrectSize && fKnownVersion;\n-    }\n-\n-    CBitcoinAddress()\n-    {\n-    }\n-\n-    CBitcoinAddress(const CTxDestination &dest)\n-    {\n-        Set(dest);\n-    }\n-\n-    CBitcoinAddress(const std::string& strAddress)\n-    {\n-        SetString(strAddress);\n-    }\n-\n-    CBitcoinAddress(const char* pszAddress)\n-    {\n-        SetString(pszAddress);\n-    }\n-\n-    CTxDestination Get() const {\n-        if (!IsValid())\n-            return CNoDestination();\n-        uint160 id;\n-        memcpy(&id, &vchData[0], 20);\n-        if (vchVersion == Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS))\n-            return CKeyID(id);\n-        else if (vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS))\n-            return CScriptID(id);\n-        else\n-            return CNoDestination();\n-    }\n-\n-    bool GetKeyID(CKeyID &keyID) const {\n-        if (!IsValid() || vchVersion != Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS))\n-            return false;\n-        uint160 id;\n-        memcpy(&id, &vchData[0], 20);\n-        keyID = CKeyID(id);\n-        return true;\n-    }\n-\n-    bool IsScript() const {\n-        return IsValid() && vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n-    }\n-};\n-\n-bool inline CBitcoinAddressVisitor::operator()(const CKeyID &id) const         { return addr->Set(id); }\n-bool inline CBitcoinAddressVisitor::operator()(const CScriptID &id) const      { return addr->Set(id); }\n-bool inline CBitcoinAddressVisitor::operator()(const CNoDestination &id) const { return false; }\n-\n /**\n  * A base58-encoded secret key\n  */\n class CBitcoinSecret : public CBase58Data\n {\n public:\n-    void SetKey(const CKey& vchSecret)\n-    {\n-        assert(vchSecret.IsValid());\n-        SetData(Params().Base58Prefix(CChainParams::SECRET_KEY), vchSecret.begin(), vchSecret.size());\n-        if (vchSecret.IsCompressed())\n-            vchData.push_back(1);\n-    }\n-\n-    CKey GetKey()\n-    {\n-        CKey ret;\n-        ret.Set(&vchData[0], &vchData[32], vchData.size() > 32 && vchData[32] == 1);\n-        return ret;\n-    }\n-\n-    bool IsValid() const\n-    {\n-        bool fExpectedFormat = vchData.size() == 32 || (vchData.size() == 33 && vchData[32] == 1);\n-        bool fCorrectVersion = vchVersion == Params().Base58Prefix(CChainParams::SECRET_KEY);\n-        return fExpectedFormat && fCorrectVersion;\n-    }\n-\n-    bool SetString(const char* pszSecret)\n-    {\n-        return CBase58Data::SetString(pszSecret) && IsValid();\n-    }\n-\n-    bool SetString(const std::string& strSecret)\n-    {\n-        return SetString(strSecret.c_str());\n-    }\n-\n-    CBitcoinSecret(const CKey& vchSecret)\n-    {\n-        SetKey(vchSecret);\n-    }\n-\n-    CBitcoinSecret()\n-    {\n-    }\n+    void SetKey(const CKey& vchSecret);\n+    CKey GetKey();\n+    bool IsValid() const;\n+    bool SetString(const char* pszSecret);\n+    bool SetString(const std::string& strSecret);\n+\n+    CBitcoinSecret(const CKey& vchSecret) { SetKey(vchSecret); }\n+    CBitcoinSecret() {}\n };\n \n template<typename K, int Size, CChainParams::Base58Type Type> class CBitcoinExtKeyBase : public CBase58Data"
      },
      {
        "sha": "0259338b319d70f65d5a1d1c69c7a7001573ec46",
        "filename": "src/bignum.h",
        "status": "removed",
        "additions": 0,
        "deletions": 595,
        "changes": 595,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=2e4fee2ac4824570c1340a8f8fe2aed4580de879",
        "patch": "@@ -1,595 +0,0 @@\n-// Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2013 The Bitcoin developers\n-// Distributed under the MIT/X11 software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#ifndef BITCOIN_BIGNUM_H\n-#define BITCOIN_BIGNUM_H\n-\n-#include \"serialize.h\"\n-#include \"uint256.h\"\n-#include \"version.h\"\n-\n-#include <stdexcept>\n-#include <stdint.h>\n-#include <vector>\n-\n-#include <openssl/bn.h>\n-\n-/** Errors thrown by the bignum class */\n-class bignum_error : public std::runtime_error\n-{\n-public:\n-    explicit bignum_error(const std::string& str) : std::runtime_error(str) {}\n-};\n-\n-\n-/** RAII encapsulated BN_CTX (OpenSSL bignum context) */\n-class CAutoBN_CTX\n-{\n-protected:\n-    BN_CTX* pctx;\n-    BN_CTX* operator=(BN_CTX* pnew) { return pctx = pnew; }\n-\n-public:\n-    CAutoBN_CTX()\n-    {\n-        pctx = BN_CTX_new();\n-        if (pctx == NULL)\n-            throw bignum_error(\"CAutoBN_CTX : BN_CTX_new() returned NULL\");\n-    }\n-\n-    ~CAutoBN_CTX()\n-    {\n-        if (pctx != NULL)\n-            BN_CTX_free(pctx);\n-    }\n-\n-    operator BN_CTX*() { return pctx; }\n-    BN_CTX& operator*() { return *pctx; }\n-    BN_CTX** operator&() { return &pctx; }\n-    bool operator!() { return (pctx == NULL); }\n-};\n-\n-\n-/** C++ wrapper for BIGNUM (OpenSSL bignum) */\n-class CBigNum : public BIGNUM\n-{\n-public:\n-    CBigNum()\n-    {\n-        BN_init(this);\n-    }\n-\n-    CBigNum(const CBigNum& b)\n-    {\n-        BN_init(this);\n-        if (!BN_copy(this, &b))\n-        {\n-            BN_clear_free(this);\n-            throw bignum_error(\"CBigNum::CBigNum(const CBigNum&) : BN_copy failed\");\n-        }\n-    }\n-\n-    CBigNum& operator=(const CBigNum& b)\n-    {\n-        if (!BN_copy(this, &b))\n-            throw bignum_error(\"CBigNum::operator= : BN_copy failed\");\n-        return (*this);\n-    }\n-\n-    ~CBigNum()\n-    {\n-        BN_clear_free(this);\n-    }\n-\n-    //CBigNum(char n) is not portable.  Use 'signed char' or 'unsigned char'.\n-    CBigNum(signed char n)        { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\n-    CBigNum(short n)              { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\n-    CBigNum(int n)                { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\n-    CBigNum(long n)               { BN_init(this); if (n >= 0) setulong(n); else setint64(n); }\n-    CBigNum(long long n)          { BN_init(this); setint64(n); }\n-    CBigNum(unsigned char n)      { BN_init(this); setulong(n); }\n-    CBigNum(unsigned short n)     { BN_init(this); setulong(n); }\n-    CBigNum(unsigned int n)       { BN_init(this); setulong(n); }\n-    CBigNum(unsigned long n)      { BN_init(this); setulong(n); }\n-    CBigNum(unsigned long long n) { BN_init(this); setuint64(n); }\n-    explicit CBigNum(uint256 n)   { BN_init(this); setuint256(n); }\n-\n-    explicit CBigNum(const std::vector<unsigned char>& vch)\n-    {\n-        BN_init(this);\n-        setvch(vch);\n-    }\n-\n-    void setulong(unsigned long n)\n-    {\n-        if (!BN_set_word(this, n))\n-            throw bignum_error(\"CBigNum conversion from unsigned long : BN_set_word failed\");\n-    }\n-\n-    unsigned long getulong() const\n-    {\n-        return BN_get_word(this);\n-    }\n-\n-    unsigned int getuint() const\n-    {\n-        return BN_get_word(this);\n-    }\n-\n-    int getint() const\n-    {\n-        unsigned long n = BN_get_word(this);\n-        if (!BN_is_negative(this))\n-            return (n > (unsigned long)std::numeric_limits<int>::max() ? std::numeric_limits<int>::max() : n);\n-        else\n-            return (n > (unsigned long)std::numeric_limits<int>::max() ? std::numeric_limits<int>::min() : -(int)n);\n-    }\n-\n-    void setint64(int64_t sn)\n-    {\n-        unsigned char pch[sizeof(sn) + 6];\n-        unsigned char* p = pch + 4;\n-        bool fNegative;\n-        uint64_t n;\n-\n-        if (sn < (int64_t)0)\n-        {\n-            // Since the minimum signed integer cannot be represented as positive so long as its type is signed, \n-            // and it's not well-defined what happens if you make it unsigned before negating it,\n-            // we instead increment the negative integer by 1, convert it, then increment the (now positive) unsigned integer by 1 to compensate\n-            n = -(sn + 1);\n-            ++n;\n-            fNegative = true;\n-        } else {\n-            n = sn;\n-            fNegative = false;\n-        }\n-\n-        bool fLeadingZeroes = true;\n-        for (int i = 0; i < 8; i++)\n-        {\n-            unsigned char c = (n >> 56) & 0xff;\n-            n <<= 8;\n-            if (fLeadingZeroes)\n-            {\n-                if (c == 0)\n-                    continue;\n-                if (c & 0x80)\n-                    *p++ = (fNegative ? 0x80 : 0);\n-                else if (fNegative)\n-                    c |= 0x80;\n-                fLeadingZeroes = false;\n-            }\n-            *p++ = c;\n-        }\n-        unsigned int nSize = p - (pch + 4);\n-        pch[0] = (nSize >> 24) & 0xff;\n-        pch[1] = (nSize >> 16) & 0xff;\n-        pch[2] = (nSize >> 8) & 0xff;\n-        pch[3] = (nSize) & 0xff;\n-        BN_mpi2bn(pch, p - pch, this);\n-    }\n-\n-    void setuint64(uint64_t n)\n-    {\n-        unsigned char pch[sizeof(n) + 6];\n-        unsigned char* p = pch + 4;\n-        bool fLeadingZeroes = true;\n-        for (int i = 0; i < 8; i++)\n-        {\n-            unsigned char c = (n >> 56) & 0xff;\n-            n <<= 8;\n-            if (fLeadingZeroes)\n-            {\n-                if (c == 0)\n-                    continue;\n-                if (c & 0x80)\n-                    *p++ = 0;\n-                fLeadingZeroes = false;\n-            }\n-            *p++ = c;\n-        }\n-        unsigned int nSize = p - (pch + 4);\n-        pch[0] = (nSize >> 24) & 0xff;\n-        pch[1] = (nSize >> 16) & 0xff;\n-        pch[2] = (nSize >> 8) & 0xff;\n-        pch[3] = (nSize) & 0xff;\n-        BN_mpi2bn(pch, p - pch, this);\n-    }\n-\n-    void setuint256(uint256 n)\n-    {\n-        unsigned char pch[sizeof(n) + 6];\n-        unsigned char* p = pch + 4;\n-        bool fLeadingZeroes = true;\n-        unsigned char* pbegin = (unsigned char*)&n;\n-        unsigned char* psrc = pbegin + sizeof(n);\n-        while (psrc != pbegin)\n-        {\n-            unsigned char c = *(--psrc);\n-            if (fLeadingZeroes)\n-            {\n-                if (c == 0)\n-                    continue;\n-                if (c & 0x80)\n-                    *p++ = 0;\n-                fLeadingZeroes = false;\n-            }\n-            *p++ = c;\n-        }\n-        unsigned int nSize = p - (pch + 4);\n-        pch[0] = (nSize >> 24) & 0xff;\n-        pch[1] = (nSize >> 16) & 0xff;\n-        pch[2] = (nSize >> 8) & 0xff;\n-        pch[3] = (nSize >> 0) & 0xff;\n-        BN_mpi2bn(pch, p - pch, this);\n-    }\n-\n-    uint256 getuint256() const\n-    {\n-        unsigned int nSize = BN_bn2mpi(this, NULL);\n-        if (nSize < 4)\n-            return 0;\n-        std::vector<unsigned char> vch(nSize);\n-        BN_bn2mpi(this, &vch[0]);\n-        if (vch.size() > 4)\n-            vch[4] &= 0x7f;\n-        uint256 n = 0;\n-        for (unsigned int i = 0, j = vch.size()-1; i < sizeof(n) && j >= 4; i++, j--)\n-            ((unsigned char*)&n)[i] = vch[j];\n-        return n;\n-    }\n-\n-    void setvch(const std::vector<unsigned char>& vch)\n-    {\n-        std::vector<unsigned char> vch2(vch.size() + 4);\n-        unsigned int nSize = vch.size();\n-        // BIGNUM's byte stream format expects 4 bytes of\n-        // big endian size data info at the front\n-        vch2[0] = (nSize >> 24) & 0xff;\n-        vch2[1] = (nSize >> 16) & 0xff;\n-        vch2[2] = (nSize >> 8) & 0xff;\n-        vch2[3] = (nSize >> 0) & 0xff;\n-        // swap data to big endian\n-        reverse_copy(vch.begin(), vch.end(), vch2.begin() + 4);\n-        BN_mpi2bn(&vch2[0], vch2.size(), this);\n-    }\n-\n-    std::vector<unsigned char> getvch() const\n-    {\n-        unsigned int nSize = BN_bn2mpi(this, NULL);\n-        if (nSize <= 4)\n-            return std::vector<unsigned char>();\n-        std::vector<unsigned char> vch(nSize);\n-        BN_bn2mpi(this, &vch[0]);\n-        vch.erase(vch.begin(), vch.begin() + 4);\n-        reverse(vch.begin(), vch.end());\n-        return vch;\n-    }\n-\n-    // The \"compact\" format is a representation of a whole\n-    // number N using an unsigned 32bit number similar to a\n-    // floating point format.\n-    // The most significant 8 bits are the unsigned exponent of base 256.\n-    // This exponent can be thought of as \"number of bytes of N\".\n-    // The lower 23 bits are the mantissa.\n-    // Bit number 24 (0x800000) represents the sign of N.\n-    // N = (-1^sign) * mantissa * 256^(exponent-3)\n-    //\n-    // Satoshi's original implementation used BN_bn2mpi() and BN_mpi2bn().\n-    // MPI uses the most significant bit of the first byte as sign.\n-    // Thus 0x1234560000 is compact (0x05123456)\n-    // and  0xc0de000000 is compact (0x0600c0de)\n-    // (0x05c0de00) would be -0x40de000000\n-    //\n-    // Bitcoin only uses this \"compact\" format for encoding difficulty\n-    // targets, which are unsigned 256bit quantities.  Thus, all the\n-    // complexities of the sign bit and using base 256 are probably an\n-    // implementation accident.\n-    //\n-    // This implementation directly uses shifts instead of going\n-    // through an intermediate MPI representation.\n-    CBigNum& SetCompact(unsigned int nCompact)\n-    {\n-        unsigned int nSize = nCompact >> 24;\n-        bool fNegative     =(nCompact & 0x00800000) != 0;\n-        unsigned int nWord = nCompact & 0x007fffff;\n-        if (nSize <= 3)\n-        {\n-            nWord >>= 8*(3-nSize);\n-            BN_set_word(this, nWord);\n-        }\n-        else\n-        {\n-            BN_set_word(this, nWord);\n-            BN_lshift(this, this, 8*(nSize-3));\n-        }\n-        BN_set_negative(this, fNegative);\n-        return *this;\n-    }\n-\n-    unsigned int GetCompact() const\n-    {\n-        unsigned int nSize = BN_num_bytes(this);\n-        unsigned int nCompact = 0;\n-        if (nSize <= 3)\n-            nCompact = BN_get_word(this) << 8*(3-nSize);\n-        else\n-        {\n-            CBigNum bn;\n-            BN_rshift(&bn, this, 8*(nSize-3));\n-            nCompact = BN_get_word(&bn);\n-        }\n-        // The 0x00800000 bit denotes the sign.\n-        // Thus, if it is already set, divide the mantissa by 256 and increase the exponent.\n-        if (nCompact & 0x00800000)\n-        {\n-            nCompact >>= 8;\n-            nSize++;\n-        }\n-        nCompact |= nSize << 24;\n-        nCompact |= (BN_is_negative(this) ? 0x00800000 : 0);\n-        return nCompact;\n-    }\n-\n-    void SetHex(const std::string& str)\n-    {\n-        // skip 0x\n-        const char* psz = str.c_str();\n-        while (isspace(*psz))\n-            psz++;\n-        bool fNegative = false;\n-        if (*psz == '-')\n-        {\n-            fNegative = true;\n-            psz++;\n-        }\n-        if (psz[0] == '0' && tolower(psz[1]) == 'x')\n-            psz += 2;\n-        while (isspace(*psz))\n-            psz++;\n-\n-        // hex string to bignum\n-        *this = 0;\n-        int n;\n-        while ((n = HexDigit(*psz)) != -1)\n-        {\n-            *this <<= 4;\n-            *this += n;\n-            ++psz;\n-        }\n-        if (fNegative)\n-            *this = 0 - *this;\n-    }\n-\n-    std::string ToString(int nBase=10) const\n-    {\n-        CAutoBN_CTX pctx;\n-        CBigNum bnBase = nBase;\n-        CBigNum bn0 = 0;\n-        std::string str;\n-        CBigNum bn = *this;\n-        BN_set_negative(&bn, false);\n-        CBigNum dv;\n-        CBigNum rem;\n-        if (BN_cmp(&bn, &bn0) == 0)\n-            return \"0\";\n-        while (BN_cmp(&bn, &bn0) > 0)\n-        {\n-            if (!BN_div(&dv, &rem, &bn, &bnBase, pctx))\n-                throw bignum_error(\"CBigNum::ToString() : BN_div failed\");\n-            bn = dv;\n-            unsigned int c = rem.getulong();\n-            str += \"0123456789abcdef\"[c];\n-        }\n-        if (BN_is_negative(this))\n-            str += \"-\";\n-        reverse(str.begin(), str.end());\n-        return str;\n-    }\n-\n-    std::string GetHex() const\n-    {\n-        return ToString(16);\n-    }\n-\n-    unsigned int GetSerializeSize(int nType=0, int nVersion=PROTOCOL_VERSION) const\n-    {\n-        return ::GetSerializeSize(getvch(), nType, nVersion);\n-    }\n-\n-    template<typename Stream>\n-    void Serialize(Stream& s, int nType=0, int nVersion=PROTOCOL_VERSION) const\n-    {\n-        ::Serialize(s, getvch(), nType, nVersion);\n-    }\n-\n-    template<typename Stream>\n-    void Unserialize(Stream& s, int nType=0, int nVersion=PROTOCOL_VERSION)\n-    {\n-        std::vector<unsigned char> vch;\n-        ::Unserialize(s, vch, nType, nVersion);\n-        setvch(vch);\n-    }\n-\n-\n-    bool operator!() const\n-    {\n-        return BN_is_zero(this);\n-    }\n-\n-    CBigNum& operator+=(const CBigNum& b)\n-    {\n-        if (!BN_add(this, this, &b))\n-            throw bignum_error(\"CBigNum::operator+= : BN_add failed\");\n-        return *this;\n-    }\n-\n-    CBigNum& operator-=(const CBigNum& b)\n-    {\n-        *this = *this - b;\n-        return *this;\n-    }\n-\n-    CBigNum& operator*=(const CBigNum& b)\n-    {\n-        CAutoBN_CTX pctx;\n-        if (!BN_mul(this, this, &b, pctx))\n-            throw bignum_error(\"CBigNum::operator*= : BN_mul failed\");\n-        return *this;\n-    }\n-\n-    CBigNum& operator/=(const CBigNum& b)\n-    {\n-        *this = *this / b;\n-        return *this;\n-    }\n-\n-    CBigNum& operator%=(const CBigNum& b)\n-    {\n-        *this = *this % b;\n-        return *this;\n-    }\n-\n-    CBigNum& operator<<=(unsigned int shift)\n-    {\n-        if (!BN_lshift(this, this, shift))\n-            throw bignum_error(\"CBigNum:operator<<= : BN_lshift failed\");\n-        return *this;\n-    }\n-\n-    CBigNum& operator>>=(unsigned int shift)\n-    {\n-        // Note: BN_rshift segfaults on 64-bit if 2^shift is greater than the number\n-        //   if built on ubuntu 9.04 or 9.10, probably depends on version of OpenSSL\n-        CBigNum a = 1;\n-        a <<= shift;\n-        if (BN_cmp(&a, this) > 0)\n-        {\n-            *this = 0;\n-            return *this;\n-        }\n-\n-        if (!BN_rshift(this, this, shift))\n-            throw bignum_error(\"CBigNum:operator>>= : BN_rshift failed\");\n-        return *this;\n-    }\n-\n-\n-    CBigNum& operator++()\n-    {\n-        // prefix operator\n-        if (!BN_add(this, this, BN_value_one()))\n-            throw bignum_error(\"CBigNum::operator++ : BN_add failed\");\n-        return *this;\n-    }\n-\n-    const CBigNum operator++(int)\n-    {\n-        // postfix operator\n-        const CBigNum ret = *this;\n-        ++(*this);\n-        return ret;\n-    }\n-\n-    CBigNum& operator--()\n-    {\n-        // prefix operator\n-        CBigNum r;\n-        if (!BN_sub(&r, this, BN_value_one()))\n-            throw bignum_error(\"CBigNum::operator-- : BN_sub failed\");\n-        *this = r;\n-        return *this;\n-    }\n-\n-    const CBigNum operator--(int)\n-    {\n-        // postfix operator\n-        const CBigNum ret = *this;\n-        --(*this);\n-        return ret;\n-    }\n-\n-\n-    friend inline const CBigNum operator-(const CBigNum& a, const CBigNum& b);\n-    friend inline const CBigNum operator/(const CBigNum& a, const CBigNum& b);\n-    friend inline const CBigNum operator%(const CBigNum& a, const CBigNum& b);\n-};\n-\n-\n-\n-inline const CBigNum operator+(const CBigNum& a, const CBigNum& b)\n-{\n-    CBigNum r;\n-    if (!BN_add(&r, &a, &b))\n-        throw bignum_error(\"CBigNum::operator+ : BN_add failed\");\n-    return r;\n-}\n-\n-inline const CBigNum operator-(const CBigNum& a, const CBigNum& b)\n-{\n-    CBigNum r;\n-    if (!BN_sub(&r, &a, &b))\n-        throw bignum_error(\"CBigNum::operator- : BN_sub failed\");\n-    return r;\n-}\n-\n-inline const CBigNum operator-(const CBigNum& a)\n-{\n-    CBigNum r(a);\n-    BN_set_negative(&r, !BN_is_negative(&r));\n-    return r;\n-}\n-\n-inline const CBigNum operator*(const CBigNum& a, const CBigNum& b)\n-{\n-    CAutoBN_CTX pctx;\n-    CBigNum r;\n-    if (!BN_mul(&r, &a, &b, pctx))\n-        throw bignum_error(\"CBigNum::operator* : BN_mul failed\");\n-    return r;\n-}\n-\n-inline const CBigNum operator/(const CBigNum& a, const CBigNum& b)\n-{\n-    CAutoBN_CTX pctx;\n-    CBigNum r;\n-    if (!BN_div(&r, NULL, &a, &b, pctx))\n-        throw bignum_error(\"CBigNum::operator/ : BN_div failed\");\n-    return r;\n-}\n-\n-inline const CBigNum operator%(const CBigNum& a, const CBigNum& b)\n-{\n-    CAutoBN_CTX pctx;\n-    CBigNum r;\n-    if (!BN_mod(&r, &a, &b, pctx))\n-        throw bignum_error(\"CBigNum::operator% : BN_div failed\");\n-    return r;\n-}\n-\n-inline const CBigNum operator<<(const CBigNum& a, unsigned int shift)\n-{\n-    CBigNum r;\n-    if (!BN_lshift(&r, &a, shift))\n-        throw bignum_error(\"CBigNum:operator<< : BN_lshift failed\");\n-    return r;\n-}\n-\n-inline const CBigNum operator>>(const CBigNum& a, unsigned int shift)\n-{\n-    CBigNum r = a;\n-    r >>= shift;\n-    return r;\n-}\n-\n-inline bool operator==(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) == 0); }\n-inline bool operator!=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) != 0); }\n-inline bool operator<=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) <= 0); }\n-inline bool operator>=(const CBigNum& a, const CBigNum& b) { return (BN_cmp(&a, &b) >= 0); }\n-inline bool operator<(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) < 0); }\n-inline bool operator>(const CBigNum& a, const CBigNum& b)  { return (BN_cmp(&a, &b) > 0); }\n-\n-#endif"
      },
      {
        "sha": "b1aa1b0e167e166ef608a90502423d855dd916f6",
        "filename": "src/bitcoin-cli-res.rc",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/bitcoin-cli-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/bitcoin-cli-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli-res.rc?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -5,7 +5,6 @@\n #define VER_PRODUCTVERSION_STR STRINGIZE(CLIENT_VERSION_MAJOR) \".\" STRINGIZE(CLIENT_VERSION_MINOR) \".\" STRINGIZE(CLIENT_VERSION_REVISION) \".\" STRINGIZE(CLIENT_VERSION_BUILD)\n #define VER_FILEVERSION        VER_PRODUCTVERSION\n #define VER_FILEVERSION_STR    VER_PRODUCTVERSION_STR\n-#define COPYRIGHT_STR          \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" The Bitcoin Core developers\"\n \n VS_VERSION_INFO VERSIONINFO\n FILEVERSION     VER_FILEVERSION"
      },
      {
        "sha": "016b2f50f5bdefeac2be055a8d8bc96fc93d49de",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 178,
        "deletions": 17,
        "changes": 195,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -7,11 +7,39 @@\n #include \"init.h\"\n #include \"rpcclient.h\"\n #include \"rpcprotocol.h\"\n-#include \"ui_interface.h\" /* for _(...) */\n-#include \"chainparams.h\"\n+#include \"chainparamsbase.h\"\n \n #include <boost/filesystem/operations.hpp>\n \n+#define _(x) std::string(x) /* Keep the _() around in case gettext or such will be used later to translate non-UI */\n+\n+using namespace std;\n+using namespace boost;\n+using namespace boost::asio;\n+using namespace json_spirit;\n+\n+std::string HelpMessageCli()\n+{\n+    string strUsage;\n+    strUsage += _(\"Options:\") + \"\\n\";\n+    strUsage += \"  -?                     \" + _(\"This help message\") + \"\\n\";\n+    strUsage += \"  -conf=<file>           \" + _(\"Specify configuration file (default: bitcoin.conf)\") + \"\\n\";\n+    strUsage += \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\";\n+    strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n+    strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n+                                                \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n+    strUsage += \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\";\n+    strUsage += \"  -rpcport=<port>        \" + _(\"Connect to JSON-RPC on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n+    strUsage += \"  -rpcwait               \" + _(\"Wait for RPC server to start\") + \"\\n\";\n+    strUsage += \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\";\n+    strUsage += \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\";\n+\n+    strUsage += \"\\n\" + _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n+    strUsage += \"  -rpcssl                \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\";\n+\n+    return strUsage;\n+}\n+\n //////////////////////////////////////////////////////////////////////////////\n //\n // Start\n@@ -33,45 +61,178 @@ static bool AppInitRPC(int argc, char* argv[])\n         fprintf(stderr,\"Error reading configuration file: %s\\n\", e.what());\n         return false;\n     }\n-    // Check for -testnet or -regtest parameter (TestNet() calls are only valid after this clause)\n-    if (!SelectParamsFromCommandLine()) {\n+    // Check for -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n+    if (!SelectBaseParamsFromCommandLine()) {\n         fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n         return false;\n     }\n-\n-    if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n+    if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n     {\n-        // First part of help message is specific to RPC client\n-        std::string strUsage = _(\"Bitcoin Core RPC client version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n-            _(\"Usage:\") + \"\\n\" +\n-              \"  bitcoin-cli [options] <command> [params]  \" + _(\"Send command to Bitcoin Core\") + \"\\n\" +\n-              \"  bitcoin-cli [options] help                \" + _(\"List commands\") + \"\\n\" +\n-              \"  bitcoin-cli [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n+        std::string strUsage = _(\"Bitcoin Core RPC client version\") + \" \" + FormatFullVersion() + \"\\n\";\n+        if (!mapArgs.count(\"-version\"))\n+        {\n+            strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n+                  \"  bitcoin-cli [options] <command> [params]  \" + _(\"Send command to Bitcoin Core\") + \"\\n\" +\n+                  \"  bitcoin-cli [options] help                \" + _(\"List commands\") + \"\\n\" +\n+                  \"  bitcoin-cli [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n \n-        strUsage += \"\\n\" + HelpMessageCli(true);\n+            strUsage += \"\\n\" + HelpMessageCli();\n+        }\n \n         fprintf(stdout, \"%s\", strUsage.c_str());\n         return false;\n     }\n     return true;\n }\n \n+Object CallRPC(const string& strMethod, const Array& params)\n+{\n+    if (mapArgs[\"-rpcuser\"] == \"\" && mapArgs[\"-rpcpassword\"] == \"\")\n+        throw runtime_error(strprintf(\n+            _(\"You must set rpcpassword=<password> in the configuration file:\\n%s\\n\"\n+              \"If the file does not exist, create it with owner-readable-only file permissions.\"),\n+                GetConfigFile().string().c_str()));\n+\n+    // Connect to localhost\n+    bool fUseSSL = GetBoolArg(\"-rpcssl\", false);\n+    asio::io_service io_service;\n+    ssl::context context(io_service, ssl::context::sslv23);\n+    context.set_options(ssl::context::no_sslv2);\n+    asio::ssl::stream<asio::ip::tcp::socket> sslStream(io_service, context);\n+    SSLIOStreamDevice<asio::ip::tcp> d(sslStream, fUseSSL);\n+    iostreams::stream< SSLIOStreamDevice<asio::ip::tcp> > stream(d);\n+\n+    bool fWait = GetBoolArg(\"-rpcwait\", false); // -rpcwait means try until server has started\n+    do {\n+        bool fConnected = d.connect(GetArg(\"-rpcconnect\", \"127.0.0.1\"), GetArg(\"-rpcport\", itostr(BaseParams().RPCPort())));\n+        if (fConnected) break;\n+        if (fWait)\n+            MilliSleep(1000);\n+        else\n+            throw runtime_error(\"couldn't connect to server\");\n+    } while (fWait);\n+\n+    // HTTP basic authentication\n+    string strUserPass64 = EncodeBase64(mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"]);\n+    map<string, string> mapRequestHeaders;\n+    mapRequestHeaders[\"Authorization\"] = string(\"Basic \") + strUserPass64;\n+\n+    // Send request\n+    string strRequest = JSONRPCRequest(strMethod, params, 1);\n+    string strPost = HTTPPost(strRequest, mapRequestHeaders);\n+    stream << strPost << std::flush;\n+\n+    // Receive HTTP reply status\n+    int nProto = 0;\n+    int nStatus = ReadHTTPStatus(stream, nProto);\n+\n+    // Receive HTTP reply message headers and body\n+    map<string, string> mapHeaders;\n+    string strReply;\n+    ReadHTTPMessage(stream, mapHeaders, strReply, nProto);\n+\n+    if (nStatus == HTTP_UNAUTHORIZED)\n+        throw runtime_error(\"incorrect rpcuser or rpcpassword (authorization failed)\");\n+    else if (nStatus >= 400 && nStatus != HTTP_BAD_REQUEST && nStatus != HTTP_NOT_FOUND && nStatus != HTTP_INTERNAL_SERVER_ERROR)\n+        throw runtime_error(strprintf(\"server returned HTTP error %d\", nStatus));\n+    else if (strReply.empty())\n+        throw runtime_error(\"no response from server\");\n+\n+    // Parse reply\n+    Value valReply;\n+    if (!read_string(strReply, valReply))\n+        throw runtime_error(\"couldn't parse reply from server\");\n+    const Object& reply = valReply.get_obj();\n+    if (reply.empty())\n+        throw runtime_error(\"expected reply to have result, error and id properties\");\n+\n+    return reply;\n+}\n+\n+int CommandLineRPC(int argc, char *argv[])\n+{\n+    string strPrint;\n+    int nRet = 0;\n+    try\n+    {\n+        // Skip switches\n+        while (argc > 1 && IsSwitchChar(argv[1][0]))\n+        {\n+            argc--;\n+            argv++;\n+        }\n+\n+        // Method\n+        if (argc < 2)\n+            throw runtime_error(\"too few parameters\");\n+        string strMethod = argv[1];\n+\n+        // Parameters default to strings\n+        std::vector<std::string> strParams(&argv[2], &argv[argc]);\n+        Array params = RPCConvertValues(strMethod, strParams);\n+\n+        // Execute\n+        Object reply = CallRPC(strMethod, params);\n+\n+        // Parse reply\n+        const Value& result = find_value(reply, \"result\");\n+        const Value& error  = find_value(reply, \"error\");\n+\n+        if (error.type() != null_type)\n+        {\n+            // Error\n+            strPrint = \"error: \" + write_string(error, false);\n+            int code = find_value(error.get_obj(), \"code\").get_int();\n+            nRet = abs(code);\n+        }\n+        else\n+        {\n+            // Result\n+            if (result.type() == null_type)\n+                strPrint = \"\";\n+            else if (result.type() == str_type)\n+                strPrint = result.get_str();\n+            else\n+                strPrint = write_string(result, true);\n+        }\n+    }\n+    catch (boost::thread_interrupted) {\n+        throw;\n+    }\n+    catch (std::exception& e) {\n+        strPrint = string(\"error: \") + e.what();\n+        nRet = EXIT_FAILURE;\n+    }\n+    catch (...) {\n+        PrintExceptionContinue(NULL, \"CommandLineRPC()\");\n+        throw;\n+    }\n+\n+    if (strPrint != \"\")\n+    {\n+        fprintf((nRet == 0 ? stdout : stderr), \"%s\\n\", strPrint.c_str());\n+    }\n+    return nRet;\n+}\n+\n int main(int argc, char* argv[])\n {\n+    SetupEnvironment();\n+\n     try\n     {\n         if(!AppInitRPC(argc, argv))\n-            return abs(RPC_MISC_ERROR);\n+            return EXIT_FAILURE;\n     }\n     catch (std::exception& e) {\n         PrintExceptionContinue(&e, \"AppInitRPC()\");\n-        return abs(RPC_MISC_ERROR);\n+        return EXIT_FAILURE;\n     } catch (...) {\n         PrintExceptionContinue(NULL, \"AppInitRPC()\");\n-        return abs(RPC_MISC_ERROR);\n+        return EXIT_FAILURE;\n     }\n \n-    int ret = abs(RPC_MISC_ERROR);\n+    int ret = EXIT_FAILURE;\n     try\n     {\n         ret = CommandLineRPC(argc, argv);"
      },
      {
        "sha": "2e6d754495070b84475404f5ee9ed89ef5bd4e1e",
        "filename": "src/bitcoind-res.rc",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/bitcoind-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/bitcoind-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind-res.rc?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -5,7 +5,6 @@\n #define VER_PRODUCTVERSION_STR STRINGIZE(CLIENT_VERSION_MAJOR) \".\" STRINGIZE(CLIENT_VERSION_MINOR) \".\" STRINGIZE(CLIENT_VERSION_REVISION) \".\" STRINGIZE(CLIENT_VERSION_BUILD)\n #define VER_FILEVERSION        VER_PRODUCTVERSION\n #define VER_FILEVERSION_STR    VER_PRODUCTVERSION_STR\n-#define COPYRIGHT_STR          \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" The Bitcoin Core developers\"\n \n VS_VERSION_INFO VERSIONINFO\n FILEVERSION     VER_FILEVERSION"
      },
      {
        "sha": "880955481b0e041fae5adeceef99ace9b9826d3d",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 23,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -4,7 +4,6 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"rpcserver.h\"\n-#include \"rpcclient.h\"\n #include \"init.h\"\n #include \"main.h\"\n #include \"noui.h\"\n@@ -77,25 +76,27 @@ bool AppInit(int argc, char* argv[])\n             fprintf(stderr,\"Error reading configuration file: %s\\n\", e.what());\n             return false;\n         }\n-        // Check for -testnet or -regtest parameter (TestNet() calls are only valid after this clause)\n+        // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n         if (!SelectParamsFromCommandLine()) {\n             fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n             return false;\n         }\n \n-        if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n+        if (mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n         {\n-            // First part of help message is specific to bitcoind / RPC client\n-            std::string strUsage = _(\"Bitcoin Core Daemon\") + \" \" + _(\"version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n-                _(\"Usage:\") + \"\\n\" +\n-                  \"  bitcoind [options]                     \" + _(\"Start Bitcoin Core Daemon\") + \"\\n\" +\n-                _(\"Usage (deprecated, use bitcoin-cli):\") + \"\\n\" +\n-                  \"  bitcoind [options] <command> [params]  \" + _(\"Send command to Bitcoin Core\") + \"\\n\" +\n-                  \"  bitcoind [options] help                \" + _(\"List commands\") + \"\\n\" +\n-                  \"  bitcoind [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n-\n-            strUsage += \"\\n\" + HelpMessage(HMM_BITCOIND);\n-            strUsage += \"\\n\" + HelpMessageCli(false);\n+            std::string strUsage = _(\"Bitcoin Core Daemon\") + \" \" + _(\"version\") + \" \" + FormatFullVersion() + \"\\n\";\n+\n+            if (mapArgs.count(\"-version\"))\n+            {\n+                strUsage += LicenseInfo();\n+            }\n+            else\n+            {\n+                strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n+                      \"  bitcoind [options]                     \" + _(\"Start Bitcoin Core Daemon\") + \"\\n\";\n+\n+                strUsage += \"\\n\" + HelpMessage(HMM_BITCOIND);\n+            }\n \n             fprintf(stdout, \"%s\", strUsage.c_str());\n             return false;\n@@ -109,8 +110,8 @@ bool AppInit(int argc, char* argv[])\n \n         if (fCommandLine)\n         {\n-            int ret = CommandLineRPC(argc, argv);\n-            exit(ret);\n+            fprintf(stderr, \"Error: There is no RPC client functionality in bitcoind anymore. Use the bitcoin-cli utility instead.\\n\");\n+            exit(1);\n         }\n #ifndef WIN32\n         fDaemon = GetBoolArg(\"-daemon\", false);\n@@ -172,15 +173,10 @@ bool AppInit(int argc, char* argv[])\n \n int main(int argc, char* argv[])\n {\n-    bool fRet = false;\n+    SetupEnvironment();\n \n     // Connect bitcoind signal handlers\n     noui_connect();\n \n-    fRet = AppInit(argc, argv);\n-\n-    if (fRet && fDaemon)\n-        return 0;\n-\n-    return (fRet ? 0 : 1);\n+    return (AppInit(argc, argv) ? 0 : 1);\n }"
      },
      {
        "sha": "85a2ddc1892b3303caed3988e5915c42dd885776",
        "filename": "src/bloom.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/bloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/bloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -94,12 +94,19 @@ bool CBloomFilter::contains(const uint256& hash) const\n     return contains(data);\n }\n \n+void CBloomFilter::clear()\n+{\n+    vData.assign(vData.size(),0);\n+    isFull = false;\n+    isEmpty = true;\n+}\n+\n bool CBloomFilter::IsWithinSizeConstraints() const\n {\n     return vData.size() <= MAX_BLOOM_FILTER_SIZE && nHashFuncs <= MAX_HASH_FUNCS;\n }\n \n-bool CBloomFilter::IsRelevantAndUpdate(const CTransaction& tx, const uint256& hash)\n+bool CBloomFilter::IsRelevantAndUpdate(const CTransaction& tx)\n {\n     bool fFound = false;\n     // Match if the filter contains the hash of tx\n@@ -108,6 +115,7 @@ bool CBloomFilter::IsRelevantAndUpdate(const CTransaction& tx, const uint256& ha\n         return true;\n     if (isEmpty)\n         return false;\n+    const uint256& hash = tx.GetHash();\n     if (contains(hash))\n         fFound = true;\n "
      },
      {
        "sha": "d0caf9e9fafbc5a0e6a9bde92885b2765c477c1b",
        "filename": "src/bloom.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/bloom.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/bloom.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -78,12 +78,14 @@ class CBloomFilter\n     bool contains(const COutPoint& outpoint) const;\n     bool contains(const uint256& hash) const;\n \n+    void clear();\n+\n     // True if the size is <= MAX_BLOOM_FILTER_SIZE and the number of hash functions is <= MAX_HASH_FUNCS\n     // (catch a filter which was just deserialized which was too big)\n     bool IsWithinSizeConstraints() const;\n \n     // Also adds any outputs which match the filter to the filter (to match their spending txes)\n-    bool IsRelevantAndUpdate(const CTransaction& tx, const uint256& hash);\n+    bool IsRelevantAndUpdate(const CTransaction& tx);\n \n     // Checks for empty and full filters to avoid wasting cpu\n     void UpdateEmptyFull();"
      },
      {
        "sha": "63067a153d0035ca5497197db3254f15a8befb6a",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 59,
        "deletions": 42,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -6,12 +6,11 @@\n #include \"chainparams.h\"\n \n #include \"assert.h\"\n-#include \"core.h\"\n-#include \"protocol.h\"\n #include \"util.h\"\n \n #include <boost/assign/list_of.hpp>\n \n+using namespace std;\n using namespace boost::assign;\n \n //\n@@ -100,6 +99,8 @@ unsigned int pnSeed[] =\n class CMainParams : public CChainParams {\n public:\n     CMainParams() {\n+        networkID = CBaseChainParams::MAIN;\n+        strNetworkID = \"main\";\n         // The message start string is designed to be unlikely to occur in normal data.\n         // The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n         // a large 4-byte int at any alignment.\n@@ -109,9 +110,14 @@ class CMainParams : public CChainParams {\n         pchMessageStart[3] = 0xd9;\n         vAlertPubKey = ParseHex(\"04fc9702847840aaf195de8442ebecedf5b095cdbb9bc716bda9110971b28a49e0ead8564ff0db22209e0374782c093bb899692d524e9d6a6956e7c5ecbcd68284\");\n         nDefaultPort = 8333;\n-        nRPCPort = 8332;\n-        bnProofOfWorkLimit = CBigNum(~uint256(0) >> 32);\n+        bnProofOfWorkLimit = ~uint256(0) >> 32;\n         nSubsidyHalvingInterval = 210000;\n+        nEnforceBlockUpgradeMajority = 750;\n+        nRejectBlockOutdatedMajority = 950;\n+        nToCheckBlockUpgradeMajority = 1000;\n+        nMinerThreads = 0;\n+        nTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        nTargetSpacing = 10 * 60;\n \n         // Build the genesis block. Note that the output of the genesis coinbase cannot\n         // be spent as it did not originally exist in the database.\n@@ -122,10 +128,10 @@ class CMainParams : public CChainParams {\n         //     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n         //   vMerkleTree: 4a5e1e\n         const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n-        CTransaction txNew;\n+        CMutableTransaction txNew;\n         txNew.vin.resize(1);\n         txNew.vout.resize(1);\n-        txNew.vin[0].scriptSig = CScript() << 486604799 << CBigNum(4) << vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n+        txNew.vin[0].scriptSig = CScript() << 486604799 << CScriptNum(4) << vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n         txNew.vout[0].nValue = 50 * COIN;\n         txNew.vout[0].scriptPubKey = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n         genesis.vtx.push_back(txNew);\n@@ -167,27 +173,25 @@ class CMainParams : public CChainParams {\n             addr.nTime = GetTime() - GetRand(nOneWeek) - nOneWeek;\n             vFixedSeeds.push_back(addr);\n         }\n-    }\n-\n-    virtual const CBlock& GenesisBlock() const { return genesis; }\n-    virtual Network NetworkID() const { return CChainParams::MAIN; }\n \n-    virtual const vector<CAddress>& FixedSeeds() const {\n-        return vFixedSeeds;\n+        fRequireRPCPassword = true;\n+        fMiningRequiresPeers = true;\n+        fDefaultCheckMemPool = false;\n+        fAllowMinDifficultyBlocks = false;\n+        fRequireStandard = true;\n+        fMineBlocksOnDemand = false;\n     }\n-protected:\n-    CBlock genesis;\n-    vector<CAddress> vFixedSeeds;\n };\n static CMainParams mainParams;\n \n-\n //\n // Testnet (v3)\n //\n class CTestNetParams : public CMainParams {\n public:\n     CTestNetParams() {\n+        networkID = CBaseChainParams::TESTNET;\n+        strNetworkID = \"test\";\n         // The message start string is designed to be unlikely to occur in normal data.\n         // The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n         // a large 4-byte int at any alignment.\n@@ -197,8 +201,12 @@ class CTestNetParams : public CMainParams {\n         pchMessageStart[3] = 0x07;\n         vAlertPubKey = ParseHex(\"04302390343f91cc401d56d68b123028bf52e5fca1939df127f63c6467cdf9c8e2c14b61104cf817d0b780da337893ecc4aaff1309e536162dabbdb45200ca2b0a\");\n         nDefaultPort = 18333;\n-        nRPCPort = 18332;\n-        strDataDir = \"testnet3\";\n+        nEnforceBlockUpgradeMajority = 51;\n+        nRejectBlockOutdatedMajority = 75;\n+        nToCheckBlockUpgradeMajority = 100;\n+        nMinerThreads = 0;\n+        nTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        nTargetSpacing = 10 * 60;\n \n         // Modify the testnet genesis block so the timestamp is valid for a later start.\n         genesis.nTime = 1296688602;\n@@ -208,6 +216,7 @@ class CTestNetParams : public CMainParams {\n \n         vFixedSeeds.clear();\n         vSeeds.clear();\n+        vSeeds.push_back(CDNSSeedData(\"alexykot.me\", \"testnet-seed.alexykot.me\"));\n         vSeeds.push_back(CDNSSeedData(\"bitcoin.petertodd.org\", \"testnet-seed.bitcoin.petertodd.org\"));\n         vSeeds.push_back(CDNSSeedData(\"bluematt.me\", \"testnet-seed.bluematt.me\"));\n \n@@ -216,55 +225,73 @@ class CTestNetParams : public CMainParams {\n         base58Prefixes[SECRET_KEY]     = list_of(239);\n         base58Prefixes[EXT_PUBLIC_KEY] = list_of(0x04)(0x35)(0x87)(0xCF);\n         base58Prefixes[EXT_SECRET_KEY] = list_of(0x04)(0x35)(0x83)(0x94);\n+\n+        fRequireRPCPassword = true;\n+        fMiningRequiresPeers = true;\n+        fDefaultCheckMemPool = false;\n+        fAllowMinDifficultyBlocks = true;\n+        fRequireStandard = false;\n+        fMineBlocksOnDemand = false;\n     }\n-    virtual Network NetworkID() const { return CChainParams::TESTNET; }\n };\n static CTestNetParams testNetParams;\n \n-\n //\n // Regression test\n //\n class CRegTestParams : public CTestNetParams {\n public:\n     CRegTestParams() {\n+        networkID = CBaseChainParams::REGTEST;\n+        strNetworkID = \"regtest\";\n         pchMessageStart[0] = 0xfa;\n         pchMessageStart[1] = 0xbf;\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n         nSubsidyHalvingInterval = 150;\n-        bnProofOfWorkLimit = CBigNum(~uint256(0) >> 1);\n+        nEnforceBlockUpgradeMajority = 750;\n+        nRejectBlockOutdatedMajority = 950;\n+        nToCheckBlockUpgradeMajority = 1000;\n+        nMinerThreads = 1;\n+        nTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        nTargetSpacing = 10 * 60;\n+        bnProofOfWorkLimit = ~uint256(0) >> 1;\n         genesis.nTime = 1296688602;\n         genesis.nBits = 0x207fffff;\n         genesis.nNonce = 2;\n         hashGenesisBlock = genesis.GetHash();\n         nDefaultPort = 18444;\n-        strDataDir = \"regtest\";\n         assert(hashGenesisBlock == uint256(\"0x0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"));\n \n         vSeeds.clear();  // Regtest mode doesn't have any DNS seeds.\n-    }\n \n-    virtual bool RequireRPCPassword() const { return false; }\n-    virtual Network NetworkID() const { return CChainParams::REGTEST; }\n+        fRequireRPCPassword = false;\n+        fMiningRequiresPeers = false;\n+        fDefaultCheckMemPool = true;\n+        fAllowMinDifficultyBlocks = true;\n+        fRequireStandard = false;\n+        fMineBlocksOnDemand = true;\n+    }\n };\n static CRegTestParams regTestParams;\n \n-static CChainParams *pCurrentParams = &mainParams;\n+static CChainParams *pCurrentParams = 0;\n \n const CChainParams &Params() {\n+    assert(pCurrentParams);\n     return *pCurrentParams;\n }\n \n-void SelectParams(CChainParams::Network network) {\n+void SelectParams(CBaseChainParams::Network network) {\n+    SelectBaseParams(network);\n     switch (network) {\n-        case CChainParams::MAIN:\n+        case CBaseChainParams::MAIN:\n             pCurrentParams = &mainParams;\n             break;\n-        case CChainParams::TESTNET:\n+        case CBaseChainParams::TESTNET:\n             pCurrentParams = &testNetParams;\n             break;\n-        case CChainParams::REGTEST:\n+        case CBaseChainParams::REGTEST:\n             pCurrentParams = &regTestParams;\n             break;\n         default:\n@@ -274,19 +301,9 @@ void SelectParams(CChainParams::Network network) {\n }\n \n bool SelectParamsFromCommandLine() {\n-    bool fRegTest = GetBoolArg(\"-regtest\", false);\n-    bool fTestNet = GetBoolArg(\"-testnet\", false);\n-\n-    if (fTestNet && fRegTest) {\n+    if (!SelectBaseParamsFromCommandLine())\n         return false;\n-    }\n \n-    if (fRegTest) {\n-        SelectParams(CChainParams::REGTEST);\n-    } else if (fTestNet) {\n-        SelectParams(CChainParams::TESTNET);\n-    } else {\n-        SelectParams(CChainParams::MAIN);\n-    }\n+    SelectParams(BaseParams().NetworkID());\n     return true;\n }"
      },
      {
        "sha": "446256ba82a7020ac822a89d2ef974a8f07f2d55",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 56,
        "deletions": 42,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -6,22 +6,18 @@\n #ifndef BITCOIN_CHAIN_PARAMS_H\n #define BITCOIN_CHAIN_PARAMS_H\n \n-#include \"bignum.h\"\n+#include \"core.h\"\n+#include \"chainparamsbase.h\"\n+#include \"protocol.h\"\n #include \"uint256.h\"\n \n #include <vector>\n \n-using namespace std;\n-\n-#define MESSAGE_START_SIZE 4\n typedef unsigned char MessageStartChars[MESSAGE_START_SIZE];\n \n-class CAddress;\n-class CBlock;\n-\n struct CDNSSeedData {\n-    string name, host;\n-    CDNSSeedData(const string &strName, const string &strHost) : name(strName), host(strHost) {}\n+    std::string name, host;\n+    CDNSSeedData(const std::string &strName, const std::string &strHost) : name(strName), host(strHost) {}\n };\n \n /**\n@@ -34,14 +30,6 @@ struct CDNSSeedData {\n class CChainParams\n {\n public:\n-    enum Network {\n-        MAIN,\n-        TESTNET,\n-        REGTEST,\n-\n-        MAX_NETWORK_TYPES\n-    };\n-\n     enum Base58Type {\n         PUBKEY_ADDRESS,\n         SCRIPT_ADDRESS,\n@@ -54,32 +42,67 @@ class CChainParams\n \n     const uint256& HashGenesisBlock() const { return hashGenesisBlock; }\n     const MessageStartChars& MessageStart() const { return pchMessageStart; }\n-    const vector<unsigned char>& AlertKey() const { return vAlertPubKey; }\n+    const std::vector<unsigned char>& AlertKey() const { return vAlertPubKey; }\n     int GetDefaultPort() const { return nDefaultPort; }\n-    const CBigNum& ProofOfWorkLimit() const { return bnProofOfWorkLimit; }\n+    const uint256& ProofOfWorkLimit() const { return bnProofOfWorkLimit; }\n     int SubsidyHalvingInterval() const { return nSubsidyHalvingInterval; }\n-    virtual const CBlock& GenesisBlock() const = 0;\n-    virtual bool RequireRPCPassword() const { return true; }\n-    const string& DataDir() const { return strDataDir; }\n-    virtual Network NetworkID() const = 0;\n-    const vector<CDNSSeedData>& DNSSeeds() const { return vSeeds; }\n-    const std::vector<unsigned char> &Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n-    virtual const vector<CAddress>& FixedSeeds() const = 0;\n-    int RPCPort() const { return nRPCPort; }\n+    /* Used to check majorities for block version upgrade */\n+    int EnforceBlockUpgradeMajority() const { return nEnforceBlockUpgradeMajority; }\n+    int RejectBlockOutdatedMajority() const { return nRejectBlockOutdatedMajority; }\n+    int ToCheckBlockUpgradeMajority() const { return nToCheckBlockUpgradeMajority; }\n+\n+    /* Used if GenerateBitcoins is called with a negative number of threads */\n+    int DefaultMinerThreads() const { return nMinerThreads; }\n+    const CBlock& GenesisBlock() const { return genesis; }\n+    bool RequireRPCPassword() const { return fRequireRPCPassword; }\n+    /* Make miner wait to have peers to avoid wasting work */\n+    bool MiningRequiresPeers() const { return fMiningRequiresPeers; }\n+    /* Default value for -checkmempool argument */\n+    bool DefaultCheckMemPool() const { return fDefaultCheckMemPool; }\n+    /* Allow mining of a min-difficulty block */\n+    bool AllowMinDifficultyBlocks() const { return fAllowMinDifficultyBlocks; }\n+    /* Make standard checks */\n+    bool RequireStandard() const { return fRequireStandard; }\n+    int64_t TargetTimespan() const { return nTargetTimespan; }\n+    int64_t TargetSpacing() const { return nTargetSpacing; }\n+    int64_t Interval() const { return nTargetTimespan / nTargetSpacing; }\n+    /* Make miner stop after a block is found. In RPC, don't return\n+     * until nGenProcLimit blocks are generated */\n+    bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }\n+    CBaseChainParams::Network NetworkID() const { return networkID; }\n+    /* Return the BIP70 network string (main, test or regtest) */\n+    std::string NetworkIDString() const { return strNetworkID; }\n+    const std::vector<CDNSSeedData>& DNSSeeds() const { return vSeeds; }\n+    const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n+    const std::vector<CAddress>& FixedSeeds() const { return vFixedSeeds; }\n protected:\n     CChainParams() {}\n \n     uint256 hashGenesisBlock;\n     MessageStartChars pchMessageStart;\n     // Raw pub key bytes for the broadcast alert signing key.\n-    vector<unsigned char> vAlertPubKey;\n+    std::vector<unsigned char> vAlertPubKey;\n     int nDefaultPort;\n-    int nRPCPort;\n-    CBigNum bnProofOfWorkLimit;\n+    uint256 bnProofOfWorkLimit;\n     int nSubsidyHalvingInterval;\n-    string strDataDir;\n-    vector<CDNSSeedData> vSeeds;\n+    int nEnforceBlockUpgradeMajority;\n+    int nRejectBlockOutdatedMajority;\n+    int nToCheckBlockUpgradeMajority;\n+    int64_t nTargetTimespan;\n+    int64_t nTargetSpacing;\n+    int nMinerThreads;\n+    std::vector<CDNSSeedData> vSeeds;\n     std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];\n+    CBaseChainParams::Network networkID;\n+    std::string strNetworkID;\n+    CBlock genesis;\n+    std::vector<CAddress> vFixedSeeds;\n+    bool fRequireRPCPassword;\n+    bool fMiningRequiresPeers;\n+    bool fDefaultCheckMemPool;\n+    bool fAllowMinDifficultyBlocks;\n+    bool fRequireStandard;\n+    bool fMineBlocksOnDemand;\n };\n \n /**\n@@ -89,21 +112,12 @@ class CChainParams\n const CChainParams &Params();\n \n /** Sets the params returned by Params() to those for the given network. */\n-void SelectParams(CChainParams::Network network);\n+void SelectParams(CBaseChainParams::Network network);\n \n /**\n  * Looks for -regtest or -testnet and then calls SelectParams as appropriate.\n  * Returns false if an invalid combination is given.\n  */\n bool SelectParamsFromCommandLine();\n \n-inline bool TestNet() {\n-    // Note: it's deliberate that this returns \"false\" for regression test mode.\n-    return Params().NetworkID() == CChainParams::TESTNET;\n-}\n-\n-inline bool RegTest() {\n-    return Params().NetworkID() == CChainParams::REGTEST;\n-}\n-\n #endif"
      },
      {
        "sha": "19a9e72cc965d6564d890b8d28807f44c8daca9e",
        "filename": "src/chainparamsbase.cpp",
        "status": "added",
        "additions": 93,
        "deletions": 0,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,93 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"chainparamsbase.h\"\n+\n+#include \"assert.h\"\n+#include \"util.h\"\n+\n+#include <boost/assign/list_of.hpp>\n+\n+using namespace boost::assign;\n+\n+//\n+// Main network\n+//\n+\n+class CBaseMainParams : public CBaseChainParams {\n+public:\n+    CBaseMainParams() {\n+        networkID = CBaseChainParams::MAIN;\n+        nRPCPort = 8332;\n+    }\n+};\n+static CBaseMainParams mainParams;\n+\n+//\n+// Testnet (v3)\n+//\n+class CBaseTestNetParams : public CBaseMainParams {\n+public:\n+    CBaseTestNetParams() {\n+        networkID = CBaseChainParams::TESTNET;\n+        nRPCPort = 18332;\n+        strDataDir = \"testnet3\";\n+    }\n+};\n+static CBaseTestNetParams testNetParams;\n+\n+//\n+// Regression test\n+//\n+class CBaseRegTestParams : public CBaseTestNetParams {\n+public:\n+    CBaseRegTestParams() {\n+        networkID = CBaseChainParams::REGTEST;\n+        strDataDir = \"regtest\";\n+    }\n+};\n+static CBaseRegTestParams regTestParams;\n+\n+static CBaseChainParams *pCurrentBaseParams = 0;\n+\n+const CBaseChainParams &BaseParams() {\n+    assert(pCurrentBaseParams);\n+    return *pCurrentBaseParams;\n+}\n+\n+void SelectBaseParams(CBaseChainParams::Network network) {\n+    switch (network) {\n+        case CBaseChainParams::MAIN:\n+            pCurrentBaseParams = &mainParams;\n+            break;\n+        case CBaseChainParams::TESTNET:\n+            pCurrentBaseParams = &testNetParams;\n+            break;\n+        case CBaseChainParams::REGTEST:\n+            pCurrentBaseParams = &regTestParams;\n+            break;\n+        default:\n+            assert(false && \"Unimplemented network\");\n+            return;\n+    }\n+}\n+\n+bool SelectBaseParamsFromCommandLine() {\n+    bool fRegTest = GetBoolArg(\"-regtest\", false);\n+    bool fTestNet = GetBoolArg(\"-testnet\", false);\n+\n+    if (fTestNet && fRegTest) {\n+        return false;\n+    }\n+\n+    if (fRegTest) {\n+        SelectBaseParams(CBaseChainParams::REGTEST);\n+    } else if (fTestNet) {\n+        SelectBaseParams(CBaseChainParams::TESTNET);\n+    } else {\n+        SelectBaseParams(CBaseChainParams::MAIN);\n+    }\n+    return true;\n+}"
      },
      {
        "sha": "4a3b26890946624869209a53c32b19df37beed87",
        "filename": "src/chainparamsbase.h",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,52 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CHAIN_PARAMS_BASE_H\n+#define BITCOIN_CHAIN_PARAMS_BASE_H\n+\n+#include <vector>\n+#include <string>\n+\n+/**\n+ * CBaseChainParams defines the base parameters (shared between bitcoin-cli and bitcoind)\n+ * of a given instance of the Bitcoin system.\n+ */\n+class CBaseChainParams\n+{\n+public:\n+    enum Network {\n+        MAIN,\n+        TESTNET,\n+        REGTEST,\n+\n+        MAX_NETWORK_TYPES\n+    };\n+\n+    const std::string& DataDir() const { return strDataDir; }\n+    int RPCPort() const { return nRPCPort; }\n+    Network NetworkID() const { return networkID; }\n+protected:\n+    CBaseChainParams() {}\n+\n+    int nRPCPort;\n+    std::string strDataDir;\n+    Network networkID;\n+};\n+\n+/**\n+ * Return the currently selected parameters. This won't change after app startup\n+ * outside of the unit tests.\n+ */\n+const CBaseChainParams &BaseParams();\n+\n+/** Sets the params returned by Params() to those for the given network. */\n+void SelectBaseParams(CBaseChainParams::Network network);\n+\n+/**\n+ * Looks for -regtest or -testnet and then calls SelectParams as appropriate.\n+ * Returns false if an invalid combination is given.\n+ */\n+bool SelectBaseParamsFromCommandLine();\n+\n+#endif"
      },
      {
        "sha": "4cab11db3d4bff62db8dd466f27e01f3d638a622",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -12,8 +12,8 @@\n #include <boost/assign/list_of.hpp> // for 'map_list_of()'\n #include <boost/foreach.hpp>\n \n-namespace Checkpoints\n-{\n+namespace Checkpoints {\n+\n     typedef std::map<int, uint256> MapCheckpoints;\n \n     // How many times we expect transactions after the last checkpoint to\n@@ -66,8 +66,8 @@ namespace Checkpoints\n         ;\n     static const CCheckpointData dataTestnet = {\n         &mapCheckpointsTestnet,\n-        1338180505,\n-        16341,\n+        1337966069,\n+        1488,\n         300\n     };\n \n@@ -83,9 +83,9 @@ namespace Checkpoints\n     };\n \n     const CCheckpointData &Checkpoints() {\n-        if (Params().NetworkID() == CChainParams::TESTNET)\n+        if (Params().NetworkID() == CBaseChainParams::TESTNET)\n             return dataTestnet;\n-        else if (Params().NetworkID() == CChainParams::MAIN)\n+        else if (Params().NetworkID() == CBaseChainParams::MAIN)\n             return data;\n         else\n             return dataRegtest;\n@@ -127,7 +127,7 @@ namespace Checkpoints\n         } else {\n             double nCheapBefore = data.nTransactionsLastCheckpoint;\n             double nExpensiveBefore = pindex->nChainTx - data.nTransactionsLastCheckpoint;\n-            double nExpensiveAfter = (nNow - pindex->nTime)/86400.0*data.fTransactionsPerDay;\n+            double nExpensiveAfter = (nNow - pindex->GetBlockTime())/86400.0*data.fTransactionsPerDay;\n             fWorkBefore = nCheapBefore + nExpensiveBefore*fSigcheckVerificationFactor;\n             fWorkAfter = nExpensiveAfter*fSigcheckVerificationFactor;\n         }\n@@ -161,4 +161,5 @@ namespace Checkpoints\n         }\n         return NULL;\n     }\n-}\n+\n+} // namespace Checkpoints"
      },
      {
        "sha": "2cf8d41b9d6ea1e7573cc260e7a325f674943265",
        "filename": "src/checkpoints.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -13,8 +13,8 @@ class uint256;\n /** Block-chain checkpoints are compiled-in sanity checks.\n  * They are updated every release or three.\n  */\n-namespace Checkpoints\n-{\n+namespace Checkpoints {\n+\n     // Returns true if block passes checkpoint checks\n     bool CheckBlock(int nHeight, const uint256& hash);\n \n@@ -27,6 +27,7 @@ namespace Checkpoints\n     double GuessVerificationProgress(CBlockIndex *pindex, bool fSigchecks = true);\n \n     extern bool fEnabled;\n-}\n+\n+} //namespace Checkpoints\n \n #endif"
      },
      {
        "sha": "6c718a9f797872b383c43791b36bec1becf3d465",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -2,13 +2,13 @@\n #define CLIENTVERSION_H\n \n #if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n+#include \"config/bitcoin-config.h\"\n #else\n //\n // client versioning and copyright year\n //\n \n-// These need to be macros, as version.cpp's and bitcoin-qt.rc's voodoo requires it\n+// These need to be macros, as version.cpp's and bitcoin*-res.rc's voodoo requires it\n #define CLIENT_VERSION_MAJOR       0\n #define CLIENT_VERSION_MINOR       9\n #define CLIENT_VERSION_REVISION    99\n@@ -28,4 +28,7 @@\n #define STRINGIZE(X) DO_STRINGIZE(X)\n #define DO_STRINGIZE(X) #X\n \n+// Copyright string used in Windows .rc files\n+#define COPYRIGHT_STR          \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" The Bitcoin Core Developers\"\n+\n #endif // CLIENTVERSION_H"
      },
      {
        "sha": "13a4ea95cdab5b8671eb7898df0f8efdb4428f63",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -55,7 +55,7 @@ bool CCoinsView::SetCoins(const uint256 &txid, const CCoins &coins) { return fal\n bool CCoinsView::HaveCoins(const uint256 &txid) { return false; }\n uint256 CCoinsView::GetBestBlock() { return uint256(0); }\n bool CCoinsView::SetBestBlock(const uint256 &hashBlock) { return false; }\n-bool CCoinsView::BatchWrite(const std::map<uint256, CCoins> &mapCoins, const uint256 &hashBlock) { return false; }\n+bool CCoinsView::BatchWrite(const CCoinsMap &mapCoins, const uint256 &hashBlock) { return false; }\n bool CCoinsView::GetStats(CCoinsStats &stats) { return false; }\n \n \n@@ -66,7 +66,7 @@ bool CCoinsViewBacked::HaveCoins(const uint256 &txid) { return base->HaveCoins(t\n uint256 CCoinsViewBacked::GetBestBlock() { return base->GetBestBlock(); }\n bool CCoinsViewBacked::SetBestBlock(const uint256 &hashBlock) { return base->SetBestBlock(hashBlock); }\n void CCoinsViewBacked::SetBackend(CCoinsView &viewIn) { base = &viewIn; }\n-bool CCoinsViewBacked::BatchWrite(const std::map<uint256, CCoins> &mapCoins, const uint256 &hashBlock) { return base->BatchWrite(mapCoins, hashBlock); }\n+bool CCoinsViewBacked::BatchWrite(const CCoinsMap &mapCoins, const uint256 &hashBlock) { return base->BatchWrite(mapCoins, hashBlock); }\n bool CCoinsViewBacked::GetStats(CCoinsStats &stats) { return base->GetStats(stats); }\n \n CCoinsViewCache::CCoinsViewCache(CCoinsView &baseIn, bool fDummy) : CCoinsViewBacked(baseIn), hashBlock(0) { }\n@@ -83,20 +83,20 @@ bool CCoinsViewCache::GetCoins(const uint256 &txid, CCoins &coins) {\n     return false;\n }\n \n-std::map<uint256,CCoins>::iterator CCoinsViewCache::FetchCoins(const uint256 &txid) {\n-    std::map<uint256,CCoins>::iterator it = cacheCoins.lower_bound(txid);\n+CCoinsMap::iterator CCoinsViewCache::FetchCoins(const uint256 &txid) {\n+    CCoinsMap::iterator it = cacheCoins.lower_bound(txid);\n     if (it != cacheCoins.end() && it->first == txid)\n         return it;\n     CCoins tmp;\n     if (!base->GetCoins(txid,tmp))\n         return cacheCoins.end();\n-    std::map<uint256,CCoins>::iterator ret = cacheCoins.insert(it, std::make_pair(txid, CCoins()));\n+    CCoinsMap::iterator ret = cacheCoins.insert(it, std::make_pair(txid, CCoins()));\n     tmp.swap(ret->second);\n     return ret;\n }\n \n CCoins &CCoinsViewCache::GetCoins(const uint256 &txid) {\n-    std::map<uint256,CCoins>::iterator it = FetchCoins(txid);\n+    CCoinsMap::iterator it = FetchCoins(txid);\n     assert(it != cacheCoins.end());\n     return it->second;\n }\n@@ -121,8 +121,8 @@ bool CCoinsViewCache::SetBestBlock(const uint256 &hashBlockIn) {\n     return true;\n }\n \n-bool CCoinsViewCache::BatchWrite(const std::map<uint256, CCoins> &mapCoins, const uint256 &hashBlockIn) {\n-    for (std::map<uint256, CCoins>::const_iterator it = mapCoins.begin(); it != mapCoins.end(); it++)\n+bool CCoinsViewCache::BatchWrite(const CCoinsMap &mapCoins, const uint256 &hashBlockIn) {\n+    for (CCoinsMap::const_iterator it = mapCoins.begin(); it != mapCoins.end(); it++)\n         cacheCoins[it->first] = it->second;\n     hashBlock = hashBlockIn;\n     return true;"
      },
      {
        "sha": "c57a5ec722a91b34dad40d4b567099b6b17a0ea5",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -239,6 +239,7 @@ class CCoins\n     }\n };\n \n+typedef std::map<uint256,CCoins> CCoinsMap;\n \n struct CCoinsStats\n {\n@@ -275,7 +276,7 @@ class CCoinsView\n     virtual bool SetBestBlock(const uint256 &hashBlock);\n \n     // Do a bulk modification (multiple SetCoins + one SetBestBlock)\n-    virtual bool BatchWrite(const std::map<uint256, CCoins> &mapCoins, const uint256 &hashBlock);\n+    virtual bool BatchWrite(const CCoinsMap &mapCoins, const uint256 &hashBlock);\n \n     // Calculate statistics about the unspent transaction output set\n     virtual bool GetStats(CCoinsStats &stats);\n@@ -299,7 +300,7 @@ class CCoinsViewBacked : public CCoinsView\n     uint256 GetBestBlock();\n     bool SetBestBlock(const uint256 &hashBlock);\n     void SetBackend(CCoinsView &viewIn);\n-    bool BatchWrite(const std::map<uint256, CCoins> &mapCoins, const uint256 &hashBlock);\n+    bool BatchWrite(const CCoinsMap &mapCoins, const uint256 &hashBlock);\n     bool GetStats(CCoinsStats &stats);\n };\n \n@@ -309,7 +310,7 @@ class CCoinsViewCache : public CCoinsViewBacked\n {\n protected:\n     uint256 hashBlock;\n-    std::map<uint256,CCoins> cacheCoins;\n+    CCoinsMap cacheCoins;\n \n public:\n     CCoinsViewCache(CCoinsView &baseIn, bool fDummy = false);\n@@ -320,7 +321,7 @@ class CCoinsViewCache : public CCoinsViewBacked\n     bool HaveCoins(const uint256 &txid);\n     uint256 GetBestBlock();\n     bool SetBestBlock(const uint256 &hashBlock);\n-    bool BatchWrite(const std::map<uint256, CCoins> &mapCoins, const uint256 &hashBlock);\n+    bool BatchWrite(const CCoinsMap &mapCoins, const uint256 &hashBlock);\n \n     // Return a modifiable reference to a CCoins. Check HaveCoins first.\n     // Many methods explicitly require a CCoinsViewCache because of this method, to reduce\n@@ -352,7 +353,7 @@ class CCoinsViewCache : public CCoinsViewBacked\n     const CTxOut &GetOutputFor(const CTxIn& input);\n \n private:\n-    std::map<uint256,CCoins>::iterator FetchCoins(const uint256 &txid);\n+    CCoinsMap::iterator FetchCoins(const uint256 &txid);\n };\n \n #endif"
      },
      {
        "sha": "22f82e4259b9473fc2da2ea1222e9623bc8debd7",
        "filename": "src/compat/glibc_compat.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 5,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/compat/glibc_compat.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/compat/glibc_compat.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_compat.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,19 +1,28 @@\n-#include \"bitcoin-config.h\"\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n #include <cstddef>\n+#if defined(HAVE_SYS_SELECT_H)\n #include <sys/select.h>\n+#endif\n \n // Prior to GLIBC_2.14, memcpy was aliased to memmove.\n extern \"C\" void* memmove(void* a, const void* b, size_t c);\n extern \"C\" void* memcpy(void* a, const void* b, size_t c)\n {\n-  return memmove(a, b, c);\n+    return memmove(a, b, c);\n }\n \n extern \"C\" void __chk_fail (void) __attribute__((__noreturn__));\n extern \"C\" FDELT_TYPE __fdelt_warn(FDELT_TYPE a)\n {\n-  if (a >= FD_SETSIZE)\n-    __chk_fail ();\n-  return a / __NFDBITS;\n+    if (a >= FD_SETSIZE)\n+        __chk_fail ();\n+    return a / __NFDBITS;\n }\n extern \"C\" FDELT_TYPE __fdelt_chk(FDELT_TYPE) __attribute__((weak, alias(\"__fdelt_warn\")));"
      },
      {
        "sha": "d93602e0fe07c0bc65469f99ad06099494759a7c",
        "filename": "src/compat/glibc_sanity.cpp",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/compat/glibc_sanity.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/compat/glibc_sanity.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_sanity.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,67 @@\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+#endif\n+\n+#include <cstddef>\n+#if defined(HAVE_SYS_SELECT_H)\n+#include <sys/select.h>\n+#endif\n+\n+extern \"C\" void* memcpy(void* a, const void* b, size_t c);\n+void* memcpy_int(void* a, const void* b, size_t c)\n+{\n+    return memcpy(a,b,c);\n+}\n+\n+namespace {\n+// trigger: Use the memcpy_int wrapper which calls our internal memcpy.\n+//   A direct call to memcpy may be optimized away by the compiler.\n+// test: Fill an array with a sequence of integers. memcpy to a new empty array.\n+//   Verify that the arrays are equal. Use an odd size to decrease the odds of\n+//   the call being optimized away.\n+template <unsigned int T>\n+bool sanity_test_memcpy()\n+{\n+    unsigned int memcpy_test[T];\n+    unsigned int memcpy_verify[T] = {};\n+    for (unsigned int i = 0; i != T; ++i)\n+        memcpy_test[i] = i;\n+\n+    memcpy_int(memcpy_verify,memcpy_test,sizeof(memcpy_test));\n+\n+    for (unsigned int i = 0; i != T; ++i)\n+    {\n+        if(memcpy_verify[i] != i)\n+            return false;\n+    }\n+    return true;\n+}\n+\n+#if defined(HAVE_SYS_SELECT_H)\n+// trigger: Call FD_SET to trigger __fdelt_chk. FORTIFY_SOURCE must be defined\n+//   as >0 and optimizations must be set to at least -O2.\n+// test: Add a file descriptor to an empty fd_set. Verify that it has been\n+//   correctly added.\n+bool sanity_test_fdelt()\n+{\n+    fd_set fds;\n+    FD_ZERO(&fds);\n+    FD_SET(0, &fds);\n+    return FD_ISSET(0,&fds);\n+}\n+#endif\n+\n+} // anon namespace\n+\n+bool glibc_sanity_test()\n+{\n+#if defined(HAVE_SYS_SELECT_H)\n+    if (!sanity_test_fdelt())\n+        return false;\n+#endif\n+    return sanity_test_memcpy<1025>();\n+}"
      },
      {
        "sha": "417166aedae815f197c24642c08df88f5b9d7449",
        "filename": "src/compat/glibcxx_compat.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 22,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/compat/glibcxx_compat.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/compat/glibcxx_compat.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibcxx_compat.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,49 +1,55 @@\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n #include <cstddef>\n #include <istream>\n #include <stdexcept>\n #include <typeinfo>\n \n #ifndef _GLIBCXX_USE_NOEXCEPT\n-    #define _GLIBCXX_USE_NOEXCEPT throw()\n+#define _GLIBCXX_USE_NOEXCEPT throw()\n #endif\n \n namespace std {\n \n const char* bad_exception::what() const throw()\n {\n-  return \"std::bad_exception\";\n+    return \"std::bad_exception\";\n }\n \n const char* bad_cast::what() const throw()\n {\n-  return \"std::bad_cast\";\n+    return \"std::bad_cast\";\n }\n \n const char* bad_alloc::what() const throw()\n {\n-  return \"std::bad_alloc\";\n+    return \"std::bad_alloc\";\n }\n \n namespace __detail\n {\n struct _List_node_base\n {\n-  void _M_hook(std::__detail::_List_node_base* const __position) throw () __attribute__((used))\n-  {\n-    _M_next = __position;\n-    _M_prev = __position->_M_prev;\n-    __position->_M_prev->_M_next = this;\n-    __position->_M_prev = this;\n-  }\n-  void _M_unhook() __attribute__((used))\n-  {\n-    _List_node_base* const __next_node = _M_next;\n-    _List_node_base* const __prev_node = _M_prev;\n-    __prev_node->_M_next = __next_node;\n-    __next_node->_M_prev = __prev_node;\n-  }\n-  _List_node_base* _M_next;\n-  _List_node_base* _M_prev;\n+    void _M_hook(std::__detail::_List_node_base* const __position) throw () __attribute__((used))\n+    {\n+        _M_next = __position;\n+        _M_prev = __position->_M_prev;\n+        __position->_M_prev->_M_next = this;\n+        __position->_M_prev = this;\n+    }\n+\n+    void _M_unhook() __attribute__((used))\n+    {\n+        _List_node_base* const __next_node = _M_next;\n+        _List_node_base* const __prev_node = _M_prev;\n+        __prev_node->_M_next = __next_node;\n+        __next_node->_M_prev = __prev_node;\n+    }\n+\n+    _List_node_base* _M_next;\n+    _List_node_base* _M_prev;\n };\n } // namespace detail\n \n@@ -61,8 +67,8 @@ out_of_range::~out_of_range() _GLIBCXX_USE_NOEXCEPT { }\n // Used with permission.\n // See: https://github.com/madlib/madlib/commit/c3db418c0d34d6813608f2137fef1012ce03043d\n \n-void\n-ctype<char>::_M_widen_init() const {\n+void ctype<char>::_M_widen_init() const\n+{\n     char __tmp[sizeof(_M_widen)];\n     for (unsigned __i = 0; __i < sizeof(_M_widen); ++__i)\n         __tmp[__i] = __i;"
      },
      {
        "sha": "cd8da4fd675d76773bd67e246b085b87f3d36fc2",
        "filename": "src/compat/glibcxx_sanity.cpp",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/compat/glibcxx_sanity.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/compat/glibcxx_sanity.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibcxx_sanity.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,65 @@\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <list>\n+#include <locale>\n+#include <stdexcept>\n+\n+namespace{\n+\n+// trigger: use ctype<char>::widen to trigger ctype<char>::_M_widen_init().\n+// test: convert a char from narrow to wide and back. Verify that the result\n+//   matches the original.\n+bool sanity_test_widen(char testchar)\n+{\n+    const std::ctype<char>& test(std::use_facet< std::ctype<char> >(std::locale()));\n+    return test.narrow(test.widen(testchar),'b') == testchar;\n+}\n+\n+// trigger: use list::push_back and list::pop_back to trigger _M_hook and\n+//   _M_unhook.\n+// test: Push a sequence of integers into a list. Pop them off and verify that\n+//   they match the original sequence.\n+bool sanity_test_list(unsigned int size)\n+{\n+    std::list<unsigned int> test;\n+    for (unsigned int i = 0; i != size; ++i)\n+        test.push_back(i+1);\n+\n+    if (test.size() != size)\n+        return false;\n+\n+    while (!test.empty())\n+    {\n+        if(test.back() != test.size())\n+            return false;\n+        test.pop_back();\n+    }\n+    return true;\n+}\n+\n+} // anon namespace\n+\n+// trigger: string::at(x) on an empty string to trigger __throw_out_of_range_fmt.\n+// test: force std::string to throw an out_of_range exception. Verify that\n+//   it's caught correctly.\n+bool sanity_test_range_fmt()\n+{\n+    std::string test;\n+    try\n+    {\n+        test.at(1);\n+    }\n+    catch (const std::out_of_range&)\n+    {\n+        return true;\n+    }\n+    catch (...){}\n+    return false;\n+}\n+\n+bool glibcxx_sanity_test()\n+{\n+    return sanity_test_widen('a') && sanity_test_list(100) && sanity_test_range_fmt();\n+}"
      },
      {
        "sha": "e7df44307a1a7e49a2d03201171ffca363d0ddb8",
        "filename": "src/compat/sanity.h",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/compat/sanity.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/compat/sanity.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/sanity.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,11 @@\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCON_COMPAT_SANITY_H\n+#define BITCON_COMPAT_SANITY_H\n+\n+bool glibc_sanity_test();\n+bool glibcxx_sanity_test();\n+\n+#endif // BITCON_COMPAT_SANITY_H"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "src/config/.empty",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/config/.empty",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/config/.empty",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/config/.empty?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "47f3b2a015ae86a6cd4b50b584ba6b5ca45e31db",
        "filename": "src/core.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 25,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/core.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/core.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -72,38 +72,67 @@ void CTxOut::print() const\n     LogPrintf(\"%s\\n\", ToString());\n }\n \n-uint256 CTransaction::GetHash() const\n+CFeeRate::CFeeRate(int64_t nFeePaid, size_t nSize)\n+{\n+    if (nSize > 0)\n+        nSatoshisPerK = nFeePaid*1000/nSize;\n+    else\n+        nSatoshisPerK = 0;\n+}\n+\n+int64_t CFeeRate::GetFee(size_t nSize) const\n+{\n+    return nSatoshisPerK*nSize / 1000;\n+}\n+\n+std::string CFeeRate::ToString() const\n+{\n+    std::string result = FormatMoney(nSatoshisPerK) + \" BTC/kB\";\n+    return result;\n+}\n+\n+CMutableTransaction::CMutableTransaction() : nVersion(CTransaction::CURRENT_VERSION), nLockTime(0) {}\n+CMutableTransaction::CMutableTransaction(const CTransaction& tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), nLockTime(tx.nLockTime) {}\n+\n+uint256 CMutableTransaction::GetHash() const\n {\n     return SerializeHash(*this);\n }\n \n-bool CTransaction::IsNewerThan(const CTransaction& old) const\n+void CTransaction::UpdateHash() const\n {\n-    if (vin.size() != old.vin.size())\n-        return false;\n-    for (unsigned int i = 0; i < vin.size(); i++)\n-        if (vin[i].prevout != old.vin[i].prevout)\n-            return false;\n+    *const_cast<uint256*>(&hash) = SerializeHash(*this);\n+}\n+\n+CTransaction::CTransaction() : hash(0), nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0) { }\n+\n+CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), nLockTime(tx.nLockTime) {\n+    UpdateHash();\n+}\n+\n+CTransaction& CTransaction::operator=(const CTransaction &tx) {\n+    *const_cast<int*>(&nVersion) = tx.nVersion;\n+    *const_cast<std::vector<CTxIn>*>(&vin) = tx.vin;\n+    *const_cast<std::vector<CTxOut>*>(&vout) = tx.vout;\n+    *const_cast<unsigned int*>(&nLockTime) = tx.nLockTime;\n+    *const_cast<uint256*>(&hash) = tx.hash;\n+    return *this;\n+}\n \n-    bool fNewer = false;\n-    unsigned int nLowest = std::numeric_limits<unsigned int>::max();\n+bool CTransaction::IsEquivalentTo(const CTransaction& tx) const\n+{\n+    if (nVersion   != tx.nVersion   ||\n+        nLockTime  != tx.nLockTime  ||\n+        vin.size() != tx.vin.size() ||\n+        vout       != tx.vout)\n+        return false;\n     for (unsigned int i = 0; i < vin.size(); i++)\n     {\n-        if (vin[i].nSequence != old.vin[i].nSequence)\n-        {\n-            if (vin[i].nSequence <= nLowest)\n-            {\n-                fNewer = false;\n-                nLowest = vin[i].nSequence;\n-            }\n-            if (old.vin[i].nSequence < nLowest)\n-            {\n-                fNewer = true;\n-                nLowest = old.vin[i].nSequence;\n-            }\n-        }\n+        if (vin[i].nSequence != tx.vin[i].nSequence ||\n+            vin[i].prevout   != tx.vin[i].prevout)\n+            return false;\n     }\n-    return fNewer;\n+    return true;\n }\n \n int64_t CTransaction::GetValueOut() const\n@@ -140,7 +169,7 @@ double CTransaction::ComputePriority(double dPriorityInputs, unsigned int nTxSiz\n std::string CTransaction::ToString() const\n {\n     std::string str;\n-    str += strprintf(\"CTransaction(hash=%s, ver=%d, vin.size=%\"PRIszu\", vout.size=%\"PRIszu\", nLockTime=%u)\\n\",\n+    str += strprintf(\"CTransaction(hash=%s, ver=%d, vin.size=%u, vout.size=%u, nLockTime=%u)\\n\",\n         GetHash().ToString().substr(0,10),\n         nVersion,\n         vin.size(),\n@@ -269,7 +298,7 @@ uint256 CBlock::CheckMerkleBranch(uint256 hash, const std::vector<uint256>& vMer\n \n void CBlock::print() const\n {\n-    LogPrintf(\"CBlock(hash=%s, ver=%d, hashPrevBlock=%s, hashMerkleRoot=%s, nTime=%u, nBits=%08x, nNonce=%u, vtx=%\"PRIszu\")\\n\",\n+    LogPrintf(\"CBlock(hash=%s, ver=%d, hashPrevBlock=%s, hashMerkleRoot=%s, nTime=%u, nBits=%08x, nNonce=%u, vtx=%u)\\n\",\n         GetHash().ToString(),\n         nVersion,\n         hashPrevBlock.ToString(),"
      },
      {
        "sha": "0387336c98fdb7c58eb453e9dddb88671c6ba1d3",
        "filename": "src/core.h",
        "status": "modified",
        "additions": 96,
        "deletions": 44,
        "changes": 140,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/core.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/core.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -112,6 +112,32 @@ class CTxIn\n \n \n \n+/** Type-safe wrapper class to for fee rates\n+ * (how much to pay based on transaction size)\n+ */\n+class CFeeRate\n+{\n+private:\n+    int64_t nSatoshisPerK; // unit is satoshis-per-1,000-bytes\n+public:\n+    CFeeRate() : nSatoshisPerK(0) { }\n+    explicit CFeeRate(int64_t _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) { }\n+    CFeeRate(int64_t nFeePaid, size_t nSize);\n+    CFeeRate(const CFeeRate& other) { nSatoshisPerK = other.nSatoshisPerK; }\n+\n+    int64_t GetFee(size_t size) const; // unit returned is satoshis\n+    int64_t GetFeePerK() const { return GetFee(1000); } // satoshis-per-1000-bytes\n+\n+    friend bool operator<(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK < b.nSatoshisPerK; }\n+    friend bool operator>(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK > b.nSatoshisPerK; }\n+    friend bool operator==(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK == b.nSatoshisPerK; }\n+    friend bool operator<=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK <= b.nSatoshisPerK; }\n+    friend bool operator>=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK >= b.nSatoshisPerK; }\n+    std::string ToString() const;\n+\n+    IMPLEMENT_SERIALIZE( READWRITE(nSatoshisPerK); )\n+};\n+\n \n /** An output of a transaction.  It contains the public key that the next input\n  * must be able to sign with to claim it.\n@@ -148,17 +174,18 @@ class CTxOut\n \n     uint256 GetHash() const;\n \n-    bool IsDust(int64_t nMinRelayTxFee) const\n+    bool IsDust(CFeeRate minRelayTxFee) const\n     {\n-        // \"Dust\" is defined in terms of CTransaction::nMinRelayTxFee,\n+        // \"Dust\" is defined in terms of CTransaction::minRelayTxFee,\n         // which has units satoshis-per-kilobyte.\n         // If you'd pay more than 1/3 in fees\n         // to spend something, then we consider it dust.\n         // A typical txout is 34 bytes big, and will\n-        // need a CTxIn of at least 148 bytes to spend,\n+        // need a CTxIn of at least 148 bytes to spend:\n         // so dust is a txout less than 546 satoshis \n-        // with default nMinRelayTxFee.\n-        return ((nValue*1000)/(3*((int)GetSerializeSize(SER_DISK,0)+148)) < nMinRelayTxFee);\n+        // with default minRelayTxFee.\n+        size_t nSize = GetSerializeSize(SER_DISK,0)+148u;\n+        return (nValue < 3*minRelayTxFee.GetFee(nSize));\n     }\n \n     friend bool operator==(const CTxOut& a, const CTxOut& b)\n@@ -177,49 +204,59 @@ class CTxOut\n };\n \n \n+struct CMutableTransaction;\n+\n /** The basic transaction that is broadcasted on the network and contained in\n  * blocks.  A transaction can contain multiple inputs and outputs.\n  */\n class CTransaction\n {\n+private:\n+    /** Memory only. */\n+    const uint256 hash;\n+    void UpdateHash() const;\n+\n public:\n-    static int64_t nMinTxFee;\n-    static int64_t nMinRelayTxFee;\n     static const int CURRENT_VERSION=1;\n-    int nVersion;\n-    std::vector<CTxIn> vin;\n-    std::vector<CTxOut> vout;\n-    unsigned int nLockTime;\n \n-    CTransaction()\n-    {\n-        SetNull();\n-    }\n+    // The local variables are made const to prevent unintended modification\n+    // without updating the cached hash value. However, CTransaction is not\n+    // actually immutable; deserialization and assignment are implemented,\n+    // and bypass the constness. This is safe, as they update the entire\n+    // structure, including the hash.\n+    const int nVersion;\n+    const std::vector<CTxIn> vin;\n+    const std::vector<CTxOut> vout;\n+    const unsigned int nLockTime;\n \n-    IMPLEMENT_SERIALIZE\n-    (\n-        READWRITE(this->nVersion);\n+    /** Construct a CTransaction that qualifies as IsNull() */\n+    CTransaction();\n+\n+    /** Convert a CMutableTransaction into a CTransaction. */\n+    CTransaction(const CMutableTransaction &tx);\n+\n+    CTransaction& operator=(const CTransaction& tx);\n+\n+    IMPLEMENT_SERIALIZE(\n+        READWRITE(*const_cast<int*>(&this->nVersion));\n         nVersion = this->nVersion;\n-        READWRITE(vin);\n-        READWRITE(vout);\n-        READWRITE(nLockTime);\n+        READWRITE(*const_cast<std::vector<CTxIn>*>(&vin));\n+        READWRITE(*const_cast<std::vector<CTxOut>*>(&vout));\n+        READWRITE(*const_cast<unsigned int*>(&nLockTime));\n+        if (fRead)\n+            UpdateHash();\n     )\n \n-    void SetNull()\n-    {\n-        nVersion = CTransaction::CURRENT_VERSION;\n-        vin.clear();\n-        vout.clear();\n-        nLockTime = 0;\n+    bool IsNull() const {\n+        return vin.empty() && vout.empty();\n     }\n \n-    bool IsNull() const\n-    {\n-        return (vin.empty() && vout.empty());\n+    const uint256& GetHash() const {\n+        return hash;\n     }\n \n-    uint256 GetHash() const;\n-    bool IsNewerThan(const CTransaction& old) const;\n+    // True if only scriptSigs are different\n+    bool IsEquivalentTo(const CTransaction& tx) const;\n \n     // Return sum of txouts.\n     int64_t GetValueOut() const;\n@@ -236,22 +273,43 @@ class CTransaction\n \n     friend bool operator==(const CTransaction& a, const CTransaction& b)\n     {\n-        return (a.nVersion  == b.nVersion &&\n-                a.vin       == b.vin &&\n-                a.vout      == b.vout &&\n-                a.nLockTime == b.nLockTime);\n+        return a.hash == b.hash;\n     }\n \n     friend bool operator!=(const CTransaction& a, const CTransaction& b)\n     {\n-        return !(a == b);\n+        return a.hash != b.hash;\n     }\n \n-\n     std::string ToString() const;\n     void print() const;\n };\n \n+/** A mutable version of CTransaction. */\n+struct CMutableTransaction\n+{\n+    int nVersion;\n+    std::vector<CTxIn> vin;\n+    std::vector<CTxOut> vout;\n+    unsigned int nLockTime;\n+\n+    CMutableTransaction();\n+    CMutableTransaction(const CTransaction& tx);\n+\n+    IMPLEMENT_SERIALIZE(\n+        READWRITE(this->nVersion);\n+        nVersion = this->nVersion;\n+        READWRITE(vin);\n+        READWRITE(vout);\n+        READWRITE(nLockTime);\n+    )\n+\n+    /** Compute the hash of this CMutableTransaction. This is computed on the\n+     * fly, as opposed to GetHash() in CTransaction, which uses a cached result.\n+     */\n+    uint256 GetHash() const;\n+};\n+\n /** wrapper for CTxOut that provides a more compact serialization */\n class CTxOutCompressor\n {\n@@ -440,12 +498,6 @@ class CBlock : public CBlockHeader\n \n     uint256 BuildMerkleTree() const;\n \n-    const uint256 &GetTxHash(unsigned int nIndex) const {\n-        assert(vMerkleTree.size() > 0); // BuildMerkleTree must have been called first\n-        assert(nIndex < vtx.size());\n-        return vMerkleTree[nIndex];\n-    }\n-\n     std::vector<uint256> GetMerkleBranch(int nIndex) const;\n     static uint256 CheckMerkleBranch(uint256 hash, const std::vector<uint256>& vMerkleBranch, int nIndex);\n     void print() const;"
      },
      {
        "sha": "8f675a16c5befec8b1427a4ea2fcf810d413afb1",
        "filename": "src/crypto/common.h",
        "status": "added",
        "additions": 93,
        "deletions": 0,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/crypto/common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/crypto/common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/common.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,93 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CRYPTO_COMMON_H\n+#define BITCOIN_CRYPTO_COMMON_H\n+\n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+#include <stdint.h>\n+#if defined(HAVE_ENDIAN_H)\n+#include <endian.h>\n+#endif\n+\n+uint32_t static inline ReadLE32(const unsigned char *ptr) {\n+#if HAVE_DECL_LE32TOH == 1\n+    return le32toh(*((uint32_t*)ptr));\n+#elif !defined(WORDS_BIGENDIAN)\n+    return *((uint32_t*)ptr);\n+#else\n+    return ((uint32_t)ptr[3] << 24 | (uint32_t)ptr[2] << 16 | (uint32_t)ptr[1] << 8 | (uint32_t)ptr[0]);\n+#endif\n+}\n+\n+uint64_t static inline ReadLE64(const unsigned char *ptr) {\n+\n+#if HAVE_DECL_LE64TOH == 1\n+    return le64toh(*((uint64_t*)ptr));\n+#elif !defined(WORDS_BIGENDIAN)\n+    return *((uint64_t*)ptr);\n+#else\n+    return ((uint64_t)ptr[7] << 56 | (uint64_t)ptr[6] << 48 | (uint64_t)ptr[5] << 40 | (uint64_t)ptr[4] << 32 |\n+            (uint64_t)ptr[3] << 24 | (uint64_t)ptr[2] << 16 | (uint64_t)ptr[1] << 8 | (uint64_t)ptr[0]);\n+#endif\n+}\n+\n+void static inline WriteLE32(unsigned char *ptr, uint32_t x) {\n+#if HAVE_DECL_HTOLE32 == 1\n+    *((uint32_t*)ptr) = htole32(x);\n+#elif !defined(WORDS_BIGENDIAN)\n+    *((uint32_t*)ptr) = x;\n+#else\n+    ptr[3] = x >> 24; ptr[2] = x >> 16; ptr[1] = x >> 8; ptr[0] = x;\n+#endif\n+}\n+\n+void static inline WriteLE64(unsigned char *ptr, uint64_t x) {\n+#if HAVE_DECL_HTOLE64 == 1\n+    *((uint64_t*)ptr) = htole64(x);\n+#elif !defined(WORDS_BIGENDIAN)\n+    *((uint64_t*)ptr) = x;\n+#else\n+    ptr[7] = x >> 56; ptr[6] = x >> 48; ptr[5] = x >> 40; ptr[4] = x >> 32;\n+    ptr[3] = x >> 24; ptr[2] = x >> 16; ptr[1] = x >> 8; ptr[0] = x;\n+#endif\n+}\n+\n+uint32_t static inline ReadBE32(const unsigned char *ptr) {\n+#if HAVE_DECL_BE32TOH == 1\n+    return be32toh(*((uint32_t*)ptr));\n+#else\n+    return ((uint32_t)ptr[0] << 24 | (uint32_t)ptr[1] << 16 | (uint32_t)ptr[2] << 8 | (uint32_t)ptr[3]);\n+#endif\n+}\n+\n+uint64_t static inline ReadBE64(const unsigned char *ptr) {\n+#if HAVE_DECL_BE64TOH == 1\n+    return be64toh(*((uint64_t*)ptr));\n+#else\n+    return ((uint64_t)ptr[0] << 56 | (uint64_t)ptr[1] << 48 | (uint64_t)ptr[2] << 40 | (uint64_t)ptr[3] << 32 |\n+            (uint64_t)ptr[4] << 24 | (uint64_t)ptr[5] << 16 | (uint64_t)ptr[6] << 8 | (uint64_t)ptr[7]);\n+#endif\n+}\n+\n+void static inline WriteBE32(unsigned char *ptr, uint32_t x) {\n+#if HAVE_DECL_HTOBE32 == 1\n+    *((uint32_t*)ptr) = htobe32(x);\n+#else\n+    ptr[0] = x >> 24; ptr[1] = x >> 16; ptr[2] = x >> 8; ptr[3] = x;\n+#endif\n+}\n+\n+void static inline WriteBE64(unsigned char *ptr, uint64_t x) {\n+#if HAVE_DECL_HTOBE64 == 1\n+    *((uint64_t*)ptr) = htobe64(x);\n+#else\n+    ptr[0] = x >> 56; ptr[1] = x >> 48; ptr[2] = x >> 40; ptr[3] = x >> 32;\n+    ptr[4] = x >> 24; ptr[5] = x >> 16; ptr[6] = x >> 8; ptr[7] = x;\n+#endif\n+}\n+\n+#endif"
      },
      {
        "sha": "24bd318d43e60ce1313fb0fa215fc85d23d5770c",
        "filename": "src/crypto/ripemd160.cpp",
        "status": "added",
        "additions": 204,
        "deletions": 0,
        "changes": 204,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/crypto/ripemd160.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/crypto/ripemd160.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/ripemd160.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,204 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"crypto/ripemd160.h\"\n+\n+#include \"crypto/common.h\"\n+#include <string.h>\n+\n+// Internal implementation code.\n+namespace {\n+\n+/// Internal RIPEMD-160 implementation.\n+namespace ripemd160 {\n+\n+uint32_t inline f1(uint32_t x, uint32_t y, uint32_t z) { return x ^ y ^ z; }\n+uint32_t inline f2(uint32_t x, uint32_t y, uint32_t z) { return (x & y) | (~x & z); }\n+uint32_t inline f3(uint32_t x, uint32_t y, uint32_t z) { return (x | ~y) ^ z; }\n+uint32_t inline f4(uint32_t x, uint32_t y, uint32_t z) { return (x & z) | (y & ~z); }\n+uint32_t inline f5(uint32_t x, uint32_t y, uint32_t z) { return x ^ (y | ~z); }\n+\n+/** Initialize RIPEMD-160 state. */\n+void inline Initialize(uint32_t *s) {\n+    s[0] = 0x67452301ul;\n+    s[1] = 0xEFCDAB89ul;\n+    s[2] = 0x98BADCFEul;\n+    s[3] = 0x10325476ul;\n+    s[4] = 0xC3D2E1F0ul;\n+}\n+\n+uint32_t inline rol(uint32_t x, int i) { return (x << i) | (x >> (32-i)); }\n+\n+void inline Round(uint32_t &a, uint32_t b, uint32_t &c, uint32_t d, uint32_t e, uint32_t f, uint32_t x, uint32_t k, int r) {\n+    a = rol(a + f + x + k, r) + e;\n+    c = rol(c, 10);\n+}\n+\n+void inline R11(uint32_t &a, uint32_t b, uint32_t &c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f1(b, c, d), x,            0, r); }\n+void inline R21(uint32_t &a, uint32_t b, uint32_t &c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f2(b, c, d), x, 0x5A827999ul, r); }\n+void inline R31(uint32_t &a, uint32_t b, uint32_t &c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f3(b, c, d), x, 0x6ED9EBA1ul, r); }\n+void inline R41(uint32_t &a, uint32_t b, uint32_t &c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f4(b, c, d), x, 0x8F1BBCDCul, r); }\n+void inline R51(uint32_t &a, uint32_t b, uint32_t &c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f5(b, c, d), x, 0xA953FD4Eul, r); }\n+\n+void inline R12(uint32_t &a, uint32_t b, uint32_t &c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f5(b, c, d), x, 0x50A28BE6ul, r); }\n+void inline R22(uint32_t &a, uint32_t b, uint32_t &c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f4(b, c, d), x, 0x5C4DD124ul, r); }\n+void inline R32(uint32_t &a, uint32_t b, uint32_t &c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f3(b, c, d), x, 0x6D703EF3ul, r); }\n+void inline R42(uint32_t &a, uint32_t b, uint32_t &c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f2(b, c, d), x, 0x7A6D76E9ul, r); }\n+void inline R52(uint32_t &a, uint32_t b, uint32_t &c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f1(b, c, d), x,            0, r); }\n+\n+/** Perform a RIPEMD-160 transformation, processing a 64-byte chunk. */\n+void Transform(uint32_t *s, const unsigned char *chunk) {\n+    uint32_t a1 = s[0], b1 = s[1], c1 = s[2], d1 = s[3], e1 = s[4];\n+    uint32_t a2 = a1  , b2 = b1  , c2 = c1  , d2 = d1  , e2 = e1  ;\n+    uint32_t w0  = ReadLE32(chunk +  0), w1  = ReadLE32(chunk +  4), w2  = ReadLE32(chunk +  8), w3  = ReadLE32(chunk + 12);\n+    uint32_t w4  = ReadLE32(chunk + 16), w5  = ReadLE32(chunk + 20), w6  = ReadLE32(chunk + 24), w7  = ReadLE32(chunk + 28);\n+    uint32_t w8  = ReadLE32(chunk + 32), w9  = ReadLE32(chunk + 36), w10 = ReadLE32(chunk + 40), w11 = ReadLE32(chunk + 44);\n+    uint32_t w12 = ReadLE32(chunk + 48), w13 = ReadLE32(chunk + 52), w14 = ReadLE32(chunk + 56), w15 = ReadLE32(chunk + 60);\n+\n+    R11(a1, b1, c1, d1, e1, w0 , 11); R12(a2, b2, c2, d2, e2, w5 ,  8);\n+    R11(e1, a1, b1, c1, d1, w1 , 14); R12(e2, a2, b2, c2, d2, w14,  9);\n+    R11(d1, e1, a1, b1, c1, w2 , 15); R12(d2, e2, a2, b2, c2, w7 ,  9);\n+    R11(c1, d1, e1, a1, b1, w3 , 12); R12(c2, d2, e2, a2, b2, w0 , 11);\n+    R11(b1, c1, d1, e1, a1, w4 ,  5); R12(b2, c2, d2, e2, a2, w9 , 13);\n+    R11(a1, b1, c1, d1, e1, w5 ,  8); R12(a2, b2, c2, d2, e2, w2 , 15);\n+    R11(e1, a1, b1, c1, d1, w6 ,  7); R12(e2, a2, b2, c2, d2, w11, 15);\n+    R11(d1, e1, a1, b1, c1, w7 ,  9); R12(d2, e2, a2, b2, c2, w4 ,  5);\n+    R11(c1, d1, e1, a1, b1, w8 , 11); R12(c2, d2, e2, a2, b2, w13,  7);\n+    R11(b1, c1, d1, e1, a1, w9 , 13); R12(b2, c2, d2, e2, a2, w6 ,  7);\n+    R11(a1, b1, c1, d1, e1, w10, 14); R12(a2, b2, c2, d2, e2, w15,  8);\n+    R11(e1, a1, b1, c1, d1, w11, 15); R12(e2, a2, b2, c2, d2, w8 , 11);\n+    R11(d1, e1, a1, b1, c1, w12,  6); R12(d2, e2, a2, b2, c2, w1 , 14);\n+    R11(c1, d1, e1, a1, b1, w13,  7); R12(c2, d2, e2, a2, b2, w10, 14);\n+    R11(b1, c1, d1, e1, a1, w14,  9); R12(b2, c2, d2, e2, a2, w3 , 12);\n+    R11(a1, b1, c1, d1, e1, w15,  8); R12(a2, b2, c2, d2, e2, w12,  6);\n+\n+    R21(e1, a1, b1, c1, d1, w7 ,  7); R22(e2, a2, b2, c2, d2, w6 ,  9);\n+    R21(d1, e1, a1, b1, c1, w4 ,  6); R22(d2, e2, a2, b2, c2, w11, 13);\n+    R21(c1, d1, e1, a1, b1, w13,  8); R22(c2, d2, e2, a2, b2, w3 , 15);\n+    R21(b1, c1, d1, e1, a1, w1 , 13); R22(b2, c2, d2, e2, a2, w7 ,  7);\n+    R21(a1, b1, c1, d1, e1, w10, 11); R22(a2, b2, c2, d2, e2, w0 , 12);\n+    R21(e1, a1, b1, c1, d1, w6 ,  9); R22(e2, a2, b2, c2, d2, w13,  8);\n+    R21(d1, e1, a1, b1, c1, w15,  7); R22(d2, e2, a2, b2, c2, w5 ,  9);\n+    R21(c1, d1, e1, a1, b1, w3 , 15); R22(c2, d2, e2, a2, b2, w10, 11);\n+    R21(b1, c1, d1, e1, a1, w12,  7); R22(b2, c2, d2, e2, a2, w14,  7);\n+    R21(a1, b1, c1, d1, e1, w0 , 12); R22(a2, b2, c2, d2, e2, w15,  7);\n+    R21(e1, a1, b1, c1, d1, w9 , 15); R22(e2, a2, b2, c2, d2, w8 , 12);\n+    R21(d1, e1, a1, b1, c1, w5 ,  9); R22(d2, e2, a2, b2, c2, w12,  7);\n+    R21(c1, d1, e1, a1, b1, w2 , 11); R22(c2, d2, e2, a2, b2, w4 ,  6);\n+    R21(b1, c1, d1, e1, a1, w14,  7); R22(b2, c2, d2, e2, a2, w9 , 15);\n+    R21(a1, b1, c1, d1, e1, w11, 13); R22(a2, b2, c2, d2, e2, w1 , 13);\n+    R21(e1, a1, b1, c1, d1, w8 , 12); R22(e2, a2, b2, c2, d2, w2 , 11);\n+\n+    R31(d1, e1, a1, b1, c1, w3 , 11); R32(d2, e2, a2, b2, c2, w15,  9);\n+    R31(c1, d1, e1, a1, b1, w10, 13); R32(c2, d2, e2, a2, b2, w5 ,  7);\n+    R31(b1, c1, d1, e1, a1, w14,  6); R32(b2, c2, d2, e2, a2, w1 , 15);\n+    R31(a1, b1, c1, d1, e1, w4 ,  7); R32(a2, b2, c2, d2, e2, w3 , 11);\n+    R31(e1, a1, b1, c1, d1, w9 , 14); R32(e2, a2, b2, c2, d2, w7 ,  8);\n+    R31(d1, e1, a1, b1, c1, w15,  9); R32(d2, e2, a2, b2, c2, w14,  6);\n+    R31(c1, d1, e1, a1, b1, w8 , 13); R32(c2, d2, e2, a2, b2, w6 ,  6);\n+    R31(b1, c1, d1, e1, a1, w1 , 15); R32(b2, c2, d2, e2, a2, w9 , 14);\n+    R31(a1, b1, c1, d1, e1, w2 , 14); R32(a2, b2, c2, d2, e2, w11, 12);\n+    R31(e1, a1, b1, c1, d1, w7 ,  8); R32(e2, a2, b2, c2, d2, w8 , 13);\n+    R31(d1, e1, a1, b1, c1, w0 , 13); R32(d2, e2, a2, b2, c2, w12,  5);\n+    R31(c1, d1, e1, a1, b1, w6 ,  6); R32(c2, d2, e2, a2, b2, w2 , 14);\n+    R31(b1, c1, d1, e1, a1, w13,  5); R32(b2, c2, d2, e2, a2, w10, 13);\n+    R31(a1, b1, c1, d1, e1, w11, 12); R32(a2, b2, c2, d2, e2, w0 , 13);\n+    R31(e1, a1, b1, c1, d1, w5 ,  7); R32(e2, a2, b2, c2, d2, w4 ,  7);\n+    R31(d1, e1, a1, b1, c1, w12,  5); R32(d2, e2, a2, b2, c2, w13,  5);\n+\n+    R41(c1, d1, e1, a1, b1, w1 , 11); R42(c2, d2, e2, a2, b2, w8 , 15);\n+    R41(b1, c1, d1, e1, a1, w9 , 12); R42(b2, c2, d2, e2, a2, w6 ,  5);\n+    R41(a1, b1, c1, d1, e1, w11, 14); R42(a2, b2, c2, d2, e2, w4 ,  8);\n+    R41(e1, a1, b1, c1, d1, w10, 15); R42(e2, a2, b2, c2, d2, w1 , 11);\n+    R41(d1, e1, a1, b1, c1, w0 , 14); R42(d2, e2, a2, b2, c2, w3 , 14);\n+    R41(c1, d1, e1, a1, b1, w8 , 15); R42(c2, d2, e2, a2, b2, w11, 14);\n+    R41(b1, c1, d1, e1, a1, w12,  9); R42(b2, c2, d2, e2, a2, w15,  6);\n+    R41(a1, b1, c1, d1, e1, w4 ,  8); R42(a2, b2, c2, d2, e2, w0 , 14);\n+    R41(e1, a1, b1, c1, d1, w13,  9); R42(e2, a2, b2, c2, d2, w5 ,  6);\n+    R41(d1, e1, a1, b1, c1, w3 , 14); R42(d2, e2, a2, b2, c2, w12,  9);\n+    R41(c1, d1, e1, a1, b1, w7 ,  5); R42(c2, d2, e2, a2, b2, w2 , 12);\n+    R41(b1, c1, d1, e1, a1, w15,  6); R42(b2, c2, d2, e2, a2, w13,  9);\n+    R41(a1, b1, c1, d1, e1, w14,  8); R42(a2, b2, c2, d2, e2, w9 , 12);\n+    R41(e1, a1, b1, c1, d1, w5 ,  6); R42(e2, a2, b2, c2, d2, w7 ,  5);\n+    R41(d1, e1, a1, b1, c1, w6 ,  5); R42(d2, e2, a2, b2, c2, w10, 15);\n+    R41(c1, d1, e1, a1, b1, w2 , 12); R42(c2, d2, e2, a2, b2, w14,  8);\n+\n+    R51(b1, c1, d1, e1, a1, w4 ,  9); R52(b2, c2, d2, e2, a2, w12,  8);\n+    R51(a1, b1, c1, d1, e1, w0 , 15); R52(a2, b2, c2, d2, e2, w15,  5);\n+    R51(e1, a1, b1, c1, d1, w5 ,  5); R52(e2, a2, b2, c2, d2, w10, 12);\n+    R51(d1, e1, a1, b1, c1, w9 , 11); R52(d2, e2, a2, b2, c2, w4 ,  9);\n+    R51(c1, d1, e1, a1, b1, w7 ,  6); R52(c2, d2, e2, a2, b2, w1 , 12);\n+    R51(b1, c1, d1, e1, a1, w12,  8); R52(b2, c2, d2, e2, a2, w5 ,  5);\n+    R51(a1, b1, c1, d1, e1, w2 , 13); R52(a2, b2, c2, d2, e2, w8 , 14);\n+    R51(e1, a1, b1, c1, d1, w10, 12); R52(e2, a2, b2, c2, d2, w7 ,  6);\n+    R51(d1, e1, a1, b1, c1, w14,  5); R52(d2, e2, a2, b2, c2, w6 ,  8);\n+    R51(c1, d1, e1, a1, b1, w1 , 12); R52(c2, d2, e2, a2, b2, w2 , 13);\n+    R51(b1, c1, d1, e1, a1, w3 , 13); R52(b2, c2, d2, e2, a2, w13,  6);\n+    R51(a1, b1, c1, d1, e1, w8 , 14); R52(a2, b2, c2, d2, e2, w14,  5);\n+    R51(e1, a1, b1, c1, d1, w11, 11); R52(e2, a2, b2, c2, d2, w0 , 15);\n+    R51(d1, e1, a1, b1, c1, w6 ,  8); R52(d2, e2, a2, b2, c2, w3 , 13);\n+    R51(c1, d1, e1, a1, b1, w15,  5); R52(c2, d2, e2, a2, b2, w9 , 11);\n+    R51(b1, c1, d1, e1, a1, w13,  6); R52(b2, c2, d2, e2, a2, w11, 11);\n+\n+    uint32_t t = s[0];\n+    s[0] = s[1] + c1 + d2;\n+    s[1] = s[2] + d1 + e2;\n+    s[2] = s[3] + e1 + a2;\n+    s[3] = s[4] + a1 + b2;\n+    s[4] = t    + b1 + c2;\n+}\n+\n+}  // namespace ripemd160\n+\n+}  // namespace\n+\n+////// RIPEMD160\n+\n+CRIPEMD160::CRIPEMD160() : bytes(0) {\n+    ripemd160::Initialize(s);\n+}\n+\n+CRIPEMD160& CRIPEMD160::Write(const unsigned char *data, size_t len) {\n+    const unsigned char *end = data + len;\n+    size_t bufsize = bytes % 64;\n+    if (bufsize && bufsize + len >= 64) {\n+        // Fill the buffer, and process it.\n+        memcpy(buf + bufsize, data, 64 - bufsize);\n+        bytes += 64 - bufsize;\n+        data += 64 - bufsize;\n+        ripemd160::Transform(s, buf);\n+        bufsize = 0;\n+    }\n+    while (end >= data + 64) {\n+        // Process full chunks directly from the source.\n+        ripemd160::Transform(s, data);\n+        bytes += 64;\n+        data += 64;\n+    }\n+    if (end > data) {\n+        // Fill the buffer with what remains.\n+        memcpy(buf + bufsize, data, end - data);\n+        bytes += end - data;\n+    }\n+    return *this;\n+}\n+\n+void CRIPEMD160::Finalize(unsigned char hash[OUTPUT_SIZE]) {\n+    static const unsigned char pad[64] = {0x80};\n+    unsigned char sizedesc[8];\n+    WriteLE64(sizedesc, bytes << 3);\n+    Write(pad, 1 + ((119 - (bytes % 64)) % 64));\n+    Write(sizedesc, 8);\n+    WriteLE32(hash, s[0]);\n+    WriteLE32(hash+4, s[1]);\n+    WriteLE32(hash+8, s[2]);\n+    WriteLE32(hash+12, s[3]);\n+    WriteLE32(hash+16, s[4]);\n+}\n+\n+CRIPEMD160& CRIPEMD160::Reset() {\n+    bytes = 0;\n+    ripemd160::Initialize(s);\n+    return *this;\n+}"
      },
      {
        "sha": "44bd4879a5098f820619104356e4e740e3c7f159",
        "filename": "src/crypto/ripemd160.h",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/crypto/ripemd160.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/crypto/ripemd160.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/ripemd160.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,27 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_RIPEMD160_H\n+#define BITCOIN_RIPEMD160_H\n+\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+/** A hasher class for RIPEMD-160. */\n+class CRIPEMD160 {\n+private:\n+    uint32_t s[5];\n+    unsigned char buf[64];\n+    size_t bytes;\n+\n+public:\n+    static const size_t OUTPUT_SIZE = 20;\n+\n+    CRIPEMD160();\n+    CRIPEMD160& Write(const unsigned char *data, size_t len);\n+    void Finalize(unsigned char hash[OUTPUT_SIZE]);\n+    CRIPEMD160& Reset();\n+};\n+\n+#endif"
      },
      {
        "sha": "304401a50fa64a5f66258ed56ca8fd54a8387ae7",
        "filename": "src/crypto/sha1.cpp",
        "status": "added",
        "additions": 192,
        "deletions": 0,
        "changes": 192,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/crypto/sha1.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/crypto/sha1.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha1.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,192 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"crypto/sha1.h\"\n+\n+#include \"crypto/common.h\"\n+#include <string.h>\n+\n+// Internal implementation code.\n+namespace {\n+\n+/// Internal SHA-1 implementation.\n+namespace sha1 {\n+\n+/** One round of SHA-1. */\n+void inline Round(uint32_t a, uint32_t &b, uint32_t c, uint32_t d, uint32_t &e,\n+                  uint32_t f, uint32_t k, uint32_t w) {\n+    e += ((a << 5) | (a >> 27)) + f + k + w;\n+    b = (b << 30) | (b >> 2);\n+}\n+\n+uint32_t inline f1(uint32_t b, uint32_t c, uint32_t d) { return d ^ (b & (c ^ d)); }\n+uint32_t inline f2(uint32_t b, uint32_t c, uint32_t d) { return b ^ c ^ d; }\n+uint32_t inline f3(uint32_t b, uint32_t c, uint32_t d) { return (b & c) | (d & (b | c)); }\n+\n+uint32_t inline left(uint32_t x) { return (x << 1) | (x >> 31); }\n+\n+/** Initialize SHA-1 state. */\n+void inline Initialize(uint32_t *s) {\n+    s[0] = 0x67452301ul;\n+    s[1] = 0xEFCDAB89ul;\n+    s[2] = 0x98BADCFEul;\n+    s[3] = 0x10325476ul;\n+    s[4] = 0xC3D2E1F0ul;\n+}\n+\n+const uint32_t k1 = 0x5A827999ul;\n+const uint32_t k2 = 0x6ED9EBA1ul;\n+const uint32_t k3 = 0x8F1BBCDCul;\n+const uint32_t k4 = 0xCA62C1D6ul;\n+\n+/** Perform a SHA-1 transformation, processing a 64-byte chunk. */\n+void Transform(uint32_t *s, const unsigned char *chunk) {\n+    uint32_t a = s[0], b = s[1], c = s[2], d = s[3], e = s[4];\n+    uint32_t w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15;\n+\n+    Round(a, b, c, d, e, f1(b, c, d), k1, w0  = ReadBE32(chunk +  0));\n+    Round(e, a, b, c, d, f1(a, b, c), k1, w1  = ReadBE32(chunk +  4));\n+    Round(d, e, a, b, c, f1(e, a, b), k1, w2  = ReadBE32(chunk +  8));\n+    Round(c, d, e, a, b, f1(d, e, a), k1, w3  = ReadBE32(chunk + 12));\n+    Round(b, c, d, e, a, f1(c, d, e), k1, w4  = ReadBE32(chunk + 16));\n+    Round(a, b, c, d, e, f1(b, c, d), k1, w5  = ReadBE32(chunk + 20));\n+    Round(e, a, b, c, d, f1(a, b, c), k1, w6  = ReadBE32(chunk + 24));\n+    Round(d, e, a, b, c, f1(e, a, b), k1, w7  = ReadBE32(chunk + 28));\n+    Round(c, d, e, a, b, f1(d, e, a), k1, w8  = ReadBE32(chunk + 32));\n+    Round(b, c, d, e, a, f1(c, d, e), k1, w9  = ReadBE32(chunk + 36));\n+    Round(a, b, c, d, e, f1(b, c, d), k1, w10 = ReadBE32(chunk + 40));\n+    Round(e, a, b, c, d, f1(a, b, c), k1, w11 = ReadBE32(chunk + 44));\n+    Round(d, e, a, b, c, f1(e, a, b), k1, w12 = ReadBE32(chunk + 48));\n+    Round(c, d, e, a, b, f1(d, e, a), k1, w13 = ReadBE32(chunk + 52));\n+    Round(b, c, d, e, a, f1(c, d, e), k1, w14 = ReadBE32(chunk + 56));\n+    Round(a, b, c, d, e, f1(b, c, d), k1, w15 = ReadBE32(chunk + 60));\n+\n+    Round(e, a, b, c, d, f1(a, b, c), k1, w0  = left(w0  ^ w13 ^ w8  ^ w2 ));\n+    Round(d, e, a, b, c, f1(e, a, b), k1, w1  = left(w1  ^ w14 ^ w9  ^ w3 ));\n+    Round(c, d, e, a, b, f1(d, e, a), k1, w2  = left(w2  ^ w15 ^ w10 ^ w4 ));\n+    Round(b, c, d, e, a, f1(c, d, e), k1, w3  = left(w3  ^ w0  ^ w11 ^ w5 ));\n+    Round(a, b, c, d, e, f2(b, c, d), k2, w4  = left(w4  ^ w1  ^ w12 ^ w6 ));\n+    Round(e, a, b, c, d, f2(a, b, c), k2, w5  = left(w5  ^ w2  ^ w13 ^ w7 ));\n+    Round(d, e, a, b, c, f2(e, a, b), k2, w6  = left(w6  ^ w3  ^ w14 ^ w8 ));\n+    Round(c, d, e, a, b, f2(d, e, a), k2, w7  = left(w7  ^ w4  ^ w15 ^ w9 ));\n+    Round(b, c, d, e, a, f2(c, d, e), k2, w8  = left(w8  ^ w5  ^ w0  ^ w10));\n+    Round(a, b, c, d, e, f2(b, c, d), k2, w9  = left(w9  ^ w6  ^ w1  ^ w11));\n+    Round(e, a, b, c, d, f2(a, b, c), k2, w10 = left(w10 ^ w7  ^ w2  ^ w12));\n+    Round(d, e, a, b, c, f2(e, a, b), k2, w11 = left(w11 ^ w8  ^ w3  ^ w13));\n+    Round(c, d, e, a, b, f2(d, e, a), k2, w12 = left(w12 ^ w9  ^ w4  ^ w14));\n+    Round(b, c, d, e, a, f2(c, d, e), k2, w13 = left(w13 ^ w10 ^ w5  ^ w15));\n+    Round(a, b, c, d, e, f2(b, c, d), k2, w14 = left(w14 ^ w11 ^ w6  ^ w0 ));\n+    Round(e, a, b, c, d, f2(a, b, c), k2, w15 = left(w15 ^ w12 ^ w7  ^ w1 ));\n+\n+    Round(d, e, a, b, c, f2(e, a, b), k2, w0  = left(w0  ^ w13 ^ w8  ^ w2 ));\n+    Round(c, d, e, a, b, f2(d, e, a), k2, w1  = left(w1  ^ w14 ^ w9  ^ w3 ));\n+    Round(b, c, d, e, a, f2(c, d, e), k2, w2  = left(w2  ^ w15 ^ w10 ^ w4 ));\n+    Round(a, b, c, d, e, f2(b, c, d), k2, w3  = left(w3  ^ w0  ^ w11 ^ w5 ));\n+    Round(e, a, b, c, d, f2(a, b, c), k2, w4  = left(w4  ^ w1  ^ w12 ^ w6 ));\n+    Round(d, e, a, b, c, f2(e, a, b), k2, w5  = left(w5  ^ w2  ^ w13 ^ w7 ));\n+    Round(c, d, e, a, b, f2(d, e, a), k2, w6  = left(w6  ^ w3  ^ w14 ^ w8 ));\n+    Round(b, c, d, e, a, f2(c, d, e), k2, w7  = left(w7  ^ w4  ^ w15 ^ w9 ));\n+    Round(a, b, c, d, e, f3(b, c, d), k3, w8  = left(w8  ^ w5  ^ w0  ^ w10));\n+    Round(e, a, b, c, d, f3(a, b, c), k3, w9  = left(w9  ^ w6  ^ w1  ^ w11));\n+    Round(d, e, a, b, c, f3(e, a, b), k3, w10 = left(w10 ^ w7  ^ w2  ^ w12));\n+    Round(c, d, e, a, b, f3(d, e, a), k3, w11 = left(w11 ^ w8  ^ w3  ^ w13));\n+    Round(b, c, d, e, a, f3(c, d, e), k3, w12 = left(w12 ^ w9  ^ w4  ^ w14));\n+    Round(a, b, c, d, e, f3(b, c, d), k3, w13 = left(w13 ^ w10 ^ w5  ^ w15));\n+    Round(e, a, b, c, d, f3(a, b, c), k3, w14 = left(w14 ^ w11 ^ w6  ^ w0 ));\n+    Round(d, e, a, b, c, f3(e, a, b), k3, w15 = left(w15 ^ w12 ^ w7  ^ w1 ));\n+\n+    Round(c, d, e, a, b, f3(d, e, a), k3, w0  = left(w0  ^ w13 ^ w8  ^ w2 ));\n+    Round(b, c, d, e, a, f3(c, d, e), k3, w1  = left(w1  ^ w14 ^ w9  ^ w3 ));\n+    Round(a, b, c, d, e, f3(b, c, d), k3, w2  = left(w2  ^ w15 ^ w10 ^ w4 ));\n+    Round(e, a, b, c, d, f3(a, b, c), k3, w3  = left(w3  ^ w0  ^ w11 ^ w5 ));\n+    Round(d, e, a, b, c, f3(e, a, b), k3, w4  = left(w4  ^ w1  ^ w12 ^ w6 ));\n+    Round(c, d, e, a, b, f3(d, e, a), k3, w5  = left(w5  ^ w2  ^ w13 ^ w7 ));\n+    Round(b, c, d, e, a, f3(c, d, e), k3, w6  = left(w6  ^ w3  ^ w14 ^ w8 ));\n+    Round(a, b, c, d, e, f3(b, c, d), k3, w7  = left(w7  ^ w4  ^ w15 ^ w9 ));\n+    Round(e, a, b, c, d, f3(a, b, c), k3, w8  = left(w8  ^ w5  ^ w0  ^ w10));\n+    Round(d, e, a, b, c, f3(e, a, b), k3, w9  = left(w9  ^ w6  ^ w1  ^ w11));\n+    Round(c, d, e, a, b, f3(d, e, a), k3, w10 = left(w10 ^ w7  ^ w2  ^ w12));\n+    Round(b, c, d, e, a, f3(c, d, e), k3, w11 = left(w11 ^ w8  ^ w3  ^ w13));\n+    Round(a, b, c, d, e, f2(b, c, d), k4, w12 = left(w12 ^ w9  ^ w4  ^ w14));\n+    Round(e, a, b, c, d, f2(a, b, c), k4, w13 = left(w13 ^ w10 ^ w5  ^ w15));\n+    Round(d, e, a, b, c, f2(e, a, b), k4, w14 = left(w14 ^ w11 ^ w6  ^ w0 ));\n+    Round(c, d, e, a, b, f2(d, e, a), k4, w15 = left(w15 ^ w12 ^ w7  ^ w1 ));\n+\n+    Round(b, c, d, e, a, f2(c, d, e), k4, w0  = left(w0  ^ w13 ^ w8  ^ w2 ));\n+    Round(a, b, c, d, e, f2(b, c, d), k4, w1  = left(w1  ^ w14 ^ w9  ^ w3 ));\n+    Round(e, a, b, c, d, f2(a, b, c), k4, w2  = left(w2  ^ w15 ^ w10 ^ w4 ));\n+    Round(d, e, a, b, c, f2(e, a, b), k4, w3  = left(w3  ^ w0  ^ w11 ^ w5 ));\n+    Round(c, d, e, a, b, f2(d, e, a), k4, w4  = left(w4  ^ w1  ^ w12 ^ w6 ));\n+    Round(b, c, d, e, a, f2(c, d, e), k4, w5  = left(w5  ^ w2  ^ w13 ^ w7 ));\n+    Round(a, b, c, d, e, f2(b, c, d), k4, w6  = left(w6  ^ w3  ^ w14 ^ w8 ));\n+    Round(e, a, b, c, d, f2(a, b, c), k4, w7  = left(w7  ^ w4  ^ w15 ^ w9 ));\n+    Round(d, e, a, b, c, f2(e, a, b), k4, w8  = left(w8  ^ w5  ^ w0  ^ w10));\n+    Round(c, d, e, a, b, f2(d, e, a), k4, w9  = left(w9  ^ w6  ^ w1  ^ w11));\n+    Round(b, c, d, e, a, f2(c, d, e), k4, w10 = left(w10 ^ w7  ^ w2  ^ w12));\n+    Round(a, b, c, d, e, f2(b, c, d), k4, w11 = left(w11 ^ w8  ^ w3  ^ w13));\n+    Round(e, a, b, c, d, f2(a, b, c), k4, w12 = left(w12 ^ w9  ^ w4  ^ w14));\n+    Round(d, e, a, b, c, f2(e, a, b), k4,       left(w13 ^ w10 ^ w5  ^ w15));\n+    Round(c, d, e, a, b, f2(d, e, a), k4,       left(w14 ^ w11 ^ w6  ^ w0 ));\n+    Round(b, c, d, e, a, f2(c, d, e), k4,       left(w15 ^ w12 ^ w7  ^ w1 ));\n+\n+    s[0] += a;\n+    s[1] += b;\n+    s[2] += c;\n+    s[3] += d;\n+    s[4] += e;\n+}\n+\n+}  // namespace sha1\n+\n+}  // namespace\n+\n+////// SHA1\n+\n+CSHA1::CSHA1() : bytes(0) {\n+    sha1::Initialize(s);\n+}\n+\n+CSHA1& CSHA1::Write(const unsigned char *data, size_t len) {\n+    const unsigned char *end = data + len;\n+    size_t bufsize = bytes % 64;\n+    if (bufsize && bufsize + len >= 64) {\n+        // Fill the buffer, and process it.\n+        memcpy(buf + bufsize, data, 64 - bufsize);\n+        bytes += 64 - bufsize;\n+        data += 64 - bufsize;\n+        sha1::Transform(s, buf);\n+        bufsize = 0;\n+    }\n+    while (end >= data + 64) {\n+        // Process full chunks directly from the source.\n+        sha1::Transform(s, data);\n+        bytes += 64;\n+        data += 64;\n+    }\n+    if (end > data) {\n+        // Fill the buffer with what remains.\n+        memcpy(buf + bufsize, data, end - data);\n+        bytes += end - data;\n+    }\n+    return *this;\n+}\n+\n+void CSHA1::Finalize(unsigned char hash[OUTPUT_SIZE]) {\n+    static const unsigned char pad[64] = {0x80};\n+    unsigned char sizedesc[8];\n+    WriteBE64(sizedesc, bytes << 3);\n+    Write(pad, 1 + ((119 - (bytes % 64)) % 64));\n+    Write(sizedesc, 8);\n+    WriteBE32(hash, s[0]);\n+    WriteBE32(hash+4, s[1]);\n+    WriteBE32(hash+8, s[2]);\n+    WriteBE32(hash+12, s[3]);\n+    WriteBE32(hash+16, s[4]);\n+}\n+\n+CSHA1& CSHA1::Reset() {\n+    bytes = 0;\n+    sha1::Initialize(s);\n+    return *this;\n+}"
      },
      {
        "sha": "b16f2c88ce7c7223659cb866a0f2d09d0ee68d1f",
        "filename": "src/crypto/sha1.h",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/crypto/sha1.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/crypto/sha1.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha1.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,27 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SHA1_H\n+#define BITCOIN_SHA1_H\n+\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+/** A hasher class for SHA1. */\n+class CSHA1 {\n+private:\n+    uint32_t s[5];\n+    unsigned char buf[64];\n+    size_t bytes;\n+\n+public:\n+    static const size_t OUTPUT_SIZE = 20;\n+\n+    CSHA1();\n+    CSHA1& Write(const unsigned char *data, size_t len);\n+    void Finalize(unsigned char hash[OUTPUT_SIZE]);\n+    CSHA1& Reset();\n+};\n+\n+#endif"
      },
      {
        "sha": "99a251cb1274d05cdc7c8423f6654e566140967b",
        "filename": "src/crypto/sha2.cpp",
        "status": "added",
        "additions": 398,
        "deletions": 0,
        "changes": 398,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/crypto/sha2.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/crypto/sha2.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha2.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,398 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"crypto/sha2.h\"\n+\n+#include \"crypto/common.h\"\n+#include <string.h>\n+\n+// Internal implementation code.\n+namespace {\n+\n+/// Internal SHA-256 implementation.\n+namespace sha256 {\n+\n+uint32_t inline Ch(uint32_t x, uint32_t y, uint32_t z) { return z ^ (x & (y ^ z)); }\n+uint32_t inline Maj(uint32_t x, uint32_t y, uint32_t z) { return (x & y) | (z & (x | y)); }\n+uint32_t inline Sigma0(uint32_t x) { return (x >> 2 | x << 30) ^ (x >> 13 | x << 19) ^ (x >> 22 | x << 10); }\n+uint32_t inline Sigma1(uint32_t x) { return (x >> 6 | x << 26) ^ (x >> 11 | x << 21) ^ (x >> 25 | x << 7); }\n+uint32_t inline sigma0(uint32_t x) { return (x >> 7 | x << 25) ^ (x >> 18 | x << 14) ^ (x >> 3); }\n+uint32_t inline sigma1(uint32_t x) { return (x >> 17 | x << 15) ^ (x >> 19 | x << 13) ^ (x >> 10); }\n+\n+/** One round of SHA-256. */\n+void inline Round(uint32_t a, uint32_t b, uint32_t c, uint32_t &d,\n+                  uint32_t e, uint32_t f, uint32_t g, uint32_t &h,\n+                  uint32_t k, uint32_t w) {\n+    uint32_t t1 = h + Sigma1(e) + Ch(e, f, g) + k + w;\n+    uint32_t t2 = Sigma0(a) + Maj(a, b, c);\n+    d += t1;\n+    h = t1 + t2;\n+}\n+\n+/** Initialize SHA-256 state. */\n+void inline Initialize(uint32_t *s) {\n+    s[0] = 0x6a09e667ul;\n+    s[1] = 0xbb67ae85ul;\n+    s[2] = 0x3c6ef372ul;\n+    s[3] = 0xa54ff53aul;\n+    s[4] = 0x510e527ful;\n+    s[5] = 0x9b05688cul;\n+    s[6] = 0x1f83d9abul;\n+    s[7] = 0x5be0cd19ul;\n+}\n+\n+/** Perform one SHA-256 transformation, processing a 64-byte chunk. */\n+void Transform(uint32_t *s, const unsigned char *chunk) {\n+    uint32_t a = s[0], b = s[1], c = s[2], d = s[3], e = s[4], f = s[5], g = s[6], h = s[7];\n+    uint32_t w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15;\n+\n+    Round(a, b, c, d, e, f, g, h, 0x428a2f98,  w0 = ReadBE32(chunk + 0));\n+    Round(h, a, b, c, d, e, f, g, 0x71374491,  w1 = ReadBE32(chunk + 4));\n+    Round(g, h, a, b, c, d, e, f, 0xb5c0fbcf,  w2 = ReadBE32(chunk + 8));\n+    Round(f, g, h, a, b, c, d, e, 0xe9b5dba5,  w3 = ReadBE32(chunk + 12));\n+    Round(e, f, g, h, a, b, c, d, 0x3956c25b,  w4 = ReadBE32(chunk + 16));\n+    Round(d, e, f, g, h, a, b, c, 0x59f111f1,  w5 = ReadBE32(chunk + 20));\n+    Round(c, d, e, f, g, h, a, b, 0x923f82a4,  w6 = ReadBE32(chunk + 24));\n+    Round(b, c, d, e, f, g, h, a, 0xab1c5ed5,  w7 = ReadBE32(chunk + 28));\n+    Round(a, b, c, d, e, f, g, h, 0xd807aa98,  w8 = ReadBE32(chunk + 32));\n+    Round(h, a, b, c, d, e, f, g, 0x12835b01,  w9 = ReadBE32(chunk + 36));\n+    Round(g, h, a, b, c, d, e, f, 0x243185be, w10 = ReadBE32(chunk + 40));\n+    Round(f, g, h, a, b, c, d, e, 0x550c7dc3, w11 = ReadBE32(chunk + 44));\n+    Round(e, f, g, h, a, b, c, d, 0x72be5d74, w12 = ReadBE32(chunk + 48));\n+    Round(d, e, f, g, h, a, b, c, 0x80deb1fe, w13 = ReadBE32(chunk + 52));\n+    Round(c, d, e, f, g, h, a, b, 0x9bdc06a7, w14 = ReadBE32(chunk + 56));\n+    Round(b, c, d, e, f, g, h, a, 0xc19bf174, w15 = ReadBE32(chunk + 60));\n+\n+    Round(a, b, c, d, e, f, g, h, 0xe49b69c1,  w0 += sigma1(w14) +  w9 + sigma0( w1));\n+    Round(h, a, b, c, d, e, f, g, 0xefbe4786,  w1 += sigma1(w15) + w10 + sigma0( w2));\n+    Round(g, h, a, b, c, d, e, f, 0x0fc19dc6,  w2 += sigma1( w0) + w11 + sigma0( w3));\n+    Round(f, g, h, a, b, c, d, e, 0x240ca1cc,  w3 += sigma1( w1) + w12 + sigma0( w4));\n+    Round(e, f, g, h, a, b, c, d, 0x2de92c6f,  w4 += sigma1( w2) + w13 + sigma0( w5));\n+    Round(d, e, f, g, h, a, b, c, 0x4a7484aa,  w5 += sigma1( w3) + w14 + sigma0( w6));\n+    Round(c, d, e, f, g, h, a, b, 0x5cb0a9dc,  w6 += sigma1( w4) + w15 + sigma0( w7));\n+    Round(b, c, d, e, f, g, h, a, 0x76f988da,  w7 += sigma1( w5) +  w0 + sigma0( w8));\n+    Round(a, b, c, d, e, f, g, h, 0x983e5152,  w8 += sigma1( w6) +  w1 + sigma0( w9));\n+    Round(h, a, b, c, d, e, f, g, 0xa831c66d,  w9 += sigma1( w7) +  w2 + sigma0(w10));\n+    Round(g, h, a, b, c, d, e, f, 0xb00327c8, w10 += sigma1( w8) +  w3 + sigma0(w11));\n+    Round(f, g, h, a, b, c, d, e, 0xbf597fc7, w11 += sigma1( w9) +  w4 + sigma0(w12));\n+    Round(e, f, g, h, a, b, c, d, 0xc6e00bf3, w12 += sigma1(w10) +  w5 + sigma0(w13));\n+    Round(d, e, f, g, h, a, b, c, 0xd5a79147, w13 += sigma1(w11) +  w6 + sigma0(w14));\n+    Round(c, d, e, f, g, h, a, b, 0x06ca6351, w14 += sigma1(w12) +  w7 + sigma0(w15));\n+    Round(b, c, d, e, f, g, h, a, 0x14292967, w15 += sigma1(w13) +  w8 + sigma0( w0));\n+\n+    Round(a, b, c, d, e, f, g, h, 0x27b70a85,  w0 += sigma1(w14) +  w9 + sigma0( w1));\n+    Round(h, a, b, c, d, e, f, g, 0x2e1b2138,  w1 += sigma1(w15) + w10 + sigma0( w2));\n+    Round(g, h, a, b, c, d, e, f, 0x4d2c6dfc,  w2 += sigma1( w0) + w11 + sigma0( w3));\n+    Round(f, g, h, a, b, c, d, e, 0x53380d13,  w3 += sigma1( w1) + w12 + sigma0( w4));\n+    Round(e, f, g, h, a, b, c, d, 0x650a7354,  w4 += sigma1( w2) + w13 + sigma0( w5));\n+    Round(d, e, f, g, h, a, b, c, 0x766a0abb,  w5 += sigma1( w3) + w14 + sigma0( w6));\n+    Round(c, d, e, f, g, h, a, b, 0x81c2c92e,  w6 += sigma1( w4) + w15 + sigma0( w7));\n+    Round(b, c, d, e, f, g, h, a, 0x92722c85,  w7 += sigma1( w5) +  w0 + sigma0( w8));\n+    Round(a, b, c, d, e, f, g, h, 0xa2bfe8a1,  w8 += sigma1( w6) +  w1 + sigma0( w9));\n+    Round(h, a, b, c, d, e, f, g, 0xa81a664b,  w9 += sigma1( w7) +  w2 + sigma0(w10));\n+    Round(g, h, a, b, c, d, e, f, 0xc24b8b70, w10 += sigma1( w8) +  w3 + sigma0(w11));\n+    Round(f, g, h, a, b, c, d, e, 0xc76c51a3, w11 += sigma1( w9) +  w4 + sigma0(w12));\n+    Round(e, f, g, h, a, b, c, d, 0xd192e819, w12 += sigma1(w10) +  w5 + sigma0(w13));\n+    Round(d, e, f, g, h, a, b, c, 0xd6990624, w13 += sigma1(w11) +  w6 + sigma0(w14));\n+    Round(c, d, e, f, g, h, a, b, 0xf40e3585, w14 += sigma1(w12) +  w7 + sigma0(w15));\n+    Round(b, c, d, e, f, g, h, a, 0x106aa070, w15 += sigma1(w13) +  w8 + sigma0( w0));\n+\n+    Round(a, b, c, d, e, f, g, h, 0x19a4c116,  w0 += sigma1(w14) +  w9 + sigma0( w1));\n+    Round(h, a, b, c, d, e, f, g, 0x1e376c08,  w1 += sigma1(w15) + w10 + sigma0( w2));\n+    Round(g, h, a, b, c, d, e, f, 0x2748774c,  w2 += sigma1( w0) + w11 + sigma0( w3));\n+    Round(f, g, h, a, b, c, d, e, 0x34b0bcb5,  w3 += sigma1( w1) + w12 + sigma0( w4));\n+    Round(e, f, g, h, a, b, c, d, 0x391c0cb3,  w4 += sigma1( w2) + w13 + sigma0( w5));\n+    Round(d, e, f, g, h, a, b, c, 0x4ed8aa4a,  w5 += sigma1( w3) + w14 + sigma0( w6));\n+    Round(c, d, e, f, g, h, a, b, 0x5b9cca4f,  w6 += sigma1( w4) + w15 + sigma0( w7));\n+    Round(b, c, d, e, f, g, h, a, 0x682e6ff3,  w7 += sigma1( w5) +  w0 + sigma0( w8));\n+    Round(a, b, c, d, e, f, g, h, 0x748f82ee,  w8 += sigma1( w6) +  w1 + sigma0( w9));\n+    Round(h, a, b, c, d, e, f, g, 0x78a5636f,  w9 += sigma1( w7) +  w2 + sigma0(w10));\n+    Round(g, h, a, b, c, d, e, f, 0x84c87814, w10 += sigma1( w8) +  w3 + sigma0(w11));\n+    Round(f, g, h, a, b, c, d, e, 0x8cc70208, w11 += sigma1( w9) +  w4 + sigma0(w12));\n+    Round(e, f, g, h, a, b, c, d, 0x90befffa, w12 += sigma1(w10) +  w5 + sigma0(w13));\n+    Round(d, e, f, g, h, a, b, c, 0xa4506ceb, w13 += sigma1(w11) +  w6 + sigma0(w14));\n+    Round(c, d, e, f, g, h, a, b, 0xbef9a3f7, w14  + sigma1(w12) +  w7 + sigma0(w15));\n+    Round(b, c, d, e, f, g, h, a, 0xc67178f2, w15  + sigma1(w13) +  w8 + sigma0( w0));\n+\n+    s[0] += a;\n+    s[1] += b;\n+    s[2] += c;\n+    s[3] += d;\n+    s[4] += e;\n+    s[5] += f;\n+    s[6] += g;\n+    s[7] += h;\n+}\n+\n+}  // namespace sha256\n+\n+/// Internal SHA-512 implementation.\n+namespace sha512 {\n+\n+uint64_t inline Ch(uint64_t x, uint64_t y, uint64_t z) { return z ^ (x & (y ^ z)); }\n+uint64_t inline Maj(uint64_t x, uint64_t y, uint64_t z) { return (x & y) | (z & (x | y)); }\n+uint64_t inline Sigma0(uint64_t x) { return (x >> 28 | x << 36) ^ (x >> 34 | x << 30) ^ (x >> 39 | x << 25); }\n+uint64_t inline Sigma1(uint64_t x) { return (x >> 14 | x << 50) ^ (x >> 18 | x << 46) ^ (x >> 41 | x << 23); }\n+uint64_t inline sigma0(uint64_t x) { return (x >> 1 | x << 63) ^ (x >> 8 | x << 56) ^ (x >> 7); }\n+uint64_t inline sigma1(uint64_t x) { return (x >> 19 | x << 45) ^ (x >> 61 | x << 3) ^ (x >> 6); }\n+\n+/** One round of SHA-512. */\n+void inline Round(uint64_t a, uint64_t b, uint64_t c, uint64_t &d,\n+                  uint64_t e, uint64_t f, uint64_t g, uint64_t &h,\n+                  uint64_t k, uint64_t w) {\n+    uint64_t t1 = h + Sigma1(e) + Ch(e, f, g) + k + w;\n+    uint64_t t2 = Sigma0(a) + Maj(a, b, c);\n+    d += t1;\n+    h = t1 + t2;\n+}\n+\n+/** Initialize SHA-256 state. */\n+void inline Initialize(uint64_t *s) {\n+    s[0] = 0x6a09e667f3bcc908ull;\n+    s[1] = 0xbb67ae8584caa73bull;\n+    s[2] = 0x3c6ef372fe94f82bull;\n+    s[3] = 0xa54ff53a5f1d36f1ull;\n+    s[4] = 0x510e527fade682d1ull;\n+    s[5] = 0x9b05688c2b3e6c1full;\n+    s[6] = 0x1f83d9abfb41bd6bull;\n+    s[7] = 0x5be0cd19137e2179ull;\n+}\n+\n+/** Perform one SHA-512 transformation, processing a 128-byte chunk. */\n+void Transform(uint64_t *s, const unsigned char *chunk) {\n+    uint64_t a = s[0], b = s[1], c = s[2], d = s[3], e = s[4], f = s[5], g = s[6], h = s[7];\n+    uint64_t w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15;\n+\n+    Round(a, b, c, d, e, f, g, h, 0x428a2f98d728ae22ull,  w0 = ReadBE64(chunk + 0));\n+    Round(h, a, b, c, d, e, f, g, 0x7137449123ef65cdull,  w1 = ReadBE64(chunk + 8));\n+    Round(g, h, a, b, c, d, e, f, 0xb5c0fbcfec4d3b2full,  w2 = ReadBE64(chunk + 16));\n+    Round(f, g, h, a, b, c, d, e, 0xe9b5dba58189dbbcull,  w3 = ReadBE64(chunk + 24));\n+    Round(e, f, g, h, a, b, c, d, 0x3956c25bf348b538ull,  w4 = ReadBE64(chunk + 32));\n+    Round(d, e, f, g, h, a, b, c, 0x59f111f1b605d019ull,  w5 = ReadBE64(chunk + 40));\n+    Round(c, d, e, f, g, h, a, b, 0x923f82a4af194f9bull,  w6 = ReadBE64(chunk + 48));\n+    Round(b, c, d, e, f, g, h, a, 0xab1c5ed5da6d8118ull,  w7 = ReadBE64(chunk + 56));\n+    Round(a, b, c, d, e, f, g, h, 0xd807aa98a3030242ull,  w8 = ReadBE64(chunk + 64));\n+    Round(h, a, b, c, d, e, f, g, 0x12835b0145706fbeull,  w9 = ReadBE64(chunk + 72));\n+    Round(g, h, a, b, c, d, e, f, 0x243185be4ee4b28cull, w10 = ReadBE64(chunk + 80));\n+    Round(f, g, h, a, b, c, d, e, 0x550c7dc3d5ffb4e2ull, w11 = ReadBE64(chunk + 88));\n+    Round(e, f, g, h, a, b, c, d, 0x72be5d74f27b896full, w12 = ReadBE64(chunk + 96));\n+    Round(d, e, f, g, h, a, b, c, 0x80deb1fe3b1696b1ull, w13 = ReadBE64(chunk + 104));\n+    Round(c, d, e, f, g, h, a, b, 0x9bdc06a725c71235ull, w14 = ReadBE64(chunk + 112));\n+    Round(b, c, d, e, f, g, h, a, 0xc19bf174cf692694ull, w15 = ReadBE64(chunk + 120));\n+\n+    Round(a, b, c, d, e, f, g, h, 0xe49b69c19ef14ad2ull,  w0 += sigma1(w14) +  w9 + sigma0( w1));\n+    Round(h, a, b, c, d, e, f, g, 0xefbe4786384f25e3ull,  w1 += sigma1(w15) + w10 + sigma0( w2));\n+    Round(g, h, a, b, c, d, e, f, 0x0fc19dc68b8cd5b5ull,  w2 += sigma1( w0) + w11 + sigma0( w3));\n+    Round(f, g, h, a, b, c, d, e, 0x240ca1cc77ac9c65ull,  w3 += sigma1( w1) + w12 + sigma0( w4));\n+    Round(e, f, g, h, a, b, c, d, 0x2de92c6f592b0275ull,  w4 += sigma1( w2) + w13 + sigma0( w5));\n+    Round(d, e, f, g, h, a, b, c, 0x4a7484aa6ea6e483ull,  w5 += sigma1( w3) + w14 + sigma0( w6));\n+    Round(c, d, e, f, g, h, a, b, 0x5cb0a9dcbd41fbd4ull,  w6 += sigma1( w4) + w15 + sigma0( w7));\n+    Round(b, c, d, e, f, g, h, a, 0x76f988da831153b5ull,  w7 += sigma1( w5) +  w0 + sigma0( w8));\n+    Round(a, b, c, d, e, f, g, h, 0x983e5152ee66dfabull,  w8 += sigma1( w6) +  w1 + sigma0( w9));\n+    Round(h, a, b, c, d, e, f, g, 0xa831c66d2db43210ull,  w9 += sigma1( w7) +  w2 + sigma0(w10));\n+    Round(g, h, a, b, c, d, e, f, 0xb00327c898fb213full, w10 += sigma1( w8) +  w3 + sigma0(w11));\n+    Round(f, g, h, a, b, c, d, e, 0xbf597fc7beef0ee4ull, w11 += sigma1( w9) +  w4 + sigma0(w12));\n+    Round(e, f, g, h, a, b, c, d, 0xc6e00bf33da88fc2ull, w12 += sigma1(w10) +  w5 + sigma0(w13));\n+    Round(d, e, f, g, h, a, b, c, 0xd5a79147930aa725ull, w13 += sigma1(w11) +  w6 + sigma0(w14));\n+    Round(c, d, e, f, g, h, a, b, 0x06ca6351e003826full, w14 += sigma1(w12) +  w7 + sigma0(w15));\n+    Round(b, c, d, e, f, g, h, a, 0x142929670a0e6e70ull, w15 += sigma1(w13) +  w8 + sigma0( w0));\n+\n+    Round(a, b, c, d, e, f, g, h, 0x27b70a8546d22ffcull,  w0 += sigma1(w14) +  w9 + sigma0( w1));\n+    Round(h, a, b, c, d, e, f, g, 0x2e1b21385c26c926ull,  w1 += sigma1(w15) + w10 + sigma0( w2));\n+    Round(g, h, a, b, c, d, e, f, 0x4d2c6dfc5ac42aedull,  w2 += sigma1( w0) + w11 + sigma0( w3));\n+    Round(f, g, h, a, b, c, d, e, 0x53380d139d95b3dfull,  w3 += sigma1( w1) + w12 + sigma0( w4));\n+    Round(e, f, g, h, a, b, c, d, 0x650a73548baf63deull,  w4 += sigma1( w2) + w13 + sigma0( w5));\n+    Round(d, e, f, g, h, a, b, c, 0x766a0abb3c77b2a8ull,  w5 += sigma1( w3) + w14 + sigma0( w6));\n+    Round(c, d, e, f, g, h, a, b, 0x81c2c92e47edaee6ull,  w6 += sigma1( w4) + w15 + sigma0( w7));\n+    Round(b, c, d, e, f, g, h, a, 0x92722c851482353bull,  w7 += sigma1( w5) +  w0 + sigma0( w8));\n+    Round(a, b, c, d, e, f, g, h, 0xa2bfe8a14cf10364ull,  w8 += sigma1( w6) +  w1 + sigma0( w9));\n+    Round(h, a, b, c, d, e, f, g, 0xa81a664bbc423001ull,  w9 += sigma1( w7) +  w2 + sigma0(w10));\n+    Round(g, h, a, b, c, d, e, f, 0xc24b8b70d0f89791ull, w10 += sigma1( w8) +  w3 + sigma0(w11));\n+    Round(f, g, h, a, b, c, d, e, 0xc76c51a30654be30ull, w11 += sigma1( w9) +  w4 + sigma0(w12));\n+    Round(e, f, g, h, a, b, c, d, 0xd192e819d6ef5218ull, w12 += sigma1(w10) +  w5 + sigma0(w13));\n+    Round(d, e, f, g, h, a, b, c, 0xd69906245565a910ull, w13 += sigma1(w11) +  w6 + sigma0(w14));\n+    Round(c, d, e, f, g, h, a, b, 0xf40e35855771202aull, w14 += sigma1(w12) +  w7 + sigma0(w15));\n+    Round(b, c, d, e, f, g, h, a, 0x106aa07032bbd1b8ull, w15 += sigma1(w13) +  w8 + sigma0( w0));\n+\n+    Round(a, b, c, d, e, f, g, h, 0x19a4c116b8d2d0c8ull,  w0 += sigma1(w14) +  w9 + sigma0( w1));\n+    Round(h, a, b, c, d, e, f, g, 0x1e376c085141ab53ull,  w1 += sigma1(w15) + w10 + sigma0( w2));\n+    Round(g, h, a, b, c, d, e, f, 0x2748774cdf8eeb99ull,  w2 += sigma1( w0) + w11 + sigma0( w3));\n+    Round(f, g, h, a, b, c, d, e, 0x34b0bcb5e19b48a8ull,  w3 += sigma1( w1) + w12 + sigma0( w4));\n+    Round(e, f, g, h, a, b, c, d, 0x391c0cb3c5c95a63ull,  w4 += sigma1( w2) + w13 + sigma0( w5));\n+    Round(d, e, f, g, h, a, b, c, 0x4ed8aa4ae3418acbull,  w5 += sigma1( w3) + w14 + sigma0( w6));\n+    Round(c, d, e, f, g, h, a, b, 0x5b9cca4f7763e373ull,  w6 += sigma1( w4) + w15 + sigma0( w7));\n+    Round(b, c, d, e, f, g, h, a, 0x682e6ff3d6b2b8a3ull,  w7 += sigma1( w5) +  w0 + sigma0( w8));\n+    Round(a, b, c, d, e, f, g, h, 0x748f82ee5defb2fcull,  w8 += sigma1( w6) +  w1 + sigma0( w9));\n+    Round(h, a, b, c, d, e, f, g, 0x78a5636f43172f60ull,  w9 += sigma1( w7) +  w2 + sigma0(w10));\n+    Round(g, h, a, b, c, d, e, f, 0x84c87814a1f0ab72ull, w10 += sigma1( w8) +  w3 + sigma0(w11));\n+    Round(f, g, h, a, b, c, d, e, 0x8cc702081a6439ecull, w11 += sigma1( w9) +  w4 + sigma0(w12));\n+    Round(e, f, g, h, a, b, c, d, 0x90befffa23631e28ull, w12 += sigma1(w10) +  w5 + sigma0(w13));\n+    Round(d, e, f, g, h, a, b, c, 0xa4506cebde82bde9ull, w13 += sigma1(w11) +  w6 + sigma0(w14));\n+    Round(c, d, e, f, g, h, a, b, 0xbef9a3f7b2c67915ull, w14 += sigma1(w12) +  w7 + sigma0(w15));\n+    Round(b, c, d, e, f, g, h, a, 0xc67178f2e372532bull, w15 += sigma1(w13) +  w8 + sigma0( w0));\n+\n+    Round(a, b, c, d, e, f, g, h, 0xca273eceea26619cull,  w0 += sigma1(w14) +  w9 + sigma0( w1));\n+    Round(h, a, b, c, d, e, f, g, 0xd186b8c721c0c207ull,  w1 += sigma1(w15) + w10 + sigma0( w2));\n+    Round(g, h, a, b, c, d, e, f, 0xeada7dd6cde0eb1eull,  w2 += sigma1( w0) + w11 + sigma0( w3));\n+    Round(f, g, h, a, b, c, d, e, 0xf57d4f7fee6ed178ull,  w3 += sigma1( w1) + w12 + sigma0( w4));\n+    Round(e, f, g, h, a, b, c, d, 0x06f067aa72176fbaull,  w4 += sigma1( w2) + w13 + sigma0( w5));\n+    Round(d, e, f, g, h, a, b, c, 0x0a637dc5a2c898a6ull,  w5 += sigma1( w3) + w14 + sigma0( w6));\n+    Round(c, d, e, f, g, h, a, b, 0x113f9804bef90daeull,  w6 += sigma1( w4) + w15 + sigma0( w7));\n+    Round(b, c, d, e, f, g, h, a, 0x1b710b35131c471bull,  w7 += sigma1( w5) +  w0 + sigma0( w8));\n+    Round(a, b, c, d, e, f, g, h, 0x28db77f523047d84ull,  w8 += sigma1( w6) +  w1 + sigma0( w9));\n+    Round(h, a, b, c, d, e, f, g, 0x32caab7b40c72493ull,  w9 += sigma1( w7) +  w2 + sigma0(w10));\n+    Round(g, h, a, b, c, d, e, f, 0x3c9ebe0a15c9bebcull, w10 += sigma1( w8) +  w3 + sigma0(w11));\n+    Round(f, g, h, a, b, c, d, e, 0x431d67c49c100d4cull, w11 += sigma1( w9) +  w4 + sigma0(w12));\n+    Round(e, f, g, h, a, b, c, d, 0x4cc5d4becb3e42b6ull, w12 += sigma1(w10) +  w5 + sigma0(w13));\n+    Round(d, e, f, g, h, a, b, c, 0x597f299cfc657e2aull, w13 += sigma1(w11) +  w6 + sigma0(w14));\n+    Round(c, d, e, f, g, h, a, b, 0x5fcb6fab3ad6faecull, w14 += sigma1(w12) +  w7 + sigma0(w15));\n+    Round(b, c, d, e, f, g, h, a, 0x6c44198c4a475817ull, w15 += sigma1(w13) +  w8 + sigma0( w0));\n+\n+    s[0] += a;\n+    s[1] += b;\n+    s[2] += c;\n+    s[3] += d;\n+    s[4] += e;\n+    s[5] += f;\n+    s[6] += g;\n+    s[7] += h;\n+}\n+\n+}  // namespace sha512\n+\n+}  // namespace\n+\n+\n+////// SHA-256\n+\n+CSHA256::CSHA256() : bytes(0) {\n+    sha256::Initialize(s);\n+}\n+\n+CSHA256& CSHA256::Write(const unsigned char *data, size_t len) {\n+    const unsigned char *end = data + len;\n+    size_t bufsize = bytes % 64;\n+    if (bufsize && bufsize + len >= 64) {\n+        // Fill the buffer, and process it.\n+        memcpy(buf + bufsize, data, 64 - bufsize);\n+        bytes += 64 - bufsize;\n+        data += 64 - bufsize;\n+        sha256::Transform(s, buf);\n+        bufsize = 0;\n+    }\n+    while (end >= data + 64) {\n+        // Process full chunks directly from the source.\n+        sha256::Transform(s, data);\n+        bytes += 64;\n+        data += 64;\n+    }\n+    if (end > data) {\n+        // Fill the buffer with what remains.\n+        memcpy(buf + bufsize, data, end - data);\n+        bytes += end - data;\n+    }\n+    return *this;\n+}\n+\n+void CSHA256::Finalize(unsigned char hash[OUTPUT_SIZE]) {\n+    static const unsigned char pad[64] = {0x80};\n+    unsigned char sizedesc[8];\n+    WriteBE64(sizedesc, bytes << 3);\n+    Write(pad, 1 + ((119 - (bytes % 64)) % 64));\n+    Write(sizedesc, 8);\n+    WriteBE32(hash, s[0]);\n+    WriteBE32(hash+4, s[1]);\n+    WriteBE32(hash+8, s[2]);\n+    WriteBE32(hash+12, s[3]);\n+    WriteBE32(hash+16, s[4]);\n+    WriteBE32(hash+20, s[5]);\n+    WriteBE32(hash+24, s[6]);\n+    WriteBE32(hash+28, s[7]);\n+}\n+\n+CSHA256& CSHA256::Reset() {\n+    bytes = 0;\n+    sha256::Initialize(s);\n+    return *this;\n+}\n+\n+////// SHA-512\n+\n+CSHA512::CSHA512() : bytes(0) {\n+    sha512::Initialize(s);\n+}\n+\n+CSHA512& CSHA512::Write(const unsigned char *data, size_t len) {\n+    const unsigned char *end = data + len;\n+    size_t bufsize = bytes % 128;\n+    if (bufsize && bufsize + len >= 128) {\n+        // Fill the buffer, and process it.\n+        memcpy(buf + bufsize, data, 128 - bufsize);\n+        bytes += 128 - bufsize;\n+        data += 128 - bufsize;\n+        sha512::Transform(s, buf);\n+        bufsize = 0;\n+    }\n+    while (end >= data + 128) {\n+        // Process full chunks directly from the source.\n+        sha512::Transform(s, data);\n+        data += 128;\n+        bytes += 128;\n+    }\n+    if (end > data) {\n+        // Fill the buffer with what remains.\n+        memcpy(buf + bufsize, data, end - data);\n+        bytes += end - data;\n+    }\n+    return *this;\n+}\n+\n+void CSHA512::Finalize(unsigned char hash[OUTPUT_SIZE]) {\n+    static const unsigned char pad[128] = {0x80};\n+    unsigned char sizedesc[16] = {0x00};\n+    WriteBE64(sizedesc+8, bytes << 3);\n+    Write(pad, 1 + ((239 - (bytes % 128)) % 128));\n+    Write(sizedesc, 16);\n+    WriteBE64(hash, s[0]);\n+    WriteBE64(hash+8, s[1]);\n+    WriteBE64(hash+16, s[2]);\n+    WriteBE64(hash+24, s[3]);\n+    WriteBE64(hash+32, s[4]);\n+    WriteBE64(hash+40, s[5]);\n+    WriteBE64(hash+48, s[6]);\n+    WriteBE64(hash+56, s[7]);\n+}\n+\n+CSHA512& CSHA512::Reset() {\n+    bytes = 0;\n+    sha512::Initialize(s);\n+    return *this;\n+}\n+\n+////// HMAC-SHA-512\n+\n+CHMAC_SHA512::CHMAC_SHA512(const unsigned char *key, size_t keylen) {\n+    unsigned char rkey[128];\n+    if (keylen <= 128) {\n+        memcpy(rkey, key, keylen);\n+        memset(rkey + keylen, 0, 128 - keylen);\n+    } else {\n+        CSHA512().Write(key, keylen).Finalize(rkey);\n+        memset(rkey + 64, 0, 64);\n+    }\n+\n+    for (int n=0; n<128; n++)\n+        rkey[n] ^= 0x5c;\n+    outer.Write(rkey, 128);\n+\n+    for (int n=0; n<128; n++)\n+        rkey[n] ^= 0x5c ^ 0x36;\n+    inner.Write(rkey, 128);\n+}\n+\n+void CHMAC_SHA512::Finalize(unsigned char hash[OUTPUT_SIZE]) {\n+    unsigned char temp[64];\n+    inner.Finalize(temp);\n+    outer.Write(temp, 64).Finalize(hash);\n+}"
      },
      {
        "sha": "088d5e194c734793c5759ec2ecf27410e401e2fd",
        "filename": "src/crypto/sha2.h",
        "status": "added",
        "additions": 60,
        "deletions": 0,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/crypto/sha2.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/crypto/sha2.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha2.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,60 @@\n+// Copyright (c) 2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SHA2_H\n+#define BITCOIN_SHA2_H\n+\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+/** A hasher class for SHA-256. */\n+class CSHA256 {\n+private:\n+    uint32_t s[8];\n+    unsigned char buf[64];\n+    size_t bytes;\n+\n+public:\n+    static const size_t OUTPUT_SIZE = 32;\n+\n+    CSHA256();\n+    CSHA256& Write(const unsigned char *data, size_t len);\n+    void Finalize(unsigned char hash[OUTPUT_SIZE]);\n+    CSHA256& Reset();\n+};\n+\n+/** A hasher class for SHA-512. */\n+class CSHA512 {\n+private:\n+    uint64_t s[8];\n+    unsigned char buf[128];\n+    size_t bytes;\n+\n+public:\n+    static const size_t OUTPUT_SIZE = 64;\n+\n+    CSHA512();\n+    CSHA512& Write(const unsigned char *data, size_t len);\n+    void Finalize(unsigned char hash[OUTPUT_SIZE]);\n+    CSHA512& Reset();\n+};\n+\n+/** A hasher class for HMAC-SHA-512. */\n+class CHMAC_SHA512 {\n+private:\n+    CSHA512 outer;\n+    CSHA512 inner;\n+\n+public:\n+    static const size_t OUTPUT_SIZE = 64;\n+\n+    CHMAC_SHA512(const unsigned char *key, size_t keylen);\n+    CHMAC_SHA512& Write(const unsigned char *data, size_t len) {\n+        inner.Write(data, len);\n+        return *this;\n+    }\n+    void Finalize(unsigned char hash[OUTPUT_SIZE]);\n+};\n+\n+#endif"
      },
      {
        "sha": "bddd8abf38d045a171fa4868c11f72b12b59f179",
        "filename": "src/hash.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -56,44 +56,3 @@ unsigned int MurmurHash3(unsigned int nHashSeed, const std::vector<unsigned char\n \n     return h1;\n }\n-\n-int HMAC_SHA512_Init(HMAC_SHA512_CTX *pctx, const void *pkey, size_t len)\n-{\n-    unsigned char key[128];\n-    if (len <= 128)\n-    {\n-        memcpy(key, pkey, len);\n-        memset(key + len, 0, 128-len);\n-    }\n-    else\n-    {\n-        SHA512_CTX ctxKey;\n-        SHA512_Init(&ctxKey);\n-        SHA512_Update(&ctxKey, pkey, len);\n-        SHA512_Final(key, &ctxKey);\n-        memset(key + 64, 0, 64);\n-    }\n-\n-    for (int n=0; n<128; n++)\n-        key[n] ^= 0x5c;\n-    SHA512_Init(&pctx->ctxOuter);\n-    SHA512_Update(&pctx->ctxOuter, key, 128);\n-\n-    for (int n=0; n<128; n++)\n-        key[n] ^= 0x5c ^ 0x36;\n-    SHA512_Init(&pctx->ctxInner);\n-    return SHA512_Update(&pctx->ctxInner, key, 128);\n-}\n-\n-int HMAC_SHA512_Update(HMAC_SHA512_CTX *pctx, const void *pdata, size_t len)\n-{\n-    return SHA512_Update(&pctx->ctxInner, pdata, len);\n-}\n-\n-int HMAC_SHA512_Final(unsigned char *pmd, HMAC_SHA512_CTX *pctx)\n-{\n-    unsigned char buf[64];\n-    SHA512_Final(buf, &pctx->ctxInner);\n-    SHA512_Update(&pctx->ctxOuter, buf, 64);\n-    return SHA512_Final(pmd, &pctx->ctxOuter);\n-}"
      },
      {
        "sha": "f2a0ebfe1f2575cbcdb22e768419eae1daa91c07",
        "filename": "src/hash.h",
        "status": "modified",
        "additions": 106,
        "deletions": 83,
        "changes": 189,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -6,55 +6,138 @@\n #ifndef BITCOIN_HASH_H\n #define BITCOIN_HASH_H\n \n+#include \"crypto/sha2.h\"\n+#include \"crypto/ripemd160.h\"\n #include \"serialize.h\"\n #include \"uint256.h\"\n #include \"version.h\"\n \n #include <vector>\n \n-#include <openssl/ripemd.h>\n-#include <openssl/sha.h>\n+/** A hasher class for Bitcoin's 256-bit hash (double SHA-256). */\n+class CHash256 {\n+private:\n+    CSHA256 sha;\n+public:\n+    static const size_t OUTPUT_SIZE = CSHA256::OUTPUT_SIZE;\n+\n+    void Finalize(unsigned char hash[OUTPUT_SIZE]) {\n+        unsigned char buf[sha.OUTPUT_SIZE];\n+        sha.Finalize(buf);\n+        sha.Reset().Write(buf, sha.OUTPUT_SIZE).Finalize(hash);\n+    }\n+\n+    CHash256& Write(const unsigned char *data, size_t len) {\n+        sha.Write(data, len);\n+        return *this;\n+    }\n+\n+    CHash256& Reset() {\n+        sha.Reset();\n+        return *this;\n+    }\n+};\n \n+/** A hasher class for Bitcoin's 160-bit hash (SHA-256 + RIPEMD-160). */\n+class CHash160 {\n+private:\n+    CSHA256 sha;\n+public:\n+    static const size_t OUTPUT_SIZE = CRIPEMD160::OUTPUT_SIZE;\n+\n+    void Finalize(unsigned char hash[OUTPUT_SIZE]) {\n+        unsigned char buf[sha.OUTPUT_SIZE];\n+        sha.Finalize(buf);\n+        CRIPEMD160().Write(buf, sha.OUTPUT_SIZE).Finalize(hash);\n+    }\n+\n+    CHash160& Write(const unsigned char *data, size_t len) {\n+        sha.Write(data, len);\n+        return *this;\n+    }\n+\n+    CHash160& Reset() {\n+        sha.Reset();\n+        return *this;\n+    }\n+};\n+\n+/** Compute the 256-bit hash of an object. */\n template<typename T1>\n inline uint256 Hash(const T1 pbegin, const T1 pend)\n {\n-    static unsigned char pblank[1];\n-    uint256 hash1;\n-    SHA256((pbegin == pend ? pblank : (unsigned char*)&pbegin[0]), (pend - pbegin) * sizeof(pbegin[0]), (unsigned char*)&hash1);\n-    uint256 hash2;\n-    SHA256((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n-    return hash2;\n+    static const unsigned char pblank[1] = {};\n+    uint256 result;\n+    CHash256().Write(pbegin == pend ? pblank : (const unsigned char*)&pbegin[0], (pend - pbegin) * sizeof(pbegin[0]))\n+              .Finalize((unsigned char*)&result);\n+    return result;\n+}\n+\n+/** Compute the 256-bit hash of the concatenation of two objects. */\n+template<typename T1, typename T2>\n+inline uint256 Hash(const T1 p1begin, const T1 p1end,\n+                    const T2 p2begin, const T2 p2end) {\n+    static const unsigned char pblank[1] = {};\n+    uint256 result;\n+    CHash256().Write(p1begin == p1end ? pblank : (const unsigned char*)&p1begin[0], (p1end - p1begin) * sizeof(p1begin[0]))\n+              .Write(p2begin == p2end ? pblank : (const unsigned char*)&p2begin[0], (p2end - p2begin) * sizeof(p2begin[0]))\n+              .Finalize((unsigned char*)&result);\n+    return result;\n+}\n+\n+/** Compute the 256-bit hash of the concatenation of three objects. */\n+template<typename T1, typename T2, typename T3>\n+inline uint256 Hash(const T1 p1begin, const T1 p1end,\n+                    const T2 p2begin, const T2 p2end,\n+                    const T3 p3begin, const T3 p3end) {\n+    static const unsigned char pblank[1] = {};\n+    uint256 result;\n+    CHash256().Write(p1begin == p1end ? pblank : (const unsigned char*)&p1begin[0], (p1end - p1begin) * sizeof(p1begin[0]))\n+              .Write(p2begin == p2end ? pblank : (const unsigned char*)&p2begin[0], (p2end - p2begin) * sizeof(p2begin[0]))\n+              .Write(p3begin == p3end ? pblank : (const unsigned char*)&p3begin[0], (p3end - p3begin) * sizeof(p3begin[0]))\n+              .Finalize((unsigned char*)&result);\n+    return result;\n+}\n+\n+/** Compute the 160-bit hash an object. */\n+template<typename T1>\n+inline uint160 Hash160(const T1 pbegin, const T1 pend)\n+{\n+    static unsigned char pblank[1] = {};\n+    uint160 result;\n+    CHash160().Write(pbegin == pend ? pblank : (const unsigned char*)&pbegin[0], (pend - pbegin) * sizeof(pbegin[0]))\n+              .Finalize((unsigned char*)&result);\n+    return result;\n }\n \n+/** Compute the 160-bit hash of a vector. */\n+inline uint160 Hash160(const std::vector<unsigned char>& vch)\n+{\n+    return Hash160(vch.begin(), vch.end());\n+}\n+\n+/** A writer stream (for serialization) that computes a 256-bit hash. */\n class CHashWriter\n {\n private:\n-    SHA256_CTX ctx;\n+    CHash256 ctx;\n \n public:\n     int nType;\n     int nVersion;\n \n-    void Init() {\n-        SHA256_Init(&ctx);\n-    }\n-\n-    CHashWriter(int nTypeIn, int nVersionIn) : nType(nTypeIn), nVersion(nVersionIn) {\n-        Init();\n-    }\n+    CHashWriter(int nTypeIn, int nVersionIn) : nType(nTypeIn), nVersion(nVersionIn) {}\n \n     CHashWriter& write(const char *pch, size_t size) {\n-        SHA256_Update(&ctx, pch, size);\n+        ctx.Write((const unsigned char*)pch, size);\n         return (*this);\n     }\n \n     // invalidates the object\n     uint256 GetHash() {\n-        uint256 hash1;\n-        SHA256_Final((unsigned char*)&hash1, &ctx);\n-        uint256 hash2;\n-        SHA256((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n-        return hash2;\n+        uint256 result;\n+        ctx.Finalize((unsigned char*)&result);\n+        return result;\n     }\n \n     template<typename T>\n@@ -65,41 +148,7 @@ class CHashWriter\n     }\n };\n \n-\n-template<typename T1, typename T2>\n-inline uint256 Hash(const T1 p1begin, const T1 p1end,\n-                    const T2 p2begin, const T2 p2end)\n-{\n-    static unsigned char pblank[1];\n-    uint256 hash1;\n-    SHA256_CTX ctx;\n-    SHA256_Init(&ctx);\n-    SHA256_Update(&ctx, (p1begin == p1end ? pblank : (unsigned char*)&p1begin[0]), (p1end - p1begin) * sizeof(p1begin[0]));\n-    SHA256_Update(&ctx, (p2begin == p2end ? pblank : (unsigned char*)&p2begin[0]), (p2end - p2begin) * sizeof(p2begin[0]));\n-    SHA256_Final((unsigned char*)&hash1, &ctx);\n-    uint256 hash2;\n-    SHA256((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n-    return hash2;\n-}\n-\n-template<typename T1, typename T2, typename T3>\n-inline uint256 Hash(const T1 p1begin, const T1 p1end,\n-                    const T2 p2begin, const T2 p2end,\n-                    const T3 p3begin, const T3 p3end)\n-{\n-    static unsigned char pblank[1];\n-    uint256 hash1;\n-    SHA256_CTX ctx;\n-    SHA256_Init(&ctx);\n-    SHA256_Update(&ctx, (p1begin == p1end ? pblank : (unsigned char*)&p1begin[0]), (p1end - p1begin) * sizeof(p1begin[0]));\n-    SHA256_Update(&ctx, (p2begin == p2end ? pblank : (unsigned char*)&p2begin[0]), (p2end - p2begin) * sizeof(p2begin[0]));\n-    SHA256_Update(&ctx, (p3begin == p3end ? pblank : (unsigned char*)&p3begin[0]), (p3end - p3begin) * sizeof(p3begin[0]));\n-    SHA256_Final((unsigned char*)&hash1, &ctx);\n-    uint256 hash2;\n-    SHA256((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n-    return hash2;\n-}\n-\n+/** Compute the 256-bit hash of an object's serialization. */\n template<typename T>\n uint256 SerializeHash(const T& obj, int nType=SER_GETHASH, int nVersion=PROTOCOL_VERSION)\n {\n@@ -108,32 +157,6 @@ uint256 SerializeHash(const T& obj, int nType=SER_GETHASH, int nVersion=PROTOCOL\n     return ss.GetHash();\n }\n \n-template<typename T1>\n-inline uint160 Hash160(const T1 pbegin, const T1 pend)\n-{\n-    static unsigned char pblank[1];\n-    uint256 hash1;\n-    SHA256((pbegin == pend ? pblank : (unsigned char*)&pbegin[0]), (pend - pbegin) * sizeof(pbegin[0]), (unsigned char*)&hash1);\n-    uint160 hash2;\n-    RIPEMD160((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n-    return hash2;\n-}\n-\n-inline uint160 Hash160(const std::vector<unsigned char>& vch)\n-{\n-    return Hash160(vch.begin(), vch.end());\n-}\n-\n unsigned int MurmurHash3(unsigned int nHashSeed, const std::vector<unsigned char>& vDataToHash);\n \n-typedef struct\n-{\n-    SHA512_CTX ctxInner;\n-    SHA512_CTX ctxOuter;\n-} HMAC_SHA512_CTX;\n-\n-int HMAC_SHA512_Init(HMAC_SHA512_CTX *pctx, const void *pkey, size_t len);\n-int HMAC_SHA512_Update(HMAC_SHA512_CTX *pctx, const void *pdata, size_t len);\n-int HMAC_SHA512_Final(unsigned char *pmd, HMAC_SHA512_CTX *pctx);\n-\n #endif"
      },
      {
        "sha": "880ccaca1d144ca317911200f67e69670bb18052",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 153,
        "deletions": 58,
        "changes": 211,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -4,13 +4,14 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n+#include \"config/bitcoin-config.h\"\n #endif\n \n #include \"init.h\"\n \n #include \"addrman.h\"\n #include \"checkpoints.h\"\n+#include \"key.h\"\n #include \"main.h\"\n #include \"miner.h\"\n #include \"net.h\"\n@@ -25,10 +26,12 @@\n #endif\n \n #include <stdint.h>\n+#include <stdio.h>\n \n #ifndef WIN32\n #include <signal.h>\n #endif\n+#include \"compat/sanity.h\"\n \n #include <boost/algorithm/string/predicate.hpp>\n #include <boost/filesystem.hpp>\n@@ -39,7 +42,6 @@ using namespace std;\n using namespace boost;\n \n #ifdef ENABLE_WALLET\n-std::string strWalletFile;\n CWallet* pwalletMain;\n #endif\n \n@@ -59,6 +61,8 @@ enum BindFlags {\n     BF_REPORT_ERROR = (1U << 1)\n };\n \n+static const char* FEE_ESTIMATES_FILENAME=\"fee_estimates.dat\";\n+CClientUIInterface uiInterface;\n \n //////////////////////////////////////////////////////////////////////////////\n //\n@@ -113,14 +117,21 @@ void Shutdown()\n     RenameThread(\"bitcoin-shutoff\");\n     mempool.AddTransactionsUpdated(1);\n     StopRPCThreads();\n-    ShutdownRPCMining();\n #ifdef ENABLE_WALLET\n     if (pwalletMain)\n         bitdb.Flush(false);\n     GenerateBitcoins(false, NULL, 0);\n #endif\n     StopNode();\n     UnregisterNodeSignals(GetNodeSignals());\n+\n+    boost::filesystem::path est_path = GetDataDir() / FEE_ESTIMATES_FILENAME;\n+    CAutoFile est_fileout = CAutoFile(fopen(est_path.string().c_str(), \"wb\"), SER_DISK, CLIENT_VERSION);\n+    if (est_fileout)\n+        mempool.WriteFeeEstimates(est_fileout);\n+    else\n+        LogPrintf(\"failed to write fee estimates\");\n+\n     {\n         LOCK(cs_main);\n #ifdef ENABLE_WALLET\n@@ -185,17 +196,17 @@ bool static Bind(const CService &addr, unsigned int flags) {\n     return true;\n }\n \n-// Core-specific options shared between UI, daemon and RPC client\n-std::string HelpMessage(HelpMessageMode hmm)\n+std::string HelpMessage(HelpMessageMode mode)\n {\n+    // When adding new options to the categories, please keep and ensure alphabetical ordering.\n     string strUsage = _(\"Options:\") + \"\\n\";\n     strUsage += \"  -?                     \" + _(\"This help message\") + \"\\n\";\n     strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\") + \"\\n\";\n     strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n     strUsage += \"  -checkblocks=<n>       \" + _(\"How many blocks to check at startup (default: 288, 0 = all)\") + \"\\n\";\n     strUsage += \"  -checklevel=<n>        \" + _(\"How thorough the block verification of -checkblocks is (0-4, default: 3)\") + \"\\n\";\n     strUsage += \"  -conf=<file>           \" + _(\"Specify configuration file (default: bitcoin.conf)\") + \"\\n\";\n-    if (hmm == HMM_BITCOIND)\n+    if (mode == HMM_BITCOIND)\n     {\n #if !defined(WIN32)\n         strUsage += \"  -daemon                \" + _(\"Run in the background as a daemon and accept commands\") + \"\\n\";\n@@ -205,6 +216,7 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -dbcache=<n>           \" + strprintf(_(\"Set database cache size in megabytes (%d to %d, default: %d)\"), nMinDbCache, nMaxDbCache, nDefaultDbCache) + \"\\n\";\n     strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n     strUsage += \"  -loadblock=<file>      \" + _(\"Imports blocks from external blk000??.dat file\") + \" \" + _(\"on startup\") + \"\\n\";\n+    strUsage += \"  -maxorphanblocks=<n>   \" + strprintf(_(\"Keep at most <n> unconnectable blocks in memory (default: %u)\"), DEFAULT_MAX_ORPHAN_BLOCKS) + \"\\n\";\n     strUsage += \"  -par=<n>               \" + strprintf(_(\"Set the number of script verification threads (%u to %d, 0 = auto, <0 = leave that many cores free, default: %d)\"), -(int)boost::thread::hardware_concurrency(), MAX_SCRIPTCHECK_THREADS, DEFAULT_SCRIPTCHECK_THREADS) + \"\\n\";\n     strUsage += \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\";\n     strUsage += \"  -reindex               \" + _(\"Rebuild block chain index from current blk000??.dat files\") + \" \" + _(\"on startup\") + \"\\n\";\n@@ -227,9 +239,8 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -onion=<ip:port>       \" + _(\"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)\") + \"\\n\";\n     strUsage += \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\") + \"\\n\";\n     strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n-    strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through SOCKS proxy\") + \"\\n\";\n+    strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through SOCKS5 proxy\") + \"\\n\";\n     strUsage += \"  -seednode=<ip>         \" + _(\"Connect to a node to retrieve peer addresses, and disconnect\") + \"\\n\";\n-    strUsage += \"  -socks=<n>             \" + _(\"Select SOCKS version for -proxy (4 or 5, default: 5)\") + \"\\n\";\n     strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n #ifdef USE_UPNP\n #if USE_UPNP\n@@ -242,14 +253,18 @@ std::string HelpMessage(HelpMessageMode hmm)\n #ifdef ENABLE_WALLET\n     strUsage += \"\\n\" + _(\"Wallet options:\") + \"\\n\";\n     strUsage += \"  -disablewallet         \" + _(\"Do not load the wallet and disable wallet RPC calls\") + \"\\n\";\n-    strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per kB to add to transactions you send\") + \"\\n\";\n+    strUsage += \"  -mintxfee=<amt>        \" + strprintf(_(\"Fees (in BTC/Kb) smaller than this are considered zero fee for transaction creation (default: %s)\"), FormatMoney(CWallet::minTxFee.GetFeePerK())) + \"\\n\";\n+    strUsage += \"  -paytxfee=<amt>        \" + strprintf(_(\"Fee (in BTC/kB) to add to transactions you send (default: %s)\"), FormatMoney(payTxFee.GetFeePerK())) + \"\\n\";\n     strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\") + \"\\n\";\n+    strUsage += \"  -respendnotify=<cmd>   \" + _(\"Execute command when a network tx respends wallet tx input (%s=respend TxID, %t=wallet TxID)\") + \"\\n\";\n     strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \" \" + _(\"on startup\") + \"\\n\";\n     strUsage += \"  -spendzeroconfchange   \" + _(\"Spend unconfirmed change when sending transactions (default: 1)\") + \"\\n\";\n+    strUsage += \"  -txconfirmtarget=<n>   \" + _(\"If paytxfee is not set, include enough fee so transactions are confirmed on average within n blocks (default: 1)\") + \"\\n\";\n     strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \" \" + _(\"on startup\") + \"\\n\";\n     strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \" \" + _(\"(default: wallet.dat)\") + \"\\n\";\n     strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n-    strUsage += \"  -zapwallettxes         \" + _(\"Clear list of wallet transactions (diagnostic tool; implies -rescan)\") + \"\\n\";\n+    strUsage += \"  -zapwallettxes=<mode>  \" + _(\"Delete all wallet transactions and only recover those part of the blockchain through -rescan on startup\") + \"\\n\";\n+    strUsage += \"                         \" + _(\"(default: 1, 1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\") + \"\\n\";\n #endif\n \n     strUsage += \"\\n\" + _(\"Debugging/Testing options:\") + \"\\n\";\n@@ -263,25 +278,26 @@ std::string HelpMessage(HelpMessageMode hmm)\n         strUsage += \"  -dropmessagestest=<n>  \" + _(\"Randomly drop 1 of every <n> network messages\") + \"\\n\";\n         strUsage += \"  -fuzzmessagestest=<n>  \" + _(\"Randomly fuzz 1 of every <n> network messages\") + \"\\n\";\n         strUsage += \"  -flushwallet           \" + _(\"Run a thread to flush wallet periodically (default: 1)\") + \"\\n\";\n+        strUsage += \"  -stopafterblockimport  \" + _(\"Stop running after importing blocks from disk (default: 0)\") + \"\\n\";\n     }\n     strUsage += \"  -debug=<category>      \" + _(\"Output debugging information (default: 0, supplying <category> is optional)\") + \"\\n\";\n     strUsage += \"                         \" + _(\"If <category> is not supplied, output all debugging information.\") + \"\\n\";\n     strUsage += \"                         \" + _(\"<category> can be:\");\n     strUsage +=                                 \" addrman, alert, coindb, db, lock, rand, rpc, selectcoins, mempool, net\"; // Don't translate these and qt below\n-    if (hmm == HMM_BITCOIN_QT)\n+    if (mode == HMM_BITCOIN_QT)\n         strUsage += \", qt\";\n     strUsage += \".\\n\";\n     strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n     strUsage += \"  -genproclimit=<n>      \" + _(\"Set the processor limit for when generation is on (-1 = unlimited, default: -1)\") + \"\\n\";\n     strUsage += \"  -help-debug            \" + _(\"Show all debugging options (usage: --help -help-debug)\") + \"\\n\";\n+    strUsage += \"  -logips                \" + _(\"Include IP addresses in debug output (default: 0)\") + \"\\n\";\n     strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp (default: 1)\") + \"\\n\";\n     if (GetBoolArg(\"-help-debug\", false))\n     {\n         strUsage += \"  -limitfreerelay=<n>    \" + _(\"Continuously rate-limit free transactions to <n>*1000 bytes per minute (default:15)\") + \"\\n\";\n         strUsage += \"  -maxsigcachesize=<n>   \" + _(\"Limit size of signature cache to <n> entries (default: 50000)\") + \"\\n\";\n     }\n-    strUsage += \"  -mintxfee=<amt>        \" + _(\"Fees smaller than this are considered zero fee (for transaction creation) (default:\") + \" \" + FormatMoney(CTransaction::nMinTxFee) + \")\" + \"\\n\";\n-    strUsage += \"  -minrelaytxfee=<amt>   \" + _(\"Fees smaller than this are considered zero fee (for relaying) (default:\") + \" \" + FormatMoney(CTransaction::nMinRelayTxFee) + \")\" + \"\\n\";\n+    strUsage += \"  -minrelaytxfee=<amt>   \" + strprintf(_(\"Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: %s)\"), FormatMoney(::minRelayTxFee.GetFeePerK())) + \"\\n\";\n     strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n     if (GetBoolArg(\"-help-debug\", false))\n     {\n@@ -296,17 +312,20 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n     strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n \n+    strUsage += \"\\n\" + _(\"Node relay options:\") + \"\\n\";\n+    strUsage += \"  -datacarrier           \" + _(\"Relay and mine data carrier transactions (default: 1)\") + \"\\n\";\n     strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n     strUsage += \"  -blockminsize=<n>      \" + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n     strUsage += \"  -blockmaxsize=<n>      \" + strprintf(_(\"Set maximum block size in bytes (default: %d)\"), DEFAULT_BLOCK_MAX_SIZE) + \"\\n\";\n     strUsage += \"  -blockprioritysize=<n> \" + strprintf(_(\"Set maximum size of high-priority/low-fee transactions in bytes (default: %d)\"), DEFAULT_BLOCK_PRIORITY_SIZE) + \"\\n\";\n \n     strUsage += \"\\n\" + _(\"RPC server options:\") + \"\\n\";\n     strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";\n+    strUsage += \"  -rpcbind=<addr>        \" + _(\"Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6. This option can be specified multiple times (default: bind to all interfaces)\") + \"\\n\";\n     strUsage += \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcport=<port>        \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n-    strUsage += \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\";\n+    strUsage += \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\") + \"\\n\";\n     strUsage += \"  -rpcthreads=<n>        \" + _(\"Set the number of threads to service RPC calls (default: 4)\") + \"\\n\";\n \n     strUsage += \"\\n\" + _(\"RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n@@ -318,6 +337,18 @@ std::string HelpMessage(HelpMessageMode hmm)\n     return strUsage;\n }\n \n+std::string LicenseInfo()\n+{\n+    return FormatParagraph(strprintf(_(\"Copyright (C) 2009-%i The Bitcoin Core Developers\"), COPYRIGHT_YEAR)) + \"\\n\" +\n+           \"\\n\" +\n+           FormatParagraph(_(\"This is experimental software.\")) + \"\\n\" +\n+           \"\\n\" +\n+           FormatParagraph(_(\"Distributed under the MIT/X11 software license, see the accompanying file COPYING or <http://www.opensource.org/licenses/mit-license.php>.\")) + \"\\n\" +\n+           \"\\n\" +\n+           FormatParagraph(_(\"This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.\")) +\n+           \"\\n\";\n+}\n+\n struct CImportingNow\n {\n     CImportingNow() {\n@@ -381,6 +412,28 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n             LogPrintf(\"Warning: Could not open blocks file %s\\n\", path.string());\n         }\n     }\n+\n+    if (GetBoolArg(\"-stopafterblockimport\", false)) {\n+        LogPrintf(\"Stopping after block import\\n\");\n+        StartShutdown();\n+    }\n+}\n+\n+/** Sanity checks\n+ *  Ensure that Bitcoin is running in a usable environment with all\n+ *  necessary library support.\n+ */\n+bool InitSanityCheck(void)\n+{\n+    if(!ECC_InitSanityCheck()) {\n+        InitError(\"OpenSSL appears to lack support for elliptic curve cryptography. For more \"\n+                  \"information, visit https://en.bitcoin.it/wiki/OpenSSL_and_EC_Libraries\");\n+        return false;\n+    }\n+    if (!glibc_sanity_test() || !glibcxx_sanity_test())\n+        return false;\n+\n+    return true;\n }\n \n /** Initialize bitcoin.\n@@ -489,7 +542,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n     // -zapwallettx implies a rescan\n     if (GetBoolArg(\"-zapwallettxes\", false)) {\n         if (SoftSetBoolArg(\"-rescan\", true))\n-            LogPrintf(\"AppInit2 : parameter interaction: -zapwallettxes=1 -> setting -rescan=1\\n\");\n+            LogPrintf(\"AppInit2 : parameter interaction: -zapwallettxes=<mode> -> setting -rescan=1\\n\");\n     }\n \n     // Make sure enough file descriptors are available\n@@ -513,9 +566,16 @@ bool AppInit2(boost::thread_group& threadGroup)\n     // Check for -debugnet (deprecated)\n     if (GetBoolArg(\"-debugnet\", false))\n         InitWarning(_(\"Warning: Deprecated argument -debugnet ignored, use -debug=net\"));\n+    // Check for -socks - as this is a privacy risk to continue, exit here\n+    if (mapArgs.count(\"-socks\"))\n+        return InitError(_(\"Error: Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.\"));\n+    // Check for -tor - as this is a privacy risk to continue, exit here\n+    if (GetBoolArg(\"-tor\", false))\n+        return InitError(_(\"Error: Unsupported argument -tor found, use -onion.\"));\n \n     fBenchmark = GetBoolArg(\"-benchmark\", false);\n-    mempool.setSanityCheck(GetBoolArg(\"-checkmempool\", RegTest()));\n+    // Checkmempool defaults to true in regtest mode\n+    mempool.setSanityCheck(GetBoolArg(\"-checkmempool\", Params().DefaultCheckMemPool()));\n     Checkpoints::fEnabled = GetBoolArg(\"-checkpoints\", true);\n \n     // -par=0 means autodetect, but nScriptCheckThreads==0 means no concurrency\n@@ -530,6 +590,8 @@ bool AppInit2(boost::thread_group& threadGroup)\n     fServer = GetBoolArg(\"-server\", false);\n     fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n     fLogTimestamps = GetBoolArg(\"-logtimestamps\", true);\n+    fLogIPs = GetBoolArg(\"-logips\", false);\n+    setvbuf(stdout, NULL, _IOLBF, 0);\n #ifdef ENABLE_WALLET\n     bool fDisableWallet = GetBoolArg(\"-disablewallet\", false);\n #endif\n@@ -553,36 +615,47 @@ bool AppInit2(boost::thread_group& threadGroup)\n     // a transaction spammer can cheaply fill blocks using\n     // 1-satoshi-fee transactions. It should be set above the real\n     // cost to you of processing a transaction.\n-    if (mapArgs.count(\"-mintxfee\"))\n-    {\n-        int64_t n = 0;\n-        if (ParseMoney(mapArgs[\"-mintxfee\"], n) && n > 0)\n-            CTransaction::nMinTxFee = n;\n-        else\n-            return InitError(strprintf(_(\"Invalid amount for -mintxfee=<amount>: '%s'\"), mapArgs[\"-mintxfee\"]));\n-    }\n     if (mapArgs.count(\"-minrelaytxfee\"))\n     {\n         int64_t n = 0;\n         if (ParseMoney(mapArgs[\"-minrelaytxfee\"], n) && n > 0)\n-            CTransaction::nMinRelayTxFee = n;\n+            ::minRelayTxFee = CFeeRate(n);\n         else\n             return InitError(strprintf(_(\"Invalid amount for -minrelaytxfee=<amount>: '%s'\"), mapArgs[\"-minrelaytxfee\"]));\n     }\n \n #ifdef ENABLE_WALLET\n+    if (mapArgs.count(\"-mintxfee\"))\n+    {\n+        int64_t n = 0;\n+        if (ParseMoney(mapArgs[\"-mintxfee\"], n) && n > 0)\n+            CWallet::minTxFee = CFeeRate(n);\n+        else\n+            return InitError(strprintf(_(\"Invalid amount for -mintxfee=<amount>: '%s'\"), mapArgs[\"-mintxfee\"]));\n+    }\n     if (mapArgs.count(\"-paytxfee\"))\n     {\n-        if (!ParseMoney(mapArgs[\"-paytxfee\"], nTransactionFee))\n+        int64_t nFeePerK = 0;\n+        if (!ParseMoney(mapArgs[\"-paytxfee\"], nFeePerK))\n             return InitError(strprintf(_(\"Invalid amount for -paytxfee=<amount>: '%s'\"), mapArgs[\"-paytxfee\"]));\n-        if (nTransactionFee > nHighTransactionFeeWarning)\n+        if (nFeePerK > nHighTransactionFeeWarning)\n             InitWarning(_(\"Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n+        payTxFee = CFeeRate(nFeePerK, 1000);\n+        if (payTxFee < ::minRelayTxFee)\n+        {\n+            return InitError(strprintf(_(\"Invalid amount for -paytxfee=<amount>: '%s' (must be at least %s)\"),\n+                                       mapArgs[\"-paytxfee\"], ::minRelayTxFee.ToString()));\n+        }\n     }\n+    nTxConfirmTarget = GetArg(\"-txconfirmtarget\", 1);\n     bSpendZeroConfChange = GetArg(\"-spendzeroconfchange\", true);\n \n-    strWalletFile = GetArg(\"-wallet\", \"wallet.dat\");\n+    std::string strWalletFile = GetArg(\"-wallet\", \"wallet.dat\");\n #endif\n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log\n+    // Sanity check\n+    if (!InitSanityCheck())\n+        return InitError(_(\"Initialization sanity check failed. Bitcoin Core is shutting down.\"));\n \n     std::string strDataDir = GetDataDir().string();\n #ifdef ENABLE_WALLET\n@@ -610,6 +683,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         LogPrintf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()));\n     LogPrintf(\"Default data directory %s\\n\", GetDefaultDataDir().string());\n     LogPrintf(\"Using data directory %s\\n\", strDataDir);\n+    LogPrintf(\"Using config file %s\\n\", GetConfigFile().string());\n     LogPrintf(\"Using at most %i connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n     std::ostringstream strErrors;\n \n@@ -674,10 +748,6 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     RegisterNodeSignals(GetNodeSignals());\n \n-    int nSocksVersion = GetArg(\"-socks\", 5);\n-    if (nSocksVersion != 4 && nSocksVersion != 5)\n-        return InitError(strprintf(_(\"Unknown -socks proxy version requested: %i\"), nSocksVersion));\n-\n     if (mapArgs.count(\"-onlynet\")) {\n         std::set<enum Network> nets;\n         BOOST_FOREACH(std::string snet, mapMultiArgs[\"-onlynet\"]) {\n@@ -701,40 +771,34 @@ bool AppInit2(boost::thread_group& threadGroup)\n             return InitError(strprintf(_(\"Invalid -proxy address: '%s'\"), mapArgs[\"-proxy\"]));\n \n         if (!IsLimited(NET_IPV4))\n-            SetProxy(NET_IPV4, addrProxy, nSocksVersion);\n-        if (nSocksVersion > 4) {\n-            if (!IsLimited(NET_IPV6))\n-                SetProxy(NET_IPV6, addrProxy, nSocksVersion);\n-            SetNameProxy(addrProxy, nSocksVersion);\n-        }\n+            SetProxy(NET_IPV4, addrProxy);\n+        if (!IsLimited(NET_IPV6))\n+            SetProxy(NET_IPV6, addrProxy);\n+        SetNameProxy(addrProxy);\n         fProxy = true;\n     }\n \n     // -onion can override normal proxy, -noonion disables tor entirely\n-    // -tor here is a temporary backwards compatibility measure\n-    if (mapArgs.count(\"-tor\"))\n-        printf(\"Notice: option -tor has been replaced with -onion and will be removed in a later version.\\n\");\n     if (!(mapArgs.count(\"-onion\") && mapArgs[\"-onion\"] == \"0\") &&\n-        !(mapArgs.count(\"-tor\") && mapArgs[\"-tor\"] == \"0\") &&\n-         (fProxy || mapArgs.count(\"-onion\") || mapArgs.count(\"-tor\"))) {\n+        (fProxy || mapArgs.count(\"-onion\"))) {\n         CService addrOnion;\n-        if (!mapArgs.count(\"-onion\") && !mapArgs.count(\"-tor\"))\n+        if (!mapArgs.count(\"-onion\"))\n             addrOnion = addrProxy;\n         else\n-            addrOnion = mapArgs.count(\"-onion\")?CService(mapArgs[\"-onion\"], 9050):CService(mapArgs[\"-tor\"], 9050);\n+            addrOnion = CService(mapArgs[\"-onion\"], 9050);\n         if (!addrOnion.IsValid())\n-            return InitError(strprintf(_(\"Invalid -onion address: '%s'\"), mapArgs.count(\"-onion\")?mapArgs[\"-onion\"]:mapArgs[\"-tor\"]));\n-        SetProxy(NET_TOR, addrOnion, 5);\n+            return InitError(strprintf(_(\"Invalid -onion address: '%s'\"), mapArgs[\"-onion\"]));\n+        SetProxy(NET_TOR, addrOnion);\n         SetReachable(NET_TOR);\n     }\n \n     // see Step 2: parameter interactions for more information about these\n-    fNoListen = !GetBoolArg(\"-listen\", true);\n+    fListen = GetBoolArg(\"-listen\", DEFAULT_LISTEN);\n     fDiscover = GetBoolArg(\"-discover\", true);\n     fNameLookup = GetBoolArg(\"-dns\", true);\n \n     bool fBound = false;\n-    if (!fNoListen) {\n+    if (fListen) {\n         if (mapArgs.count(\"-bind\")) {\n             BOOST_FOREACH(std::string strBind, mapMultiArgs[\"-bind\"]) {\n                 CService addrBind;\n@@ -855,7 +919,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n                 }\n \n                 uiInterface.InitMessage(_(\"Verifying blocks...\"));\n-                if (!VerifyDB(GetArg(\"-checklevel\", 3),\n+                if (!CVerifyDB().VerifyDB(GetArg(\"-checklevel\", 3),\n                               GetArg(\"-checkblocks\", 288))) {\n                     strLoadError = _(\"Corrupted block database detected\");\n                     break;\n@@ -911,7 +975,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         for (map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.begin(); mi != mapBlockIndex.end(); ++mi)\n         {\n             uint256 hash = (*mi).first;\n-            if (strncmp(hash.ToString().c_str(), strMatch.c_str(), strMatch.size()) == 0)\n+            if (boost::algorithm::starts_with(hash.ToString(), strMatch))\n             {\n                 CBlockIndex* pindex = (*mi).second;\n                 CBlock block;\n@@ -927,17 +991,26 @@ bool AppInit2(boost::thread_group& threadGroup)\n         return false;\n     }\n \n+    boost::filesystem::path est_path = GetDataDir() / FEE_ESTIMATES_FILENAME;\n+    CAutoFile est_filein = CAutoFile(fopen(est_path.string().c_str(), \"rb\"), SER_DISK, CLIENT_VERSION);\n+    if (est_filein)\n+        mempool.ReadFeeEstimates(est_filein);\n+\n     // ********************************************************* Step 8: load wallet\n #ifdef ENABLE_WALLET\n     if (fDisableWallet) {\n         pwalletMain = NULL;\n         LogPrintf(\"Wallet disabled!\\n\");\n     } else {\n+\n+        // needed to restore wallet transaction meta data after -zapwallettxes\n+        std::vector<CWalletTx> vWtx;\n+\n         if (GetBoolArg(\"-zapwallettxes\", false)) {\n             uiInterface.InitMessage(_(\"Zapping all transactions from wallet...\"));\n \n             pwalletMain = new CWallet(strWalletFile);\n-            DBErrors nZapWalletRet = pwalletMain->ZapWalletTx();\n+            DBErrors nZapWalletRet = pwalletMain->ZapWalletTx(vWtx);\n             if (nZapWalletRet != DB_LOAD_OK) {\n                 uiInterface.InitMessage(_(\"Error loading wallet.dat: Wallet corrupted\"));\n                 return false;\n@@ -1032,6 +1105,29 @@ bool AppInit2(boost::thread_group& threadGroup)\n             LogPrintf(\" rescan      %15dms\\n\", GetTimeMillis() - nStart);\n             pwalletMain->SetBestChain(chainActive.GetLocator());\n             nWalletDBUpdated++;\n+\n+            // Restore wallet transaction metadata after -zapwallettxes=1\n+            if (GetBoolArg(\"-zapwallettxes\", false) && GetArg(\"-zapwallettxes\", \"1\") != \"2\")\n+            {\n+                BOOST_FOREACH(const CWalletTx& wtxOld, vWtx)\n+                {\n+                    uint256 hash = wtxOld.GetHash();\n+                    std::map<uint256, CWalletTx>::iterator mi = pwalletMain->mapWallet.find(hash);\n+                    if (mi != pwalletMain->mapWallet.end())\n+                    {\n+                        const CWalletTx* copyFrom = &wtxOld;\n+                        CWalletTx* copyTo = &mi->second;\n+                        copyTo->mapValue = copyFrom->mapValue;\n+                        copyTo->vOrderForm = copyFrom->vOrderForm;\n+                        copyTo->nTimeReceived = copyFrom->nTimeReceived;\n+                        copyTo->nTimeSmart = copyFrom->nTimeSmart;\n+                        copyTo->fFromMe = copyFrom->fFromMe;\n+                        copyTo->strFromAccount = copyFrom->strFromAccount;\n+                        copyTo->nOrderPos = copyFrom->nOrderPos;\n+                        copyTo->WriteToDisk();\n+                    }\n+                }\n+            }\n         }\n     } // (!fDisableWallet)\n #else // ENABLE_WALLET\n@@ -1078,17 +1174,16 @@ bool AppInit2(boost::thread_group& threadGroup)\n     RandAddSeedPerfmon();\n \n     //// debug print\n-    LogPrintf(\"mapBlockIndex.size() = %\"PRIszu\"\\n\",   mapBlockIndex.size());\n+    LogPrintf(\"mapBlockIndex.size() = %u\\n\",   mapBlockIndex.size());\n     LogPrintf(\"nBestHeight = %d\\n\",                   chainActive.Height());\n #ifdef ENABLE_WALLET\n-    LogPrintf(\"setKeyPool.size() = %\"PRIszu\"\\n\",      pwalletMain ? pwalletMain->setKeyPool.size() : 0);\n-    LogPrintf(\"mapWallet.size() = %\"PRIszu\"\\n\",       pwalletMain ? pwalletMain->mapWallet.size() : 0);\n-    LogPrintf(\"mapAddressBook.size() = %\"PRIszu\"\\n\",  pwalletMain ? pwalletMain->mapAddressBook.size() : 0);\n+    LogPrintf(\"setKeyPool.size() = %u\\n\",      pwalletMain ? pwalletMain->setKeyPool.size() : 0);\n+    LogPrintf(\"mapWallet.size() = %u\\n\",       pwalletMain ? pwalletMain->mapWallet.size() : 0);\n+    LogPrintf(\"mapAddressBook.size() = %u\\n\",  pwalletMain ? pwalletMain->mapAddressBook.size() : 0);\n #endif\n \n+    InitRespendFilter();\n     StartNode(threadGroup);\n-    // InitRPCMining is needed here so getwork/getblocktemplate in the GUI debug console works properly.\n-    InitRPCMining();\n     if (fServer)\n         StartRPCThreads();\n "
      },
      {
        "sha": "626525c9adb5fe8a3b239294e8dfb9ec37ae2935",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -12,9 +12,8 @@ class CWallet;\n \n namespace boost {\n     class thread_group;\n-};\n+} // namespace boost\n \n-extern std::string strWalletFile;\n extern CWallet* pwalletMain;\n \n void StartShutdown();\n@@ -29,6 +28,9 @@ enum HelpMessageMode\n     HMM_BITCOIN_QT\n };\n \n+/** Help for options shared between UI and daemon (for -help) */\n std::string HelpMessage(HelpMessageMode mode);\n+/** Returns licensing information (for -version) */\n+std::string LicenseInfo();\n \n #endif"
      },
      {
        "sha": "46f5892f62dd122843698de8b3ab1ac11ff523ba",
        "filename": "src/json/json_spirit_reader_template.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/json/json_spirit_reader_template.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/json/json_spirit_reader_template.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/json/json_spirit_reader_template.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -33,8 +33,8 @@\n \n namespace json_spirit\n {\n-    const spirit_namespace::int_parser < boost::int64_t >  int64_p  = spirit_namespace::int_parser < boost::int64_t  >();\n-    const spirit_namespace::uint_parser< boost::uint64_t > uint64_p = spirit_namespace::uint_parser< boost::uint64_t >();\n+    const spirit_namespace::int_parser < int64_t >  int64_p  = spirit_namespace::int_parser < int64_t  >();\n+    const spirit_namespace::uint_parser< uint64_t > uint64_p = spirit_namespace::uint_parser< uint64_t >();\n \n     template< class Iter_type >\n     bool is_eq( Iter_type first, Iter_type last, const char* c_str )\n@@ -270,12 +270,12 @@ namespace json_spirit\n             add_to_current( Value_type() );\n         }\n \n-        void new_int( boost::int64_t i )\n+        void new_int( int64_t i )\n         {\n             add_to_current( i );\n         }\n \n-        void new_uint64( boost::uint64_t ui )\n+        void new_uint64( uint64_t ui )\n         {\n             add_to_current( ui );\n         }\n@@ -425,8 +425,8 @@ namespace json_spirit\n                 typedef boost::function< void( Char_type )            > Char_action;\n                 typedef boost::function< void( Iter_type, Iter_type ) > Str_action;\n                 typedef boost::function< void( double )               > Real_action;\n-                typedef boost::function< void( boost::int64_t )       > Int_action;\n-                typedef boost::function< void( boost::uint64_t )      > Uint64_action;\n+                typedef boost::function< void( int64_t )       > Int_action;\n+                typedef boost::function< void( uint64_t )      > Uint64_action;\n \n                 Char_action   begin_obj  ( boost::bind( &Semantic_actions_t::begin_obj,   &self.actions_, _1 ) );\n                 Char_action   end_obj    ( boost::bind( &Semantic_actions_t::end_obj,     &self.actions_, _1 ) );"
      },
      {
        "sha": "13cc89210c6f643185e7690b50d3a1f0a18a37de",
        "filename": "src/json/json_spirit_value.h",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/json/json_spirit_value.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/json/json_spirit_value.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/json/json_spirit_value.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -16,8 +16,8 @@\n #include <cassert>\n #include <sstream>\n #include <stdexcept>\n+#include <stdint.h>\n #include <boost/config.hpp> \n-#include <boost/cstdint.hpp> \n #include <boost/shared_ptr.hpp> \n #include <boost/variant.hpp> \n \n@@ -45,8 +45,8 @@ namespace json_spirit\n         Value_impl( const Array&       value );\n         Value_impl( bool               value );\n         Value_impl( int                value );\n-        Value_impl( boost::int64_t     value );\n-        Value_impl( boost::uint64_t    value );\n+        Value_impl( int64_t     value );\n+        Value_impl( uint64_t    value );\n         Value_impl( double             value );\n \n         Value_impl( const Value_impl& other );\n@@ -65,8 +65,8 @@ namespace json_spirit\n         const Array&       get_array()  const;\n         bool               get_bool()   const;\n         int                get_int()    const;\n-        boost::int64_t     get_int64()  const;\n-        boost::uint64_t    get_uint64() const;\n+        int64_t     get_int64()  const;\n+        uint64_t    get_uint64() const;\n         double             get_real()   const;\n \n         Object& get_obj();\n@@ -83,7 +83,7 @@ namespace json_spirit\n \n         typedef boost::variant< String_type, \n                                 boost::recursive_wrapper< Object >, boost::recursive_wrapper< Array >, \n-                                bool, boost::int64_t, double > Variant;\n+                                bool, int64_t, double > Variant;\n \n         Value_type type_;\n         Variant v_;\n@@ -258,23 +258,23 @@ namespace json_spirit\n     template< class Config >\n     Value_impl< Config >::Value_impl( int value )\n     :   type_( int_type )\n-    ,   v_( static_cast< boost::int64_t >( value ) )\n+    ,   v_( static_cast< int64_t >( value ) )\n     ,   is_uint64_( false )\n     {\n     }\n \n     template< class Config >\n-    Value_impl< Config >::Value_impl( boost::int64_t value )\n+    Value_impl< Config >::Value_impl( int64_t value )\n     :   type_( int_type )\n     ,   v_( value )\n     ,   is_uint64_( false )\n     {\n     }\n \n     template< class Config >\n-    Value_impl< Config >::Value_impl( boost::uint64_t value )\n+    Value_impl< Config >::Value_impl( uint64_t value )\n     :   type_( int_type )\n-    ,   v_( static_cast< boost::int64_t >( value ) )\n+    ,   v_( static_cast< int64_t >( value ) )\n     ,   is_uint64_( true )\n     {\n     }\n@@ -390,19 +390,19 @@ namespace json_spirit\n     }\n     \n     template< class Config >\n-    boost::int64_t Value_impl< Config >::get_int64() const\n+    int64_t Value_impl< Config >::get_int64() const\n     {\n         check_type(  int_type );\n \n-        return boost::get< boost::int64_t >( v_ );\n+        return boost::get< int64_t >( v_ );\n     }\n     \n     template< class Config >\n-    boost::uint64_t Value_impl< Config >::get_uint64() const\n+    uint64_t Value_impl< Config >::get_uint64() const\n     {\n         check_type(  int_type );\n \n-        return static_cast< boost::uint64_t >( get_int64() );\n+        return static_cast< uint64_t >( get_int64() );\n     }\n \n     template< class Config >\n@@ -481,13 +481,13 @@ namespace json_spirit\n         }\n        \n         template< class Value > \n-        boost::int64_t get_value( const Value& value, Type_to_type< boost::int64_t > )\n+        int64_t get_value( const Value& value, Type_to_type< int64_t > )\n         {\n             return value.get_int64();\n         }\n        \n         template< class Value > \n-        boost::uint64_t get_value( const Value& value, Type_to_type< boost::uint64_t > )\n+        uint64_t get_value( const Value& value, Type_to_type< uint64_t > )\n         {\n             return value.get_uint64();\n         }"
      },
      {
        "sha": "3c4fa77e727fb7ff8303ad6326f785b5d2b871e1",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 189,
        "deletions": 58,
        "changes": 247,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -4,14 +4,35 @@\n \n #include \"key.h\"\n \n+#include \"crypto/sha2.h\"\n+#include <openssl/rand.h>\n+\n+#ifdef USE_SECP256K1\n+#include <secp256k1.h>\n+#else\n #include <openssl/bn.h>\n #include <openssl/ecdsa.h>\n #include <openssl/obj_mac.h>\n-#include <openssl/rand.h>\n+#endif\n \n // anonymous namespace with local implementation code (OpenSSL interaction)\n namespace {\n \n+#ifdef USE_SECP256K1\n+#include <secp256k1.h>\n+class CSecp256k1Init {\n+public:\n+    CSecp256k1Init() {\n+        secp256k1_start();\n+    }\n+    ~CSecp256k1Init() {\n+        secp256k1_stop();\n+    }\n+};\n+static CSecp256k1Init instance_of_csecp256k1;\n+\n+#else\n+\n // Generate a private key from just the secret parameter\n int EC_KEY_regenerate_key(EC_KEY *eckey, BIGNUM *priv_key)\n {\n@@ -332,30 +353,61 @@ class CECKey {\n     }\n };\n \n-}; // end of anonymous namespace\n+#endif\n \n-bool CKey::Check(const unsigned char *vch) {\n-    // Do not convert to OpenSSL's data structures for range-checking keys,\n-    // it's easy enough to do directly.\n-    static const unsigned char vchMax[32] = {\n-        0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n-        0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,\n-        0xBA,0xAE,0xDC,0xE6,0xAF,0x48,0xA0,0x3B,\n-        0xBF,0xD2,0x5E,0x8C,0xD0,0x36,0x41,0x40\n-    };\n-    bool fIsZero = true;\n-    for (int i=0; i<32 && fIsZero; i++)\n-        if (vch[i] != 0)\n-            fIsZero = false;\n-    if (fIsZero)\n-        return false;\n-    for (int i=0; i<32; i++) {\n-        if (vch[i] < vchMax[i])\n-            return true;\n-        if (vch[i] > vchMax[i])\n-            return false;\n+int CompareBigEndian(const unsigned char *c1, size_t c1len, const unsigned char *c2, size_t c2len) {\n+    while (c1len > c2len) {\n+        if (*c1)\n+            return 1;\n+        c1++;\n+        c1len--;\n     }\n-    return true;\n+    while (c2len > c1len) {\n+        if (*c2)\n+            return -1;\n+        c2++;\n+        c2len--;\n+    }\n+    while (c1len > 0) {\n+        if (*c1 > *c2)\n+            return 1;\n+        if (*c2 > *c1)\n+            return -1;\n+        c1++;\n+        c2++;\n+        c1len--;\n+    }\n+    return 0;\n+}\n+\n+// Order of secp256k1's generator minus 1.\n+const unsigned char vchMaxModOrder[32] = {\n+    0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n+    0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,\n+    0xBA,0xAE,0xDC,0xE6,0xAF,0x48,0xA0,0x3B,\n+    0xBF,0xD2,0x5E,0x8C,0xD0,0x36,0x41,0x40\n+};\n+\n+// Half of the order of secp256k1's generator minus 1.\n+const unsigned char vchMaxModHalfOrder[32] = {\n+    0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n+    0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n+    0x5D,0x57,0x6E,0x73,0x57,0xA4,0x50,0x1D,\n+    0xDF,0xE9,0x2F,0x46,0x68,0x1B,0x20,0xA0\n+};\n+\n+const unsigned char vchZero[0] = {};\n+\n+} // anon namespace\n+\n+bool CKey::Check(const unsigned char *vch) {\n+    return CompareBigEndian(vch, 32, vchZero, 0) > 0 &&\n+           CompareBigEndian(vch, 32, vchMaxModOrder, 32) <= 0;\n+}\n+\n+bool CKey::CheckSignatureElement(const unsigned char *vch, int len, bool half) {\n+    return CompareBigEndian(vch, len, vchZero, 0) > 0 &&\n+           CompareBigEndian(vch, len, half ? vchMaxModHalfOrder : vchMaxModOrder, 32) <= 0;\n }\n \n void CKey::MakeNewKey(bool fCompressedIn) {\n@@ -367,125 +419,183 @@ void CKey::MakeNewKey(bool fCompressedIn) {\n }\n \n bool CKey::SetPrivKey(const CPrivKey &privkey, bool fCompressedIn) {\n+#ifdef USE_SECP256K1\n+    if (!secp256k1_ecdsa_privkey_import((unsigned char*)begin(), &privkey[0], privkey.size()))\n+        return false;\n+#else\n     CECKey key;\n     if (!key.SetPrivKey(privkey))\n         return false;\n     key.GetSecretBytes(vch);\n+#endif\n     fCompressed = fCompressedIn;\n     fValid = true;\n     return true;\n }\n \n CPrivKey CKey::GetPrivKey() const {\n     assert(fValid);\n+    CPrivKey privkey;\n+#ifdef USE_SECP256K1\n+    privkey.resize(279);\n+    int privkeylen = 279;\n+    int ret = secp256k1_ecdsa_privkey_export(begin(), (unsigned char*)&privkey[0], &privkeylen, fCompressed);\n+    assert(ret);\n+    privkey.resize(privkeylen);\n+#else\n     CECKey key;\n     key.SetSecretBytes(vch);\n-    CPrivKey privkey;\n     key.GetPrivKey(privkey, fCompressed);\n+#endif\n     return privkey;\n }\n \n CPubKey CKey::GetPubKey() const {\n     assert(fValid);\n+    CPubKey pubkey;\n+#ifdef USE_SECP256K1\n+    int clen = 65;\n+    int ret = secp256k1_ecdsa_pubkey_create((unsigned char*)pubkey.begin(), &clen, begin(), fCompressed);\n+    assert(ret);\n+    assert(pubkey.IsValid());\n+    assert((int)pubkey.size() == clen);\n+#else\n     CECKey key;\n     key.SetSecretBytes(vch);\n-    CPubKey pubkey;\n     key.GetPubKey(pubkey, fCompressed);\n+#endif\n     return pubkey;\n }\n \n bool CKey::Sign(const uint256 &hash, std::vector<unsigned char>& vchSig) const {\n     if (!fValid)\n         return false;\n+#ifdef USE_SECP256K1\n+    vchSig.resize(72);\n+    int nSigLen = 72;\n+    CKey nonce;\n+    do {\n+        nonce.MakeNewKey(true);\n+        if (secp256k1_ecdsa_sign((const unsigned char*)&hash, 32, (unsigned char*)&vchSig[0], &nSigLen, begin(), nonce.begin()))\n+            break;\n+    } while(true);\n+    vchSig.resize(nSigLen);\n+    return true;\n+#else\n     CECKey key;\n     key.SetSecretBytes(vch);\n     return key.Sign(hash, vchSig);\n+#endif\n }\n \n bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig) const {\n     if (!fValid)\n         return false;\n-    CECKey key;\n-    key.SetSecretBytes(vch);\n     vchSig.resize(65);\n     int rec = -1;\n+#ifdef USE_SECP256K1\n+    CKey nonce;\n+    do {\n+        nonce.MakeNewKey(true);\n+        if (secp256k1_ecdsa_sign_compact((const unsigned char*)&hash, 32, &vchSig[1], begin(), nonce.begin(), &rec))\n+            break;\n+    } while(true);\n+#else\n+    CECKey key;\n+    key.SetSecretBytes(vch);\n     if (!key.SignCompact(hash, &vchSig[1], rec))\n         return false;\n+#endif\n     assert(rec != -1);\n     vchSig[0] = 27 + rec + (fCompressed ? 4 : 0);\n     return true;\n }\n \n bool CKey::Load(CPrivKey &privkey, CPubKey &vchPubKey, bool fSkipCheck=false) {\n+#ifdef USE_SECP256K1\n+    if (!secp256k1_ecdsa_privkey_import((unsigned char*)begin(), &privkey[0], privkey.size()))\n+        return false;\n+#else\n     CECKey key;\n     if (!key.SetPrivKey(privkey, fSkipCheck))\n         return false;\n-    \n     key.GetSecretBytes(vch);\n+#endif\n     fCompressed = vchPubKey.IsCompressed();\n     fValid = true;\n-    \n+\n     if (fSkipCheck)\n         return true;\n-    \n+\n     if (GetPubKey() != vchPubKey)\n         return false;\n-    \n+\n     return true;\n }\n \n bool CPubKey::Verify(const uint256 &hash, const std::vector<unsigned char>& vchSig) const {\n     if (!IsValid())\n         return false;\n+#ifdef USE_SECP256K1\n+    if (secp256k1_ecdsa_verify((const unsigned char*)&hash, 32, &vchSig[0], vchSig.size(), begin(), size()) != 1)\n+        return false;\n+#else\n     CECKey key;\n     if (!key.SetPubKey(*this))\n         return false;\n     if (!key.Verify(hash, vchSig))\n         return false;\n+#endif\n     return true;\n }\n \n bool CPubKey::RecoverCompact(const uint256 &hash, const std::vector<unsigned char>& vchSig) {\n     if (vchSig.size() != 65)\n         return false;\n-    CECKey key;\n-    if (!key.Recover(hash, &vchSig[1], (vchSig[0] - 27) & ~4))\n-        return false;\n-    key.GetPubKey(*this, (vchSig[0] - 27) & 4);\n-    return true;\n-}\n-\n-bool CPubKey::VerifyCompact(const uint256 &hash, const std::vector<unsigned char>& vchSig) const {\n-    if (!IsValid())\n-        return false;\n-    if (vchSig.size() != 65)\n+    int recid = (vchSig[0] - 27) & 3;\n+    bool fComp = (vchSig[0] - 27) & 4;\n+#ifdef USE_SECP256K1\n+    int pubkeylen = 65;\n+    if (!secp256k1_ecdsa_recover_compact((const unsigned char*)&hash, 32, &vchSig[1], (unsigned char*)begin(), &pubkeylen, fComp, recid))\n         return false;\n+    assert((int)size() == pubkeylen);\n+#else\n     CECKey key;\n-    if (!key.Recover(hash, &vchSig[1], (vchSig[0] - 27) & ~4))\n-        return false;\n-    CPubKey pubkeyRec;\n-    key.GetPubKey(pubkeyRec, IsCompressed());\n-    if (*this != pubkeyRec)\n+    if (!key.Recover(hash, &vchSig[1], recid))\n         return false;\n+    key.GetPubKey(*this, fComp);\n+#endif\n     return true;\n }\n \n bool CPubKey::IsFullyValid() const {\n     if (!IsValid())\n         return false;\n+#ifdef USE_SECP256K1\n+    if (!secp256k1_ecdsa_pubkey_verify(begin(), size()))\n+        return false;\n+#else\n     CECKey key;\n     if (!key.SetPubKey(*this))\n         return false;\n+#endif\n     return true;\n }\n \n bool CPubKey::Decompress() {\n     if (!IsValid())\n         return false;\n+#ifdef USE_SECP256K1\n+    int clen = size();\n+    int ret = secp256k1_ecdsa_pubkey_decompress((unsigned char*)begin(), &clen);\n+    assert(ret);\n+    assert(clen == (int)size());\n+#else\n     CECKey key;\n     if (!key.SetPubKey(*this))\n         return false;\n     key.GetPubKey(*this, false);\n+#endif\n     return true;\n }\n \n@@ -495,12 +605,10 @@ void static BIP32Hash(const unsigned char chainCode[32], unsigned int nChild, un\n     num[1] = (nChild >> 16) & 0xFF;\n     num[2] = (nChild >>  8) & 0xFF;\n     num[3] = (nChild >>  0) & 0xFF;\n-    HMAC_SHA512_CTX ctx;\n-    HMAC_SHA512_Init(&ctx, chainCode, 32);\n-    HMAC_SHA512_Update(&ctx, &header, 1);\n-    HMAC_SHA512_Update(&ctx, data, 32);\n-    HMAC_SHA512_Update(&ctx, num, 4);\n-    HMAC_SHA512_Final(output, &ctx);\n+    CHMAC_SHA512(chainCode, 32).Write(&header, 1)\n+                               .Write(data, 32)\n+                               .Write(num, 4)\n+                               .Finalize(output);\n }\n \n bool CKey::Derive(CKey& keyChild, unsigned char ccChild[32], unsigned int nChild, const unsigned char cc[32]) const {\n@@ -517,7 +625,12 @@ bool CKey::Derive(CKey& keyChild, unsigned char ccChild[32], unsigned int nChild\n         BIP32Hash(cc, nChild, 0, begin(), out);\n     }\n     memcpy(ccChild, out+32, 32);\n+#ifdef USE_SECP256K1\n+    memcpy((unsigned char*)keyChild.begin(), begin(), 32);\n+    bool ret = secp256k1_ecdsa_privkey_tweak_add((unsigned char*)keyChild.begin(), out);\n+#else\n     bool ret = CECKey::TweakSecret((unsigned char*)keyChild.begin(), begin(), out);\n+#endif\n     UnlockObject(out);\n     keyChild.fCompressed = true;\n     keyChild.fValid = ret;\n@@ -531,10 +644,15 @@ bool CPubKey::Derive(CPubKey& pubkeyChild, unsigned char ccChild[32], unsigned i\n     unsigned char out[64];\n     BIP32Hash(cc, nChild, *begin(), begin()+1, out);\n     memcpy(ccChild, out+32, 32);\n+#ifdef USE_SECP256K1\n+    pubkeyChild = *this;\n+    bool ret = secp256k1_ecdsa_pubkey_tweak_add((unsigned char*)pubkeyChild.begin(), pubkeyChild.size(), out);\n+#else\n     CECKey key;\n     bool ret = key.SetPubKey(*this);\n     ret &= key.TweakPublic(out);\n     key.GetPubKey(pubkeyChild, true);\n+#endif\n     return ret;\n }\n \n@@ -547,13 +665,10 @@ bool CExtKey::Derive(CExtKey &out, unsigned int nChild) const {\n }\n \n void CExtKey::SetMaster(const unsigned char *seed, unsigned int nSeedLen) {\n-    static const char hashkey[] = {'B','i','t','c','o','i','n',' ','s','e','e','d'};\n-    HMAC_SHA512_CTX ctx;\n-    HMAC_SHA512_Init(&ctx, hashkey, sizeof(hashkey));\n-    HMAC_SHA512_Update(&ctx, seed, nSeedLen);\n+    static const unsigned char hashkey[] = {'B','i','t','c','o','i','n',' ','s','e','e','d'};\n     unsigned char out[64];\n     LockObject(out);\n-    HMAC_SHA512_Final(out, &ctx);\n+    CHMAC_SHA512(hashkey, sizeof(hashkey)).Write(seed, nSeedLen).Finalize(out);\n     key.Set(&out[0], &out[32], true);\n     memcpy(vchChainCode, &out[32], 32);\n     UnlockObject(out);\n@@ -616,3 +731,19 @@ bool CExtPubKey::Derive(CExtPubKey &out, unsigned int nChild) const {\n     out.nChild = nChild;\n     return pubkey.Derive(out.pubkey, out.vchChainCode, nChild, vchChainCode);\n }\n+\n+bool ECC_InitSanityCheck() {\n+#ifdef USE_SECP256K1\n+    return true;\n+#else\n+    EC_KEY *pkey = EC_KEY_new_by_curve_name(NID_secp256k1);\n+    if(pkey == NULL)\n+        return false;\n+    EC_KEY_free(pkey);\n+\n+    // TODO Is there more EC functionality that could be missing?\n+    return true;\n+#endif\n+}\n+\n+"
      },
      {
        "sha": "11dc65de8ccb8558bcc53a9becd48c4ee57c9552",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -156,10 +156,6 @@ class CPubKey {\n     // If this public key is not fully valid, the return value will be false.\n     bool Verify(const uint256 &hash, const std::vector<unsigned char>& vchSig) const;\n \n-    // Verify a compact signature (~65 bytes).\n-    // See CKey::SignCompact.\n-    bool VerifyCompact(const uint256 &hash, const std::vector<unsigned char>& vchSig) const;\n-\n     // Recover a public key from a compact signature.\n     bool RecoverCompact(const uint256 &hash, const std::vector<unsigned char>& vchSig);\n \n@@ -269,6 +265,9 @@ class CKey {\n \n     // Load private key and check that public key matches.\n     bool Load(CPrivKey &privkey, CPubKey &vchPubKey, bool fSkipCheck);\n+\n+    // Check whether an element of a signature (r or s) is valid.\n+    static bool CheckSignatureElement(const unsigned char *vch, int len, bool half);\n };\n \n struct CExtPubKey {\n@@ -307,4 +306,7 @@ struct CExtKey {\n     void SetMaster(const unsigned char *seed, unsigned int nSeedLen);\n };\n \n+/** Check that required EC support is available at runtime */\n+bool ECC_InitSanityCheck(void);\n+\n #endif"
      },
      {
        "sha": "2a4c88d5656dd28d96bc0319a27b47ed730fc957",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -33,6 +33,9 @@ bool CBasicKeyStore::AddKeyPubKey(const CKey& key, const CPubKey &pubkey)\n \n bool CBasicKeyStore::AddCScript(const CScript& redeemScript)\n {\n+    if (redeemScript.size() > MAX_SCRIPT_ELEMENT_SIZE)\n+        return error(\"CBasicKeyStore::AddCScript() : redeemScripts > %i bytes are invalid\", MAX_SCRIPT_ELEMENT_SIZE);\n+\n     LOCK(cs_KeyStore);\n     mapScripts[redeemScript.GetID()] = redeemScript;\n     return true;\n@@ -56,3 +59,15 @@ bool CBasicKeyStore::GetCScript(const CScriptID &hash, CScript& redeemScriptOut)\n     return false;\n }\n \n+bool CBasicKeyStore::AddWatchOnly(const CScript &dest)\n+{\n+    LOCK(cs_KeyStore);\n+    setWatchOnly.insert(dest);\n+    return true;\n+}\n+\n+bool CBasicKeyStore::HaveWatchOnly(const CScript &dest) const\n+{\n+    LOCK(cs_KeyStore);\n+    return setWatchOnly.count(dest) > 0;\n+}"
      },
      {
        "sha": "72411a1387c0eac6416828bb4606216807f40319",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -8,11 +8,21 @@\n \n #include \"key.h\"\n #include \"sync.h\"\n+#include \"script.h\"     // for CNoDestination\n \n #include <boost/signals2/signal.hpp>\n+#include <boost/variant.hpp>\n \n class CScript;\n \n+/** A txout script template with a specific destination. It is either:\n+ *  * CNoDestination: no destination set\n+ *  * CKeyID: TX_PUBKEYHASH destination\n+ *  * CScriptID: TX_SCRIPTHASH destination\n+ *  A CTxDestination is the internal data type encoded in a CBitcoinAddress\n+ */\n+typedef boost::variant<CNoDestination, CKeyID, CScriptID> CTxDestination;\n+\n /** A virtual base class for key stores */\n class CKeyStore\n {\n@@ -36,17 +46,23 @@ class CKeyStore\n     virtual bool AddCScript(const CScript& redeemScript) =0;\n     virtual bool HaveCScript(const CScriptID &hash) const =0;\n     virtual bool GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const =0;\n+\n+    // Support for Watch-only addresses\n+    virtual bool AddWatchOnly(const CScript &dest) =0;\n+    virtual bool HaveWatchOnly(const CScript &dest) const =0;\n };\n \n typedef std::map<CKeyID, CKey> KeyMap;\n typedef std::map<CScriptID, CScript > ScriptMap;\n+typedef std::set<CScript> WatchOnlySet;\n \n /** Basic key store, that keeps keys in an address->secret map */\n class CBasicKeyStore : public CKeyStore\n {\n protected:\n     KeyMap mapKeys;\n     ScriptMap mapScripts;\n+    WatchOnlySet setWatchOnly;\n \n public:\n     bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey);\n@@ -88,6 +104,9 @@ class CBasicKeyStore : public CKeyStore\n     virtual bool AddCScript(const CScript& redeemScript);\n     virtual bool HaveCScript(const CScriptID &hash) const;\n     virtual bool GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const;\n+\n+    virtual bool AddWatchOnly(const CScript &dest);\n+    virtual bool HaveWatchOnly(const CScript &dest) const;\n };\n \n typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;"
      },
      {
        "sha": "f8903b69e4b4152c28f9c5ec614ec02f2b115593",
        "filename": "src/leveldb/Makefile",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/Makefile?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -72,7 +72,7 @@ SHARED = $(SHARED1)\n else\n # Update db.h if you change these.\n SHARED_MAJOR = 1\n-SHARED_MINOR = 15\n+SHARED_MINOR = 17\n SHARED1 = libleveldb.$(PLATFORM_SHARED_EXT)\n SHARED2 = $(SHARED1).$(SHARED_MAJOR)\n SHARED3 = $(SHARED1).$(SHARED_MAJOR).$(SHARED_MINOR)\n@@ -190,19 +190,20 @@ PLATFORMSROOT=/Applications/Xcode.app/Contents/Developer/Platforms\n SIMULATORROOT=$(PLATFORMSROOT)/iPhoneSimulator.platform/Developer\n DEVICEROOT=$(PLATFORMSROOT)/iPhoneOS.platform/Developer\n IOSVERSION=$(shell defaults read $(PLATFORMSROOT)/iPhoneOS.platform/version CFBundleShortVersionString)\n+IOSARCH=-arch armv6 -arch armv7 -arch armv7s -arch arm64\n \n .cc.o:\n \tmkdir -p ios-x86/$(dir $@)\n-\t$(CXX) $(CXXFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $< -o ios-x86/$@\n+\t$(CXX) $(CXXFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -arch x86_64 -c $< -o ios-x86/$@\n \tmkdir -p ios-arm/$(dir $@)\n-\txcrun -sdk iphoneos $(CXX) $(CXXFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@\n+\txcrun -sdk iphoneos $(CXX) $(CXXFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk $(IOSARCH) -c $< -o ios-arm/$@\n \tlipo ios-x86/$@ ios-arm/$@ -create -output $@\n \n .c.o:\n \tmkdir -p ios-x86/$(dir $@)\n-\t$(CC) $(CFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $< -o ios-x86/$@\n+\t$(CC) $(CFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -arch x86_64 -c $< -o ios-x86/$@\n \tmkdir -p ios-arm/$(dir $@)\n-\txcrun -sdk iphoneos $(CC) $(CFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv6 -arch armv7 -c $< -o ios-arm/$@\n+\txcrun -sdk iphoneos $(CC) $(CFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk $(IOSARCH) -c $< -o ios-arm/$@\n \tlipo ios-x86/$@ ios-arm/$@ -create -output $@\n \n else"
      },
      {
        "sha": "da32946d9924619ebc936e0dc3131907a323a847",
        "filename": "src/leveldb/db/filename.cc",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/db/filename.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/db/filename.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/filename.cc?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -29,19 +29,14 @@ std::string LogFileName(const std::string& name, uint64_t number) {\n   return MakeFileName(name, number, \"log\");\n }\n \n-// TableFileName returns the filenames we usually write to, while\n-// SSTTableFileName returns the alternative filenames we also try to read from\n-// for backward compatibility. For now, swap them around.\n-// TODO: when compatibility is no longer necessary, swap them back\n-// (TableFileName to use \"ldb\" and SSTTableFileName to use \"sst\").\n std::string TableFileName(const std::string& name, uint64_t number) {\n   assert(number > 0);\n-  return MakeFileName(name, number, \"sst\");\n+  return MakeFileName(name, number, \"ldb\");\n }\n \n std::string SSTTableFileName(const std::string& name, uint64_t number) {\n   assert(number > 0);\n-  return MakeFileName(name, number, \"ldb\");\n+  return MakeFileName(name, number, \"sst\");\n }\n \n std::string DescriptorFileName(const std::string& dbname, uint64_t number) {"
      },
      {
        "sha": "4919216d044ff7518d701c1223833687da9b2e60",
        "filename": "src/leveldb/db/log_reader.cc",
        "status": "modified",
        "additions": 15,
        "deletions": 8,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/db/log_reader.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/db/log_reader.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/log_reader.cc?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -133,7 +133,9 @@ bool Reader::ReadRecord(Slice* record, std::string* scratch) {\n \n       case kEof:\n         if (in_fragmented_record) {\n-          ReportCorruption(scratch->size(), \"partial record without end(3)\");\n+          // This can be caused by the writer dying immediately after\n+          // writing a physical record but before completing the next; don't\n+          // treat it as a corruption, just ignore the entire logical record.\n           scratch->clear();\n         }\n         return false;\n@@ -193,13 +195,12 @@ unsigned int Reader::ReadPhysicalRecord(Slice* result) {\n           eof_ = true;\n         }\n         continue;\n-      } else if (buffer_.size() == 0) {\n-        // End of file\n-        return kEof;\n       } else {\n-        size_t drop_size = buffer_.size();\n+        // Note that if buffer_ is non-empty, we have a truncated header at the\n+        // end of the file, which can be caused by the writer crashing in the\n+        // middle of writing the header. Instead of considering this an error,\n+        // just report EOF.\n         buffer_.clear();\n-        ReportCorruption(drop_size, \"truncated record at end of file\");\n         return kEof;\n       }\n     }\n@@ -213,8 +214,14 @@ unsigned int Reader::ReadPhysicalRecord(Slice* result) {\n     if (kHeaderSize + length > buffer_.size()) {\n       size_t drop_size = buffer_.size();\n       buffer_.clear();\n-      ReportCorruption(drop_size, \"bad record length\");\n-      return kBadRecord;\n+      if (!eof_) {\n+        ReportCorruption(drop_size, \"bad record length\");\n+        return kBadRecord;\n+      }\n+      // If the end of the file has been reached without reading |length| bytes\n+      // of payload, assume the writer died in the middle of writing the record.\n+      // Don't report a corruption.\n+      return kEof;\n     }\n \n     if (type == kZeroType && length == 0) {"
      },
      {
        "sha": "91d3caafc3bbe489c9741f093f5879f625838b2e",
        "filename": "src/leveldb/db/log_test.cc",
        "status": "modified",
        "additions": 35,
        "deletions": 5,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/db/log_test.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/db/log_test.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/log_test.cc?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -351,20 +351,32 @@ TEST(LogTest, BadRecordType) {\n   ASSERT_EQ(\"OK\", MatchError(\"unknown record type\"));\n }\n \n-TEST(LogTest, TruncatedTrailingRecord) {\n+TEST(LogTest, TruncatedTrailingRecordIsIgnored) {\n   Write(\"foo\");\n   ShrinkSize(4);   // Drop all payload as well as a header byte\n   ASSERT_EQ(\"EOF\", Read());\n-  ASSERT_EQ(kHeaderSize - 1, DroppedBytes());\n-  ASSERT_EQ(\"OK\", MatchError(\"truncated record at end of file\"));\n+  // Truncated last record is ignored, not treated as an error.\n+  ASSERT_EQ(0, DroppedBytes());\n+  ASSERT_EQ(\"\", ReportMessage());\n }\n \n TEST(LogTest, BadLength) {\n+  const int kPayloadSize = kBlockSize - kHeaderSize;\n+  Write(BigString(\"bar\", kPayloadSize));\n+  Write(\"foo\");\n+  // Least significant size byte is stored in header[4].\n+  IncrementByte(4, 1);\n+  ASSERT_EQ(\"foo\", Read());\n+  ASSERT_EQ(kBlockSize, DroppedBytes());\n+  ASSERT_EQ(\"OK\", MatchError(\"bad record length\"));\n+}\n+\n+TEST(LogTest, BadLengthAtEndIsIgnored) {\n   Write(\"foo\");\n   ShrinkSize(1);\n   ASSERT_EQ(\"EOF\", Read());\n-  ASSERT_EQ(kHeaderSize + 2, DroppedBytes());\n-  ASSERT_EQ(\"OK\", MatchError(\"bad record length\"));\n+  ASSERT_EQ(0, DroppedBytes());\n+  ASSERT_EQ(\"\", ReportMessage());\n }\n \n TEST(LogTest, ChecksumMismatch) {\n@@ -415,6 +427,24 @@ TEST(LogTest, UnexpectedFirstType) {\n   ASSERT_EQ(\"OK\", MatchError(\"partial record without end\"));\n }\n \n+TEST(LogTest, MissingLastIsIgnored) {\n+  Write(BigString(\"bar\", kBlockSize));\n+  // Remove the LAST block, including header.\n+  ShrinkSize(14);\n+  ASSERT_EQ(\"EOF\", Read());\n+  ASSERT_EQ(\"\", ReportMessage());\n+  ASSERT_EQ(0, DroppedBytes());\n+}\n+\n+TEST(LogTest, PartialLastIsIgnored) {\n+  Write(BigString(\"bar\", kBlockSize));\n+  // Cause a bad record length in the LAST block.\n+  ShrinkSize(1);\n+  ASSERT_EQ(\"EOF\", Read());\n+  ASSERT_EQ(\"\", ReportMessage());\n+  ASSERT_EQ(0, DroppedBytes());\n+}\n+\n TEST(LogTest, ErrorJoinsRecords) {\n   // Consider two fragmented records:\n   //    first(R1) last(R1) first(R2) last(R2)"
      },
      {
        "sha": "7727fafc58e5950ce0944d8a2a8b00fa679b8839",
        "filename": "src/leveldb/db/repair.cc",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/db/repair.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/db/repair.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/repair.cc?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -242,7 +242,6 @@ class Repairer {\n   }\n \n   void ExtractMetaData() {\n-    std::vector<TableInfo> kept;\n     for (size_t i = 0; i < table_numbers_.size(); i++) {\n       ScanTable(table_numbers_[i]);\n     }"
      },
      {
        "sha": "aa83df55e4ce1e5708b747362f6281e96460d272",
        "filename": "src/leveldb/db/version_set.cc",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/db/version_set.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/db/version_set.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/version_set.cc?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -54,20 +54,6 @@ static int64_t TotalFileSize(const std::vector<FileMetaData*>& files) {\n   return sum;\n }\n \n-namespace {\n-std::string IntSetToString(const std::set<uint64_t>& s) {\n-  std::string result = \"{\";\n-  for (std::set<uint64_t>::const_iterator it = s.begin();\n-       it != s.end();\n-       ++it) {\n-    result += (result.size() > 1) ? \",\" : \"\";\n-    result += NumberToString(*it);\n-  }\n-  result += \"}\";\n-  return result;\n-}\n-}  // namespace\n-\n Version::~Version() {\n   assert(refs_ == 0);\n "
      },
      {
        "sha": "1048fe3b8683cb81963a103c2133d276e2ec04fd",
        "filename": "src/leveldb/include/leveldb/c.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/include/leveldb/c.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/include/leveldb/c.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/c.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -9,7 +9,6 @@\n   Does not support:\n   . getters for the option types\n   . custom comparators that implement key shortening\n-  . capturing post-write-snapshot\n   . custom iter, db, env, cache implementations using just the C bindings\n \n   Some conventions:"
      },
      {
        "sha": "40851b2aa83d3428b68bc04f48cba8650236023e",
        "filename": "src/leveldb/include/leveldb/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/include/leveldb/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/include/leveldb/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/db.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -14,7 +14,7 @@ namespace leveldb {\n \n // Update Makefile if you change these\n static const int kMajorVersion = 1;\n-static const int kMinorVersion = 15;\n+static const int kMinorVersion = 17;\n \n struct Options;\n struct ReadOptions;"
      },
      {
        "sha": "bc367986f7e8e26fdf22afc02283d4dd13970158",
        "filename": "src/leveldb/include/leveldb/slice.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/include/leveldb/slice.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldb/include/leveldb/slice.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/slice.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -94,7 +94,7 @@ inline bool operator!=(const Slice& x, const Slice& y) {\n }\n \n inline int Slice::compare(const Slice& b) const {\n-  const int min_len = (size_ < b.size_) ? size_ : b.size_;\n+  const size_t min_len = (size_ < b.size_) ? size_ : b.size_;\n   int r = memcmp(data_, b.data_, min_len);\n   if (r == 0) {\n     if (size_ < b.size_) r = -1;"
      },
      {
        "sha": "043a56bf38a4fc16de96e6830125aaae37640453",
        "filename": "src/leveldbwrapper.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/leveldbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -93,7 +93,7 @@ class CLevelDBWrapper\n         if (!status.ok()) {\n             if (status.IsNotFound())\n                 return false;\n-            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString().c_str());\n+            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString());\n             HandleError(status);\n         }\n         try {\n@@ -122,7 +122,7 @@ class CLevelDBWrapper\n         if (!status.ok()) {\n             if (status.IsNotFound())\n                 return false;\n-            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString().c_str());\n+            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString());\n             HandleError(status);\n         }\n         return true;"
      },
      {
        "sha": "244b03a5c25feab4b4f6d72d03ef38fdeb72bf6b",
        "filename": "src/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_qt.m4?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -100,7 +100,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n   BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n \n-  MOC_DEFS='-DHAVE_CONFIG_H -I$(top_srcdir)/src'\n+  MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n   case $host in\n     *darwin*)\n      BITCOIN_QT_CHECK(["
      },
      {
        "sha": "a9c080ffaeef8e55bdeddaddcc1044593b770ce7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 667,
        "deletions": 485,
        "changes": 1152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -7,11 +7,13 @@\n \n #include \"addrman.h\"\n #include \"alert.h\"\n+#include \"bloom.h\"\n #include \"chainparams.h\"\n #include \"checkpoints.h\"\n #include \"checkqueue.h\"\n #include \"init.h\"\n #include \"net.h\"\n+#include \"pow.h\"\n #include \"txdb.h\"\n #include \"txmempool.h\"\n #include \"ui_interface.h\"\n@@ -36,11 +38,8 @@ using namespace boost;\n \n CCriticalSection cs_main;\n \n-CTxMemPool mempool;\n-\n map<uint256, CBlockIndex*> mapBlockIndex;\n CChain chainActive;\n-CChain chainMostWork;\n int64_t nTimeBestReceived = 0;\n int nScriptCheckThreads = 0;\n bool fImporting = false;\n@@ -49,12 +48,10 @@ bool fBenchmark = false;\n bool fTxIndex = false;\n unsigned int nCoinCacheSize = 5000;\n \n-/** Fees smaller than this (in satoshi) are considered zero fee (for transaction creation) */\n-int64_t CTransaction::nMinTxFee = 10000;  // Override with -mintxfee\n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n-int64_t CTransaction::nMinRelayTxFee = 1000;\n+CFeeRate minRelayTxFee = CFeeRate(1000);\n \n-static CMedianFilter<int> cPeerBlockCounts(8, 0); // Amount of blocks that other nodes claim to have\n+CTxMemPool mempool(::minRelayTxFee);\n \n struct COrphanBlock {\n     uint256 hashBlock;\n@@ -74,6 +71,7 @@ const string strMessageMagic = \"Bitcoin Signed Message:\\n\";\n \n // Internal stuff\n namespace {\n+\n     struct CBlockIndexWorkComparator\n     {\n         bool operator()(CBlockIndex *pa, CBlockIndex *pb) {\n@@ -122,8 +120,18 @@ namespace {\n     };\n     map<uint256, pair<NodeId, list<QueuedBlock>::iterator> > mapBlocksInFlight;\n     map<uint256, pair<NodeId, list<uint256>::iterator> > mapBlocksToDownload;\n+\n+} // anon namespace\n+\n+// Bloom filter to limit respend relays to one\n+static const unsigned int MAX_DOUBLESPEND_BLOOM = 1000;\n+static CBloomFilter doubleSpendFilter;\n+void InitRespendFilter() {\n+    seed_insecure_rand();\n+    doubleSpendFilter = CBloomFilter(MAX_DOUBLESPEND_BLOOM, 0.01, insecure_rand(), BLOOM_UPDATE_NONE);\n }\n \n+\n //////////////////////////////////////////////////////////////////////////////\n //\n // dispatching functions\n@@ -132,9 +140,10 @@ namespace {\n // These functions dispatch to one or all registered wallets\n \n namespace {\n+\n struct CMainSignals {\n-    // Notifies listeners of updated transaction data (passing hash, transaction, and optionally the block it is found in.\n-    boost::signals2::signal<void (const uint256 &, const CTransaction &, const CBlock *)> SyncTransaction;\n+    // Notifies listeners of updated transaction data (transaction, and optionally the block it is found in.\n+    boost::signals2::signal<void (const CTransaction &, const CBlock *)> SyncTransaction;\n     // Notifies listeners of an erased transaction (currently disabled, requires transaction replacement).\n     boost::signals2::signal<void (const uint256 &)> EraseTransaction;\n     // Notifies listeners of an updated transaction without new data (for now: a coinbase potentially becoming visible).\n@@ -146,10 +155,12 @@ struct CMainSignals {\n     // Tells listeners to broadcast their data.\n     boost::signals2::signal<void ()> Broadcast;\n } g_signals;\n-}\n+\n+} // anon namespace\n+\n \n void RegisterWallet(CWalletInterface* pwalletIn) {\n-    g_signals.SyncTransaction.connect(boost::bind(&CWalletInterface::SyncTransaction, pwalletIn, _1, _2, _3));\n+    g_signals.SyncTransaction.connect(boost::bind(&CWalletInterface::SyncTransaction, pwalletIn, _1, _2));\n     g_signals.EraseTransaction.connect(boost::bind(&CWalletInterface::EraseFromWallet, pwalletIn, _1));\n     g_signals.UpdatedTransaction.connect(boost::bind(&CWalletInterface::UpdatedTransaction, pwalletIn, _1));\n     g_signals.SetBestChain.connect(boost::bind(&CWalletInterface::SetBestChain, pwalletIn, _1));\n@@ -163,7 +174,7 @@ void UnregisterWallet(CWalletInterface* pwalletIn) {\n     g_signals.SetBestChain.disconnect(boost::bind(&CWalletInterface::SetBestChain, pwalletIn, _1));\n     g_signals.UpdatedTransaction.disconnect(boost::bind(&CWalletInterface::UpdatedTransaction, pwalletIn, _1));\n     g_signals.EraseTransaction.disconnect(boost::bind(&CWalletInterface::EraseFromWallet, pwalletIn, _1));\n-    g_signals.SyncTransaction.disconnect(boost::bind(&CWalletInterface::SyncTransaction, pwalletIn, _1, _2, _3));\n+    g_signals.SyncTransaction.disconnect(boost::bind(&CWalletInterface::SyncTransaction, pwalletIn, _1, _2));\n }\n \n void UnregisterAllWallets() {\n@@ -175,8 +186,8 @@ void UnregisterAllWallets() {\n     g_signals.SyncTransaction.disconnect_all_slots();\n }\n \n-void SyncWithWallets(const uint256 &hash, const CTransaction &tx, const CBlock *pblock) {\n-    g_signals.SyncTransaction(hash, tx, pblock);\n+void SyncWithWallets(const CTransaction &tx, const CBlock *pblock) {\n+    g_signals.SyncTransaction(tx, pblock);\n }\n \n //////////////////////////////////////////////////////////////////////////////\n@@ -205,6 +216,10 @@ struct CNodeState {\n     std::string name;\n     // List of asynchronously-determined block rejections to notify this peer about.\n     std::vector<CBlockReject> rejects;\n+    // The best known block we know this peer has announced.\n+    CBlockIndex *pindexBestKnownBlock;\n+    // The hash of the last unknown block this peer has announced.\n+    uint256 hashLastUnknownBlock;\n     list<QueuedBlock> vBlocksInFlight;\n     int nBlocksInFlight;\n     list<uint256> vBlocksToDownload;\n@@ -215,6 +230,8 @@ struct CNodeState {\n     CNodeState() {\n         nMisbehavior = 0;\n         fShouldBan = false;\n+        pindexBestKnownBlock = NULL;\n+        hashLastUnknownBlock = uint256(0);\n         nBlocksToDownload = 0;\n         nBlocksInFlight = 0;\n         nLastBlockReceive = 0;\n@@ -276,7 +293,6 @@ void MarkBlockAsReceived(const uint256 &hash, NodeId nodeFrom = -1) {\n             state->nLastBlockReceive = GetTimeMicros();\n         mapBlocksInFlight.erase(itInFlight);\n     }\n-\n }\n \n // Requires cs_main.\n@@ -312,14 +328,48 @@ void MarkBlockAsInFlight(NodeId nodeid, const uint256 &hash) {\n     mapBlocksInFlight[hash] = std::make_pair(nodeid, it);\n }\n \n+/** Check whether the last unknown block a peer advertized is not yet known. */\n+void ProcessBlockAvailability(NodeId nodeid) {\n+    CNodeState *state = State(nodeid);\n+    assert(state != NULL);\n+\n+    if (state->hashLastUnknownBlock != 0) {\n+        map<uint256, CBlockIndex*>::iterator itOld = mapBlockIndex.find(state->hashLastUnknownBlock);\n+        if (itOld != mapBlockIndex.end() && itOld->second->nChainWork > 0) {\n+            if (state->pindexBestKnownBlock == NULL || itOld->second->nChainWork >= state->pindexBestKnownBlock->nChainWork)\n+                state->pindexBestKnownBlock = itOld->second;\n+            state->hashLastUnknownBlock = uint256(0);\n+        }\n+    }\n }\n \n+/** Update tracking information about which blocks a peer is assumed to have. */\n+void UpdateBlockAvailability(NodeId nodeid, const uint256 &hash) {\n+    CNodeState *state = State(nodeid);\n+    assert(state != NULL);\n+\n+    ProcessBlockAvailability(nodeid);\n+\n+    map<uint256, CBlockIndex*>::iterator it = mapBlockIndex.find(hash);\n+    if (it != mapBlockIndex.end() && it->second->nChainWork > 0) {\n+        // An actually better block was announced.\n+        if (state->pindexBestKnownBlock == NULL || it->second->nChainWork >= state->pindexBestKnownBlock->nChainWork)\n+            state->pindexBestKnownBlock = it->second;\n+    } else {\n+        // An unknown block was announced; just assume that the latest one is the best one.\n+        state->hashLastUnknownBlock = hash;\n+    }\n+}\n+\n+} // anon namespace\n+\n bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats) {\n     LOCK(cs_main);\n     CNodeState *state = State(nodeid);\n     if (state == NULL)\n         return false;\n     stats.nMisbehavior = state->nMisbehavior;\n+    stats.nSyncHeight = state->pindexBestKnownBlock ? state->pindexBestKnownBlock->nHeight : -1;\n     return true;\n }\n \n@@ -373,12 +423,13 @@ CBlockLocator CChain::GetLocator(const CBlockIndex *pindex) const {\n             break;\n         // Exponentially larger steps back, plus the genesis block.\n         int nHeight = std::max(pindex->nHeight - nStep, 0);\n-        // In case pindex is not in this chain, iterate pindex->pprev to find blocks.\n-        while (pindex->nHeight > nHeight && !Contains(pindex))\n-            pindex = pindex->pprev;\n-        // If pindex is in this chain, use direct height-based access.\n-        if (pindex->nHeight > nHeight)\n+        if (Contains(pindex)) {\n+            // Use O(1) CChain index if possible.\n             pindex = (*this)[nHeight];\n+        } else {\n+            // Otherwise, use O(log n) skiplist.\n+            pindex = pindex->GetAncestor(nHeight);\n+        }\n         if (vHave.size() > 10)\n             nStep *= 2;\n     }\n@@ -400,6 +451,14 @@ CBlockIndex *CChain::FindFork(const CBlockLocator &locator) const {\n     return Genesis();\n }\n \n+CBlockIndex *CChain::FindFork(CBlockIndex *pindex) const {\n+    if (pindex->nHeight > Height())\n+        pindex = pindex->GetAncestor(Height());\n+    while (pindex && !Contains(pindex))\n+        pindex = pindex->pprev;\n+    return pindex;\n+}\n+\n CCoinsViewCache *pcoinsTip = NULL;\n CBlockTreeDB *pblocktree = NULL;\n \n@@ -432,7 +491,7 @@ bool AddOrphanTx(const CTransaction& tx)\n     BOOST_FOREACH(const CTxIn& txin, tx.vin)\n         mapOrphanTransactionsByPrev[txin.prevout.hash].insert(hash);\n \n-    LogPrint(\"mempool\", \"stored orphan tx %s (mapsz %\"PRIszu\")\\n\", hash.ToString(),\n+    LogPrint(\"mempool\", \"stored orphan tx %s (mapsz %u)\\n\", hash.ToString(),\n         mapOrphanTransactions.size());\n     return true;\n }\n@@ -484,7 +543,7 @@ bool IsStandardTx(const CTransaction& tx, string& reason)\n     // Treat non-final transactions as non-standard to prevent a specific type\n     // of double-spend attack, as well as DoS attacks. (if the transaction\n     // can't be mined, the attacker isn't expending resources broadcasting it)\n-    // Basically we don't want to propagate transactions that can't included in\n+    // Basically we don't want to propagate transactions that can't be included in\n     // the next block.\n     //\n     // However, IsFinalTx() is confusing... Without arguments, it uses\n@@ -515,10 +574,14 @@ bool IsStandardTx(const CTransaction& tx, string& reason)\n \n     BOOST_FOREACH(const CTxIn& txin, tx.vin)\n     {\n-        // Biggest 'standard' txin is a 3-signature 3-of-3 CHECKMULTISIG\n-        // pay-to-script-hash, which is 3 ~80-byte signatures, 3\n-        // ~65-byte public keys, plus a few script ops.\n-        if (txin.scriptSig.size() > 500) {\n+        // Biggest 'standard' txin is a 15-of-15 P2SH multisig with compressed\n+        // keys. (remember the 520 byte limit on redeemScript size) That works\n+        // out to a (15*(33+1))+3=513 byte redeemScript, 513+1+15*(73+1)+3=1627\n+        // bytes of scriptSig, which we round off to 1650 bytes for some minor\n+        // future-proofing. That's also enough to spend a 20-of-20\n+        // CHECKMULTISIG scriptPubKey, though such a scriptPubKey is not\n+        // considered standard)\n+        if (txin.scriptSig.size() > 1650) {\n             reason = \"scriptsig-size\";\n             return false;\n         }\n@@ -541,7 +604,7 @@ bool IsStandardTx(const CTransaction& tx, string& reason)\n         }\n         if (whichType == TX_NULL_DATA)\n             nDataOut++;\n-        else if (txout.IsDust(CTransaction::nMinRelayTxFee)) {\n+        else if (txout.IsDust(::minRelayTxFee)) {\n             reason = \"dust\";\n             return false;\n         }\n@@ -575,15 +638,13 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n }\n \n //\n-// Check transaction inputs, and make sure any\n-// pay-to-script-hash transactions are evaluating IsStandard scripts\n+// Check transaction inputs to mitigate two\n+// potential denial-of-service attacks:\n //\n-// Why bother? To avoid denial-of-service attacks; an attacker\n-// can submit a standard HASH... OP_EQUAL transaction,\n-// which will get accepted into blocks. The redemption\n-// script can be anything; an attacker could use a very\n-// expensive-to-check-upon-redemption script like:\n-//   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+// 1. scriptSigs with extra data stuffed into them,\n+//    not consumed by scriptPubKey (or P2SH script)\n+// 2. P2SH scripts with a crazy number of expensive\n+//    CHECKSIG/CHECKMULTISIG operations\n //\n bool AreInputsStandard(const CTransaction& tx, CCoinsViewCache& mapInputs)\n {\n@@ -607,8 +668,9 @@ bool AreInputsStandard(const CTransaction& tx, CCoinsViewCache& mapInputs)\n         // Transactions with extra stuff in their scriptSigs are\n         // non-standard. Note that this EvalScript() call will\n         // be quick, because if there are any operations\n-        // beside \"push data\" in the scriptSig the\n-        // IsStandard() call returns false\n+        // beside \"push data\" in the scriptSig\n+        // IsStandard() will have already returned false\n+        // and this method isn't called.\n         vector<vector<unsigned char> > stack;\n         if (!EvalScript(stack, tx.vin[i].scriptSig, tx, i, false, 0))\n             return false;\n@@ -620,16 +682,20 @@ bool AreInputsStandard(const CTransaction& tx, CCoinsViewCache& mapInputs)\n             CScript subscript(stack.back().begin(), stack.back().end());\n             vector<vector<unsigned char> > vSolutions2;\n             txnouttype whichType2;\n-            if (!Solver(subscript, whichType2, vSolutions2))\n-                return false;\n-            if (whichType2 == TX_SCRIPTHASH)\n-                return false;\n-\n-            int tmpExpected;\n-            tmpExpected = ScriptSigArgsExpected(whichType2, vSolutions2);\n-            if (tmpExpected < 0)\n-                return false;\n-            nArgsExpected += tmpExpected;\n+            if (Solver(subscript, whichType2, vSolutions2))\n+            {\n+                int tmpExpected = ScriptSigArgsExpected(whichType2, vSolutions2);\n+                if (tmpExpected < 0)\n+                    return false;\n+                nArgsExpected += tmpExpected;\n+            }\n+            else\n+            {\n+                // Any other Script with less than 15 sigops OK:\n+                unsigned int sigops = subscript.GetSigOpCount(true);\n+                // ... extra data left on the stack after execution is OK, too:\n+                return (sigops <= MAX_P2SH_SIGOPS);\n+            }\n         }\n \n         if (stack.size() != (unsigned int)nArgsExpected)\n@@ -779,40 +845,89 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n     return true;\n }\n \n-int64_t GetMinFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree, enum GetMinFee_mode mode)\n+int64_t GetMinRelayFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree)\n {\n-    // Base fee is either nMinTxFee or nMinRelayTxFee\n-    int64_t nBaseFee = (mode == GMF_RELAY) ? tx.nMinRelayTxFee : tx.nMinTxFee;\n+    {\n+        LOCK(mempool.cs);\n+        uint256 hash = tx.GetHash();\n+        double dPriorityDelta = 0;\n+        int64_t nFeeDelta = 0;\n+        mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n+        if (dPriorityDelta > 0 || nFeeDelta > 0)\n+            return 0;\n+    }\n \n-    int64_t nMinFee = (1 + (int64_t)nBytes / 1000) * nBaseFee;\n+    int64_t nMinFee = ::minRelayTxFee.GetFee(nBytes);\n \n     if (fAllowFree)\n     {\n         // There is a free transaction area in blocks created by most miners,\n         // * If we are relaying we allow transactions up to DEFAULT_BLOCK_PRIORITY_SIZE - 1000\n         //   to be considered to fall into this category. We don't want to encourage sending\n         //   multiple transactions instead of one big transaction to avoid fees.\n-        // * If we are creating a transaction we allow transactions up to 1,000 bytes\n-        //   to be considered safe and assume they can likely make it into this section.\n-        if (nBytes < (mode == GMF_SEND ? 1000 : (DEFAULT_BLOCK_PRIORITY_SIZE - 1000)))\n+        if (nBytes < (DEFAULT_BLOCK_PRIORITY_SIZE - 1000))\n             nMinFee = 0;\n     }\n \n-    // This code can be removed after enough miners have upgraded to version 0.9.\n-    // Until then, be safe when sending and require a fee if any output\n-    // is less than CENT:\n-    if (nMinFee < nBaseFee && mode == GMF_SEND)\n-    {\n-        BOOST_FOREACH(const CTxOut& txout, tx.vout)\n-            if (txout.nValue < CENT)\n-                nMinFee = nBaseFee;\n-    }\n-\n     if (!MoneyRange(nMinFee))\n         nMinFee = MAX_MONEY;\n     return nMinFee;\n }\n \n+// Exponentially limit the rate of nSize flow to nLimit.  nLimit unit is thousands-per-minute.\n+bool RateLimitExceeded(double& dCount, int64_t& nLastTime, int64_t nLimit, unsigned int nSize)\n+{\n+    static CCriticalSection csLimiter;\n+    int64_t nNow = GetTime();\n+\n+    LOCK(csLimiter);\n+\n+    dCount *= pow(1.0 - 1.0/600.0, (double)(nNow - nLastTime));\n+    nLastTime = nNow;\n+    if (dCount >= nLimit*10*1000)\n+        return true;\n+    dCount += nSize;\n+    return false;\n+}\n+\n+static bool RelayableRespend(const COutPoint& outPoint, const CTransaction& doubleSpend, bool fInBlock, CBloomFilter& filter)\n+{\n+    // Relaying double-spend attempts to our peers lets them detect when\n+    // somebody might be trying to cheat them. However, blindly relaying\n+    // every double-spend across the entire network gives attackers\n+    // a denial-of-service attack: just generate a stream of double-spends\n+    // re-spending the same (limited) set of outpoints owned by the attacker.\n+    // So, we use a bloom filter and only relay (at most) the first double\n+    // spend for each outpoint. False-positives (\"we have already relayed\")\n+    // are OK, because if the peer doesn't hear about the double-spend\n+    // from us they are very likely to hear about it from another peer, since\n+    // each peer uses a different, randomized bloom filter.\n+\n+    if (fInBlock || filter.contains(outPoint)) return false;\n+\n+    // Apply an independent rate limit to double-spend relays\n+    static double dRespendCount;\n+    static int64_t nLastRespendTime;\n+    static int64_t nRespendLimit = GetArg(\"-limitrespendrelay\", 100);\n+    unsigned int nSize = ::GetSerializeSize(doubleSpend, SER_NETWORK, PROTOCOL_VERSION);\n+\n+    if (RateLimitExceeded(dRespendCount, nLastRespendTime, nRespendLimit, nSize))\n+    {\n+        LogPrint(\"mempool\", \"Double-spend relay rejected by rate limiter\\n\");\n+        return false;\n+    }\n+\n+    LogPrint(\"mempool\", \"Rate limit dRespendCount: %g => %g\\n\", dRespendCount, dRespendCount+nSize);\n+\n+    // Clear the filter on average every MAX_DOUBLE_SPEND_BLOOM\n+    // insertions\n+    if (insecure_rand()%MAX_DOUBLESPEND_BLOOM == 0)\n+        filter.clear();\n+\n+    filter.insert(outPoint);\n+\n+    return true;\n+}\n \n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n                         bool* pfMissingInputs, bool fRejectInsaneFee)\n@@ -831,7 +946,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n     // Rather not work on nonstandard transactions (unless -testnet/-regtest)\n     string reason;\n-    if (Params().NetworkID() == CChainParams::MAIN && !IsStandardTx(tx, reason))\n+    if (Params().RequireStandard() && !IsStandardTx(tx, reason))\n         return state.DoS(0,\n                          error(\"AcceptToMemoryPool : nonstandard transaction: %s\", reason),\n                          REJECT_NONSTANDARD, reason);\n@@ -842,15 +957,18 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         return false;\n \n     // Check for conflicts with in-memory transactions\n+    bool relayableRespend = false;\n     {\n     LOCK(pool.cs); // protect pool.mapNextTx\n     for (unsigned int i = 0; i < tx.vin.size(); i++)\n     {\n         COutPoint outpoint = tx.vin[i].prevout;\n-        if (pool.mapNextTx.count(outpoint))\n+        // Does tx conflict with a member of the pool, and is it not equivalent to that member?\n+        if (pool.mapNextTx.count(outpoint) && !tx.IsEquivalentTo(*pool.mapNextTx[outpoint].ptx))\n         {\n-            // Disable replacement feature for now\n-            return false;\n+            relayableRespend = RelayableRespend(outpoint, tx, false, doubleSpendFilter);\n+            if (!relayableRespend)\n+                return false;\n         }\n     }\n     }\n@@ -859,6 +977,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CCoinsView dummy;\n         CCoinsViewCache view(dummy);\n \n+        int64_t nValueIn = 0;\n         {\n         LOCK(pool.cs);\n         CCoinsViewMemPool viewMemPool(*pcoinsTip, pool);\n@@ -887,19 +1006,20 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         // Bring the best block into scope\n         view.GetBestBlock();\n \n+        nValueIn = view.GetValueIn(tx);\n+\n         // we have all inputs cached now, so switch back to dummy, so we don't need to keep lock on mempool\n         view.SetBackend(dummy);\n         }\n \n         // Check for non-standard pay-to-script-hash in inputs\n-        if (Params().NetworkID() == CChainParams::MAIN && !AreInputsStandard(tx, view))\n+        if (Params().RequireStandard() && !AreInputsStandard(tx, view))\n             return error(\"AcceptToMemoryPool: : nonstandard transaction input\");\n \n         // Note: if you modify this code to accept non-standard transactions, then\n         // you should add code here to check that the transaction does a\n         // reasonable number of ECDSA signature verifications.\n \n-        int64_t nValueIn = view.GetValueIn(tx);\n         int64_t nValueOut = tx.GetValueOut();\n         int64_t nFees = nValueIn-nValueOut;\n         double dPriority = view.GetPriority(tx, chainActive.Height());\n@@ -908,54 +1028,54 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         unsigned int nSize = entry.GetTxSize();\n \n         // Don't accept it if it can't get into a block\n-        int64_t txMinFee = GetMinFee(tx, nSize, true, GMF_RELAY);\n+        int64_t txMinFee = GetMinRelayFee(tx, nSize, true);\n         if (fLimitFree && nFees < txMinFee)\n             return state.DoS(0, error(\"AcceptToMemoryPool : not enough fees %s, %d < %d\",\n                                       hash.ToString(), nFees, txMinFee),\n                              REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n \n-        // Continuously rate-limit free transactions\n+        // Continuously rate-limit free (really, very-low-fee)transactions\n         // This mitigates 'penny-flooding' -- sending thousands of free transactions just to\n         // be annoying or make others' transactions take longer to confirm.\n-        if (fLimitFree && nFees < CTransaction::nMinRelayTxFee)\n+        if (fLimitFree && nFees < ::minRelayTxFee.GetFee(nSize))\n         {\n-            static CCriticalSection csFreeLimiter;\n             static double dFreeCount;\n-            static int64_t nLastTime;\n-            int64_t nNow = GetTime();\n-\n-            LOCK(csFreeLimiter);\n+            static int64_t nLastFreeTime;\n+            static int64_t nFreeLimit = GetArg(\"-limitfreerelay\", 15);\n \n-            // Use an exponentially decaying ~10-minute window:\n-            dFreeCount *= pow(1.0 - 1.0/600.0, (double)(nNow - nLastTime));\n-            nLastTime = nNow;\n-            // -limitfreerelay unit is thousand-bytes-per-minute\n-            // At default rate it would take over a month to fill 1GB\n-            if (dFreeCount >= GetArg(\"-limitfreerelay\", 15)*10*1000)\n+            if (RateLimitExceeded(dFreeCount, nLastFreeTime, nFreeLimit, nSize))\n                 return state.DoS(0, error(\"AcceptToMemoryPool : free transaction rejected by rate limiter\"),\n                                  REJECT_INSUFFICIENTFEE, \"insufficient priority\");\n+\n             LogPrint(\"mempool\", \"Rate limit dFreeCount: %g => %g\\n\", dFreeCount, dFreeCount+nSize);\n-            dFreeCount += nSize;\n         }\n \n-        if (fRejectInsaneFee && nFees > CTransaction::nMinRelayTxFee * 10000)\n+        if (fRejectInsaneFee && nFees > ::minRelayTxFee.GetFee(nSize) * 10000)\n             return error(\"AcceptToMemoryPool: : insane fees %s, %d > %d\",\n                          hash.ToString(),\n-                         nFees, CTransaction::nMinRelayTxFee * 10000);\n+                         nFees, ::minRelayTxFee.GetFee(nSize) * 10000);\n \n         // Check against previous transactions\n         // This is done last to help prevent CPU exhaustion denial-of-service attacks.\n-        if (!CheckInputs(tx, state, view, true, SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC))\n+        if (!CheckInputs(tx, state, view, true, STANDARD_SCRIPT_VERIFY_FLAGS))\n         {\n             return error(\"AcceptToMemoryPool: : ConnectInputs failed %s\", hash.ToString());\n         }\n-        // Store transaction in memory\n-        pool.addUnchecked(hash, entry);\n+\n+        if (relayableRespend)\n+        {\n+            RelayTransaction(tx);\n+        }\n+        else\n+        {\n+            // Store transaction in memory\n+            pool.addUnchecked(hash, entry);\n+        }\n     }\n \n-    g_signals.SyncTransaction(hash, tx, NULL);\n+    g_signals.SyncTransaction(tx, NULL);\n \n-    return true;\n+    return !relayableRespend;\n }\n \n \n@@ -1003,10 +1123,10 @@ int CMerkleTx::GetBlocksToMaturity() const\n }\n \n \n-bool CMerkleTx::AcceptToMemoryPool(bool fLimitFree)\n+bool CMerkleTx::AcceptToMemoryPool(bool fLimitFree, bool fRejectInsaneFee)\n {\n     CValidationState state;\n-    return ::AcceptToMemoryPool(mempool, state, *this, fLimitFree, NULL);\n+    return ::AcceptToMemoryPool(mempool, state, *this, fLimitFree, NULL, fRejectInsaneFee);\n }\n \n \n@@ -1158,7 +1278,7 @@ uint256 static GetOrphanRoot(const uint256& hash)\n // Remove a random orphan block (which does not have any dependent orphans).\n void static PruneOrphanBlocks()\n {\n-    if (mapOrphanBlocksByPrev.size() <= MAX_ORPHAN_BLOCKS)\n+    if (mapOrphanBlocksByPrev.size() <= (size_t)std::max((int64_t)0, GetArg(\"-maxorphanblocks\", DEFAULT_MAX_ORPHAN_BLOCKS)))\n         return;\n \n     // Pick a random orphan block.\n@@ -1195,120 +1315,6 @@ int64_t GetBlockValue(int nHeight, int64_t nFees)\n     return nSubsidy + nFees;\n }\n \n-static const int64_t nTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n-static const int64_t nTargetSpacing = 10 * 60;\n-static const int64_t nInterval = nTargetTimespan / nTargetSpacing;\n-\n-//\n-// minimum amount of work that could possibly be required nTime after\n-// minimum work required was nBase\n-//\n-unsigned int ComputeMinWork(unsigned int nBase, int64_t nTime)\n-{\n-    const CBigNum &bnLimit = Params().ProofOfWorkLimit();\n-    // Testnet has min-difficulty blocks\n-    // after nTargetSpacing*2 time between blocks:\n-    if (TestNet() && nTime > nTargetSpacing*2)\n-        return bnLimit.GetCompact();\n-\n-    CBigNum bnResult;\n-    bnResult.SetCompact(nBase);\n-    while (nTime > 0 && bnResult < bnLimit)\n-    {\n-        // Maximum 400% adjustment...\n-        bnResult *= 4;\n-        // ... in best-case exactly 4-times-normal target time\n-        nTime -= nTargetTimespan*4;\n-    }\n-    if (bnResult > bnLimit)\n-        bnResult = bnLimit;\n-    return bnResult.GetCompact();\n-}\n-\n-unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock)\n-{\n-    unsigned int nProofOfWorkLimit = Params().ProofOfWorkLimit().GetCompact();\n-\n-    // Genesis block\n-    if (pindexLast == NULL)\n-        return nProofOfWorkLimit;\n-\n-    // Only change once per interval\n-    if ((pindexLast->nHeight+1) % nInterval != 0)\n-    {\n-        if (TestNet())\n-        {\n-            // Special difficulty rule for testnet:\n-            // If the new block's timestamp is more than 2* 10 minutes\n-            // then allow mining of a min-difficulty block.\n-            if (pblock->nTime > pindexLast->nTime + nTargetSpacing*2)\n-                return nProofOfWorkLimit;\n-            else\n-            {\n-                // Return the last non-special-min-difficulty-rules-block\n-                const CBlockIndex* pindex = pindexLast;\n-                while (pindex->pprev && pindex->nHeight % nInterval != 0 && pindex->nBits == nProofOfWorkLimit)\n-                    pindex = pindex->pprev;\n-                return pindex->nBits;\n-            }\n-        }\n-        return pindexLast->nBits;\n-    }\n-\n-    // Go back by what we want to be 14 days worth of blocks\n-    const CBlockIndex* pindexFirst = pindexLast;\n-    for (int i = 0; pindexFirst && i < nInterval-1; i++)\n-        pindexFirst = pindexFirst->pprev;\n-    assert(pindexFirst);\n-\n-    // Limit adjustment step\n-    int64_t nActualTimespan = pindexLast->GetBlockTime() - pindexFirst->GetBlockTime();\n-    LogPrintf(\"  nActualTimespan = %d  before bounds\\n\", nActualTimespan);\n-    if (nActualTimespan < nTargetTimespan/4)\n-        nActualTimespan = nTargetTimespan/4;\n-    if (nActualTimespan > nTargetTimespan*4)\n-        nActualTimespan = nTargetTimespan*4;\n-\n-    // Retarget\n-    CBigNum bnNew;\n-    bnNew.SetCompact(pindexLast->nBits);\n-    bnNew *= nActualTimespan;\n-    bnNew /= nTargetTimespan;\n-\n-    if (bnNew > Params().ProofOfWorkLimit())\n-        bnNew = Params().ProofOfWorkLimit();\n-\n-    /// debug print\n-    LogPrintf(\"GetNextWorkRequired RETARGET\\n\");\n-    LogPrintf(\"nTargetTimespan = %d    nActualTimespan = %d\\n\", nTargetTimespan, nActualTimespan);\n-    LogPrintf(\"Before: %08x  %s\\n\", pindexLast->nBits, CBigNum().SetCompact(pindexLast->nBits).getuint256().ToString());\n-    LogPrintf(\"After:  %08x  %s\\n\", bnNew.GetCompact(), bnNew.getuint256().ToString());\n-\n-    return bnNew.GetCompact();\n-}\n-\n-bool CheckProofOfWork(uint256 hash, unsigned int nBits)\n-{\n-    CBigNum bnTarget;\n-    bnTarget.SetCompact(nBits);\n-\n-    // Check range\n-    if (bnTarget <= 0 || bnTarget > Params().ProofOfWorkLimit())\n-        return error(\"CheckProofOfWork() : nBits below minimum work\");\n-\n-    // Check proof of work matches claimed amount\n-    if (hash > bnTarget.getuint256())\n-        return error(\"CheckProofOfWork() : hash doesn't match nBits\");\n-\n-    return true;\n-}\n-\n-// Return maximum amount of blocks that other nodes claim to have\n-int GetNumBlocksOfPeers()\n-{\n-    return std::max(cPeerBlockCounts.median(), Checkpoints::GetTotalBlocksEstimate());\n-}\n-\n bool IsInitialBlockDownload()\n {\n     LOCK(cs_main);\n@@ -1342,7 +1348,7 @@ void CheckForkWarningConditions()\n     if (pindexBestForkTip && chainActive.Height() - pindexBestForkTip->nHeight >= 72)\n         pindexBestForkTip = NULL;\n \n-    if (pindexBestForkTip || (pindexBestInvalid && pindexBestInvalid->nChainWork > chainActive.Tip()->nChainWork + (chainActive.Tip()->GetBlockWork() * 6).getuint256()))\n+    if (pindexBestForkTip || (pindexBestInvalid && pindexBestInvalid->nChainWork > chainActive.Tip()->nChainWork + (chainActive.Tip()->GetBlockWork() * 6)))\n     {\n         if (!fLargeWorkForkFound)\n         {\n@@ -1398,7 +1404,7 @@ void CheckForkWarningConditionsOnNewFork(CBlockIndex* pindexNewForkTip)\n     // We define it this way because it allows us to only store the highest fork tip (+ base) which meets\n     // the 7-block condition and from this always have the most-likely-to-cause-warning fork\n     if (pfork && (!pindexBestForkTip || (pindexBestForkTip && pindexNewForkTip->nHeight > pindexBestForkTip->nHeight)) &&\n-            pindexNewForkTip->nChainWork - pfork->nChainWork > (pfork->GetBlockWork() * 7).getuint256() &&\n+            pindexNewForkTip->nChainWork - pfork->nChainWork > (pfork->GetBlockWork() * 7) &&\n             chainActive.Height() - pindexNewForkTip->nHeight < 72)\n     {\n         pindexBestForkTip = pindexNewForkTip;\n@@ -1432,10 +1438,6 @@ void static InvalidChainFound(CBlockIndex* pindexNew)\n     if (!pindexBestInvalid || pindexNew->nChainWork > pindexBestInvalid->nChainWork)\n     {\n         pindexBestInvalid = pindexNew;\n-        // The current code doesn't actually read the BestInvalidWork entry in\n-        // the block database anymore, as it is derived from the flags in block\n-        // index entry. We only write it for backward compatibility.\n-        pblocktree->WriteBestInvalidWork(CBigNum(pindexBestInvalid->nChainWork));\n         uiInterface.NotifyBlocksChanged();\n     }\n     LogPrintf(\"InvalidChainFound: invalid block=%s  height=%d  log2_work=%.8g  date=%s\\n\",\n@@ -1472,7 +1474,7 @@ void UpdateTime(CBlockHeader& block, const CBlockIndex* pindexPrev)\n     block.nTime = max(pindexPrev->GetMedianTimePast()+1, GetAdjustedTime());\n \n     // Updating time can change work required on testnet:\n-    if (TestNet())\n+    if (Params().AllowMinDifficultyBlocks())\n         block.nBits = GetNextWorkRequired(pindexPrev, &block);\n }\n \n@@ -1486,7 +1488,7 @@ void UpdateTime(CBlockHeader& block, const CBlockIndex* pindexPrev)\n \n \n \n-void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCache &inputs, CTxUndo &txundo, int nHeight, const uint256 &txhash)\n+void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCache &inputs, CTxUndo &txundo, int nHeight)\n {\n     bool ret;\n     // mark inputs spent\n@@ -1501,7 +1503,7 @@ void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCach\n     }\n \n     // add outputs\n-    ret = inputs.SetCoins(txhash, CCoins(tx, nHeight));\n+    ret = inputs.SetCoins(tx.GetHash(), CCoins(tx, nHeight));\n     assert(ret);\n }\n \n@@ -1588,14 +1590,26 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, CCoinsViewCach\n                     pvChecks->push_back(CScriptCheck());\n                     check.swap(pvChecks->back());\n                 } else if (!check()) {\n-                    if (flags & SCRIPT_VERIFY_STRICTENC) {\n-                        // For now, check whether the failure was caused by non-canonical\n-                        // encodings or not; if so, don't trigger DoS protection.\n-                        CScriptCheck check(coins, tx, i, flags & (~SCRIPT_VERIFY_STRICTENC), 0);\n+                    if (flags & STANDARD_NOT_MANDATORY_VERIFY_FLAGS) {\n+                        // Check whether the failure was caused by a\n+                        // non-mandatory script verification check, such as\n+                        // non-standard DER encodings or non-null dummy\n+                        // arguments; if so, don't trigger DoS protection to\n+                        // avoid splitting the network between upgraded and\n+                        // non-upgraded nodes.\n+                        CScriptCheck check(coins, tx, i,\n+                                flags & ~STANDARD_NOT_MANDATORY_VERIFY_FLAGS, 0);\n                         if (check())\n-                            return state.Invalid(false, REJECT_NONSTANDARD, \"non-canonical\");\n+                            return state.Invalid(false, REJECT_NONSTANDARD, \"non-mandatory-script-verify-flag\");\n                     }\n-                    return state.DoS(100,false, REJECT_NONSTANDARD, \"non-canonical\");\n+                    // Failures of other flags indicate a transaction that is\n+                    // invalid in new blocks, e.g. a invalid P2SH. We DoS ban\n+                    // such nodes as they are not following the protocol. That\n+                    // said during an upgrade careful thought should be taken\n+                    // as to the correct behavior - we may want to continue\n+                    // peering with non-upgraded nodes even after a soft-fork\n+                    // super-majority vote has passed.\n+                    return state.DoS(100,false, REJECT_INVALID, \"mandatory-script-verify-flag-failed\");\n                 }\n             }\n         }\n@@ -1762,8 +1776,8 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n                           !((pindex->nHeight==91842 && pindex->GetBlockHash() == uint256(\"0x00000000000a4d0a398161ffc163c503763b1f4360639393e0e4c8e300e0caec\")) ||\n                            (pindex->nHeight==91880 && pindex->GetBlockHash() == uint256(\"0x00000000000743f190a18c5577a3c2d2a1f610ae9601ac046a38084ccb7cd721\")));\n     if (fEnforceBIP30) {\n-        for (unsigned int i = 0; i < block.vtx.size(); i++) {\n-            uint256 hash = block.GetTxHash(i);\n+        BOOST_FOREACH(const CTransaction& tx, block.vtx) {\n+            const uint256& hash = tx.GetHash();\n             if (view.HaveCoins(hash) && !view.GetCoins(hash).IsPruned())\n                 return state.DoS(100, error(\"ConnectBlock() : tried to overwrite transaction\"),\n                                  REJECT_INVALID, \"bad-txns-BIP30\");\n@@ -1772,7 +1786,7 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n \n     // BIP16 didn't become active until Apr 1 2012\n     int64_t nBIP16SwitchTime = 1333238400;\n-    bool fStrictPayToScriptHash = (pindex->nTime >= nBIP16SwitchTime);\n+    bool fStrictPayToScriptHash = (pindex->GetBlockTime() >= nBIP16SwitchTime);\n \n     unsigned int flags = SCRIPT_VERIFY_NOCACHE |\n                          (fStrictPayToScriptHash ? SCRIPT_VERIFY_P2SH : SCRIPT_VERIFY_NONE);\n@@ -1824,11 +1838,11 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n         }\n \n         CTxUndo txundo;\n-        UpdateCoins(tx, state, view, txundo, pindex->nHeight, block.GetTxHash(i));\n+        UpdateCoins(tx, state, view, txundo, pindex->nHeight);\n         if (!tx.IsCoinBase())\n             blockundo.vtxundo.push_back(txundo);\n \n-        vPos.push_back(std::make_pair(block.GetTxHash(i), pos));\n+        vPos.push_back(std::make_pair(tx.GetHash(), pos));\n         pos.nTxOffset += ::GetSerializeSize(tx, SER_DISK, CLIENT_VERSION);\n     }\n     int64_t nTime = GetTimeMicros() - nStart;\n@@ -1850,8 +1864,13 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n     if (fJustCheck)\n         return true;\n \n+    // Correct transaction counts.\n+    pindex->nTx = block.vtx.size();\n+    if (pindex->pprev)\n+        pindex->nChainTx = pindex->pprev->nChainTx + block.vtx.size();\n+\n     // Write undo information to disk\n-    if (pindex->GetUndoPos().IsNull() || (pindex->nStatus & BLOCK_VALID_MASK) < BLOCK_VALID_SCRIPTS)\n+    if (pindex->GetUndoPos().IsNull() || !pindex->IsValid(BLOCK_VALID_SCRIPTS))\n     {\n         if (pindex->GetUndoPos().IsNull()) {\n             CDiskBlockPos pos;\n@@ -1865,7 +1884,7 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n             pindex->nStatus |= BLOCK_HAVE_UNDO;\n         }\n \n-        pindex->nStatus = (pindex->nStatus & ~BLOCK_VALID_MASK) | BLOCK_VALID_SCRIPTS;\n+        pindex->RaiseValidity(BLOCK_VALID_SCRIPTS);\n \n         CDiskBlockIndex blockindex(pindex);\n         if (!pblocktree->WriteBlockIndex(blockindex))\n@@ -1882,8 +1901,13 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n     assert(ret);\n \n     // Watch for transactions paying to me\n-    for (unsigned int i = 0; i < block.vtx.size(); i++)\n-        g_signals.SyncTransaction(block.GetTxHash(i), block.vtx[i], &block);\n+    BOOST_FOREACH(const CTransaction& tx, block.vtx)\n+        g_signals.SyncTransaction(tx, &block);\n+\n+    // Watch for changes to the previous coinbase transaction.\n+    static uint256 hashPrevBestCoinBase;\n+    g_signals.UpdatedTransaction(hashPrevBestCoinBase);\n+    hashPrevBestCoinBase = block.vtx[0].GetHash();\n \n     return true;\n }\n@@ -1970,7 +1994,7 @@ bool static DisconnectTip(CValidationState &state) {\n     BOOST_FOREACH(const CTransaction &tx, block.vtx) {\n         // ignore validation errors in resurrected transactions\n         list<CTransaction> removed;\n-        CValidationState stateDummy; \n+        CValidationState stateDummy;\n         if (!tx.IsCoinBase())\n             if (!AcceptToMemoryPool(mempool, stateDummy, tx, false, NULL))\n                 mempool.remove(tx, removed, true);\n@@ -1981,7 +2005,7 @@ bool static DisconnectTip(CValidationState &state) {\n     // Let wallets know transactions went from 1-confirmed to\n     // 0-confirmed or conflicted:\n     BOOST_FOREACH(const CTransaction &tx, block.vtx) {\n-        SyncWithWallets(tx.GetHash(), tx, NULL);\n+        SyncWithWallets(tx, NULL);\n     }\n     return true;\n }\n@@ -2014,43 +2038,33 @@ bool static ConnectTip(CValidationState &state, CBlockIndex *pindexNew) {\n         return false;\n     // Remove conflicting transactions from the mempool.\n     list<CTransaction> txConflicted;\n-    BOOST_FOREACH(const CTransaction &tx, block.vtx) {\n-        list<CTransaction> unused;\n-        mempool.remove(tx, unused);\n-        mempool.removeConflicts(tx, txConflicted);\n-    }\n+    mempool.removeForBlock(block.vtx, pindexNew->nHeight, txConflicted);\n     mempool.check(pcoinsTip);\n     // Update chainActive & related variables.\n     UpdateTip(pindexNew);\n     // Tell wallet about transactions that went from mempool\n     // to conflicted:\n     BOOST_FOREACH(const CTransaction &tx, txConflicted) {\n-        SyncWithWallets(tx.GetHash(), tx, NULL);\n+        SyncWithWallets(tx, NULL);\n     }\n     // ... and about transactions that got confirmed:\n     BOOST_FOREACH(const CTransaction &tx, block.vtx) {\n-        SyncWithWallets(tx.GetHash(), tx, &block);\n+        SyncWithWallets(tx, &block);\n     }\n     return true;\n }\n \n-// Make chainMostWork correspond to the chain with the most work in it, that isn't\n+// Return the tip of the chain with the most work in it, that isn't\n // known to be invalid (it's however far from certain to be valid).\n-void static FindMostWorkChain() {\n-    CBlockIndex *pindexNew = NULL;\n-\n-    // In case the current best is invalid, do not consider it.\n-    while (chainMostWork.Tip() && (chainMostWork.Tip()->nStatus & BLOCK_FAILED_MASK)) {\n-        setBlockIndexValid.erase(chainMostWork.Tip());\n-        chainMostWork.SetTip(chainMostWork.Tip()->pprev);\n-    }\n-\n+static CBlockIndex* FindMostWorkChain() {\n     do {\n+        CBlockIndex *pindexNew = NULL;\n+\n         // Find the best candidate header.\n         {\n             std::set<CBlockIndex*, CBlockIndexWorkComparator>::reverse_iterator it = setBlockIndexValid.rbegin();\n             if (it == setBlockIndexValid.rend())\n-                return;\n+                return NULL;\n             pindexNew = *it;\n         }\n \n@@ -2059,10 +2073,11 @@ void static FindMostWorkChain() {\n         CBlockIndex *pindexTest = pindexNew;\n         bool fInvalidAncestor = false;\n         while (pindexTest && !chainActive.Contains(pindexTest)) {\n-            if (pindexTest->nStatus & BLOCK_FAILED_MASK) {\n+            if (!pindexTest->IsValid(BLOCK_VALID_TRANSACTIONS) || !(pindexTest->nStatus & BLOCK_HAVE_DATA)) {\n                 // Candidate has an invalid ancestor, remove entire chain from the set.\n                 if (pindexBestInvalid == NULL || pindexNew->nChainWork > pindexBestInvalid->nChainWork)\n-                    pindexBestInvalid = pindexNew;                CBlockIndex *pindexFailed = pindexNew;\n+                    pindexBestInvalid = pindexNew;\n+                CBlockIndex *pindexFailed = pindexNew;\n                 while (pindexTest != pindexFailed) {\n                     pindexFailed->nStatus |= BLOCK_FAILED_CHILD;\n                     setBlockIndexValid.erase(pindexFailed);\n@@ -2073,75 +2088,118 @@ void static FindMostWorkChain() {\n             }\n             pindexTest = pindexTest->pprev;\n         }\n-        if (fInvalidAncestor)\n-            continue;\n-\n-        break;\n+        if (!fInvalidAncestor)\n+            return pindexNew;\n     } while(true);\n-\n-    // Check whether it's actually an improvement.\n-    if (chainMostWork.Tip() && !CBlockIndexWorkComparator()(chainMostWork.Tip(), pindexNew))\n-        return;\n-\n-    // We have a new best.\n-    chainMostWork.SetTip(pindexNew);\n }\n \n-// Try to activate to the most-work chain (thereby connecting it).\n-bool ActivateBestChain(CValidationState &state) {\n-    LOCK(cs_main);\n+// Try to make some progress towards making pindexMostWork the active block.\n+static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMostWork) {\n+    AssertLockHeld(cs_main);\n+    bool fInvalidFound = false;\n     CBlockIndex *pindexOldTip = chainActive.Tip();\n-    bool fComplete = false;\n-    while (!fComplete) {\n-        FindMostWorkChain();\n-        fComplete = true;\n+    CBlockIndex *pindexFork = chainActive.FindFork(pindexMostWork);\n \n-        // Check whether we have something to do.\n-        if (chainMostWork.Tip() == NULL) break;\n+    // Disconnect active blocks which are no longer in the best chain.\n+    while (chainActive.Tip() && chainActive.Tip() != pindexFork) {\n+        if (!DisconnectTip(state))\n+            return false;\n+    }\n \n-        // Disconnect active blocks which are no longer in the best chain.\n-        while (chainActive.Tip() && !chainMostWork.Contains(chainActive.Tip())) {\n-            if (!DisconnectTip(state))\n-                return false;\n-        }\n+    // Build list of new blocks to connect.\n+    std::vector<CBlockIndex*> vpindexToConnect;\n+    vpindexToConnect.reserve(pindexMostWork->nHeight - (pindexFork ? pindexFork->nHeight : -1));\n+    while (pindexMostWork && pindexMostWork != pindexFork) {\n+        vpindexToConnect.push_back(pindexMostWork);\n+        pindexMostWork = pindexMostWork->pprev;\n+    }\n \n-        // Connect new blocks.\n-        while (!chainActive.Contains(chainMostWork.Tip())) {\n-            CBlockIndex *pindexConnect = chainMostWork[chainActive.Height() + 1];\n-            if (!ConnectTip(state, pindexConnect)) {\n-                if (state.IsInvalid()) {\n-                    // The block violates a consensus rule.\n-                    if (!state.CorruptionPossible())\n-                        InvalidChainFound(chainMostWork.Tip());\n-                    fComplete = false;\n-                    state = CValidationState();\n-                    break;\n-                } else {\n-                    // A system error occurred (disk space, database error, ...).\n-                    return false;\n-                }\n+    // Connect new blocks.\n+    BOOST_REVERSE_FOREACH(CBlockIndex *pindexConnect, vpindexToConnect) {\n+        if (!ConnectTip(state, pindexConnect)) {\n+            if (state.IsInvalid()) {\n+                // The block violates a consensus rule.\n+                if (!state.CorruptionPossible())\n+                    InvalidChainFound(vpindexToConnect.back());\n+                state = CValidationState();\n+                fInvalidFound = true;\n+                break;\n+            } else {\n+                // A system error occurred (disk space, database error, ...).\n+                return false;\n+            }\n+        } else {\n+            if (!pindexOldTip || chainActive.Tip()->nChainWork > pindexOldTip->nChainWork) {\n+                // We're in a better position than we were. Return temporarily to release the lock.\n+                break;\n             }\n         }\n     }\n \n-    if (chainActive.Tip() != pindexOldTip) {\n-        std::string strCmd = GetArg(\"-blocknotify\", \"\");\n-        if (!IsInitialBlockDownload() && !strCmd.empty())\n+    // Callbacks/notifications for a new best chain.\n+    if (fInvalidFound)\n+        CheckForkWarningConditionsOnNewFork(vpindexToConnect.back());\n+    else\n+        CheckForkWarningConditions();\n+\n+    if (!pblocktree->Flush())\n+        return state.Abort(_(\"Failed to sync block index\"));\n+\n+    return true;\n+}\n+\n+bool ActivateBestChain(CValidationState &state) {\n+    CBlockIndex *pindexNewTip = NULL;\n+    CBlockIndex *pindexMostWork = NULL;\n+    do {\n+        boost::this_thread::interruption_point();\n+\n+        bool fInitialDownload;\n         {\n-            boost::replace_all(strCmd, \"%s\", chainActive.Tip()->GetBlockHash().GetHex());\n-            boost::thread t(runCommand, strCmd); // thread runs free\n+            LOCK(cs_main);\n+            pindexMostWork = FindMostWorkChain();\n+\n+            // Whether we have anything to do at all.\n+            if (pindexMostWork == NULL || pindexMostWork == chainActive.Tip())\n+                return true;\n+\n+            if (!ActivateBestChainStep(state, pindexMostWork))\n+                return false;\n+\n+            pindexNewTip = chainActive.Tip();\n+            fInitialDownload = IsInitialBlockDownload();\n         }\n-    }\n+        // When we reach this point, we switched to a new tip (stored in pindexNewTip).\n+\n+        // Notifications/callbacks that can run without cs_main\n+        if (!fInitialDownload) {\n+            uint256 hashNewTip = pindexNewTip->GetBlockHash();\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            int nBlockEstimate = Checkpoints::GetTotalBlocksEstimate();\n+            LOCK(cs_vNodes);\n+            BOOST_FOREACH(CNode* pnode, vNodes)\n+                if (chainActive.Height() > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : nBlockEstimate))\n+                    pnode->PushInventory(CInv(MSG_BLOCK, hashNewTip));\n+\n+            std::string strCmd = GetArg(\"-blocknotify\", \"\");\n+            if (!strCmd.empty()) {\n+                boost::replace_all(strCmd, \"%s\", hashNewTip.GetHex());\n+                boost::thread t(runCommand, strCmd); // thread runs free\n+            }\n+        }\n+        uiInterface.NotifyBlocksChanged();\n+    } while(pindexMostWork != chainActive.Tip());\n \n     return true;\n }\n \n-bool AddToBlockIndex(CBlock& block, CValidationState& state, const CDiskBlockPos& pos)\n+CBlockIndex* AddToBlockIndex(CBlockHeader& block)\n {\n     // Check for duplicate\n     uint256 hash = block.GetHash();\n-    if (mapBlockIndex.count(hash))\n-        return state.Invalid(error(\"AddToBlockIndex() : %s already exists\", hash.ToString()), 0, \"duplicate\");\n+    std::map<uint256, CBlockIndex*>::iterator it = mapBlockIndex.find(hash);\n+    if (it != mapBlockIndex.end())\n+        return it->second;\n \n     // Construct new block index object\n     CBlockIndex* pindexNew = new CBlockIndex(block);\n@@ -2157,43 +2215,46 @@ bool AddToBlockIndex(CBlock& block, CValidationState& state, const CDiskBlockPos\n     {\n         pindexNew->pprev = (*miPrev).second;\n         pindexNew->nHeight = pindexNew->pprev->nHeight + 1;\n+        pindexNew->BuildSkip();\n     }\n+    pindexNew->nChainWork = (pindexNew->pprev ? pindexNew->pprev->nChainWork : 0) + pindexNew->GetBlockWork();\n+    pindexNew->RaiseValidity(BLOCK_VALID_TREE);\n+\n+    return pindexNew;\n+}\n+\n+// Mark a block as having its data received and checked (up to BLOCK_VALID_TRANSACTIONS).\n+bool ReceivedBlockTransactions(const CBlock &block, CValidationState& state, CBlockIndex *pindexNew, const CDiskBlockPos& pos)\n+{\n     pindexNew->nTx = block.vtx.size();\n-    pindexNew->nChainWork = (pindexNew->pprev ? pindexNew->pprev->nChainWork : 0) + pindexNew->GetBlockWork().getuint256();\n-    pindexNew->nChainTx = (pindexNew->pprev ? pindexNew->pprev->nChainTx : 0) + pindexNew->nTx;\n+    if (pindexNew->pprev) {\n+        // Not the genesis block.\n+        if (pindexNew->pprev->nChainTx) {\n+            // This parent's block's total number transactions is known, so compute outs.\n+            pindexNew->nChainTx = pindexNew->pprev->nChainTx + pindexNew->nTx;\n+        } else {\n+            // The total number of transactions isn't known yet.\n+            // We will compute it when the block is connected.\n+            pindexNew->nChainTx = 0;\n+        }\n+    } else {\n+        // Genesis block.\n+        pindexNew->nChainTx = pindexNew->nTx;\n+    }\n     pindexNew->nFile = pos.nFile;\n     pindexNew->nDataPos = pos.nPos;\n     pindexNew->nUndoPos = 0;\n-    pindexNew->nStatus = BLOCK_VALID_TRANSACTIONS | BLOCK_HAVE_DATA;\n-    setBlockIndexValid.insert(pindexNew);\n+    pindexNew->nStatus |= BLOCK_HAVE_DATA;\n+\n+    if (pindexNew->RaiseValidity(BLOCK_VALID_TRANSACTIONS))\n+        setBlockIndexValid.insert(pindexNew);\n \n     if (!pblocktree->WriteBlockIndex(CDiskBlockIndex(pindexNew)))\n         return state.Abort(_(\"Failed to write block index\"));\n \n-    // New best?\n-    if (!ActivateBestChain(state))\n-        return false;\n-\n-    LOCK(cs_main);\n-    if (pindexNew == chainActive.Tip())\n-    {\n-        // Clear fork warning if its no longer applicable\n-        CheckForkWarningConditions();\n-        // Notify UI to display prev block's coinbase if it was ours\n-        static uint256 hashPrevBestCoinBase;\n-        g_signals.UpdatedTransaction(hashPrevBestCoinBase);\n-        hashPrevBestCoinBase = block.GetTxHash(0);\n-    } else\n-        CheckForkWarningConditionsOnNewFork(pindexNew);\n-\n-    if (!pblocktree->Flush())\n-        return state.Abort(_(\"Failed to sync block index\"));\n-\n-    uiInterface.NotifyBlocksChanged();\n     return true;\n }\n \n-\n bool FindBlockPos(CValidationState &state, CDiskBlockPos &pos, unsigned int nAddSize, unsigned int nHeight, uint64_t nTime, bool fKnown = false)\n {\n     bool fUpdatedLast = false;\n@@ -2288,27 +2349,34 @@ bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigne\n     return true;\n }\n \n+bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW)\n+{\n+    // Check proof of work matches claimed amount\n+    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits))\n+        return state.DoS(50, error(\"CheckBlockHeader() : proof of work failed\"),\n+                         REJECT_INVALID, \"high-hash\");\n+\n+    // Check timestamp\n+    if (block.GetBlockTime() > GetAdjustedTime() + 2 * 60 * 60)\n+        return state.Invalid(error(\"CheckBlockHeader() : block timestamp too far in the future\"),\n+                             REJECT_INVALID, \"time-too-new\");\n+\n+    return true;\n+}\n \n bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW, bool fCheckMerkleRoot)\n {\n     // These are checks that are independent of context\n     // that can be verified before saving an orphan block.\n \n+    if (!CheckBlockHeader(block, state, fCheckPOW))\n+        return false;\n+\n     // Size limits\n     if (block.vtx.empty() || block.vtx.size() > MAX_BLOCK_SIZE || ::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION) > MAX_BLOCK_SIZE)\n         return state.DoS(100, error(\"CheckBlock() : size limits failed\"),\n                          REJECT_INVALID, \"bad-blk-length\");\n \n-    // Check proof of work matches claimed amount\n-    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits))\n-        return state.DoS(50, error(\"CheckBlock() : proof of work failed\"),\n-                         REJECT_INVALID, \"high-hash\");\n-\n-    // Check timestamp\n-    if (block.GetBlockTime() > GetAdjustedTime() + 2 * 60 * 60)\n-        return state.Invalid(error(\"CheckBlock() : block timestamp too far in the future\"),\n-                             REJECT_INVALID, \"time-too-new\");\n-\n     // First transaction must be coinbase, the rest must not be\n     if (block.vtx.empty() || !block.vtx[0].IsCoinBase())\n         return state.DoS(100, error(\"CheckBlock() : first tx is not coinbase\"),\n@@ -2323,16 +2391,11 @@ bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW, bo\n         if (!CheckTransaction(tx, state))\n             return error(\"CheckBlock() : CheckTransaction failed\");\n \n-    // Build the merkle tree already. We need it anyway later, and it makes the\n-    // block cache the transaction hashes, which means they don't need to be\n-    // recalculated many times during this block's validation.\n-    block.BuildMerkleTree();\n-\n     // Check for duplicate txids. This is caught by ConnectInputs(),\n     // but catching it earlier avoids a potential DoS attack:\n     set<uint256> uniqueTx;\n-    for (unsigned int i = 0; i < block.vtx.size(); i++) {\n-        uniqueTx.insert(block.GetTxHash(i));\n+    BOOST_FOREACH(const CTransaction &tx, block.vtx) {\n+        uniqueTx.insert(tx.GetHash());\n     }\n     if (uniqueTx.size() != block.vtx.size())\n         return state.DoS(100, error(\"CheckBlock() : duplicate transaction\"),\n@@ -2348,20 +2411,47 @@ bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW, bo\n                          REJECT_INVALID, \"bad-blk-sigops\", true);\n \n     // Check merkle root\n-    if (fCheckMerkleRoot && block.hashMerkleRoot != block.vMerkleTree.back())\n+    if (fCheckMerkleRoot && block.hashMerkleRoot != block.BuildMerkleTree())\n         return state.DoS(100, error(\"CheckBlock() : hashMerkleRoot mismatch\"),\n                          REJECT_INVALID, \"bad-txnmrklroot\", true);\n \n     return true;\n }\n \n-bool AcceptBlock(CBlock& block, CValidationState& state, CDiskBlockPos* dbp)\n+bool AcceptBlockHeader(CBlockHeader& block, CValidationState& state, CBlockIndex** ppindex)\n {\n     AssertLockHeld(cs_main);\n     // Check for duplicate\n     uint256 hash = block.GetHash();\n-    if (mapBlockIndex.count(hash))\n-        return state.Invalid(error(\"AcceptBlock() : block already in mapBlockIndex\"), 0, \"duplicate\");\n+    std::map<uint256, CBlockIndex*>::iterator miSelf = mapBlockIndex.find(hash);\n+    CBlockIndex *pindex = NULL;\n+    if (miSelf != mapBlockIndex.end()) {\n+        pindex = miSelf->second;\n+        if (pindex->nStatus & BLOCK_FAILED_MASK)\n+            return state.Invalid(error(\"AcceptBlock() : block is marked invalid\"), 0, \"duplicate\");\n+    }\n+\n+    CBlockIndex* pcheckpoint = Checkpoints::GetLastCheckpoint(mapBlockIndex);\n+    if (pcheckpoint && block.hashPrevBlock != (chainActive.Tip() ? chainActive.Tip()->GetBlockHash() : uint256(0)))\n+    {\n+        // Extra checks to prevent \"fill up memory by spamming with bogus blocks\"\n+        int64_t deltaTime = block.GetBlockTime() - pcheckpoint->GetBlockTime();\n+        if (deltaTime < 0)\n+        {\n+            return state.DoS(100, error(\"CheckBlockHeader() : block with timestamp before last checkpoint\"),\n+                             REJECT_CHECKPOINT, \"time-too-old\");\n+        }\n+        bool fOverflow = false;\n+        uint256 bnNewBlock;\n+        bnNewBlock.SetCompact(block.nBits, NULL, &fOverflow);\n+        uint256 bnRequired;\n+        bnRequired.SetCompact(ComputeMinWork(pcheckpoint->nBits, deltaTime));\n+        if (fOverflow || bnNewBlock > bnRequired)\n+        {\n+            return state.DoS(100, error(\"CheckBlockHeader() : block with too little proof-of-work\"),\n+                             REJECT_INVALID, \"bad-diffbits\");\n+        }\n+    }\n \n     // Get prev block index\n     CBlockIndex* pindexPrev = NULL;\n@@ -2383,12 +2473,6 @@ bool AcceptBlock(CBlock& block, CValidationState& state, CDiskBlockPos* dbp)\n             return state.Invalid(error(\"AcceptBlock() : block's timestamp is too early\"),\n                                  REJECT_INVALID, \"time-too-old\");\n \n-        // Check that all transactions are finalized\n-        BOOST_FOREACH(const CTransaction& tx, block.vtx)\n-            if (!IsFinalTx(tx, nHeight, block.GetBlockTime()))\n-                return state.DoS(10, error(\"AcceptBlock() : contains a non-final transaction\"),\n-                                 REJECT_INVALID, \"bad-txns-nonfinal\");\n-\n         // Check that the block chain matches the known block chain up to a checkpoint\n         if (!Checkpoints::CheckBlock(nHeight, hash))\n             return state.DoS(100, error(\"AcceptBlock() : rejected by checkpoint lock-in at %d\", nHeight),\n@@ -2400,28 +2484,59 @@ bool AcceptBlock(CBlock& block, CValidationState& state, CDiskBlockPos* dbp)\n             return state.DoS(100, error(\"AcceptBlock() : forked chain older than last checkpoint (height %d)\", nHeight));\n \n         // Reject block.nVersion=1 blocks when 95% (75% on testnet) of the network has upgraded:\n-        if (block.nVersion < 2)\n+        if (block.nVersion < 2 && \n+            CBlockIndex::IsSuperMajority(2, pindexPrev, Params().RejectBlockOutdatedMajority()))\n         {\n-            if ((!TestNet() && CBlockIndex::IsSuperMajority(2, pindexPrev, 950, 1000)) ||\n-                (TestNet() && CBlockIndex::IsSuperMajority(2, pindexPrev, 75, 100)))\n-            {\n-                return state.Invalid(error(\"AcceptBlock() : rejected nVersion=1 block\"),\n-                                     REJECT_OBSOLETE, \"bad-version\");\n-            }\n+            return state.Invalid(error(\"AcceptBlock() : rejected nVersion=1 block\"),\n+                                 REJECT_OBSOLETE, \"bad-version\");\n         }\n-        // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n-        if (block.nVersion >= 2)\n-        {\n-            // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):\n-            if ((!TestNet() && CBlockIndex::IsSuperMajority(2, pindexPrev, 750, 1000)) ||\n-                (TestNet() && CBlockIndex::IsSuperMajority(2, pindexPrev, 51, 100)))\n-            {\n-                CScript expect = CScript() << nHeight;\n-                if (block.vtx[0].vin[0].scriptSig.size() < expect.size() ||\n-                    !std::equal(expect.begin(), expect.end(), block.vtx[0].vin[0].scriptSig.begin()))\n-                    return state.DoS(100, error(\"AcceptBlock() : block height mismatch in coinbase\"),\n-                                     REJECT_INVALID, \"bad-cb-height\");\n-            }\n+    }\n+\n+    if (pindex == NULL)\n+        pindex = AddToBlockIndex(block);\n+\n+    if (ppindex)\n+        *ppindex = pindex;\n+\n+    return true;\n+}\n+\n+bool AcceptBlock(CBlock& block, CValidationState& state, CBlockIndex** ppindex, CDiskBlockPos* dbp)\n+{\n+    AssertLockHeld(cs_main);\n+\n+    CBlockIndex *&pindex = *ppindex;\n+\n+    if (!AcceptBlockHeader(block, state, &pindex))\n+        return false;\n+\n+    if (!CheckBlock(block, state)) {\n+        if (state.Invalid() && !state.CorruptionPossible()) {\n+            pindex->nStatus |= BLOCK_FAILED_VALID;\n+        }\n+        return false;\n+    }\n+\n+    int nHeight = pindex->nHeight;\n+\n+    // Check that all transactions are finalized\n+    BOOST_FOREACH(const CTransaction& tx, block.vtx)\n+        if (!IsFinalTx(tx, nHeight, block.GetBlockTime())) {\n+            pindex->nStatus |= BLOCK_FAILED_VALID;\n+            return state.DoS(10, error(\"AcceptBlock() : contains a non-final transaction\"),\n+                             REJECT_INVALID, \"bad-txns-nonfinal\");\n+        }\n+\n+    // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n+    // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):\n+    if (block.nVersion >= 2 && \n+        CBlockIndex::IsSuperMajority(2, pindex->pprev, Params().EnforceBlockUpgradeMajority()))\n+    {\n+        CScript expect = CScript() << nHeight;\n+        if (block.vtx[0].vin[0].scriptSig.size() < expect.size() ||\n+            !std::equal(expect.begin(), expect.end(), block.vtx[0].vin[0].scriptSig.begin())) {\n+            pindex->nStatus |= BLOCK_FAILED_VALID;\n+            return state.DoS(100, error(\"AcceptBlock() : block height mismatch in coinbase\"), REJECT_INVALID, \"bad-cb-height\");\n         }\n     }\n \n@@ -2431,32 +2546,23 @@ bool AcceptBlock(CBlock& block, CValidationState& state, CDiskBlockPos* dbp)\n         CDiskBlockPos blockPos;\n         if (dbp != NULL)\n             blockPos = *dbp;\n-        if (!FindBlockPos(state, blockPos, nBlockSize+8, nHeight, block.nTime, dbp != NULL))\n+        if (!FindBlockPos(state, blockPos, nBlockSize+8, nHeight, block.GetBlockTime(), dbp != NULL))\n             return error(\"AcceptBlock() : FindBlockPos failed\");\n         if (dbp == NULL)\n             if (!WriteBlockToDisk(block, blockPos))\n                 return state.Abort(_(\"Failed to write block\"));\n-        if (!AddToBlockIndex(block, state, blockPos))\n-            return error(\"AcceptBlock() : AddToBlockIndex failed\");\n+        if (!ReceivedBlockTransactions(block, state, pindex, blockPos))\n+            return error(\"AcceptBlock() : ReceivedBlockTransactions failed\");\n     } catch(std::runtime_error &e) {\n         return state.Abort(_(\"System error: \") + e.what());\n     }\n \n-    // Relay inventory, but don't relay old inventory during initial block download\n-    int nBlockEstimate = Checkpoints::GetTotalBlocksEstimate();\n-    if (chainActive.Tip()->GetBlockHash() == hash)\n-    {\n-        LOCK(cs_vNodes);\n-        BOOST_FOREACH(CNode* pnode, vNodes)\n-            if (chainActive.Height() > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : nBlockEstimate))\n-                pnode->PushInventory(CInv(MSG_BLOCK, hash));\n-    }\n-\n     return true;\n }\n \n-bool CBlockIndex::IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned int nRequired, unsigned int nToCheck)\n+bool CBlockIndex::IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned int nRequired)\n {\n+    unsigned int nToCheck = Params().ToCheckBlockUpgradeMajority();\n     unsigned int nFound = 0;\n     for (unsigned int i = 0; i < nToCheck && nFound < nRequired && pstart != NULL; i++)\n     {\n@@ -2467,17 +2573,53 @@ bool CBlockIndex::IsSuperMajority(int minVersion, const CBlockIndex* pstart, uns\n     return (nFound >= nRequired);\n }\n \n-int64_t CBlockIndex::GetMedianTime() const\n+/** Turn the lowest '1' bit in the binary representation of a number into a '0'. */\n+int static inline InvertLowestOne(int n) { return n & (n - 1); }\n+\n+/** Compute what height to jump back to with the CBlockIndex::pskip pointer. */\n+int static inline GetSkipHeight(int height) {\n+    if (height < 2)\n+        return 0;\n+\n+    // Determine which height to jump back to. Any number strictly lower than height is acceptable,\n+    // but the following expression seems to perform well in simulations (max 110 steps to go back\n+    // up to 2**18 blocks).\n+    return (height & 1) ? InvertLowestOne(InvertLowestOne(height - 1)) + 1 : InvertLowestOne(height);\n+}\n+\n+CBlockIndex* CBlockIndex::GetAncestor(int height)\n {\n-    AssertLockHeld(cs_main);\n-    const CBlockIndex* pindex = this;\n-    for (int i = 0; i < nMedianTimeSpan/2; i++)\n-    {\n-        if (!chainActive.Next(pindex))\n-            return GetBlockTime();\n-        pindex = chainActive.Next(pindex);\n+    if (height > nHeight || height < 0)\n+        return NULL;\n+\n+    CBlockIndex* pindexWalk = this;\n+    int heightWalk = nHeight;\n+    while (heightWalk > height) {\n+        int heightSkip = GetSkipHeight(heightWalk);\n+        int heightSkipPrev = GetSkipHeight(heightWalk - 1);\n+        if (heightSkip == height ||\n+            (heightSkip > height && !(heightSkipPrev < heightSkip - 2 &&\n+                                      heightSkipPrev >= height))) {\n+            // Only follow pskip if pprev->pskip isn't better than pskip->pprev.\n+            pindexWalk = pindexWalk->pskip;\n+            heightWalk = heightSkip;\n+        } else {\n+            pindexWalk = pindexWalk->pprev;\n+            heightWalk--;\n+        }\n     }\n-    return pindex->GetMedianTimePast();\n+    return pindexWalk;\n+}\n+\n+const CBlockIndex* CBlockIndex::GetAncestor(int height) const\n+{\n+    return const_cast<CBlockIndex*>(this)->GetAncestor(height);\n+}\n+\n+void CBlockIndex::BuildSkip()\n+{\n+    if (pprev)\n+        pskip = pprev->GetAncestor(GetSkipHeight(nHeight));\n }\n \n void PushGetBlocks(CNode* pnode, CBlockIndex* pindexBegin, uint256 hashEnd)\n@@ -2494,10 +2636,11 @@ void PushGetBlocks(CNode* pnode, CBlockIndex* pindexBegin, uint256 hashEnd)\n \n bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBlockPos *dbp)\n {\n-    AssertLockHeld(cs_main);\n-\n     // Check for duplicate\n     uint256 hash = pblock->GetHash();\n+\n+    {\n+    LOCK(cs_main);\n     if (mapBlockIndex.count(hash))\n         return state.Invalid(error(\"ProcessBlock() : already have block %d %s\", mapBlockIndex[hash]->nHeight, hash.ToString()), 0, \"duplicate\");\n     if (mapOrphanBlocks.count(hash))\n@@ -2507,30 +2650,9 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n     if (!CheckBlock(*pblock, state))\n         return error(\"ProcessBlock() : CheckBlock FAILED\");\n \n-    CBlockIndex* pcheckpoint = Checkpoints::GetLastCheckpoint(mapBlockIndex);\n-    if (pcheckpoint && pblock->hashPrevBlock != (chainActive.Tip() ? chainActive.Tip()->GetBlockHash() : uint256(0)))\n-    {\n-        // Extra checks to prevent \"fill up memory by spamming with bogus blocks\"\n-        int64_t deltaTime = pblock->GetBlockTime() - pcheckpoint->nTime;\n-        if (deltaTime < 0)\n-        {\n-            return state.DoS(100, error(\"ProcessBlock() : block with timestamp before last checkpoint\"),\n-                             REJECT_CHECKPOINT, \"time-too-old\");\n-        }\n-        CBigNum bnNewBlock;\n-        bnNewBlock.SetCompact(pblock->nBits);\n-        CBigNum bnRequired;\n-        bnRequired.SetCompact(ComputeMinWork(pcheckpoint->nBits, deltaTime));\n-        if (bnNewBlock > bnRequired)\n-        {\n-            return state.DoS(100, error(\"ProcessBlock() : block with too little proof-of-work\"),\n-                             REJECT_INVALID, \"bad-diffbits\");\n-        }\n-    }\n-\n-\n-    // If we don't already have its previous block, shunt it off to holding area until we get it\n-    if (pblock->hashPrevBlock != 0 && !mapBlockIndex.count(pblock->hashPrevBlock))\n+    // If we don't already have its previous block (with full data), shunt it off to holding area until we get it\n+    std::map<uint256, CBlockIndex*>::iterator it = mapBlockIndex.find(pblock->hashPrevBlock);\n+    if (pblock->hashPrevBlock != 0 && (it == mapBlockIndex.end() || !(it->second->nStatus & BLOCK_HAVE_DATA)))\n     {\n         LogPrintf(\"ProcessBlock: ORPHAN BLOCK %lu, prev=%s\\n\", (unsigned long)mapOrphanBlocks.size(), pblock->hashPrevBlock.ToString());\n \n@@ -2555,7 +2677,9 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n     }\n \n     // Store to disk\n-    if (!AcceptBlock(*pblock, state, dbp))\n+    CBlockIndex *pindex = NULL;\n+    bool ret = AcceptBlock(*pblock, state, &pindex, dbp);\n+    if (!ret)\n         return error(\"ProcessBlock() : AcceptBlock FAILED\");\n \n     // Recursively process any orphan blocks that depended on this one\n@@ -2576,15 +2700,20 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n             block.BuildMerkleTree();\n             // Use a dummy CValidationState so someone can't setup nodes to counter-DoS based on orphan resolution (that is, feeding people an invalid block based on LegitBlockX in order to get anyone relaying LegitBlockX banned)\n             CValidationState stateDummy;\n-            if (AcceptBlock(block, stateDummy))\n+            CBlockIndex *pindexChild = NULL;\n+            if (AcceptBlock(block, stateDummy, &pindexChild))\n                 vWorkQueue.push_back(mi->second->hashBlock);\n             mapOrphanBlocks.erase(mi->second->hashBlock);\n             delete mi->second;\n         }\n         mapOrphanBlocksByPrev.erase(hashPrev);\n     }\n \n-    LogPrintf(\"ProcessBlock: ACCEPTED\\n\");\n+    }\n+\n+    if (!ActivateBestChain(state))\n+        return error(\"ProcessBlock() : ActivateBestChain failed\");\n+\n     return true;\n }\n \n@@ -2607,8 +2736,8 @@ CMerkleBlock::CMerkleBlock(const CBlock& block, CBloomFilter& filter)\n \n     for (unsigned int i = 0; i < block.vtx.size(); i++)\n     {\n-        uint256 hash = block.vtx[i].GetHash();\n-        if (filter.IsRelevantAndUpdate(block.vtx[i], hash))\n+        const uint256& hash = block.vtx[i].GetHash();\n+        if (filter.IsRelevantAndUpdate(block.vtx[i]))\n         {\n             vMatch.push_back(true);\n             vMatchedTxn.push_back(make_pair(i, hash));\n@@ -2837,12 +2966,14 @@ bool static LoadBlockIndexDB()\n     BOOST_FOREACH(const PAIRTYPE(int, CBlockIndex*)& item, vSortedByHeight)\n     {\n         CBlockIndex* pindex = item.second;\n-        pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + pindex->GetBlockWork().getuint256();\n+        pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + pindex->GetBlockWork();\n         pindex->nChainTx = (pindex->pprev ? pindex->pprev->nChainTx : 0) + pindex->nTx;\n-        if ((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS && !(pindex->nStatus & BLOCK_FAILED_MASK))\n+        if (pindex->IsValid(BLOCK_VALID_TRANSACTIONS))\n             setBlockIndexValid.insert(pindex);\n         if (pindex->nStatus & BLOCK_FAILED_MASK && (!pindexBestInvalid || pindex->nChainWork > pindexBestInvalid->nChainWork))\n             pindexBestInvalid = pindex;\n+        if (pindex->pprev)\n+            pindex->BuildSkip();\n     }\n \n     // Load block file info\n@@ -2851,6 +2982,24 @@ bool static LoadBlockIndexDB()\n     if (pblocktree->ReadBlockFileInfo(nLastBlockFile, infoLastBlockFile))\n         LogPrintf(\"LoadBlockIndexDB(): last block file info: %s\\n\", infoLastBlockFile.ToString());\n \n+    // Check presence of blk files\n+    LogPrintf(\"Checking all blk files are present...\\n\");\n+    set<int> setBlkDataFiles;\n+    BOOST_FOREACH(const PAIRTYPE(uint256, CBlockIndex*)& item, mapBlockIndex)\n+    {\n+        CBlockIndex* pindex = item.second;\n+        if (pindex->nStatus & BLOCK_HAVE_DATA) {\n+            setBlkDataFiles.insert(pindex->nFile);\n+        }\n+    }\n+    for (std::set<int>::iterator it = setBlkDataFiles.begin(); it != setBlkDataFiles.end(); it++)\n+    {\n+        CDiskBlockPos pos(*it, 0);\n+        if (!CAutoFile(OpenBlockFile(pos, true), SER_DISK, CLIENT_VERSION)) {\n+            return false;\n+        }\n+    }\n+\n     // Check whether we need to continue reindexing\n     bool fReindexing = false;\n     pblocktree->ReadReindexing(fReindexing);\n@@ -2873,7 +3022,17 @@ bool static LoadBlockIndexDB()\n     return true;\n }\n \n-bool VerifyDB(int nCheckLevel, int nCheckDepth)\n+CVerifyDB::CVerifyDB()\n+{\n+    uiInterface.ShowProgress(_(\"Verifying blocks...\"), 0);\n+}\n+\n+CVerifyDB::~CVerifyDB()\n+{\n+    uiInterface.ShowProgress(\"\", 100);\n+}\n+\n+bool CVerifyDB::VerifyDB(int nCheckLevel, int nCheckDepth)\n {\n     LOCK(cs_main);\n     if (chainActive.Tip() == NULL || chainActive.Tip()->pprev == NULL)\n@@ -2894,6 +3053,7 @@ bool VerifyDB(int nCheckLevel, int nCheckDepth)\n     for (CBlockIndex* pindex = chainActive.Tip(); pindex && pindex->pprev; pindex = pindex->pprev)\n     {\n         boost::this_thread::interruption_point();\n+        uiInterface.ShowProgress(_(\"Verifying blocks...\"), std::max(1, std::min(99, (int)(((double)(chainActive.Height() - pindex->nHeight)) / (double)nCheckDepth * (nCheckLevel >= 4 ? 50 : 100)))));\n         if (pindex->nHeight < chainActive.Height()-nCheckDepth)\n             break;\n         CBlock block;\n@@ -2933,6 +3093,7 @@ bool VerifyDB(int nCheckLevel, int nCheckDepth)\n         CBlockIndex *pindex = pindexState;\n         while (pindex != chainActive.Tip()) {\n             boost::this_thread::interruption_point();\n+            uiInterface.ShowProgress(_(\"Verifying blocks...\"), std::max(1, std::min(99, 100 - (int)(((double)(chainActive.Height() - pindex->nHeight)) / (double)nCheckDepth * 50))));\n             pindex = chainActive.Next(pindex);\n             CBlock block;\n             if (!ReadBlockFromDisk(block, pindex))\n@@ -2983,12 +3144,15 @@ bool InitBlockIndex() {\n             unsigned int nBlockSize = ::GetSerializeSize(block, SER_DISK, CLIENT_VERSION);\n             CDiskBlockPos blockPos;\n             CValidationState state;\n-            if (!FindBlockPos(state, blockPos, nBlockSize+8, 0, block.nTime))\n+            if (!FindBlockPos(state, blockPos, nBlockSize+8, 0, block.GetBlockTime()))\n                 return error(\"LoadBlockIndex() : FindBlockPos failed\");\n             if (!WriteBlockToDisk(block, blockPos))\n                 return error(\"LoadBlockIndex() : writing genesis block to disk failed\");\n-            if (!AddToBlockIndex(block, state, blockPos))\n+            CBlockIndex *pindex = AddToBlockIndex(block);\n+            if (!ReceivedBlockTransactions(block, state, pindex, blockPos))\n                 return error(\"LoadBlockIndex() : genesis block not accepted\");\n+            if (!ActivateBestChain(state))\n+                return error(\"LoadBlockIndex() : genesis block cannot be activated\");\n         } catch(std::runtime_error &e) {\n             return error(\"LoadBlockIndex() : failed to initialize block database: %s\", e.what());\n         }\n@@ -3045,7 +3209,7 @@ void PrintBlockTree()\n         // print item\n         CBlock block;\n         ReadBlockFromDisk(block, pindex);\n-        LogPrintf(\"%d (blk%05u.dat:0x%x)  %s  tx %\"PRIszu\"\\n\",\n+        LogPrintf(\"%d (blk%05u.dat:0x%x)  %s  tx %u\\n\",\n             pindex->nHeight,\n             pindex->GetBlockPos().nFile, pindex->GetBlockPos().nPos,\n             DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", block.GetBlockTime()),\n@@ -3118,7 +3282,6 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n \n                 // process block\n                 if (nBlockPos >= nStartByte) {\n-                    LOCK(cs_main);\n                     if (dbp)\n                         dbp->nPos = nBlockPos;\n                     CValidationState state;\n@@ -3282,7 +3445,8 @@ void static ProcessGetData(CNode* pfrom)\n                 {\n                     // Send block from disk\n                     CBlock block;\n-                    ReadBlockFromDisk(block, (*mi).second);\n+                    if (!ReadBlockFromDisk(block, (*mi).second))\n+                        assert(!\"cannot load block from disk\");\n                     if (inv.type == MSG_BLOCK)\n                         pfrom->PushMessage(\"block\", block);\n                     else // MSG_FILTERED_BLOCK)\n@@ -3369,17 +3533,20 @@ void static ProcessGetData(CNode* pfrom)\n     }\n }\n \n-bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n+bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv, int64_t nTimeReceived)\n {\n     RandAddSeedPerfmon();\n-    LogPrint(\"net\", \"received: %s (%\"PRIszu\" bytes)\\n\", strCommand, vRecv.size());\n+    LogPrint(\"net\", \"received: %s (%u bytes) peer=%d\\n\", strCommand, vRecv.size(), pfrom->id);\n     if (mapArgs.count(\"-dropmessagestest\") && GetRand(atoi(mapArgs[\"-dropmessagestest\"])) == 0)\n     {\n         LogPrintf(\"dropmessagestest DROPPING RECV MESSAGE\\n\");\n         return true;\n     }\n \n-    State(pfrom->GetId())->nLastBlockProcess = GetTimeMicros();\n+    {\n+        LOCK(cs_main);\n+        State(pfrom->GetId())->nLastBlockProcess = GetTimeMicros();\n+    }\n \n \n \n@@ -3401,7 +3568,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (pfrom->nVersion < MIN_PEER_PROTO_VERSION)\n         {\n             // disconnect from peers older than this proto version\n-            LogPrintf(\"partner %s using obsolete version %i; disconnecting\\n\", pfrom->addr.ToString(), pfrom->nVersion);\n+            LogPrintf(\"peer=%d using obsolete version %i; disconnecting\\n\", pfrom->id, pfrom->nVersion);\n             pfrom->PushMessage(\"reject\", strCommand, REJECT_OBSOLETE,\n                                strprintf(\"Version must be %d or greater\", MIN_PEER_PROTO_VERSION));\n             pfrom->fDisconnect = true;\n@@ -3451,7 +3618,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (!pfrom->fInbound)\n         {\n             // Advertise our address\n-            if (!fNoListen && !IsInitialBlockDownload())\n+            if (fListen && !IsInitialBlockDownload())\n             {\n                 CAddress addr = GetLocalAddress(&pfrom->addr);\n                 if (addr.IsRoutable())\n@@ -3482,12 +3649,9 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n \n         pfrom->fSuccessfullyConnected = true;\n \n-        LogPrintf(\"receive version message: %s: version %d, blocks=%d, us=%s, them=%s, peer=%s\\n\", pfrom->cleanSubVer, pfrom->nVersion, pfrom->nStartingHeight, addrMe.ToString(), addrFrom.ToString(), pfrom->addr.ToString());\n+        LogPrintf(\"receive version message: %s: version %d, blocks=%d, us=%s, peer=%d\\n\", pfrom->cleanSubVer, pfrom->nVersion, pfrom->nStartingHeight, addrMe.ToString(), pfrom->id);\n \n         AddTimeData(pfrom->addr, nTime);\n-\n-        LOCK(cs_main);\n-        cPeerBlockCounts.input(pfrom->nStartingHeight);\n     }\n \n \n@@ -3516,7 +3680,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (vAddr.size() > 1000)\n         {\n             Misbehaving(pfrom->GetId(), 20);\n-            return error(\"message addr size() = %\"PRIszu\"\", vAddr.size());\n+            return error(\"message addr size() = %u\", vAddr.size());\n         }\n \n         // Store the new addresses\n@@ -3579,7 +3743,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (vInv.size() > MAX_INV_SZ)\n         {\n             Misbehaving(pfrom->GetId(), 20);\n-            return error(\"message inv size() = %\"PRIszu\"\", vInv.size());\n+            return error(\"message inv size() = %u\", vInv.size());\n         }\n \n         LOCK(cs_main);\n@@ -3592,7 +3756,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             pfrom->AddInventoryKnown(inv);\n \n             bool fAlreadyHave = AlreadyHave(inv);\n-            LogPrint(\"net\", \"  got inventory: %s  %s\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\");\n+            LogPrint(\"net\", \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom->id);\n \n             if (!fAlreadyHave) {\n                 if (!fImporting && !fReindex) {\n@@ -3605,6 +3769,9 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n                 PushGetBlocks(pfrom, chainActive.Tip(), GetOrphanRoot(inv.hash));\n             }\n \n+            if (inv.type == MSG_BLOCK)\n+                UpdateBlockAvailability(pfrom->GetId(), inv.hash);\n+\n             // Track requests for our stuff\n             g_signals.Inventory(inv.hash);\n         }\n@@ -3618,14 +3785,14 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (vInv.size() > MAX_INV_SZ)\n         {\n             Misbehaving(pfrom->GetId(), 20);\n-            return error(\"message getdata size() = %\"PRIszu\"\", vInv.size());\n+            return error(\"message getdata size() = %u\", vInv.size());\n         }\n \n         if (fDebug || (vInv.size() != 1))\n-            LogPrint(\"net\", \"received getdata (%\"PRIszu\" invsz)\\n\", vInv.size());\n+            LogPrint(\"net\", \"received getdata (%u invsz) peer=%d\\n\", vInv.size(), pfrom->id);\n \n         if ((fDebug && vInv.size() > 0) || (vInv.size() == 1))\n-            LogPrint(\"net\", \"received getdata for: %s\\n\", vInv[0].ToString());\n+            LogPrint(\"net\", \"received getdata for: %s peer=%d\\n\", vInv[0].ToString(), pfrom->id);\n \n         pfrom->vRecvGetData.insert(pfrom->vRecvGetData.end(), vInv.begin(), vInv.end());\n         ProcessGetData(pfrom);\n@@ -3647,7 +3814,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (pindex)\n             pindex = chainActive.Next(pindex);\n         int nLimit = 500;\n-        LogPrint(\"net\", \"getblocks %d to %s limit %d\\n\", (pindex ? pindex->nHeight : -1), hashStop.ToString(), nLimit);\n+        LogPrint(\"net\", \"getblocks %d to %s limit %d from peer=%d\\n\", (pindex ? pindex->nHeight : -1), hashStop==uint256(0) ? \"end\" : hashStop.ToString(), nLimit, pfrom->id);\n         for (; pindex; pindex = chainActive.Next(pindex))\n         {\n             if (pindex->GetBlockHash() == hashStop)\n@@ -3724,14 +3891,14 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (AcceptToMemoryPool(mempool, state, tx, true, &fMissingInputs))\n         {\n             mempool.check(pcoinsTip);\n-            RelayTransaction(tx, inv.hash);\n+            RelayTransaction(tx);\n             mapAlreadyAskedFor.erase(inv);\n             vWorkQueue.push_back(inv.hash);\n             vEraseQueue.push_back(inv.hash);\n \n \n-            LogPrint(\"mempool\", \"AcceptToMemoryPool: %s %s : accepted %s (poolsz %\"PRIszu\")\\n\",\n-                pfrom->addr.ToString(), pfrom->cleanSubVer,\n+            LogPrint(\"mempool\", \"AcceptToMemoryPool: peer=%d %s : accepted %s (poolsz %u)\\n\",\n+                pfrom->id, pfrom->cleanSubVer,\n                 tx.GetHash().ToString(),\n                 mempool.mapTx.size());\n \n@@ -3754,7 +3921,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n                     if (AcceptToMemoryPool(mempool, stateDummy, orphanTx, true, &fMissingInputs2))\n                     {\n                         LogPrint(\"mempool\", \"   accepted orphan tx %s\\n\", orphanHash.ToString());\n-                        RelayTransaction(orphanTx, orphanHash);\n+                        RelayTransaction(orphanTx);\n                         mapAlreadyAskedFor.erase(CInv(MSG_TX, orphanHash));\n                         vWorkQueue.push_back(orphanHash);\n                         vEraseQueue.push_back(orphanHash);\n@@ -3784,8 +3951,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         int nDoS = 0;\n         if (state.IsInvalid(nDoS))\n         {\n-            LogPrint(\"mempool\", \"%s from %s %s was not accepted into the memory pool: %s\\n\", tx.GetHash().ToString(),\n-                pfrom->addr.ToString(), pfrom->cleanSubVer,\n+            LogPrint(\"mempool\", \"%s from peer=%d %s was not accepted into the memory pool: %s\\n\", tx.GetHash().ToString(),\n+                pfrom->id, pfrom->cleanSubVer,\n                 state.GetRejectReason());\n             pfrom->PushMessage(\"reject\", strCommand, state.GetRejectCode(),\n                                state.GetRejectReason(), inv.hash);\n@@ -3800,19 +3967,31 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         CBlock block;\n         vRecv >> block;\n \n-        LogPrint(\"net\", \"received block %s\\n\", block.GetHash().ToString());\n+        LogPrint(\"net\", \"received block %s peer=%d\\n\", block.GetHash().ToString(), pfrom->id);\n         // block.print();\n \n         CInv inv(MSG_BLOCK, block.GetHash());\n         pfrom->AddInventoryKnown(inv);\n \n-        LOCK(cs_main);\n-        // Remember who we got this block from.\n-        mapBlockSource[inv.hash] = pfrom->GetId();\n-        MarkBlockAsReceived(inv.hash, pfrom->GetId());\n+        {\n+            LOCK(cs_main);\n+            // Remember who we got this block from.\n+            mapBlockSource[inv.hash] = pfrom->GetId();\n+            MarkBlockAsReceived(inv.hash, pfrom->GetId());\n+        }\n \n         CValidationState state;\n         ProcessBlock(state, pfrom, &block);\n+        int nDoS;\n+        if (state.IsInvalid(nDoS)) {\n+            pfrom->PushMessage(\"reject\", strCommand, state.GetRejectCode(),\n+                               state.GetRejectReason(), inv.hash);\n+            if (nDoS > 0) {\n+                LOCK(cs_main);\n+                Misbehaving(pfrom->GetId(), nDoS);\n+            }\n+        }\n+\n     }\n \n \n@@ -3837,7 +4016,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             CTransaction tx;\n             bool fInMemPool = mempool.lookup(hash, tx);\n             if (!fInMemPool) continue; // another thread removed since queryHashes, maybe...\n-            if ((pfrom->pfilter && pfrom->pfilter->IsRelevantAndUpdate(tx, hash)) ||\n+            if ((pfrom->pfilter && pfrom->pfilter->IsRelevantAndUpdate(tx)) ||\n                (!pfrom->pfilter))\n                 vInv.push_back(inv);\n             if (vInv.size() == MAX_INV_SZ) {\n@@ -3874,7 +4053,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n \n     else if (strCommand == \"pong\")\n     {\n-        int64_t pingUsecEnd = GetTimeMicros();\n+        int64_t pingUsecEnd = nTimeReceived;\n         uint64_t nonce = 0;\n         size_t nAvail = vRecv.in_avail();\n         bool bPingFinished = false;\n@@ -3915,8 +4094,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         }\n \n         if (!(sProblem.empty())) {\n-            LogPrint(\"net\", \"pong %s %s: %s, %x expected, %x received, %\"PRIszu\" bytes\\n\",\n-                pfrom->addr.ToString(),\n+            LogPrint(\"net\", \"pong peer=%d %s: %s, %x expected, %x received, %u bytes\\n\",\n+                pfrom->id,\n                 pfrom->cleanSubVer,\n                 sProblem,\n                 pfrom->nPingNonceSent,\n@@ -4034,6 +4213,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n     else\n     {\n         // Ignore unknown commands for extensibility\n+        LogPrint(\"net\", \"Unknown command \\\"%s\\\" from peer=%d\\n\", SanitizeString(strCommand), pfrom->id);\n     }\n \n \n@@ -4050,7 +4230,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n bool ProcessMessages(CNode* pfrom)\n {\n     //if (fDebug)\n-    //    LogPrintf(\"ProcessMessages(%\"PRIszu\" messages)\\n\", pfrom->vRecvMsg.size());\n+    //    LogPrintf(\"ProcessMessages(%u messages)\\n\", pfrom->vRecvMsg.size());\n \n     //\n     // Message format\n@@ -4078,7 +4258,7 @@ bool ProcessMessages(CNode* pfrom)\n         CNetMessage& msg = *it;\n \n         //if (fDebug)\n-        //    LogPrintf(\"ProcessMessages(message %u msgsz, %\"PRIszu\" bytes, complete:%s)\\n\",\n+        //    LogPrintf(\"ProcessMessages(message %u msgsz, %u bytes, complete:%s)\\n\",\n         //            msg.hdr.nMessageSize, msg.vRecv.size(),\n         //            msg.complete() ? \"Y\" : \"N\");\n \n@@ -4124,7 +4304,7 @@ bool ProcessMessages(CNode* pfrom)\n         bool fRet = false;\n         try\n         {\n-            fRet = ProcessMessage(pfrom, strCommand, vRecv);\n+            fRet = ProcessMessage(pfrom, strCommand, vRecv, msg.nTime);\n             boost::this_thread::interruption_point();\n         }\n         catch (std::ios_base::failure& e)\n@@ -4155,7 +4335,7 @@ bool ProcessMessages(CNode* pfrom)\n         }\n \n         if (!fRet)\n-            LogPrintf(\"ProcessMessage(%s, %u bytes) FAILED\\n\", strCommand, nMessageSize);\n+            LogPrintf(\"ProcessMessage(%s, %u bytes) FAILED peer=%d\\n\", strCommand, nMessageSize, pfrom->id);\n \n         break;\n     }\n@@ -4183,24 +4363,23 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n             // RPC ping request by user\n             pingSend = true;\n         }\n-        if (pto->nLastSend && GetTime() - pto->nLastSend > 30 * 60 && pto->vSendMsg.empty()) {\n-            // Ping automatically sent as a keepalive\n+        if (pto->nPingNonceSent == 0 && pto->nPingUsecStart + PING_INTERVAL * 1000000 < GetTimeMicros()) {\n+            // Ping automatically sent as a latency probe & keepalive.\n             pingSend = true;\n         }\n         if (pingSend) {\n             uint64_t nonce = 0;\n             while (nonce == 0) {\n                 RAND_bytes((unsigned char*)&nonce, sizeof(nonce));\n             }\n-            pto->nPingNonceSent = nonce;\n             pto->fPingQueued = false;\n+            pto->nPingUsecStart = GetTimeMicros();\n             if (pto->nVersion > BIP0031_VERSION) {\n-                // Take timestamp as close as possible before transmitting ping\n-                pto->nPingUsecStart = GetTimeMicros();\n+                pto->nPingNonceSent = nonce;\n                 pto->PushMessage(\"ping\", nonce);\n             } else {\n-                // Peer is too old to support ping command with nonce, pong will never arrive, disable timing\n-                pto->nPingUsecStart = 0;\n+                // Peer is too old to support ping command with nonce, pong will never arrive.\n+                pto->nPingNonceSent = 0;\n                 pto->PushMessage(\"ping\");\n             }\n         }\n@@ -4222,7 +4401,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n                         pnode->setAddrKnown.clear();\n \n                     // Rebroadcast our address\n-                    if (!fNoListen)\n+                    if (fListen)\n                     {\n                         CAddress addr = GetLocalAddress(&pnode->addr);\n                         if (addr.IsRoutable())\n@@ -4342,13 +4521,16 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         // in flight for over two minutes, since we first had a chance to\n         // process an incoming block.\n         int64_t nNow = GetTimeMicros();\n-        if (!pto->fDisconnect && state.nBlocksInFlight && \n-            state.nLastBlockReceive < state.nLastBlockProcess - BLOCK_DOWNLOAD_TIMEOUT*1000000 && \n+        if (!pto->fDisconnect && state.nBlocksInFlight &&\n+            state.nLastBlockReceive < state.nLastBlockProcess - BLOCK_DOWNLOAD_TIMEOUT*1000000 &&\n             state.vBlocksInFlight.front().nTime < state.nLastBlockProcess - 2*BLOCK_DOWNLOAD_TIMEOUT*1000000) {\n             LogPrintf(\"Peer %s is stalling block download, disconnecting\\n\", state.name.c_str());\n             pto->fDisconnect = true;\n         }\n \n+        // Update knowledge of peer's block availability.\n+        ProcessBlockAvailability(pto->GetId());\n+\n         //\n         // Message: getdata (blocks)\n         //\n@@ -4357,7 +4539,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n             uint256 hash = state.vBlocksToDownload.front();\n             vGetData.push_back(CInv(MSG_BLOCK, hash));\n             MarkBlockAsInFlight(pto->GetId(), hash);\n-            LogPrint(\"net\", \"Requesting block %s from %s\\n\", hash.ToString().c_str(), state.name.c_str());\n+            LogPrint(\"net\", \"Requesting block %s peer=%d\\n\", hash.ToString(), pto->id);\n             if (vGetData.size() >= 1000)\n             {\n                 pto->PushMessage(\"getdata\", vGetData);\n@@ -4374,7 +4556,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n             if (!AlreadyHave(inv))\n             {\n                 if (fDebug)\n-                    LogPrint(\"net\", \"sending getdata: %s\\n\", inv.ToString());\n+                    LogPrint(\"net\", \"Requesting %s peer=%d\\n\", inv.ToString(), pto->id);\n                 vGetData.push_back(inv);\n                 if (vGetData.size() >= 1000)\n                 {"
      },
      {
        "sha": "f6bac889beb921921a4be8096b0846e2a83a927a",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 90,
        "deletions": 77,
        "changes": 167,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -7,10 +7,9 @@\n #define BITCOIN_MAIN_H\n \n #if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n+#include \"config/bitcoin-config.h\"\n #endif\n \n-#include \"bignum.h\"\n #include \"chainparams.h\"\n #include \"coins.h\"\n #include \"core.h\"\n@@ -44,10 +43,12 @@ static const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE = 50000;\n static const unsigned int MAX_STANDARD_TX_SIZE = 100000;\n /** The maximum allowed number of signature check operations in a block (network rule) */\n static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n+/** Maxiumum number of signature check operations in an IsStandard() P2SH script */\n+static const unsigned int MAX_P2SH_SIGOPS = 15;\n /** The maximum number of orphan transactions kept in memory */\n static const unsigned int MAX_ORPHAN_TRANSACTIONS = MAX_BLOCK_SIZE/100;\n-/** The maximum number of orphan blocks kept in memory */\n-static const unsigned int MAX_ORPHAN_BLOCKS = 750;\n+/** Default for -maxorphanblocks, maximum number of orphan blocks kept in memory */\n+static const unsigned int DEFAULT_MAX_ORPHAN_BLOCKS = 750;\n /** The maximum size of a blk?????.dat file (since 0.8) */\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n /** The pre-allocation chunk size for blk?????.dat files (since 0.8) */\n@@ -67,12 +68,6 @@ static const int MAX_BLOCKS_IN_TRANSIT_PER_PEER = 128;\n /** Timeout in seconds before considering a block download peer unresponsive. */\n static const unsigned int BLOCK_DOWNLOAD_TIMEOUT = 60;\n \n-#ifdef USE_UPNP\n-static const int fHaveUPnP = true;\n-#else\n-static const int fHaveUPnP = false;\n-#endif\n-\n /** \"reject\" message codes **/\n static const unsigned char REJECT_MALFORMED = 0x01;\n static const unsigned char REJECT_INVALID = 0x10;\n@@ -98,12 +93,12 @@ extern bool fBenchmark;\n extern int nScriptCheckThreads;\n extern bool fTxIndex;\n extern unsigned int nCoinCacheSize;\n+extern CFeeRate minRelayTxFee;\n \n // Minimum disk space required - used in CheckDiskSpace()\n static const uint64_t nMinDiskSpace = 52428800;\n \n \n-class CCoinsDB;\n class CBlockTreeDB;\n struct CDiskBlockPos;\n class CTxUndo;\n@@ -114,14 +109,17 @@ struct CNodeStateStats;\n \n struct CBlockTemplate;\n \n+/** Initialize respend bloom filter **/\n+void InitRespendFilter();\n+\n /** Register a wallet to receive updates from core */\n void RegisterWallet(CWalletInterface* pwalletIn);\n /** Unregister a wallet from core */\n void UnregisterWallet(CWalletInterface* pwalletIn);\n /** Unregister all wallets from core */\n void UnregisterAllWallets();\n /** Push an updated transaction to all registered wallets */\n-void SyncWithWallets(const uint256 &hash, const CTransaction& tx, const CBlock* pblock = NULL);\n+void SyncWithWallets(const CTransaction& tx, const CBlock* pblock = NULL);\n \n /** Register with a network node to receive its signals */\n void RegisterNodeSignals(CNodeSignals& nodeSignals);\n@@ -146,8 +144,6 @@ bool InitBlockIndex();\n bool LoadBlockIndex();\n /** Unload database information */\n void UnloadBlockIndex();\n-/** Verify consistency of the block and coin databases */\n-bool VerifyDB(int nCheckLevel, int nCheckDepth);\n /** Print the loaded block tree */\n void PrintBlockTree();\n /** Process protocol messages received from a given node */\n@@ -156,12 +152,6 @@ bool ProcessMessages(CNode* pfrom);\n bool SendMessages(CNode* pto, bool fSendTrickle);\n /** Run an instance of the script checking thread */\n void ThreadScriptCheck();\n-/** Check whether a block hash satisfies the proof-of-work requirement specified by nBits */\n-bool CheckProofOfWork(uint256 hash, unsigned int nBits);\n-/** Calculate the minimum amount of work a received block needs, without knowing its direct parent */\n-unsigned int ComputeMinWork(unsigned int nBase, int64_t nTime);\n-/** Get the number of active peers */\n-int GetNumBlocksOfPeers();\n /** Check whether we are doing an initial block download (synchronizing from disk or network) */\n bool IsInitialBlockDownload();\n /** Format a string that describes several potential problems detected by the core */\n@@ -171,7 +161,6 @@ bool GetTransaction(const uint256 &hash, CTransaction &tx, uint256 &hashBlock, b\n /** Find the best known block, and make it the tip of the block chain */\n bool ActivateBestChain(CValidationState &state);\n int64_t GetBlockValue(int nHeight, int64_t nFees);\n-unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock);\n \n void UpdateTime(CBlockHeader& block, const CBlockIndex* pindexPrev);\n \n@@ -200,6 +189,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n struct CNodeStateStats {\n     int nMisbehavior;\n+    int nSyncHeight;\n };\n \n struct CDiskBlockPos\n@@ -256,14 +246,7 @@ struct CDiskTxPos : public CDiskBlockPos\n };\n \n \n-\n-enum GetMinFee_mode\n-{\n-    GMF_RELAY,\n-    GMF_SEND,\n-};\n-\n-int64_t GetMinFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree, enum GetMinFee_mode mode);\n+int64_t GetMinRelayFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree);\n \n //\n // Check transaction inputs, and make sure any\n@@ -298,22 +281,15 @@ unsigned int GetLegacySigOpCount(const CTransaction& tx);\n unsigned int GetP2SHSigOpCount(const CTransaction& tx, CCoinsViewCache& mapInputs);\n \n \n-inline bool AllowFree(double dPriority)\n-{\n-    // Large (in bytes) low-priority (new, small-coin) transactions\n-    // need a fee.\n-    return dPriority > COIN * 144 / 250;\n-}\n-\n // Check whether all inputs of this transaction are valid (no double spends, scripts & sigs, amounts)\n // This does not modify the UTXO set. If pvChecks is not NULL, script checks are pushed onto it\n // instead of being performed inline.\n bool CheckInputs(const CTransaction& tx, CValidationState &state, CCoinsViewCache &view, bool fScriptChecks = true,\n-                 unsigned int flags = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC,\n+                 unsigned int flags = STANDARD_SCRIPT_VERIFY_FLAGS,\n                  std::vector<CScriptCheck> *pvChecks = NULL);\n \n // Apply the effects of this transaction on the UTXO set represented by view\n-void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCache &inputs, CTxUndo &txundo, int nHeight, const uint256 &txhash);\n+void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCache &inputs, CTxUndo &txundo, int nHeight);\n \n // Context-independent validity checks\n bool CheckTransaction(const CTransaction& tx, CValidationState& state);\n@@ -477,7 +453,7 @@ class CMerkleTx : public CTransaction\n     int GetDepthInMainChain() const { CBlockIndex *pindexRet; return GetDepthInMainChain(pindexRet); }\n     bool IsInMainChain() const { CBlockIndex *pindexRet; return GetDepthInMainChainINTERNAL(pindexRet) > 0; }\n     int GetBlocksToMaturity() const;\n-    bool AcceptToMemoryPool(bool fLimitFree=true);\n+    bool AcceptToMemoryPool(bool fLimitFree=true, bool fRejectInsaneFee=true);\n };\n \n \n@@ -603,11 +579,13 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n bool AddToBlockIndex(CBlock& block, CValidationState& state, const CDiskBlockPos& pos);\n \n // Context-independent validity checks\n+bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW = true);\n bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW = true, bool fCheckMerkleRoot = true);\n \n // Store block on disk\n // if dbp is provided, the file is known to already reside on disk\n-bool AcceptBlock(CBlock& block, CValidationState& state, CDiskBlockPos* dbp = NULL);\n+bool AcceptBlock(CBlock& block, CValidationState& state, CBlockIndex **pindex, CDiskBlockPos* dbp = NULL);\n+bool AcceptBlockHeader(CBlockHeader& block, CValidationState& state, CBlockIndex **ppindex= NULL);\n \n \n \n@@ -696,6 +674,9 @@ class CBlockIndex\n     // pointer to the index of the predecessor of this block\n     CBlockIndex* pprev;\n \n+    // pointer to the index of some further predecessor of this block\n+    CBlockIndex* pskip;\n+\n     // height of the entry in the chain. The genesis block has height 0\n     int nHeight;\n \n@@ -731,10 +712,11 @@ class CBlockIndex\n     // (memory only) Sequencial id assigned to distinguish order in which blocks are received.\n     uint32_t nSequenceId;\n \n-    CBlockIndex()\n+    void SetNull()\n     {\n         phashBlock = NULL;\n         pprev = NULL;\n+        pskip = NULL;\n         nHeight = 0;\n         nFile = 0;\n         nDataPos = 0;\n@@ -752,19 +734,14 @@ class CBlockIndex\n         nNonce         = 0;\n     }\n \n+    CBlockIndex()\n+    {\n+        SetNull();\n+    }\n+\n     CBlockIndex(CBlockHeader& block)\n     {\n-        phashBlock = NULL;\n-        pprev = NULL;\n-        nHeight = 0;\n-        nFile = 0;\n-        nDataPos = 0;\n-        nUndoPos = 0;\n-        nChainWork = 0;\n-        nTx = 0;\n-        nChainTx = 0;\n-        nStatus = 0;\n-        nSequenceId = 0;\n+        SetNull();\n \n         nVersion       = block.nVersion;\n         hashMerkleRoot = block.hashMerkleRoot;\n@@ -814,18 +791,19 @@ class CBlockIndex\n         return (int64_t)nTime;\n     }\n \n-    CBigNum GetBlockWork() const\n+    uint256 GetBlockWork() const\n     {\n-        CBigNum bnTarget;\n-        bnTarget.SetCompact(nBits);\n-        if (bnTarget <= 0)\n+        uint256 bnTarget;\n+        bool fNegative;\n+        bool fOverflow;\n+        bnTarget.SetCompact(nBits, &fNegative, &fOverflow);\n+        if (fNegative || fOverflow || bnTarget == 0)\n             return 0;\n-        return (CBigNum(1)<<256) / (bnTarget+1);\n-    }\n-\n-    bool CheckIndex() const\n-    {\n-        return CheckProofOfWork(GetBlockHash(), nBits);\n+        // We need to compute 2**256 / (bnTarget+1), but we can't represent 2**256\n+        // as it's too large for a uint256. However, as 2**256 is at least as large\n+        // as bnTarget+1, it is equal to ((2**256 - bnTarget - 1) / (bnTarget+1)) + 1,\n+        // or ~bnTarget / (nTarget+1) + 1.\n+        return (~bnTarget / (bnTarget + 1)) + 1;\n     }\n \n     enum { nMedianTimeSpan=11 };\n@@ -844,30 +822,57 @@ class CBlockIndex\n         return pbegin[(pend - pbegin)/2];\n     }\n \n-    int64_t GetMedianTime() const;\n-\n     /**\n      * Returns true if there are nRequired or more blocks of minVersion or above\n-     * in the last nToCheck blocks, starting at pstart and going backwards.\n+     * in the last Params().ToCheckBlockUpgradeMajority() blocks, starting at pstart \n+     * and going backwards.\n      */\n     static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart,\n-                                unsigned int nRequired, unsigned int nToCheck);\n+                                unsigned int nRequired);\n \n     std::string ToString() const\n     {\n         return strprintf(\"CBlockIndex(pprev=%p, nHeight=%d, merkle=%s, hashBlock=%s)\",\n             pprev, nHeight,\n-            hashMerkleRoot.ToString().c_str(),\n-            GetBlockHash().ToString().c_str());\n+            hashMerkleRoot.ToString(),\n+            GetBlockHash().ToString());\n     }\n \n     void print() const\n     {\n-        LogPrintf(\"%s\\n\", ToString().c_str());\n+        LogPrintf(\"%s\\n\", ToString());\n+    }\n+\n+    // Check whether this block index entry is valid up to the passed validity level.\n+    bool IsValid(enum BlockStatus nUpTo = BLOCK_VALID_TRANSACTIONS) const\n+    {\n+        assert(!(nUpTo & ~BLOCK_VALID_MASK)); // Only validity flags allowed.\n+        if (nStatus & BLOCK_FAILED_MASK)\n+            return false;\n+        return ((nStatus & BLOCK_VALID_MASK) >= nUpTo);\n     }\n-};\n \n+    // Raise the validity level of this block index entry.\n+    // Returns true if the validity was changed.\n+    bool RaiseValidity(enum BlockStatus nUpTo)\n+    {\n+        assert(!(nUpTo & ~BLOCK_VALID_MASK)); // Only validity flags allowed.\n+        if (nStatus & BLOCK_FAILED_MASK)\n+            return false;\n+        if ((nStatus & BLOCK_VALID_MASK) < nUpTo) {\n+            nStatus = (nStatus & ~BLOCK_VALID_MASK) | nUpTo;\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    // Build the skiplist pointer for this entry.\n+    void BuildSkip();\n \n+    // Efficiently find an ancestor of this block.\n+    CBlockIndex* GetAncestor(int height);\n+    const CBlockIndex* GetAncestor(int height) const;\n+};\n \n /** Used to marshal pointers into hashes for db storage. */\n class CDiskBlockIndex : public CBlockIndex\n@@ -925,14 +930,14 @@ class CDiskBlockIndex : public CBlockIndex\n         std::string str = \"CDiskBlockIndex(\";\n         str += CBlockIndex::ToString();\n         str += strprintf(\"\\n                hashBlock=%s, hashPrev=%s)\",\n-            GetBlockHash().ToString().c_str(),\n-            hashPrev.ToString().c_str());\n+            GetBlockHash().ToString(),\n+            hashPrev.ToString());\n         return str;\n     }\n \n     void print() const\n     {\n-        LogPrintf(\"%s\\n\", ToString().c_str());\n+        LogPrintf(\"%s\\n\", ToString());\n     }\n };\n \n@@ -999,6 +1004,14 @@ class CValidationState {\n     std::string GetRejectReason() const { return strRejectReason; }\n };\n \n+/** RAII wrapper for VerifyDB: Verify consistency of the block and coin databases */\n+class CVerifyDB {\n+public:\n+    CVerifyDB();\n+    ~CVerifyDB();\n+    bool VerifyDB(int nCheckLevel, int nCheckDepth);\n+};\n+\n /** An in-memory indexed chain of blocks. */\n class CChain {\n private:\n@@ -1054,14 +1067,14 @@ class CChain {\n \n     /** Find the last common block between this chain and a locator. */\n     CBlockIndex *FindFork(const CBlockLocator &locator) const;\n+\n+    /** Find the last common block between this chain and a block index entry. */\n+    CBlockIndex *FindFork(CBlockIndex *pindex) const;\n };\n \n /** The currently-connected chain of blocks. */\n extern CChain chainActive;\n \n-/** The currently best known chain of headers (some of which may be invalid). */\n-extern CChain chainMostWork;\n-\n /** Global variable that points to the active CCoinsView (protected by cs_main) */\n extern CCoinsViewCache *pcoinsTip;\n \n@@ -1110,7 +1123,7 @@ class CMerkleBlock\n \n class CWalletInterface {\n protected:\n-    virtual void SyncTransaction(const uint256 &hash, const CTransaction &tx, const CBlock *pblock) =0;\n+    virtual void SyncTransaction(const CTransaction &tx, const CBlock *pblock) =0;\n     virtual void EraseFromWallet(const uint256 &hash) =0;\n     virtual void SetBestChain(const CBlockLocator &locator) =0;\n     virtual void UpdatedTransaction(const uint256 &hash) =0;"
      },
      {
        "sha": "17918a1280d9334812882718871f3a1a36530b79",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 185,
        "deletions": 263,
        "changes": 448,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -3,90 +3,67 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <inttypes.h>\n+\n #include \"miner.h\"\n \n #include \"core.h\"\n+#include \"hash.h\"\n #include \"main.h\"\n #include \"net.h\"\n+#include \"pow.h\"\n #ifdef ENABLE_WALLET\n #include \"wallet.h\"\n #endif\n+\n+using namespace std;\n+\n //////////////////////////////////////////////////////////////////////////////\n //\n // BitcoinMiner\n //\n \n-int static FormatHashBlocks(void* pbuffer, unsigned int len)\n-{\n-    unsigned char* pdata = (unsigned char*)pbuffer;\n-    unsigned int blocks = 1 + ((len + 8) / 64);\n-    unsigned char* pend = pdata + 64 * blocks;\n-    memset(pdata + len, 0, 64 * blocks - len);\n-    pdata[len] = 0x80;\n-    unsigned int bits = len * 8;\n-    pend[-1] = (bits >> 0) & 0xff;\n-    pend[-2] = (bits >> 8) & 0xff;\n-    pend[-3] = (bits >> 16) & 0xff;\n-    pend[-4] = (bits >> 24) & 0xff;\n-    return blocks;\n-}\n-\n-static const unsigned int pSHA256InitState[8] =\n-{0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19};\n-\n-void SHA256Transform(void* pstate, void* pinput, const void* pinit)\n-{\n-    SHA256_CTX ctx;\n-    unsigned char data[64];\n-\n-    SHA256_Init(&ctx);\n-\n-    for (int i = 0; i < 16; i++)\n-        ((uint32_t*)data)[i] = ByteReverse(((uint32_t*)pinput)[i]);\n-\n-    for (int i = 0; i < 8; i++)\n-        ctx.h[i] = ((uint32_t*)pinit)[i];\n-\n-    SHA256_Update(&ctx, data, sizeof(data));\n-    for (int i = 0; i < 8; i++)\n-        ((uint32_t*)pstate)[i] = ctx.h[i];\n-}\n-\n-// Some explaining would be appreciated\n+//\n+// Unconfirmed transactions in the memory pool often depend on other\n+// transactions in the memory pool. When we select transactions from the\n+// pool, we select by highest priority or fee rate, so we might consider\n+// transactions that depend on transactions that aren't yet in the block.\n+// The COrphan class keeps track of these 'temporary orphans' while\n+// CreateBlock is figuring out which transactions to include.\n+//\n class COrphan\n {\n public:\n     const CTransaction* ptx;\n     set<uint256> setDependsOn;\n+    CFeeRate feeRate;\n     double dPriority;\n-    double dFeePerKb;\n \n-    COrphan(const CTransaction* ptxIn)\n+    COrphan(const CTransaction* ptxIn) : ptx(ptxIn), feeRate(0), dPriority(0)\n     {\n-        ptx = ptxIn;\n-        dPriority = dFeePerKb = 0;\n     }\n \n     void print() const\n     {\n-        LogPrintf(\"COrphan(hash=%s, dPriority=%.1f, dFeePerKb=%.1f)\\n\",\n-               ptx->GetHash().ToString(), dPriority, dFeePerKb);\n+        LogPrintf(\"COrphan(hash=%s, dPriority=%.1f, fee=%s)\\n\",\n+                  ptx->GetHash().ToString(), dPriority, feeRate.ToString());\n         BOOST_FOREACH(uint256 hash, setDependsOn)\n             LogPrintf(\"   setDependsOn %s\\n\", hash.ToString());\n     }\n };\n \n-\n uint64_t nLastBlockTx = 0;\n uint64_t nLastBlockSize = 0;\n \n-// We want to sort transactions by priority and fee, so:\n-typedef boost::tuple<double, double, const CTransaction*> TxPriority;\n+// We want to sort transactions by priority and fee rate, so:\n+typedef boost::tuple<double, CFeeRate, const CTransaction*> TxPriority;\n class TxPriorityCompare\n {\n     bool byFee;\n+\n public:\n     TxPriorityCompare(bool _byFee) : byFee(_byFee) { }\n+\n     bool operator()(const TxPriority& a, const TxPriority& b)\n     {\n         if (byFee)\n@@ -113,14 +90,14 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n     CBlock *pblock = &pblocktemplate->block; // pointer for convenience\n \n     // Create coinbase tx\n-    CTransaction txNew;\n+    CMutableTransaction txNew;\n     txNew.vin.resize(1);\n     txNew.vin[0].prevout.SetNull();\n     txNew.vout.resize(1);\n     txNew.vout[0].scriptPubKey = scriptPubKeyIn;\n \n-    // Add our coinbase tx as first transaction\n-    pblock->vtx.push_back(txNew);\n+    // Add dummy coinbase tx as first transaction\n+    pblock->vtx.push_back(CTransaction());\n     pblocktemplate->vTxFees.push_back(-1); // updated at end\n     pblocktemplate->vTxSigOps.push_back(-1); // updated at end\n \n@@ -141,6 +118,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n \n     // Collect memory pool transactions into the block\n     int64_t nFees = 0;\n+\n     {\n         LOCK2(cs_main, mempool.cs);\n         CBlockIndex* pindexPrev = chainActive.Tip();\n@@ -210,18 +188,18 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n             unsigned int nTxSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n             dPriority = tx.ComputePriority(dPriority, nTxSize);\n \n-            // This is a more accurate fee-per-kilobyte than is used by the client code, because the\n-            // client code rounds up the size to the nearest 1K. That's good, because it gives an\n-            // incentive to create smaller transactions.\n-            double dFeePerKb =  double(nTotalIn-tx.GetValueOut()) / (double(nTxSize)/1000.0);\n+            uint256 hash = tx.GetHash();\n+            mempool.ApplyDeltas(hash, dPriority, nTotalIn);\n+\n+            CFeeRate feeRate(nTotalIn-tx.GetValueOut(), nTxSize);\n \n             if (porphan)\n             {\n                 porphan->dPriority = dPriority;\n-                porphan->dFeePerKb = dFeePerKb;\n+                porphan->feeRate = feeRate;\n             }\n             else\n-                vecPriority.push_back(TxPriority(dPriority, dFeePerKb, &mi->second.GetTx()));\n+                vecPriority.push_back(TxPriority(dPriority, feeRate, &mi->second.GetTx()));\n         }\n \n         // Collect transactions into block\n@@ -237,7 +215,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         {\n             // Take highest priority transaction off the priority queue:\n             double dPriority = vecPriority.front().get<0>();\n-            double dFeePerKb = vecPriority.front().get<1>();\n+            CFeeRate feeRate = vecPriority.front().get<1>();\n             const CTransaction& tx = *(vecPriority.front().get<2>());\n \n             std::pop_heap(vecPriority.begin(), vecPriority.end(), comparer);\n@@ -254,10 +232,14 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n                 continue;\n \n             // Skip free transactions if we're past the minimum block size:\n-            if (fSortedByFee && (dFeePerKb < CTransaction::nMinRelayTxFee) && (nBlockSize + nTxSize >= nBlockMinSize))\n+            const uint256& hash = tx.GetHash();\n+            double dPriorityDelta = 0;\n+            int64_t nFeeDelta = 0;\n+            mempool.ApplyDeltas(hash, dPriorityDelta, nFeeDelta);\n+            if (fSortedByFee && (dPriorityDelta <= 0) && (nFeeDelta <= 0) && (feeRate < ::minRelayTxFee) && (nBlockSize + nTxSize >= nBlockMinSize))\n                 continue;\n \n-            // Prioritize by fee once past the priority size or we run out of high-priority\n+            // Prioritise by fee once past the priority size or we run out of high-priority\n             // transactions:\n             if (!fSortedByFee &&\n                 ((nBlockSize + nTxSize >= nBlockPrioritySize) || !AllowFree(dPriority)))\n@@ -276,13 +258,15 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n             if (nBlockSigOps + nTxSigOps >= MAX_BLOCK_SIGOPS)\n                 continue;\n \n+            // Note that flags: we don't want to set mempool/IsStandard()\n+            // policy here, but we still have to ensure that the block we\n+            // create only contains transactions that are valid in new blocks.\n             CValidationState state;\n-            if (!CheckInputs(tx, state, view, true, SCRIPT_VERIFY_P2SH))\n+            if (!CheckInputs(tx, state, view, true, MANDATORY_SCRIPT_VERIFY_FLAGS))\n                 continue;\n \n             CTxUndo txundo;\n-            uint256 hash = tx.GetHash();\n-            UpdateCoins(tx, state, view, txundo, pindexPrev->nHeight+1, hash);\n+            UpdateCoins(tx, state, view, txundo, pindexPrev->nHeight+1);\n \n             // Added\n             pblock->vtx.push_back(tx);\n@@ -295,8 +279,8 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n \n             if (fPrintPriority)\n             {\n-                LogPrintf(\"priority %.1f feeperkb %.1f txid %s\\n\",\n-                       dPriority, dFeePerKb, tx.GetHash().ToString());\n+                LogPrintf(\"priority %.1f fee %s txid %s\\n\",\n+                    dPriority, feeRate.ToString(), tx.GetHash().ToString());\n             }\n \n             // Add transactions that depend on this one to the priority queue\n@@ -309,7 +293,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n                         porphan->setDependsOn.erase(hash);\n                         if (porphan->setDependsOn.empty())\n                         {\n-                            vecPriority.push_back(TxPriority(porphan->dPriority, porphan->dFeePerKb, porphan->ptx));\n+                            vecPriority.push_back(TxPriority(porphan->dPriority, porphan->feeRate, porphan->ptx));\n                             std::push_heap(vecPriority.begin(), vecPriority.end(), comparer);\n                         }\n                     }\n@@ -321,15 +305,17 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         nLastBlockSize = nBlockSize;\n         LogPrintf(\"CreateNewBlock(): total size %u\\n\", nBlockSize);\n \n-        pblock->vtx[0].vout[0].nValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n+        // Compute final coinbase transaction.\n+        txNew.vout[0].nValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n+        txNew.vin[0].scriptSig = CScript() << OP_0 << OP_0;\n+        pblock->vtx[0] = txNew;\n         pblocktemplate->vTxFees[0] = -nFees;\n \n         // Fill in header\n         pblock->hashPrevBlock  = pindexPrev->GetBlockHash();\n         UpdateTime(*pblock, pindexPrev);\n         pblock->nBits          = GetNextWorkRequired(pindexPrev, pblock);\n         pblock->nNonce         = 0;\n-        pblock->vtx[0].vin[0].scriptSig = CScript() << OP_0 << OP_0;\n         pblocktemplate->vTxSigOps[0] = GetLegacySigOpCount(pblock->vtx[0]);\n \n         CBlockIndex indexDummy(*pblock);\n@@ -355,58 +341,14 @@ void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int&\n     }\n     ++nExtraNonce;\n     unsigned int nHeight = pindexPrev->nHeight+1; // Height first in coinbase required for block.version=2\n-    pblock->vtx[0].vin[0].scriptSig = (CScript() << nHeight << CBigNum(nExtraNonce)) + COINBASE_FLAGS;\n-    assert(pblock->vtx[0].vin[0].scriptSig.size() <= 100);\n+    CMutableTransaction txCoinbase(pblock->vtx[0]);\n+    txCoinbase.vin[0].scriptSig = (CScript() << nHeight << CScriptNum(nExtraNonce)) + COINBASE_FLAGS;\n+    assert(txCoinbase.vin[0].scriptSig.size() <= 100);\n \n+    pblock->vtx[0] = txCoinbase;\n     pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n }\n \n-\n-void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash1)\n-{\n-    //\n-    // Pre-build hash buffers\n-    //\n-    struct\n-    {\n-        struct unnamed2\n-        {\n-            int nVersion;\n-            uint256 hashPrevBlock;\n-            uint256 hashMerkleRoot;\n-            unsigned int nTime;\n-            unsigned int nBits;\n-            unsigned int nNonce;\n-        }\n-        block;\n-        unsigned char pchPadding0[64];\n-        uint256 hash1;\n-        unsigned char pchPadding1[64];\n-    }\n-    tmp;\n-    memset(&tmp, 0, sizeof(tmp));\n-\n-    tmp.block.nVersion       = pblock->nVersion;\n-    tmp.block.hashPrevBlock  = pblock->hashPrevBlock;\n-    tmp.block.hashMerkleRoot = pblock->hashMerkleRoot;\n-    tmp.block.nTime          = pblock->nTime;\n-    tmp.block.nBits          = pblock->nBits;\n-    tmp.block.nNonce         = pblock->nNonce;\n-\n-    FormatHashBlocks(&tmp.block, sizeof(tmp.block));\n-    FormatHashBlocks(&tmp.hash1, sizeof(tmp.hash1));\n-\n-    // Byte swap all the input buffer\n-    for (unsigned int i = 0; i < sizeof(tmp)/4; i++)\n-        ((unsigned int*)&tmp)[i] = ByteReverse(((unsigned int*)&tmp)[i]);\n-\n-    // Precalc the first half of the first hash, which stays constant\n-    SHA256Transform(pmidstate, &tmp.block, pSHA256InitState);\n-\n-    memcpy(pdata, &tmp.block, 128);\n-    memcpy(phash1, &tmp.hash1, 64);\n-}\n-\n #ifdef ENABLE_WALLET\n //////////////////////////////////////////////////////////////////////////////\n //\n@@ -417,34 +359,34 @@ int64_t nHPSTimerStart = 0;\n \n //\n // ScanHash scans nonces looking for a hash with at least some zero bits.\n-// It operates on big endian data.  Caller does the byte reversing.\n-// All input buffers are 16-byte aligned.  nNonce is usually preserved\n-// between calls, but periodically or if nNonce is 0xffff0000 or above,\n-// the block is rebuilt and nNonce starts over at zero.\n+// The nonce is usually preserved between calls, but periodically or if the\n+// nonce is 0xffff0000 or above, the block is rebuilt and nNonce starts over at\n+// zero.\n //\n-unsigned int static ScanHash_CryptoPP(char* pmidstate, char* pdata, char* phash1, char* phash, unsigned int& nHashesDone)\n+bool static ScanHash(const CBlockHeader *pblock, uint32_t& nNonce, uint256 *phash)\n {\n-    unsigned int& nNonce = *(unsigned int*)(pdata + 12);\n-    for (;;)\n-    {\n-        // Crypto++ SHA256\n-        // Hash pdata using pmidstate as the starting state into\n-        // pre-formatted buffer phash1, then hash phash1 into phash\n+    // Write the first 76 bytes of the block header to a double-SHA256 state.\n+    CHash256 hasher;\n+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+    ss << *pblock;\n+    assert(ss.size() == 80);\n+    hasher.Write((unsigned char*)&ss[0], 76);\n+\n+    while (true) {\n         nNonce++;\n-        SHA256Transform(phash1, pdata, pmidstate);\n-        SHA256Transform(phash, phash1, pSHA256InitState);\n+\n+        // Write the last 4 bytes of the block header (the nonce) to a copy of\n+        // the double-SHA256 state, and compute the result.\n+        CHash256(hasher).Write((unsigned char*)&nNonce, 4).Finalize((unsigned char*)phash);\n \n         // Return the nonce if the hash has at least some zero bits,\n         // caller will check if it has enough to reach the target\n-        if (((unsigned short*)phash)[14] == 0)\n-            return nNonce;\n+        if (((uint16_t*)phash)[15] == 0)\n+            return true;\n \n         // If nothing found after trying for a while, return -1\n         if ((nNonce & 0xffff) == 0)\n-        {\n-            nHashesDone = 0xffff+1;\n-            return (unsigned int) -1;\n-        }\n+            return false;\n         if ((nNonce & 0xfff) == 0)\n             boost::this_thread::interruption_point();\n     }\n@@ -463,7 +405,7 @@ CBlockTemplate* CreateNewBlockWithKey(CReserveKey& reservekey)\n bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey)\n {\n     uint256 hash = pblock->GetHash();\n-    uint256 hashTarget = CBigNum().SetCompact(pblock->nBits).getuint256();\n+    uint256 hashTarget = uint256().SetCompact(pblock->nBits);\n \n     if (hash > hashTarget)\n         return false;\n@@ -479,22 +421,22 @@ bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey)\n         LOCK(cs_main);\n         if (pblock->hashPrevBlock != chainActive.Tip()->GetBlockHash())\n             return error(\"BitcoinMiner : generated block is stale\");\n+    }\n \n-        // Remove key from key pool\n-        reservekey.KeepKey();\n+    // Remove key from key pool\n+    reservekey.KeepKey();\n \n-        // Track how many getdata requests this block gets\n-        {\n-            LOCK(wallet.cs_wallet);\n-            wallet.mapRequestCount[pblock->GetHash()] = 0;\n-        }\n-\n-        // Process this block the same as if we had received it from another node\n-        CValidationState state;\n-        if (!ProcessBlock(state, NULL, pblock))\n-            return error(\"BitcoinMiner : ProcessBlock, block not accepted\");\n+    // Track how many getdata requests this block gets\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.mapRequestCount[pblock->GetHash()] = 0;\n     }\n \n+    // Process this block the same as if we had received it from another node\n+    CValidationState state;\n+    if (!ProcessBlock(state, NULL, pblock))\n+        return error(\"BitcoinMiner : ProcessBlock, block not accepted\");\n+\n     return true;\n }\n \n@@ -508,135 +450,115 @@ void static BitcoinMiner(CWallet *pwallet)\n     CReserveKey reservekey(pwallet);\n     unsigned int nExtraNonce = 0;\n \n-    try { while (true) {\n-        if (Params().NetworkID() != CChainParams::REGTEST) {\n-            // Busy-wait for the network to come online so we don't waste time mining\n-            // on an obsolete chain. In regtest mode we expect to fly solo.\n-            while (vNodes.empty())\n-                MilliSleep(1000);\n-        }\n-\n-        //\n-        // Create new block\n-        //\n-        unsigned int nTransactionsUpdatedLast = mempool.GetTransactionsUpdated();\n-        CBlockIndex* pindexPrev = chainActive.Tip();\n-\n-        auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey));\n-        if (!pblocktemplate.get())\n-            return;\n-        CBlock *pblock = &pblocktemplate->block;\n-        IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n-\n-        LogPrintf(\"Running BitcoinMiner with %\"PRIszu\" transactions in block (%u bytes)\\n\", pblock->vtx.size(),\n-               ::GetSerializeSize(*pblock, SER_NETWORK, PROTOCOL_VERSION));\n-\n-        //\n-        // Pre-build hash buffers\n-        //\n-        char pmidstatebuf[32+16]; char* pmidstate = alignup<16>(pmidstatebuf);\n-        char pdatabuf[128+16];    char* pdata     = alignup<16>(pdatabuf);\n-        char phash1buf[64+16];    char* phash1    = alignup<16>(phash1buf);\n-\n-        FormatHashBuffers(pblock, pmidstate, pdata, phash1);\n-\n-        unsigned int& nBlockTime = *(unsigned int*)(pdata + 64 + 4);\n-        unsigned int& nBlockBits = *(unsigned int*)(pdata + 64 + 8);\n-        unsigned int& nBlockNonce = *(unsigned int*)(pdata + 64 + 12);\n-\n-\n-        //\n-        // Search\n-        //\n-        int64_t nStart = GetTime();\n-        uint256 hashTarget = CBigNum().SetCompact(pblock->nBits).getuint256();\n-        uint256 hashbuf[2];\n-        uint256& hash = *alignup<16>(hashbuf);\n-        while (true)\n-        {\n-            unsigned int nHashesDone = 0;\n-            unsigned int nNonceFound;\n-\n-            // Crypto++ SHA256\n-            nNonceFound = ScanHash_CryptoPP(pmidstate, pdata + 64, phash1,\n-                                            (char*)&hash, nHashesDone);\n-\n-            // Check if something found\n-            if (nNonceFound != (unsigned int) -1)\n-            {\n-                for (unsigned int i = 0; i < sizeof(hash)/4; i++)\n-                    ((unsigned int*)&hash)[i] = ByteReverse(((unsigned int*)&hash)[i]);\n+    try {\n+        while (true) {\n+            if (Params().MiningRequiresPeers()) {\n+                // Busy-wait for the network to come online so we don't waste time mining\n+                // on an obsolete chain. In regtest mode we expect to fly solo.\n+                while (vNodes.empty())\n+                    MilliSleep(1000);\n+            }\n \n-                if (hash <= hashTarget)\n+            //\n+            // Create new block\n+            //\n+            unsigned int nTransactionsUpdatedLast = mempool.GetTransactionsUpdated();\n+            CBlockIndex* pindexPrev = chainActive.Tip();\n+\n+            auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey));\n+            if (!pblocktemplate.get())\n+                return;\n+            CBlock *pblock = &pblocktemplate->block;\n+            IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n+\n+            LogPrintf(\"Running BitcoinMiner with %u transactions in block (%u bytes)\\n\", pblock->vtx.size(),\n+                ::GetSerializeSize(*pblock, SER_NETWORK, PROTOCOL_VERSION));\n+\n+            //\n+            // Search\n+            //\n+            int64_t nStart = GetTime();\n+            uint256 hashTarget = uint256().SetCompact(pblock->nBits);\n+            uint256 hash;\n+            uint32_t nNonce = 0;\n+            uint32_t nOldNonce = 0;\n+            while (true) {\n+                bool fFound = ScanHash(pblock, nNonce, &hash);\n+                uint32_t nHashesDone = nNonce - nOldNonce;\n+                nOldNonce = nNonce;\n+\n+                // Check if something found\n+                if (fFound)\n                 {\n-                    // Found a solution\n-                    pblock->nNonce = ByteReverse(nNonceFound);\n-                    assert(hash == pblock->GetHash());\n+                    if (hash <= hashTarget)\n+                    {\n+                        // Found a solution\n+                        pblock->nNonce = nNonce;\n+                        assert(hash == pblock->GetHash());\n \n-                    SetThreadPriority(THREAD_PRIORITY_NORMAL);\n-                    CheckWork(pblock, *pwallet, reservekey);\n-                    SetThreadPriority(THREAD_PRIORITY_LOWEST);\n+                        SetThreadPriority(THREAD_PRIORITY_NORMAL);\n+                        CheckWork(pblock, *pwallet, reservekey);\n+                        SetThreadPriority(THREAD_PRIORITY_LOWEST);\n \n-                    // In regression test mode, stop mining after a block is found. This\n-                    // allows developers to controllably generate a block on demand.\n-                    if (Params().NetworkID() == CChainParams::REGTEST)\n-                        throw boost::thread_interrupted();\n+                        // In regression test mode, stop mining after a block is found.\n+                        if (Params().MineBlocksOnDemand())\n+                            throw boost::thread_interrupted();\n \n-                    break;\n+                        break;\n+                    }\n                 }\n-            }\n \n-            // Meter hashes/sec\n-            static int64_t nHashCounter;\n-            if (nHPSTimerStart == 0)\n-            {\n-                nHPSTimerStart = GetTimeMillis();\n-                nHashCounter = 0;\n-            }\n-            else\n-                nHashCounter += nHashesDone;\n-            if (GetTimeMillis() - nHPSTimerStart > 4000)\n-            {\n-                static CCriticalSection cs;\n+                // Meter hashes/sec\n+                static int64_t nHashCounter;\n+                if (nHPSTimerStart == 0)\n                 {\n-                    LOCK(cs);\n-                    if (GetTimeMillis() - nHPSTimerStart > 4000)\n+                    nHPSTimerStart = GetTimeMillis();\n+                    nHashCounter = 0;\n+                }\n+                else\n+                    nHashCounter += nHashesDone;\n+                if (GetTimeMillis() - nHPSTimerStart > 4000)\n+                {\n+                    static CCriticalSection cs;\n                     {\n-                        dHashesPerSec = 1000.0 * nHashCounter / (GetTimeMillis() - nHPSTimerStart);\n-                        nHPSTimerStart = GetTimeMillis();\n-                        nHashCounter = 0;\n-                        static int64_t nLogTime;\n-                        if (GetTime() - nLogTime > 30 * 60)\n+                        LOCK(cs);\n+                        if (GetTimeMillis() - nHPSTimerStart > 4000)\n                         {\n-                            nLogTime = GetTime();\n-                            LogPrintf(\"hashmeter %6.0f khash/s\\n\", dHashesPerSec/1000.0);\n+                            dHashesPerSec = 1000.0 * nHashCounter / (GetTimeMillis() - nHPSTimerStart);\n+                            nHPSTimerStart = GetTimeMillis();\n+                            nHashCounter = 0;\n+                            static int64_t nLogTime;\n+                            if (GetTime() - nLogTime > 30 * 60)\n+                            {\n+                                nLogTime = GetTime();\n+                                LogPrintf(\"hashmeter %6.0f khash/s\\n\", dHashesPerSec/1000.0);\n+                            }\n                         }\n                     }\n                 }\n-            }\n \n-            // Check for stop or if block needs to be rebuilt\n-            boost::this_thread::interruption_point();\n-            if (vNodes.empty() && Params().NetworkID() != CChainParams::REGTEST)\n-                break;\n-            if (nBlockNonce >= 0xffff0000)\n-                break;\n-            if (mempool.GetTransactionsUpdated() != nTransactionsUpdatedLast && GetTime() - nStart > 60)\n-                break;\n-            if (pindexPrev != chainActive.Tip())\n-                break;\n-\n-            // Update nTime every few seconds\n-            UpdateTime(*pblock, pindexPrev);\n-            nBlockTime = ByteReverse(pblock->nTime);\n-            if (TestNet())\n-            {\n-                // Changing pblock->nTime can change work required on testnet:\n-                nBlockBits = ByteReverse(pblock->nBits);\n-                hashTarget = CBigNum().SetCompact(pblock->nBits).getuint256();\n+                // Check for stop or if block needs to be rebuilt\n+                boost::this_thread::interruption_point();\n+                // Regtest mode doesn't require peers\n+                if (vNodes.empty() && Params().MiningRequiresPeers())\n+                    break;\n+                if (nNonce >= 0xffff0000)\n+                    break;\n+                if (mempool.GetTransactionsUpdated() != nTransactionsUpdatedLast && GetTime() - nStart > 60)\n+                    break;\n+                if (pindexPrev != chainActive.Tip())\n+                    break;\n+\n+                // Update nTime every few seconds\n+                UpdateTime(*pblock, pindexPrev);\n+                if (Params().AllowMinDifficultyBlocks())\n+                {\n+                    // Changing pblock->nTime can change work required on testnet:\n+                    hashTarget.SetCompact(pblock->nBits);\n+                }\n             }\n         }\n-    } }\n+    }\n     catch (boost::thread_interrupted)\n     {\n         LogPrintf(\"BitcoinMiner terminated\\n\");\n@@ -649,8 +571,9 @@ void GenerateBitcoins(bool fGenerate, CWallet* pwallet, int nThreads)\n     static boost::thread_group* minerThreads = NULL;\n \n     if (nThreads < 0) {\n-        if (Params().NetworkID() == CChainParams::REGTEST)\n-            nThreads = 1;\n+        // In regtest threads defaults to 1\n+        if (Params().DefaultMinerThreads())\n+            nThreads = Params().DefaultMinerThreads();\n         else\n             nThreads = boost::thread::hardware_concurrency();\n     }\n@@ -670,5 +593,4 @@ void GenerateBitcoins(bool fGenerate, CWallet* pwallet, int nThreads)\n         minerThreads->create_thread(boost::bind(&BitcoinMiner, pwallet));\n }\n \n-#endif\n-\n+#endif // ENABLE_WALLET"
      },
      {
        "sha": "1fa499dc5b9fa484f5fd2f95ebf607e0cc951ae8",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -10,24 +10,21 @@\n \n class CBlock;\n class CBlockIndex;\n-struct CBlockTemplate;\n class CReserveKey;\n class CScript;\n class CWallet;\n \n+struct CBlockTemplate;\n+\n /** Run the miner threads */\n void GenerateBitcoins(bool fGenerate, CWallet* pwallet, int nThreads);\n /** Generate a new block, without valid proof-of-work */\n CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn);\n CBlockTemplate* CreateNewBlockWithKey(CReserveKey& reservekey);\n /** Modify the extranonce in a block */\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce);\n-/** Do mining precalculation */\n-void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash1);\n /** Check mined block */\n bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey);\n-/** Base sha256 mining transform */\n-void SHA256Transform(void* pstate, void* pinput, const void* pinit);\n \n extern double dHashesPerSec;\n extern int64_t nHPSTimerStart;"
      },
      {
        "sha": "c1c08b02888d373dcef0c193a6edeb7637918b05",
        "filename": "src/mruset.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/mruset.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/mruset.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mruset.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -32,6 +32,7 @@ template <typename T> class mruset\n     bool empty() const { return set.empty(); }\n     iterator find(const key_type& k) const { return set.find(k); }\n     size_type count(const key_type& k) const { return set.count(k); }\n+    void clear() { set.clear(); queue.clear(); }\n     bool inline friend operator==(const mruset<T>& a, const mruset<T>& b) { return a.set == b.set; }\n     bool inline friend operator==(const mruset<T>& a, const std::set<T>& b) { return a.set == b; }\n     bool inline friend operator<(const mruset<T>& a, const mruset<T>& b) { return a.set < b.set; }"
      },
      {
        "sha": "6a660dc9bd93437102186d9a2dbbd40bf43fc48c",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 118,
        "deletions": 111,
        "changes": 229,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -4,7 +4,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n+#include \"config/bitcoin-config.h\"\n #endif\n \n #include \"net.h\"\n@@ -36,18 +36,27 @@\n #define MSG_NOSIGNAL 0\n #endif\n \n+// Fix for ancient MinGW versions, that don't have defined these in ws2tcpip.h.\n+// Todo: Can be removed when our pull-tester is upgraded to a modern MinGW version.\n+#ifdef WIN32\n+#ifndef PROTECTION_LEVEL_UNRESTRICTED\n+#define PROTECTION_LEVEL_UNRESTRICTED 10\n+#endif\n+#ifndef IPV6_PROTECTION_LEVEL\n+#define IPV6_PROTECTION_LEVEL 23\n+#endif\n+#endif\n+\n using namespace std;\n using namespace boost;\n \n static const int MAX_OUTBOUND_CONNECTIONS = 8;\n \n-bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOutbound = NULL, const char *strDest = NULL, bool fOneShot = false);\n-\n-\n //\n // Global state variables\n //\n bool fDiscover = true;\n+bool fListen = true;\n uint64_t nLocalServices = NODE_NETWORK;\n CCriticalSection cs_mapLocalHost;\n map<CNetAddr, LocalServiceInfo> mapLocalHost;\n@@ -99,7 +108,7 @@ unsigned short GetListenPort()\n // find 'best' local address for a particular peer\n bool GetLocal(CService& addr, const CNetAddr *paddrPeer)\n {\n-    if (fNoListen)\n+    if (!fListen)\n         return false;\n \n     int nBestScore = -1;\n@@ -178,7 +187,7 @@ bool RecvLine(SOCKET hSocket, string& strLine)\n             {\n                 // socket error\n                 int nErr = WSAGetLastError();\n-                LogPrint(\"net\", \"recv failed: %d\\n\", nErr);\n+                LogPrint(\"net\", \"recv failed: %s\\n\", NetworkErrorString(nErr));\n                 return false;\n             }\n         }\n@@ -471,28 +480,25 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n         }\n     }\n \n-\n     /// debug print\n     LogPrint(\"net\", \"trying connection %s lastseen=%.1fhrs\\n\",\n         pszDest ? pszDest : addrConnect.ToString(),\n-        pszDest ? 0 : (double)(GetAdjustedTime() - addrConnect.nTime)/3600.0);\n+        pszDest ? 0.0 : (double)(GetAdjustedTime() - addrConnect.nTime)/3600.0);\n \n     // Connect\n     SOCKET hSocket;\n     if (pszDest ? ConnectSocketByName(addrConnect, hSocket, pszDest, Params().GetDefaultPort()) : ConnectSocket(addrConnect, hSocket))\n     {\n         addrman.Attempt(addrConnect);\n \n-        LogPrint(\"net\", \"connected %s\\n\", pszDest ? pszDest : addrConnect.ToString());\n-\n         // Set to non-blocking\n #ifdef WIN32\n         u_long nOne = 1;\n         if (ioctlsocket(hSocket, FIONBIO, &nOne) == SOCKET_ERROR)\n-            LogPrintf(\"ConnectSocket() : ioctlsocket non-blocking setting failed, error %d\\n\", WSAGetLastError());\n+            LogPrintf(\"ConnectSocket() : ioctlsocket non-blocking setting failed, error %s\\n\", NetworkErrorString(WSAGetLastError()));\n #else\n         if (fcntl(hSocket, F_SETFL, O_NONBLOCK) == SOCKET_ERROR)\n-            LogPrintf(\"ConnectSocket() : fcntl non-blocking setting failed, error %d\\n\", errno);\n+            LogPrintf(\"ConnectSocket() : fcntl non-blocking setting failed, error %s\\n\", NetworkErrorString(errno));\n #endif\n \n         // Add node\n@@ -505,20 +511,19 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n         }\n \n         pnode->nTimeConnected = GetTime();\n+\n         return pnode;\n     }\n-    else\n-    {\n-        return NULL;\n-    }\n+\n+    return NULL;\n }\n \n void CNode::CloseSocketDisconnect()\n {\n     fDisconnect = true;\n     if (hSocket != INVALID_SOCKET)\n     {\n-        LogPrint(\"net\", \"disconnecting node %s\\n\", addrName);\n+        LogPrint(\"net\", \"disconnecting peer=%d\\n\", id);\n         closesocket(hSocket);\n         hSocket = INVALID_SOCKET;\n     }\n@@ -533,11 +538,6 @@ void CNode::CloseSocketDisconnect()\n         pnodeSync = NULL;\n }\n \n-void CNode::Cleanup()\n-{\n-}\n-\n-\n void CNode::PushVersion()\n {\n     int nBestHeight = g_signals.GetHeight().get_value_or(0);\n@@ -547,7 +547,10 @@ void CNode::PushVersion()\n     CAddress addrYou = (addr.IsRoutable() && !IsProxy(addr) ? addr : CAddress(CService(\"0.0.0.0\",0)));\n     CAddress addrMe = GetLocalAddress(&addr);\n     RAND_bytes((unsigned char*)&nLocalHostNonce, sizeof(nLocalHostNonce));\n-    LogPrint(\"net\", \"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%s\\n\", PROTOCOL_VERSION, nBestHeight, addrMe.ToString(), addrYou.ToString(), addr.ToString());\n+    if (fLogIPs)\n+        LogPrint(\"net\", \"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%d\\n\", PROTOCOL_VERSION, nBestHeight, addrMe.ToString(), addrYou.ToString(), id);\n+    else\n+        LogPrint(\"net\", \"send version message: version %d, blocks=%d, us=%s, peer=%d\\n\", PROTOCOL_VERSION, nBestHeight, addrMe.ToString(), id);\n     PushMessage(\"version\", PROTOCOL_VERSION, nLocalServices, nTime, addrYou, addrMe,\n                 nLocalHostNonce, FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, std::vector<string>()), nBestHeight, true);\n }\n@@ -652,6 +655,9 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes)\n \n         pch += handled;\n         nBytes -= handled;\n+\n+        if (msg.complete())\n+            msg.nTime = GetTimeMicros();\n     }\n \n     return true;\n@@ -684,7 +690,6 @@ int CNetMessage::readHeader(const char *pch, unsigned int nBytes)\n \n     // switch state to reading message data\n     in_data = true;\n-    vRecv.resize(hdr.nMessageSize);\n \n     return nCopy;\n }\n@@ -694,6 +699,11 @@ int CNetMessage::readData(const char *pch, unsigned int nBytes)\n     unsigned int nRemaining = hdr.nMessageSize - nDataPos;\n     unsigned int nCopy = std::min(nRemaining, nBytes);\n \n+    if (vRecv.size() < nDataPos + nCopy) {\n+        // Allocate up to 256 KiB ahead, but never more than the total message size.\n+        vRecv.resize(std::min(hdr.nMessageSize, nDataPos + nCopy + 256 * 1024));\n+    }\n+\n     memcpy(&vRecv[nDataPos], pch, nCopy);\n     nDataPos += nCopy;\n \n@@ -736,7 +746,7 @@ void SocketSendData(CNode *pnode)\n                 int nErr = WSAGetLastError();\n                 if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS)\n                 {\n-                    LogPrintf(\"socket send error %d\\n\", nErr);\n+                    LogPrintf(\"socket send error %s\\n\", NetworkErrorString(nErr));\n                     pnode->CloseSocketDisconnect();\n                 }\n             }\n@@ -779,7 +789,6 @@ void ThreadSocketHandler()\n \n                     // close socket and cleanup\n                     pnode->CloseSocketDisconnect();\n-                    pnode->Cleanup();\n \n                     // hold in disconnected pool until all refs are released\n                     if (pnode->fNetworkNode || pnode->fInbound)\n@@ -823,7 +832,6 @@ void ThreadSocketHandler()\n             uiInterface.NotifyNumConnectionsChanged(nPrevNodeCount);\n         }\n \n-\n         //\n         // Find which sockets have data to receive\n         //\n@@ -845,6 +853,7 @@ void ThreadSocketHandler()\n             hSocketMax = max(hSocketMax, hListenSocket);\n             have_fds = true;\n         }\n+\n         {\n             LOCK(cs_vNodes);\n             BOOST_FOREACH(CNode* pnode, vNodes)\n@@ -896,7 +905,7 @@ void ThreadSocketHandler()\n             if (have_fds)\n             {\n                 int nErr = WSAGetLastError();\n-                LogPrintf(\"socket select error %d\\n\", nErr);\n+                LogPrintf(\"socket select error %s\\n\", NetworkErrorString(nErr));\n                 for (unsigned int i = 0; i <= hSocketMax; i++)\n                     FD_SET(i, &fdsetRecv);\n             }\n@@ -905,58 +914,58 @@ void ThreadSocketHandler()\n             MilliSleep(timeout.tv_usec/1000);\n         }\n \n-\n         //\n         // Accept new connections\n         //\n         BOOST_FOREACH(SOCKET hListenSocket, vhListenSocket)\n-        if (hListenSocket != INVALID_SOCKET && FD_ISSET(hListenSocket, &fdsetRecv))\n         {\n-            struct sockaddr_storage sockaddr;\n-            socklen_t len = sizeof(sockaddr);\n-            SOCKET hSocket = accept(hListenSocket, (struct sockaddr*)&sockaddr, &len);\n-            CAddress addr;\n-            int nInbound = 0;\n-\n-            if (hSocket != INVALID_SOCKET)\n-                if (!addr.SetSockAddr((const struct sockaddr*)&sockaddr))\n-                    LogPrintf(\"Warning: Unknown socket family\\n\");\n-\n+            if (hListenSocket != INVALID_SOCKET && FD_ISSET(hListenSocket, &fdsetRecv))\n             {\n-                LOCK(cs_vNodes);\n-                BOOST_FOREACH(CNode* pnode, vNodes)\n-                    if (pnode->fInbound)\n-                        nInbound++;\n-            }\n+                struct sockaddr_storage sockaddr;\n+                socklen_t len = sizeof(sockaddr);\n+                SOCKET hSocket = accept(hListenSocket, (struct sockaddr*)&sockaddr, &len);\n+                CAddress addr;\n+                int nInbound = 0;\n+\n+                if (hSocket != INVALID_SOCKET)\n+                    if (!addr.SetSockAddr((const struct sockaddr*)&sockaddr))\n+                        LogPrintf(\"Warning: Unknown socket family\\n\");\n \n-            if (hSocket == INVALID_SOCKET)\n-            {\n-                int nErr = WSAGetLastError();\n-                if (nErr != WSAEWOULDBLOCK)\n-                    LogPrintf(\"socket error accept failed: %d\\n\", nErr);\n-            }\n-            else if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS)\n-            {\n-                closesocket(hSocket);\n-            }\n-            else if (CNode::IsBanned(addr))\n-            {\n-                LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString());\n-                closesocket(hSocket);\n-            }\n-            else\n-            {\n-                LogPrint(\"net\", \"accepted connection %s\\n\", addr.ToString());\n-                CNode* pnode = new CNode(hSocket, addr, \"\", true);\n-                pnode->AddRef();\n                 {\n                     LOCK(cs_vNodes);\n-                    vNodes.push_back(pnode);\n+                    BOOST_FOREACH(CNode* pnode, vNodes)\n+                        if (pnode->fInbound)\n+                            nInbound++;\n+                }\n+\n+                if (hSocket == INVALID_SOCKET)\n+                {\n+                    int nErr = WSAGetLastError();\n+                    if (nErr != WSAEWOULDBLOCK)\n+                        LogPrintf(\"socket error accept failed: %s\\n\", NetworkErrorString(nErr));\n+                }\n+                else if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS)\n+                {\n+                    closesocket(hSocket);\n+                }\n+                else if (CNode::IsBanned(addr))\n+                {\n+                    LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString());\n+                    closesocket(hSocket);\n+                }\n+                else\n+                {\n+                    CNode* pnode = new CNode(hSocket, addr, \"\", true);\n+                    pnode->AddRef();\n+\n+                    {\n+                        LOCK(cs_vNodes);\n+                        vNodes.push_back(pnode);\n+                    }\n                 }\n             }\n         }\n \n-\n         //\n         // Service each socket\n         //\n@@ -1007,7 +1016,7 @@ void ThreadSocketHandler()\n                             if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS)\n                             {\n                                 if (!pnode->fDisconnect)\n-                                    LogPrintf(\"socket recv error %d\\n\", nErr);\n+                                    LogPrintf(\"socket recv error %s\\n\", NetworkErrorString(nErr));\n                                 pnode->CloseSocketDisconnect();\n                             }\n                         }\n@@ -1030,23 +1039,27 @@ void ThreadSocketHandler()\n             //\n             // Inactivity checking\n             //\n-            if (pnode->vSendMsg.empty())\n-                pnode->nLastSendEmpty = GetTime();\n-            if (GetTime() - pnode->nTimeConnected > 60)\n+            int64_t nTime = GetTime();\n+            if (nTime - pnode->nTimeConnected > 60)\n             {\n                 if (pnode->nLastRecv == 0 || pnode->nLastSend == 0)\n                 {\n-                    LogPrint(\"net\", \"socket no message in first 60 seconds, %d %d\\n\", pnode->nLastRecv != 0, pnode->nLastSend != 0);\n+                    LogPrint(\"net\", \"socket no message in first 60 seconds, %d %d from %d\\n\", pnode->nLastRecv != 0, pnode->nLastSend != 0, pnode->id);\n                     pnode->fDisconnect = true;\n                 }\n-                else if (GetTime() - pnode->nLastSend > 90*60 && GetTime() - pnode->nLastSendEmpty > 90*60)\n+                else if (nTime - pnode->nLastSend > TIMEOUT_INTERVAL)\n                 {\n-                    LogPrintf(\"socket not sending\\n\");\n+                    LogPrintf(\"socket sending timeout: %is\\n\", nTime - pnode->nLastSend);\n                     pnode->fDisconnect = true;\n                 }\n-                else if (GetTime() - pnode->nLastRecv > 90*60)\n+                else if (nTime - pnode->nLastRecv > (pnode->nVersion > BIP0031_VERSION ? TIMEOUT_INTERVAL : 90*60))\n                 {\n-                    LogPrintf(\"socket inactivity timeout\\n\");\n+                    LogPrintf(\"socket receive timeout: %is\\n\", nTime - pnode->nLastRecv);\n+                    pnode->fDisconnect = true;\n+                }\n+                else if (pnode->nPingNonceSent && pnode->nPingUsecStart + TIMEOUT_INTERVAL * 1000000 < GetTimeMicros())\n+                {\n+                    LogPrintf(\"ping timeout: %fs\\n\", 0.000001 * (GetTimeMicros() - pnode->nPingUsecStart));\n                     pnode->fDisconnect = true;\n                 }\n             }\n@@ -1427,21 +1440,21 @@ void ThreadOpenAddedConnections()\n }\n \n // if successful, this moves the passed grant to the constructed node\n-bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOutbound, const char *strDest, bool fOneShot)\n+bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOutbound, const char *pszDest, bool fOneShot)\n {\n     //\n     // Initiate outbound network connection\n     //\n     boost::this_thread::interruption_point();\n-    if (!strDest)\n+    if (!pszDest) {\n         if (IsLocal(addrConnect) ||\n             FindNode((CNetAddr)addrConnect) || CNode::IsBanned(addrConnect) ||\n             FindNode(addrConnect.ToStringIPPort().c_str()))\n             return false;\n-    if (strDest && FindNode(strDest))\n+    } else if (FindNode(pszDest))\n         return false;\n \n-    CNode* pnode = ConnectNode(addrConnect, strDest);\n+    CNode* pnode = ConnectNode(addrConnect, pszDest);\n     boost::this_thread::interruption_point();\n \n     if (!pnode)\n@@ -1458,13 +1471,13 @@ bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOu\n \n // for now, use a very simple selection metric: the node from which we received\n // most recently\n-double static NodeSyncScore(const CNode *pnode) {\n-    return -pnode->nLastRecv;\n+static int64_t NodeSyncScore(const CNode *pnode) {\n+    return pnode->nLastRecv;\n }\n \n void static StartSync(const vector<CNode*> &vNodes) {\n     CNode *pnodeNewSync = NULL;\n-    double dBestScore = 0;\n+    int64_t nBestScore = 0;\n \n     int nBestHeight = g_signals.GetHeight().get_value_or(0);\n \n@@ -1476,10 +1489,10 @@ void static StartSync(const vector<CNode*> &vNodes) {\n             (pnode->nStartingHeight > (nBestHeight - 144)) &&\n             (pnode->nVersion < NOBLKS_VERSION_START || pnode->nVersion >= NOBLKS_VERSION_END)) {\n             // if ok, compare node's score with the best so far\n-            double dScore = NodeSyncScore(pnode);\n-            if (pnodeNewSync == NULL || dScore > dBestScore) {\n+            int64_t nScore = NodeSyncScore(pnode);\n+            if (pnodeNewSync == NULL || nScore > nBestScore) {\n                 pnodeNewSync = pnode;\n-                dBestScore = dScore;\n+                nBestScore = nScore;\n             }\n         }\n     }\n@@ -1577,39 +1590,37 @@ bool BindListenPort(const CService &addrBind, string& strError)\n     socklen_t len = sizeof(sockaddr);\n     if (!addrBind.GetSockAddr((struct sockaddr*)&sockaddr, &len))\n     {\n-        strError = strprintf(\"Error: bind address family for %s not supported\", addrBind.ToString());\n+        strError = strprintf(\"Error: Bind address family for %s not supported\", addrBind.ToString());\n         LogPrintf(\"%s\\n\", strError);\n         return false;\n     }\n \n     SOCKET hListenSocket = socket(((struct sockaddr*)&sockaddr)->sa_family, SOCK_STREAM, IPPROTO_TCP);\n     if (hListenSocket == INVALID_SOCKET)\n     {\n-        strError = strprintf(\"Error: Couldn't open socket for incoming connections (socket returned error %d)\", WSAGetLastError());\n+        strError = strprintf(\"Error: Couldn't open socket for incoming connections (socket returned error %s)\", NetworkErrorString(WSAGetLastError()));\n         LogPrintf(\"%s\\n\", strError);\n         return false;\n     }\n \n+#ifndef WIN32\n #ifdef SO_NOSIGPIPE\n     // Different way of disabling SIGPIPE on BSD\n     setsockopt(hListenSocket, SOL_SOCKET, SO_NOSIGPIPE, (void*)&nOne, sizeof(int));\n #endif\n-\n-#ifndef WIN32\n     // Allow binding if the port is still in TIME_WAIT state after\n-    // the program was closed and restarted.  Not an issue on windows.\n+    // the program was closed and restarted. Not an issue on windows!\n     setsockopt(hListenSocket, SOL_SOCKET, SO_REUSEADDR, (void*)&nOne, sizeof(int));\n #endif\n \n-\n #ifdef WIN32\n     // Set to non-blocking, incoming connections will also inherit this\n     if (ioctlsocket(hListenSocket, FIONBIO, (u_long*)&nOne) == SOCKET_ERROR)\n #else\n     if (fcntl(hListenSocket, F_SETFL, O_NONBLOCK) == SOCKET_ERROR)\n #endif\n     {\n-        strError = strprintf(\"Error: Couldn't set properties on socket for incoming connections (error %d)\", WSAGetLastError());\n+        strError = strprintf(\"Error: Couldn't set properties on socket for incoming connections (error %s)\", NetworkErrorString(WSAGetLastError()));\n         LogPrintf(\"%s\\n\", strError);\n         return false;\n     }\n@@ -1625,10 +1636,8 @@ bool BindListenPort(const CService &addrBind, string& strError)\n #endif\n #endif\n #ifdef WIN32\n-        int nProtLevel = 10 /* PROTECTION_LEVEL_UNRESTRICTED */;\n-        int nParameterId = 23 /* IPV6_PROTECTION_LEVEl */;\n-        // this call is allowed to fail\n-        setsockopt(hListenSocket, IPPROTO_IPV6, nParameterId, (const char*)&nProtLevel, sizeof(int));\n+        int nProtLevel = PROTECTION_LEVEL_UNRESTRICTED;\n+        setsockopt(hListenSocket, IPPROTO_IPV6, IPV6_PROTECTION_LEVEL, (const char*)&nProtLevel, sizeof(int));\n #endif\n     }\n \n@@ -1638,7 +1647,7 @@ bool BindListenPort(const CService &addrBind, string& strError)\n         if (nErr == WSAEADDRINUSE)\n             strError = strprintf(_(\"Unable to bind to %s on this computer. Bitcoin Core is probably already running.\"), addrBind.ToString());\n         else\n-            strError = strprintf(_(\"Unable to bind to %s on this computer (bind returned error %d, %s)\"), addrBind.ToString(), nErr, strerror(nErr));\n+            strError = strprintf(_(\"Unable to bind to %s on this computer (bind returned error %s)\"), addrBind.ToString(), NetworkErrorString(nErr));\n         LogPrintf(\"%s\\n\", strError);\n         return false;\n     }\n@@ -1647,7 +1656,7 @@ bool BindListenPort(const CService &addrBind, string& strError)\n     // Listen for incoming connections\n     if (listen(hListenSocket, SOMAXCONN) == SOCKET_ERROR)\n     {\n-        strError = strprintf(_(\"Error: Listening for incoming connections failed (listen returned error %d)\"), WSAGetLastError());\n+        strError = strprintf(_(\"Error: Listening for incoming connections failed (listen returned error %s)\"), NetworkErrorString(WSAGetLastError()));\n         LogPrintf(\"%s\\n\", strError);\n         return false;\n     }\n@@ -1736,10 +1745,8 @@ void StartNode(boost::thread_group& threadGroup)\n     else\n         threadGroup.create_thread(boost::bind(&TraceThread<void (*)()>, \"dnsseed\", &ThreadDNSAddressSeed));\n \n-#ifdef USE_UPNP\n     // Map ports with UPnP\n-    MapPort(GetBoolArg(\"-upnp\", USE_UPNP));\n-#endif\n+    MapPort(GetBoolArg(\"-upnp\", DEFAULT_UPNP));\n \n     // Send and receive from sockets, accept connections\n     threadGroup.create_thread(boost::bind(&TraceThread<void (*)()>, \"net\", &ThreadSocketHandler));\n@@ -1773,9 +1780,8 @@ bool StopNode()\n class CNetCleanup\n {\n public:\n-    CNetCleanup()\n-    {\n-    }\n+    CNetCleanup() {}\n+\n     ~CNetCleanup()\n     {\n         // Close sockets\n@@ -1785,7 +1791,7 @@ class CNetCleanup\n         BOOST_FOREACH(SOCKET hListenSocket, vhListenSocket)\n             if (hListenSocket != INVALID_SOCKET)\n                 if (closesocket(hListenSocket) == SOCKET_ERROR)\n-                    LogPrintf(\"closesocket(hListenSocket) failed with error %d\\n\", WSAGetLastError());\n+                    LogPrintf(\"closesocket(hListenSocket) failed with error %s\\n\", NetworkErrorString(WSAGetLastError()));\n \n         // clean up some globals (to help leak detection)\n         BOOST_FOREACH(CNode *pnode, vNodes)\n@@ -1794,6 +1800,7 @@ class CNetCleanup\n             delete pnode;\n         vNodes.clear();\n         vNodesDisconnected.clear();\n+        vhListenSocket.clear();\n         delete semOutbound;\n         semOutbound = NULL;\n         delete pnodeLocalHost;\n@@ -1813,17 +1820,17 @@ instance_of_cnetcleanup;\n \n \n \n-void RelayTransaction(const CTransaction& tx, const uint256& hash)\n+void RelayTransaction(const CTransaction& tx)\n {\n     CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n     ss.reserve(10000);\n     ss << tx;\n-    RelayTransaction(tx, hash, ss);\n+    RelayTransaction(tx, ss);\n }\n \n-void RelayTransaction(const CTransaction& tx, const uint256& hash, const CDataStream& ss)\n+void RelayTransaction(const CTransaction& tx, const CDataStream& ss)\n {\n-    CInv inv(MSG_TX, hash);\n+    CInv inv(MSG_TX, tx.GetHash());\n     {\n         LOCK(cs_mapRelay);\n         // Expire old relay messages\n@@ -1845,7 +1852,7 @@ void RelayTransaction(const CTransaction& tx, const uint256& hash, const CDataSt\n         LOCK(pnode->cs_filter);\n         if (pnode->pfilter)\n         {\n-            if (pnode->pfilter->IsRelevantAndUpdate(tx, hash))\n+            if (pnode->pfilter->IsRelevantAndUpdate(tx))\n                 pnode->PushInventory(inv);\n         } else\n             pnode->PushInventory(inv);"
      },
      {
        "sha": "c2a041645525e6485891140f2f23d6a8d5d22796",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 37,
        "deletions": 15,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -34,10 +34,22 @@ class CNode;\n \n namespace boost {\n     class thread_group;\n-}\n+} // namespace boost\n \n+/** Time between pings automatically sent out for latency probing and keepalive (in seconds). */\n+static const int PING_INTERVAL = 2 * 60;\n+/** Time after which to disconnect, after waiting for a ping response (or inactivity). */\n+static const int TIMEOUT_INTERVAL = 20 * 60;\n /** The maximum number of entries in an 'inv' protocol message */\n static const unsigned int MAX_INV_SZ = 50000;\n+/** -listen default */\n+static const bool DEFAULT_LISTEN = true;\n+/** -upnp default */\n+#ifdef USE_UPNP\n+static const bool DEFAULT_UPNP = USE_UPNP;\n+#else\n+static const bool DEFAULT_UPNP = false;\n+#endif\n \n inline unsigned int ReceiveFloodSize() { return 1000*GetArg(\"-maxreceivebuffer\", 5*1000); }\n inline unsigned int SendBufferSize() { return 1000*GetArg(\"-maxsendbuffer\", 1*1000); }\n@@ -48,10 +60,11 @@ bool GetMyExternalIP(CNetAddr& ipRet);\n void AddressCurrentlyConnected(const CService& addr);\n CNode* FindNode(const CNetAddr& ip);\n CNode* FindNode(const CService& ip);\n-CNode* ConnectNode(CAddress addrConnect, const char *strDest = NULL);\n+CNode* ConnectNode(CAddress addrConnect, const char *pszDest = NULL);\n+bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOutbound = NULL, const char *strDest = NULL, bool fOneShot = false);\n void MapPort(bool fUseUPnP);\n unsigned short GetListenPort();\n-bool BindListenPort(const CService &bindAddr, std::string& strError=REF(std::string()));\n+bool BindListenPort(const CService &bindAddr, std::string& strError);\n void StartNode(boost::thread_group& threadGroup);\n bool StopNode();\n void SocketSendData(CNode *pnode);\n@@ -98,6 +111,7 @@ CAddress GetLocalAddress(const CNetAddr *paddrPeer = NULL);\n \n \n extern bool fDiscover;\n+extern bool fListen;\n extern uint64_t nLocalServices;\n extern uint64_t nLocalHostNonce;\n extern CAddrMan addrman;\n@@ -122,7 +136,7 @@ struct LocalServiceInfo {\n };\n \n extern CCriticalSection cs_mapLocalHost;\n-extern map<CNetAddr, LocalServiceInfo> mapLocalHost;\n+extern std::map<CNetAddr, LocalServiceInfo> mapLocalHost;\n \n class CNodeStats\n {\n@@ -159,11 +173,14 @@ class CNetMessage {\n     CDataStream vRecv;              // received message data\n     unsigned int nDataPos;\n \n+    int64_t nTime;                  // time (in microseconds) of message receipt.\n+\n     CNetMessage(int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), vRecv(nTypeIn, nVersionIn) {\n         hdrbuf.resize(24);\n         in_data = false;\n         nHdrPos = 0;\n         nDataPos = 0;\n+        nTime = 0;\n     }\n \n     bool complete() const\n@@ -209,7 +226,6 @@ class CNode\n \n     int64_t nLastSend;\n     int64_t nLastRecv;\n-    int64_t nLastSendEmpty;\n     int64_t nTimeConnected;\n     CAddress addr;\n     std::string addrName;\n@@ -255,7 +271,7 @@ class CNode\n \n     // flood relay\n     std::vector<CAddress> vAddrToSend;\n-    std::set<CAddress> setAddrKnown;\n+    mruset<CAddress> setAddrKnown;\n     bool fGetAddr;\n     std::set<uint256> setKnown;\n \n@@ -265,13 +281,17 @@ class CNode\n     CCriticalSection cs_inventory;\n     std::multimap<int64_t, CInv> mapAskFor;\n \n-    // Ping time measurement\n+    // Ping time measurement:\n+    // The pong reply we're expecting, or 0 if no pong expected.\n     uint64_t nPingNonceSent;\n+    // Time (in usec) the last ping was sent, or 0 if no ping was ever sent.\n     int64_t nPingUsecStart;\n+    // Last measured round-trip time.\n     int64_t nPingUsecTime;\n+    // Whether a ping is requested.\n     bool fPingQueued;\n \n-    CNode(SOCKET hSocketIn, CAddress addrIn, std::string addrNameIn = \"\", bool fInboundIn=false) : ssSend(SER_NETWORK, INIT_PROTO_VERSION)\n+    CNode(SOCKET hSocketIn, CAddress addrIn, std::string addrNameIn = \"\", bool fInboundIn=false) : ssSend(SER_NETWORK, INIT_PROTO_VERSION), setAddrKnown(5000)\n     {\n         nServices = 0;\n         hSocket = hSocketIn;\n@@ -280,7 +300,6 @@ class CNode\n         nLastRecv = 0;\n         nSendBytes = 0;\n         nRecvBytes = 0;\n-        nLastSendEmpty = GetTime();\n         nTimeConnected = GetTime();\n         addr = addrIn;\n         addrName = addrNameIn == \"\" ? addr.ToStringIPPort() : addrNameIn;\n@@ -314,6 +333,11 @@ class CNode\n             id = nLastNodeId++;\n         }\n \n+        if (fLogIPs)\n+            LogPrint(\"net\", \"Added connection to %s peer=%d\\n\", addrName, id);\n+        else\n+            LogPrint(\"net\", \"Added connection peer=%d\\n\", id);\n+\n         // Be shy and don't send version until we hear\n         if (hSocket != INVALID_SOCKET && !fInbound)\n             PushVersion();\n@@ -430,7 +454,7 @@ class CNode\n             nRequestTime = it->second;\n         else\n             nRequestTime = 0;\n-        LogPrint(\"net\", \"askfor %s   %d (%s)\\n\", inv.ToString().c_str(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str());\n+        LogPrint(\"net\", \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str(), id);\n \n         // Make sure not to reuse time indexes to keep things in the same order\n         int64_t nNow = GetTimeMicros() - 1000000;\n@@ -498,7 +522,7 @@ class CNode\n         assert(ssSend.size () >= CMessageHeader::CHECKSUM_OFFSET + sizeof(nChecksum));\n         memcpy((char*)&ssSend[CMessageHeader::CHECKSUM_OFFSET], &nChecksum, sizeof(nChecksum));\n \n-        LogPrint(\"net\", \"(%d bytes)\\n\", nSize);\n+        LogPrint(\"net\", \"(%d bytes) peer=%d\\n\", nSize, id);\n \n         std::deque<CSerializeData>::iterator it = vSendMsg.insert(vSendMsg.end(), CSerializeData());\n         ssSend.GetAndClear(*it);\n@@ -676,8 +700,6 @@ class CNode\n     void Subscribe(unsigned int nChannel, unsigned int nHops=0);\n     void CancelSubscribe(unsigned int nChannel);\n     void CloseSocketDisconnect();\n-    void Cleanup();\n-\n \n     // Denial-of-service detection/prevention\n     // The idea is to detect peers that are behaving\n@@ -709,8 +731,8 @@ class CNode\n \n \n class CTransaction;\n-void RelayTransaction(const CTransaction& tx, const uint256& hash);\n-void RelayTransaction(const CTransaction& tx, const uint256& hash, const CDataStream& ss);\n+void RelayTransaction(const CTransaction& tx);\n+void RelayTransaction(const CTransaction& tx, const CDataStream& ss);\n \n /** Access to the (IP) address database (peers.dat) */\n class CAddrDB"
      },
      {
        "sha": "175406322a95380cc5ebae93416664f868af0830",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 247,
        "deletions": 112,
        "changes": 359,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -3,6 +3,14 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#ifdef HAVE_CONFIG_H\n+#include \"bitcoin-config.h\"\n+#endif\n+\n+#ifdef HAVE_GETADDRINFO_A\n+#include <netdb.h>\n+#endif\n+\n #include \"netbase.h\"\n \n #include \"hash.h\"\n@@ -11,6 +19,9 @@\n #include \"util.h\"\n \n #ifndef WIN32\n+#if HAVE_INET_PTON\n+#include <arpa/inet.h>\n+#endif\n #include <fcntl.h>\n #endif\n \n@@ -25,7 +36,7 @@ using namespace std;\n \n // Settings\n static proxyType proxyInfo[NET_MAX];\n-static proxyType nameproxyInfo;\n+static CService nameProxy;\n static CCriticalSection cs_proxyInfos;\n int nConnectTimeout = 5000;\n bool fNameLookup = false;\n@@ -47,12 +58,10 @@ void SplitHostPort(std::string in, int &portOut, std::string &hostOut) {\n     bool fBracketed = fHaveColon && (in[0]=='[' && in[colon-1]==']'); // if there is a colon, and in[0]=='[', colon is not 0, so in[colon-1] is safe\n     bool fMultiColon = fHaveColon && (in.find_last_of(':',colon-1) != in.npos);\n     if (fHaveColon && (colon==0 || fBracketed || !fMultiColon)) {\n-        char *endp = NULL;\n-        int n = strtol(in.c_str() + colon + 1, &endp, 10);\n-        if (endp && *endp == 0 && n >= 0) {\n+        int32_t n;\n+        if (ParseInt32(in.substr(colon + 1), &n) && n > 0 && n < 0x10000) {\n             in = in.substr(0, colon);\n-            if (n > 0 && n < 0x10000)\n-                portOut = n;\n+            portOut = n;\n         }\n     }\n     if (in.size()>0 && in[0] == '[' && in[in.size()-1] == ']')\n@@ -73,9 +82,30 @@ bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsign\n         }\n     }\n \n+#ifdef HAVE_GETADDRINFO_A\n+    struct in_addr ipv4_addr;\n+#ifdef HAVE_INET_PTON\n+    if (inet_pton(AF_INET, pszName, &ipv4_addr) > 0) {\n+        vIP.push_back(CNetAddr(ipv4_addr));\n+        return true;\n+    }\n+\n+    struct in6_addr ipv6_addr;\n+    if (inet_pton(AF_INET6, pszName, &ipv6_addr) > 0) {\n+        vIP.push_back(CNetAddr(ipv6_addr));\n+        return true;\n+    }\n+#else\n+    ipv4_addr.s_addr = inet_addr(pszName);\n+    if (ipv4_addr.s_addr != INADDR_NONE) {\n+        vIP.push_back(CNetAddr(ipv4_addr));\n+        return true;\n+    }\n+#endif\n+#endif\n+\n     struct addrinfo aiHint;\n     memset(&aiHint, 0, sizeof(struct addrinfo));\n-\n     aiHint.ai_socktype = SOCK_STREAM;\n     aiHint.ai_protocol = IPPROTO_TCP;\n     aiHint.ai_family = AF_UNSPEC;\n@@ -84,8 +114,33 @@ bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsign\n #else\n     aiHint.ai_flags = fAllowLookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n #endif\n+\n     struct addrinfo *aiRes = NULL;\n+#ifdef HAVE_GETADDRINFO_A\n+    struct gaicb gcb, *query = &gcb;\n+    memset(query, 0, sizeof(struct gaicb));\n+    gcb.ar_name = pszName;\n+    gcb.ar_request = &aiHint;\n+    int nErr = getaddrinfo_a(GAI_NOWAIT, &query, 1, NULL);\n+    if (nErr)\n+        return false;\n+\n+    do {\n+        // Should set the timeout limit to a resonable value to avoid\n+        // generating unnecessary checking call during the polling loop,\n+        // while it can still response to stop request quick enough.\n+        // 2 seconds looks fine in our situation.\n+        struct timespec ts = { 2, 0 };\n+        gai_suspend(&query, 1, &ts);\n+        boost::this_thread::interruption_point();\n+\n+        nErr = gai_error(query);\n+        if (0 == nErr)\n+            aiRes = query->ar_result;\n+    } while (nErr == EAI_INPROGRESS);\n+#else\n     int nErr = getaddrinfo(pszName, NULL, &aiHint, &aiRes);\n+#endif\n     if (nErr)\n         return false;\n \n@@ -125,11 +180,6 @@ bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nM\n     return LookupIntern(strHost.c_str(), vIP, nMaxSolutions, fAllowLookup);\n }\n \n-bool LookupHostNumeric(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions)\n-{\n-    return LookupHost(pszName, vIP, nMaxSolutions, false);\n-}\n-\n bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault, bool fAllowLookup, unsigned int nMaxSolutions)\n {\n     if (pszName[0] == 0)\n@@ -163,50 +213,6 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault)\n     return Lookup(pszName, addr, portDefault, false);\n }\n \n-bool static Socks4(const CService &addrDest, SOCKET& hSocket)\n-{\n-    LogPrintf(\"SOCKS4 connecting %s\\n\", addrDest.ToString());\n-    if (!addrDest.IsIPv4())\n-    {\n-        closesocket(hSocket);\n-        return error(\"Proxy destination is not IPv4\");\n-    }\n-    char pszSocks4IP[] = \"\\4\\1\\0\\0\\0\\0\\0\\0user\";\n-    struct sockaddr_in addr;\n-    socklen_t len = sizeof(addr);\n-    if (!addrDest.GetSockAddr((struct sockaddr*)&addr, &len) || addr.sin_family != AF_INET)\n-    {\n-        closesocket(hSocket);\n-        return error(\"Cannot get proxy destination address\");\n-    }\n-    memcpy(pszSocks4IP + 2, &addr.sin_port, 2);\n-    memcpy(pszSocks4IP + 4, &addr.sin_addr, 4);\n-    char* pszSocks4 = pszSocks4IP;\n-    int nSize = sizeof(pszSocks4IP);\n-\n-    int ret = send(hSocket, pszSocks4, nSize, MSG_NOSIGNAL);\n-    if (ret != nSize)\n-    {\n-        closesocket(hSocket);\n-        return error(\"Error sending to proxy\");\n-    }\n-    char pchRet[8];\n-    if (recv(hSocket, pchRet, 8, 0) != 8)\n-    {\n-        closesocket(hSocket);\n-        return error(\"Error reading proxy response\");\n-    }\n-    if (pchRet[1] != 0x5a)\n-    {\n-        closesocket(hSocket);\n-        if (pchRet[1] != 0x5b)\n-            LogPrintf(\"ERROR: Proxy returned error %d\\n\", pchRet[1]);\n-        return false;\n-    }\n-    LogPrintf(\"SOCKS4 connected %s\\n\", addrDest.ToString());\n-    return true;\n-}\n-\n bool static Socks5(string strDest, int port, SOCKET& hSocket)\n {\n     LogPrintf(\"SOCKS5 connecting %s\\n\", strDest);\n@@ -344,8 +350,9 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n \n     if (connect(hSocket, (struct sockaddr*)&sockaddr, len) == SOCKET_ERROR)\n     {\n+        int nErr = WSAGetLastError();\n         // WSAEINVAL is here because some legacy version of winsock uses it\n-        if (WSAGetLastError() == WSAEINPROGRESS || WSAGetLastError() == WSAEWOULDBLOCK || WSAGetLastError() == WSAEINVAL)\n+        if (nErr == WSAEINPROGRESS || nErr == WSAEWOULDBLOCK || nErr == WSAEINVAL)\n         {\n             struct timeval timeout;\n             timeout.tv_sec  = nTimeout / 1000;\n@@ -363,7 +370,7 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n             }\n             if (nRet == SOCKET_ERROR)\n             {\n-                LogPrintf(\"select() for %s failed: %i\\n\", addrConnect.ToString(), WSAGetLastError());\n+                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n                 closesocket(hSocket);\n                 return false;\n             }\n@@ -374,13 +381,13 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n             if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, &nRet, &nRetSize) == SOCKET_ERROR)\n #endif\n             {\n-                LogPrintf(\"getsockopt() for %s failed: %i\\n\", addrConnect.ToString(), WSAGetLastError());\n+                LogPrintf(\"getsockopt() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n                 closesocket(hSocket);\n                 return false;\n             }\n             if (nRet != 0)\n             {\n-                LogPrintf(\"connect() to %s failed after select(): %s\\n\", addrConnect.ToString(), strerror(nRet));\n+                LogPrintf(\"connect() to %s failed after select(): %s\\n\", addrConnect.ToString(), NetworkErrorString(nRet));\n                 closesocket(hSocket);\n                 return false;\n             }\n@@ -391,7 +398,7 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n         else\n #endif\n         {\n-            LogPrintf(\"connect() to %s failed: %i\\n\", addrConnect.ToString(), WSAGetLastError());\n+            LogPrintf(\"connect() to %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n             closesocket(hSocket);\n             return false;\n         }\n@@ -416,53 +423,49 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n     return true;\n }\n \n-bool SetProxy(enum Network net, CService addrProxy, int nSocksVersion) {\n+bool SetProxy(enum Network net, CService addrProxy) {\n     assert(net >= 0 && net < NET_MAX);\n-    if (nSocksVersion != 0 && nSocksVersion != 4 && nSocksVersion != 5)\n-        return false;\n-    if (nSocksVersion != 0 && !addrProxy.IsValid())\n+    if (!addrProxy.IsValid())\n         return false;\n     LOCK(cs_proxyInfos);\n-    proxyInfo[net] = std::make_pair(addrProxy, nSocksVersion);\n+    proxyInfo[net] = addrProxy;\n     return true;\n }\n \n bool GetProxy(enum Network net, proxyType &proxyInfoOut) {\n     assert(net >= 0 && net < NET_MAX);\n     LOCK(cs_proxyInfos);\n-    if (!proxyInfo[net].second)\n+    if (!proxyInfo[net].IsValid())\n         return false;\n     proxyInfoOut = proxyInfo[net];\n     return true;\n }\n \n-bool SetNameProxy(CService addrProxy, int nSocksVersion) {\n-    if (nSocksVersion != 0 && nSocksVersion != 5)\n-        return false;\n-    if (nSocksVersion != 0 && !addrProxy.IsValid())\n+bool SetNameProxy(CService addrProxy) {\n+    if (!addrProxy.IsValid())\n         return false;\n     LOCK(cs_proxyInfos);\n-    nameproxyInfo = std::make_pair(addrProxy, nSocksVersion);\n+    nameProxy = addrProxy;\n     return true;\n }\n \n-bool GetNameProxy(proxyType &nameproxyInfoOut) {\n+bool GetNameProxy(CService &nameProxyOut) {\n     LOCK(cs_proxyInfos);\n-    if (!nameproxyInfo.second)\n+    if(!nameProxy.IsValid())\n         return false;\n-    nameproxyInfoOut = nameproxyInfo;\n+    nameProxyOut = nameProxy;\n     return true;\n }\n \n bool HaveNameProxy() {\n     LOCK(cs_proxyInfos);\n-    return nameproxyInfo.second != 0;\n+    return nameProxy.IsValid();\n }\n \n bool IsProxy(const CNetAddr &addr) {\n     LOCK(cs_proxyInfos);\n     for (int i = 0; i < NET_MAX; i++) {\n-        if (proxyInfo[i].second && (addr == (CNetAddr)proxyInfo[i].first))\n+        if (addr == (CNetAddr)proxyInfo[i])\n             return true;\n     }\n     return false;\n@@ -471,31 +474,18 @@ bool IsProxy(const CNetAddr &addr) {\n bool ConnectSocket(const CService &addrDest, SOCKET& hSocketRet, int nTimeout)\n {\n     proxyType proxy;\n-\n-    // no proxy needed\n+    // no proxy needed (none set for target network)\n     if (!GetProxy(addrDest.GetNetwork(), proxy))\n         return ConnectSocketDirectly(addrDest, hSocketRet, nTimeout);\n \n     SOCKET hSocket = INVALID_SOCKET;\n \n     // first connect to proxy server\n-    if (!ConnectSocketDirectly(proxy.first, hSocket, nTimeout))\n+    if (!ConnectSocketDirectly(proxy, hSocket, nTimeout))\n         return false;\n-\n     // do socks negotiation\n-    switch (proxy.second) {\n-    case 4:\n-        if (!Socks4(addrDest, hSocket))\n-            return false;\n-        break;\n-    case 5:\n-        if (!Socks5(addrDest.ToStringIP(), addrDest.GetPort(), hSocket))\n-            return false;\n-        break;\n-    default:\n-        closesocket(hSocket);\n+    if (!Socks5(addrDest.ToStringIP(), addrDest.GetPort(), hSocket))\n         return false;\n-    }\n \n     hSocketRet = hSocket;\n     return true;\n@@ -509,30 +499,25 @@ bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest\n \n     SOCKET hSocket = INVALID_SOCKET;\n \n-    proxyType nameproxy;\n-    GetNameProxy(nameproxy);\n+    CService nameProxy;\n+    GetNameProxy(nameProxy);\n \n-    CService addrResolved(CNetAddr(strDest, fNameLookup && !nameproxy.second), port);\n+    CService addrResolved(CNetAddr(strDest, fNameLookup && !HaveNameProxy()), port);\n     if (addrResolved.IsValid()) {\n         addr = addrResolved;\n         return ConnectSocket(addr, hSocketRet, nTimeout);\n     }\n+\n     addr = CService(\"0.0.0.0:0\");\n-    if (!nameproxy.second)\n+\n+    if (!HaveNameProxy())\n         return false;\n-    if (!ConnectSocketDirectly(nameproxy.first, hSocket, nTimeout))\n+    // first connect to name proxy server\n+    if (!ConnectSocketDirectly(nameProxy, hSocket, nTimeout))\n+        return false;\n+    // do socks negotiation\n+    if (!Socks5(strDest, (unsigned short)port, hSocket))\n         return false;\n-\n-    switch(nameproxy.second) {\n-        default:\n-        case 4:\n-            closesocket(hSocket);\n-            return false;\n-        case 5:\n-            if (!Socks5(strDest, port, hSocket))\n-                return false;\n-            break;\n-    }\n \n     hSocketRet = hSocket;\n     return true;\n@@ -548,6 +533,22 @@ void CNetAddr::SetIP(const CNetAddr& ipIn)\n     memcpy(ip, ipIn.ip, sizeof(ip));\n }\n \n+void CNetAddr::SetRaw(Network network, const uint8_t *ip_in)\n+{\n+    switch(network)\n+    {\n+        case NET_IPV4:\n+            memcpy(ip, pchIPv4, 12);\n+            memcpy(ip+12, ip_in, 4);\n+            break;\n+        case NET_IPV6:\n+            memcpy(ip, ip_in, 16);\n+            break;\n+        default:\n+            assert(!\"invalid network\");\n+    }\n+}\n+\n static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n \n bool CNetAddr::SetSpecial(const std::string &strName)\n@@ -571,13 +572,12 @@ CNetAddr::CNetAddr()\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    memcpy(ip,    pchIPv4, 12);\n-    memcpy(ip+12, &ipv4Addr, 4);\n+    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr)\n {\n-    memcpy(ip, &ipv6Addr, 16);\n+    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n }\n \n CNetAddr::CNetAddr(const char *pszIp, bool fAllowLookup)\n@@ -1122,3 +1122,138 @@ void CService::SetPort(unsigned short portIn)\n {\n     port = portIn;\n }\n+\n+CSubNet::CSubNet():\n+    valid(false)\n+{\n+    memset(netmask, 0, sizeof(netmask));\n+}\n+\n+CSubNet::CSubNet(const std::string &strSubnet, bool fAllowLookup)\n+{\n+    size_t slash = strSubnet.find_last_of('/');\n+    std::vector<CNetAddr> vIP;\n+\n+    valid = true;\n+    // Default to /32 (IPv4) or /128 (IPv6), i.e. match single address\n+    memset(netmask, 255, sizeof(netmask));\n+\n+    std::string strAddress = strSubnet.substr(0, slash);\n+    if (LookupHost(strAddress.c_str(), vIP, 1, fAllowLookup))\n+    {\n+        network = vIP[0];\n+        if (slash != strSubnet.npos)\n+        {\n+            std::string strNetmask = strSubnet.substr(slash + 1);\n+            int32_t n;\n+            // IPv4 addresses start at offset 12, and first 12 bytes must match, so just offset n\n+            int noffset = network.IsIPv4() ? (12 * 8) : 0;\n+            if (ParseInt32(strNetmask, &n)) // If valid number, assume /24 symtex\n+            {\n+                if(n >= 0 && n <= (128 - noffset)) // Only valid if in range of bits of address\n+                {\n+                    n += noffset;\n+                    // Clear bits [n..127]\n+                    for (; n < 128; ++n)\n+                        netmask[n>>3] &= ~(1<<(n&7));\n+                }\n+                else\n+                {\n+                    valid = false;\n+                }\n+            }\n+            else // If not a valid number, try full netmask syntax\n+            {\n+                if (LookupHost(strNetmask.c_str(), vIP, 1, false)) // Never allow lookup for netmask\n+                {\n+                    // Remember: GetByte returns bytes in reversed order\n+                    // Copy only the *last* four bytes in case of IPv4, the rest of the mask should stay 1's as\n+                    // we don't want pchIPv4 to be part of the mask.\n+                    int asize = network.IsIPv4() ? 4 : 16;\n+                    for(int x=0; x<asize; ++x)\n+                        netmask[15-x] = vIP[0].GetByte(x);\n+                }\n+                else\n+                {\n+                    valid = false;\n+                }\n+            }\n+        }\n+    }\n+    else\n+    {\n+        valid = false;\n+    }\n+}\n+\n+bool CSubNet::Match(const CNetAddr &addr) const\n+{\n+    if (!valid || !addr.IsValid())\n+        return false;\n+    for(int x=0; x<16; ++x)\n+        if ((addr.GetByte(x) & netmask[15-x]) != network.GetByte(x))\n+            return false;\n+    return true;\n+}\n+\n+std::string CSubNet::ToString() const\n+{\n+    std::string strNetmask;\n+    if (network.IsIPv4())\n+        strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n+    else\n+        strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                         netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n+                         netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n+                         netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n+                         netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n+    return network.ToString() + \"/\" + strNetmask;\n+}\n+\n+bool CSubNet::IsValid() const\n+{\n+    return valid;\n+}\n+\n+bool operator==(const CSubNet& a, const CSubNet& b)\n+{\n+    return a.valid == b.valid && a.network == b.network && !memcmp(a.netmask, b.netmask, 16);\n+}\n+\n+bool operator!=(const CSubNet& a, const CSubNet& b)\n+{\n+    return !(a==b);\n+}\n+\n+#ifdef WIN32\n+std::string NetworkErrorString(int err)\n+{\n+    char buf[256];\n+    buf[0] = 0;\n+    if(FormatMessageA(FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS | FORMAT_MESSAGE_MAX_WIDTH_MASK,\n+            NULL, err, MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n+            buf, sizeof(buf), NULL))\n+    {\n+        return strprintf(\"%s (%d)\", buf, err);\n+    }\n+    else\n+    {\n+        return strprintf(\"Unknown error (%d)\", err);\n+    }\n+}\n+#else\n+std::string NetworkErrorString(int err)\n+{\n+    char buf[256];\n+    const char *s = buf;\n+    buf[0] = 0;\n+    /* Too bad there are two incompatible implementations of the\n+     * thread-safe strerror. */\n+#ifdef STRERROR_R_CHAR_P /* GNU variant can return a pointer outside the passed buffer */\n+    s = strerror_r(err, buf, sizeof(buf));\n+#else /* POSIX variant always returns message in buffer */\n+    (void) strerror_r(err, buf, sizeof(buf));\n+#endif\n+    return strprintf(\"%s (%d)\", s, err);\n+}\n+#endif"
      },
      {
        "sha": "ad1e230834832c173fa18818c12f66bff6630dba",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 37,
        "deletions": 8,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -6,7 +6,7 @@\n #define BITCOIN_NETBASE_H\n \n #if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n+#include \"config/bitcoin-config.h\"\n #endif\n \n #include \"compat.h\"\n@@ -17,6 +17,7 @@\n #include <vector>\n \n extern int nConnectTimeout;\n+extern bool fNameLookup;\n \n #ifdef WIN32\n // In MSVC, this is defined as a macro, undefine it to prevent a compile and link error\n@@ -33,9 +34,6 @@ enum Network\n     NET_MAX,\n };\n \n-extern int nConnectTimeout;\n-extern bool fNameLookup;\n-\n /** IP address (IPv6, or IPv4 using mapped IPv6 range (::FFFF:0:0/96)) */\n class CNetAddr\n {\n@@ -49,6 +47,13 @@ class CNetAddr\n         explicit CNetAddr(const std::string &strIp, bool fAllowLookup = false);\n         void Init();\n         void SetIP(const CNetAddr& ip);\n+\n+        /**\n+         * Set raw IPv4 or IPv6 address (in network byte order)\n+         * @note Only NET_IPV4 and NET_IPV6 are allowed for network.\n+         */\n+        void SetRaw(Network network, const uint8_t *data);\n+\n         bool SetSpecial(const std::string &strName); // for Tor addresses\n         bool IsIPv4() const;    // IPv4 mapped address (::FFFF:0:0/96, 0.0.0.0/0)\n         bool IsIPv6() const;    // IPv6 address (not mapped IPv4, not Tor)\n@@ -90,6 +95,29 @@ class CNetAddr\n             )\n };\n \n+class CSubNet\n+{\n+    protected:\n+        /// Network (base) address\n+        CNetAddr network;\n+        /// Netmask, in network byte order\n+        uint8_t netmask[16];\n+        /// Is this value valid? (only used to signal parse errors)\n+        bool valid;\n+\n+    public:\n+        CSubNet();\n+        explicit CSubNet(const std::string &strSubnet, bool fAllowLookup = false);\n+\n+        bool Match(const CNetAddr &addr) const;\n+\n+        std::string ToString() const;\n+        bool IsValid() const;\n+\n+        friend bool operator==(const CSubNet& a, const CSubNet& b);\n+        friend bool operator!=(const CSubNet& a, const CSubNet& b);\n+};\n+\n /** A combination of a network address (CNetAddr) and a (TCP) port */\n class CService : public CNetAddr\n {\n@@ -133,21 +161,22 @@ class CService : public CNetAddr\n             )\n };\n \n-typedef std::pair<CService, int> proxyType;\n+typedef CService proxyType;\n \n enum Network ParseNetwork(std::string net);\n void SplitHostPort(std::string in, int &portOut, std::string &hostOut);\n-bool SetProxy(enum Network net, CService addrProxy, int nSocksVersion = 5);\n+bool SetProxy(enum Network net, CService addrProxy);\n bool GetProxy(enum Network net, proxyType &proxyInfoOut);\n bool IsProxy(const CNetAddr &addr);\n-bool SetNameProxy(CService addrProxy, int nSocksVersion = 5);\n+bool SetNameProxy(CService addrProxy);\n bool HaveNameProxy();\n bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions = 0, bool fAllowLookup = true);\n-bool LookupHostNumeric(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions = 0);\n bool Lookup(const char *pszName, CService& addr, int portDefault = 0, bool fAllowLookup = true);\n bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault = 0, bool fAllowLookup = true, unsigned int nMaxSolutions = 0);\n bool LookupNumeric(const char *pszName, CService& addr, int portDefault = 0);\n bool ConnectSocket(const CService &addr, SOCKET& hSocketRet, int nTimeout = nConnectTimeout);\n bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault = 0, int nTimeout = nConnectTimeout);\n+/** Return readable error string for a network error code */\n+std::string NetworkErrorString(int err);\n \n #endif"
      },
      {
        "sha": "c0d0a7ca20f26cc1ec5214c0b64e0557b4602c1e",
        "filename": "src/pow.cpp",
        "status": "added",
        "additions": 119,
        "deletions": 0,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,119 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"pow.h\"\n+\n+#include \"chainparams.h\"\n+#include \"core.h\"\n+#include \"main.h\"\n+#include \"uint256.h\"\n+\n+unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock)\n+{\n+    unsigned int nProofOfWorkLimit = Params().ProofOfWorkLimit().GetCompact();\n+\n+    // Genesis block\n+    if (pindexLast == NULL)\n+        return nProofOfWorkLimit;\n+\n+    // Only change once per interval\n+    if ((pindexLast->nHeight+1) % Params().Interval() != 0)\n+    {\n+        if (Params().AllowMinDifficultyBlocks())\n+        {\n+            // Special difficulty rule for testnet:\n+            // If the new block's timestamp is more than 2* 10 minutes\n+            // then allow mining of a min-difficulty block.\n+            if (pblock->GetBlockTime() > pindexLast->GetBlockTime() + Params().TargetSpacing()*2)\n+                return nProofOfWorkLimit;\n+            else\n+            {\n+                // Return the last non-special-min-difficulty-rules-block\n+                const CBlockIndex* pindex = pindexLast;\n+                while (pindex->pprev && pindex->nHeight % Params().Interval() != 0 && pindex->nBits == nProofOfWorkLimit)\n+                    pindex = pindex->pprev;\n+                return pindex->nBits;\n+            }\n+        }\n+        return pindexLast->nBits;\n+    }\n+\n+    // Go back by what we want to be 14 days worth of blocks\n+    const CBlockIndex* pindexFirst = pindexLast;\n+    for (int i = 0; pindexFirst && i < Params().Interval()-1; i++)\n+        pindexFirst = pindexFirst->pprev;\n+    assert(pindexFirst);\n+\n+    // Limit adjustment step\n+    int64_t nActualTimespan = pindexLast->GetBlockTime() - pindexFirst->GetBlockTime();\n+    LogPrintf(\"  nActualTimespan = %d  before bounds\\n\", nActualTimespan);\n+    if (nActualTimespan < Params().TargetTimespan()/4)\n+        nActualTimespan = Params().TargetTimespan()/4;\n+    if (nActualTimespan > Params().TargetTimespan()*4)\n+        nActualTimespan = Params().TargetTimespan()*4;\n+\n+    // Retarget\n+    uint256 bnNew;\n+    uint256 bnOld;\n+    bnNew.SetCompact(pindexLast->nBits);\n+    bnOld = bnNew;\n+    bnNew *= nActualTimespan;\n+    bnNew /= Params().TargetTimespan();\n+\n+    if (bnNew > Params().ProofOfWorkLimit())\n+        bnNew = Params().ProofOfWorkLimit();\n+\n+    /// debug print\n+    LogPrintf(\"GetNextWorkRequired RETARGET\\n\");\n+    LogPrintf(\"Params().TargetTimespan() = %d    nActualTimespan = %d\\n\", Params().TargetTimespan(), nActualTimespan);\n+    LogPrintf(\"Before: %08x  %s\\n\", pindexLast->nBits, bnOld.ToString());\n+    LogPrintf(\"After:  %08x  %s\\n\", bnNew.GetCompact(), bnNew.ToString());\n+\n+    return bnNew.GetCompact();\n+}\n+\n+bool CheckProofOfWork(uint256 hash, unsigned int nBits)\n+{\n+    bool fNegative;\n+    bool fOverflow;\n+    uint256 bnTarget;\n+    bnTarget.SetCompact(nBits, &fNegative, &fOverflow);\n+\n+    // Check range\n+    if (fNegative || bnTarget == 0 || fOverflow || bnTarget > Params().ProofOfWorkLimit())\n+        return error(\"CheckProofOfWork() : nBits below minimum work\");\n+\n+    // Check proof of work matches claimed amount\n+    if (hash > bnTarget)\n+        return error(\"CheckProofOfWork() : hash doesn't match nBits\");\n+\n+    return true;\n+}\n+\n+//\n+// minimum amount of work that could possibly be required nTime after\n+// minimum work required was nBase\n+//\n+unsigned int ComputeMinWork(unsigned int nBase, int64_t nTime)\n+{\n+    const uint256 &bnLimit = Params().ProofOfWorkLimit();\n+    // Testnet has min-difficulty blocks\n+    // after Params().TargetSpacing()*2 time between blocks:\n+    if (Params().AllowMinDifficultyBlocks() && nTime > Params().TargetSpacing()*2)\n+        return bnLimit.GetCompact();\n+\n+    uint256 bnResult;\n+    bnResult.SetCompact(nBase);\n+    while (nTime > 0 && bnResult < bnLimit)\n+    {\n+        // Maximum 400% adjustment...\n+        bnResult *= 4;\n+        // ... in best-case exactly 4-times-normal target time\n+        nTime -= Params().TargetTimespan()*4;\n+    }\n+    if (bnResult > bnLimit)\n+        bnResult = bnLimit;\n+    return bnResult.GetCompact();\n+}"
      },
      {
        "sha": "0ce5b48766a8d5018fb4b968398332f6d4301f0a",
        "filename": "src/pow.h",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,23 @@\n+\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POW_H\n+#define BITCOIN_POW_H\n+\n+#include <stdint.h>\n+\n+class CBlockIndex;\n+class CBlockHeader;\n+class uint256;\n+\n+unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock);\n+\n+/** Check whether a block hash satisfies the proof-of-work requirement specified by nBits */\n+bool CheckProofOfWork(uint256 hash, unsigned int nBits);\n+/** Calculate the minimum amount of work a received block needs, without knowing its direct parent */\n+unsigned int ComputeMinWork(unsigned int nBase, int64_t nTime);\n+\n+#endif"
      },
      {
        "sha": "87b2f238735cbc013c9ce1f3da0729ef335024a8",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -5,6 +5,7 @@\n \n #include \"protocol.h\"\n \n+#include \"chainparams.h\"\n #include \"util.h\"\n \n #ifndef WIN32"
      },
      {
        "sha": "1f23274299b7f35832b7dc9a7fe8723aec3d5d86",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -10,14 +10,16 @@\n #ifndef __INCLUDED_PROTOCOL_H__\n #define __INCLUDED_PROTOCOL_H__\n \n-#include \"chainparams.h\"\n #include \"netbase.h\"\n #include \"serialize.h\"\n #include \"uint256.h\"\n+#include \"version.h\"\n \n #include <stdint.h>\n #include <string>\n \n+#define MESSAGE_START_SIZE 4\n+\n /** Message header.\n  * (4) message start.\n  * (12) command.\n@@ -62,6 +64,14 @@ class CMessageHeader\n enum\n {\n     NODE_NETWORK = (1 << 0),\n+\n+    // Bits 24-31 are reserved for temporary experiments. Just pick a bit that\n+    // isn't getting used, or one not being used much, and notify the\n+    // bitcoin-development mailing list. Remember that service bits are just\n+    // unauthenticated advertisements, so your code must be robust against\n+    // collisions and other cases where nodes may be advertising a service they\n+    // do not actually support. Other service bits should be allocated via the\n+    // BIP process.\n };\n \n /** A CService with information about it as peer */"
      },
      {
        "sha": "b9dcf0c5992216013d27464202cc86d2e8c31c93",
        "filename": "src/qt/Makefile",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,9 @@\n+.PHONY: FORCE\n+all: FORCE\n+\t$(MAKE) -C .. bitcoin_qt test_bitcoin_qt\n+clean: FORCE\n+\t$(MAKE) -C .. bitcoin_qt_clean test_bitcoin_qt_clean\n+check: FORCE\n+\t$(MAKE) -C .. test_bitcoin_qt_check\n+bitcoin-qt bitcoin-qt.exe: FORCE\n+\t $(MAKE) -C .. bitcoin_qt"
      },
      {
        "sha": "8ec1ae258391df50429781d348849555434d45aa",
        "filename": "src/qt/Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 378,
        "changes": 378,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=2e4fee2ac4824570c1340a8f8fe2aed4580de879",
        "patch": "@@ -1,378 +0,0 @@\n-include $(top_srcdir)/src/Makefile.include\n-\n-AM_CPPFLAGS += -I$(top_srcdir)/src \\\n-  -I$(top_builddir)/src/qt \\\n-  -I$(top_builddir)/src/qt/forms \\\n-  $(PROTOBUF_CFLAGS) \\\n-  $(QR_CFLAGS)\n-bin_PROGRAMS = bitcoin-qt\n-noinst_LIBRARIES = libbitcoinqt.a\n-SUBDIRS = . $(BUILD_TEST_QT)\n-DIST_SUBDIRS = . test\n-\n-# bitcoin qt core #\n-QT_TS = \\\n-  locale/bitcoin_ach.ts \\\n-  locale/bitcoin_af_ZA.ts \\\n-  locale/bitcoin_ar.ts \\\n-  locale/bitcoin_be_BY.ts \\\n-  locale/bitcoin_bg.ts \\\n-  locale/bitcoin_bs.ts \\\n-  locale/bitcoin_ca_ES.ts \\\n-  locale/bitcoin_ca.ts \\\n-  locale/bitcoin_ca@valencia.ts \\\n-  locale/bitcoin_cmn.ts \\\n-  locale/bitcoin_cs.ts \\\n-  locale/bitcoin_cy.ts \\\n-  locale/bitcoin_da.ts \\\n-  locale/bitcoin_de.ts \\\n-  locale/bitcoin_el_GR.ts \\\n-  locale/bitcoin_en.ts \\\n-  locale/bitcoin_eo.ts \\\n-  locale/bitcoin_es_CL.ts \\\n-  locale/bitcoin_es_DO.ts \\\n-  locale/bitcoin_es_MX.ts \\\n-  locale/bitcoin_es.ts \\\n-  locale/bitcoin_es_UY.ts \\\n-  locale/bitcoin_et.ts \\\n-  locale/bitcoin_eu_ES.ts \\\n-  locale/bitcoin_fa_IR.ts \\\n-  locale/bitcoin_fa.ts \\\n-  locale/bitcoin_fi.ts \\\n-  locale/bitcoin_fr_CA.ts \\\n-  locale/bitcoin_fr.ts \\\n-  locale/bitcoin_gl.ts \\\n-  locale/bitcoin_gu_IN.ts \\\n-  locale/bitcoin_he.ts \\\n-  locale/bitcoin_hi_IN.ts \\\n-  locale/bitcoin_hr.ts \\\n-  locale/bitcoin_hu.ts \\\n-  locale/bitcoin_id_ID.ts \\\n-  locale/bitcoin_it.ts \\\n-  locale/bitcoin_ja.ts \\\n-  locale/bitcoin_ka.ts \\\n-  locale/bitcoin_kk_KZ.ts \\\n-  locale/bitcoin_ko_KR.ts \\\n-  locale/bitcoin_ky.ts \\\n-  locale/bitcoin_la.ts \\\n-  locale/bitcoin_lt.ts \\\n-  locale/bitcoin_lv_LV.ts \\\n-  locale/bitcoin_ms_MY.ts \\\n-  locale/bitcoin_nb.ts \\\n-  locale/bitcoin_nl.ts \\\n-  locale/bitcoin_pam.ts \\\n-  locale/bitcoin_pl.ts \\\n-  locale/bitcoin_pt_BR.ts \\\n-  locale/bitcoin_pt_PT.ts \\\n-  locale/bitcoin_ro_RO.ts \\\n-  locale/bitcoin_ru.ts \\\n-  locale/bitcoin_sah.ts \\\n-  locale/bitcoin_sk.ts \\\n-  locale/bitcoin_sl_SI.ts \\\n-  locale/bitcoin_sq.ts \\\n-  locale/bitcoin_sr.ts \\\n-  locale/bitcoin_sv.ts \\\n-  locale/bitcoin_th_TH.ts \\\n-  locale/bitcoin_tr.ts \\\n-  locale/bitcoin_uk.ts \\\n-  locale/bitcoin_ur_PK.ts \\\n-  locale/bitcoin_uz@Cyrl.ts \\\n-  locale/bitcoin_vi.ts \\\n-  locale/bitcoin_vi_VN.ts \\\n-  locale/bitcoin_zh_CN.ts \\\n-  locale/bitcoin_zh_HK.ts \\\n-  locale/bitcoin_zh_TW.ts\n-\n-QT_FORMS_UI = \\\n-  forms/aboutdialog.ui \\\n-  forms/addressbookpage.ui \\\n-  forms/askpassphrasedialog.ui \\\n-  forms/coincontroldialog.ui \\\n-  forms/editaddressdialog.ui \\\n-  forms/helpmessagedialog.ui \\\n-  forms/intro.ui \\\n-  forms/openuridialog.ui \\\n-  forms/optionsdialog.ui \\\n-  forms/overviewpage.ui \\\n-  forms/receivecoinsdialog.ui \\\n-  forms/receiverequestdialog.ui \\\n-  forms/rpcconsole.ui \\\n-  forms/sendcoinsdialog.ui \\\n-  forms/sendcoinsentry.ui \\\n-  forms/signverifymessagedialog.ui \\\n-  forms/transactiondescdialog.ui\n-\n-QT_MOC_CPP = \\\n-  moc_addressbookpage.cpp \\\n-  moc_addresstablemodel.cpp \\\n-  moc_askpassphrasedialog.cpp \\\n-  moc_bitcoinaddressvalidator.cpp \\\n-  moc_bitcoinamountfield.cpp \\\n-  moc_bitcoingui.cpp \\\n-  moc_bitcoinunits.cpp \\\n-  moc_clientmodel.cpp \\\n-  moc_coincontroldialog.cpp \\\n-  moc_coincontroltreewidget.cpp \\\n-  moc_csvmodelwriter.cpp \\\n-  moc_editaddressdialog.cpp \\\n-  moc_guiutil.cpp \\\n-  moc_intro.cpp \\\n-  moc_macdockiconhandler.cpp \\\n-  moc_macnotificationhandler.cpp \\\n-  moc_monitoreddatamapper.cpp \\\n-  moc_notificator.cpp \\\n-  moc_openuridialog.cpp \\\n-  moc_optionsdialog.cpp \\\n-  moc_optionsmodel.cpp \\\n-  moc_overviewpage.cpp \\\n-  moc_paymentserver.cpp \\\n-  moc_qvalidatedlineedit.cpp \\\n-  moc_qvaluecombobox.cpp \\\n-  moc_receivecoinsdialog.cpp \\\n-  moc_receiverequestdialog.cpp \\\n-  moc_recentrequeststablemodel.cpp \\\n-  moc_rpcconsole.cpp \\\n-  moc_sendcoinsdialog.cpp \\\n-  moc_sendcoinsentry.cpp \\\n-  moc_signverifymessagedialog.cpp \\\n-  moc_splashscreen.cpp \\\n-  moc_trafficgraphwidget.cpp \\\n-  moc_transactiondesc.cpp \\\n-  moc_transactiondescdialog.cpp \\\n-  moc_transactionfilterproxy.cpp \\\n-  moc_transactiontablemodel.cpp \\\n-  moc_transactionview.cpp \\\n-  moc_utilitydialog.cpp \\\n-  moc_walletframe.cpp \\\n-  moc_walletmodel.cpp \\\n-  moc_walletview.cpp\n-\n-BITCOIN_MM = \\\n-  macdockiconhandler.mm \\\n-  macnotificationhandler.mm\n-\n-QT_MOC = \\\n-  bitcoin.moc \\\n-  intro.moc \\\n-  overviewpage.moc \\\n-  rpcconsole.moc\n-\n-QT_QRC_CPP = qrc_bitcoin.cpp\n-QT_QRC = bitcoin.qrc\n-\n-PROTOBUF_CC = paymentrequest.pb.cc\n-PROTOBUF_H = paymentrequest.pb.h\n-PROTOBUF_PROTO = paymentrequest.proto\n-\n-BITCOIN_QT_H = \\\n-  addressbookpage.h \\\n-  addresstablemodel.h \\\n-  askpassphrasedialog.h \\\n-  bitcoinaddressvalidator.h \\\n-  bitcoinamountfield.h \\\n-  bitcoingui.h \\\n-  bitcoinunits.h \\\n-  clientmodel.h \\\n-  coincontroldialog.h \\\n-  coincontroltreewidget.h \\\n-  csvmodelwriter.h \\\n-  editaddressdialog.h \\\n-  guiconstants.h \\\n-  guiutil.h \\\n-  intro.h \\\n-  macdockiconhandler.h \\\n-  macnotificationhandler.h \\\n-  monitoreddatamapper.h \\\n-  notificator.h \\\n-  openuridialog.h \\\n-  optionsdialog.h \\\n-  optionsmodel.h \\\n-  overviewpage.h \\\n-  paymentrequestplus.h \\\n-  paymentserver.h \\\n-  qvalidatedlineedit.h \\\n-  qvaluecombobox.h \\\n-  receivecoinsdialog.h \\\n-  receiverequestdialog.h \\\n-  recentrequeststablemodel.h \\\n-  rpcconsole.h \\\n-  sendcoinsdialog.h \\\n-  sendcoinsentry.h \\\n-  signverifymessagedialog.h \\\n-  splashscreen.h \\\n-  trafficgraphwidget.h \\\n-  transactiondesc.h \\\n-  transactiondescdialog.h \\\n-  transactionfilterproxy.h \\\n-  transactionrecord.h \\\n-  transactiontablemodel.h \\\n-  transactionview.h \\\n-  utilitydialog.h \\\n-  walletframe.h \\\n-  walletmodel.h \\\n-  walletmodeltransaction.h \\\n-  walletview.h \\\n-  winshutdownmonitor.h\n-\n-RES_ICONS = \\\n-  res/icons/add.png \\\n-  res/icons/address-book.png \\\n-  res/icons/bitcoin.ico \\\n-  res/icons/bitcoin.png \\\n-  res/icons/bitcoin_testnet.ico \\\n-  res/icons/bitcoin_testnet.png \\\n-  res/icons/clock1.png \\\n-  res/icons/clock2.png \\\n-  res/icons/clock3.png \\\n-  res/icons/clock4.png \\\n-  res/icons/clock5.png \\\n-  res/icons/configure.png \\\n-  res/icons/connect0_16.png \\\n-  res/icons/connect1_16.png \\\n-  res/icons/connect2_16.png \\\n-  res/icons/connect3_16.png \\\n-  res/icons/connect4_16.png \\\n-  res/icons/debugwindow.png \\\n-  res/icons/edit.png \\\n-  res/icons/editcopy.png \\\n-  res/icons/editpaste.png \\\n-  res/icons/export.png \\\n-  res/icons/filesave.png \\\n-  res/icons/history.png \\\n-  res/icons/key.png \\\n-  res/icons/lock_closed.png \\\n-  res/icons/lock_open.png \\\n-  res/icons/overview.png \\\n-  res/icons/qrcode.png \\\n-  res/icons/quit.png \\\n-  res/icons/receive.png \\\n-  res/icons/remove.png \\\n-  res/icons/send.png \\\n-  res/icons/synced.png \\\n-  res/icons/toolbar.png \\\n-  res/icons/toolbar_testnet.png \\\n-  res/icons/transaction0.png \\\n-  res/icons/transaction2.png \\\n-  res/icons/transaction_conflicted.png \\\n-  res/icons/tx_inout.png \\\n-  res/icons/tx_input.png \\\n-  res/icons/tx_output.png \\\n-  res/icons/tx_mined.png\n-\n-BITCOIN_QT_CPP = \\\n-  bitcoin.cpp \\\n-  bitcoinaddressvalidator.cpp \\\n-  bitcoinamountfield.cpp \\\n-  bitcoingui.cpp \\\n-  bitcoinunits.cpp \\\n-  clientmodel.cpp \\\n-  csvmodelwriter.cpp \\\n-  guiutil.cpp \\\n-  intro.cpp \\\n-  monitoreddatamapper.cpp \\\n-  notificator.cpp \\\n-  optionsdialog.cpp \\\n-  optionsmodel.cpp \\\n-  qvalidatedlineedit.cpp \\\n-  qvaluecombobox.cpp \\\n-  rpcconsole.cpp \\\n-  splashscreen.cpp \\\n-  trafficgraphwidget.cpp \\\n-  utilitydialog.cpp \\\n-  winshutdownmonitor.cpp\n-\n-if ENABLE_WALLET\n-BITCOIN_QT_CPP += \\\n-  addressbookpage.cpp \\\n-  addresstablemodel.cpp \\\n-  askpassphrasedialog.cpp \\\n-  coincontroldialog.cpp \\\n-  coincontroltreewidget.cpp \\\n-  editaddressdialog.cpp \\\n-  openuridialog.cpp \\\n-  overviewpage.cpp \\\n-  paymentrequestplus.cpp \\\n-  paymentserver.cpp \\\n-  receivecoinsdialog.cpp \\\n-  receiverequestdialog.cpp \\\n-  recentrequeststablemodel.cpp \\\n-  sendcoinsdialog.cpp \\\n-  sendcoinsentry.cpp \\\n-  signverifymessagedialog.cpp \\\n-  transactiondesc.cpp \\\n-  transactiondescdialog.cpp \\\n-  transactionfilterproxy.cpp \\\n-  transactionrecord.cpp \\\n-  transactiontablemodel.cpp \\\n-  transactionview.cpp \\\n-  walletframe.cpp \\\n-  walletmodel.cpp \\\n-  walletmodeltransaction.cpp \\\n-  walletview.cpp\n-endif\n-\n-RES_IMAGES = \\\n-  res/images/about.png \\\n-  res/images/splash.png \\\n-  res/images/splash_testnet.png\n-\n-RES_MOVIES = $(wildcard res/movies/spinner-*.png)\n-\n-BITCOIN_RC = res/bitcoin-qt-res.rc\n-\n-libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \\\n-  -I$(top_srcdir)/src/qt/forms $(QT_DBUS_INCLUDES)\n-libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \\\n-  $(QT_QRC) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n-\n-nodist_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \\\n-  $(PROTOBUF_H) $(QT_QRC_CPP)\n-\n-BUILT_SOURCES = $(nodist_libbitcoinqt_a_SOURCES)\n-\n-#Generating these with a half-written protobuf header leads to wacky results.\n-#This makes sure it's done.\n-$(QT_MOC): $(PROTOBUF_H)\n-$(QT_MOC_CPP): $(PROTOBUF_H)\n-\n-# bitcoin-qt binary #\n-bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \\\n-  -I$(top_srcdir)/src/qt/forms\n-bitcoin_qt_SOURCES = bitcoin.cpp\n-if TARGET_DARWIN\n-  bitcoin_qt_SOURCES += $(BITCOIN_MM)\n-endif\n-if TARGET_WINDOWS\n-  bitcoin_qt_SOURCES += $(BITCOIN_RC)\n-endif\n-bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN_SERVER)\n-if ENABLE_WALLET\n-bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n-endif\n-bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n-  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n-bitcoin_qt_LDFLAGS = $(QT_LDFLAGS)\n-\n-# forms/foo.h -> forms/ui_foo.h\n-QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))\n-\n-#locale/foo.ts -> locale/foo.qm\n-QT_QM=$(QT_TS:.ts=.qm)\n-\n-.PHONY: FORCE\n-.SECONDARY: $(QT_QM)\n-\n-bitcoinstrings.cpp: FORCE\n-\t$(MAKE) -C $(top_srcdir)/src qt/bitcoinstrings.cpp\n-\n-translate: bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n-\t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\"\n-\t@QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts locale/bitcoin_en.ts\n-\n-$(QT_QRC_CPP): $(QT_QRC) $(QT_QM) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)\n-\t@cd $(abs_srcdir); test -f $(RCC) && QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin -o $(abs_builddir)/$@ $< || \\\n-\t  echo error: could not build $@\n-\t$(SED) -e '/^\\*\\*.*Created:/d' $@ > $@.n && mv $@{.n,}\n-\t$(SED) -e '/^\\*\\*.*by:/d' $@  > $@.n && mv $@{.n,}\n-\n-CLEANFILES = $(BUILT_SOURCES) $(QT_QM) $(QT_FORMS_H) *.gcda *.gcno"
      },
      {
        "sha": "5df8f197291d9f656205c600eee664a0e77261c6",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -3,7 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n+#include \"config/bitcoin-config.h\"\n #endif\n \n #include \"addressbookpage.h\""
      },
      {
        "sha": "8d5284d5e9ff8d9264d5edc6f5cc2f92da0b6d7e",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -114,7 +114,7 @@ class AddressTablePriv\n         case CT_NEW:\n             if(inModel)\n             {\n-                qDebug() << \"AddressTablePriv::updateEntry : Warning: Got CT_NEW, but entry is already in model\";\n+                qWarning() << \"AddressTablePriv::updateEntry : Warning: Got CT_NEW, but entry is already in model\";\n                 break;\n             }\n             parent->beginInsertRows(QModelIndex(), lowerIndex, lowerIndex);\n@@ -124,7 +124,7 @@ class AddressTablePriv\n         case CT_UPDATED:\n             if(!inModel)\n             {\n-                qDebug() << \"AddressTablePriv::updateEntry : Warning: Got CT_UPDATED, but entry is not in model\";\n+                qWarning() << \"AddressTablePriv::updateEntry : Warning: Got CT_UPDATED, but entry is not in model\";\n                 break;\n             }\n             lower->type = newEntryType;\n@@ -134,7 +134,7 @@ class AddressTablePriv\n         case CT_DELETED:\n             if(!inModel)\n             {\n-                qDebug() << \"AddressTablePriv::updateEntry : Warning: Got CT_DELETED, but entry is not in model\";\n+                qWarning() << \"AddressTablePriv::updateEntry : Warning: Got CT_DELETED, but entry is not in model\";\n                 break;\n             }\n             parent->beginRemoveRows(QModelIndex(), lowerIndex, upperIndex-1);"
      },
      {
        "sha": "a448d5a9a051311993c2f1be0b42b2f3f2f90d5c",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -37,7 +37,7 @@ AskPassphraseDialog::AskPassphraseDialog(Mode mode, QWidget *parent) :\n         case Encrypt: // Ask passphrase x2\n             ui->passLabel1->hide();\n             ui->passEdit1->hide();\n-            ui->warningLabel->setText(tr(\"Enter the new passphrase to the wallet.<br/>Please use a passphrase of <b>10 or more random characters</b>, or <b>eight or more words</b>.\"));\n+            ui->warningLabel->setText(tr(\"Enter the new passphrase to the wallet.<br/>Please use a passphrase of <b>ten or more random characters</b>, or <b>eight or more words</b>.\"));\n             setWindowTitle(tr(\"Encrypt wallet\"));\n             break;\n         case Unlock: // Ask passphrase"
      },
      {
        "sha": "7c4af25edfe8b8f865609f26e1dc91b35fc6468f",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 8,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -3,7 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n+#include \"config/bitcoin-config.h\"\n #endif\n \n #include \"bitcoingui.h\"\n@@ -126,15 +126,15 @@ static void initTranslations(QTranslator &qtTranslatorBase, QTranslator &qtTrans\n #if QT_VERSION < 0x050000\n void DebugMessageHandler(QtMsgType type, const char *msg)\n {\n-    Q_UNUSED(type);\n-    LogPrint(\"qt\", \"GUI: %s\\n\", msg);\n+    const char *category = (type == QtDebugMsg) ? \"qt\" : NULL;\n+    LogPrint(category, \"GUI: %s\\n\", msg);\n }\n #else\n void DebugMessageHandler(QtMsgType type, const QMessageLogContext& context, const QString &msg)\n {\n-    Q_UNUSED(type);\n     Q_UNUSED(context);\n-    LogPrint(\"qt\", \"GUI: %s\\n\", qPrintable(msg));\n+    const char *category = (type == QtDebugMsg) ? \"qt\" : NULL;\n+    LogPrint(category, \"GUI: %s\\n\", msg.toStdString());\n }\n #endif\n \n@@ -459,6 +459,8 @@ WId BitcoinApplication::getMainWinId() const\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n+    SetupEnvironment();\n+\n     /// 1. Parse command-line options. These take precedence over anything else.\n     // Command-line options take precedence:\n     ParseParameters(argc, argv);\n@@ -473,6 +475,7 @@ int main(int argc, char *argv[])\n #endif\n \n     Q_INIT_RESOURCE(bitcoin);\n+    Q_INIT_RESOURCE(bitcoin_locale);\n     BitcoinApplication app(argc, argv);\n #if QT_VERSION > 0x050100\n     // Generate high-dpi pixmaps\n@@ -500,9 +503,9 @@ int main(int argc, char *argv[])\n \n     // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n     // but before showing splash screen.\n-    if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n+    if (mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n     {\n-        HelpMessageDialog help(NULL);\n+        HelpMessageDialog help(NULL, mapArgs.count(\"-version\"));\n         help.showOrPrint();\n         return 1;\n     }\n@@ -543,7 +546,7 @@ int main(int argc, char *argv[])\n     if (!PaymentServer::ipcParseCommandLine(argc, argv))\n         exit(0);\n #endif\n-    bool isaTestNet = Params().NetworkID() != CChainParams::MAIN;\n+    bool isaTestNet = Params().NetworkID() != CBaseChainParams::MAIN;\n     // Allow for separate UI settings for testnets\n     if (isaTestNet)\n         QApplication::setApplicationName(QAPP_APP_NAME_TESTNET);"
      },
      {
        "sha": "357c6470d3b53bd436ee6d2be09c87796b8c126c",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 3,
        "deletions": 72,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -35,6 +35,9 @@\n         <file alias=\"tx_input\">res/icons/tx_input.png</file>\n         <file alias=\"tx_output\">res/icons/tx_output.png</file>\n         <file alias=\"tx_inout\">res/icons/tx_inout.png</file>\n+        <file alias=\"unit_btc\">res/icons/unit_btc.png</file>\n+        <file alias=\"unit_mbtc\">res/icons/unit_mbtc.png</file>\n+        <file alias=\"unit_ubtc\">res/icons/unit_ubtc.png</file>\n         <file alias=\"lock_closed\">res/icons/lock_closed.png</file>\n         <file alias=\"lock_open\">res/icons/lock_open.png</file>\n         <file alias=\"key\">res/icons/key.png</file>\n@@ -84,76 +87,4 @@\n         <file alias=\"spinner-033\">res/movies/spinner-033.png</file>\n         <file alias=\"spinner-034\">res/movies/spinner-034.png</file>\n     </qresource>\n-    <qresource prefix=\"/translations\">\n-        <file alias=\"ach\">locale/bitcoin_ach.qm</file>\n-        <file alias=\"af_ZA\">locale/bitcoin_af_ZA.qm</file>\n-        <file alias=\"ar\">locale/bitcoin_ar.qm</file>\n-        <file alias=\"be_BY\">locale/bitcoin_be_BY.qm</file>\n-        <file alias=\"bg\">locale/bitcoin_bg.qm</file>\n-        <file alias=\"bs\">locale/bitcoin_bs.qm</file>\n-        <file alias=\"ca_ES\">locale/bitcoin_ca_ES.qm</file>\n-        <file alias=\"ca\">locale/bitcoin_ca.qm</file>\n-        <file alias=\"ca@valencia\">locale/bitcoin_ca@valencia.qm</file>\n-        <file alias=\"cmn\">locale/bitcoin_cmn.qm</file>\n-        <file alias=\"cs\">locale/bitcoin_cs.qm</file>\n-        <file alias=\"cy\">locale/bitcoin_cy.qm</file>\n-        <file alias=\"da\">locale/bitcoin_da.qm</file>\n-        <file alias=\"de\">locale/bitcoin_de.qm</file>\n-        <file alias=\"el_GR\">locale/bitcoin_el_GR.qm</file>\n-        <file alias=\"en\">locale/bitcoin_en.qm</file>\n-        <file alias=\"eo\">locale/bitcoin_eo.qm</file>\n-        <file alias=\"es_CL\">locale/bitcoin_es_CL.qm</file>\n-        <file alias=\"es_DO\">locale/bitcoin_es_DO.qm</file>\n-        <file alias=\"es_MX\">locale/bitcoin_es_MX.qm</file>\n-        <file alias=\"es\">locale/bitcoin_es.qm</file>\n-        <file alias=\"es_UY\">locale/bitcoin_es_UY.qm</file>\n-        <file alias=\"et\">locale/bitcoin_et.qm</file>\n-        <file alias=\"eu_ES\">locale/bitcoin_eu_ES.qm</file>\n-        <file alias=\"fa_IR\">locale/bitcoin_fa_IR.qm</file>\n-        <file alias=\"fa\">locale/bitcoin_fa.qm</file>\n-        <file alias=\"fi\">locale/bitcoin_fi.qm</file>\n-        <file alias=\"fr_CA\">locale/bitcoin_fr_CA.qm</file>\n-        <file alias=\"fr\">locale/bitcoin_fr.qm</file>\n-        <file alias=\"gl\">locale/bitcoin_gl.qm</file>\n-        <file alias=\"gu_IN\">locale/bitcoin_gu_IN.qm</file>\n-        <file alias=\"he\">locale/bitcoin_he.qm</file>\n-        <file alias=\"hi_IN\">locale/bitcoin_hi_IN.qm</file>\n-        <file alias=\"hr\">locale/bitcoin_hr.qm</file>\n-        <file alias=\"hu\">locale/bitcoin_hu.qm</file>\n-        <file alias=\"id_ID\">locale/bitcoin_id_ID.qm</file>\n-        <file alias=\"it\">locale/bitcoin_it.qm</file>\n-        <file alias=\"ja\">locale/bitcoin_ja.qm</file>\n-        <file alias=\"ka\">locale/bitcoin_ka.qm</file>\n-        <file alias=\"kk_KZ\">locale/bitcoin_kk_KZ.qm</file>\n-        <file alias=\"ko_KR\">locale/bitcoin_ko_KR.qm</file>\n-        <file alias=\"ky\">locale/bitcoin_ky.qm</file>\n-        <file alias=\"la\">locale/bitcoin_la.qm</file>\n-        <file alias=\"lt\">locale/bitcoin_lt.qm</file>\n-        <file alias=\"lv_LV\">locale/bitcoin_lv_LV.qm</file>\n-        <file alias=\"ms_MY\">locale/bitcoin_ms_MY.qm</file>\n-        <file alias=\"nb\">locale/bitcoin_nb.qm</file>\n-        <file alias=\"nl\">locale/bitcoin_nl.qm</file>\n-        <file alias=\"pam\">locale/bitcoin_pam.qm</file>\n-        <file alias=\"pl\">locale/bitcoin_pl.qm</file>\n-        <file alias=\"pt_BR\">locale/bitcoin_pt_BR.qm</file>\n-        <file alias=\"pt_PT\">locale/bitcoin_pt_PT.qm</file>\n-        <file alias=\"ro_RO\">locale/bitcoin_ro_RO.qm</file>\n-        <file alias=\"ru\">locale/bitcoin_ru.qm</file>\n-        <file alias=\"sah\">locale/bitcoin_sah.qm</file>\n-        <file alias=\"sk\">locale/bitcoin_sk.qm</file>\n-        <file alias=\"sl_SI\">locale/bitcoin_sl_SI.qm</file>\n-        <file alias=\"sq\">locale/bitcoin_sq.qm</file>\n-        <file alias=\"sr\">locale/bitcoin_sr.qm</file>\n-        <file alias=\"sv\">locale/bitcoin_sv.qm</file>\n-        <file alias=\"th_TH\">locale/bitcoin_th_TH.qm</file>\n-        <file alias=\"tr\">locale/bitcoin_tr.qm</file>\n-        <file alias=\"uk\">locale/bitcoin_uk.qm</file>\n-        <file alias=\"ur_PK\">locale/bitcoin_ur_PK.qm</file>\n-        <file alias=\"uz@Cyrl\">locale/bitcoin_uz@Cyrl.qm</file>\n-        <file alias=\"vi\">locale/bitcoin_vi.qm</file>\n-        <file alias=\"vi_VN\">locale/bitcoin_vi_VN.qm</file>\n-        <file alias=\"zh_CN\">locale/bitcoin_zh_CN.qm</file>\n-        <file alias=\"zh_HK\">locale/bitcoin_zh_HK.qm</file>\n-        <file alias=\"zh_TW\">locale/bitcoin_zh_TW.qm</file>\n-    </qresource>\n </RCC>"
      },
      {
        "sha": "b70a10739704bc0490fe8ced80ae2364cc8e710d",
        "filename": "src/qt/bitcoin_locale.qrc",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoin_locale.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoin_locale.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin_locale.qrc?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -0,0 +1,75 @@\n+<!DOCTYPE RCC><RCC version=\"1.0\">\n+    <qresource prefix=\"/translations\">\n+        <file alias=\"ach\">locale/bitcoin_ach.qm</file>\n+        <file alias=\"af_ZA\">locale/bitcoin_af_ZA.qm</file>\n+        <file alias=\"ar\">locale/bitcoin_ar.qm</file>\n+        <file alias=\"be_BY\">locale/bitcoin_be_BY.qm</file>\n+        <file alias=\"bg\">locale/bitcoin_bg.qm</file>\n+        <file alias=\"bs\">locale/bitcoin_bs.qm</file>\n+        <file alias=\"ca_ES\">locale/bitcoin_ca_ES.qm</file>\n+        <file alias=\"ca\">locale/bitcoin_ca.qm</file>\n+        <file alias=\"ca@valencia\">locale/bitcoin_ca@valencia.qm</file>\n+        <file alias=\"cmn\">locale/bitcoin_cmn.qm</file>\n+        <file alias=\"cs\">locale/bitcoin_cs.qm</file>\n+        <file alias=\"cy\">locale/bitcoin_cy.qm</file>\n+        <file alias=\"da\">locale/bitcoin_da.qm</file>\n+        <file alias=\"de\">locale/bitcoin_de.qm</file>\n+        <file alias=\"el_GR\">locale/bitcoin_el_GR.qm</file>\n+        <file alias=\"en\">locale/bitcoin_en.qm</file>\n+        <file alias=\"eo\">locale/bitcoin_eo.qm</file>\n+        <file alias=\"es_CL\">locale/bitcoin_es_CL.qm</file>\n+        <file alias=\"es_DO\">locale/bitcoin_es_DO.qm</file>\n+        <file alias=\"es_MX\">locale/bitcoin_es_MX.qm</file>\n+        <file alias=\"es\">locale/bitcoin_es.qm</file>\n+        <file alias=\"es_UY\">locale/bitcoin_es_UY.qm</file>\n+        <file alias=\"et\">locale/bitcoin_et.qm</file>\n+        <file alias=\"eu_ES\">locale/bitcoin_eu_ES.qm</file>\n+        <file alias=\"fa_IR\">locale/bitcoin_fa_IR.qm</file>\n+        <file alias=\"fa\">locale/bitcoin_fa.qm</file>\n+        <file alias=\"fi\">locale/bitcoin_fi.qm</file>\n+        <file alias=\"fr_CA\">locale/bitcoin_fr_CA.qm</file>\n+        <file alias=\"fr\">locale/bitcoin_fr.qm</file>\n+        <file alias=\"gl\">locale/bitcoin_gl.qm</file>\n+        <file alias=\"gu_IN\">locale/bitcoin_gu_IN.qm</file>\n+        <file alias=\"he\">locale/bitcoin_he.qm</file>\n+        <file alias=\"hi_IN\">locale/bitcoin_hi_IN.qm</file>\n+        <file alias=\"hr\">locale/bitcoin_hr.qm</file>\n+        <file alias=\"hu\">locale/bitcoin_hu.qm</file>\n+        <file alias=\"id_ID\">locale/bitcoin_id_ID.qm</file>\n+        <file alias=\"it\">locale/bitcoin_it.qm</file>\n+        <file alias=\"ja\">locale/bitcoin_ja.qm</file>\n+        <file alias=\"ka\">locale/bitcoin_ka.qm</file>\n+        <file alias=\"kk_KZ\">locale/bitcoin_kk_KZ.qm</file>\n+        <file alias=\"ko_KR\">locale/bitcoin_ko_KR.qm</file>\n+        <file alias=\"ky\">locale/bitcoin_ky.qm</file>\n+        <file alias=\"la\">locale/bitcoin_la.qm</file>\n+        <file alias=\"lt\">locale/bitcoin_lt.qm</file>\n+        <file alias=\"lv_LV\">locale/bitcoin_lv_LV.qm</file>\n+        <file alias=\"mn\">locale/bitcoin_mn.qm</file>\n+        <file alias=\"ms_MY\">locale/bitcoin_ms_MY.qm</file>\n+        <file alias=\"nb\">locale/bitcoin_nb.qm</file>\n+        <file alias=\"nl\">locale/bitcoin_nl.qm</file>\n+        <file alias=\"pam\">locale/bitcoin_pam.qm</file>\n+        <file alias=\"pl\">locale/bitcoin_pl.qm</file>\n+        <file alias=\"pt_BR\">locale/bitcoin_pt_BR.qm</file>\n+        <file alias=\"pt_PT\">locale/bitcoin_pt_PT.qm</file>\n+        <file alias=\"ro_RO\">locale/bitcoin_ro_RO.qm</file>\n+        <file alias=\"ru\">locale/bitcoin_ru.qm</file>\n+        <file alias=\"sah\">locale/bitcoin_sah.qm</file>\n+        <file alias=\"sk\">locale/bitcoin_sk.qm</file>\n+        <file alias=\"sl_SI\">locale/bitcoin_sl_SI.qm</file>\n+        <file alias=\"sq\">locale/bitcoin_sq.qm</file>\n+        <file alias=\"sr\">locale/bitcoin_sr.qm</file>\n+        <file alias=\"sv\">locale/bitcoin_sv.qm</file>\n+        <file alias=\"th_TH\">locale/bitcoin_th_TH.qm</file>\n+        <file alias=\"tr\">locale/bitcoin_tr.qm</file>\n+        <file alias=\"uk\">locale/bitcoin_uk.qm</file>\n+        <file alias=\"ur_PK\">locale/bitcoin_ur_PK.qm</file>\n+        <file alias=\"uz@Cyrl\">locale/bitcoin_uz@Cyrl.qm</file>\n+        <file alias=\"vi\">locale/bitcoin_vi.qm</file>\n+        <file alias=\"vi_VN\">locale/bitcoin_vi_VN.qm</file>\n+        <file alias=\"zh_CN\">locale/bitcoin_zh_CN.qm</file>\n+        <file alias=\"zh_HK\">locale/bitcoin_zh_HK.qm</file>\n+        <file alias=\"zh_TW\">locale/bitcoin_zh_TW.qm</file>\n+    </qresource>\n+</RCC>"
      },
      {
        "sha": "6b3aa2a2dfecd50feee879bf1bec4026a7dca7e8",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 109,
        "deletions": 18,
        "changes": 127,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -28,18 +28,18 @@\n \n #include <iostream>\n \n+#include <QAction>\n #include <QApplication>\n #include <QDateTime>\n #include <QDesktopWidget>\n #include <QDragEnterEvent>\n #include <QIcon>\n-#include <QLabel>\n #include <QListWidget>\n-#include <QMenu>\n #include <QMenuBar>\n #include <QMessageBox>\n #include <QMimeData>\n #include <QProgressBar>\n+#include <QProgressDialog>\n #include <QSettings>\n #include <QStackedWidget>\n #include <QStatusBar>\n@@ -155,10 +155,13 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     QHBoxLayout *frameBlocksLayout = new QHBoxLayout(frameBlocks);\n     frameBlocksLayout->setContentsMargins(3,0,3,0);\n     frameBlocksLayout->setSpacing(3);\n+    unitDisplayControl = new UnitDisplayStatusBarControl();\n     labelEncryptionIcon = new QLabel();\n     labelConnectionsIcon = new QLabel();\n     labelBlocksIcon = new QLabel();\n     frameBlocksLayout->addStretch();\n+    frameBlocksLayout->addWidget(unitDisplayControl);\n+    frameBlocksLayout->addStretch();\n     frameBlocksLayout->addWidget(labelEncryptionIcon);\n     frameBlocksLayout->addStretch();\n     frameBlocksLayout->addWidget(labelConnectionsIcon);\n@@ -188,7 +191,7 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n \n     connect(openRPCConsoleAction, SIGNAL(triggered()), rpcConsole, SLOT(show()));\n \n-    // prevents an oben debug window from becoming stuck/unusable on client shutdown\n+    // prevents an open debug window from becoming stuck/unusable on client shutdown\n     connect(quitAction, SIGNAL(triggered()), rpcConsole, SLOT(hide()));\n \n     // Install event filter to be able to catch status tip events (QEvent::StatusTip)\n@@ -403,19 +406,24 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n         setNumConnections(clientModel->getNumConnections());\n         connect(clientModel, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n \n-        setNumBlocks(clientModel->getNumBlocks(), clientModel->getNumBlocksOfPeers());\n-        connect(clientModel, SIGNAL(numBlocksChanged(int,int)), this, SLOT(setNumBlocks(int,int)));\n+        setNumBlocks(clientModel->getNumBlocks());\n+        connect(clientModel, SIGNAL(numBlocksChanged(int)), this, SLOT(setNumBlocks(int)));\n \n         // Receive and report messages from client model\n         connect(clientModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n \n+        // Show progress dialog\n+        connect(clientModel, SIGNAL(showProgress(QString,int)), this, SLOT(showProgress(QString,int)));\n+\n         rpcConsole->setClientModel(clientModel);\n #ifdef ENABLE_WALLET\n         if(walletFrame)\n         {\n             walletFrame->setClientModel(clientModel);\n         }\n #endif\n+\n+        this->unitDisplayControl->setOptionsModel(clientModel->getOptionsModel());\n     }\n }\n \n@@ -545,14 +553,13 @@ void BitcoinGUI::aboutClicked()\n     if(!clientModel)\n         return;\n \n-    AboutDialog dlg(this);\n-    dlg.setModel(clientModel);\n+    HelpMessageDialog dlg(this, true);\n     dlg.exec();\n }\n \n void BitcoinGUI::showHelpMessageClicked()\n {\n-    HelpMessageDialog *help = new HelpMessageDialog(this);\n+    HelpMessageDialog *help = new HelpMessageDialog(this, false);\n     help->setAttribute(Qt::WA_DeleteOnClose);\n     help->show();\n }\n@@ -617,7 +624,7 @@ void BitcoinGUI::setNumConnections(int count)\n     labelConnectionsIcon->setToolTip(tr(\"%n active connection(s) to Bitcoin network\", \"\", count));\n }\n \n-void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n+void BitcoinGUI::setNumBlocks(int count)\n {\n     // Prevent orphan statusbar messages (e.g. hover Quit in main menu, wait until chain-sync starts -> garbelled text)\n     statusBar()->clearMessage();\n@@ -646,17 +653,10 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n     QDateTime currentDate = QDateTime::currentDateTime();\n     int secs = lastBlockDate.secsTo(currentDate);\n \n-    if(count < nTotalBlocks)\n-    {\n-        tooltip = tr(\"Processed %1 of %2 (estimated) blocks of transaction history.\").arg(count).arg(nTotalBlocks);\n-    }\n-    else\n-    {\n-        tooltip = tr(\"Processed %1 blocks of transaction history.\").arg(count);\n-    }\n+    tooltip = tr(\"Processed %1 blocks of transaction history.\").arg(count);\n \n     // Set icon state: spinning if catching up, tick otherwise\n-    if(secs < 90*60 && count >= nTotalBlocks)\n+    if(secs < 90*60)\n     {\n         tooltip = tr(\"Up to date\") + QString(\".<br>\") + tooltip;\n         labelBlocksIcon->setPixmap(QIcon(\":/icons/synced\").pixmap(STATUSBAR_ICONSIZE, STATUSBAR_ICONSIZE));\n@@ -956,6 +956,29 @@ void BitcoinGUI::detectShutdown()\n     }\n }\n \n+void BitcoinGUI::showProgress(const QString &title, int nProgress)\n+{\n+    if (nProgress == 0)\n+    {\n+        progressDialog = new QProgressDialog(title, \"\", 0, 100);\n+        progressDialog->setWindowModality(Qt::ApplicationModal);\n+        progressDialog->setMinimumDuration(0);\n+        progressDialog->setCancelButton(0);\n+        progressDialog->setAutoClose(false);\n+        progressDialog->setValue(0);\n+    }\n+    else if (nProgress == 100)\n+    {\n+        if (progressDialog)\n+        {\n+            progressDialog->close();\n+            progressDialog->deleteLater();\n+        }\n+    }\n+    else if (progressDialog)\n+        progressDialog->setValue(nProgress);\n+}\n+\n static bool ThreadSafeMessageBox(BitcoinGUI *gui, const std::string& message, const std::string& caption, unsigned int style)\n {\n     bool modal = (style & CClientUIInterface::MODAL);\n@@ -981,3 +1004,71 @@ void BitcoinGUI::unsubscribeFromCoreSignals()\n     // Disconnect signals from client\n     uiInterface.ThreadSafeMessageBox.disconnect(boost::bind(ThreadSafeMessageBox, this, _1, _2, _3));\n }\n+\n+UnitDisplayStatusBarControl::UnitDisplayStatusBarControl():QLabel()\n+{\n+    optionsModel = 0;\n+    createContextMenu();\n+    setToolTip(tr(\"Unit to show amounts in. Click to select another unit.\"));\n+}\n+\n+/** So that it responds to left-button clicks */\n+void UnitDisplayStatusBarControl::mousePressEvent(QMouseEvent *event)\n+{\n+    onDisplayUnitsClicked(event->pos());\n+}\n+\n+/** Creates context menu, its actions, and wires up all the relevant signals for mouse events. */\n+void UnitDisplayStatusBarControl::createContextMenu()\n+{\n+    menu = new QMenu();\n+    foreach(BitcoinUnits::Unit u, BitcoinUnits::availableUnits())\n+    {\n+        QAction *menuAction = new QAction(QString(BitcoinUnits::name(u)), this);\n+        menuAction->setData(QVariant(u));\n+        menu->addAction(menuAction);\n+    }\n+    connect(menu,SIGNAL(triggered(QAction*)),this,SLOT(onMenuSelection(QAction*)));\n+\n+    // what happens on right click.\n+    setContextMenuPolicy(Qt::CustomContextMenu);\n+    connect(this,SIGNAL(customContextMenuRequested(const QPoint&)),this,SLOT(onDisplayUnitsClicked(const QPoint&)));\n+}\n+\n+/** Lets the control know about the Options Model (and its signals) */\n+void UnitDisplayStatusBarControl::setOptionsModel(OptionsModel *optionsModel)\n+{\n+    if (optionsModel)\n+    {\n+        this->optionsModel = optionsModel;\n+\n+        // be aware of a display unit change reported by the OptionsModel object.\n+        connect(optionsModel,SIGNAL(displayUnitChanged(int)),this,SLOT(updateDisplayUnit(int)));\n+\n+        // initialize the display units label with the current value in the model.\n+        updateDisplayUnit(optionsModel->getDisplayUnit());\n+    }\n+}\n+\n+/** When Display Units are changed on OptionsModel it will refresh the display text of the control on the status bar */\n+void UnitDisplayStatusBarControl::updateDisplayUnit(int newUnits)\n+{\n+    setPixmap(QIcon(\":/icons/unit_\" + BitcoinUnits::id(newUnits)).pixmap(31,STATUSBAR_ICONSIZE));\n+}\n+\n+/** Shows context menu with Display Unit options by the mouse coordinates */\n+void UnitDisplayStatusBarControl::onDisplayUnitsClicked(const QPoint& point)\n+{\n+    QPoint globalPos = mapToGlobal(point);\n+    menu->exec(globalPos);\n+}\n+\n+/** Tells underlying optionsModel to update its current display unit. */\n+void UnitDisplayStatusBarControl::onMenuSelection(QAction* action)\n+{\n+    if (action)\n+    {\n+        optionsModel->setDisplayUnit(action->data());\n+    }\n+}\n+"
      },
      {
        "sha": "30dd7ae317021a7bee36856a7fa44823c1d9df13",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 41,
        "deletions": 3,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -6,26 +6,31 @@\n #define BITCOINGUI_H\n \n #if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n+#include \"config/bitcoin-config.h\"\n #endif\n \n+#include <QLabel>\n #include <QMainWindow>\n #include <QMap>\n+#include <QMenu>\n+#include <QPoint>\n #include <QSystemTrayIcon>\n \n class ClientModel;\n class Notificator;\n+class OptionsModel;\n class RPCConsole;\n class SendCoinsRecipient;\n+class UnitDisplayStatusBarControl;\n class WalletFrame;\n class WalletModel;\n \n class CWallet;\n \n QT_BEGIN_NAMESPACE\n class QAction;\n-class QLabel;\n class QProgressBar;\n+class QProgressDialog;\n QT_END_NAMESPACE\n \n /**\n@@ -68,11 +73,13 @@ class BitcoinGUI : public QMainWindow\n     ClientModel *clientModel;\n     WalletFrame *walletFrame;\n \n+    UnitDisplayStatusBarControl *unitDisplayControl;\n     QLabel *labelEncryptionIcon;\n     QLabel *labelConnectionsIcon;\n     QLabel *labelBlocksIcon;\n     QLabel *progressBarLabel;\n     QProgressBar *progressBar;\n+    QProgressDialog *progressDialog;\n \n     QMenuBar *appMenuBar;\n     QAction *overviewAction;\n@@ -130,7 +137,7 @@ public slots:\n     /** Set number of connections shown in the UI */\n     void setNumConnections(int count);\n     /** Set number of blocks shown in the UI */\n-    void setNumBlocks(int count, int nTotalBlocks);\n+    void setNumBlocks(int count);\n \n     /** Notify the user of an event from the core network or transaction handling code.\n        @param[in] title     the message box / notification title\n@@ -191,6 +198,37 @@ private slots:\n \n     /** called by a timer to check if fRequestShutdown has been set **/\n     void detectShutdown();\n+\n+    /** Show progress dialog e.g. for verifychain */\n+    void showProgress(const QString &title, int nProgress);\n+};\n+\n+class UnitDisplayStatusBarControl : public QLabel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit UnitDisplayStatusBarControl();\n+    /** Lets the control know about the Options Model (and its signals) */\n+    void setOptionsModel(OptionsModel *optionsModel);\n+\n+protected:\n+    /** So that it responds to left-button clicks */\n+    void mousePressEvent(QMouseEvent *event);\n+\n+private:\n+    OptionsModel *optionsModel;\n+    QMenu* menu;\n+    /** Shows context menu with Display Unit options by the mouse coordinates */\n+    void onDisplayUnitsClicked(const QPoint& point);\n+    /** Creates context menu, its actions, and wires up all the relevant signals for mouse events. */\n+    void createContextMenu();\n+\n+private slots:\n+    /** When Display Units are changed on OptionsModel it will refresh the display text of the control on the status bar */\n+    void updateDisplayUnit(int newUnits);\n+    /** Tells underlying optionsModel to update its current display unit. */\n+    void onMenuSelection(QAction* action);\n };\n \n #endif // BITCOINGUI_H"
      },
      {
        "sha": "e852c468a88db5bf3c5d68d817db7bb969488427",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 33,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -22,31 +22,42 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"It is also recommended to set alertnotify so you are notified of problems;\\n\"\n \"for example: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\" admin@foo.com\\n\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"(default: 1, 1 = keep tx meta data e.g. account owner and payment request \"\n+\"information, 2 = drop tx meta data)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Acceptable ciphers (default: TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!\"\n \"3DES:@STRENGTH)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"An error occurred while setting up the RPC port %u for listening on IPv4: %s\"),\n+\"Allow JSON-RPC connections from specified source. Valid for <ip> are a \"\n+\"single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or \"\n+\"a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"An error occurred while setting up the RPC port %u for listening on IPv6, \"\n-\"falling back to IPv4: %s\"),\n+\"An error occurred while setting up the RPC address %s port %u for listening: \"\n+\"%s\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Bind to given address and always listen on it. Use [host]:port notation for \"\n \"IPv6\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Bind to given address to listen for JSON-RPC connections. Use [host]:port \"\n+\"notation for IPv6. This option can be specified multiple times (default: \"\n+\"bind to all interfaces)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Cannot obtain a lock on data directory %s. Bitcoin Core is probably already \"\n \"running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Continuously rate-limit free transactions to <n>*1000 bytes per minute \"\n \"(default:15)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Enter regression test mode, which uses a special chain in which blocks can \"\n-\"be solved instantly. This is intended for regression testing tools and app \"\n-\"development.\"),\n+\"Delete all wallet transactions and only recover those part of the blockchain \"\n+\"through -rescan on startup\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Distributed under the MIT/X11 software license, see the accompanying file \"\n+\"COPYING or <http://www.opensource.org/licenses/mit-license.php>.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Enter regression test mode, which uses a special chain in which blocks can \"\n \"be solved instantly.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Error: Listening for incoming connections failed (listen returned error %d)\"),\n+\"Error: Listening for incoming connections failed (listen returned error %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Error: The transaction was rejected! This might happen if some of the coins \"\n \"in your wallet were already spent, such as if you used a copy of wallet.dat \"\n@@ -55,6 +66,9 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Error: This transaction requires a transaction fee of at least %s because of \"\n \"its amount, complexity, or use of recently received funds!\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Execute command when a network tx respends wallet tx input (%s=respend TxID, \"\n+\"%t=wallet TxID)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Execute command when a relevant alert is received or we see a really long \"\n \"fork (%s in cmd is replaced by message)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -64,14 +78,20 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Execute command when the best block changes (%s in cmd is replaced by block \"\n \"hash)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Fees smaller than this are considered zero fee (for transaction creation) \"\n-\"(default:\"),\n+\"Fees (in BTC/Kb) smaller than this are considered zero fee for relaying \"\n+\"(default: %s)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Fees (in BTC/Kb) smaller than this are considered zero fee for transaction \"\n+\"creation (default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Flush database activity from memory pool to disk log every <n> megabytes \"\n \"(default: 100)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"How thorough the block verification of -checkblocks is (0-4, default: 3)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"If paytxfee is not set, include enough fee so transactions are confirmed on \"\n+\"average within n blocks (default: 1)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"In this mode -genproclimit controls how many blocks are generated \"\n \"immediately.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -93,6 +113,10 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"This is a pre-release test build - use at your own risk - do not use for \"\n \"mining or merchant applications\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"This product includes software developed by the OpenSSL Project for use in \"\n+\"the OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software \"\n+\"written by Eric Young and UPnP software written by Thomas Bernard.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Unable to bind to %s on this computer. Bitcoin Core is probably already \"\n \"running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -117,34 +141,26 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as \"\n \"wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect \"\n \"you should restore from a backup.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"You must set rpcpassword=<password> in the configuration file:\\n\"\n-\"%s\\n\"\n-\"If the file does not exist, create it with owner-readable-only file \"\n-\"permissions.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"(default: 1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"(default: wallet.dat)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"<category> can be:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept command line and JSON-RPC commands\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept connections from outside (default: 1 if no -proxy or -connect)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Add a node to connect to and attempt to keep the connection open\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Allow DNS lookups for -addnode, -seednode and -connect\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Allow JSON-RPC connections from specified IP address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Attempt to recover private keys from a corrupt wallet.dat\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bitcoin Core Daemon\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bitcoin Core RPC client version\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Block creation options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot downgrade wallet\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -bind address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -externalip address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot write default address\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Clear list of wallet transactions (diagnostic tool; implies -rescan)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect only to the specified node(s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect through SOCKS proxy\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to JSON-RPC on <port> (default: 8332 or testnet: 18332)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to a node to retrieve peer addresses, and disconnect\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connection options:\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Copyright (C) 2009-%i The Bitcoin Core Developers\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Corrupted block database detected\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Could not parse -rpcbind value %s as network address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Debugging/Testing options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Disable safemode, override a real safe mode event (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Discover own IP address (default: 1 when listening and no -externalip)\"),\n@@ -160,6 +176,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet.dat: Wallet requires new\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error opening block database\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Disk space is low!\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Unsupported argument -tor found, use -onion.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Wallet locked, unable to create transaction!\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: system error: \"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to listen on any port. Use -listen=0 if you want this.\"),\n@@ -173,27 +190,28 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write file info\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write to coin database\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write transaction index\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write undo data\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fee per kB to add to transactions you send\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fees smaller than this are considered zero fee (for relaying) (default:\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fee (in BTC/kB) to add to transactions you send (default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Find peers using DNS lookup (default: 1 unless -connect)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Force safe mode (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Generate coins (default: 0)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Get help for a command\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"How many blocks to check at startup (default: 288, 0 = all)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"If <category> is not supplied, output all debugging information.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Importing...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Imports blocks from external blk000??.dat file\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Include IP addresses in debug output (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Incorrect or no genesis block found. Wrong datadir for network?\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Information\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Initialization sanity check failed. Bitcoin Core is shutting down.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Insufficient funds\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid -onion address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid -proxy address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -minrelaytxfee=<amount>: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -mintxfee=<amount>: '%s'\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -paytxfee=<amount>: '%s' (must be at least %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -paytxfee=<amount>: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Keep at most <n> unconnectable blocks in memory (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Limit size of signature cache to <n> entries (default: 50000)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"List commands\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Listen for connections on <port> (default: 8333 or testnet: 18333)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading addresses...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading block index...\"),\n@@ -203,6 +221,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maintain a full transaction index (default: 0\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maintain at most <n> connections to peers (default: 125)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Node relay options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Not enough file descriptors available.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only accept block chain matching built-in checkpoints (default: 1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\"),\n@@ -212,19 +231,16 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Prepend debug output with timestamp (default:\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Print block on startup, if found in block index\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Print block tree on startup (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"RPC client options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"RPC server options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Randomly drop 1 of every <n> network messages\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Randomly fuzz 1 of every <n> network messages\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rebuild block chain index from current blk000??.dat files\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Relay and mine data carrier transactions (default: 1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescan the block chain for missing wallet transactions\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescanning...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Run a thread to flush wallet periodically (default: 1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Run in the background as a daemon and accept commands\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Select SOCKS version for -proxy (4 or 5, default: 5)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send command to Bitcoin Core\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send commands to node running on <ip> (default: 127.0.0.1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to console instead of debug.log file\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server certificate file (default: server.cert)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server private key (default: server.pem)\"),\n@@ -245,29 +261,27 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify pid file (default: bitcoind.pid)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify wallet file (within data directory)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify your own public address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Spend unconfirmed change when sending transactions (default: 1)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Start Bitcoin Core Daemon\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Stop running after importing blocks from disk (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"System error: \"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This help message\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This is experimental software.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This is intended for regression testing tools and app development.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Threshold for disconnecting misbehaving peers (default: 100)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"To use the %s option\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction amount too small\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction amounts must be positive\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction too large\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to bind to %s on this computer (bind returned error %d, %s)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to bind to %s on this computer (bind returned error %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown -socks proxy version requested: %i\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown network specified in -onlynet: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Upgrade wallet to latest format\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Usage (deprecated, use bitcoin-cli):\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Usage:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use OpenSSL (https) for JSON-RPC connections\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use UPnP to map the listening port (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use UPnP to map the listening port (default: 1 when listening)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use the test network\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Username for JSON-RPC connections\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying blocks...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying wallet...\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wait for RPC server to start\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet %s resides outside data directory %s\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet needed to be rewritten: restart Bitcoin to complete\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet options:\"),\n@@ -277,6 +291,5 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: This version is obsolete, upgrade re\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"You need to rebuild the database using -reindex to change -txindex\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Zapping all transactions from wallet...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"on startup\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"version\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"wallet.dat corrupt, salvage failed\"),\n };"
      },
      {
        "sha": "089abd862c07b3dca096f6d07b5d925720b5974e",
        "filename": "src/qt/bitcoinunits.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoinunits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoinunits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -34,6 +34,17 @@ bool BitcoinUnits::valid(int unit)\n     }\n }\n \n+QString BitcoinUnits::id(int unit)\n+{\n+    switch(unit)\n+    {\n+    case BTC: return QString(\"btc\");\n+    case mBTC: return QString(\"mbtc\");\n+    case uBTC: return QString(\"ubtc\");\n+    default: return QString(\"???\");\n+    }\n+}\n+\n QString BitcoinUnits::name(int unit)\n {\n     switch(unit)\n@@ -188,6 +199,16 @@ bool BitcoinUnits::parse(int unit, const QString &value, qint64 *val_out)\n     return ok;\n }\n \n+QString BitcoinUnits::getAmountColumnTitle(int unit)\n+{\n+    QString amountTitle = QObject::tr(\"Amount\");\n+    if (BitcoinUnits::valid(unit))\n+    {\n+        amountTitle += \" (\"+BitcoinUnits::name(unit) + \")\";\n+    }\n+    return amountTitle;\n+}\n+\n int BitcoinUnits::rowCount(const QModelIndex &parent) const\n {\n     Q_UNUSED(parent);"
      },
      {
        "sha": "f8c679711f323fc5a7b5feb4322b51fc09397f0a",
        "filename": "src/qt/bitcoinunits.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoinunits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/bitcoinunits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -74,6 +74,8 @@ class BitcoinUnits: public QAbstractListModel\n     static QList<Unit> availableUnits();\n     //! Is unit ID valid?\n     static bool valid(int unit);\n+    //! Identifier, e.g. for image names\n+    static QString id(int unit);\n     //! Short name\n     static QString name(int unit);\n     //! Longer description\n@@ -93,6 +95,8 @@ class BitcoinUnits: public QAbstractListModel\n     static QString formatHtmlWithUnit(int unit, qint64 amount, bool plussign=false, SeparatorStyle separators=separatorStandard);\n     //! Parse string to coin amount\n     static bool parse(int unit, const QString &value, qint64 *val_out);\n+    //! Gets title for amount column including current display unit if optionsModel reference available */\n+    static QString getAmountColumnTitle(int unit);\n     ///@}\n \n     //! @name AbstractListModel implementation"
      },
      {
        "sha": "4c21eb5594e19796feaf4f162c08247c0a3ba12c",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 21,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -5,6 +5,7 @@\n #include \"clientmodel.h\"\n \n #include \"guiconstants.h\"\n+#include \"peertablemodel.h\"\n \n #include \"alert.h\"\n #include \"chainparams.h\"\n@@ -22,11 +23,14 @@\n static const int64_t nClientStartupTime = GetTime();\n \n ClientModel::ClientModel(OptionsModel *optionsModel, QObject *parent) :\n-    QObject(parent), optionsModel(optionsModel),\n-    cachedNumBlocks(0), cachedNumBlocksOfPeers(0),\n+    QObject(parent),\n+    optionsModel(optionsModel),\n+    peerTableModel(0),\n+    cachedNumBlocks(0),\n     cachedReindexing(0), cachedImporting(0),\n     numBlocksAtStartup(-1), pollTimer(0)\n {\n+    peerTableModel = new PeerTableModel(this);\n     pollTimer = new QTimer(this);\n     connect(pollTimer, SIGNAL(timeout()), this, SLOT(updateTimer()));\n     pollTimer->start(MODEL_UPDATE_DELAY);\n@@ -81,7 +85,7 @@ QDateTime ClientModel::getLastBlockDate() const\n     if (chainActive.Tip())\n         return QDateTime::fromTime_t(chainActive.Tip()->GetBlockTime());\n     else\n-        return QDateTime::fromTime_t(Params().GenesisBlock().nTime); // Genesis block's time of current network\n+        return QDateTime::fromTime_t(Params().GenesisBlock().GetBlockTime()); // Genesis block's time of current network\n }\n \n double ClientModel::getVerificationProgress() const\n@@ -101,19 +105,16 @@ void ClientModel::updateTimer()\n     // Some quantities (such as number of blocks) change so fast that we don't want to be notified for each change.\n     // Periodically check and update with a timer.\n     int newNumBlocks = getNumBlocks();\n-    int newNumBlocksOfPeers = getNumBlocksOfPeers();\n \n     // check for changed number of blocks we have, number of blocks peers claim to have, reindexing state and importing state\n-    if (cachedNumBlocks != newNumBlocks || cachedNumBlocksOfPeers != newNumBlocksOfPeers ||\n+    if (cachedNumBlocks != newNumBlocks ||\n         cachedReindexing != fReindex || cachedImporting != fImporting)\n     {\n         cachedNumBlocks = newNumBlocks;\n-        cachedNumBlocksOfPeers = newNumBlocksOfPeers;\n         cachedReindexing = fReindex;\n         cachedImporting = fImporting;\n \n-        // ensure we return the maximum of newNumBlocksOfPeers and newNumBlocks to not create weird displays in the GUI\n-        emit numBlocksChanged(newNumBlocks, std::max(newNumBlocksOfPeers, newNumBlocks));\n+        emit numBlocksChanged(newNumBlocks);\n     }\n \n     emit bytesChanged(getTotalBytesRecv(), getTotalBytesSent());\n@@ -141,14 +142,6 @@ void ClientModel::updateAlert(const QString &hash, int status)\n     emit alertsChanged(getStatusBarWarnings());\n }\n \n-QString ClientModel::getNetworkName() const\n-{\n-    QString netname(QString::fromStdString(Params().DataDir()));\n-    if(netname.isEmpty())\n-        netname = \"main\";\n-    return netname;\n-}\n-\n bool ClientModel::inInitialBlockDownload() const\n {\n     return IsInitialBlockDownload();\n@@ -166,11 +159,6 @@ enum BlockSource ClientModel::getBlockSource() const\n     return BLOCK_SOURCE_NONE;\n }\n \n-int ClientModel::getNumBlocksOfPeers() const\n-{\n-    return GetNumBlocksOfPeers();\n-}\n-\n QString ClientModel::getStatusBarWarnings() const\n {\n     return QString::fromStdString(GetWarnings(\"statusbar\"));\n@@ -181,6 +169,11 @@ OptionsModel *ClientModel::getOptionsModel()\n     return optionsModel;\n }\n \n+PeerTableModel *ClientModel::getPeerTableModel()\n+{\n+    return peerTableModel;\n+}\n+\n QString ClientModel::formatFullVersion() const\n {\n     return QString::fromStdString(FormatFullVersion());\n@@ -207,6 +200,14 @@ QString ClientModel::formatClientStartupTime() const\n }\n \n // Handlers for core signals\n+static void ShowProgress(ClientModel *clientmodel, const std::string &title, int nProgress)\n+{\n+    // emits signal \"showProgress\"\n+    QMetaObject::invokeMethod(clientmodel, \"showProgress\", Qt::QueuedConnection,\n+                              Q_ARG(QString, QString::fromStdString(title)),\n+                              Q_ARG(int, nProgress));\n+}\n+\n static void NotifyBlocksChanged(ClientModel *clientmodel)\n {\n     // This notification is too frequent. Don't trigger a signal.\n@@ -231,6 +232,7 @@ static void NotifyAlertChanged(ClientModel *clientmodel, const uint256 &hash, Ch\n void ClientModel::subscribeToCoreSignals()\n {\n     // Connect signals to client\n+    uiInterface.ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2));\n     uiInterface.NotifyBlocksChanged.connect(boost::bind(NotifyBlocksChanged, this));\n     uiInterface.NotifyNumConnectionsChanged.connect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.connect(boost::bind(NotifyAlertChanged, this, _1, _2));\n@@ -239,6 +241,7 @@ void ClientModel::subscribeToCoreSignals()\n void ClientModel::unsubscribeFromCoreSignals()\n {\n     // Disconnect signals from client\n+    uiInterface.ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n     uiInterface.NotifyBlocksChanged.disconnect(boost::bind(NotifyBlocksChanged, this));\n     uiInterface.NotifyNumConnectionsChanged.disconnect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.disconnect(boost::bind(NotifyAlertChanged, this, _1, _2));"
      },
      {
        "sha": "c7bd60bd4131c6539485375fed51bbc2d25827f4",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -9,6 +9,7 @@\n \n class AddressTableModel;\n class OptionsModel;\n+class PeerTableModel;\n class TransactionTableModel;\n \n class CWallet;\n@@ -42,6 +43,7 @@ class ClientModel : public QObject\n     ~ClientModel();\n \n     OptionsModel *getOptionsModel();\n+    PeerTableModel *getPeerTableModel();\n \n     //! Return number of connections, default is in- and outbound (total)\n     int getNumConnections(unsigned int flags = CONNECTIONS_ALL) const;\n@@ -54,14 +56,10 @@ class ClientModel : public QObject\n     double getVerificationProgress() const;\n     QDateTime getLastBlockDate() const;\n \n-    //! Return network (main, testnet3, regtest)\n-    QString getNetworkName() const;\n     //! Return true if core is doing initial block download\n     bool inInitialBlockDownload() const;\n     //! Return true if core is importing blocks\n     enum BlockSource getBlockSource() const;\n-    //! Return conservative estimate of total number of blocks, or 0 if unknown\n-    int getNumBlocksOfPeers() const;\n     //! Return warnings to be displayed in status bar\n     QString getStatusBarWarnings() const;\n \n@@ -73,9 +71,9 @@ class ClientModel : public QObject\n \n private:\n     OptionsModel *optionsModel;\n+    PeerTableModel *peerTableModel;\n \n     int cachedNumBlocks;\n-    int cachedNumBlocksOfPeers;\n     bool cachedReindexing;\n     bool cachedImporting;\n \n@@ -88,13 +86,16 @@ class ClientModel : public QObject\n \n signals:\n     void numConnectionsChanged(int count);\n-    void numBlocksChanged(int count, int countOfPeers);\n+    void numBlocksChanged(int count);\n     void alertsChanged(const QString &warnings);\n     void bytesChanged(quint64 totalBytesIn, quint64 totalBytesOut);\n \n     //! Fired when a message should be reported to the user\n     void message(const QString &title, const QString &message, unsigned int style);\n \n+    // Show progress dialog e.g. for verifychain\n+    void showProgress(const QString &title, int nProgress);\n+\n public slots:\n     void updateTimer();\n     void updateNumConnections(int numConnections);"
      },
      {
        "sha": "c73cf416a8895d70a724ae150a74f6ba3884ab11",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 58,
        "changes": 111,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -16,6 +16,8 @@\n #include \"main.h\"\n #include \"wallet.h\"\n \n+#include <boost/assign/list_of.hpp> // for 'map_list_of()'\n+\n #include <QApplication>\n #include <QCheckBox>\n #include <QCursor>\n@@ -71,7 +73,7 @@ CoinControlDialog::CoinControlDialog(QWidget *parent) :\n     QAction *clipboardAfterFeeAction = new QAction(tr(\"Copy after fee\"), this);\n     QAction *clipboardBytesAction = new QAction(tr(\"Copy bytes\"), this);\n     QAction *clipboardPriorityAction = new QAction(tr(\"Copy priority\"), this);\n-    QAction *clipboardLowOutputAction = new QAction(tr(\"Copy low output\"), this);\n+    QAction *clipboardLowOutputAction = new QAction(tr(\"Copy dust\"), this);\n     QAction *clipboardChangeAction = new QAction(tr(\"Copy change\"), this);\n \n     connect(clipboardQuantityAction, SIGNAL(triggered()), this, SLOT(clipboardQuantity()));\n@@ -309,7 +311,7 @@ void CoinControlDialog::clipboardPriority()\n     GUIUtil::setClipboard(ui->labelCoinControlPriority->text());\n }\n \n-// copy label \"Low output\" to clipboard\n+// copy label \"Dust\" to clipboard\n void CoinControlDialog::clipboardLowOutput()\n {\n     GUIUtil::setClipboard(ui->labelCoinControlLowOutput->text());\n@@ -400,23 +402,24 @@ void CoinControlDialog::viewItemChanged(QTreeWidgetItem* item, int column)\n }\n \n // return human readable label for priority number\n-QString CoinControlDialog::getPriorityLabel(double dPriority)\n+QString CoinControlDialog::getPriorityLabel(const CTxMemPool& pool, double dPriority)\n {\n-    if (AllowFree(dPriority)) // at least medium\n+    // confirmations -> textual description\n+    typedef std::map<unsigned int, QString> PriorityDescription;\n+    const static PriorityDescription priorityDescriptions = boost::assign::map_list_of\n+        (1, tr(\"highest\"))(2, tr(\"higher\"))(3, tr(\"high\"))\n+        (5, tr(\"medium-high\"))(6, tr(\"medium\"))\n+        (10, tr(\"low-medium\"))(15, tr(\"low\"))\n+        (20, tr(\"lower\"));\n+\n+    BOOST_FOREACH(const PriorityDescription::value_type& i, priorityDescriptions)\n     {\n-        if      (AllowFree(dPriority / 1000000))  return tr(\"highest\");\n-        else if (AllowFree(dPriority / 100000))   return tr(\"higher\");\n-        else if (AllowFree(dPriority / 10000))    return tr(\"high\");\n-        else if (AllowFree(dPriority / 1000))     return tr(\"medium-high\");\n-        else                                      return tr(\"medium\");\n-    }\n-    else\n-    {\n-        if      (AllowFree(dPriority * 10))   return tr(\"low-medium\");\n-        else if (AllowFree(dPriority * 100))  return tr(\"low\");\n-        else if (AllowFree(dPriority * 1000)) return tr(\"lower\");\n-        else                                  return tr(\"lowest\");\n+        double p = mempool.estimatePriority(i.first);\n+        if (p > 0 && dPriority >= p) return i.second;\n     }\n+    // Note: if mempool hasn't accumulated enough history (estimatePriority\n+    // returns -1) we're conservative and classify as \"lowest\"\n+    return tr(\"lowest\");\n }\n \n // shows count of locked unspent outputs\n@@ -439,21 +442,17 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n     // nPayAmount\n     qint64 nPayAmount = 0;\n-    bool fLowOutput = false;\n     bool fDust = false;\n-    CTransaction txDummy;\n+    CMutableTransaction txDummy;\n     foreach(const qint64 &amount, CoinControlDialog::payAmounts)\n     {\n         nPayAmount += amount;\n \n         if (amount > 0)\n         {\n-            if (amount < CENT)\n-                fLowOutput = true;\n-\n             CTxOut txout(amount, (CScript)vector<unsigned char>(24, 0));\n             txDummy.vout.push_back(txout);\n-            if (txout.IsDust(CTransaction::nMinRelayTxFee))\n+            if (txout.IsDust(::minRelayTxFee))\n                fDust = true;\n         }\n     }\n@@ -522,40 +521,27 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n         // Priority\n         dPriority = dPriorityInputs / (nBytes - nBytesInputs + (nQuantityUncompressed * 29)); // 29 = 180 - 151 (uncompressed public keys are over the limit. max 151 bytes of the input are ignored for priority)\n-        sPriorityLabel = CoinControlDialog::getPriorityLabel(dPriority);\n-\n-        // Fee\n-        int64_t nFee = nTransactionFee * (1 + (int64_t)nBytes / 1000);\n+        sPriorityLabel = CoinControlDialog::getPriorityLabel(mempool, dPriority);\n \n         // Min Fee\n-        int64_t nMinFee = GetMinFee(txDummy, nBytes, AllowFree(dPriority), GMF_SEND);\n+        nPayFee = CWallet::GetMinimumFee(nBytes, nTxConfirmTarget, mempool);\n+\n+        double dPriorityNeeded = mempool.estimatePriority(nTxConfirmTarget);\n+        if (dPriorityNeeded <= 0) // Not enough mempool history: never send free\n+            dPriorityNeeded = std::numeric_limits<double>::max();\n \n-        nPayFee = max(nFee, nMinFee);\n+        if (nBytes <= MAX_FREE_TRANSACTION_CREATE_SIZE && dPriority >= dPriorityNeeded)\n+            nPayFee = 0;\n \n         if (nPayAmount > 0)\n         {\n             nChange = nAmount - nPayFee - nPayAmount;\n \n-            // if sub-cent change is required, the fee must be raised to at least CTransaction::nMinTxFee\n-            if (nPayFee < CTransaction::nMinTxFee && nChange > 0 && nChange < CENT)\n-            {\n-                if (nChange < CTransaction::nMinTxFee) // change < 0.0001 => simply move all change to fees\n-                {\n-                    nPayFee += nChange;\n-                    nChange = 0;\n-                }\n-                else\n-                {\n-                    nChange = nChange + nPayFee - CTransaction::nMinTxFee;\n-                    nPayFee = CTransaction::nMinTxFee;\n-                }\n-            }\n-\n             // Never create dust outputs; if we would, just add the dust to the fee.\n             if (nChange > 0 && nChange < CENT)\n             {\n                 CTxOut txout(nChange, (CScript)vector<unsigned char>(24, 0));\n-                if (txout.IsDust(CTransaction::nMinRelayTxFee))\n+                if (txout.IsDust(::minRelayTxFee))\n                 {\n                     nPayFee += nChange;\n                     nChange = 0;\n@@ -586,7 +572,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     QLabel *l7 = dialog->findChild<QLabel *>(\"labelCoinControlLowOutput\");\n     QLabel *l8 = dialog->findChild<QLabel *>(\"labelCoinControlChange\");\n \n-    // enable/disable \"low output\" and \"change\"\n+    // enable/disable \"dust\" and \"change\"\n     dialog->findChild<QLabel *>(\"labelCoinControlLowOutputText\")->setEnabled(nPayAmount > 0);\n     dialog->findChild<QLabel *>(\"labelCoinControlLowOutput\")    ->setEnabled(nPayAmount > 0);\n     dialog->findChild<QLabel *>(\"labelCoinControlChangeText\")   ->setEnabled(nPayAmount > 0);\n@@ -599,35 +585,44 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     l4->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nAfterFee));      // After Fee\n     l5->setText(((nBytes > 0) ? \"~\" : \"\") + QString::number(nBytes));        // Bytes\n     l6->setText(sPriorityLabel);                                             // Priority\n-    l7->setText((fLowOutput ? (fDust ? tr(\"Dust\") : tr(\"yes\")) : tr(\"no\"))); // Low Output / Dust\n+    l7->setText(fDust ? tr(\"yes\") : tr(\"no\"));                               // Dust\n     l8->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nChange));        // Change\n+    if (nPayFee > 0)\n+    {\n+        l3->setText(\"~\" + l3->text());\n+        l4->setText(\"~\" + l4->text());\n+        if (nChange > 0)\n+            l8->setText(\"~\" + l8->text());\n+    }\n \n     // turn labels \"red\"\n-    l5->setStyleSheet((nBytes >= 1000) ? \"color:red;\" : \"\");                            // Bytes >= 1000\n+    l5->setStyleSheet((nBytes >= MAX_FREE_TRANSACTION_CREATE_SIZE) ? \"color:red;\" : \"\");// Bytes >= 1000\n     l6->setStyleSheet((dPriority > 0 && !AllowFree(dPriority)) ? \"color:red;\" : \"\");    // Priority < \"medium\"\n-    l7->setStyleSheet((fLowOutput) ? \"color:red;\" : \"\");                                // Low Output = \"yes\"\n-    l8->setStyleSheet((nChange > 0 && nChange < CENT) ? \"color:red;\" : \"\");             // Change < 0.01BTC\n+    l7->setStyleSheet((fDust) ? \"color:red;\" : \"\");                                     // Dust = \"yes\"\n \n     // tool tips\n     QString toolTip1 = tr(\"This label turns red, if the transaction size is greater than 1000 bytes.\") + \"<br /><br />\";\n-    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)) + \"<br /><br />\";\n+    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::minTxFee.GetFeePerK())) + \"<br /><br />\";\n     toolTip1 += tr(\"Can vary +/- 1 byte per input.\");\n \n     QString toolTip2 = tr(\"Transactions with higher priority are more likely to get included into a block.\") + \"<br /><br />\";\n     toolTip2 += tr(\"This label turns red, if the priority is smaller than \\\"medium\\\".\") + \"<br /><br />\";\n-    toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee));\n+    toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CWallet::minTxFee.GetFeePerK()));\n \n-    QString toolTip3 = tr(\"This label turns red, if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CENT)) + \"<br /><br />\";\n-    toolTip3 += tr(\"This means a fee of at least %1 is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)) + \"<br /><br />\";\n-    toolTip3 += tr(\"Amounts below 0.546 times the minimum relay fee are shown as dust.\");\n+    QString toolTip3 = tr(\"This label turns red, if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, ::minRelayTxFee.GetFee(546)));\n \n-    QString toolTip4 = tr(\"This label turns red, if the change is smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CENT)) + \"<br /><br />\";\n-    toolTip4 += tr(\"This means a fee of at least %1 is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee));\n+    // how many satoshis the estimated fee can vary per byte we guess wrong\n+    double dFeeVary = (double)std::max(CWallet::minTxFee.GetFeePerK(), payTxFee.GetFeePerK()) / 1000;\n+    QString toolTip4 = tr(\"Can vary +/- %1 satoshi(s) per input.\").arg(dFeeVary);\n \n+    l3->setToolTip(toolTip4);\n+    l4->setToolTip(toolTip4);\n     l5->setToolTip(toolTip1);\n     l6->setToolTip(toolTip2);\n     l7->setToolTip(toolTip3);\n     l8->setToolTip(toolTip4);\n+    dialog->findChild<QLabel *>(\"labelCoinControlFeeText\")      ->setToolTip(l3->toolTip());\n+    dialog->findChild<QLabel *>(\"labelCoinControlAfterFeeText\") ->setToolTip(l4->toolTip());\n     dialog->findChild<QLabel *>(\"labelCoinControlBytesText\")    ->setToolTip(l5->toolTip());\n     dialog->findChild<QLabel *>(\"labelCoinControlPriorityText\") ->setToolTip(l6->toolTip());\n     dialog->findChild<QLabel *>(\"labelCoinControlLowOutputText\")->setToolTip(l7->toolTip());\n@@ -742,7 +737,7 @@ void CoinControlDialog::updateView()\n \n             // priority\n             double dPriority = ((double)out.tx->vout[out.i].nValue  / (nInputSize + 78)) * (out.nDepth+1); // 78 = 2 * 34 + 10\n-            itemOutput->setText(COLUMN_PRIORITY, CoinControlDialog::getPriorityLabel(dPriority));\n+            itemOutput->setText(COLUMN_PRIORITY, CoinControlDialog::getPriorityLabel(mempool, dPriority));\n             itemOutput->setText(COLUMN_PRIORITY_INT64, strPad(QString::number((int64_t)dPriority), 20, \" \"));\n             dPrioritySum += (double)out.tx->vout[out.i].nValue  * (out.nDepth+1);\n             nInputSum    += nInputSize;\n@@ -775,7 +770,7 @@ void CoinControlDialog::updateView()\n             itemWalletAddress->setText(COLUMN_CHECKBOX, \"(\" + QString::number(nChildren) + \")\");\n             itemWalletAddress->setText(COLUMN_AMOUNT, BitcoinUnits::format(nDisplayUnit, nSum));\n             itemWalletAddress->setText(COLUMN_AMOUNT_INT64, strPad(QString::number(nSum), 15, \" \"));\n-            itemWalletAddress->setText(COLUMN_PRIORITY, CoinControlDialog::getPriorityLabel(dPrioritySum));\n+            itemWalletAddress->setText(COLUMN_PRIORITY, CoinControlDialog::getPriorityLabel(mempool, dPrioritySum));\n             itemWalletAddress->setText(COLUMN_PRIORITY_INT64, strPad(QString::number((int64_t)dPrioritySum), 20, \" \"));\n         }\n     }"
      },
      {
        "sha": "4f7422642fd19196d858d95ca25fa71ee57b1076",
        "filename": "src/qt/coincontroldialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -19,6 +19,7 @@ namespace Ui {\n }\n class WalletModel;\n class CCoinControl;\n+class CTxMemPool;\n \n class CoinControlDialog : public QDialog\n {\n@@ -32,7 +33,7 @@ class CoinControlDialog : public QDialog\n \n     // static because also called from sendcoinsdialog\n     static void updateLabels(WalletModel*, QDialog*);\n-    static QString getPriorityLabel(double);\n+    static QString getPriorityLabel(const CTxMemPool& pool, double);\n \n     static QList<qint64> payAmounts;\n     static CCoinControl *coinControl;"
      },
      {
        "sha": "3ab4675bf3ee3ba3556ef11bb1d37cff346d0b11",
        "filename": "src/qt/forms/aboutdialog.ui",
        "status": "removed",
        "additions": 0,
        "deletions": 189,
        "changes": 189,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/qt/forms/aboutdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/qt/forms/aboutdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/aboutdialog.ui?ref=2e4fee2ac4824570c1340a8f8fe2aed4580de879",
        "patch": "@@ -1,189 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<ui version=\"4.0\">\n- <class>AboutDialog</class>\n- <widget class=\"QDialog\" name=\"AboutDialog\">\n-  <property name=\"geometry\">\n-   <rect>\n-    <x>0</x>\n-    <y>0</y>\n-    <width>593</width>\n-    <height>319</height>\n-   </rect>\n-  </property>\n-  <property name=\"windowTitle\">\n-   <string>About Bitcoin Core</string>\n-  </property>\n-  <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n-   <item>\n-    <widget class=\"QLabel\" name=\"label_4\">\n-     <property name=\"sizePolicy\">\n-      <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Ignored\">\n-       <horstretch>0</horstretch>\n-       <verstretch>0</verstretch>\n-      </sizepolicy>\n-     </property>\n-     <property name=\"pixmap\">\n-      <pixmap resource=\"../bitcoin.qrc\">:/images/about</pixmap>\n-     </property>\n-    </widget>\n-   </item>\n-   <item>\n-    <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\">\n-     <item>\n-      <spacer name=\"verticalSpacer_2\">\n-       <property name=\"orientation\">\n-        <enum>Qt::Vertical</enum>\n-       </property>\n-       <property name=\"sizeHint\" stdset=\"0\">\n-        <size>\n-         <width>20</width>\n-         <height>40</height>\n-        </size>\n-       </property>\n-      </spacer>\n-     </item>\n-     <item>\n-      <layout class=\"QHBoxLayout\" name=\"horizontalLayout\">\n-       <item>\n-        <widget class=\"QLabel\" name=\"label\">\n-         <property name=\"cursor\">\n-          <cursorShape>IBeamCursor</cursorShape>\n-         </property>\n-         <property name=\"text\">\n-          <string>&lt;b&gt;Bitcoin Core&lt;/b&gt; version</string>\n-         </property>\n-         <property name=\"textInteractionFlags\">\n-          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-         </property>\n-        </widget>\n-       </item>\n-       <item>\n-        <widget class=\"QLabel\" name=\"versionLabel\">\n-         <property name=\"cursor\">\n-          <cursorShape>IBeamCursor</cursorShape>\n-         </property>\n-         <property name=\"text\">\n-          <string notr=\"true\">0.3.666-beta</string>\n-         </property>\n-         <property name=\"textInteractionFlags\">\n-          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-         </property>\n-        </widget>\n-       </item>\n-       <item>\n-        <spacer name=\"horizontalSpacer\">\n-         <property name=\"orientation\">\n-          <enum>Qt::Horizontal</enum>\n-         </property>\n-         <property name=\"sizeHint\" stdset=\"0\">\n-          <size>\n-           <width>40</width>\n-           <height>20</height>\n-          </size>\n-         </property>\n-        </spacer>\n-       </item>\n-      </layout>\n-     </item>\n-     <item>\n-      <widget class=\"QLabel\" name=\"copyrightLabel\">\n-       <property name=\"cursor\">\n-        <cursorShape>IBeamCursor</cursorShape>\n-       </property>\n-       <property name=\"text\">\n-        <string notr=\"true\">Copyright &amp;copy; 2009-YYYY The Bitcoin Core developers</string>\n-       </property>\n-       <property name=\"textFormat\">\n-        <enum>Qt::RichText</enum>\n-       </property>\n-       <property name=\"textInteractionFlags\">\n-        <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-       </property>\n-      </widget>\n-     </item>\n-     <item>\n-      <widget class=\"QLabel\" name=\"label_2\">\n-       <property name=\"cursor\">\n-        <cursorShape>IBeamCursor</cursorShape>\n-       </property>\n-       <property name=\"text\">\n-        <string>\n-This is experimental software.\n-\n-Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.</string>\n-       </property>\n-       <property name=\"wordWrap\">\n-        <bool>true</bool>\n-       </property>\n-       <property name=\"textInteractionFlags\">\n-        <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-       </property>\n-      </widget>\n-     </item>\n-     <item>\n-      <spacer name=\"verticalSpacer\">\n-       <property name=\"orientation\">\n-        <enum>Qt::Vertical</enum>\n-       </property>\n-       <property name=\"sizeHint\" stdset=\"0\">\n-        <size>\n-         <width>20</width>\n-         <height>40</height>\n-        </size>\n-       </property>\n-      </spacer>\n-     </item>\n-     <item>\n-      <widget class=\"QDialogButtonBox\" name=\"buttonBox\">\n-       <property name=\"orientation\">\n-        <enum>Qt::Horizontal</enum>\n-       </property>\n-       <property name=\"standardButtons\">\n-        <set>QDialogButtonBox::Ok</set>\n-       </property>\n-      </widget>\n-     </item>\n-    </layout>\n-   </item>\n-  </layout>\n- </widget>\n- <resources>\n-  <include location=\"../bitcoin.qrc\"/>\n- </resources>\n- <connections>\n-  <connection>\n-   <sender>buttonBox</sender>\n-   <signal>accepted()</signal>\n-   <receiver>AboutDialog</receiver>\n-   <slot>accept()</slot>\n-   <hints>\n-    <hint type=\"sourcelabel\">\n-     <x>20</x>\n-     <y>20</y>\n-    </hint>\n-    <hint type=\"destinationlabel\">\n-     <x>20</x>\n-     <y>20</y>\n-    </hint>\n-   </hints>\n-  </connection>\n-  <connection>\n-   <sender>buttonBox</sender>\n-   <signal>rejected()</signal>\n-   <receiver>AboutDialog</receiver>\n-   <slot>reject()</slot>\n-   <hints>\n-    <hint type=\"sourcelabel\">\n-     <x>20</x>\n-     <y>20</y>\n-    </hint>\n-    <hint type=\"destinationlabel\">\n-     <x>20</x>\n-     <y>20</y>\n-    </hint>\n-   </hints>\n-  </connection>\n- </connections>\n-</ui>"
      },
      {
        "sha": "67ea3a9d8c5378ed44017b4180de2bf653228ce1",
        "filename": "src/qt/forms/coincontroldialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/coincontroldialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/coincontroldialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/coincontroldialog.ui?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -225,7 +225,7 @@\n           </font>\n          </property>\n          <property name=\"text\">\n-          <string>Low Output:</string>\n+          <string>Dust:</string>\n          </property>\n         </widget>\n        </item>"
      },
      {
        "sha": "81dbd90b12d7f3b52b172b022946781c195415ef",
        "filename": "src/qt/forms/helpmessagedialog.ui",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/helpmessagedialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/helpmessagedialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/helpmessagedialog.ui?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -16,7 +16,7 @@\n    </font>\n   </property>\n   <property name=\"windowTitle\">\n-   <string>Bitcoin Core - Command-line options</string>\n+   <string notr=\"true\">Bitcoin Core - Command-line options</string>\n   </property>\n   <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n    <item>\n@@ -54,17 +54,15 @@\n         <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\">\n          <item>\n           <widget class=\"QLabel\" name=\"helpMessageLabel\">\n-           <property name=\"font\">\n-            <font>\n-             <family>Terminal</family>\n-            </font>\n-           </property>\n            <property name=\"cursor\">\n             <cursorShape>IBeamCursor</cursorShape>\n            </property>\n            <property name=\"textFormat\">\n             <enum>Qt::PlainText</enum>\n            </property>\n+           <property name=\"openExternalLinks\">\n+            <bool>true</bool>\n+           </property>\n            <property name=\"textInteractionFlags\">\n             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n            </property>"
      },
      {
        "sha": "1f535a4a629fe862b28d98764889fbf67075621e",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 10,
        "deletions": 20,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -242,6 +242,16 @@\n          </property>\n         </widget>\n        </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"allowIncoming\">\n+         <property name=\"toolTip\">\n+          <string>Accept connections from outside</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>Allow incoming connections</string>\n+         </property>\n+        </widget>\n+       </item>\n        <item>\n         <widget class=\"QCheckBox\" name=\"connectSocks\">\n          <property name=\"toolTip\">\n@@ -318,26 +328,6 @@\n            </property>\n           </widget>\n          </item>\n-         <item>\n-          <widget class=\"QLabel\" name=\"socksVersionLabel\">\n-           <property name=\"text\">\n-            <string>SOCKS &amp;Version:</string>\n-           </property>\n-           <property name=\"textFormat\">\n-            <enum>Qt::PlainText</enum>\n-           </property>\n-           <property name=\"buddy\">\n-            <cstring>socksVersion</cstring>\n-           </property>\n-          </widget>\n-         </item>\n-         <item>\n-          <widget class=\"QValueComboBox\" name=\"socksVersion\">\n-           <property name=\"toolTip\">\n-            <string>SOCKS version of the proxy (e.g. 5)</string>\n-           </property>\n-          </widget>\n-         </item>\n          <item>\n           <spacer name=\"horizontalSpacer_1_Network\">\n            <property name=\"orientation\">"
      },
      {
        "sha": "8784da5f3e6f7471f85040d9fad21c52861a9056",
        "filename": "src/qt/forms/overviewpage.ui",
        "status": "modified",
        "additions": 349,
        "deletions": 184,
        "changes": 533,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/overviewpage.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/overviewpage.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/overviewpage.ui?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -6,7 +6,7 @@\n    <rect>\n     <x>0</x>\n     <y>0</y>\n-    <width>573</width>\n+    <width>596</width>\n     <height>342</height>\n    </rect>\n   </property>\n@@ -46,204 +46,369 @@\n           <item>\n            <layout class=\"QHBoxLayout\" name=\"horizontalLayout_4\">\n             <item>\n-             <widget class=\"QLabel\" name=\"label_5\">\n-              <property name=\"font\">\n-               <font>\n-                <weight>75</weight>\n-                <bold>true</bold>\n-               </font>\n-              </property>\n-              <property name=\"text\">\n-               <string>Wallet</string>\n-              </property>\n-             </widget>\n-            </item>\n-            <item>\n-             <widget class=\"QLabel\" name=\"labelWalletStatus\">\n-              <property name=\"toolTip\">\n-               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</string>\n-              </property>\n-              <property name=\"styleSheet\">\n-               <string notr=\"true\">QLabel { color: red; }</string>\n-              </property>\n-              <property name=\"text\">\n-               <string notr=\"true\">(out of sync)</string>\n-              </property>\n-              <property name=\"alignment\">\n-               <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n-              </property>\n-             </widget>\n+             <layout class=\"QHBoxLayout\" name=\"horizontalLayout_7\">\n+              <item>\n+               <widget class=\"QLabel\" name=\"label_5\">\n+                <property name=\"font\">\n+                 <font>\n+                  <weight>75</weight>\n+                  <bold>true</bold>\n+                 </font>\n+                </property>\n+                <property name=\"text\">\n+                 <string>Wallet</string>\n+                </property>\n+               </widget>\n+              </item>\n+              <item>\n+               <widget class=\"QLabel\" name=\"labelWalletStatus\">\n+                <property name=\"toolTip\">\n+                 <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</string>\n+                </property>\n+                <property name=\"styleSheet\">\n+                 <string notr=\"true\">QLabel { color: red; }</string>\n+                </property>\n+                <property name=\"text\">\n+                 <string notr=\"true\">(out of sync)</string>\n+                </property>\n+                <property name=\"alignment\">\n+                 <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>\n+                </property>\n+               </widget>\n+              </item>\n+             </layout>\n             </item>\n             <item>\n-             <spacer name=\"horizontalSpacer_2\">\n-              <property name=\"orientation\">\n-               <enum>Qt::Horizontal</enum>\n-              </property>\n-              <property name=\"sizeHint\" stdset=\"0\">\n-               <size>\n-                <width>40</width>\n-                <height>20</height>\n-               </size>\n-              </property>\n-             </spacer>\n+             <layout class=\"QHBoxLayout\" name=\"horizontalLayout_8\">\n+              <item>\n+               <widget class=\"QLabel\" name=\"labelWatchonly\">\n+                <property name=\"font\">\n+                 <font>\n+                  <weight>75</weight>\n+                  <bold>true</bold>\n+                 </font>\n+                </property>\n+                <property name=\"text\">\n+                 <string>Watchonly:</string>\n+                </property>\n+                <property name=\"alignment\">\n+                 <set>Qt::AlignCenter</set>\n+                </property>\n+               </widget>\n+              </item>\n+              <item>\n+               <spacer name=\"horizontalSpacer_2\">\n+                <property name=\"orientation\">\n+                 <enum>Qt::Horizontal</enum>\n+                </property>\n+                <property name=\"sizeType\">\n+                 <enum>QSizePolicy::Preferred</enum>\n+                </property>\n+                <property name=\"sizeHint\" stdset=\"0\">\n+                 <size>\n+                  <width>40</width>\n+                  <height>20</height>\n+                 </size>\n+                </property>\n+               </spacer>\n+              </item>\n+             </layout>\n             </item>\n            </layout>\n           </item>\n           <item>\n-          <layout class=\"QHBoxLayout\" name=\"horizontalLayout_3\">\n-           <item>\n-           <layout class=\"QFormLayout\" name=\"formLayout_2\">\n-            <property name=\"fieldGrowthPolicy\">\n-             <enum>QFormLayout::AllNonFixedFieldsGrow</enum>\n-            </property>\n-            <property name=\"horizontalSpacing\">\n-             <number>12</number>\n-            </property>\n-            <property name=\"verticalSpacing\">\n-             <number>12</number>\n-            </property>\n-            <item row=\"0\" column=\"0\">\n-             <widget class=\"QLabel\" name=\"label\">\n-              <property name=\"text\">\n-               <string>Available:</string>\n-              </property>\n-             </widget>\n-            </item>\n-            <item row=\"0\" column=\"1\">\n-             <widget class=\"QLabel\" name=\"labelBalance\">\n-              <property name=\"font\">\n-               <font>\n-                <weight>75</weight>\n-                <bold>true</bold>\n-               </font>\n-              </property>\n-              <property name=\"cursor\">\n-               <cursorShape>IBeamCursor</cursorShape>\n-              </property>\n-              <property name=\"toolTip\">\n-               <string>Your current spendable balance</string>\n-              </property>\n-              <property name=\"text\">\n-               <string notr=\"true\">0 BTC</string>\n-              </property>\n-              <property name=\"alignment\">\n-               <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n-              </property>\n-              <property name=\"textInteractionFlags\">\n-               <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-              </property>\n-             </widget>\n-            </item>\n-            <item row=\"1\" column=\"0\">\n-             <widget class=\"QLabel\" name=\"label_3\">\n-              <property name=\"text\">\n-               <string>Pending:</string>\n-              </property>\n-             </widget>\n-            </item>\n-            <item row=\"1\" column=\"1\">\n-             <widget class=\"QLabel\" name=\"labelUnconfirmed\">\n-              <property name=\"font\">\n-               <font>\n-                <weight>75</weight>\n-                <bold>true</bold>\n-               </font>\n-              </property>\n-              <property name=\"cursor\">\n-               <cursorShape>IBeamCursor</cursorShape>\n-              </property>\n-              <property name=\"toolTip\">\n-               <string>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</string>\n-              </property>\n-              <property name=\"text\">\n-               <string notr=\"true\">0 BTC</string>\n-              </property>\n-              <property name=\"alignment\">\n-               <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n-              </property>\n-              <property name=\"textInteractionFlags\">\n-               <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-              </property>\n-             </widget>\n-            </item>\n-            <item row=\"2\" column=\"0\">\n-             <widget class=\"QLabel\" name=\"labelImmatureText\">\n-              <property name=\"text\">\n-               <string>Immature:</string>\n-              </property>\n-             </widget>\n-            </item>\n-            <item row=\"2\" column=\"1\">\n-             <widget class=\"QLabel\" name=\"labelImmature\">\n-              <property name=\"font\">\n-               <font>\n-                <weight>75</weight>\n-                <bold>true</bold>\n-               </font>\n-              </property>\n-              <property name=\"toolTip\">\n-               <string>Mined balance that has not yet matured</string>\n-              </property>\n-              <property name=\"text\">\n-               <string notr=\"true\">0 BTC</string>\n-              </property>\n-              <property name=\"alignment\">\n-               <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n-              </property>\n-              <property name=\"textInteractionFlags\">\n-               <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-              </property>\n-             </widget>\n-            </item>\n-            <item row=\"4\" column=\"0\">\n-             <widget class=\"QLabel\" name=\"labelTotalText\">\n-              <property name=\"text\">\n-               <string>Total:</string>\n-              </property>\n-             </widget>\n-            </item>\n-            <item row=\"4\" column=\"1\">\n-             <widget class=\"QLabel\" name=\"labelTotal\">\n-              <property name=\"font\">\n-               <font>\n-                <weight>75</weight>\n-                <bold>true</bold>\n-               </font>\n-              </property>\n-              <property name=\"cursor\">\n-               <cursorShape>IBeamCursor</cursorShape>\n-              </property>\n-              <property name=\"toolTip\">\n-               <string>Your current total balance</string>\n-              </property>\n-              <property name=\"text\">\n-               <string notr=\"true\">0 BTC</string>\n-              </property>\n-              <property name=\"alignment\">\n-               <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n-              </property>\n-              <property name=\"textInteractionFlags\">\n-               <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-              </property>\n-             </widget>\n+           <layout class=\"QHBoxLayout\" name=\"horizontalLayout_3\">\n+            <item>\n+             <layout class=\"QFormLayout\" name=\"formLayout_2\">\n+              <property name=\"fieldGrowthPolicy\">\n+               <enum>QFormLayout::AllNonFixedFieldsGrow</enum>\n+              </property>\n+              <property name=\"horizontalSpacing\">\n+               <number>12</number>\n+              </property>\n+              <property name=\"verticalSpacing\">\n+               <number>12</number>\n+              </property>\n+              <item row=\"0\" column=\"0\">\n+               <widget class=\"QLabel\" name=\"label\">\n+                <property name=\"text\">\n+                 <string>Available:</string>\n+                </property>\n+               </widget>\n+              </item>\n+              <item row=\"0\" column=\"1\">\n+               <widget class=\"QLabel\" name=\"labelBalance\">\n+                <property name=\"font\">\n+                 <font>\n+                  <weight>75</weight>\n+                  <bold>true</bold>\n+                 </font>\n+                </property>\n+                <property name=\"cursor\">\n+                 <cursorShape>IBeamCursor</cursorShape>\n+                </property>\n+                <property name=\"toolTip\">\n+                 <string>Your current spendable balance</string>\n+                </property>\n+                <property name=\"text\">\n+                 <string notr=\"true\">0 BTC</string>\n+                </property>\n+                <property name=\"alignment\">\n+                 <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+                </property>\n+                <property name=\"textInteractionFlags\">\n+                 <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                </property>\n+               </widget>\n+              </item>\n+              <item row=\"1\" column=\"0\">\n+               <widget class=\"QLabel\" name=\"label_3\">\n+                <property name=\"text\">\n+                 <string>Pending:</string>\n+                </property>\n+               </widget>\n+              </item>\n+              <item row=\"1\" column=\"1\">\n+               <widget class=\"QLabel\" name=\"labelUnconfirmed\">\n+                <property name=\"font\">\n+                 <font>\n+                  <weight>75</weight>\n+                  <bold>true</bold>\n+                 </font>\n+                </property>\n+                <property name=\"cursor\">\n+                 <cursorShape>IBeamCursor</cursorShape>\n+                </property>\n+                <property name=\"toolTip\">\n+                 <string>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</string>\n+                </property>\n+                <property name=\"text\">\n+                 <string notr=\"true\">0 BTC</string>\n+                </property>\n+                <property name=\"alignment\">\n+                 <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+                </property>\n+                <property name=\"textInteractionFlags\">\n+                 <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                </property>\n+               </widget>\n+              </item>\n+              <item row=\"2\" column=\"0\">\n+               <widget class=\"QLabel\" name=\"labelImmatureText\">\n+                <property name=\"text\">\n+                 <string>Immature:</string>\n+                </property>\n+               </widget>\n+              </item>\n+              <item row=\"2\" column=\"1\">\n+               <widget class=\"QLabel\" name=\"labelImmature\">\n+                <property name=\"font\">\n+                 <font>\n+                  <weight>75</weight>\n+                  <bold>true</bold>\n+                 </font>\n+                </property>\n+                <property name=\"cursor\">\n+                 <cursorShape>IBeamCursor</cursorShape>\n+                </property>\n+                <property name=\"toolTip\">\n+                 <string>Mined balance that has not yet matured</string>\n+                </property>\n+                <property name=\"text\">\n+                 <string notr=\"true\">0 BTC</string>\n+                </property>\n+                <property name=\"alignment\">\n+                 <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+                </property>\n+                <property name=\"textInteractionFlags\">\n+                 <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                </property>\n+               </widget>\n+              </item>\n+              <item row=\"3\" column=\"0\" colspan=\"2\">\n+               <widget class=\"Line\" name=\"line\">\n+                <property name=\"orientation\">\n+                 <enum>Qt::Horizontal</enum>\n+                </property>\n+               </widget>\n+              </item>\n+              <item row=\"4\" column=\"0\">\n+               <widget class=\"QLabel\" name=\"labelTotalText\">\n+                <property name=\"text\">\n+                 <string>Total:</string>\n+                </property>\n+               </widget>\n+              </item>\n+              <item row=\"4\" column=\"1\">\n+               <widget class=\"QLabel\" name=\"labelTotal\">\n+                <property name=\"font\">\n+                 <font>\n+                  <weight>75</weight>\n+                  <bold>true</bold>\n+                 </font>\n+                </property>\n+                <property name=\"cursor\">\n+                 <cursorShape>IBeamCursor</cursorShape>\n+                </property>\n+                <property name=\"toolTip\">\n+                 <string>Your current total balance</string>\n+                </property>\n+                <property name=\"text\">\n+                 <string notr=\"true\">0 BTC</string>\n+                </property>\n+                <property name=\"alignment\">\n+                 <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+                </property>\n+                <property name=\"textInteractionFlags\">\n+                 <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                </property>\n+               </widget>\n+              </item>\n+             </layout>\n             </item>\n-            <item row=\"3\" column=\"0\" colspan=\"2\">\n-             <widget class=\"Line\" name=\"line\">\n-              <property name=\"orientation\">\n-               <enum>Qt::Horizontal</enum>\n-              </property>\n-             </widget>\n+            <item>\n+             <layout class=\"QFormLayout\" name=\"formLayout\">\n+              <property name=\"fieldGrowthPolicy\">\n+               <enum>QFormLayout::AllNonFixedFieldsGrow</enum>\n+              </property>\n+              <property name=\"horizontalSpacing\">\n+               <number>12</number>\n+              </property>\n+              <property name=\"verticalSpacing\">\n+               <number>12</number>\n+              </property>\n+              <item row=\"0\" column=\"1\">\n+               <widget class=\"QLabel\" name=\"labelWatchAvailable\">\n+                <property name=\"font\">\n+                 <font>\n+                  <weight>75</weight>\n+                  <bold>true</bold>\n+                 </font>\n+                </property>\n+                <property name=\"cursor\">\n+                 <cursorShape>IBeamCursor</cursorShape>\n+                </property>\n+                <property name=\"toolTip\">\n+                 <string>Your current balance in watchonly addresses</string>\n+                </property>\n+                <property name=\"text\">\n+                 <string>0 BTC</string>\n+                </property>\n+                <property name=\"alignment\">\n+                 <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+                </property>\n+                <property name=\"textInteractionFlags\">\n+                 <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                </property>\n+               </widget>\n+              </item>\n+              <item row=\"1\" column=\"1\">\n+               <widget class=\"QLabel\" name=\"labelWatchPending\">\n+                <property name=\"font\">\n+                 <font>\n+                  <weight>75</weight>\n+                  <bold>true</bold>\n+                 </font>\n+                </property>\n+                <property name=\"cursor\">\n+                 <cursorShape>IBeamCursor</cursorShape>\n+                </property>\n+                <property name=\"toolTip\">\n+                 <string>Unconfirmed transactions to watchonly addresses</string>\n+                </property>\n+                <property name=\"text\">\n+                 <string>0 BTC</string>\n+                </property>\n+                <property name=\"alignment\">\n+                 <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+                </property>\n+                <property name=\"textInteractionFlags\">\n+                 <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                </property>\n+               </widget>\n+              </item>\n+              <item row=\"2\" column=\"1\">\n+               <widget class=\"QLabel\" name=\"labelWatchImmature\">\n+                <property name=\"font\">\n+                 <font>\n+                  <weight>75</weight>\n+                  <bold>true</bold>\n+                 </font>\n+                </property>\n+                <property name=\"cursor\">\n+                 <cursorShape>IBeamCursor</cursorShape>\n+                </property>\n+                <property name=\"toolTip\">\n+                 <string>Mined balance in watchonly addresses that has not yet matured</string>\n+                </property>\n+                <property name=\"text\">\n+                 <string>0 BTC</string>\n+                </property>\n+                <property name=\"alignment\">\n+                 <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+                </property>\n+                <property name=\"textInteractionFlags\">\n+                 <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                </property>\n+               </widget>\n+              </item>\n+              <item row=\"3\" column=\"0\" colspan=\"2\">\n+               <widget class=\"Line\" name=\"lineWatchBalance\">\n+                <property name=\"sizePolicy\">\n+                 <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Fixed\">\n+                  <horstretch>0</horstretch>\n+                  <verstretch>0</verstretch>\n+                 </sizepolicy>\n+                </property>\n+                <property name=\"minimumSize\">\n+                 <size>\n+                  <width>140</width>\n+                  <height>0</height>\n+                 </size>\n+                </property>\n+                <property name=\"orientation\">\n+                 <enum>Qt::Horizontal</enum>\n+                </property>\n+               </widget>\n+              </item>\n+              <item row=\"4\" column=\"1\">\n+               <widget class=\"QLabel\" name=\"labelWatchTotal\">\n+                <property name=\"font\">\n+                 <font>\n+                  <weight>75</weight>\n+                  <bold>true</bold>\n+                 </font>\n+                </property>\n+                <property name=\"cursor\">\n+                 <cursorShape>IBeamCursor</cursorShape>\n+                </property>\n+                <property name=\"toolTip\">\n+                 <string>Current total balance in watchonly addresses</string>\n+                </property>\n+                <property name=\"text\">\n+                 <string>0 BTC</string>\n+                </property>\n+                <property name=\"alignment\">\n+                 <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n+                </property>\n+                <property name=\"textInteractionFlags\">\n+                 <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+                </property>\n+               </widget>\n+              </item>\n+             </layout>\n             </item>\n-           </layout>\n-          </item>\n             <item>\n              <spacer name=\"horizontalSpacer_3\">\n               <property name=\"orientation\">\n                <enum>Qt::Horizontal</enum>\n               </property>\n+              <property name=\"sizeType\">\n+               <enum>QSizePolicy::Expanding</enum>\n+              </property>\n               <property name=\"sizeHint\" stdset=\"0\">\n                <size>\n-                <width>40</width>\n+                <width>20</width>\n                 <height>20</height>\n                </size>\n               </property>"
      },
      {
        "sha": "7158b65c2d30b8afe4b74f9917a5af27be851a38",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 314,
        "deletions": 36,
        "changes": 350,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -113,13 +113,39 @@\n         </widget>\n        </item>\n        <item row=\"4\" column=\"0\">\n+        <widget class=\"QLabel\" name=\"label_berkeleyDBVersion\">\n+         <property name=\"text\">\n+          <string>Using BerkeleyDB version</string>\n+         </property>\n+         <property name=\"indent\">\n+          <number>10</number>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"4\" column=\"1\">\n+        <widget class=\"QLabel\" name=\"berkeleyDBVersion\">\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n+         </property>\n+         <property name=\"text\">\n+          <string>N/A</string>\n+         </property>\n+         <property name=\"textFormat\">\n+          <enum>Qt::PlainText</enum>\n+         </property>\n+         <property name=\"textInteractionFlags\">\n+          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"5\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_12\">\n          <property name=\"text\">\n           <string>Build date</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"4\" column=\"1\">\n+       <item row=\"5\" column=\"1\">\n         <widget class=\"QLabel\" name=\"buildDate\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -135,14 +161,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"5\" column=\"0\">\n+       <item row=\"6\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_13\">\n          <property name=\"text\">\n           <string>Startup time</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"5\" column=\"1\">\n+       <item row=\"6\" column=\"1\">\n         <widget class=\"QLabel\" name=\"startupTime\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -158,7 +184,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"6\" column=\"0\">\n+       <item row=\"7\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_11\">\n          <property name=\"font\">\n           <font>\n@@ -171,14 +197,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"7\" column=\"0\">\n+       <item row=\"8\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_8\">\n          <property name=\"text\">\n           <string>Name</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"7\" column=\"1\">\n+       <item row=\"8\" column=\"1\">\n         <widget class=\"QLabel\" name=\"networkName\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -194,14 +220,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"8\" column=\"0\">\n+       <item row=\"9\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_7\">\n          <property name=\"text\">\n           <string>Number of connections</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"8\" column=\"1\">\n+       <item row=\"9\" column=\"1\">\n         <widget class=\"QLabel\" name=\"numberOfConnections\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -217,7 +243,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"9\" column=\"0\">\n+       <item row=\"10\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_10\">\n          <property name=\"font\">\n           <font>\n@@ -230,38 +256,15 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"10\" column=\"0\">\n+       <item row=\"11\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_3\">\n          <property name=\"text\">\n           <string>Current number of blocks</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"10\" column=\"1\">\n-        <widget class=\"QLabel\" name=\"numberOfBlocks\">\n-         <property name=\"cursor\">\n-          <cursorShape>IBeamCursor</cursorShape>\n-         </property>\n-         <property name=\"text\">\n-          <string>N/A</string>\n-         </property>\n-         <property name=\"textFormat\">\n-          <enum>Qt::PlainText</enum>\n-         </property>\n-         <property name=\"textInteractionFlags\">\n-          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-         </property>\n-        </widget>\n-       </item>\n-       <item row=\"11\" column=\"0\">\n-        <widget class=\"QLabel\" name=\"label_4\">\n-         <property name=\"text\">\n-          <string>Estimated total blocks</string>\n-         </property>\n-        </widget>\n-       </item>\n        <item row=\"11\" column=\"1\">\n-        <widget class=\"QLabel\" name=\"totalBlocks\">\n+        <widget class=\"QLabel\" name=\"numberOfBlocks\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n          </property>\n@@ -556,7 +559,7 @@\n               <item>\n                <widget class=\"QLabel\" name=\"label_16\">\n                 <property name=\"text\">\n-                 <string>In:</string>\n+                 <string>Received</string>\n                 </property>\n                </widget>\n               </item>\n@@ -636,7 +639,7 @@\n               <item>\n                <widget class=\"QLabel\" name=\"label_17\">\n                 <property name=\"text\">\n-                 <string>Out:</string>\n+                 <string>Sent</string>\n                 </property>\n                </widget>\n               </item>\n@@ -675,6 +678,281 @@\n        </item>\n       </layout>\n      </widget>\n+     <widget class=\"QWidget\" name=\"tab_peers\">\n+      <attribute name=\"title\">\n+       <string>&amp;Peers</string>\n+      </attribute>\n+      <layout class=\"QGridLayout\" name=\"gridLayout_2\">\n+       <item row=\"0\" column=\"1\">\n+        <widget class=\"QLabel\" name=\"peerHeading\">\n+         <property name=\"sizePolicy\">\n+          <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Minimum\">\n+           <horstretch>0</horstretch>\n+           <verstretch>0</verstretch>\n+          </sizepolicy>\n+         </property>\n+         <property name=\"text\">\n+          <string>Select a peer to view detailed information.</string>\n+         </property>\n+         <property name=\"margin\">\n+          <number>3</number>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"0\" column=\"0\" rowspan=\"2\">\n+        <widget class=\"QTableView\" name=\"peerWidget\">\n+         <property name=\"sizePolicy\">\n+          <sizepolicy hsizetype=\"Expanding\" vsizetype=\"Expanding\">\n+           <horstretch>0</horstretch>\n+           <verstretch>0</verstretch>\n+          </sizepolicy>\n+         </property>\n+         <property name=\"horizontalScrollBarPolicy\">\n+          <enum>Qt::ScrollBarAlwaysOff</enum>\n+         </property>\n+         <property name=\"editTriggers\">\n+          <set>QAbstractItemView::AnyKeyPressed|QAbstractItemView::DoubleClicked|QAbstractItemView::EditKeyPressed</set>\n+         </property>\n+         <property name=\"sortingEnabled\">\n+          <bool>true</bool>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"1\" column=\"1\">\n+        <widget class=\"QWidget\" name=\"detailWidget\" native=\"true\">\n+         <property name=\"sizePolicy\">\n+          <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Expanding\">\n+           <horstretch>0</horstretch>\n+           <verstretch>0</verstretch>\n+          </sizepolicy>\n+         </property>\n+         <layout class=\"QGridLayout\" name=\"gridLayout_3\">\n+          <property name=\"leftMargin\">\n+           <number>3</number>\n+          </property>\n+          <item row=\"12\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_21\">\n+            <property name=\"text\">\n+             <string>Version:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"11\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerPingTime\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"5\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_19\">\n+            <property name=\"text\">\n+             <string>Last Receive:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"14\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_28\">\n+            <property name=\"text\">\n+             <string>User Agent:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"12\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerVersion\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"8\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerConnTime\">\n+            <property name=\"minimumSize\">\n+             <size>\n+              <width>160</width>\n+              <height>0</height>\n+             </size>\n+            </property>\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"11\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_26\">\n+            <property name=\"text\">\n+             <string>Ping Time:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"5\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerLastRecv\">\n+            <property name=\"sizePolicy\">\n+             <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Preferred\">\n+              <horstretch>0</horstretch>\n+              <verstretch>0</verstretch>\n+             </sizepolicy>\n+            </property>\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"8\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_22\">\n+            <property name=\"text\">\n+             <string>Connection Time:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"6\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerBytesSent\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"14\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerSubversion\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"15\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_29\">\n+            <property name=\"text\">\n+             <string>Starting Height:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"7\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerBytesRecv\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"6\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_18\">\n+            <property name=\"text\">\n+             <string>Bytes Sent:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"7\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_20\">\n+            <property name=\"text\">\n+             <string>Bytes Received:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"15\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerHeight\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"16\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_24\">\n+            <property name=\"text\">\n+             <string>Ban Score:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"16\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerBanScore\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"17\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_23\">\n+            <property name=\"text\">\n+             <string>Direction:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"17\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerDirection\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"19\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_25\">\n+            <property name=\"text\">\n+             <string>Sync Node:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"19\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerSyncNode\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"3\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_15\">\n+            <property name=\"text\">\n+             <string>Last Send:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"2\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_4\">\n+            <property name=\"text\">\n+             <string>Services:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"1\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_27\">\n+            <property name=\"text\">\n+             <string>IP Address/port:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"3\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerLastSend\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"2\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerServices\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"1\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerAddr\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"20\" column=\"0\">\n+           <widget class=\"QWidget\" name=\"widget\" native=\"true\">\n+            <property name=\"sizePolicy\">\n+             <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Expanding\">\n+              <horstretch>0</horstretch>\n+              <verstretch>0</verstretch>\n+             </sizepolicy>\n+            </property>\n+           </widget>\n+          </item>\n+         </layout>\n+        </widget>\n+       </item>\n+      </layout>\n+     </widget>\n     </widget>\n    </item>\n   </layout>"
      },
      {
        "sha": "a631b04670ed9ef12b8a30f3224a17d7db5b9df4",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -417,7 +417,7 @@\n                   </font>\n                  </property>\n                  <property name=\"text\">\n-                  <string>Low Output:</string>\n+                  <string>Dust:</string>\n                  </property>\n                 </widget>\n                </item>"
      },
      {
        "sha": "9d829970f0f29af9e8b5587cabb2008ab8009f85",
        "filename": "src/qt/forms/sendcoinsentry.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/sendcoinsentry.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/sendcoinsentry.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsentry.ui?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -51,7 +51,7 @@\n       <item>\n        <widget class=\"QValidatedLineEdit\" name=\"payTo\">\n         <property name=\"toolTip\">\n-         <string>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</string>\n+         <string>The Bitcoin address to send the payment to</string>\n         </property>\n        </widget>\n       </item>"
      },
      {
        "sha": "53573ec821c6629ab780cba3041265100253037b",
        "filename": "src/qt/forms/signverifymessagedialog.ui",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/signverifymessagedialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/forms/signverifymessagedialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/signverifymessagedialog.ui?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -45,7 +45,7 @@\n          <item>\n           <widget class=\"QValidatedLineEdit\" name=\"addressIn_SM\">\n            <property name=\"toolTip\">\n-            <string>The address to sign the message with (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</string>\n+            <string>The Bitcoin address to sign the message with</string>\n            </property>\n           </widget>\n          </item>\n@@ -255,7 +255,7 @@\n          <item>\n           <widget class=\"QValidatedLineEdit\" name=\"addressIn_VM\">\n            <property name=\"toolTip\">\n-            <string>The address the message was signed with (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</string>\n+            <string>The Bitcoin address the message was signed with</string>\n            </property>\n           </widget>\n          </item>"
      },
      {
        "sha": "696761e234bb08c1ea9bd7655c85e603777b80ff",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -23,6 +23,10 @@ static const int STATUSBAR_ICONSIZE = 16;\n #define COLOR_NEGATIVE QColor(255, 0, 0)\n /* Transaction list -- bare address (without label) */\n #define COLOR_BAREADDRESS QColor(140, 140, 140)\n+/* Transaction list -- has conflicting transactions */\n+#define COLOR_HASCONFLICTING QColor(255, 255, 255)\n+/* Transaction list -- has conflicting transactions - background */\n+#define COLOR_HASCONFLICTING_BG QColor(192, 0, 0)\n \n /* Tooltips longer than this (in characters) are converted into rich text,\n    so that they can be word-wrapped."
      },
      {
        "sha": "60a131df7ef028e6c46fef0409915e0b4b4ee084",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 57,
        "deletions": 3,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -11,6 +11,8 @@\n \n #include \"core.h\"\n #include \"init.h\"\n+#include \"main.h\"\n+#include \"protocol.h\"\n #include \"util.h\"\n \n #ifdef WIN32\n@@ -76,7 +78,11 @@ QString dateTimeStr(qint64 nTime)\n QFont bitcoinAddressFont()\n {\n     QFont font(\"Monospace\");\n+#if QT_VERSION >= 0x040800\n+    font.setStyleHint(QFont::Monospace);\n+#else\n     font.setStyleHint(QFont::TypeWriter);\n+#endif\n     return font;\n }\n \n@@ -86,7 +92,9 @@ void setupAddressWidget(QValidatedLineEdit *widget, QWidget *parent)\n \n     widget->setFont(bitcoinAddressFont());\n #if QT_VERSION >= 0x040700\n-    widget->setPlaceholderText(QObject::tr(\"Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)\"));\n+    // We don't want translators to use own addresses in translations\n+    // and this is the only place, where this address is supplied.\n+    widget->setPlaceholderText(QObject::tr(\"Enter a Bitcoin address (e.g. %1)\").arg(\"1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L\"));\n #endif\n     widget->setValidator(new BitcoinAddressEntryValidator(parent));\n     widget->setCheckValidator(new BitcoinAddressCheckValidator(parent));\n@@ -205,7 +213,7 @@ bool isDust(const QString& address, qint64 amount)\n     CTxDestination dest = CBitcoinAddress(address.toStdString()).Get();\n     CScript script; script.SetDestination(dest);\n     CTxOut txOut(amount, script);\n-    return txOut.IsDust(CTransaction::nMinRelayTxFee);\n+    return txOut.IsDust(::minRelayTxFee);\n }\n \n QString HtmlEscape(const QString& str, bool fMultiLine)\n@@ -570,7 +578,7 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n     return true;\n }\n \n-#elif defined(LINUX)\n+#elif defined(Q_OS_LINUX)\n \n // Follow the Desktop Application Autostart Spec:\n //  http://standards.freedesktop.org/autostart-spec/autostart-spec-latest.html\n@@ -750,4 +758,50 @@ QString boostPathToQString(const boost::filesystem::path &path)\n }\n #endif\n \n+QString formatDurationStr(int secs)\n+{\n+    QStringList strList;\n+    int days = secs / 86400;\n+    int hours = (secs % 86400) / 3600;\n+    int mins = (secs % 3600) / 60;\n+    int seconds = secs % 60;\n+\n+    if (days)\n+        strList.append(QString(QObject::tr(\"%1 d\")).arg(days));\n+    if (hours)\n+        strList.append(QString(QObject::tr(\"%1 h\")).arg(hours));\n+    if (mins)\n+        strList.append(QString(QObject::tr(\"%1 m\")).arg(mins));\n+    if (seconds || (!days && !hours && !mins))\n+        strList.append(QString(QObject::tr(\"%1 s\")).arg(seconds));\n+\n+    return strList.join(\" \");\n+}\n+\n+QString formatServicesStr(uint64_t mask)\n+{\n+    QStringList strList;\n+\n+    // Just scan the last 8 bits for now.\n+    for (int i = 0; i < 8; i++) {\n+        uint64_t check = 1 << i;\n+        if (mask & check)\n+        {\n+            switch (check)\n+            {\n+            case NODE_NETWORK:\n+                strList.append(QObject::tr(\"NETWORK\"));\n+                break;\n+            default:\n+                strList.append(QString(\"%1[%2]\").arg(QObject::tr(\"UNKNOWN\")).arg(check));\n+            }\n+        }\n+    }\n+\n+    if (strList.size())\n+        return strList.join(\" & \");\n+    else\n+        return QObject::tr(\"None\");\n+}\n+\n } // namespace GUIUtil"
      },
      {
        "sha": "45c78b4e1475e2e91a90f9755c6189780c68b8e5",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -173,6 +173,11 @@ namespace GUIUtil\n     /* Convert OS specific boost path to QString through UTF-8 */\n     QString boostPathToQString(const boost::filesystem::path &path);\n \n+    /* Convert seconds into a QString with days, hours, mins, secs */\n+    QString formatDurationStr(int secs);\n+\n+    /* Format CNodeStats.nServices bitmask into a user-readable string */\n+    QString formatServicesStr(uint64_t mask);\n } // namespace GUIUtil\n \n #endif // GUIUTIL_H"
      },
      {
        "sha": "de5619bfc070a85070a6f6794c7144df9e791b0a",
        "filename": "src/qt/locale/bitcoin_ach.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ach.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ach.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ach.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,4 +1,4 @@\n-<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"ach\" version=\"2.0\">\n+<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"ach\" version=\"2.1\">\n <context>\n     <name>AboutDialog</name>\n     <message>\n@@ -1038,6 +1038,14 @@ Address: %4\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <source>Third party transaction URLs</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <source>Active command-line options that override above options:</source>\n         <translation type=\"unfinished\"/>\n@@ -1340,7 +1348,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <source>Bitcoin Core did&apos;t yet exit safely...</source>\n+        <source>Bitcoin Core didn&apos;t yet exit safely...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>"
      },
      {
        "sha": "6e8395e58948e92d90e5b438b18b4c27ebc2c150",
        "filename": "src/qt/locale/bitcoin_af_ZA.ts",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_af_ZA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_af_ZA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_af_ZA.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,4 +1,4 @@\n-<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"af_ZA\" version=\"2.0\">\n+<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"af_ZA\" version=\"2.1\">\n <context>\n     <name>AboutDialog</name>\n     <message>\n@@ -1038,6 +1038,14 @@ Address: %4\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <source>Third party transaction URLs</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <source>Active command-line options that override above options:</source>\n         <translation type=\"unfinished\"/>\n@@ -1340,7 +1348,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <source>Bitcoin Core did&apos;t yet exit safely...</source>\n+        <source>Bitcoin Core didn&apos;t yet exit safely...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n@@ -1890,7 +1898,7 @@ Address: %4\n     </message>\n     <message>\n         <source>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n-        <translation>Die adres waarheen die betaling gestuur moet word (b.v. 1H7wyVL5HCNoVFyyBJSDojwyxcCChU7TPA)</translation>\n+        <translation>Die adres waarheen die betaling gestuur moet word (b.v. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n     </message>\n     <message>\n         <source>Enter a label for this address to add it to your address book</source>"
      },
      {
        "sha": "5877cc35d9c940940eab5e9a96359b592f5e61f9",
        "filename": "src/qt/locale/bitcoin_ar.ts",
        "status": "modified",
        "additions": 231,
        "deletions": 222,
        "changes": 453,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ar.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ar.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ar.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,4 +1,4 @@\n-<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"ar\" version=\"2.0\">\n+<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"ar\" version=\"2.1\">\n <context>\n     <name>AboutDialog</name>\n     <message>\n@@ -20,7 +20,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Copyright</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u062d\u0642\u0648\u0642 \u0645\u062d\u0641\u0648\u0638\u0629</translation>\n     </message>\n     <message>\n         <source>The Bitcoin Core developers</source>\n@@ -35,67 +35,67 @@ This product includes software developed by the OpenSSL Project for use in the O\n     <name>AddressBookPage</name>\n     <message>\n         <source>Double-click to edit address or label</source>\n-        <translation>\u0623\u0646\u0642\u0631 \u0639\u0644\u0649 \u0627\u0644\u0645\u0627\u0648\u0633 \u0645\u0631\u062a\u064a\u0646 \u0644\u062a\u0639\u062f\u064a\u0644 \u0627\u0644\u0639\u0646\u0648\u0627\u0646</translation>\n+        <translation>\u0623\u0646\u0642\u0631 \u0628\u0627\u0644\u0645\u0627\u0648\u0633 \u0645\u0631\u062a\u064a\u0646 \u0644\u062a\u0639\u062f\u064a\u0644 \u0627\u0644\u0639\u0646\u0648\u0627\u0646 \u0627\u0648 \u0627\u0644\u0648\u0635\u0641</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>\u0627\u0646\u0634\u0623 \u0639\u0646\u0648\u0627\u0646 \u062c\u062f\u064a\u062f</translation>\n     </message>\n     <message>\n         <source>&amp;New</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u062c\u062f\u064a\u062f</translation>\n     </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n         <translation>\u0642\u0645 \u0628\u0646\u0633\u062e \u0627\u0644\u0642\u0648\u0627\u0646\u064a\u0646 \u0627\u0644\u0645\u062e\u062a\u0627\u0631\u0629 \u0644\u062d\u0627\u0641\u0638\u0629 \u0627\u0644\u0646\u0638\u0627\u0645</translation>\n     </message>\n     <message>\n         <source>&amp;Copy</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0646\u0633\u062e</translation>\n     </message>\n     <message>\n         <source>C&amp;lose</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0627\u063a\u0644\u0627\u0642</translation>\n     </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>\u0627\u0646\u0633\u062e \u0627\u0644\u0639\u0646\u0648\u0627\u0646</translation>\n     </message>\n     <message>\n         <source>Delete the currently selected address from the list</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062d\u0630\u0641 \u0627\u0644\u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0645\u062d\u062f\u062f \u0645\u0646 \u0627\u0644\u0642\u0627\u0626\u0645\u0629</translation>\n     </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>&amp;Export</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u062a\u0635\u062f\u064a\u0631</translation>\n     </message>\n     <message>\n         <source>&amp;Delete</source>\n         <translation>&amp;\u0623\u0645\u0633\u062d</translation>\n     </message>\n     <message>\n         <source>Choose the address to send coins to</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u062e\u062a\u0631 \u0627\u0644\u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0630\u064a \u0633\u062a\u0631\u0633\u0644 \u0644\u0647 \u0627\u0644\u0639\u0645\u0644\u0627\u062a</translation>\n     </message>\n     <message>\n         <source>Choose the address to receive coins with</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u062e\u062a\u0631 \u0627\u0644\u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0630\u064a \u062a\u0633\u062a\u0642\u0628\u0644 \u0639\u0644\u064a\u0647 \u0627\u0644\u0639\u0645\u0644\u0627\u062a</translation>\n     </message>\n     <message>\n         <source>C&amp;hoose</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0627\u062e\u062a\u0631</translation>\n     </message>\n     <message>\n         <source>Sending addresses</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0631\u0633\u0627\u0644 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646</translation>\n     </message>\n     <message>\n         <source>Receiving addresses</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0633\u062a\u0642\u0628\u0627\u0644 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646</translation>\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n@@ -107,23 +107,23 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Copy &amp;Label</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e &amp;\u0627\u0644\u0648\u0635\u0641</translation>\n     </message>\n     <message>\n         <source>&amp;Edit</source>\n         <translation>\u062a\u0639\u062f\u064a\u0644</translation>\n     </message>\n     <message>\n         <source>Export Address List</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u0635\u062f\u064a\u0631 \u0642\u0627\u0626\u0645\u0629 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646</translation>\n     </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Exporting Failed</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0641\u0634\u0644 \u0627\u0644\u062a\u0635\u062f\u064a\u0631</translation>\n     </message>\n     <message>\n         <source>There was an error trying to save the address list to %1.</source>\n@@ -157,47 +157,47 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>New passphrase</source>\n-        <translation>\u0639\u0628\u0627\u0631\u0629 \u0645\u0631\u0648\u0631 \u062c\u062f\u064a\u062f\u0629</translation>\n+        <translation>\u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u062c\u062f\u064a\u062f\u0629</translation>\n     </message>\n     <message>\n         <source>Repeat new passphrase</source>\n-        <translation>\u0627\u062f\u062e\u0644 \u0627\u0644\u062c\u0645\u0644\u0629 \u0627\u0644\u0633\u0631\u064a\u0629 \u0645\u0631\u0629 \u0623\u062e\u0631\u0649</translation>\n+        <translation>\u0627\u062f\u062e\u0644 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u062c\u062f\u064a\u062f\u0629 \u0645\u0631\u0629 \u0623\u062e\u0631\u0649</translation>\n     </message>\n     <message>\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n-        <translation>\u0623\u062f\u062e\u0644 \u0639\u0628\u0627\u0631\u0629 \u0645\u0631\u0648\u0631 \u062c\u062f\u064a\u062f\u0629 \u0625\u0644\u0649 \u0627\u0644\u0645\u062d\u0641\u0638\u0629. \u0627\u0644\u0631\u062c\u0627\u0621 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0639\u0628\u0627\u0631\u0629 \u0645\u0631\u0648\u0631 \u062a\u062a\u0643\u0648\u0646 \u0645\u064610  \u062d\u0631\u0648\u0641 \u0639\u0634\u0648\u0627\u0626\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644, \u0623\u0648 \u0623\u0643\u062b\u0631 \u0645\u0646 7 \u0643\u0644\u0645\u0627\u062a </translation>\n+        <translation>\u0623\u062f\u062e\u0644 \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u062c\u062f\u064a\u062f\u0629 \u0644\u0644\u0645\u062d\u0641\u0638\u0629. &lt;br/&gt;\u0627\u0644\u0631\u062c\u0627\u0621 \u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u062a\u062a\u0643\u0648\u0646 &lt;b&gt;\u0645\u0646 10 \u062d\u0631\u0648\u0641 \u0639\u0634\u0648\u0627\u0626\u064a\u0629 \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644&lt;/b&gt;, \u0623\u0648 &lt;b&gt;\u0623\u0643\u062b\u0631 \u0645\u0646 7 \u0643\u0644\u0645\u0627\u062a&lt;/b&gt;. </translation>\n     </message>\n     <message>\n         <source>Encrypt wallet</source>\n         <translation>\u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n     </message>\n     <message>\n         <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n-        <translation>\u0647\u0630\u0647 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 \u062a\u062d\u062a\u0627\u062c \u0639\u0628\u0627\u0631\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0645\u062d\u0641\u0638\u062a\u0643 \u0644\u0641\u062a\u062d\u0647\u0627</translation>\n+        <translation>\u0647\u0630\u0647 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 \u062a\u062d\u062a\u0627\u062c \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u0645\u062d\u0641\u0638\u062a\u0643 \u0644\u0641\u062a\u062d\u0647\u0627</translation>\n     </message>\n     <message>\n         <source>Unlock wallet</source>\n         <translation>\u0625\u0641\u062a\u062d \u0627\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n     </message>\n     <message>\n         <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n-        <translation>\u0647\u0630\u0647 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 \u062a\u062d\u062a\u0627\u062c \u0639\u0628\u0627\u0631\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0645\u062d\u0641\u0638\u062a\u0643 \u0641\u0643 \u062a\u0634\u0641\u064a\u0631\u0647\u0627</translation>\n+        <translation>\u0647\u0630\u0647 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 \u062a\u062d\u062a\u0627\u062c \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u0645\u062d\u0641\u0638\u062a\u0643 \u0644\u0641\u0643 \u062a\u0634\u0641\u064a\u0631\u0647\u0627 </translation>\n     </message>\n     <message>\n         <source>Decrypt wallet</source>\n         <translation>\u0641\u0643 \u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n     </message>\n     <message>\n         <source>Change passphrase</source>\n-        <translation>\u062a\u063a\u064a\u064a\u0631 \u0639\u0628\u0627\u0631\u0629 \u0627\u0644\u0645\u0631\u0648\u0631</translation>\n+        <translation>\u062a\u063a\u064a\u064a\u0631 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631</translation>\n     </message>\n     <message>\n         <source>Enter the old and new passphrase to the wallet.</source>\n-        <translation>\u0623\u062f\u062e\u0644 \u0639\u0628\u0627\u0631\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u0642\u062f\u064a\u0645\u0629 \u0648\u0627\u0644\u062c\u062f\u064a\u062f\u0629 \u0625\u0644\u0649 \u0627\u0644\u0645\u062d\u0641\u0638\u0629.</translation>\n+        <translation>\u0623\u062f\u062e\u0644 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u0642\u062f\u064a\u0645\u0629 \u0648\u0627\u0644\u062c\u062f\u064a\u062f\u0629 \u0644\u0644\u0645\u062d\u0641\u0638\u0629.</translation>\n     </message>\n     <message>\n         <source>Confirm wallet encryption</source>\n-        <translation>\u062a\u0623\u0643\u064a\u062f \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n+        <translation>\u062a\u0623\u0643\u064a\u062f \u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n     </message>\n     <message>\n         <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n@@ -213,7 +213,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Warning: The Caps Lock key is on!</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u062d\u0630\u064a\u0631: \u0645\u0641\u062a\u0627\u062d \u0627\u0644\u062d\u0631\u0648\u0641 \u0627\u0644\u0643\u0628\u064a\u0631\u0629 \u0645\u0641\u0639\u0644</translation>\n     </message>\n     <message>\n         <source>Wallet encrypted</source>\n@@ -229,21 +229,19 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n-        <translation>\u0634\u0644 \u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0645\u062d\u0641\u0638\u0629 \u0628\u0633\u0628\u0628 \u062e\u0637\u0623 \u062f\u0627\u062e\u0644\u064a. \u0644\u0645 \u064a\u062a\u0645 \u062a\u0634\u0641\u064a\u0631 \u0645\u062d\u0641\u0638\u062a\u0643.</translation>\n+        <translation>\u0641\u0634\u0644 \u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0645\u062d\u0641\u0638\u0629 \u0628\u0633\u0628\u0628 \u062e\u0637\u0623 \u062f\u0627\u062e\u0644\u064a. \u0644\u0645 \u064a\u062a\u0645 \u062a\u0634\u0641\u064a\u0631 \u0645\u062d\u0641\u0638\u062a\u0643.</translation>\n     </message>\n     <message>\n         <source>The supplied passphrases do not match.</source>\n-        <translation>\u0639\u0628\u0627\u0631\u062a\u064a \u0627\u0644\u0645\u0631\u0648\u0631 \u0644\u064a\u0633\u062a\u0627 \u0645\u062a\u0637\u0627\u0628\u0642\u062a\u0627\u0646\n-</translation>\n+        <translation>\u0643\u0644\u0645\u062a\u064a \u0627\u0644\u0645\u0631\u0648\u0631 \u0644\u064a\u0633\u062a\u0627 \u0645\u062a\u0637\u0627\u0628\u0642\u062a\u0627\u0646</translation>\n     </message>\n     <message>\n         <source>Wallet unlock failed</source>\n         <translation>\u0641\u0634\u0644 \u0641\u062a\u062d \u0627\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n     </message>\n     <message>\n         <source>The passphrase entered for the wallet decryption was incorrect.</source>\n-        <translation>\u0639\u0628\u0627\u0631\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u062a\u064a \u062a\u0645 \u0625\u062f\u062e\u0627\u0644\u0647\u0627 \u0644\u0641\u0643 \u0634\u0641\u0631\u0629 \u0627\u0644\u0645\u062d\u0641\u0638\u0629 \u063a\u064a\u0631 \u0635\u062d\u064a\u062d\u0629.\n-</translation>\n+        <translation>\u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u062a\u064a \u062a\u0645 \u0625\u062f\u062e\u0627\u0644\u0647\u0627 \u0644\u0641\u0643 \u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0645\u062d\u0641\u0638\u0629 \u063a\u064a\u0631 \u0635\u062d\u064a\u062d\u0629.</translation>\n     </message>\n     <message>\n         <source>Wallet decryption failed</source>\n@@ -262,11 +260,11 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Synchronizing with network...</source>\n-        <translation>\u0645\u0632\u0627\u0645\u0646\u0629 \u0645\u0639 \u0634\u0628\u0643\u0629 ...</translation>\n+        <translation>\u0645\u0632\u0627\u0645\u0646\u0629 \u0645\u0639 \u0627\u0644\u0634\u0628\u0643\u0629 ...</translation>\n     </message>\n     <message>\n         <source>&amp;Overview</source>\n-        <translation>\u0646\u0638\u0631\u0629 \u0639\u0627\u0645\u0629</translation>\n+        <translation>&amp;\u0646\u0638\u0631\u0629 \u0639\u0627\u0645\u0629</translation>\n     </message>\n     <message>\n         <source>Node</source>\n@@ -278,11 +276,11 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>&amp;Transactions</source>\n-        <translation>\u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a</translation>\n+        <translation>&amp;\u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a</translation>\n     </message>\n     <message>\n         <source>Browse transaction history</source>\n-        <translation>\u062a\u0635\u0641\u062d \u0627\u0644\u062a\u0627\u0631\u064a\u062e \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a</translation>\n+        <translation>\u062a\u0635\u0641\u062d \u0633\u062c\u0644 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a</translation>\n     </message>\n     <message>\n         <source>E&amp;xit</source>\n@@ -294,7 +292,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Show information about Bitcoin</source>\n-        <translation>  \u0625\u0638\u0647\u0627\u0631 \u0627\u0644\u0645\u0632\u064a\u062f \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u062d\u0648\u0644 Bitcoin</translation>\n+        <translation>  \u0625\u0638\u0647\u0627\u0631 \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u062d\u0648\u0644 \u0628\u062a \u0643\u0648\u064a\u0646</translation>\n     </message>\n     <message>\n         <source>About &amp;Qt</source>\n@@ -306,19 +304,19 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>&amp;Options...</source>\n-        <translation>\u062e\u064a\u0627\u0631\u0627\u062a ...</translation>\n+        <translation>&amp;\u062e\u064a\u0627\u0631\u0627\u062a ...</translation>\n     </message>\n     <message>\n         <source>&amp;Encrypt Wallet...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n     </message>\n     <message>\n         <source>&amp;Backup Wallet...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0646\u0633\u062e \u0627\u062d\u062a\u064a\u0627\u0637 \u0644\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n     </message>\n     <message>\n         <source>&amp;Change Passphrase...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u062a\u063a\u064a\u064a\u0631 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631</translation>\n     </message>\n     <message>\n         <source>&amp;Sending addresses...</source>\n@@ -330,7 +328,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Open &amp;URI...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0641\u062a\u062d &amp;URI...</translation>\n     </message>\n     <message>\n         <source>Importing blocks from disk...</source>\n@@ -354,19 +352,19 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Change the passphrase used for wallet encryption</source>\n-        <translation>\u062a\u063a\u064a\u064a\u0631 \u0639\u0628\u0627\u0631\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0644\u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n+        <translation>\u062a\u063a\u064a\u064a\u0631 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645\u0629 \u0644\u062a\u0634\u0641\u064a\u0631 \u0627\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n     </message>\n     <message>\n         <source>&amp;Debug window</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0646\u0627\u0641\u0630\u0629 \u0627\u0644\u0645\u0639\u0627\u0644\u062c\u0629</translation>\n     </message>\n     <message>\n         <source>Open debugging and diagnostic console</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>&amp;Verify message...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0631\u0633\u0627\u0644\u0629...</translation>\n     </message>\n     <message>\n         <source>Bitcoin</source>\n@@ -378,19 +376,19 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>&amp;Send</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>%\u0627\u0631\u0633\u0644</translation>\n     </message>\n     <message>\n         <source>&amp;Receive</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0627\u0633\u062a\u0642\u0628\u0644</translation>\n     </message>\n     <message>\n         <source>&amp;Show / Hide</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0639\u0631\u0636 / \u0627\u062e\u0641\u0627\u0621</translation>\n     </message>\n     <message>\n         <source>Show or hide the main Window</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0639\u0631\u0636 \u0627\u0648 \u0627\u062e\u0641\u0627\u0621 \u0627\u0644\u0646\u0627\u0641\u0630\u0629 \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629</translation>\n     </message>\n     <message>\n         <source>Encrypt the private keys that belong to your wallet</source>\n@@ -406,15 +404,15 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>&amp;File</source>\n-        <translation>\u0645\u0644\u0641</translation>\n+        <translation>&amp;\u0645\u0644\u0641</translation>\n     </message>\n     <message>\n         <source>&amp;Settings</source>\n-        <translation>\u0627\u0644\u0627\u0639\u062f\u0627\u062f\u0627\u062a</translation>\n+        <translation>&amp;\u0627\u0644\u0627\u0639\u062f\u0627\u062f\u0627\u062a</translation>\n     </message>\n     <message>\n         <source>&amp;Help</source>\n-        <translation>\u0645\u0633\u0627\u0639\u062f\u0629</translation>\n+        <translation>&amp;\u0645\u0633\u0627\u0639\u062f\u0629</translation>\n     </message>\n     <message>\n         <source>Tabs toolbar</source>\n@@ -458,7 +456,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Bitcoin client</source>\n-        <translation>\u0639\u0645\u064a\u0644 \u0628\u062a\u0643\u0648\u064a\u0646</translation>\n+        <translation>\u0639\u0645\u064a\u0644 \u0628\u062a \u0643\u0648\u064a\u0646</translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>%n active connection(s) to Bitcoin network</source>\n@@ -478,15 +476,15 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message numerus=\"yes\">\n         <source>%n hour(s)</source>\n-        <translation type=\"unfinished\"><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>\n+        <translation><numerusform>%n \u0633\u0627\u0639\u0629</numerusform><numerusform>%n \u0633\u0627\u0639\u0629</numerusform><numerusform>%n \u0633\u0627\u0639\u0629</numerusform><numerusform>%n \u0633\u0627\u0639\u0627\u062a</numerusform><numerusform>%n \u0633\u0627\u0639\u0627\u062a</numerusform><numerusform>%n \u0633\u0627\u0639\u0627\u062a</numerusform></translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>%n day(s)</source>\n-        <translation type=\"unfinished\"><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>\n+        <translation><numerusform>%n \u064a\u0648\u0645</numerusform><numerusform>%n \u064a\u0648\u0645</numerusform><numerusform>%n \u064a\u0648\u0645</numerusform><numerusform>%n \u0623\u064a\u0627\u0645</numerusform><numerusform>%n \u0623\u064a\u0627\u0645</numerusform><numerusform>%n \u0627\u064a\u0627\u0645</numerusform></translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>%n week(s)</source>\n-        <translation type=\"unfinished\"><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform><numerusform></numerusform></translation>\n+        <translation><numerusform>%n \u0627\u0633\u0628\u0648\u0639</numerusform><numerusform>%n \u0627\u0633\u0628\u0648\u0639</numerusform><numerusform>%n \u0627\u0633\u0628\u0648\u0639</numerusform><numerusform>%n \u0627\u0633\u0627\u0628\u064a\u0639</numerusform><numerusform>%n \u0627\u0633\u0627\u0628\u064a\u0639</numerusform><numerusform>%n \u0627\u0633\u0627\u0628\u064a\u0639</numerusform></translation>\n     </message>\n     <message>\n         <source>%1 and %2</source>\n@@ -514,15 +512,15 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Warning</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u062d\u0630\u064a\u0631</translation>\n     </message>\n     <message>\n         <source>Information</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0645\u0639\u0644\u0648\u0645\u0627\u062a</translation>\n     </message>\n     <message>\n         <source>Up to date</source>\n-        <translation>\u0645\u062d\u064a\u0646</translation>\n+        <translation>\u0645\u062d\u062f\u062b</translation>\n     </message>\n     <message>\n         <source>Catching up...</source>\n@@ -534,23 +532,27 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Incoming transaction</source>\n-        <translation>\u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0648\u0627\u0631\u062f\u0629</translation>\n+        <translation>\u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0627\u062a \u0627\u0644\u0648\u0627\u0631\u062f\u0629</translation>\n     </message>\n     <message>\n         <source>Date: %1\n Amount: %2\n Type: %3\n Address: %4\n </source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u062a\u0627\u0631\u064a\u062e : 1% \n+\u0627\u0644\u0642\u064a\u0645\u0629: 2% \n+\u0627\u0644\u0646\u0648\u0639: 3% \n+\u0627\u0644\u0639\u0646\u0648\u0627\u0646: 4%\n+</translation>\n     </message>\n     <message>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n-        <translation>\u0627\u0644\u0645\u062d\u0641\u0638\u0629 \u0645\u0634\u0641\u0631\u0629 \u0648 \u0645\u0641\u062a\u0648\u062d\u0629 \u062d\u0627\u0644\u064a\u0627</translation>\n+        <translation>\u0627\u0644\u0645\u062d\u0641\u0638\u0629 &lt;b&gt;\u0645\u0634\u0641\u0631\u0629&lt;/b&gt; \u0648 &lt;b&gt;\u0645\u0641\u062a\u0648\u062d\u0629&lt;/b&gt; \u062d\u0627\u0644\u064a\u0627</translation>\n     </message>\n     <message>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n-        <translation>\u0627\u0644\u0645\u062d\u0641\u0638\u0629 \u0645\u0634\u0641\u0631\u0629 \u0648 \u0645\u0642\u0641\u0644\u0629 \u062d\u0627\u0644\u064a\u0627</translation>\n+        <translation>\u0627\u0644\u0645\u062d\u0641\u0638\u0629 &lt;b&gt;\u0645\u0634\u0641\u0631\u0629&lt;/b&gt; \u0648 &lt;b&gt;\u0645\u0642\u0641\u0644\u0629&lt;/b&gt; \u062d\u0627\u0644\u064a\u0627</translation>\n     </message>\n     <message>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n@@ -561,7 +563,7 @@ Address: %4\n     <name>ClientModel</name>\n     <message>\n         <source>Network Alert</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u0646\u0628\u064a\u0647 \u0645\u0646 \u0627\u0644\u0634\u0628\u0643\u0629</translation>\n     </message>\n </context>\n <context>\n@@ -572,23 +574,23 @@ Address: %4\n     </message>\n     <message>\n         <source>Quantity:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u0643\u0645\u064a\u0629:</translation>\n     </message>\n     <message>\n         <source>Bytes:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Amount:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u0642\u064a\u0645\u0629</translation>\n     </message>\n     <message>\n         <source>Priority:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Fee:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0631\u0633\u0648\u0645 :</translation>\n     </message>\n     <message>\n         <source>Low Output:</source>\n@@ -628,31 +630,31 @@ Address: %4\n     </message>\n     <message>\n         <source>Confirmations</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u0623\u0643\u064a\u062f</translation>\n     </message>\n     <message>\n         <source>Confirmed</source>\n         <translation>\u062a\u0623\u0643\u064a\u062f</translation>\n     </message>\n     <message>\n         <source>Priority</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0623\u0641\u0636\u0644\u064a\u0629</translation>\n     </message>\n     <message>\n         <source>Copy address</source>\n-        <translation>  \u0627\u0646\u0633\u062e \u0639\u0646\u0648\u0627\u0646</translation>\n+        <translation>  \u0627\u0646\u0633\u062e \u0627\u0644\u0639\u0646\u0648\u0627\u0646</translation>\n     </message>\n     <message>\n         <source>Copy label</source>\n         <translation> \u0627\u0646\u0633\u062e \u0627\u0644\u062a\u0633\u0645\u064a\u0629</translation>\n     </message>\n     <message>\n         <source>Copy amount</source>\n-        <translation>\u0646\u0633\u062e \u0627\u0644\u0643\u0645\u064a\u0629</translation>\n+        <translation>\u0646\u0633\u062e \u0627\u0644\u0642\u064a\u0645\u0629</translation>\n     </message>\n     <message>\n         <source>Copy transaction ID</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e \u0631\u0642\u0645 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629</translation>\n     </message>\n     <message>\n         <source>Lock unspent</source>\n@@ -664,43 +666,43 @@ Address: %4\n     </message>\n     <message>\n         <source>Copy quantity</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e \u0627\u0644\u0643\u0645\u064a\u0629</translation>\n     </message>\n     <message>\n         <source>Copy fee</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e \u0627\u0644\u0631\u0633\u0648\u0645</translation>\n     </message>\n     <message>\n         <source>Copy after fee</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e \u0628\u0639\u062f \u0627\u0644\u0631\u0633\u0648\u0645</translation>\n     </message>\n     <message>\n         <source>Copy bytes</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Copy priority</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e \u0627\u0644\u0627\u0641\u0636\u0644\u064a\u0629</translation>\n     </message>\n     <message>\n         <source>Copy low output</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Copy change</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e \u0627\u0644\u062a\u063a\u064a\u064a\u0631\u0627\u062a</translation>\n     </message>\n     <message>\n         <source>highest</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u0627\u0639\u0644\u0649</translation>\n     </message>\n     <message>\n         <source>higher</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0639\u0644\u0649</translation>\n     </message>\n     <message>\n         <source>high</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0639\u0627\u0644\u064a</translation>\n     </message>\n     <message>\n         <source>medium-high</source>\n@@ -716,7 +718,7 @@ Address: %4\n     </message>\n     <message>\n         <source>low</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0645\u0646\u062e\u0641\u0636</translation>\n     </message>\n     <message>\n         <source>lower</source>\n@@ -732,7 +734,7 @@ Address: %4\n     </message>\n     <message>\n         <source>none</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0644\u0627 \u0634\u064a\u0621</translation>\n     </message>\n     <message>\n         <source>Dust</source>\n@@ -803,7 +805,7 @@ Address: %4\n     </message>\n     <message>\n         <source>&amp;Label</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0648\u0635\u0641</translation>\n     </message>\n     <message>\n         <source>The label associated with this address list entry</source>\n@@ -815,20 +817,19 @@ Address: %4\n     </message>\n     <message>\n         <source>&amp;Address</source>\n-        <translation>\u0627\u0644\u0639\u0646\u0648\u0627\u0646</translation>\n+        <translation>&amp;\u0627\u0644\u0639\u0646\u0648\u0627\u0646</translation>\n     </message>\n     <message>\n         <source>New receiving address</source>\n-        <translation>\u0639\u0646\u0648\u0627\u0646 \u062a\u0644\u0642\u064a \u062c\u062f\u064a\u062f</translation>\n+        <translation>\u0639\u0646\u0648\u0627\u0646 \u0623\u0633\u062a\u0644\u0627\u0645 \u062c\u062f\u064a\u062f</translation>\n     </message>\n     <message>\n         <source>New sending address</source>\n         <translation>\u0639\u0646\u0648\u0627\u0646 \u0625\u0631\u0633\u0627\u0644 \u062c\u062f\u064a\u062f</translation>\n     </message>\n     <message>\n         <source>Edit receiving address</source>\n-        <translation>\u062a\u0639\u062f\u064a\u0644 \u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u062a\u0644\u0642\u064a\n-</translation>\n+        <translation>\u062a\u0639\u062f\u064a\u0644 \u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0623\u0633\u062a\u0644\u0627\u0645</translation>\n     </message>\n     <message>\n         <source>Edit sending address</source>\n@@ -855,11 +856,11 @@ Address: %4\n     <name>FreespaceChecker</name>\n     <message>\n         <source>A new data directory will be created.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0633\u064a\u062a\u0645 \u0627\u0646\u0634\u0627\u0621 \u062f\u0644\u064a\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u062c\u062f\u064a\u062f</translation>\n     </message>\n     <message>\n         <source>name</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u0627\u0633\u0645</translation>\n     </message>\n     <message>\n         <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n@@ -871,7 +872,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Cannot create data directory here.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0644\u0627 \u064a\u0645\u0643\u0646 \u0627\u0646\u0634\u0627\u0621 \u062f\u0644\u064a\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u0647\u0646\u0627 .</translation>\n     </message>\n </context>\n <context>\n@@ -925,7 +926,7 @@ Address: %4\n     <name>Intro</name>\n     <message>\n         <source>Welcome</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0623\u0647\u0644\u0627</translation>\n     </message>\n     <message>\n         <source>Welcome to Bitcoin Core.</source>\n@@ -941,11 +942,11 @@ Address: %4\n     </message>\n     <message>\n         <source>Use the default data directory</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062f\u0644\u064a\u0644 \u0627\u0644\u0628\u0627\u0646\u0627\u062a \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a</translation>\n     </message>\n     <message>\n         <source>Use a custom data directory:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u062f\u0644\u064a\u0644 \u0628\u064a\u0627\u0646\u0627\u062a \u0645\u062e\u0635\u0635:</translation>\n     </message>\n     <message>\n         <source>Bitcoin</source>\n@@ -961,11 +962,11 @@ Address: %4\n     </message>\n     <message>\n         <source>GB of free space available</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0642\u064a\u0642\u0627 \u0628\u0627\u064a\u062a \u0645\u0633\u0627\u062d\u0629 \u0645\u062a\u0627\u062d\u0629</translation>\n     </message>\n     <message>\n         <source>(of %1GB needed)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>( \u0628\u062d\u0627\u062c\u0629 \u0627\u0644\u0649 1%\u0642\u064a\u0642\u0627 \u0628\u0627\u064a\u062a )</translation>\n     </message>\n </context>\n <context>\n@@ -984,11 +985,11 @@ Address: %4\n     </message>\n     <message>\n         <source>Select payment request file</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062d\u062f\u062f \u0645\u0644\u0641 \u0637\u0644\u0628 \u0627\u0644\u062f\u0641\u0639</translation>\n     </message>\n     <message>\n         <source>Select payment request file to open</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062d\u062f\u062f \u0645\u0644\u0641 \u0637\u0644\u0628 \u0627\u0644\u062f\u0641\u0639 \u0644\u0641\u062a\u062d\u0647</translation>\n     </message>\n </context>\n <context>\n@@ -999,15 +1000,15 @@ Address: %4\n     </message>\n     <message>\n         <source>&amp;Main</source>\n-        <translation>\u0627\u0644\u0631\u0626\u064a\u0633\u064a</translation>\n+        <translation>&amp;\u0627\u0644\u0631\u0626\u064a\u0633\u064a</translation>\n     </message>\n     <message>\n         <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Pay transaction &amp;fee</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u062f\u0641\u0639 &amp;\u0631\u0633\u0648\u0645 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629</translation>\n     </message>\n     <message>\n         <source>Automatically start Bitcoin after logging in to the system.</source>\n@@ -1023,7 +1024,7 @@ Address: %4\n     </message>\n     <message>\n         <source>MB</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0645 \u0628</translation>\n     </message>\n     <message>\n         <source>Number of script &amp;verification threads</source>\n@@ -1041,6 +1042,14 @@ Address: %4\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <source>Third party transaction URLs</source>\n+        <translation>\u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0646\u0637\u0627\u0642 \u0644\u0644\u0637\u0631\u0641 \u0627\u0644\u062b\u0627\u0644\u062b</translation>\n+    </message>\n     <message>\n         <source>Active command-line options that override above options:</source>\n         <translation type=\"unfinished\"/>\n@@ -1051,23 +1060,23 @@ Address: %4\n     </message>\n     <message>\n         <source>&amp;Reset Options</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0627\u0633\u062a\u0639\u0627\u062f\u0629 \u0627\u0644\u062e\u064a\u0627\u0631\u0627\u062a</translation>\n     </message>\n     <message>\n         <source>&amp;Network</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0627\u0644\u0634\u0628\u0643\u0629</translation>\n     </message>\n     <message>\n         <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>W&amp;allet</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0645\u062d\u0641\u0638\u0629</translation>\n     </message>\n     <message>\n         <source>Expert</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u0635\u062f\u064a\u0631</translation>\n     </message>\n     <message>\n         <source>Enable coin &amp;control features</source>\n@@ -1091,15 +1100,15 @@ Address: %4\n     </message>\n     <message>\n         <source>Proxy &amp;IP:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0628\u0631\u0648\u0643\u0633\u064a &amp;\u0627\u064a \u0628\u064a:</translation>\n     </message>\n     <message>\n         <source>&amp;Port:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0627\u0644\u0645\u0646\u0641\u0630:</translation>\n     </message>\n     <message>\n         <source>Port of the proxy (e.g. 9050)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0645\u0646\u0641\u0630 \u0627\u0644\u0628\u0631\u0648\u0643\u0633\u064a (\u0645\u062b\u0644\u0627 9050)</translation>\n     </message>\n     <message>\n         <source>SOCKS &amp;Version:</source>\n@@ -1131,11 +1140,11 @@ Address: %4\n     </message>\n     <message>\n         <source>&amp;Display</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0639\u0631\u0636</translation>\n     </message>\n     <message>\n         <source>User Interface &amp;language:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0648\u0627\u062c\u0647\u0629 \u0627\u0644\u0645\u0633\u062a\u062e\u062f\u0645 &amp;\u0627\u0644\u0644\u063a\u0629:</translation>\n     </message>\n     <message>\n         <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin.</source>\n@@ -1175,11 +1184,11 @@ Address: %4\n     </message>\n     <message>\n         <source>none</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0644\u0627 \u0634\u064a\u0621</translation>\n     </message>\n     <message>\n         <source>Confirm options reset</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u0623\u0643\u064a\u062f \u0627\u0633\u062a\u0639\u0627\u062f\u0629 \u0627\u0644\u062e\u064a\u0627\u0631\u0627\u062a</translation>\n     </message>\n     <message>\n         <source>Client restart required to activate changes.</source>\n@@ -1222,7 +1231,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Pending:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0645\u0639\u0644\u0642:</translation>\n     </message>\n     <message>\n         <source>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</source>\n@@ -1238,11 +1247,11 @@ Address: %4\n     </message>\n     <message>\n         <source>Total:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u0645\u062c\u0645\u0648\u0639:</translation>\n     </message>\n     <message>\n         <source>Your current total balance</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0631\u0635\u064a\u062f\u0643 \u0627\u0644\u0643\u0644\u064a \u0627\u0644\u062d\u0627\u0644\u064a</translation>\n     </message>\n     <message>\n         <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n@@ -1313,7 +1322,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Bad response from server %1</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0633\u064a\u0626\u0629 \u0645\u0646 \u0627\u0644\u0645\u0644\u0642\u0645\u066a 1</translation>\n     </message>\n     <message>\n         <source>Payment acknowledged</source>\n@@ -1343,7 +1352,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <source>Bitcoin Core did&apos;t yet exit safely...</source>\n+        <source>Bitcoin Core didn&apos;t yet exit safely...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n@@ -1355,15 +1364,15 @@ Address: %4\n     <name>QRImageWidget</name>\n     <message>\n         <source>&amp;Save Image...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u062d\u0641\u0638 \u0627\u0644\u0635\u0648\u0631\u0629</translation>\n     </message>\n     <message>\n         <source>&amp;Copy Image</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0646\u0633\u062e \u0627\u0644\u0635\u0648\u0631\u0629</translation>\n     </message>\n     <message>\n         <source>Save QR Code</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062d\u0641\u0638 \u0631\u0645\u0632 \u0627\u0644\u0627\u0633\u062a\u062c\u0627\u0628\u0629 \u0627\u0644\u0633\u0631\u064a\u0639\u0629 QR</translation>\n     </message>\n     <message>\n         <source>PNG Image (*.png)</source>\n@@ -1394,15 +1403,15 @@ Address: %4\n     </message>\n     <message>\n         <source>General</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0639\u0627\u0645</translation>\n     </message>\n     <message>\n         <source>Using OpenSSL version</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Startup time</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0648\u0642\u062a \u0627\u0644\u0628\u062f\u0621</translation>\n     </message>\n     <message>\n         <source>Network</source>\n@@ -1442,23 +1451,23 @@ Address: %4\n     </message>\n     <message>\n         <source>&amp;Network Traffic</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u062d\u0631\u0643\u0629 \u0645\u0631\u0648\u0631 \u0627\u0644\u0634\u0628\u0643\u0629</translation>\n     </message>\n     <message>\n         <source>&amp;Clear</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0645\u0633\u062d</translation>\n     </message>\n     <message>\n         <source>Totals</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u0645\u062c\u0627\u0645\u064a\u0639</translation>\n     </message>\n     <message>\n         <source>In:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062f\u0627\u062e\u0644:</translation>\n     </message>\n     <message>\n         <source>Out:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062e\u0627\u0631\u062c:</translation>\n     </message>\n     <message>\n         <source>Build date</source>\n@@ -1482,54 +1491,54 @@ Address: %4\n     </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0633\u062a\u062e\u062f\u0645 \u0627\u0633\u0647\u0645 \u0627\u0644\u0627\u0639\u0644\u0649 \u0648 \u0627\u0644\u0627\u0633\u0641\u0644 \u0644\u0644\u062a\u0646\u0642\u0644 \u0628\u064a\u0646 \u0627\u0644\u0633\u062c\u0644\u0627\u062a \u0648 &lt;b&gt;Ctrl-L&lt;/b&gt;  \u0644\u0645\u0633\u062d \u0627\u0644\u0634\u0627\u0634\u0629</translation>\n     </message>\n     <message>\n         <source>Type &lt;b&gt;help&lt;/b&gt; for an overview of available commands.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>%1 B</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>1% \u0628\u0627\u064a\u062a</translation>\n     </message>\n     <message>\n         <source>%1 KB</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>1% \u0643\u064a\u0644\u0648 \u0628\u0627\u064a\u062a</translation>\n     </message>\n     <message>\n         <source>%1 MB</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>1% \u0645\u064a\u0642\u0627 \u0628\u0627\u064a\u062a</translation>\n     </message>\n     <message>\n         <source>%1 GB</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>1% \u0642\u064a\u0642\u0627 \u0628\u0627\u064a\u062a</translation>\n     </message>\n     <message>\n         <source>%1 m</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>1% \u062f\u0642\u064a\u0642\u0629</translation>\n     </message>\n     <message>\n         <source>%1 h</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>1% \u0633\u0627\u0639\u0629</translation>\n     </message>\n     <message>\n         <source>%1 h %2 m</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>1% \u0633\u0627\u0639\u0629 2% \u062f\u0642\u064a\u0642\u0629</translation>\n     </message>\n </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n         <source>&amp;Amount:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0627\u0644\u0642\u064a\u0645\u0629</translation>\n     </message>\n     <message>\n         <source>&amp;Label:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0627\u0644\u0648\u0635\u0641:</translation>\n     </message>\n     <message>\n         <source>&amp;Message:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0631\u0633\u0627\u0644\u0629:</translation>\n     </message>\n     <message>\n         <source>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</source>\n@@ -1557,15 +1566,15 @@ Address: %4\n     </message>\n     <message>\n         <source>Clear all fields of the form.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0645\u0633\u062d \u0643\u0644 \u062d\u0642\u0648\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062c \u0627\u0644\u0645\u0637\u0644\u0648\u0628\u0629</translation>\n     </message>\n     <message>\n         <source>Clear</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0645\u0633\u062d</translation>\n     </message>\n     <message>\n         <source>Requested payments history</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0633\u062c\u0644 \u0637\u0644\u0628\u0627\u062a \u0627\u0644\u062f\u0641\u0639</translation>\n     </message>\n     <message>\n         <source>&amp;Request payment</source>\n@@ -1577,15 +1586,15 @@ Address: %4\n     </message>\n     <message>\n         <source>Show</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0639\u0631\u0636</translation>\n     </message>\n     <message>\n         <source>Remove the selected entries from the list</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Remove</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0632\u0644</translation>\n     </message>\n     <message>\n         <source>Copy label</source>\n@@ -1597,26 +1606,26 @@ Address: %4\n     </message>\n     <message>\n         <source>Copy amount</source>\n-        <translation>\u0646\u0633\u062e \u0627\u0644\u0643\u0645\u064a\u0629</translation>\n+        <translation>\u0646\u0633\u062e \u0627\u0644\u0642\u064a\u0645\u0629</translation>\n     </message>\n </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n     <message>\n         <source>QR Code</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0631\u0645\u0632 \u0643\u064a\u0648 \u0627\u0631</translation>\n     </message>\n     <message>\n         <source>Copy &amp;URI</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e  &amp;URI</translation>\n     </message>\n     <message>\n         <source>Copy &amp;Address</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e &amp;\u0627\u0644\u0639\u0646\u0648\u0627\u0646</translation>\n     </message>\n     <message>\n         <source>&amp;Save Image...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u062d\u0641\u0638 \u0627\u0644\u0635\u0648\u0631\u0629</translation>\n     </message>\n     <message>\n         <source>Request payment to %1</source>\n@@ -1628,7 +1637,7 @@ Address: %4\n     </message>\n     <message>\n         <source>URI</source>\n-        <translation type=\"unfinished\"/>\n+        <translation> URI</translation>\n     </message>\n     <message>\n         <source>Address</source>\n@@ -1644,7 +1653,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Message</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0631\u0633\u0627\u0644\u0629</translation>\n     </message>\n     <message>\n         <source>Resulting URI too long, try to reduce the text for label / message.</source>\n@@ -1667,7 +1676,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Message</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0631\u0633\u0627\u0644\u0629</translation>\n     </message>\n     <message>\n         <source>Amount</source>\n@@ -1679,7 +1688,7 @@ Address: %4\n     </message>\n     <message>\n         <source>(no message)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>( \u0644\u0627 \u0631\u0633\u0627\u0626\u0644 )</translation>\n     </message>\n     <message>\n         <source>(no amount)</source>\n@@ -1702,43 +1711,43 @@ Address: %4\n     </message>\n     <message>\n         <source>automatically selected</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u062e\u062a\u064a\u0627\u0631 \u062a\u0644\u0642\u0627\u0626\u064a\u0627</translation>\n     </message>\n     <message>\n         <source>Insufficient funds!</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Quantity:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u0643\u0645\u064a\u0629 :</translation>\n     </message>\n     <message>\n         <source>Bytes:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Amount:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u0642\u064a\u0645\u0629 :</translation>\n     </message>\n     <message>\n         <source>Priority:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0641\u0636\u0644\u064a\u0629 :</translation>\n     </message>\n     <message>\n         <source>Fee:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0631\u0633\u0648\u0645 :</translation>\n     </message>\n     <message>\n         <source>Low Output:</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>After Fee:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0628\u0639\u062f \u0627\u0644\u0631\u0633\u0648\u0645 :</translation>\n     </message>\n     <message>\n         <source>Change:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u0639\u062f\u064a\u0644 :</translation>\n     </message>\n     <message>\n         <source>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</source>\n@@ -1754,7 +1763,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Add &amp;Recipient</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0623\u0636\u0627\u0641\u0629 &amp;\u0645\u0633\u062a\u0644\u0645</translation>\n     </message>\n     <message>\n         <source>Clear all fields of the form.</source>\n@@ -1774,55 +1783,55 @@ Address: %4\n     </message>\n     <message>\n         <source>S&amp;end</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0627\u0631\u0633\u0627\u0644</translation>\n     </message>\n     <message>\n         <source>Confirm send coins</source>\n         <translation>\u062a\u0623\u0643\u064a\u062f \u0627\u0644\u0625\u0631\u0633\u0627\u0644 Coins</translation>\n     </message>\n     <message>\n         <source>%1 to %2</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>1% \u0627\u0644\u0649 2%</translation>\n     </message>\n     <message>\n         <source>Copy quantity</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e \u0627\u0644\u0643\u0645\u064a\u0629 </translation>\n     </message>\n     <message>\n         <source>Copy amount</source>\n-        <translation>\u0646\u0633\u062e \u0627\u0644\u0643\u0645\u064a\u0629</translation>\n+        <translation>\u0646\u0633\u062e \u0627\u0644\u0642\u064a\u0645\u0629</translation>\n     </message>\n     <message>\n         <source>Copy fee</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e \u0627\u0644\u0631\u0633\u0648\u0645</translation>\n     </message>\n     <message>\n         <source>Copy after fee</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e \u0628\u0639\u062f \u0627\u0644\u0631\u0633\u0648\u0645</translation>\n     </message>\n     <message>\n         <source>Copy bytes</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Copy priority</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e \u0627\u0644\u0627\u0641\u0636\u0644\u064a\u0629</translation>\n     </message>\n     <message>\n         <source>Copy low output</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Copy change</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e \u0627\u0644\u062a\u0639\u062f\u064a\u0644</translation>\n     </message>\n     <message>\n         <source>Total Amount %1 (= %2)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0645\u062c\u0645\u0648\u0639 \u0627\u0644\u0645\u0628\u0644\u063a %1 (= %2)</translation>\n     </message>\n     <message>\n         <source>or</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0623\u0648</translation>\n     </message>\n     <message>\n         <source>The recipient address is not valid, please recheck.</source>\n@@ -1834,11 +1843,11 @@ Address: %4\n     </message>\n     <message>\n         <source>The amount exceeds your balance.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u0642\u064a\u0645\u0629 \u062a\u062a\u062c\u0627\u0648\u0632 \u0631\u0635\u064a\u062f\u0643</translation>\n     </message>\n     <message>\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u0645\u062c\u0645\u0648\u0639 \u064a\u062a\u062c\u0627\u0648\u0632 \u0631\u0635\u064a\u062f\u0643 \u0639\u0646\u062f\u0645\u0627 \u064a\u062a\u0645 \u0627\u0636\u0627\u0641\u0629 1% \u0631\u0633\u0648\u0645 \u0627\u0644\u0639\u0645\u0644\u064a\u0629</translation>\n     </message>\n     <message>\n         <source>Duplicate address found, can only send to each address once per send operation.</source>\n@@ -1889,7 +1898,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Pay &amp;To:</source>\n-        <translation>\u0627\u062f\u0641\u0639 \u0627\u0644\u0649 </translation>\n+        <translation>\u0627\u062f\u0641\u0639 &amp;\u0627\u0644\u0649 :</translation>\n     </message>\n     <message>\n         <source>The address to send the payment to (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n@@ -1901,7 +1910,7 @@ Address: %4\n     </message>\n     <message>\n         <source>&amp;Label:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0648\u0635\u0641 :</translation>\n     </message>\n     <message>\n         <source>Choose previously used address</source>\n@@ -1917,7 +1926,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Paste address from clipboard</source>\n-        <translation>\u0627\u0646\u0633\u062e \u0627\u0644\u0639\u0646\u0648\u0627\u0646 \u0645\u0646 \u0644\u0648\u062d\u0629 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d</translation>\n+        <translation>\u0627\u0644\u0635\u0642 \u0627\u0644\u0639\u0646\u0648\u0627\u0646 \u0645\u0646 \u0644\u0648\u062d\u0629 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d</translation>\n     </message>\n     <message>\n         <source>Alt+P</source>\n@@ -1964,7 +1973,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Do not shut down the computer until this window disappears.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0644\u0627 \u062a\u0648\u0642\u0641 \u0639\u0645\u0644 \u0627\u0644\u0643\u0645\u0628\u064a\u0648\u062a\u0631 \u062d\u062a\u0649 \u062a\u062e\u062a\u0641\u064a \u0647\u0630\u0647 \u0627\u0644\u0646\u0627\u0641\u0630\u0629</translation>\n     </message>\n </context>\n <context>\n@@ -1975,7 +1984,7 @@ Address: %4\n     </message>\n     <message>\n         <source>&amp;Sign Message</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u062a\u0648\u0642\u064a\u0639 \u0627\u0644\u0631\u0633\u0627\u0644\u0629</translation>\n     </message>\n     <message>\n         <source>You can sign messages with your addresses to prove you own them. Be careful not to sign anything vague, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n@@ -2003,23 +2012,23 @@ Address: %4\n     </message>\n     <message>\n         <source>Enter the message you want to sign here</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u062f\u062e\u0644 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u0627\u0644\u062a\u064a \u062a\u0631\u064a\u062f \u062a\u0648\u0642\u064a\u0639\u0647\u0627 \u0647\u0646\u0627</translation>\n     </message>\n     <message>\n         <source>Signature</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u062a\u0648\u0642\u064a\u0639</translation>\n     </message>\n     <message>\n         <source>Copy the current signature to the system clipboard</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Sign the message to prove you own this Bitcoin address</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0648\u0642\u0639 \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u0644\u062a\u062b\u0628\u062a \u0627\u0646\u0643 \u062a\u0645\u062a\u0644\u0643 \u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0628\u062a \u0643\u0648\u064a\u0646 \u0647\u0630\u0627</translation>\n     </message>\n     <message>\n         <source>Sign &amp;Message</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u0648\u0642\u064a\u0639 $\u0627\u0644\u0631\u0633\u0627\u0644\u0629</translation>\n     </message>\n     <message>\n         <source>Reset all sign message fields</source>\n@@ -2031,7 +2040,7 @@ Address: %4\n     </message>\n     <message>\n         <source>&amp;Verify Message</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u062a\u062d\u0642\u0642 \u0631\u0633\u0627\u0644\u0629</translation>\n     </message>\n     <message>\n         <source>Enter the signing address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack.</source>\n@@ -2047,7 +2056,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Verify &amp;Message</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u062d\u0642\u0642 &amp;\u0627\u0644\u0631\u0633\u0627\u0644\u0629</translation>\n     </message>\n     <message>\n         <source>Reset all verify message fields</source>\n@@ -2059,7 +2068,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Click &quot;Sign Message&quot; to generate signature</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0636\u063a\u0637  &quot;\u062a\u0648\u0642\u064a\u0639 \u0627\u0644\u0631\u0633\u0627\u0644\u0629&quot; \u0644\u062a\u0648\u0644\u064a\u062f \u0627\u0644\u062a\u0648\u0642\u064a\u0639</translation>\n     </message>\n     <message>\n         <source>The entered address is invalid.</source>\n@@ -2075,7 +2084,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Wallet unlock was cancelled.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u0645 \u0627\u0644\u063a\u0627\u0621 \u0639\u0645\u0644\u064a\u0629 \u0641\u062a\u062d \u0627\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n     </message>\n     <message>\n         <source>Private key for the entered address is not available.</source>\n@@ -2095,7 +2104,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Please check the signature and try again.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0641\u0636\u0644\u0627 \u062a\u0627\u0643\u062f \u0645\u0646 \u0627\u0644\u062a\u0648\u0642\u064a\u0639 \u0648\u062d\u0627\u0648\u0644 \u0645\u0631\u0629 \u0627\u062e\u0631\u0649</translation>\n     </message>\n     <message>\n         <source>The signature did not match the message digest.</source>\n@@ -2140,7 +2149,7 @@ Address: %4\n     </message>\n     <message>\n         <source>conflicted</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u064a\u062a\u0639\u0627\u0631\u0636</translation>\n     </message>\n     <message>\n         <source>%1/offline</source>\n@@ -2188,7 +2197,7 @@ Address: %4\n     </message>\n     <message>\n         <source>label</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0639\u0644\u0627\u0645\u0629</translation>\n     </message>\n     <message>\n         <source>Credit</source>\n@@ -2208,15 +2217,15 @@ Address: %4\n     </message>\n     <message>\n         <source>Transaction fee</source>\n-        <translation>\u0631\u0633\u0648\u0645 \u0627\u0644\u062a\u062d\u0648\u064a\u0644</translation>\n+        <translation>\u0631\u0633\u0648\u0645 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629</translation>\n     </message>\n     <message>\n         <source>Net amount</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Message</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0631\u0633\u0627\u0644\u0629 </translation>\n     </message>\n     <message>\n         <source>Comment</source>\n@@ -2228,7 +2237,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Merchant</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u0627\u062c\u0631</translation>\n     </message>\n     <message>\n         <source>Generated coins must mature %1 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n@@ -2260,7 +2269,7 @@ Address: %4\n     </message>\n     <message>\n         <source>, has not been successfully broadcast yet</source>\n-        <translation>\u0644\u0645 \u064a\u062a\u0645 \u062d\u062a\u0649 \u0627\u0644\u0622\u0646 \u0627\u0644\u0628\u062b \u0628\u0646\u062c\u0627\u062d</translation>\n+        <translation>,  \u0644\u0645 \u064a\u062a\u0645 \u062d\u062a\u0649 \u0627\u0644\u0622\u0646 \u0627\u0644\u0628\u062b \u0628\u0646\u062c\u0627\u062d</translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>Open for %n more block(s)</source>\n@@ -2413,7 +2422,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Range...</source>\n-        <translation>v</translation>\n+        <translation>\u0627\u0644\u0645\u062f\u0649...</translation>\n     </message>\n     <message>\n         <source>Received with</source>\n@@ -2441,7 +2450,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Min amount</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u062d\u062f \u0627\u0644\u0623\u062f\u0646\u0649</translation>\n     </message>\n     <message>\n         <source>Copy address</source>\n@@ -2457,31 +2466,31 @@ Address: %4\n     </message>\n     <message>\n         <source>Copy transaction ID</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e \u0631\u0642\u0645 \u0627\u0644\u0639\u0645\u0644\u064a\u0629</translation>\n     </message>\n     <message>\n         <source>Edit label</source>\n         <translation>\u0639\u062f\u0644 \u0627\u0644\u0648\u0635\u0641</translation>\n     </message>\n     <message>\n         <source>Show transaction details</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0639\u0631\u0636 \u062a\u0641\u0627\u0635\u064a\u0644 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629</translation>\n     </message>\n     <message>\n         <source>Export Transaction History</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Exporting Failed</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0641\u0634\u0644 \u0627\u0644\u062a\u0635\u062f\u064a\u0631</translation>\n     </message>\n     <message>\n         <source>There was an error trying to save the transaction history to %1.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Exporting Successful</source>\n-        <translation>\u0646\u062c\u062d \u0627\u0644\u0627\u0633\u062a\u062e\u0631\u0627\u062c</translation>\n+        <translation>\u0646\u062c\u062d \u0627\u0644\u062a\u0635\u062f\u064a\u0631</translation>\n     </message>\n     <message>\n         <source>The transaction history was successfully saved to %1.</source>\n@@ -2521,7 +2530,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Range:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u0645\u062f\u0649:</translation>\n     </message>\n     <message>\n         <source>to</source>\n@@ -2546,23 +2555,23 @@ Address: %4\n     <name>WalletView</name>\n     <message>\n         <source>&amp;Export</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u062a\u0635\u062f\u064a\u0631</translation>\n     </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Backup Wallet</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u0633\u062e \u0627\u062d\u062a\u064a\u0627\u0637 \u0644\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n     </message>\n     <message>\n         <source>Wallet Data (*.dat)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Backup Failed</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0641\u0634\u0644 \u0627\u0644\u0646\u0633\u062e \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637\u064a</translation>\n     </message>\n     <message>\n         <source>There was an error trying to save the wallet data to %1.</source>\n@@ -2574,7 +2583,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Backup Successful</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0646\u062c\u0627\u062d  \u0627\u0644\u0646\u0633\u062e \u0627\u0644\u0627\u062d\u062a\u064a\u0627\u0637\u064a</translation>\n     </message>\n </context>\n <context>\n@@ -2605,7 +2614,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Specify data directory</source>\n-        <translation>\u062d\u062f\u062f \u0645\u0648\u0642\u0639 \u0645\u062c\u0644\u062f \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0627\u0648 data directory</translation>\n+        <translation>\u062d\u062f\u062f \u0645\u062c\u0644\u062f \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a</translation>\n     </message>\n     <message>\n         <source>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</source>\n@@ -2859,15 +2868,15 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Error: Disk space is low!</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u062d\u0630\u064a\u0631: \u0645\u0633\u0627\u062d\u0629 \u0627\u0644\u0642\u0631\u0635 \u0645\u0646\u062e\u0641\u0636\u0629</translation>\n     </message>\n     <message>\n         <source>Error: Wallet locked, unable to create transaction!</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u062d\u0630\u064a\u0631: \u0627\u0644\u0645\u062d\u0641\u0638\u0629 \u0645\u063a\u0644\u0642\u0629 , \u0644\u0627 \u062a\u0633\u062a\u0637\u064a\u0639 \u062a\u0646\u0641\u064a\u0630 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629</translation>\n     </message>\n     <message>\n         <source>Error: system error: </source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062e\u0637\u0623: \u062e\u0637\u0623 \u0641\u064a \u0627\u0644\u0646\u0638\u0627\u0645:</translation>\n     </message>\n     <message>\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n@@ -2951,7 +2960,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Invalid -onion address: &apos;%s&apos;</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0639\u0646\u0648\u0627\u0646 \u0627\u0648\u0646\u064a\u0648\u0646 \u063a\u064a\u0631 \u0635\u062d\u064a\u062d : &apos;%s&apos;</translation>\n     </message>\n     <message>\n         <source>Not enough file descriptors available.</source>\n@@ -3007,7 +3016,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Verifying wallet...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u062a\u062d\u0642\u0642 \u0645\u0646 \u0627\u0644\u0645\u062d\u0641\u0638\u0629 ...</translation>\n     </message>\n     <message>\n         <source>Wait for RPC server to start</source>\n@@ -3019,7 +3028,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Wallet options:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062e\u064a\u0627\u0631\u0627\u062a \u0627\u0644\u0645\u062d\u0641\u0638\u0629 :</translation>\n     </message>\n     <message>\n         <source>Warning: Deprecated argument -debugnet ignored, use -debug=net</source>\n@@ -3051,7 +3060,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Information</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0645\u0639\u0644\u0648\u0645\u0627\u062a</translation>\n     </message>\n     <message>\n         <source>Invalid amount for -minrelaytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n@@ -3151,7 +3160,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Signing transaction failed</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0641\u0634\u0644 \u062a\u0648\u0642\u064a\u0639 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629</translation>\n     </message>\n     <message>\n         <source>Specify connection timeout in milliseconds (default: 5000)</source>\n@@ -3163,19 +3172,19 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>System error: </source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062e\u0637\u0623 \u0641\u064a \u0627\u0644\u0646\u0638\u0627\u0645 :</translation>\n     </message>\n     <message>\n         <source>Transaction amount too small</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0642\u064a\u0645\u0629 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 \u0635\u063a\u064a\u0631\u0647 \u062c\u062f\u0627</translation>\n     </message>\n     <message>\n         <source>Transaction amounts must be positive</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u064a\u062c\u0628 \u0627\u0646 \u064a\u0643\u0648\u0646 \u0642\u064a\u0645\u0629 \u0627\u0644\u0639\u0645\u0644\u064a\u0629 \u0628\u0627\u0644\u0645\u0648\u062c\u0628</translation>\n     </message>\n     <message>\n         <source>Transaction too large</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629 \u0637\u0648\u064a\u0644\u0629 \u062c\u062f\u0627</translation>\n     </message>\n     <message>\n         <source>Use UPnP to map the listening port (default: 0)</source>\n@@ -3191,11 +3200,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Warning</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u062d\u0630\u064a\u0631</translation>\n     </message>\n     <message>\n         <source>Warning: This version is obsolete, upgrade required!</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u062d\u0630\u064a\u0631 : \u0647\u0630\u0627 \u0627\u0644\u0627\u0635\u062f\u0627\u0631 \u0642\u062f\u064a\u0645 , \u064a\u062a\u0637\u0644\u0628 \u0627\u0644\u062a\u062d\u062f\u064a\u062b</translation>\n     </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n@@ -3231,7 +3240,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Upgrade wallet to latest format</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0645\u062d\u0641\u0638\u0629 \u0644\u0644\u0646\u0633\u062e\u0629 \u0627\u0644\u0627\u062e\u064a\u0631\u0629</translation>\n     </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: 100)</source>\n@@ -3251,7 +3260,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Server private key (default: server.pem)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0644\u0645\u0641\u062a\u0627\u062d \u0627\u0644\u062e\u0627\u0635 \u0628\u0627\u0644\u0633\u064a\u0631\u0641\u0631 (default: server.pem)</translation>\n     </message>\n     <message>\n         <source>This help message</source>\n@@ -3287,7 +3296,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Invalid -proxy address: &apos;%s&apos;</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0628\u0631\u0648\u0643\u0633\u064a \u063a\u064a\u0631 \u0635\u062d\u064a\u062d : &apos;%s&apos;</translation>\n     </message>\n     <message>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n@@ -3311,11 +3320,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Invalid amount</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0642\u064a\u0645\u0629 \u063a\u064a\u0631 \u0635\u062d\u064a\u062d\u0629</translation>\n     </message>\n     <message>\n         <source>Insufficient funds</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0627\u0645\u0648\u0627\u0644 \u063a\u064a\u0631 \u0643\u0627\u0641\u064a\u0629</translation>\n     </message>\n     <message>\n         <source>Loading block index...</source>\n@@ -3335,7 +3344,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Cannot write default address</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0644\u0627\u064a\u0645\u0643\u0646 \u0643\u062a\u0627\u0628\u0629 \u0627\u0644\u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a</translation>\n     </message>\n     <message>\n         <source>Rescanning...</source>\n@@ -3347,7 +3356,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>To use the %s option</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 %s \u0627\u0644\u062e\u064a\u0627\u0631</translation>\n     </message>\n     <message>\n         <source>Error</source>"
      },
      {
        "sha": "c384aa6d2debb2d665b09057f7fb27f79f3e496e",
        "filename": "src/qt/locale/bitcoin_be_BY.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_be_BY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_be_BY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_be_BY.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,4 +1,4 @@\n-<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"be_BY\" version=\"2.0\">\n+<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"be_BY\" version=\"2.1\">\n <context>\n     <name>AboutDialog</name>\n     <message>\n@@ -1042,6 +1042,14 @@ Address: %4\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <source>Third party transaction URLs</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <source>Active command-line options that override above options:</source>\n         <translation type=\"unfinished\"/>\n@@ -1344,7 +1352,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <source>Bitcoin Core did&apos;t yet exit safely...</source>\n+        <source>Bitcoin Core didn&apos;t yet exit safely...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>"
      },
      {
        "sha": "367e223784a310e07cf56b8287aa2512a47c6a8c",
        "filename": "src/qt/locale/bitcoin_bg.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_bg.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_bg.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bg.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,4 +1,4 @@\n-<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"bg\" version=\"2.0\">\n+<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"bg\" version=\"2.1\">\n <context>\n     <name>AboutDialog</name>\n     <message>\n@@ -1043,6 +1043,14 @@ Address: %4\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <source>Third party transaction URLs</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <source>Active command-line options that override above options:</source>\n         <translation type=\"unfinished\"/>\n@@ -1345,7 +1353,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <source>Bitcoin Core did&apos;t yet exit safely...</source>\n+        <source>Bitcoin Core didn&apos;t yet exit safely...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>"
      },
      {
        "sha": "2ec28af777a4536972009dcabacd83c35b05d015",
        "filename": "src/qt/locale/bitcoin_bs.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_bs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_bs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bs.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,4 +1,4 @@\n-<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"bs\" version=\"2.0\">\n+<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"bs\" version=\"2.1\">\n <context>\n     <name>AboutDialog</name>\n     <message>\n@@ -1038,6 +1038,14 @@ Address: %4\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <source>Third party transaction URLs</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <source>Active command-line options that override above options:</source>\n         <translation type=\"unfinished\"/>\n@@ -1340,7 +1348,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <source>Bitcoin Core did&apos;t yet exit safely...</source>\n+        <source>Bitcoin Core didn&apos;t yet exit safely...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>"
      },
      {
        "sha": "c225967caca9d15e2743662dbba9c4bb0d53362b",
        "filename": "src/qt/locale/bitcoin_ca.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ca.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ca.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,4 +1,4 @@\n-<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"ca\" version=\"2.0\">\n+<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"ca\" version=\"2.1\">\n <context>\n     <name>AboutDialog</name>\n     <message>\n@@ -1038,6 +1038,14 @@ Address: %4\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <source>Third party transaction URLs</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <source>Active command-line options that override above options:</source>\n         <translation type=\"unfinished\"/>\n@@ -1340,7 +1348,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <source>Bitcoin Core did&apos;t yet exit safely...</source>\n+        <source>Bitcoin Core didn&apos;t yet exit safely...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>"
      },
      {
        "sha": "b36d6b7d670b8692ced237b779b7f73a222372c3",
        "filename": "src/qt/locale/bitcoin_ca@valencia.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ca@valencia.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ca@valencia.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca@valencia.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,4 +1,4 @@\n-<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"ca@valencia\" version=\"2.0\">\n+<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"ca@valencia\" version=\"2.1\">\n <context>\n     <name>AboutDialog</name>\n     <message>\n@@ -1038,6 +1038,14 @@ Address: %4\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <source>Third party transaction URLs</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <source>Active command-line options that override above options:</source>\n         <translation type=\"unfinished\"/>\n@@ -1340,7 +1348,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <source>Bitcoin Core did&apos;t yet exit safely...</source>\n+        <source>Bitcoin Core didn&apos;t yet exit safely...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>"
      },
      {
        "sha": "5bf7fbfba7213894e830117a99336540a2902b59",
        "filename": "src/qt/locale/bitcoin_ca_ES.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ca_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ca_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca_ES.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,4 +1,4 @@\n-<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"ca_ES\" version=\"2.0\">\n+<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"ca_ES\" version=\"2.1\">\n <context>\n     <name>AboutDialog</name>\n     <message>\n@@ -1038,6 +1038,14 @@ Address: %4\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <source>Third party transaction URLs</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <source>Active command-line options that override above options:</source>\n         <translation type=\"unfinished\"/>\n@@ -1340,7 +1348,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <source>Bitcoin Core did&apos;t yet exit safely...</source>\n+        <source>Bitcoin Core didn&apos;t yet exit safely...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>"
      },
      {
        "sha": "696cbedd0a18c37cc55faa516651b84e128ec2a6",
        "filename": "src/qt/locale/bitcoin_cmn.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_cmn.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_cmn.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cmn.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a",
        "patch": "@@ -1,4 +1,4 @@\n-<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"cmn\" version=\"2.0\">\n+<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"cmn\" version=\"2.1\">\n <context>\n     <name>AboutDialog</name>\n     <message>\n@@ -1038,6 +1038,14 @@ Address: %4\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n+    <message>\n+        <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n+    <message>\n+        <source>Third party transaction URLs</source>\n+        <translation type=\"unfinished\"/>\n+    </message>\n     <message>\n         <source>Active command-line options that override above options:</source>\n         <translation type=\"unfinished\"/>\n@@ -1340,7 +1348,7 @@ Address: %4\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n-        <source>Bitcoin Core did&apos;t yet exit safely...</source>\n+        <source>Bitcoin Core didn&apos;t yet exit safely...</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>"
      },
      {
        "sha": "6cc783b59ea65113fce1eff4e847ba863f29f060",
        "filename": "src/qt/locale/bitcoin_cs.ts",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_cs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_cs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cs.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "d2f41739cb1a292424e9d2bd6009e0f69b004337",
        "filename": "src/qt/locale/bitcoin_cy.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_cy.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_cy.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cy.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "a0514035fd70f2a15ef64c8007a087176a0bc62b",
        "filename": "src/qt/locale/bitcoin_da.ts",
        "status": "modified",
        "additions": 420,
        "deletions": 412,
        "changes": 832,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_da.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_da.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_da.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "888b48c251f482bfdeaeb09fa1e5c5f4d7bb50d6",
        "filename": "src/qt/locale/bitcoin_de.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_de.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_de.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "e957a0088eba861878d4a77c8b89533ad8ef02d1",
        "filename": "src/qt/locale/bitcoin_el_GR.ts",
        "status": "modified",
        "additions": 84,
        "deletions": 75,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_el_GR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_el_GR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el_GR.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "8c2869abac495ba8694de3a442758cbcd3ceb883",
        "filename": "src/qt/locale/bitcoin_eo.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_eo.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_eo.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eo.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "1ed40a77c28b3b28cbd8b34fd42fea68e305f74e",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 14,
        "deletions": 7,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "758a190f758f466263d7c87c78ec2c5441570829",
        "filename": "src/qt/locale/bitcoin_es_CL.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_es_CL.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_es_CL.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_CL.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "6944c3157f0d523a5677097924ebd0e6c609d428",
        "filename": "src/qt/locale/bitcoin_es_DO.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_es_DO.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_es_DO.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_DO.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "9a39551d6be4edac2b0ce07eb03fe5ea83a31ddc",
        "filename": "src/qt/locale/bitcoin_es_MX.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_es_MX.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_es_MX.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_MX.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "03ecce46c0a076602972b1af38f1753bd5ef90a1",
        "filename": "src/qt/locale/bitcoin_es_UY.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_es_UY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_es_UY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_UY.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "e6c27bf21c65609382dc1b0edc21e636588b0a07",
        "filename": "src/qt/locale/bitcoin_et.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_et.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_et.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_et.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "1fce25d6daaa5010e4f8cf5d0f1e743e5dc9aec6",
        "filename": "src/qt/locale/bitcoin_eu_ES.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_eu_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_eu_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eu_ES.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "0dfbafb81186d60bf4542ddded396653a28d1ace",
        "filename": "src/qt/locale/bitcoin_fa.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_fa.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_fa.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "3b82ffa5e5d75addc2ea8e65e4b029ae0ed123e3",
        "filename": "src/qt/locale/bitcoin_fa_IR.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_fa_IR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_fa_IR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa_IR.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "dc723595908ea31ce9a2eef7515f8216d8be0712",
        "filename": "src/qt/locale/bitcoin_fi.ts",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_fi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_fi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fi.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "05089f0416cae74c93b29f2bfde95aa57f68c64e",
        "filename": "src/qt/locale/bitcoin_fr.ts",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_fr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_fr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "ff22c2fd1c694cdc00956f8a24481c3dd60d6187",
        "filename": "src/qt/locale/bitcoin_fr_CA.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_fr_CA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_fr_CA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr_CA.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "ecf1fa2222201fd9dd64d6424bd45df0440f3c8e",
        "filename": "src/qt/locale/bitcoin_gl.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_gl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_gl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_gl.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "ed4a9265e4bc7538ce652985669b740f190c6d41",
        "filename": "src/qt/locale/bitcoin_gu_IN.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_gu_IN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_gu_IN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_gu_IN.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "ae13df452435f1eacf0f9f178fecc4059b7dd5ae",
        "filename": "src/qt/locale/bitcoin_he.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_he.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_he.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_he.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "3ccac8899e85a8086ac00ffc3b1593cc25233495",
        "filename": "src/qt/locale/bitcoin_hi_IN.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_hi_IN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_hi_IN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hi_IN.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "bd2b773d2fea65dc527bfa3e43b9fcf919b021a3",
        "filename": "src/qt/locale/bitcoin_hr.ts",
        "status": "modified",
        "additions": 15,
        "deletions": 7,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_hr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_hr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hr.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "3d8d45a61dd421facd9d032e2467005e82e06926",
        "filename": "src/qt/locale/bitcoin_hu.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_hu.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_hu.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hu.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "2b9685f6a0f410ea69c97e21d5d43713d1d4fc9b",
        "filename": "src/qt/locale/bitcoin_id_ID.ts",
        "status": "modified",
        "additions": 46,
        "deletions": 38,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_id_ID.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_id_ID.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_id_ID.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "cb9fed1ab93284c335d9996249499b5e93e637e0",
        "filename": "src/qt/locale/bitcoin_it.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_it.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_it.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "d3a6cece8759c4478516d5201b6781c0e4d1ae58",
        "filename": "src/qt/locale/bitcoin_ja.ts",
        "status": "modified",
        "additions": 103,
        "deletions": 95,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ja.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ja.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ja.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "fda2e97037a4fca14b66ba560c19bcf93ce30ff4",
        "filename": "src/qt/locale/bitcoin_ka.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ka.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ka.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ka.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "b913ba9858f11fbc39d3c99274a5eb77fa99c519",
        "filename": "src/qt/locale/bitcoin_kk_KZ.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_kk_KZ.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_kk_KZ.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_kk_KZ.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "ce30a8603d8e15254a2c0c6144817a9715df2a8c",
        "filename": "src/qt/locale/bitcoin_ko_KR.ts",
        "status": "modified",
        "additions": 118,
        "deletions": 108,
        "changes": 226,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ko_KR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ko_KR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ko_KR.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "d0db034e86d0be50f794c1b5438ff0c64d7abf0d",
        "filename": "src/qt/locale/bitcoin_ky.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ky.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ky.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ky.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "425519514a3113a53de4e1e758340ffcc1df7e04",
        "filename": "src/qt/locale/bitcoin_la.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_la.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_la.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_la.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "c74fd8ab3bd6d78020036d621d5915efcb1017d4",
        "filename": "src/qt/locale/bitcoin_lt.ts",
        "status": "modified",
        "additions": 13,
        "deletions": 5,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_lt.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_lt.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_lt.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "299e4d55e02ef4b36d6345730c535db42d4e5b50",
        "filename": "src/qt/locale/bitcoin_lv_LV.ts",
        "status": "modified",
        "additions": 155,
        "deletions": 142,
        "changes": 297,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_lv_LV.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_lv_LV.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_lv_LV.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "e765931b2cd0ea90613a8284029cd95ff6c68973",
        "filename": "src/qt/locale/bitcoin_mn.ts",
        "status": "added",
        "additions": 3375,
        "deletions": 0,
        "changes": 3375,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_mn.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_mn.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_mn.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "0f92a6d49fee90496a50e3b1e5197a46e5bb2681",
        "filename": "src/qt/locale/bitcoin_ms_MY.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ms_MY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ms_MY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ms_MY.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "9e38c69c6096553d446818741ebaeca27940e8c5",
        "filename": "src/qt/locale/bitcoin_nb.ts",
        "status": "modified",
        "additions": 14,
        "deletions": 6,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_nb.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_nb.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nb.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "8cbbbdad7f1918b83277823c242b3ed6958b0645",
        "filename": "src/qt/locale/bitcoin_nl.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_nl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_nl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nl.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "22f1b7ccc3cd88826615a0f1f9e3fbc9c542e71a",
        "filename": "src/qt/locale/bitcoin_pam.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_pam.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_pam.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pam.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "6bc177076b7ac47f811e55bc027a52687d231c1c",
        "filename": "src/qt/locale/bitcoin_pl.ts",
        "status": "modified",
        "additions": 27,
        "deletions": 19,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_pl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_pl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pl.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "ee1c2a7381d3cd1f6400c383179346bf90cdcb7f",
        "filename": "src/qt/locale/bitcoin_pt_BR.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_pt_BR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_pt_BR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_BR.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "7a9595a6ddb764dad68c1d176eee02cfacd47482",
        "filename": "src/qt/locale/bitcoin_pt_PT.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_pt_PT.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_pt_PT.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_PT.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "d09c40f62e9106a3effb386d5f7f476a6eb4d531",
        "filename": "src/qt/locale/bitcoin_ro_RO.ts",
        "status": "modified",
        "additions": 13,
        "deletions": 5,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ro_RO.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ro_RO.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ro_RO.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "570c3a61e766117f05b3d756100d82c39a14cb22",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "3bc3e65c627103c93d3be4968425aafe9d14bb17",
        "filename": "src/qt/locale/bitcoin_sah.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_sah.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_sah.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sah.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "bce535fad736996adc71f7ce307636c9106750e4",
        "filename": "src/qt/locale/bitcoin_sk.ts",
        "status": "modified",
        "additions": 288,
        "deletions": 263,
        "changes": 551,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_sk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_sk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sk.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "2ad31e911baec71190261ac239252cab463cbf96",
        "filename": "src/qt/locale/bitcoin_sl_SI.ts",
        "status": "modified",
        "additions": 30,
        "deletions": 20,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_sl_SI.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_sl_SI.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sl_SI.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "65e37ff90392ca6f60c697c63e9cb5235c29be9c",
        "filename": "src/qt/locale/bitcoin_sq.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_sq.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_sq.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sq.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "901eb59394d55151e2056bc0fc576e3758c28603",
        "filename": "src/qt/locale/bitcoin_sr.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_sr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_sr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sr.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "e98048e925d4d5496c29cdeb638b10aed5c9ea2d",
        "filename": "src/qt/locale/bitcoin_sv.ts",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_sv.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_sv.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sv.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "54e15a75e00a61cb3ae4cd7f16aa1bb0a100b1f2",
        "filename": "src/qt/locale/bitcoin_th_TH.ts",
        "status": "modified",
        "additions": 58,
        "deletions": 50,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_th_TH.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_th_TH.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_th_TH.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "15ec92f98291bdd8ff77e42d0e62f57b93050942",
        "filename": "src/qt/locale/bitcoin_tr.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_tr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_tr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_tr.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "1e739395a263e200e9840209bbb34c037dc2898c",
        "filename": "src/qt/locale/bitcoin_uk.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_uk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_uk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uk.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "d9634f63e33750103ff53d7882ac77e3e6784281",
        "filename": "src/qt/locale/bitcoin_ur_PK.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ur_PK.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_ur_PK.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ur_PK.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "6ba4f6fa1bf901759a15e58d11a657035e24f9dd",
        "filename": "src/qt/locale/bitcoin_uz@Cyrl.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_uz@Cyrl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_uz@Cyrl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uz@Cyrl.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "0f9fc4f0f1d4cfc1d1f9006388cde852e0fd2556",
        "filename": "src/qt/locale/bitcoin_vi.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_vi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_vi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_vi.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "2102729523638044d4c95c30eeae00aced5d006d",
        "filename": "src/qt/locale/bitcoin_vi_VN.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_vi_VN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_vi_VN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_vi_VN.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "b87d27fe12f6fc5b2df0a62ea3538e3edddd4d45",
        "filename": "src/qt/locale/bitcoin_zh_CN.ts",
        "status": "modified",
        "additions": 49,
        "deletions": 41,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_zh_CN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_zh_CN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_CN.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "835d0134d62c38da63de278eba73fbcfca617944",
        "filename": "src/qt/locale/bitcoin_zh_HK.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_zh_HK.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_zh_HK.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_HK.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "fccdf48abde7037660f62b399b26c0a6946ddf77",
        "filename": "src/qt/locale/bitcoin_zh_TW.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_zh_TW.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/locale/bitcoin_zh_TW.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_TW.ts?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "74fb64ace300cc42f15ccb43895ecbde2250641a",
        "filename": "src/qt/macdockiconhandler.mm",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/macdockiconhandler.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/macdockiconhandler.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macdockiconhandler.mm?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "3d588cd317127566e1b12d37ed5657840d27db93",
        "filename": "src/qt/notificator.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/notificator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/notificator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "3395e6435098f0d97d18047e369cd2703852ded2",
        "filename": "src/qt/notificator.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/notificator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/notificator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "597be40abdf6124cb6b84b42e13a093668186a80",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 11,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "f07e66bf04d8266b743e7d22852eba6da79dfdec",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 41,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "89c2ec745305b371976dca08141e7b6b757663d7",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "f51b0311bc362b4b44077d7ffc9b0551b3fe4315",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 6,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "fe00106770edafa79a28e3ab472d749560cffbc6",
        "filename": "src/qt/overviewpage.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/overviewpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/overviewpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "acce42e20376874d3688761384d143141698a23e",
        "filename": "src/qt/paymentrequestplus.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 11,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/paymentrequestplus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/paymentrequestplus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "3c4861a4d4bdb81ccdb1c82a637e4e68d7a39b94",
        "filename": "src/qt/paymentrequestplus.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/paymentrequestplus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/paymentrequestplus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "5471625a67e6dd2452601aa7e192f9ba6f83f7da",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 81,
        "deletions": 48,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "981d063c49902ccdfdaff13ab1b6bd9073f18fca",
        "filename": "src/qt/peertablemodel.cpp",
        "status": "added",
        "additions": 236,
        "deletions": 0,
        "changes": 236,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/peertablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/peertablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "385bf0e0c189f1d869c64fb079dc928a778299ee",
        "filename": "src/qt/peertablemodel.h",
        "status": "added",
        "additions": 80,
        "deletions": 0,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/peertablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/peertablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "f2c76c83555b317583d7233d44c09fb849a7e1a6",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 10,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "663cb157a446600c1ed191f33827a121ca1fcd0a",
        "filename": "src/qt/receivecoinsdialog.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/receivecoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/receivecoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "cc2f00916f2bb966272b03ac5dde0838ff51e3a7",
        "filename": "src/qt/receiverequestdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/receiverequestdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/receiverequestdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "9b78e495c364dc5aeee305dc954fedd1358f2038",
        "filename": "src/qt/receiverequestdialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/receiverequestdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/receiverequestdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "b5a998f9f539599b3ea160bb13744368717ef3df",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 1,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "4f0b241259de92783097a33cbab7cfa58c431555",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "809235be5f9c5aa3e35b70ca30e8fe9f1b979a66",
        "filename": "src/qt/res/bitcoin-qt-res.rc",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/res/bitcoin-qt-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/res/bitcoin-qt-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/bitcoin-qt-res.rc?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "ec3497435c9bd96caa594d5fa007a80efda05a04",
        "filename": "src/qt/res/icons/unit_btc.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/res/icons/unit_btc.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/res/icons/unit_btc.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/unit_btc.png?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "32bf2f2ca05a4768fc8e280a1e4620e3daf42538",
        "filename": "src/qt/res/icons/unit_mbtc.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/res/icons/unit_mbtc.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/res/icons/unit_mbtc.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/unit_mbtc.png?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "d5a154882b66ec85df4e7fa6a05d5e074bbdb4ff",
        "filename": "src/qt/res/icons/unit_ubtc.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/res/icons/unit_ubtc.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/res/icons/unit_ubtc.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/unit_ubtc.png?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "e1f40ddd098043f6cc6c6eeda7f8b81c36302016",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 200,
        "deletions": 20,
        "changes": 220,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "3aeff3eace9be1a8f2101125b3f5d3950761d97d",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 31,
        "deletions": 1,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "25e3d2a0dc1f838dc7130c12a3a6b2d9c7ba288d",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 26,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "6cdf4a00c8dd1ae31caf027679ee5cf68b16f745",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "d4d021e21c1cceb93186e4feea04631329adc196",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "1162e2d87f5a72553025a4d10d8c34f06a503ec6",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "a02f86b62ac9b38ec85b266c6205b0485557e3a5",
        "filename": "src/qt/test/Makefile",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/test/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/test/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "2461b5ff4d4d582d78ea663c9c9e5b3c7f0c6152",
        "filename": "src/qt/test/Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=2e4fee2ac4824570c1340a8f8fe2aed4580de879"
      },
      {
        "sha": "e92a7d2b1a4d06e826b43bc11bfc0dd4ef1aadc4",
        "filename": "src/qt/test/paymentservertests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/test/paymentservertests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/test/paymentservertests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/paymentservertests.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "03a2381c0665f6f17c1859f6e634855941f86298",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "ac1614efd03e54e9d5aaee576a8738be37784657",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 35,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "4bd42932106930af861e46cfed3eda475368ca7d",
        "filename": "src/qt/transactiondesc.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactiondesc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactiondesc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "7293029787a692c0dbed518c80884c3514ee8e76",
        "filename": "src/qt/transactionfilterproxy.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactionfilterproxy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactionfilterproxy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionfilterproxy.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "7d29c212b31093e4472ca0f7c6f3fb4040b619ef",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 9,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "d3cfa77d97be91e83d9a1c70faf9e63cc3dac501",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 23,
        "deletions": 4,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "fb21ddc46ded6194dcc0589e9cdb9ae65e3d0198",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 15,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "463e7bbff04823ea0cc6a72a4802328a3d61c355",
        "filename": "src/qt/transactiontablemodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactiontablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactiontablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "7e8b71d8ea9cc0add378eb175027230e55ed580b",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "5fb0da145dea2d7268018029700a905454a32e94",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 63,
        "changes": 117,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "154bb70b8bb60b328a277d64931c17a346707db2",
        "filename": "src/qt/utilitydialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 23,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/utilitydialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/utilitydialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "7317c327665563d075ada1e7be6b2312bab295e5",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 42,
        "deletions": 13,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "7ad54ff8e669deb4f5f19c18e271e26b24409e66",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "a06f42f66eb772a3bb4913b4439472cc315e7a99",
        "filename": "src/qt/winshutdownmonitor.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 3,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/winshutdownmonitor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/qt/winshutdownmonitor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/winshutdownmonitor.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "a67f266a1347f5f01735b09033da81cc942469d5",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 24,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "5edeecf93309d5aea8762f0c1bcd0790cfa22311",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 101,
        "deletions": 241,
        "changes": 342,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "840890e34b404364afbab1dbf5ee12b0acfbe194",
        "filename": "src/rpcclient.h",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcclient.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcclient.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "4193f41b49f159c2925825868d58fba79a72ad5d",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 57,
        "deletions": 3,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "c7621dc137b5d3b894907fc7f1e1e6da3e31d7b8",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 83,
        "deletions": 162,
        "changes": 245,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "cff795bdf4979a92d40e59e2e7643480c4f0c072",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 48,
        "deletions": 32,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "cf2c293caf09f6746e664a4bf60a37cbbc8daf38",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 14,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "9e18ca847e4ed60901974ddff26abb3056ab0c62",
        "filename": "src/rpcprotocol.cpp",
        "status": "modified",
        "additions": 43,
        "deletions": 24,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcprotocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcprotocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "5627077bfbf4333db305d9f9d6c80e78587f1079",
        "filename": "src/rpcprotocol.h",
        "status": "modified",
        "additions": 25,
        "deletions": 5,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcprotocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcprotocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "2306b1b8832a553e823a05abb4e60cbc6b9b030c",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 15,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "18fa07510142fb0a75a825b15db6b857dbec4657",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 217,
        "deletions": 144,
        "changes": 361,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "e32eb975a1a66418746e3c667e73b25de82db36e",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "1e4612906563dded9ea1bb54e875c15448abd05a",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 132,
        "deletions": 55,
        "changes": 187,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "238a25e72d7d08a2c290bcc0e575e72f961e1e35",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 91,
        "deletions": 73,
        "changes": 164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "e36be2db9e33957e98a760adc724f2bad3f16757",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 196,
        "deletions": 63,
        "changes": 259,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "src/secp256k1/.empty",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/secp256k1/.empty",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/secp256k1/.empty",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/.empty?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "5ac85554c6dbd3ecf425ee9d075dfae9e366f5bc",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "5e17555e7a8fc05e812527ae60882078b29789a0",
        "filename": "src/test/DoS_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 93,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/DoS_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/DoS_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/DoS_tests.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "87bf73fec98d99ed7421093bfde8528d3ced4ddb",
        "filename": "src/test/Makefile",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "b375ba1306d7a5b34e5c0367ddd320f40ef43dc7",
        "filename": "src/test/Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 76,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=2e4fee2ac4824570c1340a8f8fe2aed4580de879"
      },
      {
        "sha": "4bee0f6b6e2611936dd5224e6ed71d2fea64ad97",
        "filename": "src/test/accounting_tests.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/accounting_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/accounting_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/accounting_tests.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "0ac3e9a36353c26d44fa81e4a2c18142e02bf390",
        "filename": "src/test/base58_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/base58_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/base58_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base58_tests.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "a75f5250fa8922c894e630a830d92f16cbe20ace",
        "filename": "src/test/bignum.h",
        "status": "added",
        "additions": 180,
        "deletions": 0,
        "changes": 180,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bignum.h?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "d5ee8c9778c3b59a11ed07793c27cc125da9453e",
        "filename": "src/test/bignum_tests.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 224,
        "changes": 224,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/test/bignum_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/test/bignum_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bignum_tests.cpp?ref=2e4fee2ac4824570c1340a8f8fe2aed4580de879"
      },
      {
        "sha": "2cdafa4bdde7cdf755f083ebe861e5b63f170434",
        "filename": "src/test/bloom_tests.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 14,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/bloom_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/bloom_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bloom_tests.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "23dd74296c7e939426aaf31c6f4cbc26c410d73a",
        "filename": "src/test/canonical_tests.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/canonical_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/canonical_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/canonical_tests.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "7bd98fa381e17085dc288293de3c4d807a4e5cdb",
        "filename": "src/test/crypto_tests.cpp",
        "status": "added",
        "additions": 203,
        "deletions": 0,
        "changes": 203,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/crypto_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/crypto_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/crypto_tests.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "d623e974b800e10e238890c0033ba4cb133b3503",
        "filename": "src/test/data/script_invalid.json",
        "status": "modified",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/data/script_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/data/script_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_invalid.json?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "7546a3b1fe4c197a6ce352acec009bdbe7ea99ed",
        "filename": "src/test/data/script_valid.json",
        "status": "modified",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/data/script_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/data/script_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_valid.json?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "638a705f9f3c9ad1cda1df0ac252256ba2d45bba",
        "filename": "src/test/data/tx_invalid.json",
        "status": "modified",
        "additions": 45,
        "deletions": 18,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/data/tx_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/data/tx_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_invalid.json?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "aa8e5ca6c35a770c1e9656fcb767623964343d05",
        "filename": "src/test/data/tx_valid.json",
        "status": "modified",
        "additions": 87,
        "deletions": 27,
        "changes": 114,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/data/tx_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/data/tx_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_valid.json?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      },
      {
        "sha": "780ce480cea507913fcfc0303b1780d1fbbfb598",
        "filename": "src/test/hmac_tests.cpp",
        "status": "removed",
        "additions": 0,
        "deletions": 129,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/test/hmac_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e4fee2ac4824570c1340a8f8fe2aed4580de879/src/test/hmac_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/hmac_tests.cpp?ref=2e4fee2ac4824570c1340a8f8fe2aed4580de879"
      },
      {
        "sha": "47977cf29540d0998637d960b03969db32665b33",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 33,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96df327834af3b55918adfac9b3f65adfc960b3a/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=96df327834af3b55918adfac9b3f65adfc960b3a"
      }
    ]
  },
  {
    "sha": "f7d70c603f3b2a664082e0829b92844233c46cb4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmN2Q3MGM2MDNmM2IyYTY2NDA4MmUwODI5YjkyODQ0MjMzYzQ2Y2I0",
    "commit": {
      "author": {
        "name": "Roy Badami",
        "email": "roy@gnomon.org.uk",
        "date": "2014-07-07T21:27:09Z"
      },
      "committer": {
        "name": "Roy Badami",
        "email": "roy@gnomon.org.uk",
        "date": "2014-07-07T21:27:09Z"
      },
      "message": "Remove unused fAlign argument from BitcoinUnits::format and friends",
      "tree": {
        "sha": "ab3ae4854a60204610d52ccf765d72e74cc3288f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab3ae4854a60204610d52ccf765d72e74cc3288f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7d70c603f3b2a664082e0829b92844233c46cb4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7d70c603f3b2a664082e0829b92844233c46cb4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f7d70c603f3b2a664082e0829b92844233c46cb4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7d70c603f3b2a664082e0829b92844233c46cb4/comments",
    "author": {
      "login": "roybadami",
      "id": 5601854,
      "node_id": "MDQ6VXNlcjU2MDE4NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5601854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roybadami",
      "html_url": "https://github.com/roybadami",
      "followers_url": "https://api.github.com/users/roybadami/followers",
      "following_url": "https://api.github.com/users/roybadami/following{/other_user}",
      "gists_url": "https://api.github.com/users/roybadami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roybadami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roybadami/subscriptions",
      "organizations_url": "https://api.github.com/users/roybadami/orgs",
      "repos_url": "https://api.github.com/users/roybadami/repos",
      "events_url": "https://api.github.com/users/roybadami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roybadami/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "roybadami",
      "id": 5601854,
      "node_id": "MDQ6VXNlcjU2MDE4NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5601854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roybadami",
      "html_url": "https://github.com/roybadami",
      "followers_url": "https://api.github.com/users/roybadami/followers",
      "following_url": "https://api.github.com/users/roybadami/following{/other_user}",
      "gists_url": "https://api.github.com/users/roybadami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roybadami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roybadami/subscriptions",
      "organizations_url": "https://api.github.com/users/roybadami/orgs",
      "repos_url": "https://api.github.com/users/roybadami/repos",
      "events_url": "https://api.github.com/users/roybadami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roybadami/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "96df327834af3b55918adfac9b3f65adfc960b3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96df327834af3b55918adfac9b3f65adfc960b3a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/96df327834af3b55918adfac9b3f65adfc960b3a"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 19,
      "deletions": 18
    },
    "files": [
      {
        "sha": "64751c17832d909310ef3adbfde86a30055f0b83",
        "filename": "src/qt/bitcoinunits.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7d70c603f3b2a664082e0829b92844233c46cb4/src/qt/bitcoinunits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7d70c603f3b2a664082e0829b92844233c46cb4/src/qt/bitcoinunits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.cpp?ref=f7d70c603f3b2a664082e0829b92844233c46cb4",
        "patch": "@@ -111,7 +111,7 @@ int BitcoinUnits::decimals(int unit)\n     }\n }\n \n-QString BitcoinUnits::format(int unit, qint64 n, bool fPlus, SeparatorStyle separators, bool fAlign)\n+QString BitcoinUnits::format(int unit, qint64 n, bool fPlus, SeparatorStyle separators)\n {\n     // Note: not using straight sprintf here because we do NOT want\n     // localized number formatting.\n@@ -147,9 +147,10 @@ QString BitcoinUnits::format(int unit, qint64 n, bool fPlus, SeparatorStyle sepa\n     return quotient_str + QString(\".\") + remainder_str;\n }\n \n-QString BitcoinUnits::formatWithUnit(int unit, qint64 amount, bool plussign, SeparatorStyle separators, bool fAlign)\n+\n+QString BitcoinUnits::formatWithUnit(int unit, qint64 amount, bool plussign, SeparatorStyle separators)\n {\n-    return format(unit, amount, plussign, separators, fAlign) + QString(\" \") + name(unit);\n+    return format(unit, amount, plussign, separators) + QString(\" \") + name(unit);\n }\n \n QString BitcoinUnits::formatHtmlWithUnit(int unit, qint64 amount, bool plussign, SeparatorStyle separators)"
      },
      {
        "sha": "7fa24c854228ef77d5d3b912fc857dc5ba330a6f",
        "filename": "src/qt/bitcoinunits.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7d70c603f3b2a664082e0829b92844233c46cb4/src/qt/bitcoinunits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7d70c603f3b2a664082e0829b92844233c46cb4/src/qt/bitcoinunits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.h?ref=f7d70c603f3b2a664082e0829b92844233c46cb4",
        "patch": "@@ -89,9 +89,9 @@ class BitcoinUnits: public QAbstractListModel\n     //! Number of decimals left\n     static int decimals(int unit);\n     //! Format as string\n-    static QString format(int unit, qint64 amount, bool plussign=false, SeparatorStyle separators=separatorStandard, bool fAlign=false);\n+    static QString format(int unit, qint64 amount, bool plussign=false, SeparatorStyle separators=separatorStandard);\n     //! Format as string (with unit)\n-    static QString formatWithUnit(int unit, qint64 amount, bool plussign=false, SeparatorStyle separators=separatorStandard, bool fAlign=false);\n+    static QString formatWithUnit(int unit, qint64 amount, bool plussign=false, SeparatorStyle separators=separatorStandard);\n     static QString formatHtmlWithUnit(int unit, qint64 amount, bool plussign=false, SeparatorStyle separators=separatorStandard);\n     //! Parse string to coin amount\n     static bool parse(int unit, const QString &value, qint64 *val_out);"
      },
      {
        "sha": "1c700b37ffe5dd9d40a734210015c4b81d97b8f5",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7d70c603f3b2a664082e0829b92844233c46cb4/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7d70c603f3b2a664082e0829b92844233c46cb4/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=f7d70c603f3b2a664082e0829b92844233c46cb4",
        "patch": "@@ -72,7 +72,7 @@ class TxViewDelegate : public QAbstractItemDelegate\n             foreground = option.palette.color(QPalette::Text);\n         }\n         painter->setPen(foreground);\n-        QString amountText = BitcoinUnits::formatWithUnit(unit, amount, true, BitcoinUnits::separatorAlways, true);\n+        QString amountText = BitcoinUnits::formatWithUnit(unit, amount, true, BitcoinUnits::separatorAlways);\n         if(!confirmed)\n         {\n             amountText = QString(\"[\") + amountText + QString(\"]\");\n@@ -147,14 +147,14 @@ void OverviewPage::setBalance(qint64 balance, qint64 unconfirmedBalance, qint64\n     currentWatchOnlyBalance = watchOnlyBalance;\n     currentWatchUnconfBalance = watchUnconfBalance;\n     currentWatchImmatureBalance = watchImmatureBalance;\n-    ui->labelBalance->setText(BitcoinUnits::formatWithUnit(unit, balance, false, BitcoinUnits::separatorAlways, true));\n-    ui->labelUnconfirmed->setText(BitcoinUnits::formatWithUnit(unit, unconfirmedBalance, false, BitcoinUnits::separatorAlways, true));\n-    ui->labelImmature->setText(BitcoinUnits::formatWithUnit(unit, immatureBalance, false, BitcoinUnits::separatorAlways, true));\n-    ui->labelTotal->setText(BitcoinUnits::formatWithUnit(unit, balance + unconfirmedBalance + immatureBalance, false, BitcoinUnits::separatorAlways, true));\n-    ui->labelWatchAvailable->setText(BitcoinUnits::formatWithUnit(unit, watchOnlyBalance, false, BitcoinUnits::separatorAlways, true));\n-    ui->labelWatchPending->setText(BitcoinUnits::formatWithUnit(unit, watchUnconfBalance, false, BitcoinUnits::separatorAlways, true));\n-    ui->labelWatchImmature->setText(BitcoinUnits::formatWithUnit(unit, watchImmatureBalance, false, BitcoinUnits::separatorAlways, true));\n-    ui->labelWatchTotal->setText(BitcoinUnits::formatWithUnit(unit, watchOnlyBalance + watchUnconfBalance + watchImmatureBalance, false, BitcoinUnits::separatorAlways, true));\n+    ui->labelBalance->setText(BitcoinUnits::formatWithUnit(unit, balance, false, BitcoinUnits::separatorAlways));\n+    ui->labelUnconfirmed->setText(BitcoinUnits::formatWithUnit(unit, unconfirmedBalance, false, BitcoinUnits::separatorAlways));\n+    ui->labelImmature->setText(BitcoinUnits::formatWithUnit(unit, immatureBalance, false, BitcoinUnits::separatorAlways));\n+    ui->labelTotal->setText(BitcoinUnits::formatWithUnit(unit, balance + unconfirmedBalance + immatureBalance, false, BitcoinUnits::separatorAlways));\n+    ui->labelWatchAvailable->setText(BitcoinUnits::formatWithUnit(unit, watchOnlyBalance, false, BitcoinUnits::separatorAlways));\n+    ui->labelWatchPending->setText(BitcoinUnits::formatWithUnit(unit, watchUnconfBalance, false, BitcoinUnits::separatorAlways));\n+    ui->labelWatchImmature->setText(BitcoinUnits::formatWithUnit(unit, watchImmatureBalance, false, BitcoinUnits::separatorAlways));\n+    ui->labelWatchTotal->setText(BitcoinUnits::formatWithUnit(unit, watchOnlyBalance + watchUnconfBalance + watchImmatureBalance, false, BitcoinUnits::separatorAlways));\n \n     // only show immature (newly mined) balance if it's non-zero, so as not to complicate things\n     // for the non-mining users"
      },
      {
        "sha": "cf4c90c7ffbbaaef80ba91687043ee420b7ad280",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7d70c603f3b2a664082e0829b92844233c46cb4/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7d70c603f3b2a664082e0829b92844233c46cb4/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=f7d70c603f3b2a664082e0829b92844233c46cb4",
        "patch": "@@ -435,9 +435,9 @@ QVariant TransactionTableModel::addressColor(const TransactionRecord *wtx) const\n     return QVariant();\n }\n \n-QString TransactionTableModel::formatTxAmount(const TransactionRecord *wtx, bool showUnconfirmed, BitcoinUnits::SeparatorStyle separators, bool fAlign) const\n+QString TransactionTableModel::formatTxAmount(const TransactionRecord *wtx, bool showUnconfirmed, BitcoinUnits::SeparatorStyle separators) const\n {\n-    QString str = BitcoinUnits::format(walletModel->getOptionsModel()->getDisplayUnit(), wtx->credit + wtx->debit, false, separators, fAlign);\n+    QString str = BitcoinUnits::format(walletModel->getOptionsModel()->getDisplayUnit(), wtx->credit + wtx->debit, false, separators);\n     if(showUnconfirmed)\n     {\n         if(!wtx->status.countsForBalance)\n@@ -522,7 +522,7 @@ QVariant TransactionTableModel::data(const QModelIndex &index, int role) const\n         case ToAddress:\n             return formatTxToAddress(rec, false);\n         case Amount:\n-            return formatTxAmount(rec, true, BitcoinUnits::separatorAlways, true);\n+            return formatTxAmount(rec, true, BitcoinUnits::separatorAlways);\n         }\n         break;\n     case Qt::EditRole:"
      },
      {
        "sha": "ad88d14a90399c6e2a005248bc445e9454a13c76",
        "filename": "src/qt/transactiontablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7d70c603f3b2a664082e0829b92844233c46cb4/src/qt/transactiontablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7d70c603f3b2a664082e0829b92844233c46cb4/src/qt/transactiontablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.h?ref=f7d70c603f3b2a664082e0829b92844233c46cb4",
        "patch": "@@ -80,7 +80,7 @@ class TransactionTableModel : public QAbstractTableModel\n     QString formatTxDate(const TransactionRecord *wtx) const;\n     QString formatTxType(const TransactionRecord *wtx) const;\n     QString formatTxToAddress(const TransactionRecord *wtx, bool tooltip) const;\n-    QString formatTxAmount(const TransactionRecord *wtx, bool showUnconfirmed=true, BitcoinUnits::SeparatorStyle separators=BitcoinUnits::separatorStandard, bool fAlign=false) const;\n+    QString formatTxAmount(const TransactionRecord *wtx, bool showUnconfirmed=true, BitcoinUnits::SeparatorStyle separators=BitcoinUnits::separatorStandard) const;\n     QString formatTooltip(const TransactionRecord *rec) const;\n     QVariant txStatusDecoration(const TransactionRecord *wtx) const;\n     QVariant txAddressDecoration(const TransactionRecord *wtx) const;"
      }
    ]
  },
  {
    "sha": "7149499fd85d5adea23c9c3057944c3f2f69a2d2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MTQ5NDk5ZmQ4NWQ1YWRlYTIzYzljMzA1Nzk0NGMzZjJmNjlhMmQy",
    "commit": {
      "author": {
        "name": "Roy Badami",
        "email": "roy@gnomon.org.uk",
        "date": "2014-07-07T21:28:11Z"
      },
      "committer": {
        "name": "Roy Badami",
        "email": "roy@gnomon.org.uk",
        "date": "2014-07-07T21:28:11Z"
      },
      "message": "Add comments re BitcoinUnits::formatWithUnit/formatHtmlWithUnit",
      "tree": {
        "sha": "4b5b2b2c0fe5043cc1ded1f6c83f990ab796adb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b5b2b2c0fe5043cc1ded1f6c83f990ab796adb4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7149499fd85d5adea23c9c3057944c3f2f69a2d2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7149499fd85d5adea23c9c3057944c3f2f69a2d2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7149499fd85d5adea23c9c3057944c3f2f69a2d2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7149499fd85d5adea23c9c3057944c3f2f69a2d2/comments",
    "author": {
      "login": "roybadami",
      "id": 5601854,
      "node_id": "MDQ6VXNlcjU2MDE4NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5601854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roybadami",
      "html_url": "https://github.com/roybadami",
      "followers_url": "https://api.github.com/users/roybadami/followers",
      "following_url": "https://api.github.com/users/roybadami/following{/other_user}",
      "gists_url": "https://api.github.com/users/roybadami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roybadami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roybadami/subscriptions",
      "organizations_url": "https://api.github.com/users/roybadami/orgs",
      "repos_url": "https://api.github.com/users/roybadami/repos",
      "events_url": "https://api.github.com/users/roybadami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roybadami/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "roybadami",
      "id": 5601854,
      "node_id": "MDQ6VXNlcjU2MDE4NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5601854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roybadami",
      "html_url": "https://github.com/roybadami",
      "followers_url": "https://api.github.com/users/roybadami/followers",
      "following_url": "https://api.github.com/users/roybadami/following{/other_user}",
      "gists_url": "https://api.github.com/users/roybadami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roybadami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roybadami/subscriptions",
      "organizations_url": "https://api.github.com/users/roybadami/orgs",
      "repos_url": "https://api.github.com/users/roybadami/repos",
      "events_url": "https://api.github.com/users/roybadami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roybadami/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f7d70c603f3b2a664082e0829b92844233c46cb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7d70c603f3b2a664082e0829b92844233c46cb4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f7d70c603f3b2a664082e0829b92844233c46cb4"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 15,
      "deletions": 0
    },
    "files": [
      {
        "sha": "21aed235cf2bb0b2bf37e621c5f74d7b44e967f0",
        "filename": "src/qt/bitcoinunits.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7149499fd85d5adea23c9c3057944c3f2f69a2d2/src/qt/bitcoinunits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7149499fd85d5adea23c9c3057944c3f2f69a2d2/src/qt/bitcoinunits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.cpp?ref=7149499fd85d5adea23c9c3057944c3f2f69a2d2",
        "patch": "@@ -148,6 +148,21 @@ QString BitcoinUnits::format(int unit, qint64 n, bool fPlus, SeparatorStyle sepa\n }\n \n \n+// TODO: Review all remaining calls to BitcoinUnits::formatWithUnit to\n+// TODO: determine whether the output is used in a plain text context\n+// TODO: or an HTML context (and replace with\n+// TODO: BtcoinUnits::formatHtmlWithUnit in the latter case). Hopefully\n+// TODO: there aren't instances where the result could be used in\n+// TODO: either context.\n+\n+// NOTE: Using formatWithUnit in an HTML context risks wrapping\n+// quantities at the thousands separator. More subtly, it also results\n+// in a standard space rather than a thin space, due to a bug in Qt's\n+// XML whitespace canonicalisation\n+//\n+// Please take care to use formatHtmlWithUnit instead, when\n+// appropriate.\n+\n QString BitcoinUnits::formatWithUnit(int unit, qint64 amount, bool plussign, SeparatorStyle separators)\n {\n     return format(unit, amount, plussign, separators) + QString(\" \") + name(unit);"
      }
    ]
  }
]