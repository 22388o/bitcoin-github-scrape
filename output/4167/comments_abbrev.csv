roybadami,2014-05-09T23:50:13Z,"BTW, this change also makes copying unconfirmed transactions consistent.  (Previously, copying from the context menu copied without the square brackets, but copying using Ctrl+C copied _with_ the square brackets.  Now it's consistentsly copied without square brackets (or thousands separators))\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42724794,42724794,
leofidus,2014-05-10T00:49:18Z,"I support the idea of using thin spaces (and have advocated it previously, just didn't get around to making a pull request).\n\nFor consistency, you might want to change the descriptions of ÂµBTC and mBTC to use thin spaces too: https://github.com/roybadami/bitcoin/blob/master/src/qt/bitcoinunits.cpp#L53-L54\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42726886,42726886,
laanwj,2014-05-10T06:36:32Z,"Does this need any special precautions for parsing? What happens if you copy an amount, thin spaces and al, into the amount widget?\n\nAlso when copy-pasting using double-click, it will see an amount with spaces in it as multiple units, probably? Or are these spaces special?\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42734232,42734232,
laanwj,2014-05-10T06:39:00Z,"~~I still think it makes more sense to use locale-specific number formatting (implemented in #3893) than invent a convention that inserts spaces in numbers~~ (**edit:** okay, not invent, according to the internet it's somewhat common as a unambiguous thousands separator). On the other hand this has a lot less impact on the code.\n\nInserting separators in the decimals _after_ the decimal point is ",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42734278,42734278,
roybadami,2014-05-10T07:40:33Z,"Separators _after_ the point is absolutely 100% standard practice in SI notation.  It's pretty much universal in scientific fields.  (Pick up any physics textbook printed within the last 50 years and you'll see what I mean)\n\nIt's true that, outside of scientific fields such conventions never developed, but that's largely because in mainstream use you rarely have very many digits to the right of ",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42735291,42735291,
roybadami,2014-05-10T07:49:03Z,"Re a locale-specific approach, I'm neutral on that point -  mainly I went down this route because the comments in BitcoinUnits::format state that we don't want to do that :)\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42735455,42735455,
laanwj,2014-05-10T07:52:56Z,"I'm really not certain on this. Both ways have long lists of advantages and disadvantages, and I don't want a long shed-painting discussion. I don't want to make this decision at all.\n\nAny idea what other wallets do?\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42735525,42735525,
roybadami,2014-05-10T08:01:24Z,"Maybe we need a preference to control this :-(\n\nBitcoin Wallet for Android: no separators.  Armory: no separators to the right of the decimal point (don't know about to the left as it doesn't support units smaller than bitcoin yet).\n\nReally, most people probably don't complain about lack of thousands separators to the right of the decimal because most people don't know they exist (although how",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42735687,42735687,
laanwj,2014-05-10T08:06:53Z,"We all agree that decimal separators are useful. If it was up to me, we'd have them already in 0.5.0. The problem is, in the Bitcoin community no one can ever agree on _how_ to do something, so we eventually end up with no decision at all after a very long discussion.\n\nBTW on a more technical level: Do you know what happens if a value (with thin spaces as thousands separators) is pasted into the",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42735775,42735775,
roybadami,2014-05-10T08:08:04Z,"Re pasting, no -  I need to take a look at that.\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42735798,42735798,
roybadami,2014-05-10T08:12:22Z,"Parsing formatted numbers is going to be a bit of a can of worms if you also want to support locale-specific numbers.  You need to strip out thousands separators but not the decimal separator. Remember that 1,000 and 1.000 can mean the opposite of what you expect, depending which country you're in.\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42735882,42735882,
laanwj,2014-05-10T08:13:50Z,"#3893 actually implements such parsing based on the locale. But no need to worry about that here. We'll either use this or locale specific numbers, not both. I'm reluctantly starting to see the advantages of this, although I'm also sure a lot of people will complain (WHY DIDN'T YOU JUST...).\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42735902,42735902,
roybadami,2014-05-10T08:16:07Z,"Well, we could always make it a preference (SI-style, locale-specific, or none).  Then all we have to argue about is the default :)\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42735939,42735939,
laanwj,2014-05-10T08:21:02Z,I tried to go that way in #3893 but it may result in confusion. People _will_ be using amounts formatted in this style in communication. Also internationally. So if different users have selected different options... And yes - locale-specific formatting has the same drawback.\n,https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42736025,42736025,
roybadami,2014-05-10T08:53:31Z,"I had a look at pasting - right now pasting anything with (thin) spaces isn't allowed as it fails validation. \n\nObviously we can fix this, but is there really a use case for allowing it?  I think I prefer the approach of trying to prevent formatted values leaking into the clipboard in the first place.  Parsing is a slippery slope - what if I paste '1000 mBTC' for instance?\n\nAlso, re double cli",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42736520,42736520,
laanwj,2014-05-10T08:59:04Z,"Yes - that should be fixed. It's very annoying if a website displays an amount in this format, for example, and it isn't accepted. I've been very annoyed at this with my bank, which puts spaces in between some identifiers (for example, the IBAN) but subsequently fails to recognize them in that format, so you have paste it into some intermediate place to manually remove the spaces.\n\nYou _cannot_ ",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42736613,42736613,
roybadami,2014-05-10T09:21:46Z,"Agreed, will fix.\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42737002,42737002,
roybadami,2014-05-10T13:02:29Z,"I've fixed the spin box to display and accept values with spaces, and also fixed the confirmation message box not to wrap values.\n\nMy biggest reservation at the moment is that, on my machine (Mac) thin spaces really aren't as thin as I'd like.  In most contexts they do seem to display slightly narrower than a standard space, but only very slightly.  In message boxes they seem to display identica",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42741175,42741175,
laanwj,2014-05-10T13:29:43Z,Great!\n\nIt seems that thin spaces are supposed to be half as wide as a real space. There are even thinner spaces: https://en.wikipedia.org/wiki/Space_%28punctuation%29#Spaces_in_Unicode  (SIX-PER-EM and HAIR)\n,https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42741744,42741744,
roybadami,2014-05-10T16:09:20Z,"Ok, changed from U+2009 THIN SPACE to U+200A HAIR SPACE which I think looks a bit better.\n\nQt seems to have a bug whereby the thin spaces in the HTML message box get displayed as normal space.  I experimented with various workarounds, but it's hard to find one that's both supported by Qt's HTML engine and doesn't break the nowrap behaviour of the containing SPAN element.\n\nOnly solution I could",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42746062,42746062,
roybadami,2014-05-10T16:52:32Z,"Re a more general CopyRole - the way the code is currently structured, it needs a separate role for each column.  I could have just edited the existing FormattedAmountRole though rather than adding a new one, but I thought it better to leave FormattedAmountRole as it was (even though it's no longer used after this change), in case it's needed in the future.\n\nI agree that FormattedAmountWithoutTh",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42747332,42747332,
maaku,2014-05-10T16:55:11Z,"This is better than what we currently have, but my preference would be for locale-sensitive printing and parsing in the Qt wallet.\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42747405,42747405,
sipa,2014-05-11T00:51:16Z,"With the current code, the separation is barely noticable imho:\n![spacesep](https://cloud.githubusercontent.com/assets/548488/2937455/4f3eccc8-d8a6-11e3-9a8f-a6df27e656e8.png)\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42759073,42759073,
roybadami,2014-05-11T01:16:06Z,What platform?\n,https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42759448,42759448,
roybadami,2014-05-11T01:23:13Z,"Although I did feel that on my Mac thin space was too wide but hair space a little narrower than ideal, it wasn't quite as narrow as your screenshot. I think.  \n\nUnfortunately these are ultimately just characters from a font so the actual width is subject to the whims of the font designer.\n\nThe difficulty of getting the visual aspects right here is starting to give me reservations as to whethe",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42759550,42759550,
sipa,2014-05-11T09:19:16Z,"Ubuntu 13.04, xmonad.\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42765894,42765894,
roybadami,2014-05-11T13:34:25Z,![screen shot 2014-05-11 at 14 28 46](https://cloud.githubusercontent.com/assets/5601854/2938520/d1e5fa56-d910-11e3-9860-6188145eada9.png)\n\nI think it's marginally better on my system (OS X 10.9.2) but I agree it's probably a bit too narrow.  I'll see if I can experiment with other types of spaces.\n,https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42770693,42770693,
roybadami,2014-05-11T14:01:01Z,"drak: because it's standard practice to do so in every scientific field.  You seriously want to have to count digits in order to distinguish 0.0000001 BTC from 0.00000001 BTC?  (Of course, you could fix this by writing 0.1 ÂµBTC  or 0.01 ÂµBTC).  And 1.000 and 1,000 can both mean ""exactly one"" or ""one thousand"" depending on country, so are useless in any international context.\n\nAs locale-specifc v",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42771244,42771244,
leofidus,2014-05-11T16:20:13Z,"In my opinion it's even enough spacing on sipa's system. This isn't about the user consciously noticing the space but more about guiding his eye. That function is fulfilled perfectly for me, I have no problem assessing the numbers without counting the digits.\n\nEven better test cases would be amounts with many identical digits, as that's what's especially problematic to asses right now (e.g. 1 BT",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42774992,42774992,
sipa,2014-05-11T16:45:56Z,"Disagree... I need conscious effort to see the grouping. Without it, it just looks misaligned.\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42775728,42775728,
roybadami,2014-05-11T17:34:57Z,"drak: I'm not a scientist, I'm a Linux sysadmin (although I did study physical sciences to university level).\n\nI really think the comparison with fiat currency (like accounting software or ATMs) is misguided because:\n- Fiat currency pretty much invariably works either in whole numbers or with exactly two decimal places.  This pretty much avoids the ambiguity, and also avoids the requirement for",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42777227,42777227,
roybadami,2014-05-11T17:42:15Z,I should add that I wasn't aware of Wladimir's pull request (#3893) when I submitted mine.  I chose to use the SI convention _specifically_ because BitcoinUnits::format contains the comment:\n\n```\n// Note: not using straight sprintf here because we do NOT want\n// localized number formatting.\n```\n,https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42777426,42777426,
roybadami,2014-05-11T17:53:53Z,"sipa:  I've reverted to U+2009 THIN SPACE\n\nOn reflection I think this looks right.  (It was the QMessageBox HTML issue which originally took me down the path of thinking thin spaces are too wide.  But that appears to be a Qt bug, which I've since worked around.)\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42777751,42777751,
roybadami,2014-05-11T17:55:43Z,![screen shot 2014-05-11 at 18 54 44](https://cloud.githubusercontent.com/assets/5601854/2939073/76bf4860-d935-11e3-928a-eedd52012749.png)\n,https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42777812,42777812,
gmaxwell,2014-05-11T17:59:01Z,"Visual misalignment could perhaps be avoied by aligning numbers around the period. This would also make numbers of similar sizes look more similar. Alternatively, and perhaps superiority, all digits could be printed at all times, even if they are zeroâ which would guarantee alignment and perhaps prevent some misreading. (just some thoughts, I am not a UI guru)\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42777889,42777889,
roybadami,2014-05-11T18:00:19Z,![screen shot 2014-05-11 at 18 59 12](https://cloud.githubusercontent.com/assets/5601854/2939079/1ad9059e-d936-11e3-9f2b-8b678432b80a.png)\n,https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42777924,42777924,
roybadami,2014-05-11T18:00:55Z,![screen shot 2014-05-11 at 19 00 37](https://cloud.githubusercontent.com/assets/5601854/2939081/30e44af6-d936-11e3-8586-6d10e2a88c3a.png)\n,https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42777943,42777943,
roybadami,2014-05-11T18:10:27Z,"gmaxwell: yeah, one or other of those would seem to be a good idea - not sure which I prefer\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42778204,42778204,
roybadami,2014-05-11T18:20:40Z,"BTW, just for the record:\n\nTODO: Review all remaining calls to BitcoinUnits::formatWithUnit to determine whether the output is used in a plain text context or an HTML context (and replace with BtcoinUnits::formatHtmlWithUnit in the latter case).  Hopefully there aren't instances where the result could be used in either context.\n\n(I'm not going to do bother to do this until/unless there's any c",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42778515,42778515,
sipa,2014-05-11T18:28:02Z,"Now I have a different concern. Without doing effort, this looks like just very big number to me. The fact that one of the spacings has a dot in it doesn't stand out.\n\n![spacesep](https://cloud.githubusercontent.com/assets/548488/2939170/dc462a42-d939-11e3-866c-819dd01c5e20.png)\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42778734,42778734,
luke-jr,2014-05-11T18:33:39Z,Make the font size slightly smaller for the fractional part?\n,https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42778885,42778885,
roybadami,2014-05-11T18:45:09Z,"sipa: Yeah, I know what you mean.  But I'm not sure replacing the spaces with commas would be better in that respect - if anything it might be worse.  Myabe gmaxwell's idea's would help, though.\n\nluke-jr: interesting idea.  I think this approach works with mBTC or ÂµBTC where the digits in the small font are, in a very real sense, insignificant.  But with BTC you're not really getting into the te",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42779180,42779180,
luke-jr,2014-05-11T18:48:07Z,75% opacity text then?\n,https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42779251,42779251,
roybadami,2014-05-11T18:54:55Z,Not sure.  Also I worry that either smaller font or transparency will compromise readability.  It's not like we're starting with a particularly large font.\n,https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42779431,42779431,
roybadami,2014-05-11T19:00:55Z,"Just picked up an old textbook from my university days, and interestingly at least in this particular book they seem to use spaces to the right of the decimal point if there are five or more digits, but they don't if there are only four.\n\nNow I'm wondering if that's the correct convention - or perhaps more generally you prefer a final group of four digits to a single hanging digit (I couldn't im",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42779593,42779593,
roybadami,2014-05-11T19:07:30Z,"This looks a lot better to me now\n\n![screen shot 2014-05-11 at 20 06 09](https://cloud.githubusercontent.com/assets/5601854/2939260/64325cdc-d93f-11e3-8105-85984e62ca7b.png)\n\nI'd love to have confirmation.  And particularly to know what the right thing is to do when you have e.g. seven figures to the right of the point (I couldn't immediately find an example, but I suspect now the right thing ",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42779745,42779745,
roybadami,2014-05-11T19:17:19Z,"Not committing yet until someone can research whether the correct rule is to always prefer a final group of four to a final single digit or whether the rule should be to always place a thin space every three digits, but only if you have five or more digits.\n\nIf the former is right (I suspect it is) fix is to replace r_size with r_size-1 in bitcoinunits.cpp and bitcoinamountfield.cpp\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42780032,42780032,
leofidus,2014-05-11T22:22:28Z,"@roybadami the International Bureau of Weights and Measures [says in the SI brochure](http://www.bipm.org/en/si/si_brochure/chapter5/5-3-2.html#5-3-4) ""Following the 9th CGPM (1948, Resolution 7) and the 22nd CGPM (2003, Resolution 10), for numbers with many digits the digits may be divided into groups of three by a thin space, in order to facilitate reading. Neither dots nor commas are inserted i",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42785291,42785291,
roybadami,2014-05-11T22:49:38Z,"Oh, excellent, thanks leofidus.  Actually, I was wrong -- I had assumed maybe in the seven digit case we would write 0.000 0001 \n\nEDIT: Although looking at my version written down it looks wrong. \n\nI'll fix to implement to correct version.\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42785990,42785990,
roybadami,2014-05-11T23:10:06Z,"leofidus: while we're at it, do you know what's the correct spacing between the value and the unit - is it space or thin space?  (I skimmed the document you linked but couldn't find the right section.)\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42786430,42786430,
leofidus,2014-05-11T23:19:31Z,"I thought it was a thin space, but the SI brochure seems to only mention a space (section 5.3.3). Another source (German Wikipedia) recommends a thin non-breaking space. The fact that units are treated as mathematical entities also suggests thin spaces (if I remember mathematical typesetting right).\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42786638,42786638,
roybadami,2014-05-11T23:25:09Z,"Could I suggest that people who feel strongly one way or the other on this issue identify which locale(s) they're in/have lived in?  (EDIT: And what the number formatting conventions are in those locales, where we're not all likely to know already.)\n\nFTR I'm in boring old en_GB. (Well, boring at least in the sense that we don't have any particularly exotic number formatting conventions.)\n\nI'm ",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42786786,42786786,
leofidus,2014-05-11T23:32:49Z,"I'm a de_DE user who appreciates the unambiguity of unlocalized numbers. When I copy a price of 1,000 mBTC from a US merchant to my bitcoin client, I would be very annoyed if local aware parsing would suddenly read it as 1 mBTC.\n\nI'm used to switching between the number formats constantly, but BTC provides less clues the usual, as somebody else here already said.\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42786992,42786992,
roybadami,2014-05-11T23:55:08Z,"Not sure what's going on, but pretty sure this wasn't caused by deciding not to insert thousands separators into four digit numbers :)\n\n1:46:22 10 AbstractBlockChain.add: Failed to verify block: \ncom.google.bitcoin.core.VerificationException: Block had too many Signature Operations\n    at com.google.bitcoin.core.Block.checkSigOps(Block.java:673)\n    at com.google.bitcoin.core.Block.verifyTran",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42787441,42787441,
laanwj,2014-05-12T07:08:57Z,"@gmaxwell Aligning on the '.' would be the best solution, but it's harder to do, it would require at least a custom cell formatter for the transaction table to always center around the dot.\nThat's why it was never done. The table formatter also doesn't support HTML formatting so the 'hidden digit' approach doesn't work either. \nThat approach _could_ be used for the balance display on the overvie",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42801657,42801657,
roybadami,2014-05-12T07:45:16Z,"@laanwj: Most fonts use monospaced digits anyway, I think.  As for hidden digits, U+2007 FIGURE SPACE looks like it was invented specifically for this purpose. \n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42803941,42803941,
laanwj,2014-05-12T10:36:35Z,"Ok, if fonts use monospaced digits and there exists a digit-wide space, it sounds like it's suddently pretty easy to do. I did not know that.\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42817455,42817455,
roybadami,2014-05-12T21:00:39Z,"Ok, so I was a bit worried about the convention that I and @leofidus had been researching, where if you have exactly four digits on either side of the decimal point, you omit the thousands separator and just write a group of four.  This would mess up digit alignment in tabular data -- and it would also make it much harder to line up the decimal points.\n\nFortunately, looking at actual real life d",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42887574,42887574,
laanwj,2014-05-13T05:01:06Z,"@roybadami Even scientists can be pragmatic sometimes! But indeed, it makes sense to simply group per three, at least in the overview page and transaction overview, as having the numbers below each other align up is more important here. It's also easier for people to learn this (for many) new convention of grouping digits after the dot if done consistently per three.\n\nTo be honest I'm still a bi",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-42917290,42917290,
roybadami,2014-05-17T13:55:51Z,"This was getting messy, so I've squashed to a single commit.  Implemented alignment in the overview and transaction table.  It gets kinda messy though, when combined with the use of [square brackets] to show unconfirmed transactions.  Maybe it's good enough, though?  (Perhaps I could float the closing bracket to the left of the figure spaces in the transaction view?)\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-43407477,43407477,
roybadami,2014-05-17T14:01:48Z,![screen shot 2014-05-17 at 15 00 49](https://cloud.githubusercontent.com/assets/5601854/3005046/c4d35c22-ddcb-11e3-950b-91b3a365ad03.png)\n![screen shot 2014-05-17 at 15 00 55](https://cloud.githubusercontent.com/assets/5601854/3005048/c667523c-ddcb-11e3-8866-d9442bf5d00a.png)\n![screen shot 2014-05-17 at 15 01 07](https://cloud.githubusercontent.com/assets/5601854/3005049/c890c548-ddcb-11e3-8559,https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-43407618,43407618,
laanwj,2014-05-28T12:07:27Z,"I agree it's impossible to get alignment to work properly as long as brackets can appear as well as numbers.\nChoosing something else than brackets to show that the amount doesn't count towards the spendable balance would be fine with me, BTW, if clear, I'm not wedded to them :)\n**Edit**: But it's fine to leave that for another pull... I think it looks fine like this.\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-44397769,44397769,
roybadami,2014-05-28T12:21:47Z,"I'm not sure what would be better though, but I agree, the misalignment isn't that horrible.\n\nI think I'll float the right bracket to the left of the spaces (in the case where there is no unit) and then leave it at that.\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-44399020,44399020,
laanwj,2014-06-23T09:12:51Z,"I've tested this a bit and think it looks great in uBTC, reasonable in mBTC, and plain strange in BTC. So much empty space... I'm starting to think we should just pad with zeros.\n\n![ubtc](https://cloud.githubusercontent.com/assets/126646/3355652/c620c5fe-fab5-11e3-8281-581fb501b728.png)\nMicrobtc: looks great\n\n![btc](https://cloud.githubusercontent.com/assets/126646/3355654/c973e7f4-fab5-11e3-",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-46821646,46821646,
leofidus,2014-06-23T17:01:20Z,I agree that padding with zeros looks much better\n,https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-46872204,46872204,
roybadami,2014-06-23T19:18:49Z,"On balance, I think showing a consistent number of decimal places is better anyway.   But that may be because of my physics background again - in a scientific context the number of decimal places quoted conveys the precision of the quantity.  0.001 BTC and 0.00100000 BTC mean slightly different things (the former may have been rounded to the nearest millibitcoin; the latter clearly is exact down t",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-46889172,46889172,
laanwj,2014-06-24T15:10:08Z,"@roybadami Yes, agreed. Let's always show full precision. It also removes all doubt as to how subdividable bitcoins are, no matter what unit they have selected.\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-46983836,46983836,
laanwj,2014-07-03T06:00:24Z,@roybadami I'd like to merge this -- are you going to update to do padding with zeros instead of spaces?\n,https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-47869721,47869721,
roybadami,2014-07-05T02:01:47Z,Sure - will do shortly.\n,https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-48076479,48076479,
roybadami,2014-07-07T20:07:15Z,"Done.  Note that, ideally, the following should still also be done (sorry, I don't have time to look at this right now):\n\n""TODO: Review all remaining calls to BitcoinUnits::formatWithUnit to determine whether the output is used in a plain text context or an HTML context (and replace with BtcoinUnits::formatHtmlWithUnit in the latter case). Hopefully there aren't instances where the result could ",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-48233632,48233632,
roybadami,2014-07-07T21:31:04Z,"Fixed merge conflict, removed now-redundant arguments to some methods, and added a comment re the TODO.\n\nNB: this builds and runs for me, but is _very_ lightly tested\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-48243893,48243893,
BitcoinPullTester,2014-07-07T21:51:04Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4167_7149499fd85d5adea23c9c3057944c3f2f69a2d2/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-48246063,48246063,
roybadami,2014-07-08T18:12:24Z,"@laanwj I just realised I might have misinterpreted what you were asking for.\n\nWhat I've _done_ is to completely remove the code that strips trailing zeros, so that all bitcoin quantities, _everywhere_, are to full precision.\n\nThe alternative would have been to retain the fAlign flag that I introduced to control padding with figure spaces, and to only show full precision in those contexts wher",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-48378018,48378018,
laanwj,2014-07-18T11:01:37Z,"> What I've done is to completely remove the code that strips trailing zeros, so that all bitcoin quantities, everywhere, are to full precision.\n\nSounds good to me, to be consistent here.\n",https://github.com/bitcoin/bitcoin/pull/4167#issuecomment-49419150,49419150,
laanwj,2014-05-10T07:36:39Z,"What about a more general 'CopyRole' (or ExportRole), and make it valid for all columns?\nThen you wouldn't have to make an exception in the view code for a certain column.\n",https://github.com/bitcoin/bitcoin/pull/4167#discussion_r12503036,12503036,src/qt/transactiontablemodel.cpp
