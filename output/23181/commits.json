[
  {
    "sha": "ea4b61a1570178ebe5851b5fb4065222e3926f7e",
    "node_id": "C_kwDOABII59oAKGVhNGI2MWExNTcwMTc4ZWJlNTg1MWI1ZmI0MDY1MjIyZTM5MjZmN2U",
    "commit": {
      "author": {
        "name": "Pasta",
        "email": "pasta@dashboost.org",
        "date": "2021-10-05T02:49:21Z"
      },
      "committer": {
        "name": "pasta",
        "email": "pasta@dashboost.org",
        "date": "2021-10-20T22:36:40Z"
      },
      "message": "refactor: remove references to deprecated values under std::allocator\n\nIncludes allocator::pointer, allocator::const_pointer, allocator::reference and allocator::const_reference which are deprecated in c++17 and removed in c++20. See https://en.cppreference.com/w/cpp/memory/allocator\n\nAlso prefer `using` over `typedef` see: https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rt-using",
      "tree": {
        "sha": "faecd02c58a61d944c68a98339f12db0f3b07e67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/faecd02c58a61d944c68a98339f12db0f3b07e67"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea4b61a1570178ebe5851b5fb4065222e3926f7e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea4b61a1570178ebe5851b5fb4065222e3926f7e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea4b61a1570178ebe5851b5fb4065222e3926f7e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea4b61a1570178ebe5851b5fb4065222e3926f7e/comments",
    "author": {
      "login": "PastaPastaPasta",
      "id": 6443210,
      "node_id": "MDQ6VXNlcjY0NDMyMTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PastaPastaPasta",
      "html_url": "https://github.com/PastaPastaPasta",
      "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
      "following_url": "https://api.github.com/users/PastaPastaPasta/following{/other_user}",
      "gists_url": "https://api.github.com/users/PastaPastaPasta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PastaPastaPasta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
      "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
      "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
      "events_url": "https://api.github.com/users/PastaPastaPasta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "PastaPastaPasta",
      "id": 6443210,
      "node_id": "MDQ6VXNlcjY0NDMyMTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PastaPastaPasta",
      "html_url": "https://github.com/PastaPastaPasta",
      "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
      "following_url": "https://api.github.com/users/PastaPastaPasta/following{/other_user}",
      "gists_url": "https://api.github.com/users/PastaPastaPasta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PastaPastaPasta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
      "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
      "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
      "events_url": "https://api.github.com/users/PastaPastaPasta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "991753e4d50ea5c973f4d3330e5afba797b1b1e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/991753e4d50ea5c973f4d3330e5afba797b1b1e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/991753e4d50ea5c973f4d3330e5afba797b1b1e7"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 15,
      "deletions": 18
    },
    "files": [
      {
        "sha": "c4923dc56f94ac8c4fbd6cdc1a14eb55168ee7a9",
        "filename": "src/support/allocators/secure.h",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4b61a1570178ebe5851b5fb4065222e3926f7e/src/support/allocators/secure.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4b61a1570178ebe5851b5fb4065222e3926f7e/src/support/allocators/secure.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/allocators/secure.h?ref=ea4b61a1570178ebe5851b5fb4065222e3926f7e",
        "patch": "@@ -9,6 +9,7 @@\n #include <support/lockedpool.h>\n #include <support/cleanse.h>\n \n+#include <memory>\n #include <string>\n \n //\n@@ -17,15 +18,13 @@\n //\n template <typename T>\n struct secure_allocator : public std::allocator<T> {\n-    // MSVC8 default copy constructor is broken\n-    typedef std::allocator<T> base;\n-    typedef typename base::size_type size_type;\n-    typedef typename base::difference_type difference_type;\n-    typedef typename base::pointer pointer;\n-    typedef typename base::const_pointer const_pointer;\n-    typedef typename base::reference reference;\n-    typedef typename base::const_reference const_reference;\n-    typedef typename base::value_type value_type;\n+    using base = std::allocator<T>;\n+    using traits = std::allocator_traits<base>;\n+    using size_type = typename traits::size_type;\n+    using difference_type = typename traits::difference_type;\n+    using pointer = typename traits::pointer;\n+    using const_pointer = typename traits::const_pointer;\n+    using value_type = typename traits::value_type;\n     secure_allocator() noexcept {}\n     secure_allocator(const secure_allocator& a) noexcept : base(a) {}\n     template <typename U>"
      },
      {
        "sha": "77de4b1e691dbe0e8b94084ae8e1c707fa5f5c37",
        "filename": "src/support/allocators/zeroafterfree.h",
        "status": "modified",
        "additions": 7,
        "deletions": 9,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4b61a1570178ebe5851b5fb4065222e3926f7e/src/support/allocators/zeroafterfree.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4b61a1570178ebe5851b5fb4065222e3926f7e/src/support/allocators/zeroafterfree.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/allocators/zeroafterfree.h?ref=ea4b61a1570178ebe5851b5fb4065222e3926f7e",
        "patch": "@@ -13,15 +13,13 @@\n \n template <typename T>\n struct zero_after_free_allocator : public std::allocator<T> {\n-    // MSVC8 default copy constructor is broken\n-    typedef std::allocator<T> base;\n-    typedef typename base::size_type size_type;\n-    typedef typename base::difference_type difference_type;\n-    typedef typename base::pointer pointer;\n-    typedef typename base::const_pointer const_pointer;\n-    typedef typename base::reference reference;\n-    typedef typename base::const_reference const_reference;\n-    typedef typename base::value_type value_type;\n+    using base = std::allocator<T>;\n+    using traits = std::allocator_traits<base>;\n+    using size_type = typename traits::size_type;\n+    using difference_type = typename traits::difference_type;\n+    using pointer = typename traits::pointer;\n+    using const_pointer = typename traits::const_pointer;\n+    using value_type = typename traits::value_type;\n     zero_after_free_allocator() noexcept {}\n     zero_after_free_allocator(const zero_after_free_allocator& a) noexcept : base(a) {}\n     template <typename U>"
      }
    ]
  }
]