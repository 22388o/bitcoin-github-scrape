[
  {
    "sha": "bd846c0e565ca0db276cb6b7eac7763bebe19b84",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZDg0NmMwZTU2NWNhMGRiMjc2Y2I2YjdlYWM3NzYzYmViZTE5Yjg0",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-12-19T21:27:15Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-12-20T00:10:34Z"
      },
      "message": "Cleanup: removed dead code, and use C99 typedefs for int64 (supported by all modern c++ compilers)",
      "tree": {
        "sha": "90500a69598a62954868910e64d0a77732389c2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90500a69598a62954868910e64d0a77732389c2f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd846c0e565ca0db276cb6b7eac7763bebe19b84",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd846c0e565ca0db276cb6b7eac7763bebe19b84",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bd846c0e565ca0db276cb6b7eac7763bebe19b84",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd846c0e565ca0db276cb6b7eac7763bebe19b84/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3528650560a2c417da2303869c743da019defc6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3528650560a2c417da2303869c743da019defc6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3528650560a2c417da2303869c743da019defc6d"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 1,
      "deletions": 37
    },
    "files": [
      {
        "sha": "df060fdd7710196a7334aeff0c067c5bac502e8f",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd846c0e565ca0db276cb6b7eac7763bebe19b84/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd846c0e565ca0db276cb6b7eac7763bebe19b84/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=bd846c0e565ca0db276cb6b7eac7763bebe19b84",
        "patch": "@@ -19,16 +19,8 @@\n #include <boost/tuple/tuple_comparison.hpp>\n #include <boost/tuple/tuple_io.hpp>\n \n-#if defined(_MSC_VER) || defined(__BORLANDC__)\n-typedef __int64  int64;\n-typedef unsigned __int64  uint64;\n-#else\n typedef long long  int64;\n typedef unsigned long long  uint64;\n-#endif\n-#if defined(_MSC_VER) && _MSC_VER < 1300\n-#define for  if (false) ; else for\n-#endif\n \n #ifdef WIN32\n #include <windows.h>"
      },
      {
        "sha": "d3da1f26d27eb915213e000a6fe5f8ec587c43a1",
        "filename": "src/uint256.h",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd846c0e565ca0db276cb6b7eac7763bebe19b84/src/uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd846c0e565ca0db276cb6b7eac7763bebe19b84/src/uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.h?ref=bd846c0e565ca0db276cb6b7eac7763bebe19b84",
        "patch": "@@ -11,16 +11,8 @@\n #include <string>\n #include <vector>\n \n-#if defined(_MSC_VER) || defined(__BORLANDC__)\n-typedef __int64  int64;\n-typedef unsigned __int64  uint64;\n-#else\n typedef long long  int64;\n typedef unsigned long long  uint64;\n-#endif\n-#if defined(_MSC_VER) && _MSC_VER < 1300\n-#define for  if (false) ; else for\n-#endif\n \n \n inline int Testuint256AdHoc(std::vector<std::string> vArg);"
      },
      {
        "sha": "62b213355d2e799b0bd0c67574524ad8dfbca84d",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 21,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd846c0e565ca0db276cb6b7eac7763bebe19b84/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd846c0e565ca0db276cb6b7eac7763bebe19b84/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=bd846c0e565ca0db276cb6b7eac7763bebe19b84",
        "patch": "@@ -25,19 +25,8 @@\n #include <openssl/ripemd.h>\n \n \n-#if defined(_MSC_VER) || defined(__BORLANDC__)\n-typedef __int64  int64;\n-typedef unsigned __int64  uint64;\n-#else\n typedef long long  int64;\n typedef unsigned long long  uint64;\n-#endif\n-#if defined(_MSC_VER) && _MSC_VER < 1300\n-#define for  if (false) ; else for\n-#endif\n-#ifndef _MSC_VER\n-#define __forceinline  inline\n-#endif\n \n #define loop                for (;;)\n #define BEGIN(a)            ((char*)&(a))\n@@ -53,7 +42,7 @@ typedef unsigned long long  uint64;\n #define snprintf my_snprintf\n \n #ifndef PRI64d\n-#if defined(_MSC_VER) || defined(__BORLANDC__) || defined(__MSVCRT__)\n+#if defined(_MSC_VER) || defined(__MSVCRT__)\n #define PRI64d  \"I64d\"\n #define PRI64u  \"I64u\"\n #define PRI64x  \"I64x\"\n@@ -474,15 +463,6 @@ inline bool GetBoolArg(const std::string& strArg)\n \n \n \n-inline void heapchk()\n-{\n-#ifdef WIN32\n-    /// for debugging\n-    //if (_heapchk() != _HEAPOK)\n-    //    DebugBreak();\n-#endif\n-}\n-\n // Randomize the stack to help protect against buffer overrun exploits\n #define IMPLEMENT_RANDOMIZE_STACK(ThreadFn)     \\\n     {                                           \\"
      }
    ]
  },
  {
    "sha": "26ce92b3526430d4a40b2faccef4facb966d6a0a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNmNlOTJiMzUyNjQzMGQ0YTQwYjJmYWNjZWY0ZmFjYjk2NmQ2YTBh",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-12-19T22:08:25Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-12-20T00:10:34Z"
      },
      "message": "Use std::numeric_limits<> for typesafe INT_MAX/etc",
      "tree": {
        "sha": "e23a92f6152c3abcf8cf3c42bf5a5b50ecc5dc42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e23a92f6152c3abcf8cf3c42bf5a5b50ecc5dc42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/26ce92b3526430d4a40b2faccef4facb966d6a0a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26ce92b3526430d4a40b2faccef4facb966d6a0a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/26ce92b3526430d4a40b2faccef4facb966d6a0a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26ce92b3526430d4a40b2faccef4facb966d6a0a/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bd846c0e565ca0db276cb6b7eac7763bebe19b84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd846c0e565ca0db276cb6b7eac7763bebe19b84",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bd846c0e565ca0db276cb6b7eac7763bebe19b84"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 26,
      "deletions": 34
    },
    "files": [
      {
        "sha": "135eade6792ed77a82532001bdd2952fe9b90a78",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=26ce92b3526430d4a40b2faccef4facb966d6a0a",
        "patch": "@@ -115,9 +115,9 @@ class CBigNum : public BIGNUM\n     {\n         unsigned long n = BN_get_word(this);\n         if (!BN_is_negative(this))\n-            return (n > INT_MAX ? INT_MAX : n);\n+            return (n > std::numeric_limits<int>::max() ? std::numeric_limits<int>::max() : n);\n         else\n-            return (n > INT_MAX ? INT_MIN : -(int)n);\n+            return (n > std::numeric_limits<int>::max() ? std::numeric_limits<int>::min() : -(int)n);\n     }\n \n     void setint64(int64 n)"
      },
      {
        "sha": "fdb1b34a0a013338395b2309a3f297e372238bd2",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=26ce92b3526430d4a40b2faccef4facb966d6a0a",
        "patch": "@@ -950,7 +950,7 @@ struct tallyitem\n     tallyitem()\n     {\n         nAmount = 0;\n-        nConf = INT_MAX;\n+        nConf = std::numeric_limits<int>::max();\n     }\n };\n \n@@ -1002,7 +1002,7 @@ Value ListReceived(const Array& params, bool fByAccounts)\n             continue;\n \n         int64 nAmount = 0;\n-        int nConf = INT_MAX;\n+        int nConf = std::numeric_limits<int>::max();\n         if (it != mapTally.end())\n         {\n             nAmount = (*it).second.nAmount;\n@@ -1021,7 +1021,7 @@ Value ListReceived(const Array& params, bool fByAccounts)\n             obj.push_back(Pair(\"address\",       address.ToString()));\n             obj.push_back(Pair(\"account\",       strAccount));\n             obj.push_back(Pair(\"amount\",        ValueFromAmount(nAmount)));\n-            obj.push_back(Pair(\"confirmations\", (nConf == INT_MAX ? 0 : nConf)));\n+            obj.push_back(Pair(\"confirmations\", (nConf == std::numeric_limits<int>::max() ? 0 : nConf)));\n             ret.push_back(obj);\n         }\n     }\n@@ -1035,7 +1035,7 @@ Value ListReceived(const Array& params, bool fByAccounts)\n             Object obj;\n             obj.push_back(Pair(\"account\",       (*it).first));\n             obj.push_back(Pair(\"amount\",        ValueFromAmount(nAmount)));\n-            obj.push_back(Pair(\"confirmations\", (nConf == INT_MAX ? 0 : nConf)));\n+            obj.push_back(Pair(\"confirmations\", (nConf == std::numeric_limits<int>::max() ? 0 : nConf)));\n             ret.push_back(obj);\n         }\n     }"
      },
      {
        "sha": "b6903fe93e3a8e166ff3ad753a25c647a8f1a51c",
        "filename": "src/headers.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/headers.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/headers.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/headers.h?ref=26ce92b3526430d4a40b2faccef4facb966d6a0a",
        "patch": "@@ -21,9 +21,6 @@\n \n // Include boost/foreach here as it defines __STDC_LIMIT_MACROS on some systems.\n #include <boost/foreach.hpp>\n-#ifndef __STDC_LIMIT_MACROS\n-#define __STDC_LIMIT_MACROS // to enable UINT64_MAX from stdint.h\n-#endif\n \n #if (defined(__unix__) || defined(unix)) && !defined(USG)\n #include <sys/param.h>  // to get BSD define\n@@ -44,7 +41,6 @@\n #include <stdlib.h>\n #include <time.h>\n #include <math.h>\n-#include <limits.h>\n #include <float.h>\n #include <assert.h>\n #include <iostream>"
      },
      {
        "sha": "09f821b12195ff107615fd6347be0607c67e4112",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=26ce92b3526430d4a40b2faccef4facb966d6a0a",
        "patch": "@@ -366,7 +366,7 @@ bool CTransaction::AcceptToMemoryPool(CTxDB& txdb, bool fCheckInputs, bool* pfMi\n         return DoS(100, error(\"AcceptToMemoryPool() : coinbase as individual tx\"));\n \n     // To help v0.1.5 clients who would see it as a negative number\n-    if ((int64)nLockTime > INT_MAX)\n+    if ((int64)nLockTime > std::numeric_limits<int>::max())\n         return error(\"AcceptToMemoryPool() : not accepting nLockTime beyond 2038 yet\");\n \n     // Safety limits"
      },
      {
        "sha": "67524ef4be7b833ab2d276033e4fc051e13d2853",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=26ce92b3526430d4a40b2faccef4facb966d6a0a",
        "patch": "@@ -258,17 +258,17 @@ class CTxIn\n \n     CTxIn()\n     {\n-        nSequence = UINT_MAX;\n+        nSequence = std::numeric_limits<unsigned int>::max();\n     }\n \n-    explicit CTxIn(COutPoint prevoutIn, CScript scriptSigIn=CScript(), unsigned int nSequenceIn=UINT_MAX)\n+    explicit CTxIn(COutPoint prevoutIn, CScript scriptSigIn=CScript(), unsigned int nSequenceIn=std::numeric_limits<unsigned int>::max())\n     {\n         prevout = prevoutIn;\n         scriptSig = scriptSigIn;\n         nSequence = nSequenceIn;\n     }\n \n-    CTxIn(uint256 hashPrevTx, unsigned int nOut, CScript scriptSigIn=CScript(), unsigned int nSequenceIn=UINT_MAX)\n+    CTxIn(uint256 hashPrevTx, unsigned int nOut, CScript scriptSigIn=CScript(), unsigned int nSequenceIn=std::numeric_limits<unsigned int>::max())\n     {\n         prevout = COutPoint(hashPrevTx, nOut);\n         scriptSig = scriptSigIn;\n@@ -284,7 +284,7 @@ class CTxIn\n \n     bool IsFinal() const\n     {\n-        return (nSequence == UINT_MAX);\n+        return (nSequence == std::numeric_limits<unsigned int>::max());\n     }\n \n     friend bool operator==(const CTxIn& a, const CTxIn& b)\n@@ -308,7 +308,7 @@ class CTxIn\n             str += strprintf(\", coinbase %s\", HexStr(scriptSig).c_str());\n         else\n             str += strprintf(\", scriptSig=%s\", scriptSig.ToString().substr(0,24).c_str());\n-        if (nSequence != UINT_MAX)\n+        if (nSequence != std::numeric_limits<unsigned int>::max())\n             str += strprintf(\", nSequence=%u\", nSequence);\n         str += \")\";\n         return str;\n@@ -468,7 +468,7 @@ class CTransaction\n                 return false;\n \n         bool fNewer = false;\n-        unsigned int nLowest = UINT_MAX;\n+        unsigned int nLowest = std::numeric_limits<unsigned int>::max();\n         for (int i = 0; i < vin.size(); i++)\n         {\n             if (vin[i].nSequence != old.vin[i].nSequence)"
      },
      {
        "sha": "9b8dbe11e8ee3914d27633363f136ae6e485bfce",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=26ce92b3526430d4a40b2faccef4facb966d6a0a",
        "patch": "@@ -249,8 +249,8 @@ bool Lookup(const char *pszName, vector<CAddress>& vaddr, int nServices, int nMa\n             else\n                 pszColon[0] = 0;\n             port = portParsed;\n-            if (port < 0 || port > USHRT_MAX)\n-                port = USHRT_MAX;\n+            if (port < 0 || port > std::numeric_limits<unsigned short>::max())\n+                port = std::numeric_limits<unsigned short>::max();\n         }\n     }\n \n@@ -1488,7 +1488,7 @@ void ThreadOpenConnections2(void* parg)\n         // Choose an address to connect to based on most recently seen\n         //\n         CAddress addrConnect;\n-        int64 nBest = INT64_MIN;\n+        int64 nBest = std::numeric_limits<int64>::min();\n \n         // Only connect to one address per a.b.?.? range.\n         // Do this here so we don't have to critsect vNodes inside mapAddresses critsect."
      },
      {
        "sha": "27efb8f293f00851e7e5cb64fbc6dfc2d35c8ca3",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=26ce92b3526430d4a40b2faccef4facb966d6a0a",
        "patch": "@@ -223,7 +223,7 @@ bool CAddress::IsValid() const\n     if (memcmp(pchReserved, pchIPv4+3, sizeof(pchIPv4)-3) == 0)\n         return false;\n \n-    return (ip != 0 && ip != INADDR_NONE && port != htons(USHRT_MAX));\n+    return (ip != 0 && ip != INADDR_NONE && port != htons(std::numeric_limits<unsigned short>::max()));\n }\n \n unsigned char CAddress::GetByte(int n) const"
      },
      {
        "sha": "eef91db5baa8d571010c2789113440bb09dcf6d2",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=26ce92b3526430d4a40b2faccef4facb966d6a0a",
        "patch": "@@ -101,7 +101,7 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n         case ProxyPort:\n             {\n                 int nPort = atoi(value.toString().toAscii().data());\n-                if (nPort > 0 && nPort < USHRT_MAX)\n+                if (nPort > 0 && nPort < std::numeric_limits<unsigned short>::max())\n                 {\n                     addrProxy.port = htons(nPort);\n                     walletdb.WriteSetting(\"addrProxy\", addrProxy);"
      },
      {
        "sha": "53cd35b2dade751756040b4f55815c58446f7e7d",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=26ce92b3526430d4a40b2faccef4facb966d6a0a",
        "patch": "@@ -187,7 +187,7 @@ void TransactionRecord::updateStatus(const CWalletTx &wtx)\n \n     // Sort order, unrecorded transactions sort to the top\n     status.sortKey = strprintf(\"%010d-%01d-%010u-%03d\",\n-        (pindex ? pindex->nHeight : INT_MAX),\n+        (pindex ? pindex->nHeight : std::numeric_limits<int>::max()),\n         (wtx.IsCoinBase() ? 1 : 0),\n         wtx.nTimeReceived,\n         idx);"
      },
      {
        "sha": "98b69aa228a017f128c274e579edecebc071ae1d",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=26ce92b3526430d4a40b2faccef4facb966d6a0a",
        "patch": "@@ -189,8 +189,8 @@ template<typename Stream> inline void Unserialize(Stream& s, bool& a, int, int=0\n inline unsigned int GetSizeOfCompactSize(uint64 nSize)\n {\n     if (nSize < 253)             return sizeof(unsigned char);\n-    else if (nSize <= USHRT_MAX) return sizeof(unsigned char) + sizeof(unsigned short);\n-    else if (nSize <= UINT_MAX)  return sizeof(unsigned char) + sizeof(unsigned int);\n+    else if (nSize <= std::numeric_limits<unsigned short>::max()) return sizeof(unsigned char) + sizeof(unsigned short);\n+    else if (nSize <= std::numeric_limits<unsigned int>::max())  return sizeof(unsigned char) + sizeof(unsigned int);\n     else                         return sizeof(unsigned char) + sizeof(uint64);\n }\n \n@@ -202,14 +202,14 @@ void WriteCompactSize(Stream& os, uint64 nSize)\n         unsigned char chSize = nSize;\n         WRITEDATA(os, chSize);\n     }\n-    else if (nSize <= USHRT_MAX)\n+    else if (nSize <= std::numeric_limits<unsigned short>::max())\n     {\n         unsigned char chSize = 253;\n         unsigned short xSize = nSize;\n         WRITEDATA(os, chSize);\n         WRITEDATA(os, xSize);\n     }\n-    else if (nSize <= UINT_MAX)\n+    else if (nSize <= std::numeric_limits<unsigned int>::max())\n     {\n         unsigned char chSize = 254;\n         unsigned int xSize = nSize;"
      },
      {
        "sha": "80ce40459354abd2013f4aa96a72e349a8fa77e7",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=26ce92b3526430d4a40b2faccef4facb966d6a0a",
        "patch": "@@ -133,7 +133,7 @@ uint64 GetRand(uint64 nMax)\n \n     // The range of the random source must be a multiple of the modulus\n     // to give every possible output value an equal possibility\n-    uint64 nRange = (UINT64_MAX / nMax) * nMax;\n+    uint64 nRange = (std::numeric_limits<uint64>::max() / nMax) * nMax;\n     uint64 nRand = 0;\n     do\n         RAND_bytes((unsigned char*)&nRand, sizeof(nRand));"
      },
      {
        "sha": "9fe95e37fdea2f452d73ea9d763bfd894fbeda52",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=26ce92b3526430d4a40b2faccef4facb966d6a0a",
        "patch": "@@ -73,11 +73,7 @@ T* alignup(T* p)\n #ifdef WIN32\n #define MSG_NOSIGNAL        0\n #define MSG_DONTWAIT        0\n-#ifndef UINT64_MAX\n-#define UINT64_MAX          _UI64_MAX\n-#define INT64_MAX           _I64_MAX\n-#define INT64_MIN           _I64_MIN\n-#endif\n+\n #ifndef S_IRUSR\n #define S_IRUSR             0400\n #define S_IWUSR             0200"
      },
      {
        "sha": "c6f5795c0b445445b8f47c56ce5a35bad8163d12",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26ce92b3526430d4a40b2faccef4facb966d6a0a/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=26ce92b3526430d4a40b2faccef4facb966d6a0a",
        "patch": "@@ -782,7 +782,7 @@ bool CWallet::SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfThe\n \n     // List of values less than target\n     pair<int64, pair<const CWalletTx*,unsigned int> > coinLowestLarger;\n-    coinLowestLarger.first = INT64_MAX;\n+    coinLowestLarger.first = std::numeric_limits<int64>::max();\n     coinLowestLarger.second.first = NULL;\n     vector<pair<int64, pair<const CWalletTx*,unsigned int> > > vValue;\n     int64 nTotalLower = 0;"
      }
    ]
  },
  {
    "sha": "9ef7fa344741cb34ba4e15cff06d61d1c7a74e24",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZWY3ZmEzNDQ3NDFjYjM0YmE0ZTE1Y2ZmMDZkNjFkMWM3YTc0ZTI0",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-12-20T00:04:47Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-12-20T00:10:34Z"
      },
      "message": "Code cleanup: use ECDSA_size() instead of fixed 10,000 byte sig buffer, and explicity init static var",
      "tree": {
        "sha": "254f76dfa15c36a359e661caa1b4cfd158e204f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/254f76dfa15c36a359e661caa1b4cfd158e204f4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ef7fa344741cb34ba4e15cff06d61d1c7a74e24",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ef7fa344741cb34ba4e15cff06d61d1c7a74e24",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9ef7fa344741cb34ba4e15cff06d61d1c7a74e24",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ef7fa344741cb34ba4e15cff06d61d1c7a74e24/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "26ce92b3526430d4a40b2faccef4facb966d6a0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26ce92b3526430d4a40b2faccef4facb966d6a0a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/26ce92b3526430d4a40b2faccef4facb966d6a0a"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "94ec55228ea29e09e33b263e9cd69eaa049489f6",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ef7fa344741cb34ba4e15cff06d61d1c7a74e24/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ef7fa344741cb34ba4e15cff06d61d1c7a74e24/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=9ef7fa344741cb34ba4e15cff06d61d1c7a74e24",
        "patch": "@@ -178,13 +178,14 @@ class CKey\n \n     bool Sign(uint256 hash, std::vector<unsigned char>& vchSig)\n     {\n-        vchSig.clear();\n-        unsigned char pchSig[10000];\n-        unsigned int nSize = 0;\n-        if (!ECDSA_sign(0, (unsigned char*)&hash, sizeof(hash), pchSig, &nSize, pkey))\n+        unsigned int nSize = ECDSA_size(pkey);\n+        vchSig.resize(nSize); // Make sure it is big enough\n+        if (!ECDSA_sign(0, (unsigned char*)&hash, sizeof(hash), &vchSig[0], &nSize, pkey))\n+        {\n+            vchSig.clear();\n             return false;\n-        vchSig.resize(nSize);\n-        memcpy(&vchSig[0], pchSig, nSize);\n+        }\n+        vchSig.resize(nSize); // Shrink to fit actual size\n         return true;\n     }\n "
      },
      {
        "sha": "e2f3cc9f840788b901f127d06284c8451253fcc1",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ef7fa344741cb34ba4e15cff06d61d1c7a74e24/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ef7fa344741cb34ba4e15cff06d61d1c7a74e24/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=9ef7fa344741cb34ba4e15cff06d61d1c7a74e24",
        "patch": "@@ -1875,7 +1875,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         }\n \n         // Ask the first connected node for block updates\n-        static int nAskedForBlocks;\n+        static int nAskedForBlocks = 0;\n         if (!pfrom->fClient &&\n             (pfrom->nVersion < 32000 || pfrom->nVersion >= 32400) &&\n              (nAskedForBlocks < 1 || vNodes.size() <= 1))"
      }
    ]
  }
]