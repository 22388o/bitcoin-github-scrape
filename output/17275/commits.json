[
  {
    "sha": "d8daa8f3711909223b117b8faa82daca87fc942d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOGRhYThmMzcxMTkwOTIyM2IxMTdiOGZhYTgyZGFjYTg3ZmM5NDJk",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-27T21:46:50Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-28T15:10:13Z"
      },
      "message": "pubkey: Assert CPubKey's ECCVerifyHandle precondition",
      "tree": {
        "sha": "8faed47743fafbb8afd379d728839146dbcafd11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8faed47743fafbb8afd379d728839146dbcafd11"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8daa8f3711909223b117b8faa82daca87fc942d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8daa8f3711909223b117b8faa82daca87fc942d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d8daa8f3711909223b117b8faa82daca87fc942d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8daa8f3711909223b117b8faa82daca87fc942d/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "be50469217bd775c4305938634c32e5932f47841",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be50469217bd775c4305938634c32e5932f47841",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be50469217bd775c4305938634c32e5932f47841"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f7a0f9cf6bf42f96c2e02f09bb361a69eb306bed",
        "filename": "src/pubkey.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8daa8f3711909223b117b8faa82daca87fc942d/src/pubkey.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8daa8f3711909223b117b8faa82daca87fc942d/src/pubkey.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.cpp?ref=d8daa8f3711909223b117b8faa82daca87fc942d",
        "patch": "@@ -171,6 +171,7 @@ bool CPubKey::Verify(const uint256 &hash, const std::vector<unsigned char>& vchS\n         return false;\n     secp256k1_pubkey pubkey;\n     secp256k1_ecdsa_signature sig;\n+    assert(secp256k1_context_verify && \"secp256k1_context_verify must be initialized to use CPubKey.\");\n     if (!secp256k1_ec_pubkey_parse(secp256k1_context_verify, &pubkey, vch, size())) {\n         return false;\n     }\n@@ -190,6 +191,7 @@ bool CPubKey::RecoverCompact(const uint256 &hash, const std::vector<unsigned cha\n     bool fComp = ((vchSig[0] - 27) & 4) != 0;\n     secp256k1_pubkey pubkey;\n     secp256k1_ecdsa_recoverable_signature sig;\n+    assert(secp256k1_context_verify && \"secp256k1_context_verify must be initialized to use CPubKey.\");\n     if (!secp256k1_ecdsa_recoverable_signature_parse_compact(secp256k1_context_verify, &sig, &vchSig[1], recid)) {\n         return false;\n     }\n@@ -207,13 +209,15 @@ bool CPubKey::IsFullyValid() const {\n     if (!IsValid())\n         return false;\n     secp256k1_pubkey pubkey;\n+    assert(secp256k1_context_verify && \"secp256k1_context_verify must be initialized to use CPubKey.\");\n     return secp256k1_ec_pubkey_parse(secp256k1_context_verify, &pubkey, vch, size());\n }\n \n bool CPubKey::Decompress() {\n     if (!IsValid())\n         return false;\n     secp256k1_pubkey pubkey;\n+    assert(secp256k1_context_verify && \"secp256k1_context_verify must be initialized to use CPubKey.\");\n     if (!secp256k1_ec_pubkey_parse(secp256k1_context_verify, &pubkey, vch, size())) {\n         return false;\n     }\n@@ -232,6 +236,7 @@ bool CPubKey::Derive(CPubKey& pubkeyChild, ChainCode &ccChild, unsigned int nChi\n     BIP32Hash(cc, nChild, *begin(), begin()+1, out);\n     memcpy(ccChild.begin(), out+32, 32);\n     secp256k1_pubkey pubkey;\n+    assert(secp256k1_context_verify && \"secp256k1_context_verify must be initialized to use CPubKey.\");\n     if (!secp256k1_ec_pubkey_parse(secp256k1_context_verify, &pubkey, vch, size())) {\n         return false;\n     }\n@@ -273,6 +278,7 @@ bool CExtPubKey::Derive(CExtPubKey &out, unsigned int _nChild) const {\n \n /* static */ bool CPubKey::CheckLowS(const std::vector<unsigned char>& vchSig) {\n     secp256k1_ecdsa_signature sig;\n+    assert(secp256k1_context_verify && \"secp256k1_context_verify must be initialized to use CPubKey.\");\n     if (!ecdsa_signature_parse_der_lax(secp256k1_context_verify, &sig, vchSig.data(), vchSig.size())) {\n         return false;\n     }"
      }
    ]
  }
]