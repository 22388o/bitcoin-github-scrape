practicalswift,2019-06-24 18:15:49,"Concept ACK\n\nThanks for working on this: those expected errors are really annoying.\n\nNice first-time contribution! Welcome! :-)",https://github.com/bitcoin/bitcoin/pull/16277#issuecomment-505121482,505121482,
DrahtBot,2019-06-24 18:56:07,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/16277#issuecomment-505135857,505135857,
laanwj,2019-07-01 11:18:18,"Thanks for tackling this, this has been bothering me for a while.\n",https://github.com/bitcoin/bitcoin/pull/16277#issuecomment-507223049,507223049,
gertjaap,2019-07-01 14:22:00,Addressed review comments and squashed,https://github.com/bitcoin/bitcoin/pull/16277#issuecomment-507285932,507285932,
gertjaap,2019-07-03 12:11:18,Addressed review comment & squashed,https://github.com/bitcoin/bitcoin/pull/16277#issuecomment-508066623,508066623,
laanwj,2019-07-08 14:11:19,"So a future change after this would be to make it possible to catch the output, and retrieve it for checking, as well as suppressing it. I think that could be done in a future PR and do think this making the test output not contain unexpected errors is an improvement, as-is.\n",https://github.com/bitcoin/bitcoin/pull/16277#issuecomment-509241654,509241654,
l2a5b1,2019-07-09 15:19:56,"Suppressing the output is one way to solve the issue.\n\nHowever, I don't think that we are addressing the fundamental issue, which is that `VerifyWallets` doesn't propagate error information to the caller. Instead `VerifyWallets` keeps that information to itself.\n\nFunctions like `VerifyWallets`, which don't provide error information to the caller and seem to use logging of the error message",https://github.com/bitcoin/bitcoin/pull/16277#issuecomment-509686902,509686902,
MarcoFalke,2019-07-09 15:29:00,"I do like the idea of a `Result` type. Are there any C++ libraries that use or offer (or plan to offer) such a type? I.e boost or the standard library.\n\nThis sounds like it would benefit from a project-wide discussion. Maybe open a brainstorming issue or raise the topic in one of the meetings.",https://github.com/bitcoin/bitcoin/pull/16277#issuecomment-509690765,509690765,
laanwj,2019-07-11 18:19:40,"Yess, I too prefer rust's method of error handling, but I think asking a first-time contributor to rewrite the project's general error-handling methodology is a bit wild, please take that into account here.",https://github.com/bitcoin/bitcoin/pull/16277#issuecomment-510598035,510598035,
KaosGhostNINJA,2019-07-11 20:06:27,"Already working on fix for that error type scenario may not be exactly the\nway rust method. I  think  it will have the same effect  will seeðŸ¤žbetter\nthen a rewrite anyway.\n\nOn Thu, Jul 11, 2019, 1:23 PM Wladimir J. van der Laan <\nnotifications@github.com> wrote:\n\n> Yess, I too prefer rust's method of error handling, but I think asking a\n> first-time contributor to rewrite the project's gene",https://github.com/bitcoin/bitcoin/pull/16277#issuecomment-510634508,510634508,
gertjaap,2019-07-17 10:23:55,"I like the suggestion @l2a5b1 made, of a `Result<T, E>` return value to functions that now return `bool` and don't propagate error info. I think the project would benefit a lot from something like that. That said, it seems like something we should discuss in broader perspective as @MarcoFalke suggested. I'd be happy to contribute to that discussion and/or help implementing the preferred solution.",https://github.com/bitcoin/bitcoin/pull/16277#issuecomment-512196200,512196200,
l2a5b1,2019-07-19 22:01:25,"ACK 7a0c224 - tested and reviewed.\n\nThanks @gertjaap! I will take the suggestion pertaining to propagating errors somewhere else.",https://github.com/bitcoin/bitcoin/pull/16277#issuecomment-513393139,513393139,
laanwj,2019-08-01 13:17:01,ACK 7a0c2242890549b6dddac4cc6f1840a528469f2a,https://github.com/bitcoin/bitcoin/pull/16277#issuecomment-517283693,517283693,
laanwj,2019-07-01 11:19:47,"I don't think there's a need to have these three functions externally exposed in the header, they're only used in `noui_suppress`",https://github.com/bitcoin/bitcoin/pull/16277#discussion_r298995786,298995786,src/noui.h
laanwj,2019-07-01 11:21:11,Why are these `extern void`s here? Doesn't including the header that defines them (`noui.h`) suffice? ,https://github.com/bitcoin/bitcoin/pull/16277#discussion_r298996186,298996186,src/wallet/test/init_tests.cpp
laanwj,2019-07-01 11:22:36,"I don't think these includes need to be added here, better include them in the `cpp` file if they're used there to avoid the boost stuff having to be processed for every compilation unit.",https://github.com/bitcoin/bitcoin/pull/16277#discussion_r298996668,298996668,src/noui.h
gertjaap,2019-07-01 14:19:27,Adjusted,https://github.com/bitcoin/bitcoin/pull/16277#discussion_r299065252,299065252,src/noui.h
gertjaap,2019-07-01 14:20:06,"Given the noui_connect() was there when I started, I followed the same convention. Have changed it now, removed the `extern void`s and included `noui.h` in stead.",https://github.com/bitcoin/bitcoin/pull/16277#discussion_r299065620,299065620,src/wallet/test/init_tests.cpp
gertjaap,2019-07-01 14:20:24,Adjusted,https://github.com/bitcoin/bitcoin/pull/16277#discussion_r299065788,299065788,src/noui.h
MarcoFalke,2019-07-02 20:44:07,Why is this line moved?,https://github.com/bitcoin/bitcoin/pull/16277#discussion_r299676310,299676310,src/noui.cpp
MarcoFalke,2019-07-02 20:45:41,"Instead of ignoring the message in the test, shouldn't the test check for the correct messag?",https://github.com/bitcoin/bitcoin/pull/16277#discussion_r299676906,299676906,src/noui.cpp
gertjaap,2019-07-03 11:51:51,I incorrectly assumed that these imports were alphabetically sorted. This turns out not to be the case. I'll revert this,https://github.com/bitcoin/bitcoin/pull/16277#discussion_r299914838,299914838,src/noui.cpp
gertjaap,2019-07-03 11:54:21,"While that's a nice feature to have, this isn't being done currently as well. It would require a much bigger change to achieve that, giving the opportunity to the caller of noui_supress to supply an expected error, or noui_suppress to retain whatever messages are being thrown to it, and adding a method to retrieve them in the test and do assertions on it. I would however prefer to do this in an ad",https://github.com/bitcoin/bitcoin/pull/16277#discussion_r299915753,299915753,src/noui.cpp
MarcoFalke,2019-07-03 11:58:01,Right now at least the test runner can check for the correct reason by reading the stdour (or err). You take that option without providing an alternative.,https://github.com/bitcoin/bitcoin/pull/16277#discussion_r299917048,299917048,src/noui.cpp
practicalswift,2019-07-03 12:03:49,"Is that feature used somewhere?\n\nIf not I suggest that feature can be added when needed.\n\nWould be nice to get this merged.",https://github.com/bitcoin/bitcoin/pull/16277#discussion_r299919093,299919093,src/noui.cpp
gertjaap,2019-07-03 12:10:46,"I don't think i'm taking any option away: The suppressing only happens when you explicitly call `noui_suppress()`. So the default is to still print it to stdout, which could be useful if a test needs it. The places that are producing the unwanted output were not using stdout and i'm providing a way for those tests to selectively suppress it.",https://github.com/bitcoin/bitcoin/pull/16277#discussion_r299921628,299921628,src/noui.cpp
MarcoFalke,2019-07-03 12:15:21,I don't think there is a use case in suppressing the output with no option to read it,https://github.com/bitcoin/bitcoin/pull/16277#discussion_r299923448,299923448,src/noui.cpp
gertjaap,2019-07-03 13:03:33,"The output is not being checked as it stands. If not checking the output is a problem in itself, then that deserves a fix _too_, but is not the scope of what I was aiming for with this PR. ",https://github.com/bitcoin/bitcoin/pull/16277#discussion_r299944152,299944152,src/noui.cpp
l2a5b1,2019-07-20 11:09:13,Add newline :),https://github.com/bitcoin/bitcoin/pull/16277#discussion_r305576427,305576427,src/noui.cpp
