[
  {
    "sha": "25c060ceecb2a7355c7cedf0ddcf8af401f64356",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNWMwNjBjZWVjYjJhNzM1NWM3Y2VkZjBkZGNmOGFmNDAxZjY0MzU2",
    "commit": {
      "author": {
        "name": "Carlo Alberto Ferraris",
        "email": "github@cafxx.strayorange.com",
        "date": "2011-04-19T08:40:42Z"
      },
      "committer": {
        "name": "Carlo Alberto Ferraris",
        "email": "github@cafxx.strayorange.com",
        "date": "2011-04-19T08:40:42Z"
      },
      "message": "Use background priority for all but the GUI thread on Windows",
      "tree": {
        "sha": "80562502a40cfc30ea32ea9e1980337ef4c0f70c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80562502a40cfc30ea32ea9e1980337ef4c0f70c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25c060ceecb2a7355c7cedf0ddcf8af401f64356",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25c060ceecb2a7355c7cedf0ddcf8af401f64356",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/25c060ceecb2a7355c7cedf0ddcf8af401f64356",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25c060ceecb2a7355c7cedf0ddcf8af401f64356/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "72e962cf5589d708a6ba636c07ab7db7165ba965",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72e962cf5589d708a6ba636c07ab7db7165ba965",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/72e962cf5589d708a6ba636c07ab7db7165ba965"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 56,
      "deletions": 1
    },
    "files": [
      {
        "sha": "24d177a49063d8b6b9a9033c105ca1dbddd83fa6",
        "filename": "init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25c060ceecb2a7355c7cedf0ddcf8af401f64356/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25c060ceecb2a7355c7cedf0ddcf8af401f64356/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/init.cpp?ref=25c060ceecb2a7355c7cedf0ddcf8af401f64356",
        "patch": "@@ -174,6 +174,7 @@ bool AppInit2(int argc, char* argv[])\n #endif\n #ifndef __WXMSW__\n             \"  -daemon          \\t\\t  \" + _(\"Run in the background as a daemon and accept commands\\n\") +\n+            \"  -nobackground    \\t\\t  \" + _(\"Don't run bitcoin with background priority\\n\") +\n #endif\n             \"  -testnet         \\t\\t  \" + _(\"Use the test network\\n\") +\n             \"  -rpcuser=<user>  \\t  \"   + _(\"Username for JSON-RPC connections\\n\") +\n@@ -352,6 +353,10 @@ bool AppInit2(int argc, char* argv[])\n         fprintf(stdout, \"bitcoin server starting\\n\");\n     strErrors = \"\";\n     int64 nStart;\n+    \n+    // run bitcoin with background priority unless instructed otherwise\n+    if (!GetBoolArg(\"-nobackground\"))\n+        SetThreadBackground(true);\n \n     printf(\"Loading addresses...\\n\");\n     nStart = GetTimeMillis();\n@@ -389,7 +394,7 @@ bool AppInit2(int argc, char* argv[])\n         ScanForWalletTransactions(pindexRescan);\n         printf(\" rescan      %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n     }\n-\n+    \n     printf(\"Done loading\\n\");\n \n         //// debug print"
      },
      {
        "sha": "45ebae27e9988c86a854f3bc2ba880edd8a1fbda",
        "filename": "ui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25c060ceecb2a7355c7cedf0ddcf8af401f64356/ui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25c060ceecb2a7355c7cedf0ddcf8af401f64356/ui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ui.cpp?ref=25c060ceecb2a7355c7cedf0ddcf8af401f64356",
        "patch": "@@ -941,6 +941,7 @@ int64 nRepaintInterval = 500;\n \n void ThreadDelayedRepaint(void* parg)\n {\n+    SetThreadBackground(false); // make sure the GUI thread isn't running with background priority\n     while (!fShutdown)\n     {\n         if (nLastRepaint != nNeedRepaint && GetTimeMillis() - nLastRepaintTime >= nRepaintInterval)"
      },
      {
        "sha": "a808566d51ee71ee1c1239065453feb0caaf6752",
        "filename": "util.h",
        "status": "modified",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25c060ceecb2a7355c7cedf0ddcf8af401f64356/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25c060ceecb2a7355c7cedf0ddcf8af401f64356/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/util.h?ref=25c060ceecb2a7355c7cedf0ddcf8af401f64356",
        "patch": "@@ -6,6 +6,7 @@\n #if defined(_MSC_VER) || defined(__BORLANDC__)\n typedef __int64  int64;\n typedef unsigned __int64  uint64;\n+#define __thread __declspec(thread)\n #else\n typedef long long  int64;\n typedef unsigned long long  uint64;\n@@ -590,7 +591,38 @@ inline void SetThreadPriority(int nPriority)\n {\n     SetThreadPriority(GetCurrentThread(), nPriority);\n }\n+\n+inline int GetThreadPriority()\n+{\n+    return GetThreadPriority(GetCurrentThread());\n+}\n+\n+inline bool SetThreadBackground(bool background)\n+{\n+    static __thread bool inBackground = false;\n+    if (background)\n+    {\n+        if (SetThreadPriority(GetCurrentThread(), THREAD_MODE_BACKGROUND_BEGIN))\n+            inBackground = true;\n+        else if (GetLastError() == ERROR_THREAD_MODE_ALREADY_BACKGROUND)\n+            assert(inBackground == true);\n+        /*  if a different error occurred (e.g. couldn't exit background mode) we assume that \n+            the value of inBackground represents if we are in background mode or not     */\n+    }\n+    else\n+    {\n+        if (SetThreadPriority(GetCurrentThread(), THREAD_MODE_BACKGROUND_END))\n+            inBackground = false;\n+        else if (GetLastError() == ERROR_THREAD_MODE_NOT_BACKGROUND)\n+            assert(inBackground == false);\n+        /*  if a different error occurred (e.g. couldn't exit background mode) we assume that \n+            the value of inBackground represents if we are in background mode or not     */\n+    }\n+    return inBackground;\n+}\n+\n #else\n+\n inline pthread_t CreateThread(void(*pfn)(void*), void* parg, bool fWantHandle=false)\n {\n     pthread_t hthread = 0;\n@@ -621,6 +653,22 @@ inline void SetThreadPriority(int nPriority)\n #endif\n }\n \n+inline int GetThreadPriority()\n+{\n+#ifdef PRIO_THREAD\n+    return getpriority(PRIO_THREAD, 0);\n+#else\n+    return getpriority(PRIO_PROCESS, 0);\n+#endif\n+}\n+\n+inline bool SetThreadBackground(bool background)\n+{\n+    static __thread bool inBackground = false;\n+    // TODO how do we emulate this?\n+    return inBackground;\n+}\n+\n inline bool TerminateThread(pthread_t hthread, unsigned int nExitCode)\n {\n     return (pthread_cancel(hthread) == 0);\n@@ -630,6 +678,7 @@ inline void ExitThread(unsigned int nExitCode)\n {\n     pthread_exit((void*)nExitCode);\n }\n+\n #endif\n \n "
      }
    ]
  }
]