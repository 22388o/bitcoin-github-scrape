[
  {
    "sha": "72b9452b1d5ff8761466e9810facfd50103cc63b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MmI5NDUyYjFkNWZmODc2MTQ2NmU5ODEwZmFjZmQ1MDEwM2NjNjNi",
    "commit": {
      "author": {
        "name": "Forrest Voight",
        "email": "forrest@forre.st",
        "date": "2015-07-02T01:34:31Z"
      },
      "committer": {
        "name": "Forrest Voight",
        "email": "forrest@forre.st",
        "date": "2015-07-02T01:55:08Z"
      },
      "message": "When processing RPC commands during warmup phase, parse the\nrequest object before returning an error so that id value can\nbe used in the response.\n\nPrior to this commit, RPC commands sent during Bitcoin's\nwarmup/startup phase were responded to with a JSON-RPC error\nwith an id of null, which violated the JSON-RPC 2.0 spec:\n\nid: This member is REQUIRED. It MUST be the same as the value\nof the id member in the Request Object. If there was an error\nin detecting the id in the Request object (e.g. Parse\nerror/Invalid Request), it MUST be Null.",
      "tree": {
        "sha": "be7c69f872fb57e78a0784f8780ff8749754f450",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/be7c69f872fb57e78a0784f8780ff8749754f450"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72b9452b1d5ff8761466e9810facfd50103cc63b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72b9452b1d5ff8761466e9810facfd50103cc63b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/72b9452b1d5ff8761466e9810facfd50103cc63b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72b9452b1d5ff8761466e9810facfd50103cc63b/comments",
    "author": {
      "login": "forrestv",
      "id": 59872,
      "node_id": "MDQ6VXNlcjU5ODcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/59872?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/forrestv",
      "html_url": "https://github.com/forrestv",
      "followers_url": "https://api.github.com/users/forrestv/followers",
      "following_url": "https://api.github.com/users/forrestv/following{/other_user}",
      "gists_url": "https://api.github.com/users/forrestv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/forrestv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/forrestv/subscriptions",
      "organizations_url": "https://api.github.com/users/forrestv/orgs",
      "repos_url": "https://api.github.com/users/forrestv/repos",
      "events_url": "https://api.github.com/users/forrestv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/forrestv/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "forrestv",
      "id": 59872,
      "node_id": "MDQ6VXNlcjU5ODcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/59872?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/forrestv",
      "html_url": "https://github.com/forrestv",
      "followers_url": "https://api.github.com/users/forrestv/followers",
      "following_url": "https://api.github.com/users/forrestv/following{/other_user}",
      "gists_url": "https://api.github.com/users/forrestv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/forrestv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/forrestv/subscriptions",
      "organizations_url": "https://api.github.com/users/forrestv/orgs",
      "repos_url": "https://api.github.com/users/forrestv/repos",
      "events_url": "https://api.github.com/users/forrestv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/forrestv/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6bcb0a21c5435738e2fccd589636de8db4989992",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6bcb0a21c5435738e2fccd589636de8db4989992",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6bcb0a21c5435738e2fccd589636de8db4989992"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "b76575fc4a4bdb5b7b93f50641d0d02292510fd5",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72b9452b1d5ff8761466e9810facfd50103cc63b/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72b9452b1d5ff8761466e9810facfd50103cc63b/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=72b9452b1d5ff8761466e9810facfd50103cc63b",
        "patch": "@@ -930,13 +930,6 @@ static bool HTTPReq_JSONRPC(AcceptedConnection *conn,\n         if (!valRequest.read(strRequest))\n             throw JSONRPCError(RPC_PARSE_ERROR, \"Parse error\");\n \n-        // Return immediately if in warmup\n-        {\n-            LOCK(cs_rpcWarmup);\n-            if (fRPCInWarmup)\n-                throw JSONRPCError(RPC_IN_WARMUP, rpcWarmupStatus);\n-        }\n-\n         string strReply;\n \n         // singleton request\n@@ -1008,6 +1001,13 @@ void ServiceConnection(AcceptedConnection *conn)\n \n UniValue CRPCTable::execute(const std::string &strMethod, const UniValue &params) const\n {\n+    // Return immediately if in warmup\n+    {\n+        LOCK(cs_rpcWarmup);\n+        if (fRPCInWarmup)\n+            throw JSONRPCError(RPC_IN_WARMUP, rpcWarmupStatus);\n+    }\n+\n     // Find method\n     const CRPCCommand *pcmd = tableRPC[strMethod];\n     if (!pcmd)"
      }
    ]
  }
]