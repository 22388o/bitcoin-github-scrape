jonasschnelli,2017-06-08T06:22:15Z,"Meh.\nThose code parts are already tested in bumpfee / keypool / fundrawtransaction / wallet-dump.\nIMO we don't need another test for this.\n\nOr where are the improvements?",https://github.com/bitcoin/bitcoin/pull/10551#issuecomment-307010245,307010245,
achow101,2017-06-08T07:04:09Z,The improvements are that walletpassphrasechange is now tested and that these functionality are explicitly being tested. The usage of these RPCs in other tests are more for doing stuff with testing other stuff rather than actually testing the behavior of these RPCs themselves.,https://github.com/bitcoin/bitcoin/pull/10551#issuecomment-307017754,307017754,
jonasschnelli,2017-06-08T07:07:24Z,"I would recommend to add the missing test to an existing wallet test and maybe rename the test file (so the name may make more sense).\nIt's just my opinion, I think we should try to combine tests (if it makes sense) to avoid unnecessary test-bootstraps/runs.",https://github.com/bitcoin/bitcoin/pull/10551#issuecomment-307018378,307018378,
jnewbery,2017-06-08T16:04:22Z,"> Those code parts are already tested in bumpfee / keypool / fundrawtransaction / wallet-dump. IMO we don't need another test for this.\n\nOnly just saw this comment. I agree with @achow101 that the calls to encryptwallet in those tests is incidental and it makes sense to have directed tests of encrypting/decrypting and changing passphrases. It may make sense to add it to an existing test, but o",https://github.com/bitcoin/bitcoin/pull/10551#issuecomment-307149633,307149633,
jonasschnelli,2017-06-08T18:28:45Z,"> There's a balance here: adding new test cases conceptually separates the different test objectives, and also allows tests to be run in parallel, but test setup/teardown is a non-negligable part of the time taken to run the tests.\n\nFair point.",https://github.com/bitcoin/bitcoin/pull/10551#issuecomment-307188305,307188305,
jnewbery,2017-06-08T19:51:30Z,Looks good to me! Tested ACK ec98b78e1e1ce6bd9e6189788f7689aebfbf343c,https://github.com/bitcoin/bitcoin/pull/10551#issuecomment-307208959,307208959,
laanwj,2017-06-14T13:27:49Z,ACK ec98b78,https://github.com/bitcoin/bitcoin/pull/10551#issuecomment-308430727,308430727,
jnewbery,2017-06-08T15:18:26Z,`os` and `shutil` are imported but not used.,https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120917646,120917646,test/functional/wallet-encryption.py
jnewbery,2017-06-08T15:19:39Z,"nit: prefer [PIP8](https://www.python.org/dev/peps/pep-0008/) import order (std library, followed by 3rd party library, followed by project imports)",https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120917991,120917991,test/functional/wallet-encryption.py
jnewbery,2017-06-08T15:21:15Z,no space before parens for function parameters please.,https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120918433,120918433,test/functional/wallet-encryption.py
jnewbery,2017-06-08T15:22:10Z,I don't think this local variable is needed. You can just use `self.options.tmpdir` directly in the call to `start_node()` below.,https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120918739,120918739,test/functional/wallet-encryption.py
jnewbery,2017-06-08T15:24:09Z,"Is it possible to assert that privkey is a legitimate privkey here? You're asserting everything against it further down, but you never assert that privkey is actually a private key. This test would still pass if, for example, `dumpprivkey()` always returns an empty string.",https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120919323,120919323,test/functional/wallet-encryption.py
jnewbery,2017-06-08T15:28:46Z,"This call to `stop_node()` is not needed (and may be dangerous). the encryptwallet RPC causes bitcoind to stop. Really what you need to do here is wait for the bitcoind process to terminate rather than call `stop_node()`. See https://github.com/bitcoin/bitcoin/blob/9c248e39f2807a7f89e555e99cc55cb2de1ad335/test/functional/fundrawtransaction.py#L455 for example.\n\n`stop_node()` will assert if the",https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120920657,120920657,test/functional/wallet-encryption.py
jnewbery,2017-06-08T15:30:49Z,"Consider reducing the timeout in the call to walletpassphrase to shorten this test. Alternatively, you could use mocktime to avoid waiting for 10 seconds.",https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120921197,120921197,test/functional/wallet-encryption.py
achow101,2017-06-08T17:53:54Z,"I suppose it would be possible to do a prefix and length check on it. Alternatively a private key could be hard-coded and imported into the wallet. But actually checking that the private key is legitimate, I'm not sure that that can be done.",https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120955573,120955573,test/functional/wallet-encryption.py
achow101,2017-06-08T17:54:17Z,done,https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120955670,120955670,test/functional/wallet-encryption.py
achow101,2017-06-08T17:54:23Z,done,https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120955689,120955689,test/functional/wallet-encryption.py
achow101,2017-06-08T17:54:28Z,done,https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120955710,120955710,test/functional/wallet-encryption.py
achow101,2017-06-08T17:54:33Z,done,https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120955731,120955731,test/functional/wallet-encryption.py
achow101,2017-06-08T17:54:43Z,done,https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120955765,120955765,test/functional/wallet-encryption.py
achow101,2017-06-08T17:54:48Z,done,https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120955777,120955777,test/functional/wallet-encryption.py
jnewbery,2017-06-08T17:57:18Z,Presumably it'd be possible to check that it's a base58 string of the correct length? That should be enough. I think we should at least detect the case where the return value is obviously *not* a private key.,https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120956510,120956510,test/functional/wallet-encryption.py
achow101,2017-06-08T18:08:09Z,I added a prefix check and length check since there isn't actually anything to do a base58 check in the tests.,https://github.com/bitcoin/bitcoin/pull/10551#discussion_r120959237,120959237,test/functional/wallet-encryption.py
