[
  {
    "sha": "578ec80d4fcef6be48acf45185d1248bb62bfdbf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzhlYzgwZDRmY2VmNmJlNDhhY2Y0NTE4NWQxMjQ4YmI2MmJmZGJm",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-02-02T22:15:55Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T23:09:01Z"
      },
      "message": "RPC: rawtransaction: Add RBF support for createrawtransaction",
      "tree": {
        "sha": "560b516c5943e28ed75852e8717b474b3b166a99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/560b516c5943e28ed75852e8717b474b3b166a99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/578ec80d4fcef6be48acf45185d1248bb62bfdbf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/578ec80d4fcef6be48acf45185d1248bb62bfdbf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/578ec80d4fcef6be48acf45185d1248bb62bfdbf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/578ec80d4fcef6be48acf45185d1248bb62bfdbf/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9fec4da0bec93a49798b5f5e92cf76e900759ee4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fec4da0bec93a49798b5f5e92cf76e900759ee4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9fec4da0bec93a49798b5f5e92cf76e900759ee4"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 19,
      "deletions": 5
    },
    "files": [
      {
        "sha": "ec27e55f0213e62b2ef1e0a9f197309a0e43329f",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578ec80d4fcef6be48acf45185d1248bb62bfdbf/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578ec80d4fcef6be48acf45185d1248bb62bfdbf/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=578ec80d4fcef6be48acf45185d1248bb62bfdbf",
        "patch": "@@ -86,6 +86,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"createrawtransaction\", 0, \"inputs\" },\n     { \"createrawtransaction\", 1, \"outputs\" },\n     { \"createrawtransaction\", 2, \"locktime\" },\n+    { \"createrawtransaction\", 3, \"optintorbf\" },\n     { \"signrawtransaction\", 1, \"prevtxs\" },\n     { \"signrawtransaction\", 2, \"privkeys\" },\n     { \"sendrawtransaction\", 1, \"allowhighfees\" },"
      },
      {
        "sha": "07a7ef34e29811baecfa2504fac0940079f26ace",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 5,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/578ec80d4fcef6be48acf45185d1248bb62bfdbf/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/578ec80d4fcef6be48acf45185d1248bb62bfdbf/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=578ec80d4fcef6be48acf45185d1248bb62bfdbf",
        "patch": "@@ -289,9 +289,9 @@ UniValue verifytxoutproof(const JSONRPCRequest& request)\n \n UniValue createrawtransaction(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() < 2 || request.params.size() > 3)\n+    if (request.fHelp || request.params.size() < 2 || request.params.size() > 4)\n         throw std::runtime_error(\n-            \"createrawtransaction [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n},...] {\\\"address\\\":amount,\\\"data\\\":\\\"hex\\\",...} ( locktime )\\n\"\n+            \"createrawtransaction [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n},...] {\\\"address\\\":amount,\\\"data\\\":\\\"hex\\\",...} ( locktime ) ( optintorbf )\\n\"\n             \"\\nCreate a transaction spending the given inputs and creating new outputs.\\n\"\n             \"Outputs can be addresses or data.\\n\"\n             \"Returns hex-encoded raw transaction.\\n\"\n@@ -315,6 +315,7 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n             \"      ,...\\n\"\n             \"    }\\n\"\n             \"3. locktime                  (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs\\n\"\n+            \"4. optintorbf                (boolean, optional, default=false) Allow this transaction to be replaced by a transaction with higher fees\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"transaction\\\"              (string) hex string of the transaction\\n\"\n \n@@ -341,6 +342,8 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n         rawTx.nLockTime = nLockTime;\n     }\n \n+    bool rbfOptIn = request.params.size() > 3 ? request.params[3].isTrue() : false;\n+\n     for (unsigned int idx = 0; idx < inputs.size(); idx++) {\n         const UniValue& input = inputs[idx];\n         const UniValue& o = input.get_obj();\n@@ -354,16 +357,26 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n         if (nOutput < 0)\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout must be positive\");\n \n-        uint32_t nSequence = (rawTx.nLockTime ? std::numeric_limits<uint32_t>::max() - 1 : std::numeric_limits<uint32_t>::max());\n+        uint32_t nSequence;\n+        if (rbfOptIn) {\n+            nSequence = std::numeric_limits<uint32_t>::max() - 2;\n+        } else if (rawTx.nLockTime) {\n+            nSequence = std::numeric_limits<uint32_t>::max() - 1;\n+        } else {\n+            nSequence = std::numeric_limits<uint32_t>::max();\n+        }\n \n         // set the sequence number if passed in the parameters object\n         const UniValue& sequenceObj = find_value(o, \"sequence\");\n         if (sequenceObj.isNum()) {\n             int64_t seqNr64 = sequenceObj.get_int64();\n-            if (seqNr64 < 0 || seqNr64 > std::numeric_limits<uint32_t>::max())\n+            if (seqNr64 < 0 || seqNr64 > std::numeric_limits<uint32_t>::max()) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, sequence number is out of range\");\n-            else\n+            } else if (seqNr64 <= std::numeric_limits<uint32_t>::max() - 2 && request.params.size() > 3 && request.params[3].isFalse()) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter combination: Sequence number contradicts optintorbf option\");\n+            } else {\n                 nSequence = (uint32_t)seqNr64;\n+            }\n         }\n \n         CTxIn in(COutPoint(txid, nOutput), CScript(), nSequence);"
      }
    ]
  },
  {
    "sha": "891c5eeec2dbf295d14e8f888de02637367dd930",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTFjNWVlZWMyZGJmMjk1ZDE0ZThmODg4ZGUwMjYzNzM2N2RkOTMw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-02-02T22:33:24Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T23:12:03Z"
      },
      "message": "Wallet: Refactor FundTransaction to accept parameters via CCoinControl",
      "tree": {
        "sha": "caf65931f13e4084c10e8a324ab80c94d137856d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/caf65931f13e4084c10e8a324ab80c94d137856d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/891c5eeec2dbf295d14e8f888de02637367dd930",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/891c5eeec2dbf295d14e8f888de02637367dd930",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/891c5eeec2dbf295d14e8f888de02637367dd930",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/891c5eeec2dbf295d14e8f888de02637367dd930/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "578ec80d4fcef6be48acf45185d1248bb62bfdbf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/578ec80d4fcef6be48acf45185d1248bb62bfdbf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/578ec80d4fcef6be48acf45185d1248bb62bfdbf"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 14,
      "deletions": 17
    },
    "files": [
      {
        "sha": "5e264dd1a47a81139c06e09e480b60404291fdb9",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 10,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/891c5eeec2dbf295d14e8f888de02637367dd930/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/891c5eeec2dbf295d14e8f888de02637367dd930/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=891c5eeec2dbf295d14e8f888de02637367dd930",
        "patch": "@@ -21,6 +21,7 @@\n #include \"timedata.h\"\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n+#include \"wallet/coincontrol.h\"\n #include \"wallet/feebumper.h\"\n #include \"wallet/wallet.h\"\n #include \"wallet/walletdb.h\"\n@@ -2678,20 +2679,21 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n \n     RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VSTR));\n \n-    CTxDestination changeAddress = CNoDestination();\n+    CCoinControl coinControl;\n+    coinControl.destChange = CNoDestination();\n     int changePosition = -1;\n-    bool includeWatching = false;\n+    coinControl.fAllowWatchOnly = false;  // include watching\n     bool lockUnspents = false;\n     bool reserveChangeKey = true;\n-    CFeeRate feeRate = CFeeRate(0);\n-    bool overrideEstimatedFeerate = false;\n+    coinControl.nFeeRate = CFeeRate(0);\n+    coinControl.fOverrideFeeRate = false;\n     UniValue subtractFeeFromOutputs;\n     std::set<int> setSubtractFeeFromOutputs;\n \n     if (request.params.size() > 1) {\n       if (request.params[1].type() == UniValue::VBOOL) {\n         // backward compatibility bool only fallback\n-        includeWatching = request.params[1].get_bool();\n+        coinControl.fAllowWatchOnly = request.params[1].get_bool();\n       }\n       else {\n         RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VSTR)(UniValue::VOBJ));\n@@ -2716,14 +2718,14 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             if (!address.IsValid())\n                 throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"changeAddress must be a valid bitcoin address\");\n \n-            changeAddress = address.Get();\n+            coinControl.destChange = address.Get();\n         }\n \n         if (options.exists(\"changePosition\"))\n             changePosition = options[\"changePosition\"].get_int();\n \n         if (options.exists(\"includeWatching\"))\n-            includeWatching = options[\"includeWatching\"].get_bool();\n+            coinControl.fAllowWatchOnly = options[\"includeWatching\"].get_bool();\n \n         if (options.exists(\"lockUnspents\"))\n             lockUnspents = options[\"lockUnspents\"].get_bool();\n@@ -2733,8 +2735,8 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n \n         if (options.exists(\"feeRate\"))\n         {\n-            feeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n-            overrideEstimatedFeerate = true;\n+            coinControl.nFeeRate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n+            coinControl.fOverrideFeeRate = true;\n         }\n \n         if (options.exists(\"subtractFeeFromOutputs\"))\n@@ -2767,7 +2769,7 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n     CAmount nFeeOut;\n     std::string strFailReason;\n \n-    if (!pwallet->FundTransaction(tx, nFeeOut, overrideEstimatedFeerate, feeRate, changePosition, strFailReason, includeWatching, lockUnspents, setSubtractFeeFromOutputs, reserveChangeKey, changeAddress)) {\n+    if (!pwallet->FundTransaction(tx, nFeeOut, changePosition, strFailReason, lockUnspents, setSubtractFeeFromOutputs, coinControl, reserveChangeKey)) {\n         throw JSONRPCError(RPC_WALLET_ERROR, strFailReason);\n     }\n "
      },
      {
        "sha": "c00f52282f4ad8aae1fa4fc8ec394af8f360fafe",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/891c5eeec2dbf295d14e8f888de02637367dd930/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/891c5eeec2dbf295d14e8f888de02637367dd930/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=891c5eeec2dbf295d14e8f888de02637367dd930",
        "patch": "@@ -2414,7 +2414,7 @@ bool CWallet::SignTransaction(CMutableTransaction &tx)\n     return true;\n }\n \n-bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const std::set<int>& setSubtractFeeFromOutputs, bool keepReserveKey, const CTxDestination& destChange)\n+bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nChangePosInOut, std::string& strFailReason, bool lockUnspents, const std::set<int>& setSubtractFeeFromOutputs, CCoinControl coinControl, bool keepReserveKey)\n {\n     std::vector<CRecipient> vecSend;\n \n@@ -2426,12 +2426,7 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool ov\n         vecSend.push_back(recipient);\n     }\n \n-    CCoinControl coinControl;\n-    coinControl.destChange = destChange;\n     coinControl.fAllowOtherInputs = true;\n-    coinControl.fAllowWatchOnly = includeWatching;\n-    coinControl.fOverrideFeeRate = overrideEstimatedFeeRate;\n-    coinControl.nFeeRate = specificFeeRate;\n \n     BOOST_FOREACH(const CTxIn& txin, tx.vin)\n         coinControl.Select(txin.prevout);"
      },
      {
        "sha": "6f69c1603093304a5d8aa76a3287ab3c2ea2c899",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/891c5eeec2dbf295d14e8f888de02637367dd930/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/891c5eeec2dbf295d14e8f888de02637367dd930/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=891c5eeec2dbf295d14e8f888de02637367dd930",
        "patch": "@@ -935,7 +935,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      * Insert additional inputs into the transaction by\n      * calling CreateTransaction();\n      */\n-    bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const std::set<int>& setSubtractFeeFromOutputs, bool keepReserveKey = true, const CTxDestination& destChange = CNoDestination());\n+    bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nChangePosInOut, std::string& strFailReason, bool lockUnspents, const std::set<int>& setSubtractFeeFromOutputs, CCoinControl, bool keepReserveKey = true);\n     bool SignTransaction(CMutableTransaction& tx);\n \n     /**"
      }
    ]
  },
  {
    "sha": "36bcab2356c4ccbefd463035b3ed1576ddb493e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNmJjYWIyMzU2YzRjY2JlZmQ0NjMwMzViM2VkMTU3NmRkYjQ5M2U1",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-02-02T22:36:50Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T23:12:29Z"
      },
      "message": "RPC/Wallet: Add RBF support for fundrawtransaction",
      "tree": {
        "sha": "45a9f0c97702adda394136cb2fff949795a66ff5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45a9f0c97702adda394136cb2fff949795a66ff5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/36bcab2356c4ccbefd463035b3ed1576ddb493e5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36bcab2356c4ccbefd463035b3ed1576ddb493e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/36bcab2356c4ccbefd463035b3ed1576ddb493e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36bcab2356c4ccbefd463035b3ed1576ddb493e5/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "891c5eeec2dbf295d14e8f888de02637367dd930",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/891c5eeec2dbf295d14e8f888de02637367dd930",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/891c5eeec2dbf295d14e8f888de02637367dd930"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0841c23b865779f5f1985bf907ff0db795b11410",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36bcab2356c4ccbefd463035b3ed1576ddb493e5/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36bcab2356c4ccbefd463035b3ed1576ddb493e5/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=36bcab2356c4ccbefd463035b3ed1576ddb493e5",
        "patch": "@@ -2629,7 +2629,7 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n         throw std::runtime_error(\n                             \"fundrawtransaction \\\"hexstring\\\" ( options )\\n\"\n                             \"\\nAdd inputs to a transaction until it has enough in value to meet its out value.\\n\"\n@@ -2658,6 +2658,7 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                             \"                              Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n                             \"                              If no outputs are specified here, the sender pays the fee.\\n\"\n                             \"                                  [vout_index,...]\\n\"\n+                            \"     \\\"optIntoRbf\\\"             (boolean, optional) Allow this transaction to be replaced by a transaction with higher fees\\n\"\n                             \"   }\\n\"\n                             \"                         for backward compatibility: passing in a true instead of an object will result in {\\\"includeWatching\\\":true}\\n\"\n                             \"\\nResult:\\n\"\n@@ -2709,6 +2710,7 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                 {\"reserveChangeKey\", UniValueType(UniValue::VBOOL)},\n                 {\"feeRate\", UniValueType()}, // will be checked below\n                 {\"subtractFeeFromOutputs\", UniValueType(UniValue::VARR)},\n+                {\"optIntoRbf\", UniValueType(UniValue::VBOOL)},\n             },\n             true, true);\n \n@@ -2741,6 +2743,10 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n \n         if (options.exists(\"subtractFeeFromOutputs\"))\n             subtractFeeFromOutputs = options[\"subtractFeeFromOutputs\"].get_array();\n+\n+        if (options.exists(\"optIntoRbf\")) {\n+            coinControl.signalRbf = options[\"optIntoRbf\"].get_bool();\n+        }\n       }\n     }\n "
      }
    ]
  },
  {
    "sha": "5d26244148b636c1b81b9eb5ab6a45f33766bd08",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZDI2MjQ0MTQ4YjYzNmMxYjgxYjllYjVhYjZhNDVmMzM3NjZiZDA4",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-12-03T09:45:41Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T23:13:24Z"
      },
      "message": "[Tests] extend the replace-by-fee test to cover RPC rawtx features",
      "tree": {
        "sha": "b2b19cdc8c318f1c7bbbf593c918c90c0fa51432",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b2b19cdc8c318f1c7bbbf593c918c90c0fa51432"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d26244148b636c1b81b9eb5ab6a45f33766bd08",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d26244148b636c1b81b9eb5ab6a45f33766bd08",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5d26244148b636c1b81b9eb5ab6a45f33766bd08",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d26244148b636c1b81b9eb5ab6a45f33766bd08/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "36bcab2356c4ccbefd463035b3ed1576ddb493e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36bcab2356c4ccbefd463035b3ed1576ddb493e5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/36bcab2356c4ccbefd463035b3ed1576ddb493e5"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 23,
      "deletions": 0
    },
    "files": [
      {
        "sha": "da19648d85fa97608dfcd39f4d8365954bd0b37a",
        "filename": "test/functional/replace-by-fee.py",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d26244148b636c1b81b9eb5ab6a45f33766bd08/test/functional/replace-by-fee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d26244148b636c1b81b9eb5ab6a45f33766bd08/test/functional/replace-by-fee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/replace-by-fee.py?ref=5d26244148b636c1b81b9eb5ab6a45f33766bd08",
        "patch": "@@ -99,6 +99,9 @@ def run_test(self):\n         self.log.info(\"Running test opt-in...\")\n         self.test_opt_in()\n \n+        self.log.info(\"Running test RPC...\")\n+        self.test_rpc()\n+\n         self.log.info(\"Running test prioritised transactions...\")\n         self.test_prioritised_transactions()\n \n@@ -516,5 +519,25 @@ def test_prioritised_transactions(self):\n \n         assert(tx2b_txid in self.nodes[0].getrawmempool())\n \n+    def test_rpc(self):\n+        us0 = self.nodes[0].listunspent()[0]\n+        ins = [us0];\n+        outs = {self.nodes[0].getnewaddress() : Decimal(1.0000000)}\n+        rawtx0 = self.nodes[0].createrawtransaction(ins, outs, 0, True)\n+        rawtx1 = self.nodes[0].createrawtransaction(ins, outs, 0, False)\n+        json0  = self.nodes[0].decoderawtransaction(rawtx0)\n+        json1  = self.nodes[0].decoderawtransaction(rawtx1)\n+        assert_equal(json0[\"vin\"][0][\"sequence\"], 4294967293)\n+        assert_equal(json1[\"vin\"][0][\"sequence\"], 4294967295)\n+\n+        rawtx2 = self.nodes[0].createrawtransaction([], outs)\n+        frawtx2a = self.nodes[0].fundrawtransaction(rawtx2, {\"optIntoRbf\": True})\n+        frawtx2b = self.nodes[0].fundrawtransaction(rawtx2, {\"optIntoRbf\": False})\n+\n+        json0  = self.nodes[0].decoderawtransaction(frawtx2a['hex'])\n+        json1  = self.nodes[0].decoderawtransaction(frawtx2b['hex'])\n+        assert_equal(json0[\"vin\"][0][\"sequence\"], 4294967293)\n+        assert_equal(json1[\"vin\"][0][\"sequence\"], 4294967294)\n+\n if __name__ == '__main__':\n     ReplaceByFeeTest().main()"
      }
    ]
  },
  {
    "sha": "575cde4605c9a321ad591dbb7d632dd0ef946d40",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzVjZGU0NjA1YzlhMzIxYWQ1OTFkYmI3ZDYzMmRkMGVmOTQ2ZDQw",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-12-03T15:42:01Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T23:13:24Z"
      },
      "message": "[bitcoin-tx] add rbfoptin command",
      "tree": {
        "sha": "6bdbdc65495ddceed61621fccfa2dbb0f7b93a71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6bdbdc65495ddceed61621fccfa2dbb0f7b93a71"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/575cde4605c9a321ad591dbb7d632dd0ef946d40",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/575cde4605c9a321ad591dbb7d632dd0ef946d40",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/575cde4605c9a321ad591dbb7d632dd0ef946d40",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/575cde4605c9a321ad591dbb7d632dd0ef946d40/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5d26244148b636c1b81b9eb5ab6a45f33766bd08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d26244148b636c1b81b9eb5ab6a45f33766bd08",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5d26244148b636c1b81b9eb5ab6a45f33766bd08"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 22,
      "deletions": 0
    },
    "files": [
      {
        "sha": "87d84759427966a4aae07f082ba3956f3753b051",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/575cde4605c9a321ad591dbb7d632dd0ef946d40/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/575cde4605c9a321ad591dbb7d632dd0ef946d40/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=575cde4605c9a321ad591dbb7d632dd0ef946d40",
        "patch": "@@ -77,6 +77,7 @@ static int AppInitRawTx(int argc, char* argv[])\n         strUsage += HelpMessageOpt(\"in=TXID:VOUT(:SEQUENCE_NUMBER)\", _(\"Add input to TX\"));\n         strUsage += HelpMessageOpt(\"locktime=N\", _(\"Set TX lock time to N\"));\n         strUsage += HelpMessageOpt(\"nversion=N\", _(\"Set TX version to N\"));\n+        strUsage += HelpMessageOpt(\"rbfoptin(=N)\", _(\"Set RBF opt-in sequence number for input N (if not provided, opt-in all available inputs)\"));\n         strUsage += HelpMessageOpt(\"outaddr=VALUE:ADDRESS\", _(\"Add address-based output to TX\"));\n         strUsage += HelpMessageOpt(\"outpubkey=VALUE:PUBKEY[:FLAGS]\", _(\"Add pay-to-pubkey output to TX\") + \". \" +\n             _(\"Optionally add the \\\"W\\\" flag to produce a pay-to-witness-pubkey-hash output\") + \". \" +\n@@ -202,6 +203,24 @@ static void MutateTxLocktime(CMutableTransaction& tx, const std::string& cmdVal)\n     tx.nLockTime = (unsigned int) newLocktime;\n }\n \n+static void MutateTxRBFOptIn(CMutableTransaction& tx, const std::string& strInIdx)\n+{\n+    // parse requested index\n+    int inIdx = atoi(strInIdx);\n+    if (inIdx < 0 || inIdx >= (int)tx.vin.size()) {\n+        throw std::runtime_error(\"Invalid TX input index '\" + strInIdx + \"'\");\n+    }\n+\n+    // set the nSequence to MAX_INT - 2 (= RBF opt in flag)\n+    int cnt = 0;\n+    for (CTxIn& txin : tx.vin) {\n+        if (strInIdx == \"\" || cnt == inIdx) {\n+            txin.nSequence = std::numeric_limits<unsigned int>::max() - 2;\n+        }\n+        ++cnt;\n+    }\n+}\n+\n static void MutateTxAddInput(CMutableTransaction& tx, const std::string& strInput)\n {\n     std::vector<std::string> vStrInputParts;\n@@ -649,6 +668,9 @@ static void MutateTx(CMutableTransaction& tx, const std::string& command,\n         MutateTxVersion(tx, commandVal);\n     else if (command == \"locktime\")\n         MutateTxLocktime(tx, commandVal);\n+    else if (command == \"rbfoptin\") {\n+        MutateTxRBFOptIn(tx, commandVal);\n+    }\n \n     else if (command == \"delin\")\n         MutateTxDelInput(tx, commandVal);"
      }
    ]
  },
  {
    "sha": "b005bf21a7cabe827ef62f266c22adf2ee745b61",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMDA1YmYyMWE3Y2FiZTgyN2VmNjJmMjY2YzIyYWRmMmVlNzQ1YjYx",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-02-03T19:13:28Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T23:14:34Z"
      },
      "message": "Introduce MAX_BIP125_RBF_SEQUENCE constant",
      "tree": {
        "sha": "b5c1181a3e3300eeaf458c0b588510700bf50e69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5c1181a3e3300eeaf458c0b588510700bf50e69"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b005bf21a7cabe827ef62f266c22adf2ee745b61",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b005bf21a7cabe827ef62f266c22adf2ee745b61",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b005bf21a7cabe827ef62f266c22adf2ee745b61",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b005bf21a7cabe827ef62f266c22adf2ee745b61/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "575cde4605c9a321ad591dbb7d632dd0ef946d40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/575cde4605c9a321ad591dbb7d632dd0ef946d40",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/575cde4605c9a321ad591dbb7d632dd0ef946d40"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 9,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a67c42ec5033c65c04642d6b5609fd065d68cf7c",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b005bf21a7cabe827ef62f266c22adf2ee745b61/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b005bf21a7cabe827ef62f266c22adf2ee745b61/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=b005bf21a7cabe827ef62f266c22adf2ee745b61",
        "patch": "@@ -13,6 +13,7 @@\n #include \"core_io.h\"\n #include \"keystore.h\"\n #include \"policy/policy.h\"\n+#include \"policy/rbf.h\"\n #include \"primitives/transaction.h\"\n #include \"script/script.h\"\n #include \"script/sign.h\"\n@@ -215,7 +216,7 @@ static void MutateTxRBFOptIn(CMutableTransaction& tx, const std::string& strInId\n     int cnt = 0;\n     for (CTxIn& txin : tx.vin) {\n         if (strInIdx == \"\" || cnt == inIdx) {\n-            txin.nSequence = std::numeric_limits<unsigned int>::max() - 2;\n+            txin.nSequence = MAX_BIP125_RBF_SEQUENCE;\n         }\n         ++cnt;\n     }"
      },
      {
        "sha": "22c73f3319340453f5f5f254e38761d66f2e70c9",
        "filename": "src/policy/rbf.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b005bf21a7cabe827ef62f266c22adf2ee745b61/src/policy/rbf.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b005bf21a7cabe827ef62f266c22adf2ee745b61/src/policy/rbf.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.h?ref=b005bf21a7cabe827ef62f266c22adf2ee745b61",
        "patch": "@@ -7,6 +7,8 @@\n \n #include \"txmempool.h\"\n \n+static const uint32_t MAX_BIP125_RBF_SEQUENCE = 0xfffffffd;\n+\n enum RBFTransactionState {\n     RBF_TRANSACTIONSTATE_UNKNOWN,\n     RBF_TRANSACTIONSTATE_REPLACEABLE_BIP125,"
      },
      {
        "sha": "332dbc08a38b44bf53ed1b51786ce718aa9feca8",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b005bf21a7cabe827ef62f266c22adf2ee745b61/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b005bf21a7cabe827ef62f266c22adf2ee745b61/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=b005bf21a7cabe827ef62f266c22adf2ee745b61",
        "patch": "@@ -14,6 +14,7 @@\n #include \"merkleblock.h\"\n #include \"net.h\"\n #include \"policy/policy.h\"\n+#include \"policy/rbf.h\"\n #include \"primitives/transaction.h\"\n #include \"rpc/server.h\"\n #include \"script/script.h\"\n@@ -359,7 +360,7 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n \n         uint32_t nSequence;\n         if (rbfOptIn) {\n-            nSequence = std::numeric_limits<uint32_t>::max() - 2;\n+            nSequence = MAX_BIP125_RBF_SEQUENCE;\n         } else if (rawTx.nLockTime) {\n             nSequence = std::numeric_limits<uint32_t>::max() - 1;\n         } else {\n@@ -372,7 +373,7 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n             int64_t seqNr64 = sequenceObj.get_int64();\n             if (seqNr64 < 0 || seqNr64 > std::numeric_limits<uint32_t>::max()) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, sequence number is out of range\");\n-            } else if (seqNr64 <= std::numeric_limits<uint32_t>::max() - 2 && request.params.size() > 3 && request.params[3].isFalse()) {\n+            } else if (seqNr64 <= MAX_BIP125_RBF_SEQUENCE && request.params.size() > 3 && request.params[3].isFalse()) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter combination: Sequence number contradicts optintorbf option\");\n             } else {\n                 nSequence = (uint32_t)seqNr64;"
      },
      {
        "sha": "b2706d09f66fb318d7f434426f090e4b5fa685f6",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b005bf21a7cabe827ef62f266c22adf2ee745b61/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b005bf21a7cabe827ef62f266c22adf2ee745b61/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=b005bf21a7cabe827ef62f266c22adf2ee745b61",
        "patch": "@@ -2685,9 +2685,10 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n                 // and in the spirit of \"smallest possible change from prior\n                 // behavior.\"\n                 bool rbf = coinControl ? coinControl->signalRbf : fWalletRbf;\n+                const uint32_t nSequence = rbf ? MAX_BIP125_RBF_SEQUENCE : (std::numeric_limits<unsigned int>::max() - 1);\n                 for (const auto& coin : setCoins)\n                     txNew.vin.push_back(CTxIn(coin.outpoint,CScript(),\n-                                              std::numeric_limits<unsigned int>::max() - (rbf ? 2 : 1)));\n+                                              nSequence));\n \n                 // Fill in dummy signatures for fee calculation.\n                 if (!DummySignTx(txNew, setCoins)) {"
      }
    ]
  },
  {
    "sha": "23b0fe34f526693985099d9160806d00d48a9ecd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyM2IwZmUzNGY1MjY2OTM5ODUwOTlkOTE2MDgwNmQwMGQ0OGE5ZWNk",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-02-03T19:14:02Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T23:14:34Z"
      },
      "message": "bitcoin-tx: rbfoptin: Avoid touching nSequence if the value is already opting in",
      "tree": {
        "sha": "6154d0b0291e512090a3edc647ebc0072469353a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6154d0b0291e512090a3edc647ebc0072469353a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23b0fe34f526693985099d9160806d00d48a9ecd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23b0fe34f526693985099d9160806d00d48a9ecd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/23b0fe34f526693985099d9160806d00d48a9ecd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23b0fe34f526693985099d9160806d00d48a9ecd/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b005bf21a7cabe827ef62f266c22adf2ee745b61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b005bf21a7cabe827ef62f266c22adf2ee745b61",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b005bf21a7cabe827ef62f266c22adf2ee745b61"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "367801dd787236bb53cc937c77a428383b2d1e55",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23b0fe34f526693985099d9160806d00d48a9ecd/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23b0fe34f526693985099d9160806d00d48a9ecd/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=23b0fe34f526693985099d9160806d00d48a9ecd",
        "patch": "@@ -216,7 +216,9 @@ static void MutateTxRBFOptIn(CMutableTransaction& tx, const std::string& strInId\n     int cnt = 0;\n     for (CTxIn& txin : tx.vin) {\n         if (strInIdx == \"\" || cnt == inIdx) {\n-            txin.nSequence = MAX_BIP125_RBF_SEQUENCE;\n+            if (txin.nSequence > MAX_BIP125_RBF_SEQUENCE) {\n+                txin.nSequence = MAX_BIP125_RBF_SEQUENCE;\n+            }\n         }\n         ++cnt;\n     }"
      }
    ]
  },
  {
    "sha": "9a5a1d7d452eff242be1bfe155a30c1f05b2d5a4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTVhMWQ3ZDQ1MmVmZjI0MmJlMWJmZTE1NWEzMGMxZjA1YjJkNWE0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-02-03T19:23:22Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-05T23:14:34Z"
      },
      "message": "RPC/rawtransaction: createrawtransaction: Check opt_into_rbf when provided with either value",
      "tree": {
        "sha": "227405115d3b6f542090b9d1d88ea78d1eedf42f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/227405115d3b6f542090b9d1d88ea78d1eedf42f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a5a1d7d452eff242be1bfe155a30c1f05b2d5a4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a5a1d7d452eff242be1bfe155a30c1f05b2d5a4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a5a1d7d452eff242be1bfe155a30c1f05b2d5a4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a5a1d7d452eff242be1bfe155a30c1f05b2d5a4/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "23b0fe34f526693985099d9160806d00d48a9ecd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23b0fe34f526693985099d9160806d00d48a9ecd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/23b0fe34f526693985099d9160806d00d48a9ecd"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "199d60b725f47142eed4b1f4937b31d75af5a3fe",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a5a1d7d452eff242be1bfe155a30c1f05b2d5a4/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a5a1d7d452eff242be1bfe155a30c1f05b2d5a4/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=9a5a1d7d452eff242be1bfe155a30c1f05b2d5a4",
        "patch": "@@ -198,6 +198,7 @@ libbitcoin_server_a_SOURCES = \\\n   noui.cpp \\\n   policy/fees.cpp \\\n   policy/policy.cpp \\\n+  policy/rbf.cpp \\\n   pow.cpp \\\n   rest.cpp \\\n   rpc/blockchain.cpp \\\n@@ -240,7 +241,6 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/rpcwallet.cpp \\\n   wallet/wallet.cpp \\\n   wallet/walletdb.cpp \\\n-  policy/rbf.cpp \\\n   $(BITCOIN_CORE_H)\n \n # crypto primitives library"
      },
      {
        "sha": "00ddd9d16fe2f636bf24ddc28fee6219fb720b75",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a5a1d7d452eff242be1bfe155a30c1f05b2d5a4/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a5a1d7d452eff242be1bfe155a30c1f05b2d5a4/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=9a5a1d7d452eff242be1bfe155a30c1f05b2d5a4",
        "patch": "@@ -316,7 +316,7 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n             \"      ,...\\n\"\n             \"    }\\n\"\n             \"3. locktime                  (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs\\n\"\n-            \"4. optintorbf                (boolean, optional, default=false) Allow this transaction to be replaced by a transaction with higher fees\\n\"\n+            \"4. optintorbf                (boolean, optional, default=false) Allow this transaction to be replaced by a transaction with higher fees. If provided, it is an error if explicit sequence numbers are incompatible.\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"transaction\\\"              (string) hex string of the transaction\\n\"\n \n@@ -373,8 +373,6 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n             int64_t seqNr64 = sequenceObj.get_int64();\n             if (seqNr64 < 0 || seqNr64 > std::numeric_limits<uint32_t>::max()) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, sequence number is out of range\");\n-            } else if (seqNr64 <= MAX_BIP125_RBF_SEQUENCE && request.params.size() > 3 && request.params[3].isFalse()) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter combination: Sequence number contradicts optintorbf option\");\n             } else {\n                 nSequence = (uint32_t)seqNr64;\n             }\n@@ -411,6 +409,10 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n         }\n     }\n \n+    if (request.params.size() > 3 && rbfOptIn != SignalsOptInRBF(rawTx)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter combination: Sequence number(s) contradict optintorbf option\");\n+    }\n+\n     return EncodeHexTx(rawTx);\n }\n "
      }
    ]
  }
]