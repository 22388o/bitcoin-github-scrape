fanquake,2021-06-30 01:30:45,"Concept ACK - if we've got these helpers for this, we might as well be using them.",https://github.com/bitcoin/bitcoin/pull/22363#issuecomment-871029889,871029889,
practicalswift,2021-06-30 07:48:47,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22363#issuecomment-871175881,871175881,
theStack,2021-07-02 12:51:53,"> Definite Concept ACK to reusing helper functions instead of creating scripts manually. I think we should add some unit tests to wallet_util.py, since it's not outside the realm of possibility for those util functions to have errors.\n\nAgree that unit tests are a good idea here! This way we can also check that the sanity checks in the helpers (i.e. for key/keyhash/scripthash lengths) work.\n",https://github.com/bitcoin/bitcoin/pull/22363#issuecomment-872974120,872974120,
0xB10C,2021-07-05 14:20:06,Concept ACK!,https://github.com/bitcoin/bitcoin/pull/22363#issuecomment-874150885,874150885,
rajarshimaitra,2021-07-06 06:54:01,tACK https://github.com/bitcoin/bitcoin/pull/22363/commits/905d672b743edf31531d095ffe800449eaffec69,https://github.com/bitcoin/bitcoin/pull/22363#issuecomment-874507912,874507912,
LarryRuane,2021-07-08 16:53:32,"tACK 905d672b743edf31531d095ffe800449eaffec69\n\nReview club meeting notes and IRC log: https://bitcoincore.reviews/22363\n\nThis PR has many simple ""substitution"" changes that follow the same pattern, and I wasn't confident that my attention span was sufficient to review all of them. So I made the following sort of change (in a semi-automated way) to the substitution changes in this PR (reins",https://github.com/bitcoin/bitcoin/pull/22363#issuecomment-876594293,876594293,
glozow,2021-07-01 10:47:51,"In d7d3cd4f367a41f5e79e96dc7efa1ea8d493c344 use script_util helpers for creating P2SH scripts\n\nnit: remove the unused import `test_framework.script.hash160`. You remove it later, but this commit fails the linter.",https://github.com/bitcoin/bitcoin/pull/22363#discussion_r662183467,662183467,test/functional/mempool_accept.py
theStack,2021-07-02 12:49:13,"Oops, my lazyness of never running the linter locally backfires ;) thanks for spotting out. Fixed.\n\n",https://github.com/bitcoin/bitcoin/pull/22363#discussion_r662988104,662988104,test/functional/mempool_accept.py
rajarshimaitra,2021-07-05 14:55:32,"`CScript` is already imported. So just  `script_to_p2sh_script(CScript([sc.OP_0]))` would work. \n\nSo can be done for `OP_0` if its imported in the list above. ",https://github.com/bitcoin/bitcoin/pull/22363#discussion_r663990893,663990893,test/functional/data/invalid_txs.py
theStack,2021-07-05 18:48:31,"Thanks for reviewing! Good point, got rid now of the redundant `import script as sc` and extended the list of OP_... imports accordingly, took also the chance to sort them. Should look cleaner now.",https://github.com/bitcoin/bitcoin/pull/22363#discussion_r664088832,664088832,test/functional/data/invalid_txs.py
rajarshimaitra,2021-07-06 06:53:47,Looks good now.. Thanks for considering. ,https://github.com/bitcoin/bitcoin/pull/22363#discussion_r664282535,664282535,test/functional/data/invalid_txs.py
0xB10C,2021-07-08 17:59:05,"Note: I first thought we are passing a public-key-hash to `key_to_p2wpkh_script()` as the variable is named `pkh`. Printing `pkh` shows that it is an uncompressed public key and the function docs say `pkh: the public key for P2PKH or P2WPKH spending` too. (nothing to do here)\n",https://github.com/bitcoin/bitcoin/pull/22363#discussion_r666408865,666408865,test/functional/feature_taproot.py
MarcoFalke,2021-07-09 08:50:37,"unrelated nit in 285a65ccfde2e811cfe01e916b998c02ee534a97:\n\nCould use `script_to_p2sh_script(p2wpkh_script)` to avoid duplication and to clarify that p2sh redeem script is equal to the scriptPubKey (OP_0 + witness program)?",https://github.com/bitcoin/bitcoin/pull/22363#discussion_r666785588,666785588,test/functional/test_framework/wallet_util.py
MarcoFalke,2021-07-09 09:03:05,"Unrelated comment in 905d672b743edf31531d095ffe800449eaffec69:\n\nThis is wrong. This is the *preimage* to the witness program. According to BIP 141:\n\n> ... 1-byte push opcode (for 0 to 16) followed by a data push between 2 and 40 bytes gets a new special meaning. The value of the first push is called the ""version byte"". The following byte vector pushed is called the ""witness program"". \n\",https://github.com/bitcoin/bitcoin/pull/22363#discussion_r666794261,666794261,test/functional/p2p_segwit.py
fanquake,2021-07-12 06:13:49,Being updated in #22429.,https://github.com/bitcoin/bitcoin/pull/22363#discussion_r667650675,667650675,test/functional/p2p_segwit.py
