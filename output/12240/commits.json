[
  {
    "sha": "7de1de7da497c53261ea3437e67ce9943b0eb939",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZGUxZGU3ZGE0OTdjNTMyNjFlYTM0MzdlNjdjZTk5NDNiMGViOTM5",
    "commit": {
      "author": {
        "name": "mryandao",
        "email": "mryandao@tutanota.com",
        "date": "2018-04-05T08:38:57Z"
      },
      "committer": {
        "name": "mryandao",
        "email": "mryandao@tutanota.com",
        "date": "2018-04-18T03:28:45Z"
      },
      "message": "Add new fee structure with all sub-fields denominated in BTC",
      "tree": {
        "sha": "7d39c44280cd3a3de9e10796de92a619e509d9ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7d39c44280cd3a3de9e10796de92a619e509d9ab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7de1de7da497c53261ea3437e67ce9943b0eb939",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7de1de7da497c53261ea3437e67ce9943b0eb939",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7de1de7da497c53261ea3437e67ce9943b0eb939",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7de1de7da497c53261ea3437e67ce9943b0eb939/comments",
    "author": {
      "login": "mryandao",
      "id": 23712808,
      "node_id": "MDQ6VXNlcjIzNzEyODA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/23712808?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mryandao",
      "html_url": "https://github.com/mryandao",
      "followers_url": "https://api.github.com/users/mryandao/followers",
      "following_url": "https://api.github.com/users/mryandao/following{/other_user}",
      "gists_url": "https://api.github.com/users/mryandao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mryandao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mryandao/subscriptions",
      "organizations_url": "https://api.github.com/users/mryandao/orgs",
      "repos_url": "https://api.github.com/users/mryandao/repos",
      "events_url": "https://api.github.com/users/mryandao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mryandao/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mryandao",
      "id": 23712808,
      "node_id": "MDQ6VXNlcjIzNzEyODA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/23712808?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mryandao",
      "html_url": "https://github.com/mryandao",
      "followers_url": "https://api.github.com/users/mryandao/followers",
      "following_url": "https://api.github.com/users/mryandao/following{/other_user}",
      "gists_url": "https://api.github.com/users/mryandao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mryandao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mryandao/subscriptions",
      "organizations_url": "https://api.github.com/users/mryandao/orgs",
      "repos_url": "https://api.github.com/users/mryandao/repos",
      "events_url": "https://api.github.com/users/mryandao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mryandao/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3a8a4dc4a130c6d1eeff3fb8e6d9688dda2f8d25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a8a4dc4a130c6d1eeff3fb8e6d9688dda2f8d25",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3a8a4dc4a130c6d1eeff3fb8e6d9688dda2f8d25"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 28,
      "deletions": 4
    },
    "files": [
      {
        "sha": "e190c7860960d274bb6d23c137f7e570f7892083",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7de1de7da497c53261ea3437e67ce9943b0eb939/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7de1de7da497c53261ea3437e67ce9943b0eb939/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=7de1de7da497c53261ea3437e67ce9943b0eb939",
        "patch": "@@ -70,6 +70,10 @@ RPC changes\n   /rest/block/ endpoints when in json mode. This is also included in `getblock`\n   (with verbosity=2), `listsinceblock`, `listtransactions`, and\n   `getrawtransaction` RPC commands.\n+- New `fees` field introduced in `getrawmempool`, `getmempoolancestors`, `getmempooldescendants` and\n+   `getmempoolentry` when verbosity is set to `true` with sub-fields `ancestor`, `base`, `modified`\n+   and `descendent` denominated in BTC. This new field deprecates previous fee fields, such as\n+   `fee`, `modifiedfee`, `ancestorfee` and `descendentfee`.\n \n External wallet files\n ---------------------"
      },
      {
        "sha": "7a8ca244eb83f2dc1543298bf14fc562be544e98",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 4,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7de1de7da497c53261ea3437e67ce9943b0eb939/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7de1de7da497c53261ea3437e67ce9943b0eb939/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=7de1de7da497c53261ea3437e67ce9943b0eb939",
        "patch": "@@ -360,17 +360,23 @@ UniValue getdifficulty(const JSONRPCRequest& request)\n std::string EntryDescriptionString()\n {\n     return \"    \\\"size\\\" : n,             (numeric) virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\\n\"\n-           \"    \\\"fee\\\" : n,              (numeric) transaction fee in \" + CURRENCY_UNIT + \"\\n\"\n-           \"    \\\"modifiedfee\\\" : n,      (numeric) transaction fee with fee deltas used for mining priority\\n\"\n+           \"    \\\"fee\\\" : n,              (numeric) transaction fee in \" + CURRENCY_UNIT + \" (DEPRECATED)\\n\"\n+           \"    \\\"modifiedfee\\\" : n,      (numeric) transaction fee with fee deltas used for mining priority (DEPRECATED)\\n\"\n            \"    \\\"time\\\" : n,             (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT\\n\"\n            \"    \\\"height\\\" : n,           (numeric) block height when transaction entered pool\\n\"\n            \"    \\\"descendantcount\\\" : n,  (numeric) number of in-mempool descendant transactions (including this one)\\n\"\n            \"    \\\"descendantsize\\\" : n,   (numeric) virtual transaction size of in-mempool descendants (including this one)\\n\"\n-           \"    \\\"descendantfees\\\" : n,   (numeric) modified fees (see above) of in-mempool descendants (including this one)\\n\"\n+           \"    \\\"descendantfees\\\" : n,   (numeric) modified fees (see above) of in-mempool descendants (including this one) (DEPRECATED)\\n\"\n            \"    \\\"ancestorcount\\\" : n,    (numeric) number of in-mempool ancestor transactions (including this one)\\n\"\n            \"    \\\"ancestorsize\\\" : n,     (numeric) virtual transaction size of in-mempool ancestors (including this one)\\n\"\n-           \"    \\\"ancestorfees\\\" : n,     (numeric) modified fees (see above) of in-mempool ancestors (including this one)\\n\"\n+           \"    \\\"ancestorfees\\\" : n,     (numeric) modified fees (see above) of in-mempool ancestors (including this one) (DEPRECATED)\\n\"\n            \"    \\\"wtxid\\\" : hash,         (string) hash of serialized transaction, including witness data\\n\"\n+           \"    \\\"fees\\\" : {\\n\"\n+           \"        \\\"base\\\" : n,         (numeric) transaction fee in \" + CURRENCY_UNIT + \"\\n\"\n+           \"        \\\"modified\\\" : n,     (numeric) transaction fee with fee deltas used for mining priority in \" + CURRENCY_UNIT + \"\\n\"\n+           \"        \\\"ancestor\\\" : n,     (numeric) modified fees (see above) of in-mempool ancestors (including this one) in \" + CURRENCY_UNIT + \"\\n\"\n+           \"        \\\"descendent\\\" : n,   (numeric) number of in-mempool ancestor transactions (including this one) in \" + CURRENCY_UNIT + \"\\n\"\n+           \"    }\\n\"\n            \"    \\\"depends\\\" : [           (array) unconfirmed transactions used as inputs for this transaction\\n\"\n            \"        \\\"transactionid\\\",    (string) parent transaction id\\n\"\n            \"       ... ]\\n\"\n@@ -383,6 +389,13 @@ void entryToJSON(UniValue &info, const CTxMemPoolEntry &e)\n {\n     AssertLockHeld(mempool.cs);\n \n+    UniValue fees(UniValue::VOBJ);\n+    fees.pushKV(\"base\", ValueFromAmount(e.GetFee()));\n+    fees.pushKV(\"modified\", ValueFromAmount(e.GetModifiedFee()));\n+    fees.pushKV(\"ancestor\", ValueFromAmount(e.GetModFeesWithAncestors()));\n+    fees.pushKV(\"descendant\", ValueFromAmount(e.GetModFeesWithDescendants()));\n+    info.pushKV(\"fees\", fees);\n+\n     info.pushKV(\"size\", (int)e.GetTxSize());\n     info.pushKV(\"fee\", ValueFromAmount(e.GetFee()));\n     info.pushKV(\"modifiedfee\", ValueFromAmount(e.GetModifiedFee()));"
      },
      {
        "sha": "79cf159f43a7eaa56ac6857d1269573d89170d0f",
        "filename": "test/functional/mempool_packages.py",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7de1de7da497c53261ea3437e67ce9943b0eb939/test/functional/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7de1de7da497c53261ea3437e67ce9943b0eb939/test/functional/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_packages.py?ref=7de1de7da497c53261ea3437e67ce9943b0eb939",
        "patch": "@@ -70,7 +70,10 @@ def run_test(self):\n             assert_equal(mempool[x]['descendantcount'], descendant_count)\n             descendant_fees += mempool[x]['fee']\n             assert_equal(mempool[x]['modifiedfee'], mempool[x]['fee'])\n+            assert_equal(mempool[x]['fees']['base'], mempool[x]['fee'])\n+            assert_equal(mempool[x]['fees']['modified'], mempool[x]['modifiedfee'])\n             assert_equal(mempool[x]['descendantfees'], descendant_fees * COIN)\n+            assert_equal(mempool[x]['fees']['descendant'], descendant_fees)\n             descendant_size += mempool[x]['size']\n             assert_equal(mempool[x]['descendantsize'], descendant_size)\n             descendant_count += 1\n@@ -132,6 +135,7 @@ def run_test(self):\n         ancestor_fees = 0\n         for x in chain:\n             ancestor_fees += mempool[x]['fee']\n+            assert_equal(mempool[x]['fees']['ancestor'], ancestor_fees + Decimal('0.00001'))\n             assert_equal(mempool[x]['ancestorfees'], ancestor_fees * COIN + 1000)\n \n         # Undo the prioritisetransaction for later tests\n@@ -145,6 +149,7 @@ def run_test(self):\n         descendant_fees = 0\n         for x in reversed(chain):\n             descendant_fees += mempool[x]['fee']\n+            assert_equal(mempool[x]['fees']['descendant'], descendant_fees + Decimal('0.00001'))\n             assert_equal(mempool[x]['descendantfees'], descendant_fees * COIN + 1000)\n \n         # Adding one more transaction on to the chain should fail.\n@@ -170,7 +175,9 @@ def run_test(self):\n             descendant_fees += mempool[x]['fee']\n             if (x == chain[-1]):\n                 assert_equal(mempool[x]['modifiedfee'], mempool[x]['fee']+satoshi_round(0.00002))\n+                assert_equal(mempool[x]['fees']['modified'], mempool[x]['fee']+satoshi_round(0.00002))\n             assert_equal(mempool[x]['descendantfees'], descendant_fees * COIN + 2000)\n+            assert_equal(mempool[x]['fees']['descendant'], descendant_fees+satoshi_round(0.00002))\n \n         # TODO: check that node1's mempool is as expected\n "
      }
    ]
  }
]