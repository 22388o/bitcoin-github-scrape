[
  {
    "sha": "3b35e4896b5b8be9ffd6dacddb081f69a5b77903",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjM1ZTQ4OTZiNWI4YmU5ZmZkNmRhY2RkYjA4MWY2OWE1Yjc3OTAz",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-28T20:04:07Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-28T20:04:07Z"
      },
      "message": "[RPC] add feerate option to fundrawtransaction",
      "tree": {
        "sha": "c781ac302b21a99769e14ba5b5ec7288c84daf8d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c781ac302b21a99769e14ba5b5ec7288c84daf8d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b35e4896b5b8be9ffd6dacddb081f69a5b77903",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXImzCAAoJECnUvLZBb1PsvSgQALvR6iCCCaltBnJ4OVIh4MTs\np/AG7iV+xavQLXoUxDZw7v4i2aGQPz5J+8PCq/qCw3poLEVbPI/pzIe1jlrcbN9b\nJ8HRpzI6BfILAh5scllzt4nXcctLLERGIB0uB0FsOniClgg4UsWjzQ1LcuChJPPs\nNm/W5CuT33CIkT9FVyftjF4bwyP9tl4TQuuBAM9nW+cZFIwdBkbUHgCgqg4t3w/0\nDCRYRfN+FGCxcoVEUEJcRfYS/sJzVO0bgeQaNAnoqtdw3FKWeVrFjcXjpzSsf8Zd\n1OdMj6FQLW+6B0daUU5pogXaA4R0a/kSoMNCpryJhCJfUwZR7XRfyslXoo2tniEW\nybYvGWMA5CYyWV931B5uoq6KNn/Sv5Yr0ONeiK6dLhsHdQVQ73AbLBaMJ1eYwTcP\nN8adYzKdUD67c0uH6swFBM+6knaCFmdt+N827ueBwHvV3GH4Da+BZTl0nmMAG5Uo\nWdo7bXh3Od03mf7BwBJ3H0Dj+HvaeeGThIb2oxMPICf/d5YAS4XzYFVpN8T20DPJ\n9CiqqQ8+Kdbin/TsbYgueRxcqe+zPEGUh2bjwomXuv7IFRtzNWg0+UW0m2BbgQo+\nXU3cqplqkTd2RD3G2TvI+xLdP7UVyMammSzjBeXx6Jbn4pW7Zqmh4vtDIMaclR/w\nS45Uzv7swcXOAI20A478\n=VJQy\n-----END PGP SIGNATURE-----",
        "payload": "tree c781ac302b21a99769e14ba5b5ec7288c84daf8d\nparent a9c8b744e8875785ff9a3768df3517b2d9ed7a36\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1461873847 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1461873847 +0200\n\n[RPC] add feerate option to fundrawtransaction\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b35e4896b5b8be9ffd6dacddb081f69a5b77903",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b35e4896b5b8be9ffd6dacddb081f69a5b77903",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b35e4896b5b8be9ffd6dacddb081f69a5b77903/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9c8b744e8875785ff9a3768df3517b2d9ed7a36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9c8b744e8875785ff9a3768df3517b2d9ed7a36",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9c8b744e8875785ff9a3768df3517b2d9ed7a36"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 26,
      "deletions": 6
    },
    "files": [
      {
        "sha": "f76fe90ef4e79bdad7babbb79ddc9c1828c663f7",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b35e4896b5b8be9ffd6dacddb081f69a5b77903/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b35e4896b5b8be9ffd6dacddb081f69a5b77903/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=3b35e4896b5b8be9ffd6dacddb081f69a5b77903",
        "patch": "@@ -677,6 +677,14 @@ def run_test(self):\n         assert(signedtx[\"complete\"])\n         self.nodes[0].sendrawtransaction(signedtx[\"hex\"])\n \n+        inputs = []\n+        outputs = {self.nodes[2].getnewaddress() : 1}\n+        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n+        result = self.nodes[3].fundrawtransaction(rawtx, )\n+        result2 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2000})\n+        result3 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 10000})\n+        assert_equal(result['fee']*2, result2['fee'])\n+        assert_equal(result['fee']*10, result3['fee'])\n \n if __name__ == '__main__':\n     RawTransactionsTest().main()"
      },
      {
        "sha": "6129397bc8f5d991fe1c6a2ce9d36ca301630101",
        "filename": "src/coincontrol.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b35e4896b5b8be9ffd6dacddb081f69a5b77903/src/coincontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b35e4896b5b8be9ffd6dacddb081f69a5b77903/src/coincontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coincontrol.h?ref=3b35e4896b5b8be9ffd6dacddb081f69a5b77903",
        "patch": "@@ -18,6 +18,8 @@ class CCoinControl\n     bool fAllowWatchOnly;\n     //! Minimum absolute fee (not per kilobyte)\n     CAmount nMinimumTotalFee;\n+    //! Feerate to use (0 = estimate fee with payTxFee fallback)\n+    CFeeRate nFeeRate;\n \n     CCoinControl()\n     {\n@@ -31,6 +33,7 @@ class CCoinControl\n         fAllowWatchOnly = false;\n         setSelected.clear();\n         nMinimumTotalFee = 0;\n+        nFeeRate = CFeeRate(0);\n     }\n \n     bool HasSelected() const"
      },
      {
        "sha": "b14d748b3917e8b11846ac8c9b7f27a2601b715d",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b35e4896b5b8be9ffd6dacddb081f69a5b77903/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b35e4896b5b8be9ffd6dacddb081f69a5b77903/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=3b35e4896b5b8be9ffd6dacddb081f69a5b77903",
        "patch": "@@ -2458,6 +2458,7 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n                             \"     \\\"changePosition\\\"    (numeric, optional, default random) The index of the change output\\n\"\n                             \"     \\\"includeWatching\\\"   (boolean, optional, default false) Also select inputs which are watch only\\n\"\n                             \"     \\\"lockUnspents\\\"      (boolean, optional, default false) Lock selected unspent outputs\\n\"\n+                            \"     \\\"feeRate\\\"           (numeric, optional, default 0=estimate) Set a specific feerate (fee per KB)\\n\"\n                             \"   }\\n\"\n                             \"                         for backward compatibility: passing in a true instead of an object will result in {\\\"includeWatching\\\":true}\\n\"\n                             \"\\nResult:\\n\"\n@@ -2484,6 +2485,7 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     int changePosition = -1;\n     bool includeWatching = false;\n     bool lockUnspents = false;\n+    CFeeRate feeRate = CFeeRate(0);\n \n     if (params.size() > 1) {\n       if (params[1].type() == UniValue::VBOOL) {\n@@ -2495,7 +2497,7 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n \n         UniValue options = params[1];\n \n-        RPCTypeCheckObj(options, boost::assign::map_list_of(\"changeAddress\", UniValue::VSTR)(\"changePosition\", UniValue::VNUM)(\"includeWatching\", UniValue::VBOOL)(\"lockUnspents\", UniValue::VBOOL), true, true);\n+        RPCTypeCheckObj(options, boost::assign::map_list_of(\"changeAddress\", UniValue::VSTR)(\"changePosition\", UniValue::VNUM)(\"includeWatching\", UniValue::VBOOL)(\"lockUnspents\", UniValue::VBOOL)(\"feeRate\", UniValue::VNUM), true, true);\n \n         if (options.exists(\"changeAddress\")) {\n             CBitcoinAddress address(options[\"changeAddress\"].get_str());\n@@ -2514,6 +2516,9 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n \n         if (options.exists(\"lockUnspents\"))\n             lockUnspents = options[\"lockUnspents\"].get_bool();\n+\n+        if (options.exists(\"feeRate\"))\n+            feeRate = CFeeRate(options[\"feeRate\"].get_real());\n       }\n     }\n \n@@ -2529,16 +2534,16 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"changePosition out of bounds\");\n \n     CMutableTransaction tx(origTx);\n-    CAmount nFee;\n+    CAmount nFeeOut;\n     string strFailReason;\n \n-    if(!pwalletMain->FundTransaction(tx, nFee, changePosition, strFailReason, includeWatching, lockUnspents, changeAddress))\n+    if(!pwalletMain->FundTransaction(tx, nFeeOut, feeRate, changePosition, strFailReason, includeWatching, lockUnspents, changeAddress))\n         throw JSONRPCError(RPC_INTERNAL_ERROR, strFailReason);\n \n     UniValue result(UniValue::VOBJ);\n     result.push_back(Pair(\"hex\", EncodeHexTx(tx)));\n     result.push_back(Pair(\"changepos\", changePosition));\n-    result.push_back(Pair(\"fee\", ValueFromAmount(nFee)));\n+    result.push_back(Pair(\"fee\", ValueFromAmount(nFeeOut)));\n \n     return result;\n }"
      },
      {
        "sha": "6b5e3ca7f59949eaf6552f413180b3ca80f5cb3d",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b35e4896b5b8be9ffd6dacddb081f69a5b77903/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b35e4896b5b8be9ffd6dacddb081f69a5b77903/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=3b35e4896b5b8be9ffd6dacddb081f69a5b77903",
        "patch": "@@ -1918,7 +1918,7 @@ bool CWallet::SelectCoins(const vector<COutput>& vAvailableCoins, const CAmount&\n     return res;\n }\n \n-bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange)\n+bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange)\n {\n     vector<CRecipient> vecSend;\n \n@@ -1933,6 +1933,8 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nC\n     coinControl.destChange = destChange;\n     coinControl.fAllowOtherInputs = true;\n     coinControl.fAllowWatchOnly = includeWatching;\n+    coinControl.nFeeRate = specificFeeRate;\n+\n     BOOST_FOREACH(const CTxIn& txin, tx.vin)\n         coinControl.Select(txin.prevout);\n \n@@ -2242,6 +2244,8 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 if (coinControl && nFeeNeeded > 0 && coinControl->nMinimumTotalFee > nFeeNeeded) {\n                     nFeeNeeded = coinControl->nMinimumTotalFee;\n                 }\n+                if (coinControl && coinControl->nFeeRate > CFeeRate(0))\n+                    nFeeNeeded = coinControl->nFeeRate.GetFee(nBytes);\n \n                 // If we made it here and we aren't even able to meet the relay fee on the next pass, give up\n                 // because we must be at the maximum allowed fee."
      },
      {
        "sha": "7b5168975ce112421de23f7ed87e2cc45c87832c",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b35e4896b5b8be9ffd6dacddb081f69a5b77903/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b35e4896b5b8be9ffd6dacddb081f69a5b77903/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=3b35e4896b5b8be9ffd6dacddb081f69a5b77903",
        "patch": "@@ -740,7 +740,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      * Insert additional inputs into the transaction by\n      * calling CreateTransaction();\n      */\n-    bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange = CNoDestination());\n+    bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange = CNoDestination());\n \n     /**\n      * Create a new transaction paying the recipients with a set of coins"
      }
    ]
  },
  {
    "sha": "04eaa9095813b854c4299027c595fb9ebaf6f934",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNGVhYTkwOTU4MTNiODU0YzQyOTkwMjdjNTk1ZmI5ZWJhZjZmOTM0",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-05-06T09:01:50Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-05-06T09:01:50Z"
      },
      "message": "Add more clear interface for CoinControl.h regarding individual feerate",
      "tree": {
        "sha": "cdeec105bc51a76f2d265aab08894ccb67d73097",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cdeec105bc51a76f2d265aab08894ccb67d73097"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04eaa9095813b854c4299027c595fb9ebaf6f934",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXLF2XAAoJECnUvLZBb1PsHh0QALPBnk5EXghMm2ocbJduINnl\nl/JQRk29u+7aG3A6A/qMmpJVotcRaKHK5tvWGTwhcpi3x9dGoxw74o+JbanftpKk\nLjhTlkpXBRS881tQvWUkWqDQvzyAGom4rReIJbG15pw69smHjr5/TDq42VXpOVRl\nurEYP7S24l1HcG8Xw9zVBfq0vUBvl3UYfvmsqpF0xC1EQlZrPxyC6vM+54mipR3Z\nlssPR9OYd3zgrakhrlzYrKsCUzIkl3nniAG3f+uZwZnRLpwT+oQdXGyRDSbi6/li\nFazg4aFsUryLqNPsZKAjGQaWsqkX/d4G63kEoXc84d2AHHkKtjWHbsPdCj1E+fxH\nf0PopthzrB6RsbW4ovjaCn3M9oKSrzauLM163IGaUwFG0MN3hdADsX5pz2nJd/yC\nhLArZsRoZgsWorcmUtURJDsCGHWwgSoNnOcmtRqGZDUddsDomD1696NXQ0YLca6X\n47+DbgYzjg2/SDIuUjkF9wvVnKy4IkfXbO594g9/0hzcYOneI/aIa3QQ/tnNlHBP\nDUBN6yFcw16r6hZ5NxLCseTSJn+YCw/zOqx8+taulDPi6d2/Y7GAG6NHLB7Lm+68\nrK1lmNeLyvhiSvdffY52TWI2vQj1GovElLb82AIXlfcFKtqOM0gTRWs+LIum82zF\nqNRE3anW8/wL6Jl8Xixj\n=+9TX\n-----END PGP SIGNATURE-----",
        "payload": "tree cdeec105bc51a76f2d265aab08894ccb67d73097\nparent 3b35e4896b5b8be9ffd6dacddb081f69a5b77903\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1462525310 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1462525310 +0200\n\nAdd more clear interface for CoinControl.h regarding individual feerate\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04eaa9095813b854c4299027c595fb9ebaf6f934",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/04eaa9095813b854c4299027c595fb9ebaf6f934",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04eaa9095813b854c4299027c595fb9ebaf6f934/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3b35e4896b5b8be9ffd6dacddb081f69a5b77903",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b35e4896b5b8be9ffd6dacddb081f69a5b77903",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3b35e4896b5b8be9ffd6dacddb081f69a5b77903"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 13,
      "deletions": 5
    },
    "files": [
      {
        "sha": "e33adc4d2b00c480555edac9d590167e2ef2f075",
        "filename": "src/coincontrol.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04eaa9095813b854c4299027c595fb9ebaf6f934/src/coincontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04eaa9095813b854c4299027c595fb9ebaf6f934/src/coincontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coincontrol.h?ref=04eaa9095813b854c4299027c595fb9ebaf6f934",
        "patch": "@@ -18,7 +18,9 @@ class CCoinControl\n     bool fAllowWatchOnly;\n     //! Minimum absolute fee (not per kilobyte)\n     CAmount nMinimumTotalFee;\n-    //! Feerate to use (0 = estimate fee with payTxFee fallback)\n+    //! Override estimated feerate\n+    bool fOverrideFeeRate;\n+    //! Feerate to use if overrideFeeRate is true\n     CFeeRate nFeeRate;\n \n     CCoinControl()\n@@ -34,6 +36,7 @@ class CCoinControl\n         setSelected.clear();\n         nMinimumTotalFee = 0;\n         nFeeRate = CFeeRate(0);\n+        fOverrideFeeRate = false;\n     }\n \n     bool HasSelected() const"
      },
      {
        "sha": "933cd1e80752d81ad8e44a5ac2596bbbaafdc409",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04eaa9095813b854c4299027c595fb9ebaf6f934/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04eaa9095813b854c4299027c595fb9ebaf6f934/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=04eaa9095813b854c4299027c595fb9ebaf6f934",
        "patch": "@@ -2486,6 +2486,7 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     bool includeWatching = false;\n     bool lockUnspents = false;\n     CFeeRate feeRate = CFeeRate(0);\n+    bool overrideEstimatedFeerate = false;\n \n     if (params.size() > 1) {\n       if (params[1].type() == UniValue::VBOOL) {\n@@ -2518,7 +2519,10 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n             lockUnspents = options[\"lockUnspents\"].get_bool();\n \n         if (options.exists(\"feeRate\"))\n+        {\n             feeRate = CFeeRate(options[\"feeRate\"].get_real());\n+            overrideEstimatedFeerate = true;\n+        }\n       }\n     }\n \n@@ -2537,7 +2541,7 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     CAmount nFeeOut;\n     string strFailReason;\n \n-    if(!pwalletMain->FundTransaction(tx, nFeeOut, feeRate, changePosition, strFailReason, includeWatching, lockUnspents, changeAddress))\n+    if(!pwalletMain->FundTransaction(tx, nFeeOut, overrideEstimatedFeerate, feeRate, changePosition, strFailReason, includeWatching, lockUnspents, changeAddress))\n         throw JSONRPCError(RPC_INTERNAL_ERROR, strFailReason);\n \n     UniValue result(UniValue::VOBJ);"
      },
      {
        "sha": "96c5c416aa863a4f42e105f1a4422d04f5df05fd",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04eaa9095813b854c4299027c595fb9ebaf6f934/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04eaa9095813b854c4299027c595fb9ebaf6f934/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=04eaa9095813b854c4299027c595fb9ebaf6f934",
        "patch": "@@ -1918,7 +1918,7 @@ bool CWallet::SelectCoins(const vector<COutput>& vAvailableCoins, const CAmount&\n     return res;\n }\n \n-bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange)\n+bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange)\n {\n     vector<CRecipient> vecSend;\n \n@@ -1933,6 +1933,7 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, const C\n     coinControl.destChange = destChange;\n     coinControl.fAllowOtherInputs = true;\n     coinControl.fAllowWatchOnly = includeWatching;\n+    coinControl.fOverrideFeeRate = overrideEstimatedFeeRate;\n     coinControl.nFeeRate = specificFeeRate;\n \n     BOOST_FOREACH(const CTxIn& txin, tx.vin)\n@@ -2244,7 +2245,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 if (coinControl && nFeeNeeded > 0 && coinControl->nMinimumTotalFee > nFeeNeeded) {\n                     nFeeNeeded = coinControl->nMinimumTotalFee;\n                 }\n-                if (coinControl && coinControl->nFeeRate > CFeeRate(0))\n+                if (coinControl && coinControl->fOverrideFeeRate)\n                     nFeeNeeded = coinControl->nFeeRate.GetFee(nBytes);\n \n                 // If we made it here and we aren't even able to meet the relay fee on the next pass, give up"
      },
      {
        "sha": "7a9e306f6fe0a62a826fba5d729becbad14cb977",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04eaa9095813b854c4299027c595fb9ebaf6f934/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04eaa9095813b854c4299027c595fb9ebaf6f934/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=04eaa9095813b854c4299027c595fb9ebaf6f934",
        "patch": "@@ -740,7 +740,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      * Insert additional inputs into the transaction by\n      * calling CreateTransaction();\n      */\n-    bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange = CNoDestination());\n+    bool FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, bool overrideEstimatedFeeRate, const CFeeRate& specificFeeRate, int& nChangePosInOut, std::string& strFailReason, bool includeWatching, bool lockUnspents, const CTxDestination& destChange = CNoDestination());\n \n     /**\n      * Create a new transaction paying the recipients with a set of coins"
      }
    ]
  }
]