MarcoFalke,2020-05-19 13:10:29,"Concept ACK, but before merge we should check that there are no warnings. This includes warnings in headers of third-party libraries. Boost and Qt have a good track record of producing warnings.",https://github.com/bitcoin/bitcoin/pull/19015#issuecomment-630806542,630806542,
hebasto,2020-05-19 16:18:25,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/19015#issuecomment-630926991,630926991,
DrahtBot,2020-05-22 01:34:53,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18857 (build: avoid repetitions when enabling warnings in configure.ac by vasild)\n\nIf you consider this pull request im",https://github.com/bitcoin/bitcoin/pull/19015#issuecomment-632429922,632429922,
hebasto,2020-06-04 16:03:01,"@practicalswift Why this PR does not include changes to get rid of new warnings?\n\nmaster (39afe5b1c68c5979b2ef2f03b60ec6a57901328f) + this PR:\n```\n$ make -j 9 > /dev/null \nscript/bitcoinconsensus.cpp:50:9: warning: unused member function 'GetType' [-Wunused-member-function]\n    int GetType() const { return m_type; }\n        ^\n1 warning generated.\nindex/blockfilterindex.cpp:54:5: ",https://github.com/bitcoin/bitcoin/pull/19015#issuecomment-638951156,638951156,
practicalswift,2020-06-05 07:35:09,@hebasto Thanks for testing! I wanted to keep this PR build-system only to keep review simple. Feel free to tackle the warnings in a separate PR if you want :),https://github.com/bitcoin/bitcoin/pull/19015#issuecomment-639311573,639311573,
practicalswift,2020-06-07 10:49:40,"@MarcoFalke I don't think this one needs rebase - anything else that you had in mind with the ""waiting for author"" label? :)",https://github.com/bitcoin/bitcoin/pull/19015#issuecomment-640196694,640196694,
MarcoFalke,2020-06-07 10:55:11,"`-Wunreachable-code-loop-increment` has been merged  (silent merge conflict), so it needs to be removed (with or without a rebase)",https://github.com/bitcoin/bitcoin/pull/19015#issuecomment-640197598,640197598,
practicalswift,2020-06-07 19:40:46,"@MarcoFalke Oh, thanks for clarifying! Now fixed :)",https://github.com/bitcoin/bitcoin/pull/19015#issuecomment-640269186,640269186,
practicalswift,2020-06-08 14:44:27,The Travis TSan job failure is unrelated but I'm unable to re-run the job :),https://github.com/bitcoin/bitcoin/pull/19015#issuecomment-640674823,640674823,
MarcoFalke,2020-06-08 14:53:44,Another rebase would make it rerun,https://github.com/bitcoin/bitcoin/pull/19015#issuecomment-640680335,640680335,
fanquake,2020-08-10 11:17:29,"Concept ACK\n\n> Thanks for testing! I wanted to keep this PR build-system only to keep review simple. Feel free to tackle the warnings in a separate PR if you want :)\n\nThere's not really a rush to do this, and it's unlikely this will be merged while it introduces any new (presumably easy to fix?) warnings. So if we're going to turn new diagnostics on, let's just take care of any warnings no",https://github.com/bitcoin/bitcoin/pull/19015#issuecomment-671296547,671296547,
practicalswift,2020-08-11 09:05:59,"@fanquake Thanks for testing, and your feedback makes sense: I'll adjust accordingly. I don't have any macOS machine to test on -- would you mind sharing the results of `make 2>&1 | grep ""warning: "" | sort | uniq -c`? :)",https://github.com/bitcoin/bitcoin/pull/19015#issuecomment-671826681,671826681,
fanquake,2020-08-11 11:52:53,"> I don't have any macOS machine to test on\n\nYou should just be able to just check the [Travis output](https://travis-ci.org/github/bitcoin/bitcoin/jobs/696082770#L1594):\n```bash\nMaking install in src\n< snip >\n  CXX      libbitcoin_server_a-init.o\nIn file included from blockencodings.cpp:13:\nIn file included from ./txmempool.h:26:\nIn file included from /usr/local/include/boost/mu",https://github.com/bitcoin/bitcoin/pull/19015#issuecomment-671899761,671899761,
practicalswift,2020-08-11 12:10:57,"> > I don't have any macOS machine to test on\n> \n> You should just be able to just check the [Travis output](https://travis-ci.org/github/bitcoin/bitcoin/jobs/696082770#L1594):\n\nOh, of course! Thanks! :)\n\nI've now updated the PR to only enable `-Wduplicated-branches`, `-Wduplicated-cond`, `-Wlogical-op` and `-Woverloaded-virtual`. None of these should warn on current `master`.\n\nSho",https://github.com/bitcoin/bitcoin/pull/19015#issuecomment-671907733,671907733,
practicalswift,2020-09-08 04:57:15,"A post-merge success story: only 21 days after merge `-Wlogical-op` caught the first bug in the form of #19912 :)\n\n```\nwallet/scriptpubkeyman.cpp:455:55: warning: logical ‘and’ applied to non-boolean constant [-Wlogical-op]\n  455 |     if (m_storage.CanSupportFeature(FEATURE_HD_SPLIT) && CHDChain::VERSION_HD_CHAIN_SPLIT) {\n      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~",https://github.com/bitcoin/bitcoin/pull/19015#issuecomment-688618488,688618488,
