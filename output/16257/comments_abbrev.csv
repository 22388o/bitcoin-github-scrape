promag,2019-06-21 00:42:57,"Also affects `fundrawtransaction`. Despite the fact that these are low level calls and the client can also discard high fees, I guess it's ok to be on the safe side.\n\nDeserves a small release note like\n\n> walletcreatefundedpsbt and fundrawtransaction now fail to create transactions with a resulting fee greater then -maxtxfee.\n\nConcept ACK.",https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-504247510,504247510,
Sjors,2019-06-21 01:45:34,"In additional to small transactions with a fat fingered fee rate, there's also an issue with extremely large transactions, which silently get their fee rate reduced. I didn't check if this PR fixes that as well, but I would assume so.\n\nSee also #16192 and #16192.",https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-504257828,504257828,
Sjors,2019-06-21 01:49:24,Full list of transactions that pay exactly 0.1 BTC in fees: https://blockchair.com/bitcoin/transactions?q=fee(10000000)# (there could be other wallets doing that of course),https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-504258503,504258503,
practicalswift,2019-06-21 06:28:04,Concept ACK: user safety first!,https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-504307355,504307355,
gertjaap,2019-06-24 07:23:04,"If aborting above `maxtxfee` is the desired behavior, then this PR should be merged in stead of #16192 because it catches that situation too. ",https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-504891120,504891120,
achow101,2019-06-27 19:26:40,"Are we certain that this does not affect the other methods of transaction creation (i.e. `CreateTransaction`)? Are there tests for absurdly high fees in regular wallet transactions, and if not, could you add some?",https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-506479056,506479056,
Sjors,2019-06-27 19:52:11,"One specific case this prevents is when a user sets `feeRate: 1` (thinking it's satoshi per byte). A 1 SegWit input to 1 output transaction is 110 vbytes or 0.11 kilobyte. At 1 BTC per kilobyte the fee for that transaction would be 0.11 BTC which is just above `-maxtxfee`.\n\n@achow101 `CreateTransaction` is called by:\n* `CreateRateBumpTransaction`\n* `sendtoaddress` (via `SendMoney`)\n* `se",https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-506486560,506486560,
jonasschnelli,2019-06-27 20:01:44,"1) in coin control, absurd fees would no longer be capt to maxtxfee (which probably is okay, just that we are aware). You can't send from the GUI with fees > maxfee, but you currently can play with absurde fees in coin-control (I don't think this makses sense).\n\n2) There is a comment in walletmodel.cpp that needs overhaul:\n```\n        // reject absurdly high fee. (This can never happen bec",https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-506489648,506489648,
Sjors,2019-06-27 23:45:15,"Added release note and test for `fundrawtransaction`, sorry for breaking ACKs. Regarding @jonasschnelli's points:\n1. I think allowing this ""playing"" is OK. If someone encounters the error, they can google it and find out about the `-maxtxfee` setting. If we simply make it impossible, they won't know what to google for. Anyway, in practice it's unlikely to matter: it's way more difficult to make ",https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-506549566,506549566,
kallewoof,2019-06-28 02:16:14,"Concept ACK\n\nutACK 734c00d",https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-506574333,506574333,
DrahtBot,2019-06-28 04:40:40,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16293](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16293.html) (test: Make test cases separate functions by",https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-506597566,506597566,
promag,2019-06-29 00:36:16,"@jonasschnelli not sure if I understand your review, it's still possible to set a high fee rate that causes the fee capping effectively reducing the fee rate. I think this PR should also change the GUI behaviour, or is there a reason to have them different?\n\nEdit: my bad, bitcoin-qt wasn't compiled because of other changes I had.\n\nIt would be nice to have the same error in the GUI?\n\n![",https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-506912184,506912184,
Sjors,2019-06-29 02:53:11,"I moved the check from RPC to the wallet.\n\nOn a related note, I have in a [work in progress branch](https://github.com/Sjors/bitcoin/tree/2019/06/TransactionError) which replaces all `_failReason`  occurrences with `TransactionError`.\n\n@promag I'd rather not change the GUI messaging here.",https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-506920841,506920841,
promag,2019-06-29 22:27:59,"> @promag I'd rather not change the GUI messaging here.\n\n@Sjors fair enough.\n\nIs it me or RPC `bumpfee` (thru `feebumper::CreateRateBumpTransaction`) doesn't check for `-maxtxfee`?",https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-506991564,506991564,
MarcoFalke,2019-07-01 14:40:15,@promag Looks like it. At the very least we should have a test for this.,https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-507293412,507293412,
Sjors,2019-07-01 14:52:34,I made a note to look into `bumpfee` and either add a test or fix the issue (happy to review if someone else does it first).,https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-507298266,507298266,
fanquake,2019-07-25 03:21:26,Being backported in #16414.,https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-514879590,514879590,
Sjors,2019-08-17 12:14:23,0.17 backport in #16639,https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-522231769,522231769,
gmaxwell,2020-01-26 11:18:03,"oy.  this interface takes feerates in btc but most ecosystem stuff takes feerates in satoshis.  :(  So not as likely a ""fat finger"" as just genuine misunderstanding about the interface.",https://github.com/bitcoin/bitcoin/pull/16257#issuecomment-578492101,578492101,
meshcollider,2019-06-27 22:12:47,nit: indentation,https://github.com/bitcoin/bitcoin/pull/16257#discussion_r298390186,298390186,src/wallet/rpcwallet.cpp
MarcoFalke,2019-06-28 13:35:34,style-nit: Can keep the trailing (optional) comma in the initializer list to reduce the diff,https://github.com/bitcoin/bitcoin/pull/16257#discussion_r298597323,298597323,src/util/fees.cpp
MarcoFalke,2019-06-28 13:54:23,Could rename this file to `release-notes-0.18.1-16257.md` to indicate that it is not meant for the master branch release notes?,https://github.com/bitcoin/bitcoin/pull/16257#discussion_r298604766,298604766,doc/release-notes-16257.md
MarcoFalke,2019-06-28 14:47:56,I don't like removing this belt-and-suspenders check and making it the only check.,https://github.com/bitcoin/bitcoin/pull/16257#discussion_r298626430,298626430,src/qt/walletmodel.cpp
MarcoFalke,2019-06-28 14:50:28,"I don't mind having a belt-and-suspenders check in the rpc code (similar to the GUI code), but ultimately the check should happen in the wallet.\n\nIn fact the wallet already does this check in a hacky way (`Transaction too large`...). So I'd prefer if you removed the hacky check and replaced it with a check against m_default_max_tx_fee",https://github.com/bitcoin/bitcoin/pull/16257#discussion_r298627517,298627517,src/wallet/rpcwallet.cpp
Sjors,2019-06-28 18:05:05,I think this is equally useful as a master release note.,https://github.com/bitcoin/bitcoin/pull/16257#discussion_r298696598,298696598,doc/release-notes-16257.md
Sjors,2019-06-28 18:09:17,It indeed makes sense for the wallet to do this check. Will look into that.,https://github.com/bitcoin/bitcoin/pull/16257#discussion_r298697902,298697902,src/wallet/rpcwallet.cpp
MarcoFalke,2019-06-28 18:40:24,I think we put it in the release notes only of the earliest release that contains the new feature/or bugfix. But not blocking of course.,https://github.com/bitcoin/bitcoin/pull/16257#discussion_r298707858,298707858,doc/release-notes-16257.md
Sjors,2019-06-29 02:46:09,Done,https://github.com/bitcoin/bitcoin/pull/16257#discussion_r298785025,298785025,src/wallet/rpcwallet.cpp
practicalswift,2019-07-02 09:29:19,"Post-merge typo: ""silenty"" :-)",https://github.com/bitcoin/bitcoin/pull/16257#discussion_r299389753,299389753,test/functional/rpc_psbt.py
hebasto,2019-07-02 13:20:32,Why didn't Travis catch it while running `test/lint/lint-spelling.sh`?,https://github.com/bitcoin/bitcoin/pull/16257#discussion_r299478961,299478961,test/functional/rpc_psbt.py
practicalswift,2019-07-02 13:29:31,"I think it does, but `lint-spelling.sh` intentionally does not break the build in case of new typos. It just prints them to the Travis log for periodic speling correction :-)",https://github.com/bitcoin/bitcoin/pull/16257#discussion_r299483315,299483315,test/functional/rpc_psbt.py
