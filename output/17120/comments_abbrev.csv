emilengler,2019-10-12 22:06:48,Concept ACK,https://github.com/bitcoin/bitcoin/pull/17120#issuecomment-541365304,541365304,
promag,2019-10-13 11:19:17,Renamed `init` to `startPollBalance` and asserted `QMetaObject::invokeMethod` result for Qt < 5.10..,https://github.com/bitcoin/bitcoin/pull/17120#issuecomment-541409624,541409624,
hebasto,2019-10-13 11:35:40,"@promag \n\n> Renamed `init` to `startPollBalance` and asserted `QMetaObject::invokeMethod` result for Qt < 5.10..\n\nWhy for Qt < 5.10 only?",https://github.com/bitcoin/bitcoin/pull/17120#issuecomment-541410810,541410810,
promag,2019-10-13 11:39:31,@hebasto because for Qt >= 5.10 the `invokeMethod` is compiler checked.,https://github.com/bitcoin/bitcoin/pull/17120#issuecomment-541411069,541411069,
hebasto,2019-10-13 12:33:37,"@promag \n\n> because for Qt >= 5.10 the `invokeMethod` is compiler checked.\n\nTo be pedantic, a compiler just checks a lambda body in your code ;)\n\nA compiler checked overloaded `invokeMethod` function is:\n\n```\nQMetaObject::invokeMethod(wallet_model, &WalletModel::startPollBalance, Qt::QueuedConnection);\n```\n\nMore details:\n- [Add QMetaObject::invokeMethod() overloads for fu",https://github.com/bitcoin/bitcoin/pull/17120#issuecomment-541414684,541414684,
promag,2019-10-14 09:54:14,Dropped `Qt::QueuedConnection` as the default `Qt::AutoConnection` is enough. Also added comment.,https://github.com/bitcoin/bitcoin/pull/17120#issuecomment-541585967,541585967,
MarcoFalke,2019-10-14 12:44:04,How can this be tested?,https://github.com/bitcoin/bitcoin/pull/17120#issuecomment-541655701,541655701,
promag,2019-10-14 13:09:54,"@MarcoFalke without this change:\n - `bitcoin-qt -regtest -server`\n - generate coins\n - `bitcoin-cli -regtest createwallet test`\n - `bitcoin-cli -regtest -rpcwallet=test getnewaddress`\n - `bitcoin-cli -regtest -rpcwallet="""" sendtoaddress` with the above address\n - check that balance hasn't changed in the test wallet GUI",https://github.com/bitcoin/bitcoin/pull/17120#issuecomment-541668200,541668200,
hebasto,2019-10-14 13:13:40,Could a functional test be added to prevent regressions in the future?,https://github.com/bitcoin/bitcoin/pull/17120#issuecomment-541670190,541670190,
laanwj,2019-10-23 11:04:38,A functional test cannot help with testing this GUI functionality.,https://github.com/bitcoin/bitcoin/pull/17120#issuecomment-545390594,545390594,
laanwj,2019-10-24 11:44:17,code review ACK a8f5026d6d992fd8d72908c848c5028f0f9a8cd1,https://github.com/bitcoin/bitcoin/pull/17120#issuecomment-545879737,545879737,
hebasto,2019-10-13 10:39:43,"nit: Could slot name be more expressive, as it initiates regular polling?",https://github.com/bitcoin/bitcoin/pull/17120#discussion_r334272493,334272493,src/qt/walletmodel.cpp
promag,2019-10-13 10:43:27,Yeah like `startPollBalance`?,https://github.com/bitcoin/bitcoin/pull/17120#discussion_r334272622,334272622,src/qt/walletmodel.cpp
hebasto,2019-10-13 11:02:37,Yup ;),https://github.com/bitcoin/bitcoin/pull/17120#discussion_r334273353,334273353,src/qt/walletmodel.cpp
laanwj,2019-10-14 09:34:40,There's a risk in implementing this twice. It's not strictly necessary because the pre-5.10 code will work fine on newer Qt. Might just as well remove the `#if` imo.,https://github.com/bitcoin/bitcoin/pull/17120#discussion_r334396433,334396433,src/qt/walletcontroller.cpp
promag,2019-10-14 09:42:32,Just wanted to make it easier for when we bump Qt. But will remove considering there are other places that would benefit the same approach.,https://github.com/bitcoin/bitcoin/pull/17120#discussion_r334399457,334399457,src/qt/walletcontroller.cpp
laanwj,2019-10-14 10:00:32,"I understand, but I think it's better to change these (if desired) when bumping the *minimum supported* Qt version. Don't introduce conditional compilation when not necessary.",https://github.com/bitcoin/bitcoin/pull/17120#discussion_r334406997,334406997,src/qt/walletcontroller.cpp
promag,2019-10-14 10:03:05,Done :+1:,https://github.com/bitcoin/bitcoin/pull/17120#discussion_r334407901,334407901,src/qt/walletcontroller.cpp
laanwj,2019-10-15 12:07:29,Thanks!,https://github.com/bitcoin/bitcoin/pull/17120#discussion_r334910496,334910496,src/qt/walletcontroller.cpp
laanwj,2019-10-24 12:07:05,"Are you sure this comment is correct? Doesn't `QTimer(self)`, as the timer is intended to end up in the event loop of the GUI thread, need to be called from the GUI thread? Any other Qt thread wouldn't do, either.\n\n(the fix is correct in any case)",https://github.com/bitcoin/bitcoin/pull/17120#discussion_r338534718,338534718,src/qt/walletcontroller.cpp
promag,2019-10-25 15:19:48,"> as the timer is intended to end up in the event loop of the GUI thread\n\nYes this is the case at the moment, but probably will be moved to other thread, like #17135 (same thread maybe doesn't matter now).\n\nEither way `startTimer` can't be called from a RPC thread.",https://github.com/bitcoin/bitcoin/pull/17120#discussion_r339107606,339107606,src/qt/walletcontroller.cpp
