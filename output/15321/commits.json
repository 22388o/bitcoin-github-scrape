[
  {
    "sha": "fa2a69fcb92c7f13c07f982c46df8a64e577dab9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTJhNjlmY2I5MmM3ZjEzYzA3Zjk4MmM0NmRmOGE2NGU1NzdkYWI5",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-01-17T21:13:58Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-02-01T20:32:16Z"
      },
      "message": "doc: Add cs_main lock annotations for mapBlockIndex",
      "tree": {
        "sha": "e2820199a1048889cf26a8f46b193699b4649ccb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2820199a1048889cf26a8f46b193699b4649ccb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa2a69fcb92c7f13c07f982c46df8a64e577dab9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJcVKzQAAoJEM4rdWl+aaVIOzQMAL9f2bF++FTBJ7GxT5RiAP80\nLVlSU80ysWiZX2OTqI4kCpMKeOiZANBCjxov0LhntSptb4WrsCpBTsPZIL8xldxR\n18ShDrvo/avcIOt0lZT0rRDXkGoCbGO9/ncX2bd8Y+Y2GtHF7xPCez+jZi7dVxSj\ndpozu4C8165JSaoZFcKrPgeOUbNuRQqz/qDA9D4gPC519h2+nw5BEZXsO5SGDID9\nObMYCXoHbS1xRdO6kC/cicXAStEmSRMRVkWmIsF0+sHcviefczPFYEK3eXJbYwO5\nu9BGCtqFgxEOX2MLJu/TZkAnVj6a15ju8pnACExR0/J61Cm9MjZxVZxcoWRPJ/K8\nwq3xFXIbl4fNYoNR0rL+V/aX3Z9vhDBHthwwH0tpomAR4cJDEOa8kWjPHNTjehjP\nQw1YpF3rtqYgS/zwyQHHmQOk7NWo1ki/bxyPS+7LCASbzK6jgak21aQaeWG/8tvy\nI9G90rQ1EIOacG+UqkzUjY38zxYeXRkNaE1uQXDsKw==\n=6J1U\n-----END PGP SIGNATURE-----",
        "payload": "tree e2820199a1048889cf26a8f46b193699b4649ccb\nparent 3e38d4087379edd1c0730d058902f527d5da6358\nauthor practicalswift <practicalswift@users.noreply.github.com> 1547759638 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1549053136 -0500\n\ndoc: Add cs_main lock annotations for mapBlockIndex\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2a69fcb92c7f13c07f982c46df8a64e577dab9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2a69fcb92c7f13c07f982c46df8a64e577dab9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2a69fcb92c7f13c07f982c46df8a64e577dab9/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3e38d4087379edd1c0730d058902f527d5da6358",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e38d4087379edd1c0730d058902f527d5da6358",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3e38d4087379edd1c0730d058902f527d5da6358"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 6,
      "deletions": 3
    },
    "files": [
      {
        "sha": "dbdc1afb359caa8955f24b1f66b7b6617ed229c2",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2a69fcb92c7f13c07f982c46df8a64e577dab9/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2a69fcb92c7f13c07f982c46df8a64e577dab9/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fa2a69fcb92c7f13c07f982c46df8a64e577dab9",
        "patch": "@@ -152,7 +152,7 @@ class CChainState {\n \n public:\n     CChain chainActive;\n-    BlockMap mapBlockIndex;\n+    BlockMap mapBlockIndex GUARDED_BY(cs_main);\n     std::multimap<CBlockIndex*, CBlockIndex*> mapBlocksUnlinked;\n     CBlockIndex *pindexBestInvalid = nullptr;\n "
      },
      {
        "sha": "49f73e4c9b664de97b47ce60341bc0dd3fb6feb1",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2a69fcb92c7f13c07f982c46df8a64e577dab9/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2a69fcb92c7f13c07f982c46df8a64e577dab9/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=fa2a69fcb92c7f13c07f982c46df8a64e577dab9",
        "patch": "@@ -151,7 +151,7 @@ extern CBlockPolicyEstimator feeEstimator;\n extern CTxMemPool mempool;\n extern std::atomic_bool g_is_mempool_loaded;\n typedef std::unordered_map<uint256, CBlockIndex*, BlockHasher> BlockMap;\n-extern BlockMap& mapBlockIndex;\n+extern BlockMap& mapBlockIndex GUARDED_BY(cs_main);\n extern uint64_t nLastBlockTx;\n extern uint64_t nLastBlockWeight;\n extern const std::string strMessageMagic;\n@@ -288,7 +288,7 @@ uint64_t CalculateCurrentUsage();\n /**\n  *  Mark one block file as pruned.\n  */\n-void PruneOneBlockFile(const int fileNumber);\n+void PruneOneBlockFile(const int fileNumber) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n /**\n  *  Actually unlink the specified files"
      },
      {
        "sha": "2fe79bece743fb0676efe23fddfea0a6f5b380d5",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2a69fcb92c7f13c07f982c46df8a64e577dab9/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2a69fcb92c7f13c07f982c46df8a64e577dab9/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=fa2a69fcb92c7f13c07f982c46df8a64e577dab9",
        "patch": "@@ -44,6 +44,7 @@ BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n     CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey()));\n     CBlockIndex* newTip = chainActive.Tip();\n \n+    LockAnnotation lock(::cs_main);\n     auto locked_chain = chain->lock();\n \n     // Verify ScanForWalletTransactions accommodates a null start block.\n@@ -123,6 +124,7 @@ BOOST_FIXTURE_TEST_CASE(importmulti_rescan, TestChain100Setup)\n     CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey()));\n     CBlockIndex* newTip = chainActive.Tip();\n \n+    LockAnnotation lock(::cs_main);\n     auto locked_chain = chain->lock();\n \n     // Prune the older block file.\n@@ -268,6 +270,7 @@ static int64_t AddTx(CWallet& wallet, uint32_t lockTime, int64_t mockTime, int64\n     SetMockTime(mockTime);\n     CBlockIndex* block = nullptr;\n     if (blockTime > 0) {\n+        LockAnnotation lock(::cs_main);\n         auto locked_chain = wallet.chain().lock();\n         auto inserted = mapBlockIndex.emplace(GetRandHash(), new CBlockIndex);\n         assert(inserted.second);"
      }
    ]
  }
]