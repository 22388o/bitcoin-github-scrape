practicalswift,2019-01-05T23:07:52Z,"Concept ACK and in accordance with our developer notes.\n\nThanks for doing this!\n\nUsing zero as null pointer constant is sloppy at best and dangerous at worst :-)",https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-451699966,451699966,
hebasto,2019-01-06T09:21:28Z,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-451727324,451727324,
MarcoFalke,2019-01-06T09:34:03Z,"Could submit the src/qt changes as separate pull request, since those are the bulk of the changes?",https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-451727954,451727954,
practicalswift,2019-01-06T09:38:15Z,@MarcoFalke Perhaps 10f81e916d5fbb2751d03d06901f68d9b507807c (including the two non QT fixes) can be posted as a separate PR since they are all trivial to review?,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-451728178,451728178,
practicalswift,2019-01-07T15:30:25Z,@Empact What about `-Werror=zero-as-null-pointer-constant` as discussed in https://github.com/bitcoin/bitcoin/pull/15114#issuecomment-451953456?,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-451972627,451972627,
Empact,2019-01-07T19:04:57Z,Enabled now. üëç ,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-452045035,452045035,
practicalswift,2019-01-07T21:07:07Z,utACK 873145a56315ba032aa100646d682ec31d39e8d9,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-452081973,452081973,
Empact,2019-01-09T06:23:11Z,"As per conversation with @theuni, this now is only active if the user configures with `--enable-isystem`, so the build possibilities are:\ndefault: disabled\n`--enable-isystem`: `-Wzero-as-null-pointer-constant`\n`--enable-isystem --enable-werror`: `-Werror=zero-as-null-pointer-constant`\n\nThe idea being to add a travis run that exercises the latter combination to deny the introduction of vi",https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-452585586,452585586,
DrahtBot,2019-01-09T22:49:59Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23473](https://github.com/bitcoin/bitcoin/pull/23473) (build: boring autotools cleanup by fanquake)\n* [#22041](https://",https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-452899029,452899029,
Empact,2019-01-13T17:48:15Z,Rebased for #13216,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-453850623,453850623,
Empact,2019-01-14T08:43:37Z,Rebased for #15154 ,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-453932324,453932324,
Empact,2019-01-16T06:02:27Z,"AppVeyor failure is spurious, solved by #15171. Now that  #15114 is in, the diff is much smaller here. Still should start with #14920.",https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-454662635,454662635,
practicalswift,2019-01-16T07:54:48Z,@Empact Appveyor restarted.,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-454684978,454684978,
Empact,2019-01-20T04:58:25Z,Rebased for #15175 ,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-455837984,455837984,
practicalswift,2019-01-20T08:34:30Z,utACK b4996079cda89711c2b8b80adbbb06a80f7b9c86,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-455847416,455847416,
Empact,2019-02-09T23:49:03Z,Rebased due to conflicts in #15377,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-462090290,462090290,
Empact,2019-03-05T05:39:28Z,Rebased for #15288,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-469545790,469545790,
practicalswift,2019-03-15T16:41:03Z,FWIW: I've verified that a disassembly of the `bitcoind` binary built with this patch applied is identical to a disassembly of the `bitcoind` binary built against `master` (as expected).,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-473358355,473358355,
laanwj,2019-06-06T08:56:36Z,"I get tons of these warnings (almost on every file):\n```\n/home/user/src/bitcoin/src/tinyformat.h:119:32: warning: unknown warning group '-Wzero-as-null-pointer-constant', ignored [-Wunknown-pragmas]\n#pragma GCC diagnostic ignored ""-Wzero-as-null-pointer-constant""\n                               ^\n```\nThis is with `clang version 3.8.1-24 (tags/RELEASE_381/final)` (which is old as the hil",https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-499409788,499409788,
promag,2019-06-09T09:57:17Z,"Failing in travis with\n```\nIn file included from ./index/base.h:8:0,\n                 from index/base.cpp:6:\n./dbwrapper.h:16:10: fatal error: leveldb/db.h: No such file or directory\n #include <leveldb/db.h>\n```\n\nPlease update OP as it seems outdated.",https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-500200083,500200083,
Empact,2019-06-09T12:02:25Z,Yeah @promag this is wip: rebasing and addressing @laanwj‚Äôs comment,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-500206774,500206774,
practicalswift,2020-01-18T16:25:58Z,@Empact Seems like the current version does not compile?,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-575914860,575914860,
practicalswift,2020-03-06T12:52:04Z,I'll happily re-review and re-ACK after rebase -- hopefully we can get this in soon :),https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-595754416,595754416,
laanwj,2021-04-13T09:45:48Z,"Fails in leveldb (shouldn't it skip dependencies?):\n```\n./leveldb/db/skiplist.h:328:21: error: zero as null pointer constant [-Werror=zero-as-null-pointer-constant]\n       head_(NewNode(0 /* any key will do */, kMaxHeight)),\n                     ^\ncc1plus: some warnings being treated as errors\n```",https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-818604072,818604072,
Empact,2021-04-13T16:22:35Z,@hebasto thanks for the review - I switched to `HAVE_W_ZERO_AS_NULL_POINTER_CONSTANT` - do you think that's clearer? Open to suggestions.,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-818868085,818868085,
hebasto,2021-04-13T19:32:43Z,"https://cirrus-ci.com/task/6169333320646656?logs=ci#L2845\n```\ntest/util_tests.cpp:1805:48: error: zero as null pointer constant [-Werror,-Wzero-as-null-pointer-constant]\n    void (*old_handler)(int) = signal(SIGCHLD, SIG_DFL);\n                                               ^\n/usr/include/x86_64-linux-gnu/bits/signum-generic.h:29:37: note: expanded from macro 'SIG_DFL'\n#define SIG_DFL  ",https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-818999432,818999432,
practicalswift,2021-04-22T06:21:54Z,cr ACK 7f0f2ca49f23cfd9e28892137e13f057a2152a91: patch looks correct,https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-824572811,824572811,
DrahtBot,2021-11-13T00:43:24Z,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/15112#issuecomment-967746303,967746303,
hebasto,2021-04-13T11:02:05Z,"One pair of `[]` is redundant:\n```suggestion\n    AX_CHECK_COMPILE_FLAG([-Werror=zero-as-null-pointer-constant], [\n      WARN_CXXFLAGS=""$WARN_CXXFLAGS -Werror=zero-as-null-pointer-constant""\n      AC_DEFINE(HAVE_ZERO_AS_NULL_POINTER_CONSTANT, 1, [Define this symbol if -Wzero-as-null-pointer-constant is available])\n    ], [], [$CXXFLAG_WERROR])\n```",https://github.com/bitcoin/bitcoin/pull/15112#discussion_r612344719,612344719,configure.ac
hebasto,2021-04-13T11:02:52Z,"One pair of `[]` is redundant:\n```suggestion\n    AX_CHECK_COMPILE_FLAG([-Wzero-as-null-pointer-constant], [\n      WARN_CXXFLAGS=""$WARN_CXXFLAGS -Wzero-as-null-pointer-constant""\n      AC_DEFINE(HAVE_ZERO_AS_NULL_POINTER_CONSTANT, 1, [Define this symbol if -Wzero-as-null-pointer-constant is available])\n    ], [], [$CXXFLAG_WERROR])\n```",https://github.com/bitcoin/bitcoin/pull/15112#discussion_r612345197,612345197,configure.ac
Empact,2021-04-13T16:30:41Z,"I'm an autoconf novice - I take it we're not concerned about macro conflicts with the CXXFLAG_WERROR as its contents are of a different form than uppercase macro definitions?\n\n> When you use the same text in a macro argument, you must therefore have an extra quotation level (since one is stripped away by the macro substitution). In general, then, it is a good idea to use double quoting for all",https://github.com/bitcoin/bitcoin/pull/15112#discussion_r612603267,612603267,configure.ac
hebasto,2021-04-29T17:26:16Z,"With gcc 9.3.0:\n```\n./tinyformat.h:134: warning: ignoring #pragma clang diagnostic [-Wunknown-pragmas]\n  134 | #pragma clang diagnostic push\n      | \n./tinyformat.h:135: warning: ignoring #pragma clang diagnostic [-Wunknown-pragmas]\n  135 | #pragma clang diagnostic ignored ""-Wzero-as-null-pointer-constant""\n      | \n```",https://github.com/bitcoin/bitcoin/pull/15112#discussion_r623251037,623251037,src/tinyformat.h
hebasto,2021-04-29T17:27:04Z,"With gcc 9.3.0:\n```\n./tinyformat.h:1179: warning: ignoring #pragma clang diagnostic [-Wunknown-pragmas]\n 1179 | #pragma clang diagnostic pop\n      | \n```",https://github.com/bitcoin/bitcoin/pull/15112#discussion_r623251609,623251609,src/tinyformat.h
hebasto,2021-04-29T17:31:57Z,"If I remove changes in this file I won't receive warning with both gcc 9.3.0 and clang 10.0.0.\nWhat cases are guarded here?\n\nHaving system sqlite 3.31.1.",https://github.com/bitcoin/bitcoin/pull/15112#discussion_r623254979,623254979,src/wallet/sqlite.cpp
Empact,2021-10-14T13:10:17Z,"Here's the failure I get on removing that:\n```\n  CXX      wallet/libbitcoin_wallet_a-sqlite.o\nwallet/sqlite.cpp:379:73: error: zero as null pointer constant [-Werror,-Wzero-as-null-pointer-constant]\n    int res = sqlite3_bind_blob(m_read_stmt, 1, key.data(), key.size(), SQLITE_STATIC);\n                                                                        ^\n/usr/local/Cellar/sqlite/3.",https://github.com/bitcoin/bitcoin/pull/15112#discussion_r728966573,728966573,src/wallet/sqlite.cpp
