[
  {
    "sha": "40634dda0e140d6dbcdba9e848319f24230b6b87",
    "node_id": "C_kwDOABII59oAKDQwNjM0ZGRhMGUxNDBkNmRiY2RiYTllODQ4MzE5ZjI0MjMwYjZiODc",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-07-30T10:37:09Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2021-10-13T15:04:02Z"
      },
      "message": "Don't use zero as null pointer constant (-Wzero-as-null-pointer-constant)",
      "tree": {
        "sha": "bceac07c3826317cac9c051df64ad619c9a34d76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bceac07c3826317cac9c051df64ad619c9a34d76"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40634dda0e140d6dbcdba9e848319f24230b6b87",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+XLHXoy4Dim7e8hvTYykuhgECQYFAmFm9WIACgkQTYykuhgE\nCQZoLw/9F5ONntoBdteVWspLfBw67HvdckmCsh3imf9GPC+YUvx8SdaCI0o65y5Z\n+zln5HwJpQDu4WZRBXl4oNJppwI2kPSRhwTOT/6PInULjMEm7icFDhopGu+3h0Vn\nRZ2oYl89GONQFmUqZA8XEE4xdUfOSRQWICjHxMglm8L+jrzuYtgMQC0mNYYrCDvU\npucC9g5OJ4HbI3M4yRS2s94abwJRu3KfHTCJJIj6F4V4CZrxrLnSyMPg50QNAkCC\nnwFPfUK9J19PsO0LUKyLMWFmjd5thaf+6QmSA5UOGbPBQGTbfOEL0pcDqsPq9Pne\nOR3PYde9P41JzV6iFCGYS7qxsFin6erEvR4HRGkSg6PhYcLvYCh5tXPCcpKmEjC/\naFIbl+UqJgv26Ij1zCvXHl2a9TsYAKKYaAq7MCc7ZkW11aPqoJ1k+vRZ014kj1LX\nkCa3liWay1RLkQlrTRjGBK1mlUsqp4cIJwIc2S9rEnnzc1ox3Tp/M87939+zmBH0\ntH/8Fqt4huXrmYaun7W/PA404KihG+Xyu1a6reclD50CRghpCoWoCbi4FeiK2LEM\n+uaLeD1tBAbMiN4yORq4lFtciMwAiUoVjpeP5NulYKRZ8bNwDdbKs0z7qncfCiLa\n367/ml//7IN44qaQIf2M8vC+GafPJgaNIeZkTabmhkKy9CQoqgY=\n=ixI9\n-----END PGP SIGNATURE-----",
        "payload": "tree bceac07c3826317cac9c051df64ad619c9a34d76\nparent 71a85fbd09b5a450edc53a8ba4131f32e7136ca7\nauthor practicalswift <practicalswift@users.noreply.github.com> 1532947029 +0200\ncommitter Ben Woosley <ben.woosley@gmail.com> 1634137442 +0200\n\nDon't use zero as null pointer constant (-Wzero-as-null-pointer-constant)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40634dda0e140d6dbcdba9e848319f24230b6b87",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/40634dda0e140d6dbcdba9e848319f24230b6b87",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40634dda0e140d6dbcdba9e848319f24230b6b87/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "71a85fbd09b5a450edc53a8ba4131f32e7136ca7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/71a85fbd09b5a450edc53a8ba4131f32e7136ca7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/71a85fbd09b5a450edc53a8ba4131f32e7136ca7"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "5e73e9bf4eeb30a5c369988eb008f608e174ecd4",
        "filename": "src/mapport.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40634dda0e140d6dbcdba9e848319f24230b6b87/src/mapport.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40634dda0e140d6dbcdba9e848319f24230b6b87/src/mapport.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mapport.cpp?ref=40634dda0e140d6dbcdba9e848319f24230b6b87",
        "patch": "@@ -193,7 +193,7 @@ static bool ProcessUpnp()\n         std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n \n         do {\n-            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", nullptr, \"0\");\n \n             if (r != UPNPCOMMAND_SUCCESS) {\n                 ret = false;\n@@ -206,7 +206,7 @@ static bool ProcessUpnp()\n         } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n         g_mapport_interrupt.reset();\n \n-        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", nullptr);\n         LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n         freeUPNPDevlist(devlist); devlist = nullptr;\n         FreeUPNPUrls(&urls);"
      },
      {
        "sha": "113fdacf9d532eaa4fdd596129d2b5a4e17237dc",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40634dda0e140d6dbcdba9e848319f24230b6b87/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40634dda0e140d6dbcdba9e848319f24230b6b87/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=40634dda0e140d6dbcdba9e848319f24230b6b87",
        "patch": "@@ -666,7 +666,7 @@ bool ConnectThroughProxy(const proxyType& proxy, const std::string& strDest, uin\n             return false;\n         }\n     } else {\n-        if (!Socks5(strDest, port, 0, sock)) {\n+        if (!Socks5(strDest, port, nullptr, sock)) {\n             return false;\n         }\n     }"
      },
      {
        "sha": "3a71ff13071edaa6e2230a21cd7136944e665f69",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40634dda0e140d6dbcdba9e848319f24230b6b87/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40634dda0e140d6dbcdba9e848319f24230b6b87/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=40634dda0e140d6dbcdba9e848319f24230b6b87",
        "patch": "@@ -226,7 +226,7 @@ bool Intro::showIfNeeded(bool& did_show_intro, int64_t& prune_MiB)\n         }\n \n         /* If current default data directory does not exist, let the user choose one */\n-        Intro intro(0, Params().AssumedBlockchainSize(), Params().AssumedChainStateSize());\n+        Intro intro(nullptr, Params().AssumedBlockchainSize(), Params().AssumedChainStateSize());\n         intro.setDataDirectory(dataDir);\n         intro.setWindowIcon(QIcon(\":icons/bitcoin\"));\n         did_show_intro = true;"
      },
      {
        "sha": "0dc7bdf065559806d558e0df9ada5cc305eb8531",
        "filename": "src/randomenv.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40634dda0e140d6dbcdba9e848319f24230b6b87/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40634dda0e140d6dbcdba9e848319f24230b6b87/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=40634dda0e140d6dbcdba9e848319f24230b6b87",
        "patch": "@@ -363,10 +363,10 @@ void RandAddStaticEnv(CSHA512& hasher)\n \n #if HAVE_DECL_GETIFADDRS && HAVE_DECL_FREEIFADDRS\n     // Network interfaces\n-    struct ifaddrs *ifad = NULL;\n+    struct ifaddrs *ifad = nullptr;\n     getifaddrs(&ifad);\n     struct ifaddrs *ifit = ifad;\n-    while (ifit != NULL) {\n+    while (ifit != nullptr) {\n         hasher.Write((const unsigned char*)&ifit, sizeof(ifit));\n         hasher.Write((const unsigned char*)ifit->ifa_name, strlen(ifit->ifa_name) + 1);\n         hasher.Write((const unsigned char*)&ifit->ifa_flags, sizeof(ifit->ifa_flags));"
      },
      {
        "sha": "add7aa14287ff5e2dec2710ce1da550f9ab6aa7d",
        "filename": "src/support/allocators/secure.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40634dda0e140d6dbcdba9e848319f24230b6b87/src/support/allocators/secure.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40634dda0e140d6dbcdba9e848319f24230b6b87/src/support/allocators/secure.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/allocators/secure.h?ref=40634dda0e140d6dbcdba9e848319f24230b6b87",
        "patch": "@@ -38,7 +38,7 @@ struct secure_allocator : public std::allocator<T> {\n         typedef secure_allocator<_Other> other;\n     };\n \n-    T* allocate(std::size_t n, const void* hint = 0)\n+    T* allocate(std::size_t n, const void* hint = nullptr)\n     {\n         T* allocation = static_cast<T*>(LockedPoolManager::Instance().alloc(sizeof(T) * n));\n         if (!allocation) {"
      },
      {
        "sha": "0b4ddad1f1a6e696ae3dd0a16c35453ebbf12691",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40634dda0e140d6dbcdba9e848319f24230b6b87/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40634dda0e140d6dbcdba9e848319f24230b6b87/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=40634dda0e140d6dbcdba9e848319f24230b6b87",
        "patch": "@@ -303,7 +303,7 @@ std::map<std::string,std::string> ParseTorReplyMapping(const std::string &s)\n \n TorController::TorController(struct event_base* _base, const std::string& tor_control_center, const CService& target):\n     base(_base),\n-    m_tor_control_center(tor_control_center), conn(base), reconnect(true), reconnect_ev(0),\n+    m_tor_control_center(tor_control_center), conn(base), reconnect(true), reconnect_ev(nullptr),\n     reconnect_timeout(RECONNECT_TIMEOUT_START),\n     m_target(target)\n {"
      },
      {
        "sha": "95d01ed22967496cd019b3ccba8b7e0a227c2fa2",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40634dda0e140d6dbcdba9e848319f24230b6b87/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40634dda0e140d6dbcdba9e848319f24230b6b87/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=40634dda0e140d6dbcdba9e848319f24230b6b87",
        "patch": "@@ -2611,7 +2611,7 @@ std::shared_ptr<CWallet> CWallet::Create(WalletContext& context, const std::stri\n     } else if (wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS) {\n         // Make it impossible to disable private keys after creation\n         error = strprintf(_(\"Error loading %s: Private keys can only be disabled during creation\"), walletFile);\n-        return NULL;\n+        return nullptr;\n     } else if (walletInstance->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n         for (auto spk_man : walletInstance->GetActiveScriptPubKeyMans()) {\n             if (spk_man->HavePrivateKeys()) {"
      }
    ]
  },
  {
    "sha": "fcd0a9993c447a838fe8ef2791c37c3215703d98",
    "node_id": "C_kwDOABII59oAKGZjZDBhOTk5M2M0NDdhODM4ZmU4ZWYyNzkxYzM3YzMyMTU3MDNkOTg",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-01-05T22:37:33Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2021-10-13T15:13:28Z"
      },
      "message": "build: Enable -Wzero-as-null-pointer-constant under suppress_external_warnings\n\nAnd -Werror=zero-as-null-pointer-constant if werror are enabled.\n\nWhile disabling it in the following dependencies:\n* LevelDb via build flags\n* Tinyformat via pragmas\n* Sqlite via pragmas",
      "tree": {
        "sha": "1b11df0061f993615bd7c71c9858f3a664a6e279",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b11df0061f993615bd7c71c9858f3a664a6e279"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fcd0a9993c447a838fe8ef2791c37c3215703d98",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+XLHXoy4Dim7e8hvTYykuhgECQYFAmFm95kACgkQTYykuhgE\nCQar0xAAjKQ83KS7e9fvE6vJxcKHYM8NqDM7W70WaZ0q8MZBD4R1SFM+xVRoNvH8\nLpP5CWUeSn4pUSbN2i/2Bt/f92dyYvx/TJacbfhhLp0H2kcRGB52aOau1/XbEWjA\nENQ1MLSB1pWLCIRBTd2YcuTx2SNSJ6ICZ/y80hGbBQgHoqfEKSpwpb19+LjqY9p0\nRiVIb2qr2FVks25itrhHP5GKRNMH/Xuvxwap6lwwpcMgRaDez0BmH+bfb7XD1QBJ\nod3KSjqz0VbkoAbD9g4FjkZeaScEJe1fpls4x8BrrdnsB7wbbDuePhoApw5xk5ST\neGtJGRnCA4lJ8fYxnbG9V2XZZ3q+esDQcO4VbJBCbI8csh9c8OwWeRdK+hyH4rot\nMwL9wY86ZNW/FseDJEyAH+gcdT+9NtSVUA3a/WVoOED4VSaoEZvxU2VI0Plonz6+\nxkxiPAe7Elcbwaor0qDQMiEbfmoxRQfj4wCA/+i4Ysi7O9hOAbK/PmCG4GqMgPvn\nb2gkWDb/WAK+gYwR+C9OaGQjX4r7HXDlFS12IlGa+sLgyiCWWyu01uTQdc/Xy7Gg\nl7SMTbVXZl828BX7yoMPdEbn8H0QrKASq5L4XkFXp9GWV7ijnHtq8n0Nw3Ipkain\nyEx++QdwjbddtDOmW00CJUNRXo+nIE96+siaBBV/etx231DZx7E=\n=+1wN\n-----END PGP SIGNATURE-----",
        "payload": "tree 1b11df0061f993615bd7c71c9858f3a664a6e279\nparent 40634dda0e140d6dbcdba9e848319f24230b6b87\nauthor Ben Woosley <ben.woosley@gmail.com> 1546727853 -0800\ncommitter Ben Woosley <ben.woosley@gmail.com> 1634138008 +0200\n\nbuild: Enable -Wzero-as-null-pointer-constant under suppress_external_warnings\n\nAnd -Werror=zero-as-null-pointer-constant if werror are enabled.\n\nWhile disabling it in the following dependencies:\n* LevelDb via build flags\n* Tinyformat via pragmas\n* Sqlite via pragmas\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcd0a9993c447a838fe8ef2791c37c3215703d98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fcd0a9993c447a838fe8ef2791c37c3215703d98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcd0a9993c447a838fe8ef2791c37c3215703d98/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "40634dda0e140d6dbcdba9e848319f24230b6b87",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40634dda0e140d6dbcdba9e848319f24230b6b87",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/40634dda0e140d6dbcdba9e848319f24230b6b87"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 47,
      "deletions": 1
    },
    "files": [
      {
        "sha": "968736fa9c3dfd430c2f82729ead733b9ea6967e",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcd0a9993c447a838fe8ef2791c37c3215703d98/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcd0a9993c447a838fe8ef2791c37c3215703d98/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=fcd0a9993c447a838fe8ef2791c37c3215703d98",
        "patch": "@@ -447,6 +447,10 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n \n   if test x$suppress_external_warnings != xno ; then\n     AX_CHECK_COMPILE_FLAG([-Wdocumentation],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdocumentation\"],,[[$CXXFLAG_WERROR]])\n+    AX_CHECK_COMPILE_FLAG([-Wzero-as-null-pointer-constant],[\n+      WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wzero-as-null-pointer-constant\"\n+      AC_DEFINE(HAVE_W_ZERO_AS_NULL_POINTER_CONSTANT, 1, [Define this symbol if -Wzero-as-null-pointer-constant is available])\n+    ],[],[$CXXFLAG_WERROR])\n   fi\n \n   dnl Some compilers (gcc) ignore unknown -Wno-* options, but warn about all"
      },
      {
        "sha": "a937bac10fb1776f9146413ac241eb03e9cc8955",
        "filename": "src/Makefile.leveldb.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcd0a9993c447a838fe8ef2791c37c3215703d98/src/Makefile.leveldb.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcd0a9993c447a838fe8ef2791c37c3215703d98/src/Makefile.leveldb.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.leveldb.include?ref=fcd0a9993c447a838fe8ef2791c37c3215703d98",
        "patch": "@@ -37,7 +37,7 @@ LEVELDB_CPPFLAGS_INT += -DLEVELDB_PLATFORM_POSIX\n endif\n \n leveldb_libleveldb_a_CPPFLAGS = $(AM_CPPFLAGS) $(LEVELDB_CPPFLAGS_INT) $(LEVELDB_CPPFLAGS)\n-leveldb_libleveldb_a_CXXFLAGS = $(filter-out -Wconditional-uninitialized -Werror=conditional-uninitialized -Wsuggest-override -Werror=suggest-override, $(AM_CXXFLAGS)) $(PIE_FLAGS)\n+leveldb_libleveldb_a_CXXFLAGS = $(filter-out -Wconditional-uninitialized -Werror=conditional-uninitialized -Wsuggest-override -Werror=suggest-override -Wzero-as-null-pointer-constant -Werror=zero-as-null-pointer-constant, $(AM_CXXFLAGS)) $(PIE_FLAGS)\n \n leveldb_libleveldb_a_SOURCES=\n leveldb_libleveldb_a_SOURCES += leveldb/port/port_stdcxx.h"
      },
      {
        "sha": "2172dc18569ada1b725c59eeab1ebdc4d298b461",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcd0a9993c447a838fe8ef2791c37c3215703d98/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcd0a9993c447a838fe8ef2791c37c3215703d98/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=fcd0a9993c447a838fe8ef2791c37c3215703d98",
        "patch": "@@ -40,6 +40,14 @@\n using namespace std::literals;\n static const std::string STRING_WITH_EMBEDDED_NULL_CHAR{\"1\"s \"\\0\" \"1\"s};\n \n+// disable Wzero-as-null-pointer-constant for SIG_DFL\n+#if defined(HAVE_W_ZERO_AS_NULL_POINTER_CONSTANT)\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wzero-as-null-pointer-constant\"\n+#pragma clang diagnostic push\n+#pragma clang diagnostic ignored \"-Wzero-as-null-pointer-constant\"\n+#endif\n+\n /* defined in logging.cpp */\n namespace BCLog {\n     std::string LogEscapeMessage(const std::string& str);\n@@ -2457,3 +2465,8 @@ BOOST_AUTO_TEST_CASE(remove_prefix)\n }\n \n BOOST_AUTO_TEST_SUITE_END()\n+\n+#if defined(HAVE_W_ZERO_AS_NULL_POINTER_CONSTANT)\n+#pragma GCC diagnostic pop\n+#pragma clang diagnostic pop\n+#endif"
      },
      {
        "sha": "5c2ec523cb122c4a2a96e9ce777c9b14da8a4d09",
        "filename": "src/tinyformat.h",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcd0a9993c447a838fe8ef2791c37c3215703d98/src/tinyformat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcd0a9993c447a838fe8ef2791c37c3215703d98/src/tinyformat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/tinyformat.h?ref=fcd0a9993c447a838fe8ef2791c37c3215703d98",
        "patch": "@@ -124,6 +124,17 @@\n #ifndef TINYFORMAT_H_INCLUDED\n #define TINYFORMAT_H_INCLUDED\n \n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#if defined(HAVE_W_ZERO_AS_NULL_POINTER_CONSTANT)\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wzero-as-null-pointer-constant\"\n+#pragma clang diagnostic push\n+#pragma clang diagnostic ignored \"-Wzero-as-null-pointer-constant\"\n+#endif\n+\n namespace tinyformat {}\n //------------------------------------------------------------------------------\n // Config section.  Customize to your liking!\n@@ -1163,4 +1174,9 @@ std::string format(const std::string &fmt, const Args&... args)\n /** Format arguments and return the string or write to given std::ostream (see tinyformat::format doc for details) */\n #define strprintf tfm::format\n \n+#if defined(HAVE_W_ZERO_AS_NULL_POINTER_CONSTANT)\n+#pragma GCC diagnostic pop\n+#pragma clang diagnostic pop\n+#endif\n+\n #endif // TINYFORMAT_H_INCLUDED"
      },
      {
        "sha": "c709e809fe074d37ca62cf3e2e1769924d88da1e",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcd0a9993c447a838fe8ef2791c37c3215703d98/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcd0a9993c447a838fe8ef2791c37c3215703d98/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=fcd0a9993c447a838fe8ef2791c37c3215703d98",
        "patch": "@@ -370,6 +370,14 @@ void SQLiteBatch::Close()\n     }\n }\n \n+// disable -Wzero-as-null-pointer-constant due to SQLITE_STATIC\n+#if defined(HAVE_W_ZERO_AS_NULL_POINTER_CONSTANT)\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wzero-as-null-pointer-constant\"\n+#pragma clang diagnostic push\n+#pragma clang diagnostic ignored \"-Wzero-as-null-pointer-constant\"\n+#endif\n+\n bool SQLiteBatch::ReadKey(CDataStream&& key, CDataStream& value)\n {\n     if (!m_database.m_db) return false;\n@@ -578,3 +586,8 @@ std::string SQLiteDatabaseVersion()\n {\n     return std::string(sqlite3_libversion());\n }\n+\n+#if defined(HAVE_W_ZERO_AS_NULL_POINTER_CONSTANT)\n+#pragma GCC diagnostic pop\n+#pragma clang diagnostic pop\n+#endif"
      }
    ]
  }
]