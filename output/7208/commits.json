[
  {
    "sha": "64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NDM2MGYxMzA0NDEyNWZiYjNjZGNiZTJlNWU4ZjJiZmI4MmE4YjI3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-12-14T12:23:45Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-12-14T12:29:28Z"
      },
      "message": "Make max tip age an option instead of chainparam\n\nAfter discussion in #7164 I think this is better.\n\nMax tip age was introduced in #5987 to make it possible to run\ntestnet-in-a-box. But associating this behavior with the testnet chain\nis wrong conceptually, as it is not needed in normal usage.\nShould aim to make testnet test the software as-is.\n\nReplace it with a (debug) option `-maxtipage`, which can be\nspecified only in the specific case.",
      "tree": {
        "sha": "90bf76ee3d42ad447c5e5bd8c067e546fff3318b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90bf76ee3d42ad447c5e5bd8c067e546fff3318b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dc511dcfd9eaa82a773d0a402b1500c3fd9113e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc511dcfd9eaa82a773d0a402b1500c3fd9113e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dc511dcfd9eaa82a773d0a402b1500c3fd9113e0"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 9,
      "deletions": 6
    },
    "files": [
      {
        "sha": "c2db53fe1a09af007036ea9e2325c4acf67cb3fd",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27",
        "patch": "@@ -92,7 +92,6 @@ class CMainParams : public CChainParams {\n         pchMessageStart[3] = 0xd9;\n         vAlertPubKey = ParseHex(\"04fc9702847840aaf195de8442ebecedf5b095cdbb9bc716bda9110971b28a49e0ead8564ff0db22209e0374782c093bb899692d524e9d6a6956e7c5ecbcd68284\");\n         nDefaultPort = 8333;\n-        nMaxTipAge = 24 * 60 * 60;\n         nPruneAfterHeight = 100000;\n \n         genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n@@ -169,7 +168,6 @@ class CTestNetParams : public CChainParams {\n         pchMessageStart[3] = 0x07;\n         vAlertPubKey = ParseHex(\"04302390343f91cc401d56d68b123028bf52e5fca1939df127f63c6467cdf9c8e2c14b61104cf817d0b780da337893ecc4aaff1309e536162dabbdb45200ca2b0a\");\n         nDefaultPort = 18333;\n-        nMaxTipAge = 0x7fffffff;\n         nPruneAfterHeight = 1000;\n \n         genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n@@ -233,7 +231,6 @@ class CRegTestParams : public CChainParams {\n         pchMessageStart[1] = 0xbf;\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n-        nMaxTipAge = 24 * 60 * 60;\n         nDefaultPort = 18444;\n         nPruneAfterHeight = 1000;\n "
      },
      {
        "sha": "1c8c8982045e17042ab0951627b672e1af196cce",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27",
        "patch": "@@ -64,7 +64,6 @@ class CChainParams\n     bool DefaultConsistencyChecks() const { return fDefaultConsistencyChecks; }\n     /** Policy: Filter transactions that do not match well-defined patterns */\n     bool RequireStandard() const { return fRequireStandard; }\n-    int64_t MaxTipAge() const { return nMaxTipAge; }\n     uint64_t PruneAfterHeight() const { return nPruneAfterHeight; }\n     /** Make miner stop after a block is found. In RPC, don't return until nGenProcLimit blocks are generated */\n     bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }\n@@ -84,7 +83,6 @@ class CChainParams\n     //! Raw pub key bytes for the broadcast alert signing key.\n     std::vector<unsigned char> vAlertPubKey;\n     int nDefaultPort;\n-    long nMaxTipAge;\n     uint64_t nPruneAfterHeight;\n     std::vector<CDNSSeedData> vSeeds;\n     std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];"
      },
      {
        "sha": "60ae5272acaeb0dd6dcc6f935ec9aa0d40025733",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27",
        "patch": "@@ -456,6 +456,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-limitfreerelay=<n>\", strprintf(\"Continuously rate-limit free transactions to <n>*1000 bytes per minute (default: %u)\", DEFAULT_LIMITFREERELAY));\n         strUsage += HelpMessageOpt(\"-relaypriority\", strprintf(\"Require high priority for relaying free or low-fee transactions (default: %u)\", DEFAULT_RELAYPRIORITY));\n         strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> MiB (default: %u)\", DEFAULT_MAX_SIG_CACHE_SIZE));\n+        strUsage += HelpMessageOpt(\"-maxtipage=<n>\", strprintf(\"Maximum tip age in seconds to consider node in initial block download (default: %u)\", DEFAULT_MAX_TIP_AGE));\n     }\n     strUsage += HelpMessageOpt(\"-minrelaytxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(DEFAULT_MIN_RELAY_TX_FEE)));\n@@ -994,6 +995,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     if (GetBoolArg(\"-peerbloomfilters\", true))\n         nLocalServices |= NODE_BLOOM;\n \n+    nMaxTipAge = GetArg(\"-maxtipage\", DEFAULT_MAX_TIP_AGE);\n+\n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log\n \n     // Initialize elliptic curve code"
      },
      {
        "sha": "72cfb4ca39acc43a953bd2cd23139b3bfe31be15",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27",
        "patch": "@@ -74,6 +74,9 @@ bool fCheckpointsEnabled = DEFAULT_CHECKPOINTS_ENABLED;\n size_t nCoinCacheUsage = 5000 * 300;\n uint64_t nPruneTarget = 0;\n bool fAlerts = DEFAULT_ALERTS;\n+/* If the tip is older than this (in seconds), the node is considered to be in initial block download.\n+ */\n+int64_t nMaxTipAge = DEFAULT_MAX_TIP_AGE;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying, mining and transaction creation) */\n CFeeRate minRelayTxFee = CFeeRate(DEFAULT_MIN_RELAY_TX_FEE);\n@@ -1402,7 +1405,7 @@ bool IsInitialBlockDownload()\n     if (lockIBDState)\n         return false;\n     bool state = (chainActive.Height() < pindexBestHeader->nHeight - 24 * 6 ||\n-            pindexBestHeader->GetBlockTime() < GetTime() - chainParams.MaxTipAge());\n+            pindexBestHeader->GetBlockTime() < GetTime() - nMaxTipAge);\n     if (!state)\n         lockIBDState = true;\n     return state;"
      },
      {
        "sha": "d06ad6caf34e9efcd329d4f344ddd803e7dca248",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=64360f13044125fbb3cdcbe2e5e8f2bfb82a8b27",
        "patch": "@@ -89,6 +89,7 @@ static const unsigned int DATABASE_FLUSH_INTERVAL = 24 * 60 * 60;\n static const unsigned int MAX_REJECT_MESSAGE_LENGTH = 111;\n static const unsigned int DEFAULT_LIMITFREERELAY = 15;\n static const bool DEFAULT_RELAYPRIORITY = true;\n+static const int64_t DEFAULT_MAX_TIP_AGE = 24 * 60 * 60;\n \n /** Default for -permitbaremultisig */\n static const bool DEFAULT_PERMIT_BAREMULTISIG = true;\n@@ -127,6 +128,7 @@ extern bool fCheckpointsEnabled;\n extern size_t nCoinCacheUsage;\n extern CFeeRate minRelayTxFee;\n extern bool fAlerts;\n+extern int64_t nMaxTipAge;\n \n /** Best header we've seen so far (used for getheaders queries' starting points). */\n extern CBlockIndex *pindexBestHeader;"
      }
    ]
  }
]