laanwj,2021-10-04 22:21:22,"Thinking of it, I'm not sure this is the right solution. `statx` is not directly used by us, but by libc. What if the resulting binary is run against a more recent version of libc (remember, we link libc dynamically), it will use the system call but not be allowed to, so fail?\n\nMight be better to do\n```\n#ifndef __NR_statx\n#define __NR_statx 332\n#endif\n```\n…instead\nAnd the same fo",https://github.com/bitcoin/bitcoin/pull/23178#issuecomment-933900645,933900645,
MarcoFalke,2021-10-05 10:09:35,"Can remove this line now?\n\nhttps://github.com/bitcoin/bitcoin/blob/1685d1221e7e605ff073df94e223420691afa079/src/util/syscall_sandbox.cpp#L179",https://github.com/bitcoin/bitcoin/pull/23178#issuecomment-934264942,934264942,
practicalswift,2021-10-05 10:20:15,"@MarcoFalke Yes, I think these two no longer need to be conditional:\n\n```c++\n#if defined(__NR_getrandom)\n    {__NR_getrandom, ""getrandom""},\n#endif // defined(__NR_getrandom)\n…\n#if defined(__NR_membarrier)\n    {__NR_membarrier, ""membarrier""},\n#endif // defined(__NR_membarrier)\n```\n",https://github.com/bitcoin/bitcoin/pull/23178#issuecomment-934273149,934273149,
laanwj,2021-10-05 12:02:18,"> Can remove this line now?\n\nI'm still not decided what I want to do with that table, but i i's supposed to be more or less platform-independent (see also discussion here: https://github.com/bitcoin/bitcoin/pull/20487#discussion_r712430747 ). I left the conditional like this for platforms that *really* don't have the getrandom/membarrier call.",https://github.com/bitcoin/bitcoin/pull/23178#issuecomment-934344649,934344649,
laanwj,2021-10-05 12:43:09,"Anyhow, removed them and force-pushed. I agree it's also somewhat confusing and they can always be added again.",https://github.com/bitcoin/bitcoin/pull/23178#issuecomment-934375890,934375890,
practicalswift,2021-10-05 12:56:12,"cr ACK 2d0279987ef04edda5f61c171768b9527cc936cc\n\nThanks for quickly resolving this!",https://github.com/bitcoin/bitcoin/pull/23178#issuecomment-934386296,934386296,
practicalswift,2021-10-05 14:15:42,"FWIW this is how [`minijail`](https://google.github.io/minijail/) (a sandboxing and containment tool used in Chrome OS and Android) handles this:\n\n```\n/* Ideally minijail is compiled against a modern libc, which has modern copies\n * of Linux uapi for ioctls, and unistd.h for syscalls. However, sometimes this\n * isn't possible - such as when building with the Android host toolchain - so\",https://github.com/bitcoin/bitcoin/pull/23178#issuecomment-934454218,934454218,
laanwj,2021-10-05 14:24:35,Thanks—we could do the same when we support sandboxing on multiple platforms.,https://github.com/bitcoin/bitcoin/pull/23178#issuecomment-934461721,934461721,
DrahtBot,2021-10-06 07:59:05,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 816e15ee81a2029cde6b4f9fe6fb93e75478c903<br>(master) | commit 0afd60bcfb0a7f853210eb2c3af94283ba182b8d<br>(master and this pull) |\n|--|--|--|\n| *.tar.gz | [`1350388139b5ea3d...`](https://drahtbot.space/guix/bitcoin/bitcoin/816e15ee81a2029cde6b4f9fe6fb93e75478c903/bitcoin-816e15ee81a2.tar.gz) | [`5ddf35dfc76a4aa8...`](htt,https://github.com/bitcoin/bitcoin/pull/23178#issuecomment-935695164,935695164,
