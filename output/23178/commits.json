[
  {
    "sha": "8289d19ea5d9935883f71a32e2f8f82ba7a283fb",
    "node_id": "C_kwDOABII59oAKDgyODlkMTllYTVkOTkzNTg4M2Y3MWEzMmUyZjhmODJiYTdhMjgzZmI",
    "commit": {
      "author": {
        "name": "W. J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-10-04T22:07:44Z"
      },
      "committer": {
        "name": "W. J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-10-05T06:15:04Z"
      },
      "message": "util: Define SECCOMP_RET_KILL_PROCESS if not provided by the headers\n\nDefine `SECCOMP_RET_KILL_PROCESS` as it isn't defined in the headers, as\nis the case for the GUIX build on this platform.",
      "tree": {
        "sha": "fce4e5ef16b166c24b702b571175a4e745267f55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fce4e5ef16b166c24b702b571175a4e745267f55"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8289d19ea5d9935883f71a32e2f8f82ba7a283fb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8289d19ea5d9935883f71a32e2f8f82ba7a283fb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8289d19ea5d9935883f71a32e2f8f82ba7a283fb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8289d19ea5d9935883f71a32e2f8f82ba7a283fb/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e530c6352c3e3d4f2936bbbb1bcb34ff9ca6378",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e530c6352c3e3d4f2936bbbb1bcb34ff9ca6378",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e530c6352c3e3d4f2936bbbb1bcb34ff9ca6378"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c6957be09c231b296630da677a2cc1882665dd2e",
        "filename": "src/util/syscall_sandbox.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8289d19ea5d9935883f71a32e2f8f82ba7a283fb/src/util/syscall_sandbox.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8289d19ea5d9935883f71a32e2f8f82ba7a283fb/src/util/syscall_sandbox.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/syscall_sandbox.cpp?ref=8289d19ea5d9935883f71a32e2f8f82ba7a283fb",
        "patch": "@@ -40,6 +40,10 @@ bool g_syscall_sandbox_log_violation_before_terminating{false};\n #error Syscall sandbox is an experimental feature currently available only under Linux x86-64.\n #endif // defined(__x86_64__)\n \n+#ifndef SECCOMP_RET_KILL_PROCESS\n+#define SECCOMP_RET_KILL_PROCESS 0x80000000U\n+#endif\n+\n // This list of syscalls in LINUX_SYSCALLS is only used to map syscall numbers to syscall names in\n // order to be able to print user friendly error messages which include the syscall name in addition\n // to the syscall number."
      }
    ]
  },
  {
    "sha": "2d0279987ef04edda5f61c171768b9527cc936cc",
    "node_id": "C_kwDOABII59oAKDJkMDI3OTk4N2VmMDRlZGRhNWY2MWMxNzE3NjhiOTUyN2NjOTM2Y2M",
    "commit": {
      "author": {
        "name": "W. J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-10-05T06:13:02Z"
      },
      "committer": {
        "name": "W. J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-10-05T12:42:35Z"
      },
      "message": "util: Make sure syscall numbers used in profile are defined\n\nDefine the following syscall numbers for x86_64, so that the profile\nwill be the same no matter what kernel is built against, including\nkernels that don't have `__NR_statx`:\n```c++\n #define __NR_statx 332\n #define __NR_getrandom 318\n #define __NR_membarrier 324\n```",
      "tree": {
        "sha": "aa7ca6cb9ce8b39d6d24613945a6b8d03229666f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa7ca6cb9ce8b39d6d24613945a6b8d03229666f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d0279987ef04edda5f61c171768b9527cc936cc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d0279987ef04edda5f61c171768b9527cc936cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2d0279987ef04edda5f61c171768b9527cc936cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d0279987ef04edda5f61c171768b9527cc936cc/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8289d19ea5d9935883f71a32e2f8f82ba7a283fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8289d19ea5d9935883f71a32e2f8f82ba7a283fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8289d19ea5d9935883f71a32e2f8f82ba7a283fb"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 14,
      "deletions": 8
    },
    "files": [
      {
        "sha": "0e2295ead8f9d0cffbc566751108a33bb709a55b",
        "filename": "src/util/syscall_sandbox.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 8,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d0279987ef04edda5f61c171768b9527cc936cc/src/util/syscall_sandbox.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d0279987ef04edda5f61c171768b9527cc936cc/src/util/syscall_sandbox.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/syscall_sandbox.cpp?ref=2d0279987ef04edda5f61c171768b9527cc936cc",
        "patch": "@@ -44,6 +44,20 @@ bool g_syscall_sandbox_log_violation_before_terminating{false};\n #define SECCOMP_RET_KILL_PROCESS 0x80000000U\n #endif\n \n+// Define system call numbers for x86_64 that are referenced in the system call profile\n+// but not provided by the kernel headers used in the GUIX build.\n+#ifndef __NR_statx\n+#define __NR_statx 332\n+#endif\n+\n+#ifndef __NR_getrandom\n+#define __NR_getrandom 318\n+#endif\n+\n+#ifndef __NR_membarrier\n+#define __NR_membarrier 324\n+#endif\n+\n // This list of syscalls in LINUX_SYSCALLS is only used to map syscall numbers to syscall names in\n // order to be able to print user friendly error messages which include the syscall name in addition\n // to the syscall number.\n@@ -162,9 +176,7 @@ const std::map<uint32_t, std::string> LINUX_SYSCALLS{\n     {__NR_getpmsg, \"getpmsg\"},\n     {__NR_getppid, \"getppid\"},\n     {__NR_getpriority, \"getpriority\"},\n-#if defined(__NR_getrandom)\n     {__NR_getrandom, \"getrandom\"},\n-#endif // defined(__NR_getrandom)\n     {__NR_getresgid, \"getresgid\"},\n     {__NR_getresuid, \"getresuid\"},\n     {__NR_getrlimit, \"getrlimit\"},\n@@ -212,9 +224,7 @@ const std::map<uint32_t, std::string> LINUX_SYSCALLS{\n     {__NR_lstat, \"lstat\"},\n     {__NR_madvise, \"madvise\"},\n     {__NR_mbind, \"mbind\"},\n-#if defined(__NR_membarrier)\n     {__NR_membarrier, \"membarrier\"},\n-#endif // defined(__NR_membarrier)\n     {__NR_memfd_create, \"memfd_create\"},\n     {__NR_migrate_pages, \"migrate_pages\"},\n     {__NR_mincore, \"mincore\"},\n@@ -515,9 +525,7 @@ class SeccompPolicyBuilder\n     {\n         allowed_syscalls.insert(__NR_brk);     // change data segment size\n         allowed_syscalls.insert(__NR_madvise); // give advice about use of memory\n-#if defined(__NR_membarrier)\n         allowed_syscalls.insert(__NR_membarrier); // issue memory barriers on a set of threads\n-#endif // defined(__NR_membarrier)\n         allowed_syscalls.insert(__NR_mlock);    // lock memory\n         allowed_syscalls.insert(__NR_mmap);     // map files or devices into memory\n         allowed_syscalls.insert(__NR_mprotect); // set protection on a region of memory\n@@ -595,9 +603,7 @@ class SeccompPolicyBuilder\n \n     void AllowGetRandom()\n     {\n-#if defined(__NR_getrandom)\n         allowed_syscalls.insert(__NR_getrandom); // obtain a series of random bytes\n-#endif // defined(__NR_getrandom)\n     }\n \n     void AllowGetSimpleId()"
      }
    ]
  }
]