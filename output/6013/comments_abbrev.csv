laanwj,2015-04-15T08:29:57Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-93259998,93259998,
jgarzik,2015-04-15T14:50:05Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-93431226,93431226,
jonasschnelli,2015-04-15T15:36:24Z,Concept ACK.\nMisses RPC test.\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-93452926,93452926,
paveljanik,2015-04-15T17:06:22Z,"Yup, I plan to add them in the evening or tomorrow.\n",https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-93488146,93488146,
paveljanik,2015-04-15T19:12:18Z,"nit addressed, squashed, ready.\n",https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-93535975,93535975,
jonasschnelli,2015-04-21T18:14:36Z,Tested ACK.\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-94893325,94893325,
paveljanik,2015-04-28T20:40:18Z,"Other reviews, please?\n",https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-97201104,97201104,
jgarzik,2015-06-11T19:37:10Z,tested ACK\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-111255120,111255120,
jonasschnelli,2015-06-11T19:38:29Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-111255526,111255526,
paveljanik,2015-06-11T20:08:28Z,Rebased (changed the header style in README to match the other entries).\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-111262380,111262380,
paveljanik,2015-06-15T20:56:41Z,Needs to be adapted to UniValue. Tomorrow.\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-112208983,112208983,
paveljanik,2015-06-16T06:29:13Z,Travis CI build fails only in one environment because of the comparison tool.\nReady for merge.\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-112308718,112308718,
jonasschnelli,2015-06-16T07:03:34Z,"I like this PR.\n\nBut, am i alone with the feeling that calling a RPC method (`getrawmempool`, `getmempoolinfo`) will end up in REST/RPC dependency and smells after a unideal design? Duplicating code would also be kinda stupid. Maybe factoring out some code to a independent helper class/file?\n\nBut however reACK.\n",https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-112314779,112314779,
paveljanik,2015-06-16T11:49:14Z,"@jonasschnelli Something like `CTxMemPool::toJSON` factored out from `get*mempool*`? Or do you prefer interface similar to `TxToJSON` (defined in rpc, used in rest)?\n\nI do not have a problem to refactor once agreed, but in the next PR please.\n",https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-112395859,112395859,
sipa,2015-06-16T11:53:30Z,"No JSON conversion code inside core classes, please. That's something that belongs in the RPC glue layer.\n",https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-112397854,112397854,
jonasschnelli,2015-06-16T14:57:21Z,For sure we don't want json code within core classes. But i think calling a RPC function within REST should be avoided. Maybe something like `blockToJSON` or similar. Just factor out the json encoding and  for now â€“ place it within the `rpcblockchain.cpp`.\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-112461432,112461432,
paveljanik,2015-06-17T07:17:26Z,@jonasschnelli Please review. Thanks.\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-112686852,112686852,
jonasschnelli,2015-06-17T07:24:13Z,design wise this looks much better.\nutACK. Will give it a real testshot soon.\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-112691021,112691021,
jonasschnelli,2015-07-02T19:59:18Z,"Tested ACK.\n\nTwo nits:\na) missing support for HEX/BIN (would make it consistence).\naa) could be serialized vector of transactions for `mempool/content` and two serialized int64_t for `mempool/info`\nb) your diff looks somehow strange (look at `UniValue getrawmempool(const UniValue& params, bool fHelp)` remove L150-185, re-add at L169-232). Maybe shuffle some lines to avoid this?\n",https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-118150623,118150623,
paveljanik,2015-07-02T20:27:43Z,@jonasschnelli Thanks for review.\n- hex/bin: Does this make sense at all here? I do not think so. I modelled info it similar to `getchaininfo`.\n- does git diff --diff-algorithm=minimal help you?\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-118157580,118157580,
jonasschnelli,2015-07-02T20:32:16Z,"> hex/bin: Does this make sense at all here? I do not think so. I modelled info it similar to getchaininfo.\n\nIf someone actively polls the mempool over REST, he could probably save CPU time and bandwidth if there would be a BIN/HEX support. But as said: low prio.\n\n> does git diff --diff-algorithm=minimal help you?\n\nThanks. Yes: https://github.com/bitcoin/bitcoin/pull/6013/files?1 (the 1 at t",https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-118159488,118159488,
paveljanik,2015-07-02T20:38:59Z,"Hmm, 1 at the end seems to not have any effect here (compared with two curl calls and diff on the output).\n",https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-118160934,118160934,
paveljanik,2015-07-23T19:28:46Z,"Rebased.\nAdded ""usage"" to the documentation.\n",https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-124218255,124218255,
jgarzik,2015-07-23T19:31:39Z,re-ACK\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-124218812,124218812,
jonasschnelli,2015-08-05T12:53:59Z,Needs rebase.\nAnything holding this back?\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-127988186,127988186,
paveljanik,2015-08-06T17:47:49Z,Rebased (to accomodate #6504 changes).\nReady for merge IMO.\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-128456976,128456976,
btcdrak,2015-08-07T17:21:11Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-128771344,128771344,
TheBlueMatt,2015-08-08T15:27:59Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-128990480,128990480,
paveljanik,2015-08-13T21:36:21Z,@laanwj Can you please have a look. Thank you.\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-130851716,130851716,
jgarzik,2015-08-13T23:43:50Z,"I can merge, after this latest commit is squashed.\n",https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-130887614,130887614,
paveljanik,2015-08-14T05:02:01Z,Squashed.\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-130966565,130966565,
jonasschnelli,2015-08-14T06:01:14Z,Re ACK\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-130983032,130983032,
jonasschnelli,2015-08-14T06:52:05Z,@Diapolo: i think it's unfair to start nitpicking at this stage of the PR.\n\n**Let's get this PR merged.**\n\nAnyone can open a cleanup PR over @trivial.\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-130996767,130996767,
Diapolo,2015-08-14T06:53:39Z,"ACK and merge is fine with me, I just comment when I've got time or start reading a pull, nothing more ;).\n",https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-130996918,130996918,
dcousens,2015-08-14T09:11:10Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6013#issuecomment-131033691,131033691,
jonasschnelli,2015-04-15T18:25:44Z,I'm not sure if we should just loop through RPC commands. I know that i did the same when i added the `/chaininfos` REST command. This will tie the REST interface to the current RPC implementation. But duplicating code is also something we should avoid.\nI don't have a solution here i just wanted to bring up this concern.\n,https://github.com/bitcoin/bitcoin/pull/6013#discussion_r28447874,28447874,src/rest.cpp
jonasschnelli,2015-04-15T18:27:04Z,very little nit: indent.\n,https://github.com/bitcoin/bitcoin/pull/6013#discussion_r28448001,28448001,src/rest.cpp
TheBlueMatt,2015-08-08T14:03:19Z,Nit: informations->information\n,https://github.com/bitcoin/bitcoin/pull/6013#discussion_r36578508,36578508,doc/REST-interface.md
TheBlueMatt,2015-08-08T14:06:24Z,Its not clear you mean that both info and contents only support JSON.\n,https://github.com/bitcoin/bitcoin/pull/6013#discussion_r36578525,36578525,doc/REST-interface.md
TheBlueMatt,2015-08-08T15:25:27Z,"Nit: rest_chaininfo just aclls the getblockchaininfo RPC function directly. Though your change makes the code a bit cleaner, maybe split the commits up to just call the RPC first, then move the code around in a separate commit.\n",https://github.com/bitcoin/bitcoin/pull/6013#discussion_r36579134,36579134,src/rest.cpp
paveljanik,2015-08-08T15:26:08Z,This is why I wrote the same sentence in both parts...\n,https://github.com/bitcoin/bitcoin/pull/6013#discussion_r36579138,36579138,doc/REST-interface.md
paveljanik,2015-08-08T15:30:09Z,Fixed in the SQUASHME commit.\n,https://github.com/bitcoin/bitcoin/pull/6013#discussion_r36579159,36579159,doc/REST-interface.md
TheBlueMatt,2015-08-08T15:31:24Z,"Oh, missed that :)\n",https://github.com/bitcoin/bitcoin/pull/6013#discussion_r36579161,36579161,doc/REST-interface.md
paveljanik,2015-08-08T16:07:57Z,"If I should split it into more commits, I'd prefer the other way round:\n- separate `mempoolInfoToJSON` and `mempoolToJSON` and call the from RPC functions (ie. prepare the current code for REST)\n- add REST functions\n\nShould I really split it?\n",https://github.com/bitcoin/bitcoin/pull/6013#discussion_r36579481,36579481,src/rest.cpp
TheBlueMatt,2015-08-08T16:11:52Z,"Order them either way. I dont care too much, I just always prefer easier-to-read diffs over fewer commits, but its really up to you. I ACKed it as-is, was more of a suggestion than anything.\n",https://github.com/bitcoin/bitcoin/pull/6013#discussion_r36579499,36579499,src/rest.cpp
Diapolo,2015-08-14T05:51:01Z,"You could (in the future) start adding `std::` in front of such code, as that means we can more easily get rid of `using namespace std;` :).\n",https://github.com/bitcoin/bitcoin/pull/6013#discussion_r37051251,37051251,src/rest.cpp
Diapolo,2015-08-14T05:51:57Z,Minor nit: You also could remove the spaces before the casts here.\n,https://github.com/bitcoin/bitcoin/pull/6013#discussion_r37051280,37051280,src/rpcblockchain.cpp
paveljanik,2015-08-14T06:17:32Z,Eh? Please read the whole diff (I did not change that code at all).\n\nSpace before the cast? I hope we do not have a rule do not add a space after comma...\n,https://github.com/bitcoin/bitcoin/pull/6013#discussion_r37052088,37052088,src/rpcblockchain.cpp
Diapolo,2015-08-14T06:40:04Z,"Don't be aggressive, I wrote minor nit and I'm well aware you just copied the code. But if there was something left to do you could've just change to `(int64_t)mempool.size()`, what's the problem. No there is no such rule!\n",https://github.com/bitcoin/bitcoin/pull/6013#discussion_r37052835,37052835,src/rpcblockchain.cpp
paveljanik,2015-08-14T06:48:35Z,So you mean _after_ the cast? I'd write it the same way it is written anyway.\n,https://github.com/bitcoin/bitcoin/pull/6013#discussion_r37053165,37053165,src/rpcblockchain.cpp
