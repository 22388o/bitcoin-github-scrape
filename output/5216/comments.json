[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/62106414",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-62106414",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5216",
    "id": 62106414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTA2NDE0",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-07T07:03:35Z",
    "updated_at": "2014-11-07T07:07:46Z",
    "author_association": "NONE",
    "body": "@gavinandresen @mikehearn Gavin, Mike, can you help me out with BIP70, I need to understand for some code I want to use, if even for insecure payment-requests (`pki_type() == \"none\"`) the payment-request has to reside on a webserver secured by SSL, so that for Bitcoin Core it's safe to assume the connection is always SSL (port 443) secured.\n\nI only found this `PaymentDetails.payment_url should be secure against man-in-the-middle attacks that might alter Payment.refund_to (if using HTTP, it must be TLS-protected).`, does this lead to \"you HAVE to use https\" if you want to be a BIP70 compatible merchant server?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/62106414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/62136872",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-62136872",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5216",
    "id": 62136872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTM2ODcy",
    "user": {
      "login": "mikehearn",
      "id": 971089,
      "node_id": "MDQ6VXNlcjk3MTA4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/971089?u=f32bbe8d8d0f9e10b1387f0aa582b1ee83b8aac5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mikehearn",
      "html_url": "https://github.com/mikehearn",
      "followers_url": "https://api.github.com/users/mikehearn/followers",
      "following_url": "https://api.github.com/users/mikehearn/following{/other_user}",
      "gists_url": "https://api.github.com/users/mikehearn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mikehearn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mikehearn/subscriptions",
      "organizations_url": "https://api.github.com/users/mikehearn/orgs",
      "repos_url": "https://api.github.com/users/mikehearn/repos",
      "events_url": "https://api.github.com/users/mikehearn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mikehearn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-07T12:40:45Z",
    "updated_at": "2014-11-07T12:40:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think most implementations enforce it, but serving any kind of payment request for any kind of payment network without SSL, not just bitcoin, would seem very dangerous and ill advised.\n\nWhen the payment request is itself signed, then using SSL only adds some privacy but not security. It's still a good idea though.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/62136872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/62897747",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-62897747",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5216",
    "id": 62897747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODk3NzQ3",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T14:31:01Z",
    "updated_at": "2014-11-13T14:31:16Z",
    "author_association": "NONE",
    "body": "@mikehearn Thanks for your info. I found what I needed :).\n@laanwj Any time for this?\n@fanquake Ping :)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/62897747/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/63562570",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-63562570",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5216",
    "id": 63562570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTYyNTcw",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-18T23:03:39Z",
    "updated_at": "2014-11-18T23:03:39Z",
    "author_association": "MEMBER",
    "body": "@Diapolo I'll take a look.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/63562570/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/63630077",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-63630077",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5216",
    "id": 63630077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjMwMDc3",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-19T12:02:28Z",
    "updated_at": "2014-11-19T12:02:28Z",
    "author_association": "NONE",
    "body": "This now could need some initial review as the pull gets to big otheriwse...\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/63630077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/64211957",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-64211957",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5216",
    "id": 64211957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjExOTU3",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-24T15:41:52Z",
    "updated_at": "2014-11-24T15:41:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Code review ACK.\n\nCan you add a unit test to src/qt/test/paymentservertests.cpp to test the new DoS-protection code?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/64211957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/64422667",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-64422667",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5216",
    "id": 64422667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDIyNjY3",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-25T16:02:09Z",
    "updated_at": "2014-11-25T16:02:09Z",
    "author_association": "NONE",
    "body": "@gavinandresen Thanks for your review, I'm taking a look at your suggestion about adding a test now.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/64422667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/64888355",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-64888355",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5216",
    "id": 64888355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODg4MzU1",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-28T12:20:37Z",
    "updated_at": "2014-11-28T12:20:37Z",
    "author_association": "NONE",
    "body": "@gavinandresen Not sure how to test the new code, as the DoS rules are in `PaymentServer::readPaymentRequestFromFile()` and `PaymentServer::netRequestFinished()`, which are currently not used in the paymentservertests. Also the NEW code in `PaymentServer::netRequestFinished()` isn't triggerable currently either, as we deal with local payment-request-data supplied by `paymentrequestdata.h`.\n\nI could perhaps add a dummy file with garbage data > BIP70_MAX_PAYMENTREQUEST_SIZE and then use `PaymentServer::readPaymentRequestFromFile()` with that. Is that what you are thinking about?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/64888355/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65761488",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-65761488",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5216",
    "id": 65761488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzYxNDg4",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-05T08:42:39Z",
    "updated_at": "2014-12-05T08:42:39Z",
    "author_association": "NONE",
    "body": "@gavinandresen Test added, can you review!?\n@laanwj Any chance to get this in for 0.10?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65761488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65769121",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-65769121",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5216",
    "id": 65769121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzY5MTIx",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-05T10:01:58Z",
    "updated_at": "2014-12-05T10:01:58Z",
    "author_association": "MEMBER",
    "body": "Sure, though it'll first have to pass travis:\n\n```\nqt/test/paymentservertests.cpp: In member function \u2018void PaymentServerTests::paymentServerTests()\u2019:\n\nqt/test/paymentservertests.cpp:121:5: error: \u2018readPaymentRequestFromFile\u2019 was not declared in this scope\n\nmake[2]: *** [qt/test/qt_test_test_bitcoin_qt-paymentservertests.o] Error 1\n\nmake[2]: Leaving directory `/home/travis/build/bitcoin/bitcoin/bitcoin-i686-pc-linux-gnu/src'\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65769121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65771705",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-65771705",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5216",
    "id": 65771705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzcxNzA1",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-05T10:26:18Z",
    "updated_at": "2014-12-05T10:26:18Z",
    "author_association": "NONE",
    "body": "@laanwj I guess the code was missing `PaymentServer::` in front of the function ;).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65771705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65898664",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-65898664",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5216",
    "id": 65898664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODk4NjY0",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-06T14:29:06Z",
    "updated_at": "2014-12-06T14:29:06Z",
    "author_association": "NONE",
    "body": "Now passes Travis!\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65898664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/66123379",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-66123379",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5216",
    "id": 66123379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTIzMzc5",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-08T14:35:28Z",
    "updated_at": "2014-12-08T14:43:37Z",
    "author_association": "MEMBER",
    "body": "Ok did some testing with regard to Qt5's http client. Created a simple http server that serves an arbitrary number of bytes with the correct Content-Type, in this case 50MB:\n\n``` python\n#!/usr/bin/python3\n'''\nbitcoin:?r=http://127.0.0.1:8000/test\n'''\nfrom http.server import HTTPServer, BaseHTTPRequestHandler\n\nclass Handler(BaseHTTPRequestHandler):\n    def do_GET(self):\n        self.send_response(200)\n        self.send_header(\"Content-type\", \"application/bitcoin-payment\")\n        self.end_headers()\n        count = 0\n        while count < 50000:\n            self.wfile.write(b' ' * 1000)\n            count += 1\n\nserver_class=HTTPServer\nhandler_class=Handler\nserver_address = ('', 8000)\nhttpd = server_class(server_address, handler_class)\nhttpd.serve_forever()\n```\n\nExtended netRequestFinished with logging:\n\n``` patch\ndiff --git a/src/qt/paymentserver.cpp b/src/qt/paymentserver.cpp\nindex 707de55..ead6675 100644\n--- a/src/qt/paymentserver.cpp\n+++ b/src/qt/paymentserver.cpp\n@@ -657,7 +657,10 @@ void PaymentServer::netRequestFinished(QNetworkReply* reply)\n         return;\n     }\n\n+    qWarning() << __func__ << \": size() is \" << reply->size() << \" bytesAvailable() is \" << reply->bytesAvailable();\n+\n     QByteArray data = reply->readAll();\n+    qWarning() << __func__ << \": data.size() is \" << data.size();\n\n     QString requestType = reply->request().attribute(QNetworkRequest::User).toString();\n     if (requestType == \"PaymentRequest\")\n```\n\nThen made qt fetch the `payment request`:\n\n```\n2014-12-08 14:25:19 GUI: netRequestFinished : size() is  50000000  bytesAvailable() is  50000000 \n2014-12-08 14:25:19 GUI: netRequestFinished : data.size() is  50000000 \n```\n\nConclusion\n\n1) qt will happily consume however many bytes are served, and reads everything into memory, even if this means to crash. This happens before the `finished` signal is even raised.\n2) `.size()`,  `.bytesAvailable()` (before `readAll`) and `data.size()` (after `readAll`) return the same number\n\nThe DoS protection code in this pull at most protects against parsing a huge protocol buffer. Which is a good start, although it would be nice to stop reading at some point when the server keeps sending data. OTOH I suppose this is an unlikely attack over the internet as the adversary has to actually send the data.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/66123379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/66126531",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-66126531",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5216",
    "id": 66126531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTI2NTMx",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-08T14:56:26Z",
    "updated_at": "2014-12-08T14:56:26Z",
    "author_association": "MEMBER",
    "body": "@diapolo you don't have to solve that issue in this pull, ACK on these changes, they don't make matters worse,\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/66126531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/66243302",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-66243302",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5216",
    "id": 66243302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjQzMzAy",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-09T07:11:57Z",
    "updated_at": "2014-12-09T07:11:57Z",
    "author_association": "NONE",
    "body": "@laanwj Is it okay to say this request is done!? As I said I have some more changes I'd like to add for payment requests. If you agree I would base new ones on this (or even better this gets merged soon).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/66243302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/20571214",
    "pull_request_review_id": null,
    "id": 20571214,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTcxMjE0",
    "diff_hunk": "@@ -646,13 +664,26 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n void PaymentServer::netRequestFinished(QNetworkReply* reply)\n {\n     reply->deleteLater();\n-    if (reply->error() != QNetworkReply::NoError)\n-    {\n+\n+    // BIP70 DoS protection\n+    if (reply->size() > BIP70_MAX_PAYMENTREQUEST_SIZE) {\n+        QString msg = tr(\"Payment request %2 is too large (%3 bytes, allowed %4 bytes).\")\n+            .arg(__func__)\n+            .arg(reply->request().url().toString())\n+            .arg(reply->size())\n+            .arg(BIP70_MAX_PAYMENTREQUEST_SIZE);\n+\n+        qWarning() << QString(\"PaymentServer::%1:\").arg(__func__) << msg;",
    "path": "src/qt/paymentserver.cpp",
    "position": 201,
    "original_position": 171,
    "commit_id": "5ec654b8ceb4c5f9aafda2b62a0aa6639d738654",
    "original_commit_id": "1e0b5b4f349bf91adba0a5afe723d62bb4f9636c",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@laanwj I was thinkig about how I could supply our debug.log without a translated string as that could improve debugging or web searches for that strings. Have you got a nice and clean idea without duplicating the whole string?\n",
    "created_at": "2014-11-19T12:10:43Z",
    "updated_at": "2014-12-08T15:09:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r20571214",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/20571214"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r20571214"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/20571214/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 676,
    "original_line": 676,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/20571871",
    "pull_request_review_id": null,
    "id": 20571871,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTcxODcx",
    "diff_hunk": "@@ -646,13 +664,26 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n void PaymentServer::netRequestFinished(QNetworkReply* reply)\n {\n     reply->deleteLater();\n-    if (reply->error() != QNetworkReply::NoError)\n-    {\n+\n+    // BIP70 DoS protection\n+    if (reply->size() > BIP70_MAX_PAYMENTREQUEST_SIZE) {\n+        QString msg = tr(\"Payment request %2 is too large (%3 bytes, allowed %4 bytes).\")\n+            .arg(__func__)\n+            .arg(reply->request().url().toString())\n+            .arg(reply->size())\n+            .arg(BIP70_MAX_PAYMENTREQUEST_SIZE);\n+\n+        qWarning() << QString(\"PaymentServer::%1:\").arg(__func__) << msg;",
    "path": "src/qt/paymentserver.cpp",
    "position": 201,
    "original_position": 171,
    "commit_id": "5ec654b8ceb4c5f9aafda2b62a0aa6639d738654",
    "original_commit_id": "1e0b5b4f349bf91adba0a5afe723d62bb4f9636c",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I can't think of anything that would be cleaner than just duplicating the message, or logging a different message\n",
    "created_at": "2014-11-19T12:29:09Z",
    "updated_at": "2014-12-08T15:09:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r20571871",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/20571871"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r20571871"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/20571871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 676,
    "original_line": 676,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21448829",
    "pull_request_review_id": null,
    "id": 21448829,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDQ4ODI5",
    "diff_hunk": "@@ -646,13 +664,26 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n void PaymentServer::netRequestFinished(QNetworkReply* reply)\n {\n     reply->deleteLater();\n-    if (reply->error() != QNetworkReply::NoError)\n-    {\n+\n+    // BIP70 DoS protection\n+    if (reply->size() > BIP70_MAX_PAYMENTREQUEST_SIZE) {\n+        QString msg = tr(\"Payment request %2 is too large (%3 bytes, allowed %4 bytes).\")\n+            .arg(__func__)\n+            .arg(reply->request().url().toString())\n+            .arg(reply->size())\n+            .arg(BIP70_MAX_PAYMENTREQUEST_SIZE);\n+\n+        qWarning() << QString(\"PaymentServer::%1:\").arg(__func__) << msg;",
    "path": "src/qt/paymentserver.cpp",
    "position": 201,
    "original_position": 171,
    "commit_id": "5ec654b8ceb4c5f9aafda2b62a0aa6639d738654",
    "original_commit_id": "1e0b5b4f349bf91adba0a5afe723d62bb4f9636c",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I wonder if there is a way to tell Qt to download only a maximum size of request. The problem with handling it in Finished() is that part of the DoS already has been done: we downloaded all the data into memory.\n",
    "created_at": "2014-12-08T12:13:22Z",
    "updated_at": "2014-12-08T15:09:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21448829",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21448829"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21448829"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21448829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 676,
    "original_line": 676,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21449002",
    "pull_request_review_id": null,
    "id": 21449002,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDQ5MDAy",
    "diff_hunk": "@@ -646,13 +664,26 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n void PaymentServer::netRequestFinished(QNetworkReply* reply)\n {\n     reply->deleteLater();\n-    if (reply->error() != QNetworkReply::NoError)\n-    {\n+\n+    // BIP70 DoS protection\n+    if (reply->size() > BIP70_MAX_PAYMENTREQUEST_SIZE) {\n+        QString msg = tr(\"Payment request %2 is too large (%3 bytes, allowed %4 bytes).\")\n+            .arg(__func__)\n+            .arg(reply->request().url().toString())\n+            .arg(reply->size())\n+            .arg(BIP70_MAX_PAYMENTREQUEST_SIZE);\n+\n+        qWarning() << QString(\"PaymentServer::%1:\").arg(__func__) << msg;",
    "path": "src/qt/paymentserver.cpp",
    "position": 201,
    "original_position": 171,
    "commit_id": "5ec654b8ceb4c5f9aafda2b62a0aa6639d738654",
    "original_commit_id": "1e0b5b4f349bf91adba0a5afe723d62bb4f9636c",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Never mind: this is before readAll, so supposedly we _haven't_ read all the data yet.\n",
    "created_at": "2014-12-08T12:19:06Z",
    "updated_at": "2014-12-08T15:09:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21449002",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21449002"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21449002"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21449002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 676,
    "original_line": 676,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21449258",
    "pull_request_review_id": null,
    "id": 21449258,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDQ5MjU4",
    "diff_hunk": "@@ -646,13 +664,26 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n void PaymentServer::netRequestFinished(QNetworkReply* reply)\n {\n     reply->deleteLater();\n-    if (reply->error() != QNetworkReply::NoError)\n-    {\n+\n+    // BIP70 DoS protection\n+    if (reply->size() > BIP70_MAX_PAYMENTREQUEST_SIZE) {\n+        QString msg = tr(\"Payment request %2 is too large (%3 bytes, allowed %4 bytes).\")\n+            .arg(__func__)\n+            .arg(reply->request().url().toString())\n+            .arg(reply->size())\n+            .arg(BIP70_MAX_PAYMENTREQUEST_SIZE);\n+\n+        qWarning() << QString(\"PaymentServer::%1:\").arg(__func__) << msg;",
    "path": "src/qt/paymentserver.cpp",
    "position": 201,
    "original_position": 171,
    "commit_id": "5ec654b8ceb4c5f9aafda2b62a0aa6639d738654",
    "original_commit_id": "1e0b5b4f349bf91adba0a5afe723d62bb4f9636c",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "**However**, as the network is a 'sequential device' it is possible for `readAll()` to return more bytes than `size()`, for example in the case that no ContentLength header was passed. `size()` is effectively useless in this case and just returns how many bytes are in the buffer now.\nA more robust way would be to do `read(BIP70_MAX_PAYMENTREQUEST_SIZE + 1)`, and then check for `>=BIP70_MAX_PAYMENTREQUEST_SIZE` received bytes.\n\nEdit: OK I'm completely confused here. Other sources suggest Qt has downloaded the entire file by the time `finished()` is called and `bytesAvailable()` will tell you how much `readAll()` will return. Which means the above will work, but it doesn't avoid the problem ...\n\nEdit2: QNetworkReply has a setReadBufferSize which _may_ actually limit the read buffer. It defaults to unlimited. But I'm not sure finished() will even be called in that case or it will wait for someone to consume the buffer.\n",
    "created_at": "2014-12-08T12:26:03Z",
    "updated_at": "2014-12-08T15:09:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21449258",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21449258"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21449258"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21449258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 676,
    "original_line": 676,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21450375",
    "pull_request_review_id": null,
    "id": 21450375,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUwMzc1",
    "diff_hunk": "@@ -646,13 +664,26 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n void PaymentServer::netRequestFinished(QNetworkReply* reply)\n {\n     reply->deleteLater();\n-    if (reply->error() != QNetworkReply::NoError)\n-    {\n+\n+    // BIP70 DoS protection\n+    if (reply->size() > BIP70_MAX_PAYMENTREQUEST_SIZE) {\n+        QString msg = tr(\"Payment request %2 is too large (%3 bytes, allowed %4 bytes).\")\n+            .arg(__func__)\n+            .arg(reply->request().url().toString())\n+            .arg(reply->size())\n+            .arg(BIP70_MAX_PAYMENTREQUEST_SIZE);\n+\n+        qWarning() << QString(\"PaymentServer::%1:\").arg(__func__) << msg;",
    "path": "src/qt/paymentserver.cpp",
    "position": 201,
    "original_position": 171,
    "commit_id": "5ec654b8ceb4c5f9aafda2b62a0aa6639d738654",
    "original_commit_id": "1e0b5b4f349bf91adba0a5afe723d62bb4f9636c",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Wow, so now I'm also confused ^^... what can I do to fix/improve what I did here?\nCan we use `QNetworkRequest::ContentLengthHeader` -> Corresponds to the HTTP Content-Length header and contains the length in bytes of the data transmitted?\n",
    "created_at": "2014-12-08T12:54:35Z",
    "updated_at": "2014-12-08T15:09:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21450375",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21450375"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21450375"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21450375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 676,
    "original_line": 676,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21451118",
    "pull_request_review_id": null,
    "id": 21451118,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUxMTE4",
    "diff_hunk": "@@ -646,13 +664,26 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n void PaymentServer::netRequestFinished(QNetworkReply* reply)\n {\n     reply->deleteLater();\n-    if (reply->error() != QNetworkReply::NoError)\n-    {\n+\n+    // BIP70 DoS protection\n+    if (reply->size() > BIP70_MAX_PAYMENTREQUEST_SIZE) {\n+        QString msg = tr(\"Payment request %2 is too large (%3 bytes, allowed %4 bytes).\")\n+            .arg(__func__)\n+            .arg(reply->request().url().toString())\n+            .arg(reply->size())\n+            .arg(BIP70_MAX_PAYMENTREQUEST_SIZE);\n+\n+        qWarning() << QString(\"PaymentServer::%1:\").arg(__func__) << msg;",
    "path": "src/qt/paymentserver.cpp",
    "position": 201,
    "original_position": 171,
    "commit_id": "5ec654b8ceb4c5f9aafda2b62a0aa6639d738654",
    "original_commit_id": "1e0b5b4f349bf91adba0a5afe723d62bb4f9636c",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@laanwj I found that code:\n\n<pre>\nvoid MainWindow::on_download_button_clicked(){\n    QUrl url(\"http://someurl\");\n    QNetworkAccessManager * manager = new QNetworkAccessManager(this);\n    connect(manager, SIGNAL(finished(QNetworkReply*)), this, SLOT(getHeaders(QNetworkReply*)));\n    manager->head(QNetworkRequest(url));\n}\n\nvoid MainWindow::getHeaders(QNetworkReply * reply){\n    if (reply->operation() == QNetworkAccessManager::HeadOperation){\n        int content_length = reply->header(QNetworkRequest::ContentLengthHeader).toInt();\n    }\n}\n</pre>\n\n\nPerhaps we can just start by querying the headers, check the content length and abort if it's > BIP70_MAX_PAYMENTREQUEST_SIZE?\n",
    "created_at": "2014-12-08T13:12:26Z",
    "updated_at": "2014-12-08T15:09:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21451118",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21451118"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21451118"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21451118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 676,
    "original_line": 676,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21456223",
    "pull_request_review_id": null,
    "id": 21456223,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDU2MjIz",
    "diff_hunk": "@@ -646,13 +664,26 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n void PaymentServer::netRequestFinished(QNetworkReply* reply)\n {\n     reply->deleteLater();\n-    if (reply->error() != QNetworkReply::NoError)\n-    {\n+\n+    // BIP70 DoS protection\n+    if (reply->size() > BIP70_MAX_PAYMENTREQUEST_SIZE) {\n+        QString msg = tr(\"Payment request %2 is too large (%3 bytes, allowed %4 bytes).\")\n+            .arg(__func__)\n+            .arg(reply->request().url().toString())\n+            .arg(reply->size())\n+            .arg(BIP70_MAX_PAYMENTREQUEST_SIZE);\n+\n+        qWarning() << QString(\"PaymentServer::%1:\").arg(__func__) << msg;",
    "path": "src/qt/paymentserver.cpp",
    "position": 201,
    "original_position": 171,
    "commit_id": "5ec654b8ceb4c5f9aafda2b62a0aa6639d738654",
    "original_commit_id": "1e0b5b4f349bf91adba0a5afe723d62bb4f9636c",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The server doesn't _have_ to send a `Content-Length` header. \n\nAnd it certainly shouldn't do an extra HEAD-request. This causes double the number of requests and the server may just lie on a HEAD request.\n\nIf it's possible to look at the headers _before_ starting the download one could, for example, reject requests without Content-Length header or with too large content.\n\nHowever, the only robust solution would be to limit the receive buffer, and bail out when it is full.\n",
    "created_at": "2014-12-08T14:48:57Z",
    "updated_at": "2014-12-08T15:09:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21456223",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21456223"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21456223"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21456223/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 676,
    "original_line": 676,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21456896",
    "pull_request_review_id": null,
    "id": 21456896,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDU2ODk2",
    "diff_hunk": "@@ -85,6 +88,9 @@ class PaymentServer : public QObject\n     // OptionsModel is used for getting proxy settings and display unit\n     void setOptionsModel(OptionsModel *optionsModel);\n \n+    // This is now public, because we us it in paymentservertests.cpp\n+    static bool readPaymentRequestFromFile(const QString& filename, PaymentRequestPlus& request);",
    "path": "src/qt/paymentserver.h",
    "position": null,
    "original_position": 40,
    "commit_id": "5ec654b8ceb4c5f9aafda2b62a0aa6639d738654",
    "original_commit_id": "b964ebd4fb26bbd646a15ba2fea6ca3de3488e02",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "s/us/use/\n",
    "created_at": "2014-12-08T14:58:18Z",
    "updated_at": "2014-12-08T15:09:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21456896",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21456896"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21456896"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21456896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 92,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21457781",
    "pull_request_review_id": null,
    "id": 21457781,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDU3Nzgx",
    "diff_hunk": "@@ -85,6 +88,9 @@ class PaymentServer : public QObject\n     // OptionsModel is used for getting proxy settings and display unit\n     void setOptionsModel(OptionsModel *optionsModel);\n \n+    // This is now public, because we us it in paymentservertests.cpp\n+    static bool readPaymentRequestFromFile(const QString& filename, PaymentRequestPlus& request);",
    "path": "src/qt/paymentserver.h",
    "position": null,
    "original_position": 40,
    "commit_id": "5ec654b8ceb4c5f9aafda2b62a0aa6639d738654",
    "original_commit_id": "b964ebd4fb26bbd646a15ba2fea6ca3de3488e02",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, changed to `use` ;).\n",
    "created_at": "2014-12-08T15:10:29Z",
    "updated_at": "2014-12-08T15:10:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21457781",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21457781"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21457781"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21457781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 92,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21931398",
    "pull_request_review_id": null,
    "id": 21931398,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTMxMzk4",
    "diff_hunk": "@@ -646,13 +664,26 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n void PaymentServer::netRequestFinished(QNetworkReply* reply)\n {\n     reply->deleteLater();\n-    if (reply->error() != QNetworkReply::NoError)\n-    {\n+\n+    // BIP70 DoS protection\n+    if (reply->size() > BIP70_MAX_PAYMENTREQUEST_SIZE) {\n+        QString msg = tr(\"Payment request %2 is too large (%3 bytes, allowed %4 bytes).\")\n+            .arg(__func__)\n+            .arg(reply->request().url().toString())\n+            .arg(reply->size())\n+            .arg(BIP70_MAX_PAYMENTREQUEST_SIZE);\n+\n+        qWarning() << QString(\"PaymentServer::%1:\").arg(__func__) << msg;",
    "path": "src/qt/paymentserver.cpp",
    "position": 201,
    "original_position": 171,
    "commit_id": "5ec654b8ceb4c5f9aafda2b62a0aa6639d738654",
    "original_commit_id": "1e0b5b4f349bf91adba0a5afe723d62bb4f9636c",
    "user": {
      "login": "SergioDemianLerner",
      "id": 1752347,
      "node_id": "MDQ6VXNlcjE3NTIzNDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1752347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SergioDemianLerner",
      "html_url": "https://github.com/SergioDemianLerner",
      "followers_url": "https://api.github.com/users/SergioDemianLerner/followers",
      "following_url": "https://api.github.com/users/SergioDemianLerner/following{/other_user}",
      "gists_url": "https://api.github.com/users/SergioDemianLerner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SergioDemianLerner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SergioDemianLerner/subscriptions",
      "organizations_url": "https://api.github.com/users/SergioDemianLerner/orgs",
      "repos_url": "https://api.github.com/users/SergioDemianLerner/repos",
      "events_url": "https://api.github.com/users/SergioDemianLerner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SergioDemianLerner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Have you take any measure to prevent the whole file to be downloaded or this is pending?\n",
    "created_at": "2014-12-16T20:58:42Z",
    "updated_at": "2014-12-16T20:58:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21931398",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21931398"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21931398"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21931398/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 676,
    "original_line": 676,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21958409",
    "pull_request_review_id": null,
    "id": 21958409,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTU4NDA5",
    "diff_hunk": "@@ -646,13 +664,26 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n void PaymentServer::netRequestFinished(QNetworkReply* reply)\n {\n     reply->deleteLater();\n-    if (reply->error() != QNetworkReply::NoError)\n-    {\n+\n+    // BIP70 DoS protection\n+    if (reply->size() > BIP70_MAX_PAYMENTREQUEST_SIZE) {\n+        QString msg = tr(\"Payment request %2 is too large (%3 bytes, allowed %4 bytes).\")\n+            .arg(__func__)\n+            .arg(reply->request().url().toString())\n+            .arg(reply->size())\n+            .arg(BIP70_MAX_PAYMENTREQUEST_SIZE);\n+\n+        qWarning() << QString(\"PaymentServer::%1:\").arg(__func__) << msg;",
    "path": "src/qt/paymentserver.cpp",
    "position": 201,
    "original_position": 171,
    "commit_id": "5ec654b8ceb4c5f9aafda2b62a0aa6639d738654",
    "original_commit_id": "1e0b5b4f349bf91adba0a5afe723d62bb4f9636c",
    "user": {
      "login": "Diapolo",
      "id": 1419649,
      "node_id": "MDQ6VXNlcjE0MTk2NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Diapolo",
      "html_url": "https://github.com/Diapolo",
      "followers_url": "https://api.github.com/users/Diapolo/followers",
      "following_url": "https://api.github.com/users/Diapolo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Diapolo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Diapolo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
      "organizations_url": "https://api.github.com/users/Diapolo/orgs",
      "repos_url": "https://api.github.com/users/Diapolo/repos",
      "events_url": "https://api.github.com/users/Diapolo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Diapolo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There were no addidional changes made after the above discussion with @laanwj. If you come up with something to improve I'm going to pick it up ;).\n",
    "created_at": "2014-12-17T08:38:30Z",
    "updated_at": "2014-12-17T08:38:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21958409",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21958409"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21958409"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5216"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21958409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 676,
    "original_line": 676,
    "side": "RIGHT"
  }
]