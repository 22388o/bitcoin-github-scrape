Diapolo,2014-11-07T07:03:35Z,"@gavinandresen @mikehearn Gavin, Mike, can you help me out with BIP70, I need to understand for some code I want to use, if even for insecure payment-requests (`pki_type() == ""none""`) the payment-request has to reside on a webserver secured by SSL, so that for Bitcoin Core it's safe to assume the connection is always SSL (port 443) secured.\n\nI only found this `PaymentDetails.payment_url should b",https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-62106414,62106414,
mikehearn,2014-11-07T12:40:45Z,"I don't think most implementations enforce it, but serving any kind of payment request for any kind of payment network without SSL, not just bitcoin, would seem very dangerous and ill advised.\n\nWhen the payment request is itself signed, then using SSL only adds some privacy but not security. It's still a good idea though.\n",https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-62136872,62136872,
Diapolo,2014-11-13T14:31:01Z,@mikehearn Thanks for your info. I found what I needed :).\n@laanwj Any time for this?\n@fanquake Ping :)\n,https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-62897747,62897747,
fanquake,2014-11-18T23:03:39Z,@Diapolo I'll take a look.\n,https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-63562570,63562570,
Diapolo,2014-11-19T12:02:28Z,This now could need some initial review as the pull gets to big otheriwse...\n,https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-63630077,63630077,
gavinandresen,2014-11-24T15:41:52Z,Code review ACK.\n\nCan you add a unit test to src/qt/test/paymentservertests.cpp to test the new DoS-protection code?\n,https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-64211957,64211957,
Diapolo,2014-11-25T16:02:09Z,"@gavinandresen Thanks for your review, I'm taking a look at your suggestion about adding a test now.\n",https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-64422667,64422667,
Diapolo,2014-11-28T12:20:37Z,"@gavinandresen Not sure how to test the new code, as the DoS rules are in `PaymentServer::readPaymentRequestFromFile()` and `PaymentServer::netRequestFinished()`, which are currently not used in the paymentservertests. Also the NEW code in `PaymentServer::netRequestFinished()` isn't triggerable currently either, as we deal with local payment-request-data supplied by `paymentrequestdata.h`.\n\nI co",https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-64888355,64888355,
Diapolo,2014-12-05T08:42:39Z,"@gavinandresen Test added, can you review!?\n@laanwj Any chance to get this in for 0.10?\n",https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-65761488,65761488,
laanwj,2014-12-05T10:01:58Z,"Sure, though it'll first have to pass travis:\n\n```\nqt/test/paymentservertests.cpp: In member function ‘void PaymentServerTests::paymentServerTests()’:\n\nqt/test/paymentservertests.cpp:121:5: error: ‘readPaymentRequestFromFile’ was not declared in this scope\n\nmake[2]: *** [qt/test/qt_test_test_bitcoin_qt-paymentservertests.o] Error 1\n\nmake[2]: Leaving directory `/home/travis/build/bitcoin/b",https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-65769121,65769121,
Diapolo,2014-12-05T10:26:18Z,@laanwj I guess the code was missing `PaymentServer::` in front of the function ;).\n,https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-65771705,65771705,
Diapolo,2014-12-06T14:29:06Z,Now passes Travis!\n,https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-65898664,65898664,
laanwj,2014-12-08T14:35:28Z,"Ok did some testing with regard to Qt5's http client. Created a simple http server that serves an arbitrary number of bytes with the correct Content-Type, in this case 50MB:\n\n``` python\n#!/usr/bin/python3\n'''\nbitcoin:?r=http://127.0.0.1:8000/test\n'''\nfrom http.server import HTTPServer, BaseHTTPRequestHandler\n\nclass Handler(BaseHTTPRequestHandler):\n    def do_GET(self):\n        self.send",https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-66123379,66123379,
laanwj,2014-12-08T14:56:26Z,"@diapolo you don't have to solve that issue in this pull, ACK on these changes, they don't make matters worse,\n",https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-66126531,66126531,
Diapolo,2014-12-09T07:11:57Z,@laanwj Is it okay to say this request is done!? As I said I have some more changes I'd like to add for payment requests. If you agree I would base new ones on this (or even better this gets merged soon).\n,https://github.com/bitcoin/bitcoin/pull/5216#issuecomment-66243302,66243302,
Diapolo,2014-11-19T12:10:43Z,@laanwj I was thinkig about how I could supply our debug.log without a translated string as that could improve debugging or web searches for that strings. Have you got a nice and clean idea without duplicating the whole string?\n,https://github.com/bitcoin/bitcoin/pull/5216#discussion_r20571214,20571214,src/qt/paymentserver.cpp
laanwj,2014-11-19T12:29:09Z,"I can't think of anything that would be cleaner than just duplicating the message, or logging a different message\n",https://github.com/bitcoin/bitcoin/pull/5216#discussion_r20571871,20571871,src/qt/paymentserver.cpp
laanwj,2014-12-08T12:13:22Z,I wonder if there is a way to tell Qt to download only a maximum size of request. The problem with handling it in Finished() is that part of the DoS already has been done: we downloaded all the data into memory.\n,https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21448829,21448829,src/qt/paymentserver.cpp
laanwj,2014-12-08T12:19:06Z,"Never mind: this is before readAll, so supposedly we _haven't_ read all the data yet.\n",https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21449002,21449002,src/qt/paymentserver.cpp
laanwj,2014-12-08T12:26:03Z,"**However**, as the network is a 'sequential device' it is possible for `readAll()` to return more bytes than `size()`, for example in the case that no ContentLength header was passed. `size()` is effectively useless in this case and just returns how many bytes are in the buffer now.\nA more robust way would be to do `read(BIP70_MAX_PAYMENTREQUEST_SIZE + 1)`, and then check for `>=BIP70_MAX_PAYMEN",https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21449258,21449258,src/qt/paymentserver.cpp
Diapolo,2014-12-08T12:54:35Z,"Wow, so now I'm also confused ^^... what can I do to fix/improve what I did here?\nCan we use `QNetworkRequest::ContentLengthHeader` -> Corresponds to the HTTP Content-Length header and contains the length in bytes of the data transmitted?\n",https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21450375,21450375,src/qt/paymentserver.cpp
Diapolo,2014-12-08T13:12:26Z,"@laanwj I found that code:\n\n<pre>\nvoid MainWindow::on_download_button_clicked(){\n    QUrl url(""http://someurl"");\n    QNetworkAccessManager * manager = new QNetworkAccessManager(this);\n    connect(manager, SIGNAL(finished(QNetworkReply*)), this, SLOT(getHeaders(QNetworkReply*)));\n    manager->head(QNetworkRequest(url));\n}\n\nvoid MainWindow::getHeaders(QNetworkReply * reply){\n    if (reply",https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21451118,21451118,src/qt/paymentserver.cpp
laanwj,2014-12-08T14:48:57Z,"The server doesn't _have_ to send a `Content-Length` header. \n\nAnd it certainly shouldn't do an extra HEAD-request. This causes double the number of requests and the server may just lie on a HEAD request.\n\nIf it's possible to look at the headers _before_ starting the download one could, for example, reject requests without Content-Length header or with too large content.\n\nHowever, the only r",https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21456223,21456223,src/qt/paymentserver.cpp
laanwj,2014-12-08T14:58:18Z,s/us/use/\n,https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21456896,21456896,src/qt/paymentserver.h
Diapolo,2014-12-08T15:10:29Z,"Thanks, changed to `use` ;).\n",https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21457781,21457781,src/qt/paymentserver.h
SergioDemianLerner,2014-12-16T20:58:42Z,Have you take any measure to prevent the whole file to be downloaded or this is pending?\n,https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21931398,21931398,src/qt/paymentserver.cpp
Diapolo,2014-12-17T08:38:30Z,There were no addidional changes made after the above discussion with @laanwj. If you come up with something to improve I'm going to pick it up ;).\n,https://github.com/bitcoin/bitcoin/pull/5216#discussion_r21958409,21958409,src/qt/paymentserver.cpp
