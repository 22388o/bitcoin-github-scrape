jtimon,2018-02-05T17:33:51Z,"This will need rebase after https://github.com/bitcoin/bitcoin/pull/11739 , won't it?",https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-363159119,363159119,
jnewbery,2018-02-05T18:08:00Z,"> This will need rebase after #11739 , won't it?\n\nThere are no dependencies between the two, but you're correct that there are some minor conflicts in the implementations. I'm happy to rebase if 11739 is merged first.",https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-363169671,363169671,
jnewbery,2018-02-13T16:10:47Z,"Rebased now that #12193 has been merged.\n\nACK @jamesob's 0be1f9d8a6bb2b8c47d6816b46d6764aee3cc06e commit.",https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-365315132,365315132,
jamesob,2018-02-14T18:09:41Z,Biased ACK https://github.com/bitcoin/bitcoin/pull/12360/commits/0be1f9d8a6bb2b8c47d6816b46d6764aee3cc06e,https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-365694953,365694953,
jtimon,2018-02-14T20:08:03Z,utACK 0be1f9d8a6bb2b8c47d6816b46d6764aee3cc06e,https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-365729478,365729478,
jnewbery,2018-03-07T18:43:18Z,rebased,https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-371240941,371240941,
jamesob,2018-03-08T15:36:24Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-371523942,371523942,
jnewbery,2018-03-19T13:31:58Z,Rebased,https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-374212240,374212240,
jnewbery,2018-03-27T13:35:24Z,Rebased,https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-376527057,376527057,
jnewbery,2018-03-29T14:56:43Z,rebased,https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-377262527,377262527,
jnewbery,2018-04-19T21:05:10Z,#11739 is merged. Rebased,https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-382880442,382880442,
MarcoFalke,2018-04-22T00:03:34Z,"Tend to NACK. Just because buried deployments can be done safely doesn't mean they should be done for the sole purpose of code refactoring without substantial motivation, advantages or simplifications. Since this is refactoring consensus code and also changing the consensus rules, I think a writeup on the motivation and tradeoffs is required. Note that none of the statements of the motivation give",https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-383342462,383342462,
MarcoFalke,2018-04-22T14:12:40Z,"Potentially also the mempool, after which #12124 could be rebased and reopened.",https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-383384463,383384463,
jnewbery,2018-04-22T22:48:48Z,"@MarcoFalke - I disagree. Once a softfork is deployed and is sufficiently buried, the activation mechanism is purely academic. Removing complexity and improving the simplicity of the code is motivation enough.\n\n> I think a writeup on the motivation and tradeoffs is required\n\nYes - I intend to send a writeup to the mailing list if this PR is merged.\n\nAs a meta-point, although review and",https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-383418502,383418502,
MarcoFalke,2018-05-09T17:15:51Z,"> Removing complexity and improving the simplicity of the code is motivation enough.\n\nI am not aware of any plans to get rid of the concept of versionbits-deployments, so the ""simplifications and improvements"" of the code are limited to that module of the code and don't have beneficial side-effects or simplifications (such as BIP-90).\n\nI am not saying that the changes can not be made, but ",https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-387810810,387810810,
jnewbery,2018-05-09T19:23:36Z,rebased,https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-387847871,387847871,
sdaftuar,2018-05-10T14:50:48Z,"In my view, segwit activation at _some_ height is the consensus that the software assumes -- given that our own wallet now generates segwit transactions by default it would be internally inconsistent to tolerate being on a chain on which segwit might never be active.  Moreover, we're contemplating merging a change in #13120 that would change the mempool logic to always accept segwit transactions, ",https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-388077138,388077138,
jnewbery,2018-05-21T18:39:12Z,Fixed @MarcoFalke's comment and tidied up p2p_segwit.py a little.,https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-390744160,390744160,
jnewbery,2018-06-06T16:26:03Z,rebased,https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-395130371,395130371,
MarcoFalke,2018-06-06T17:11:15Z,"Could the rpc changes potentially be split up into a separate pull request, to not distract from the consensus changes?",https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-395144435,395144435,
jnewbery,2018-06-06T17:43:08Z,"> Could the rpc changes potentially be split up into a separate pull request, to not distract from the consensus changes?\n\nIt's possible, but this PR already has two ACKs and a Concept ACK. I think that splitting it up would be generating more work for reviewers.",https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-395154440,395154440,
jnewbery,2018-06-12T16:06:46Z,rebased,https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-396645463,396645463,
MarcoFalke,2018-06-12T16:50:06Z,"> It's possible, but this PR already has two ACKs and a Concept ACK. I think that splitting it up would be generating more work for reviewers.\n\nThe ACK are outdated and would need to be re-ACKed on the new commits anyway.",https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-396658777,396658777,
jnewbery,2018-06-12T20:07:28Z,Fixed failing p2p_segwit.py,https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-396716587,396716587,
jnewbery,2018-06-14T19:20:30Z,"This is a revamped version of @jl2012's #11398, which had concept ACKs from @gmaxwell @dcousens and @sdaftuar . This PR also has ACKs from @jamesob and @jtimon .\n\nAre people still interested in this? I haven't had any feedback for the last three rebases (except @MarcoFalke's NACKs), and I'd rather not continue rebasing if people have cooled on this idea.",https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-397409209,397409209,
DrahtBot,2018-07-07T08:45:11Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-403199603,403199603,
jnewbery,2018-07-09T14:42:39Z,Closing - 6 concept ACKs but no review so I guess this isn't worth rebasing.,https://github.com/bitcoin/bitcoin/pull/12360#issuecomment-403503200,403503200,
sipa,2018-02-05T21:59:58Z,Duplicated line?,https://github.com/bitcoin/bitcoin/pull/12360#discussion_r166125724,166125724,src/rpc/blockchain.cpp
promag,2018-02-05T22:01:52Z,Yes? :trollface: ,https://github.com/bitcoin/bitcoin/pull/12360#discussion_r166126145,166126145,src/rpc/blockchain.cpp
promag,2018-02-05T22:04:23Z,Any good reason for reference?,https://github.com/bitcoin/bitcoin/pull/12360#discussion_r166126752,166126752,src/chainparams.cpp
jnewbery,2018-02-05T22:21:27Z,Fixed,https://github.com/bitcoin/bitcoin/pull/12360#discussion_r166130917,166130917,src/rpc/blockchain.cpp
jnewbery,2018-02-05T22:21:36Z,None. Removed.,https://github.com/bitcoin/bitcoin/pull/12360#discussion_r166130947,166130947,src/chainparams.cpp
Empact,2018-02-08T21:04:39Z,Is it helpful to continue referencing the BIP numbers in these comments? I would guess so.,https://github.com/bitcoin/bitcoin/pull/12360#discussion_r167066834,167066834,src/consensus/params.h
jnewbery,2018-02-08T21:27:26Z,Sure. Comments added.,https://github.com/bitcoin/bitcoin/pull/12360#discussion_r167072716,167072716,src/consensus/params.h
dcousens,2018-02-12T12:54:25Z,Why not refer to the BIP numbers solely instead of alternating?,https://github.com/bitcoin/bitcoin/pull/12360#discussion_r167545915,167545915,src/consensus/params.h
MarcoFalke,2018-02-12T12:56:24Z,the segwit deployment covered more than one bip,https://github.com/bitcoin/bitcoin/pull/12360#discussion_r167546381,167546381,src/consensus/params.h
jamesob,2018-02-12T12:57:00Z,"Nit: any reason this isn't just `rv.pushKV(""active"", ...);` for consistency?",https://github.com/bitcoin/bitcoin/pull/12360#discussion_r167546507,167546507,src/rpc/blockchain.cpp
jamesob,2018-02-12T13:08:58Z,We don't seem to have any testing for the contents of this key - is this the case? Happy to either write some for this PR or file a follow-up.,https://github.com/bitcoin/bitcoin/pull/12360#discussion_r167549111,167549111,src/rpc/blockchain.cpp
jamesob,2018-02-12T13:15:44Z,"Curious why removal of this key and others (e.g. `size_on_disk`) is bundled with this changeset. Seems like RPC interface changes should be handled separately.\n\nEdit: looks like these were just removed from the help message; still probably don't want to do that in this changeset, no?",https://github.com/bitcoin/bitcoin/pull/12360#discussion_r167551652,167551652,src/rpc/blockchain.cpp
jnewbery,2018-02-12T13:52:39Z,Requires #12193,https://github.com/bitcoin/bitcoin/pull/12360#discussion_r167560635,167560635,src/rpc/blockchain.cpp
jnewbery,2018-02-12T13:54:10Z,"You're right. `rpc_blockchain.py` should be updated. If you're happy to contribute a commit to add tests, I can include it in this PR.",https://github.com/bitcoin/bitcoin/pull/12360#discussion_r167561009,167561009,src/rpc/blockchain.cpp
jnewbery,2018-02-12T14:07:42Z,Oops. Bad rebase. Should be fixed now.,https://github.com/bitcoin/bitcoin/pull/12360#discussion_r167564397,167564397,src/rpc/blockchain.cpp
jnewbery,2018-02-12T16:14:05Z,ah. It's just been merged. Will rebase.,https://github.com/bitcoin/bitcoin/pull/12360#discussion_r167604687,167604687,src/rpc/blockchain.cpp
jtimon,2018-03-19T18:08:48Z,"This can be done directly in CRegtestParams's constructor, that way, the function UpdateSegwitHeight would not be needed.",https://github.com/bitcoin/bitcoin/pull/12360#discussion_r175533928,175533928,src/init.cpp
jnewbery,2018-03-19T18:38:47Z,"Seems like a good idea, but segwit height is also updated in one of the unit tests:\n\nhttps://github.com/bitcoin/bitcoin/pull/12360/files#diff-d5ba361c5f8be78eb4cc0c787c1fc78eR118\n\nI think we need the `UpdateSegwitHeight()` function call there.",https://github.com/bitcoin/bitcoin/pull/12360#discussion_r175543522,175543522,src/init.cpp
jtimon,2018-03-19T20:44:56Z,"I guess we still need UpdateSegwitHeight() then, or perhaps we can pass the other args (instead of g_args, or rather g_args plus ""-segwitheight=432"") to SelectParams in https://github.com/bitcoin/bitcoin/pull/12360/files#diff-d5ba361c5f8be78eb4cc0c787c1fc78eR54 ?\nI guess not all BasicTestingSetup want 432 there...\n",https://github.com/bitcoin/bitcoin/pull/12360#discussion_r175579091,175579091,src/init.cpp
jnewbery,2018-03-19T20:50:19Z,I think I'll leave it as is for now. It may be possible to tidy this up in a future commit.,https://github.com/bitcoin/bitcoin/pull/12360#discussion_r175580812,175580812,src/init.cpp
MarcoFalke,2018-05-09T22:04:08Z,"It seems odd to add code just for the tests, that has no application outside of regtest. I'd prefer if the code paths in the tests that test segwit can be disabled are just removed. Afterward this code block and all other dead code (`IsScriptWitnessEnabled`, ...) can be discarded.",https://github.com/bitcoin/bitcoin/pull/12360#discussion_r187189477,187189477,src/init.cpp
MarcoFalke,2018-05-10T18:24:36Z,"Comment needs update to remove ""BIP9""?",https://github.com/bitcoin/bitcoin/pull/12360#discussion_r187416352,187416352,test/functional/feature_segwit.py
jnewbery,2018-05-21T18:31:59Z,"I completely agree. The only reason the 'Segwit disabled' code here and elsewhere exists is for `p2p_segwit.py`, where it's used to test whether GBT doesn't return a default witness commitment if segwit is disabled. That's completely circular - we're adding behaviour into the product so we can test whether that behaviour exists.\n\nI'd like to completely overhaul p2p_segwit.py and remove this sp",https://github.com/bitcoin/bitcoin/pull/12360#discussion_r189675177,189675177,src/init.cpp
jnewbery,2018-05-21T18:38:48Z,fixed (here and in `p2p_segwit.py`).,https://github.com/bitcoin/bitcoin/pull/12360#discussion_r189677042,189677042,test/functional/feature_segwit.py
