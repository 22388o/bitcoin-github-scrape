[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/609371900",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#issuecomment-609371900",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18530",
    "id": 609371900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTM3MTkwMA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-05T07:24:58Z",
    "updated_at": "2020-04-05T07:24:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #16890 (rpc: Don't allow to 'estimatesmartfee' in blocksonly mode by darosior)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/609371900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/609414468",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#issuecomment-609414468",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18530",
    "id": 609414468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwOTQxNDQ2OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-05T13:12:24Z",
    "updated_at": "2020-04-05T13:12:24Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/609414468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/615974320",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#issuecomment-615974320",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18530",
    "id": 615974320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTk3NDMyMA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-18T23:11:27Z",
    "updated_at": "2020-04-18T23:11:27Z",
    "author_association": "MEMBER",
    "body": "From travis:\r\n\r\n```\r\ntest/functional/p2p_blocksonly.py:68:83: W291 trailing whitespace\r\n\r\ntest/functional/p2p_blocksonly.py:74:1: W293 blank line contains whitespace\r\n\r\n^---- failure generated from test/lint/lint-python.sh\r\n\r\n\r\nThis diff appears to have added new lines with trailing whitespace.\r\n\r\nThe following changes were suspected:\r\n\r\ndiff --git a/test/functional/p2p_blocksonly.py b/test/functional/p2p_blocksonly.py\r\n\r\n@@ -59,0 +59,20 @@ class P2PBlocksOnly(BitcoinTestFramework):\r\n\r\n+        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\r\n\r\n+\r\n\r\n^---- failure generated from test/lint/lint-whitespace.sh",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/615974320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626253678",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#issuecomment-626253678",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18530",
    "id": 626253678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjI1MzY3OA==",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?u=a30a777c2bbc67ca0edc534f6676bb0506b4c1d4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-10T00:23:02Z",
    "updated_at": "2020-05-10T07:15:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "All comments have been addressed. This PR is ready for review.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626253678/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629820476",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#issuecomment-629820476",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18530",
    "id": 629820476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTgyMDQ3Ng==",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?u=a30a777c2bbc67ca0edc534f6676bb0506b4c1d4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-17T16:02:48Z",
    "updated_at": "2020-05-17T16:02:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "net_processing.cpp file comment has been updated. ready for re-review.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629820476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629828283",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#issuecomment-629828283",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18530",
    "id": 629828283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTgyODI4Mw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-17T16:56:48Z",
    "updated_at": "2020-05-17T16:56:48Z",
    "author_association": "MEMBER",
    "body": "ACK 0ea5d70b4756f376342417e0019490233cb4a918",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629828283/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632072333",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#issuecomment-632072333",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18530",
    "id": 632072333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjA3MjMzMw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-21T13:01:01Z",
    "updated_at": "2020-05-21T13:01:01Z",
    "author_association": "MEMBER",
    "body": "Thanks again for improving documentation and adding tests. This should be ready for merge now.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632072333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403642900",
    "pull_request_review_id": 387777754,
    "id": 403642900,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0MjkwMA==",
    "diff_hunk": "@@ -3,7 +3,7 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test p2p blocksonly\"\"\"\n-\n+from pprint import pprint",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 5,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "d86dba18b06f1558c353beff335f6c03bd406008",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(will remove after debugging)",
    "created_at": "2020-04-05T03:21:04Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r403642900",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403642900"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r403642900"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403642900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 6,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403643020",
    "pull_request_review_id": 387777826,
    "id": 403643020,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0MzAyMA==",
    "diff_hunk": "@@ -55,8 +55,51 @@ def run_test(self):\n         with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=1'.format(txid)]):\n             self.nodes[0].sendrawtransaction(sigtx)\n             self.nodes[0].p2p.wait_for_tx(txid)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid))\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.stop_node(0)\n+        self.start_node(0, [\"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        peerInfo = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peerInfo['whitelisted'], True)\n+        assert_equal(peerInfo['permissions'], ['noban', 'forcerelay', 'relay', 'mempool']) #checkpermission use check permission from p2p_permission\n+\n+        # create a new transaction\n+        prevtx1 = self.nodes[0].getblock(self.nodes[0].getblockhash(2), 2)['tx'][0]\n+        rawtx1 = self.nodes[0].createrawtransaction(\n+            inputs=[{\n+                'txid': prevtx1['txid'],\n+                'vout': 0\n+            }],\n+            outputs=[{\n+                self.nodes[0].get_deterministic_priv_key().address: 50 - 0.00125\n+            }],\n+        )\n+        sigtx1 = self.nodes[0].signrawtransactionwithkey(\n+            hexstring=rawtx1,\n+            privkeys=[self.nodes[0].get_deterministic_priv_key().key],\n+            prevtxs=[{\n+                'txid': prevtx1['txid'],\n+                'vout': 0,\n+                'scriptPubKey': prevtx1['vout'][0]['scriptPubKey']['hex'],\n+            }],\n+        )['hex']\n+        txid1 = self.nodes[0].testmempoolaccept([sigtx1])[0]['txid']\n+        self.nodes[0].p2p.send_message(msg_tx(FromHex(CTransaction(), sigtx1))) # so self is the transaction sender?\n+\n+        pprint(self.nodes[0].p2p.last_message)\n+        pprint(self.nodes[0].p2p.last_message.get('tx'))\n+\n+        with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=0'.format(txid1)]):\n+            self.nodes[0].sendrawtransaction(sigtx1)\n+            self.nodes[0].p2p.wait_for_tx(txid1)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid1))",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 54,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "d86dba18b06f1558c353beff335f6c03bd406008",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I am getting this error on this line: \r\n`File \"/Users/gwang/Documents/bitcoin/test/functional/test_framework/util.py\", line 234, in wait_until\r\n    raise AssertionError(\"Predicate {} not true after {} seconds\".format(predicate_source, timeout))\r\nAssertionError: Predicate ''''\r\n        def test_function():\r\n            assert self.is_connected\r\n            if not self.last_message.get('tx'):\r\n                return False\r\n            return self.last_message['tx'].tx.rehash() == txid\r\n''' not true after 60 seconds`\r\n\r\nI'm a bit confused about why this transaction isn't working, since I constructed it very similarly to the first transaction in this test file. I am still learning the way that this test setup works, and I might have been missing something",
    "created_at": "2020-04-05T03:23:01Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r403643020",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403643020"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r403643020"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403643020/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 99,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403643235",
    "pull_request_review_id": 387777968,
    "id": 403643235,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0MzIzNQ==",
    "diff_hunk": "@@ -55,8 +55,51 @@ def run_test(self):\n         with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=1'.format(txid)]):\n             self.nodes[0].sendrawtransaction(sigtx)\n             self.nodes[0].p2p.wait_for_tx(txid)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid))\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.stop_node(0)\n+        self.start_node(0, [\"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 18,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "d86dba18b06f1558c353beff335f6c03bd406008",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There seem to exist many variations of the \"whitelist\" params and different tests set these params differently. For example, ` [\"-whitelist=127.0.0.1\", \"-whitelistrelay=0\"]`, or ` [\"-whitelist=127.0.0.1\", \"-whitelistrelay=0\"],`, `['-whitelist=noban@127.0.0.1']`, etc. Understanding the nuances between them is a bit challenging after I have done quite a bit of digging. Could someone point me to some resource for this?",
    "created_at": "2020-04-05T03:26:10Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r403643235",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403643235"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r403643235"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403643235/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 63,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403643287",
    "pull_request_review_id": 387777993,
    "id": 403643287,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0MzI4Nw==",
    "diff_hunk": "@@ -55,8 +55,51 @@ def run_test(self):\n         with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=1'.format(txid)]):\n             self.nodes[0].sendrawtransaction(sigtx)\n             self.nodes[0].p2p.wait_for_tx(txid)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid))\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.stop_node(0)\n+        self.start_node(0, [\"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        peerInfo = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peerInfo['whitelisted'], True)\n+        assert_equal(peerInfo['permissions'], ['noban', 'forcerelay', 'relay', 'mempool']) #checkpermission use check permission from p2p_permission",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 23,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "d86dba18b06f1558c353beff335f6c03bd406008",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "not sure if `noban` is necessary to check here",
    "created_at": "2020-04-05T03:26:50Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r403643287",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403643287"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r403643287"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403643287/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 65,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403643527",
    "pull_request_review_id": 387778133,
    "id": 403643527,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0MzUyNw==",
    "diff_hunk": "@@ -55,8 +55,51 @@ def run_test(self):\n         with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=1'.format(txid)]):\n             self.nodes[0].sendrawtransaction(sigtx)\n             self.nodes[0].p2p.wait_for_tx(txid)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid))\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.stop_node(0)\n+        self.start_node(0, [\"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 18,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "d86dba18b06f1558c353beff335f6c03bd406008",
    "user": {
      "login": "RANDALL-hub",
      "id": 63138099,
      "node_id": "MDQ6VXNlcjYzMTM4MDk5",
      "avatar_url": "https://avatars.githubusercontent.com/u/63138099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RANDALL-hub",
      "html_url": "https://github.com/RANDALL-hub",
      "followers_url": "https://api.github.com/users/RANDALL-hub/followers",
      "following_url": "https://api.github.com/users/RANDALL-hub/following{/other_user}",
      "gists_url": "https://api.github.com/users/RANDALL-hub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RANDALL-hub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RANDALL-hub/subscriptions",
      "organizations_url": "https://api.github.com/users/RANDALL-hub/orgs",
      "repos_url": "https://api.github.com/users/RANDALL-hub/repos",
      "events_url": "https://api.github.com/users/RANDALL-hub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RANDALL-hub/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "REVISA LA BASE Y CONTINUA CON LO DEM\u00c1S.",
    "created_at": "2020-04-05T03:30:07Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r403643527",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403643527"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r403643527"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403643527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 63,
    "side": "RIGHT",
    "in_reply_to_id": 403643235
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403700002",
    "pull_request_review_id": 387817487,
    "id": 403700002,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcwMDAwMg==",
    "diff_hunk": "@@ -55,8 +55,51 @@ def run_test(self):\n         with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=1'.format(txid)]):\n             self.nodes[0].sendrawtransaction(sigtx)\n             self.nodes[0].p2p.wait_for_tx(txid)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid))\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.stop_node(0)\n+        self.start_node(0, [\"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 18,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "d86dba18b06f1558c353beff335f6c03bd406008",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think if you add nopersistmempool, it will drop the tx from the mempool and you can reuse it for this test without having to construct it again. In fact the below construction looks similar to the one above, so the resulting tx might be the same, thus leading to test failures.\r\n\r\n```suggestion\r\n        self.start_node(0, [\"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\", \"-nopersistmempool\"])\r\n```",
    "created_at": "2020-04-05T13:10:57Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r403700002",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403700002"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r403700002"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/403700002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 63,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/404979914",
    "pull_request_review_id": 389329192,
    "id": 404979914,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3OTkxNA==",
    "diff_hunk": "@@ -55,8 +55,51 @@ def run_test(self):\n         with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=1'.format(txid)]):\n             self.nodes[0].sendrawtransaction(sigtx)\n             self.nodes[0].p2p.wait_for_tx(txid)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid))\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.stop_node(0)\n+        self.start_node(0, [\"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 18,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "d86dba18b06f1558c353beff335f6c03bd406008",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks Marco, going to try again with the suggestion!",
    "created_at": "2020-04-07T17:18:44Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r404979914",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/404979914"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r404979914"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/404979914/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 63,
    "side": "RIGHT",
    "in_reply_to_id": 403700002
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405186143",
    "pull_request_review_id": 389573709,
    "id": 405186143,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NjE0Mw==",
    "diff_hunk": "@@ -212,6 +212,7 @@ def wait_for_rpc_connection(self):\n         poll_per_s = 4\n         for _ in range(poll_per_s * self.rpc_timeout):\n             if self.process.poll() is not None:\n+                print('process poll is not NONE', self.process.poll()) #this outputs me 1",
    "path": "test/functional/test_framework/test_node.py",
    "position": null,
    "original_position": 4,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "037f2d3d3352882e2521adffe8be58fb4d64d2f0",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "On startup failures or general test failures, you can combine the logs to see the issue:\r\n\r\n```\r\n$ ./test/functional/combine_logs.py -c /tmp/bitcoin_func_test_wnpgbmh_  | tail \r\n                                     File \"/home/marco/workspace/btc_bitcoin_core/test/functional/test_framework/test_framework.py\", line 419, in start_node\r\n                                       node.wait_for_rpc_connection()\r\n                                     File \"/home/marco/workspace/btc_bitcoin_core/test/functional/test_framework/test_node.py\", line 217, in wait_for_rpc_connection\r\n                                       'bitcoind exited with status {} during initialization'.format(self.process.returncode)))\r\n                                   test_framework.test_node.FailedToStartError: [node 0] bitcoind exited with status 1 during initialization\r\n test  2020-04-08T00:11:49.629000Z TestFramework (DEBUG): Closing down network thread \r\n test  2020-04-08T00:11:49.680000Z TestFramework (INFO): Stopping nodes \r\n test  2020-04-08T00:11:49.681000Z TestFramework.node0 (DEBUG): Stopping node \r\n\r\n node0 stderr Error: Command line contains unexpected token 'persistmempool=0', see bitcoind -h for a list of options. \r\n",
    "created_at": "2020-04-08T00:13:35Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r405186143",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405186143"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r405186143"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405186143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 215,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405186243",
    "pull_request_review_id": 389573787,
    "id": 405186243,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NjI0Mw==",
    "diff_hunk": "@@ -55,8 +55,28 @@ def run_test(self):\n         with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=1'.format(txid)]):\n             self.nodes[0].sendrawtransaction(sigtx)\n             self.nodes[0].p2p.wait_for_tx(txid)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid))\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 17,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "037f2d3d3352882e2521adffe8be58fb4d64d2f0",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\r\n```",
    "created_at": "2020-04-08T00:13:48Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r405186243",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405186243"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r405186243"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405186243/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 62,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405186596",
    "pull_request_review_id": 389574179,
    "id": 405186596,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NjU5Ng==",
    "diff_hunk": "@@ -212,6 +212,7 @@ def wait_for_rpc_connection(self):\n         poll_per_s = 4\n         for _ in range(poll_per_s * self.rpc_timeout):\n             if self.process.poll() is not None:\n+                print('process poll is not NONE', self.process.poll()) #this outputs me 1",
    "path": "test/functional/test_framework/test_node.py",
    "position": null,
    "original_position": 4,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "037f2d3d3352882e2521adffe8be58fb4d64d2f0",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See also https://github.com/bitcoin/bitcoin/tree/master/test#test-logging\r\n\r\nI just ran the test with\r\n```\r\n$ ./test/functional/p2p_blocksonly.py --tracerpc -l DEBUG",
    "created_at": "2020-04-08T00:14:58Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r405186596",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405186596"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r405186596"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/405186596/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 215,
    "side": "RIGHT",
    "in_reply_to_id": 405186143
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407129597",
    "pull_request_review_id": 391812134,
    "id": 407129597,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEyOTU5Nw==",
    "diff_hunk": "@@ -55,8 +55,29 @@ def run_test(self):\n         with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=1'.format(txid)]):\n             self.nodes[0].sendrawtransaction(sigtx)\n             self.nodes[0].p2p.wait_for_tx(txid)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid))\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        peerInfo = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peerInfo['whitelisted'], True)\n+        assert_equal(peerInfo['permissions'], ['noban', 'forcerelay', 'relay', 'mempool']) #checkpermission use check permission from p2p_permission\n+\n+        self.nodes[0].p2p.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        pprint(self.nodes[0].p2p.last_message)\n+        pprint(self.nodes[0].p2p.last_message.get('tx'))\n+\n+        assert_equal(self.nodes[0].p2p.is_connected, True)\n+        with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=0'.format(txid)]):\n+            self.nodes[0].sendrawtransaction(sigtx)",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 40,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "bc432ee0b3d1200aafc8bf935f2010d595d67e6a",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You will need at least three (mini)nodes if you want to check what you claim to be wanting to check. \"Check that txs from whitelisted peers are not rejected and relayed to others\"\r\n\r\nwhitlisted peer --- tx ---> Bitcoin Core ---- tx -----> another peer\r\n\r\n```suggestion\r\n            another_peer = self.nodes[0].add_p2p_connection(P2PInterface())\r\n            ... etc\r\n```",
    "created_at": "2020-04-12T01:04:50Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r407129597",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407129597"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r407129597"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407129597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407136294",
    "pull_request_review_id": 391816204,
    "id": 407136294,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEzNjI5NA==",
    "diff_hunk": "@@ -55,8 +55,29 @@ def run_test(self):\n         with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=1'.format(txid)]):\n             self.nodes[0].sendrawtransaction(sigtx)\n             self.nodes[0].p2p.wait_for_tx(txid)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid))\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        peerInfo = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peerInfo['whitelisted'], True)\n+        assert_equal(peerInfo['permissions'], ['noban', 'forcerelay', 'relay', 'mempool']) #checkpermission use check permission from p2p_permission\n+\n+        self.nodes[0].p2p.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        pprint(self.nodes[0].p2p.last_message)\n+        pprint(self.nodes[0].p2p.last_message.get('tx'))\n+\n+        assert_equal(self.nodes[0].p2p.is_connected, True)\n+        with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=0'.format(txid)]):\n+            self.nodes[0].sendrawtransaction(sigtx)",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 40,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "bc432ee0b3d1200aafc8bf935f2010d595d67e6a",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Achso! I **thnk** I know why I am erroring...I couldn't figure out why `self.nodes[0].p2p.wait_for_tx(txid)` kept timing out(line 77)...but little did I realized that  this tx was originated by `self.nodes[0].p2p` hence it wouldn't hear this transaction again?? And instead, `another_peer.wait_for_tx(txid)` would be the correct thing to check for..?",
    "created_at": "2020-04-12T02:36:07Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r407136294",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407136294"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r407136294"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407136294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 407129597
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407137006",
    "pull_request_review_id": 391816612,
    "id": 407137006,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEzNzAwNg==",
    "diff_hunk": "@@ -55,8 +55,29 @@ def run_test(self):\n         with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=1'.format(txid)]):\n             self.nodes[0].sendrawtransaction(sigtx)\n             self.nodes[0].p2p.wait_for_tx(txid)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid))\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        peerInfo = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peerInfo['whitelisted'], True)\n+        assert_equal(peerInfo['permissions'], ['noban', 'forcerelay', 'relay', 'mempool']) #checkpermission use check permission from p2p_permission\n+\n+        self.nodes[0].p2p.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        pprint(self.nodes[0].p2p.last_message)\n+        pprint(self.nodes[0].p2p.last_message.get('tx'))\n+\n+        assert_equal(self.nodes[0].p2p.is_connected, True)\n+        with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=0'.format(txid)]):\n+            self.nodes[0].sendrawtransaction(sigtx)",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 40,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "bc432ee0b3d1200aafc8bf935f2010d595d67e6a",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Also, this has been unclear to me:\r\nline 69 suggests to me that it is nodes[0]'s peer who sends out the transaction, which should be received by node[0]. We want to test whether node[0] would accept and relay this tx. This is aligned with purpose of the test.\r\n\r\nHowever, on line 24, 33, and line 76, it seems to be that node[0] is the one who initiates the transaction, zB ` self.nodes[0].sendrawtransaction(sigtx)`. As a relay node (of the peer node[0].p2p), why is node[0] creating, signing, and transaction then?",
    "created_at": "2020-04-12T02:44:56Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r407137006",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407137006"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r407137006"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407137006/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407137042",
    "pull_request_review_id": 391816637,
    "id": 407137042,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEzNzA0Mg==",
    "diff_hunk": "@@ -55,8 +55,29 @@ def run_test(self):\n         with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=1'.format(txid)]):\n             self.nodes[0].sendrawtransaction(sigtx)\n             self.nodes[0].p2p.wait_for_tx(txid)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid))\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        peerInfo = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peerInfo['whitelisted'], True)\n+        assert_equal(peerInfo['permissions'], ['noban', 'forcerelay', 'relay', 'mempool']) #checkpermission use check permission from p2p_permission\n+\n+        self.nodes[0].p2p.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        pprint(self.nodes[0].p2p.last_message)\n+        pprint(self.nodes[0].p2p.last_message.get('tx'))\n+\n+        assert_equal(self.nodes[0].p2p.is_connected, True)\n+        with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=0'.format(txid)]):\n+            self.nodes[0].sendrawtransaction(sigtx)",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 40,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "bc432ee0b3d1200aafc8bf935f2010d595d67e6a",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@MarcoFalke  It would be really great if you could clarify this too",
    "created_at": "2020-04-12T02:45:22Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r407137042",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407137042"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r407137042"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407137042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 407137006
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407261799",
    "pull_request_review_id": 391901392,
    "id": 407261799,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI2MTc5OQ==",
    "diff_hunk": "@@ -55,8 +55,29 @@ def run_test(self):\n         with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=1'.format(txid)]):\n             self.nodes[0].sendrawtransaction(sigtx)\n             self.nodes[0].p2p.wait_for_tx(txid)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid))\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        peerInfo = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peerInfo['whitelisted'], True)\n+        assert_equal(peerInfo['permissions'], ['noban', 'forcerelay', 'relay', 'mempool']) #checkpermission use check permission from p2p_permission\n+\n+        self.nodes[0].p2p.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        pprint(self.nodes[0].p2p.last_message)\n+        pprint(self.nodes[0].p2p.last_message.get('tx'))\n+\n+        assert_equal(self.nodes[0].p2p.is_connected, True)\n+        with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=0'.format(txid)]):\n+            self.nodes[0].sendrawtransaction(sigtx)",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 40,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "bc432ee0b3d1200aafc8bf935f2010d595d67e6a",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> And instead, another_peer.wait_for_tx(txid) would be the correct thing to check for..?\r\n\r\nCorrect",
    "created_at": "2020-04-12T22:46:05Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r407261799",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407261799"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r407261799"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407261799/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 407129597
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407262179",
    "pull_request_review_id": 391901641,
    "id": 407262179,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI2MjE3OQ==",
    "diff_hunk": "@@ -55,8 +55,29 @@ def run_test(self):\n         with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=1'.format(txid)]):\n             self.nodes[0].sendrawtransaction(sigtx)\n             self.nodes[0].p2p.wait_for_tx(txid)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid))\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        peerInfo = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peerInfo['whitelisted'], True)\n+        assert_equal(peerInfo['permissions'], ['noban', 'forcerelay', 'relay', 'mempool']) #checkpermission use check permission from p2p_permission\n+\n+        self.nodes[0].p2p.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        pprint(self.nodes[0].p2p.last_message)\n+        pprint(self.nodes[0].p2p.last_message.get('tx'))\n+\n+        assert_equal(self.nodes[0].p2p.is_connected, True)\n+        with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=0'.format(txid)]):\n+            self.nodes[0].sendrawtransaction(sigtx)",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 40,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "bc432ee0b3d1200aafc8bf935f2010d595d67e6a",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`self.nodes[0]` is the Bitcoin Core node \"in the middle\". I suggest not using self.nodes[0].p2p at all and instead assigning the peers proper names. You did that with `first_peer`, `second_peer`.\r\n\r\n`first_peer` and `second_peer` are *not* Bitcoin Core nodes, but python mininodes (mock nodes).\r\n\r\nWhen you say `self.nodes[0].sendrawtransacttion`, I believe you really meant `first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))`?",
    "created_at": "2020-04-12T22:50:03Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r407262179",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407262179"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r407262179"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/407262179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 407137006
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410727651",
    "pull_request_review_id": 395934904,
    "id": 410727651,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcyNzY1MQ==",
    "diff_hunk": "@@ -55,8 +55,29 @@ def run_test(self):\n         with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=1'.format(txid)]):\n             self.nodes[0].sendrawtransaction(sigtx)\n             self.nodes[0].p2p.wait_for_tx(txid)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid))\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        peerInfo = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peerInfo['whitelisted'], True)\n+        assert_equal(peerInfo['permissions'], ['noban', 'forcerelay', 'relay', 'mempool']) #checkpermission use check permission from p2p_permission\n+\n+        self.nodes[0].p2p.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        pprint(self.nodes[0].p2p.last_message)\n+        pprint(self.nodes[0].p2p.last_message.get('tx'))\n+\n+        assert_equal(self.nodes[0].p2p.is_connected, True)\n+        with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=0'.format(txid)]):\n+            self.nodes[0].sendrawtransaction(sigtx)",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 40,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "bc432ee0b3d1200aafc8bf935f2010d595d67e6a",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think what confuses me is the existing code line 56 uses this construct too: `   self.nodes[0].sendrawtransaction(sigtx)` so I kind of mimicked that line \ud83d\ude02  Does this mean that line 56 should be fixed too?",
    "created_at": "2020-04-18T17:39:37Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r410727651",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410727651"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r410727651"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410727651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 407137006
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410729083",
    "pull_request_review_id": 395936045,
    "id": 410729083,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcyOTA4Mw==",
    "diff_hunk": "@@ -55,8 +55,29 @@ def run_test(self):\n         with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=1'.format(txid)]):\n             self.nodes[0].sendrawtransaction(sigtx)\n             self.nodes[0].p2p.wait_for_tx(txid)\n+            pprint(self.nodes[0].p2p.wait_for_tx(txid))\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.nodes[0].add_p2p_connection(P2PInterface())\n+        peerInfo = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peerInfo['whitelisted'], True)\n+        assert_equal(peerInfo['permissions'], ['noban', 'forcerelay', 'relay', 'mempool']) #checkpermission use check permission from p2p_permission\n+\n+        self.nodes[0].p2p.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        pprint(self.nodes[0].p2p.last_message)\n+        pprint(self.nodes[0].p2p.last_message.get('tx'))\n+\n+        assert_equal(self.nodes[0].p2p.is_connected, True)\n+        with self.nodes[0].assert_debug_log(['received getdata for: tx {} peer=0'.format(txid)]):\n+            self.nodes[0].sendrawtransaction(sigtx)",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 40,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "bc432ee0b3d1200aafc8bf935f2010d595d67e6a",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That is a different test \"Check that txs from **rpc** are not rejected\", here in this line you are testing \"Check that the tx from **whitelisted peers** ...\"\r\n\r\nSo those two lines should differ between the test cases",
    "created_at": "2020-04-18T17:52:53Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r410729083",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410729083"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r410729083"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410729083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 407137006
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410756582",
    "pull_request_review_id": 395954583,
    "id": 410756582,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1NjU4Mg==",
    "diff_hunk": "@@ -57,6 +56,26 @@ def run_test(self):\n             self.nodes[0].p2p.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        assert_equal(self.nodes[0].getrawmempool(),[])\n+        first_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        second_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        peerInfo = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peerInfo['whitelisted'], True)\n+        assert_equal(peerInfo['permissions'], ['noban', 'forcerelay', 'relay', 'mempool'])\n+        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True) \n+        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        self.log.info('Check that the whitelisted peer is still connected after sending the transaction')\n+        assert_equal(first_peer.is_connected, True)\n+       \n+        self.log.info('Check that the tx from whitelisted first_peer is relayed to others (ie.second_peer)')\n+        second_peer.wait_for_tx(txid)",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 29,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "f348b9bda99e832b970b92ded9c60a75f3a43871",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think the fact that wait_for_tx does not throw indicate my second_peer has received this tx. Not sure if there is a way to check this more explicitly",
    "created_at": "2020-04-18T21:57:36Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r410756582",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410756582"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r410756582"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410756582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 76,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410756956",
    "pull_request_review_id": 395954737,
    "id": 410756956,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1Njk1Ng==",
    "diff_hunk": "@@ -57,6 +56,26 @@ def run_test(self):\n             self.nodes[0].p2p.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        assert_equal(self.nodes[0].getrawmempool(),[])\n+        first_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        second_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        peerInfo = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peerInfo['whitelisted'], True)\n+        assert_equal(peerInfo['permissions'], ['noban', 'forcerelay', 'relay', 'mempool'])\n+        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True) \n+        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        self.log.info('Check that the whitelisted peer is still connected after sending the transaction')\n+        assert_equal(first_peer.is_connected, True)\n+       \n+        self.log.info('Check that the tx from whitelisted first_peer is relayed to others (ie.second_peer)')\n+        second_peer.wait_for_tx(txid)\n+        assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n+        self.log.info(\"Whitelisted peer's transaction is accepted and relayed\")",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 31,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "f348b9bda99e832b970b92ded9c60a75f3a43871",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I noticed a pattern of using \"with\" statement, or context manager, for checks like this. For example, line (42 and 54). But I am not quite sure whether that is necessary. wait_for_tx will timeout after 60 seconds anyways. What resources are we trying to release with the \"with\" anyways? ",
    "created_at": "2020-04-18T22:00:03Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r410756956",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410756956"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r410756956"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410756956/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 77,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 82,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410761566",
    "pull_request_review_id": 395956642,
    "id": 410761566,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc2MTU2Ng==",
    "diff_hunk": "@@ -57,6 +56,26 @@ def run_test(self):\n             self.nodes[0].p2p.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        assert_equal(self.nodes[0].getrawmempool(),[])\n+        first_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        second_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        peerInfo = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peerInfo['whitelisted'], True)\n+        assert_equal(peerInfo['permissions'], ['noban', 'forcerelay', 'relay', 'mempool'])\n+        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True) \n+        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        self.log.info('Check that the whitelisted peer is still connected after sending the transaction')\n+        assert_equal(first_peer.is_connected, True)\n+       \n+        self.log.info('Check that the tx from whitelisted first_peer is relayed to others (ie.second_peer)')\n+        second_peer.wait_for_tx(txid)\n+        assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n+        self.log.info(\"Whitelisted peer's transaction is accepted and relayed\")",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 31,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "f348b9bda99e832b970b92ded9c60a75f3a43871",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It is optional. If you want you can check that an exact code path was hit that also contained a debug statement.\r\n\r\nIn this case it would be:\r\n\r\n```py\r\nwith self.nodes[0].assert_debug_log([\"Force relaying tx {} from whitelisted peer=0\".format(txid)]):\r\n  first_peer.send(...\r\n  ...\r\n```\r\n\r\nTo check you are hitting the right branch in `src/net_processing.cpp`, where it say \"Force relaying tx %s ...\"",
    "created_at": "2020-04-18T22:31:53Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r410761566",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410761566"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r410761566"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410761566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 77,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 82,
    "side": "RIGHT",
    "in_reply_to_id": 410756956
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410764108",
    "pull_request_review_id": 395957627,
    "id": 410764108,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc2NDEwOA==",
    "diff_hunk": "@@ -3,7 +3,6 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test p2p blocksonly\"\"\"\n-",
    "path": "test/functional/p2p_blocksonly.py",
    "position": null,
    "original_position": 4,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "f348b9bda99e832b970b92ded9c60a75f3a43871",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Travis seems to be passing, but there is a linter error. Potentially pep8. Maybe it is this missing line?\r\n\r\nYou can try to format the python code with some kind of formatter or run the `./test/lint/lint-python.sh` and fix the issues up manually.",
    "created_at": "2020-04-18T22:47:51Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r410764108",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410764108"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r410764108"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/410764108/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 6,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415166184",
    "pull_request_review_id": 400440111,
    "id": 415166184,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE2NjE4NA==",
    "diff_hunk": "@@ -57,6 +57,30 @@ def run_test(self):\n             self.nodes[0].p2p.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        assert_equal(self.nodes[0].getrawmempool(),[])\n+        first_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        second_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        peer_1_info = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peer_1_info['whitelisted'], True)\n+        assert_equal(peer_1_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool'])\n+        peer_2_info = self.nodes[0].getpeerinfo()[1]\n+        assert_equal(peer_2_info['whitelisted'], True)\n+        assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool'])\n+        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n+        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        self.log.info('Check that the whitelisted peer is still connected after sending the transaction')\n+        assert_equal(first_peer.is_connected, True)\n+\n+        self.log.info('Check that the tx from whitelisted first_peer is relayed to others (ie.second_peer)')\n+        with self.nodes[0].assert_debug_log([\"received getdata\"]):",
    "path": "test/functional/p2p_blocksonly.py",
    "position": 20,
    "original_position": 24,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "13cff3a8f74988683b240ca1180877426b4fa07d",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I wasn't able assert that  if (pfrom->HasPermission(PF_FORCERELAY)) {...} is hit, even though my peer's permissions list includes \"forcerelay\", which should correspond to PF_FORCERELAY... \r\n\r\nFrom [here](https://bitcoin.org/en/developer-reference#inv): \"The getdata message should usually only be used to request data from a node which previously advertised it had that data by sending an `inv` message.\" \"It [`inv`] can be sent unsolicited to announce new transactions or blocks\" ...this makes me think that perhaps self.nodes[0] announces the transaction once it receives it from first_peer, sending out `inv` to second_peer, and second_peer sends `getdata` to self.nodes[0]\r\n\r\n",
    "created_at": "2020-04-25T23:22:05Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r415166184",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415166184"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r415166184"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415166184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 76,
    "original_line": 76,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416727134",
    "pull_request_review_id": 401976903,
    "id": 416727134,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyNzEzNA==",
    "diff_hunk": "@@ -57,6 +57,30 @@ def run_test(self):\n             self.nodes[0].p2p.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        assert_equal(self.nodes[0].getrawmempool(),[])\n+        first_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        second_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        peer_1_info = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peer_1_info['whitelisted'], True)\n+        assert_equal(peer_1_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool'])\n+        peer_2_info = self.nodes[0].getpeerinfo()[1]\n+        assert_equal(peer_2_info['whitelisted'], True)\n+        assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool'])\n+        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n+        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        self.log.info('Check that the whitelisted peer is still connected after sending the transaction')\n+        assert_equal(first_peer.is_connected, True)\n+\n+        self.log.info('Check that the tx from whitelisted first_peer is relayed to others (ie.second_peer)')\n+        with self.nodes[0].assert_debug_log([\"received getdata\"]):",
    "path": "test/functional/p2p_blocksonly.py",
    "position": 20,
    "original_position": 24,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "13cff3a8f74988683b240ca1180877426b4fa07d",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@MarcoFalke  could you take a look at this?",
    "created_at": "2020-04-28T15:52:00Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r416727134",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416727134"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r416727134"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416727134/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 76,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 415166184
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416777818",
    "pull_request_review_id": 402038198,
    "id": 416777818,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc3NzgxOA==",
    "diff_hunk": "@@ -57,6 +57,30 @@ def run_test(self):\n             self.nodes[0].p2p.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        assert_equal(self.nodes[0].getrawmempool(),[])\n+        first_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        second_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        peer_1_info = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peer_1_info['whitelisted'], True)\n+        assert_equal(peer_1_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool'])\n+        peer_2_info = self.nodes[0].getpeerinfo()[1]\n+        assert_equal(peer_2_info['whitelisted'], True)\n+        assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool'])\n+        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n+        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        self.log.info('Check that the whitelisted peer is still connected after sending the transaction')\n+        assert_equal(first_peer.is_connected, True)\n+\n+        self.log.info('Check that the tx from whitelisted first_peer is relayed to others (ie.second_peer)')\n+        with self.nodes[0].assert_debug_log([\"received getdata\"]):",
    "path": "test/functional/p2p_blocksonly.py",
    "position": 20,
    "original_position": 24,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "18e5f49c985361af6b2ba25fe7f9bf8c673ffe31",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        with self.nodes[0].assert_debug_log([\"received getdata\", \"Force relaying tx {} from whitelisted peer={}\".format(txid, 0)]):\r\n```\r\n\r\nYou can assert that the if-branch is hit by reading the log statement that is written to the debug log when this if-branch is executed.",
    "created_at": "2020-04-28T17:03:32Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r416777818",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416777818"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r416777818"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416777818/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 76,
    "original_line": 76,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417078022",
    "pull_request_review_id": 402375747,
    "id": 417078022,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA3ODAyMg==",
    "diff_hunk": "@@ -57,6 +57,30 @@ def run_test(self):\n             self.nodes[0].p2p.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        assert_equal(self.nodes[0].getrawmempool(),[])\n+        first_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        second_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        peer_1_info = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peer_1_info['whitelisted'], True)\n+        assert_equal(peer_1_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool'])\n+        peer_2_info = self.nodes[0].getpeerinfo()[1]\n+        assert_equal(peer_2_info['whitelisted'], True)\n+        assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool'])\n+        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n+        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        self.log.info('Check that the whitelisted peer is still connected after sending the transaction')\n+        assert_equal(first_peer.is_connected, True)\n+\n+        self.log.info('Check that the tx from whitelisted first_peer is relayed to others (ie.second_peer)')\n+        with self.nodes[0].assert_debug_log([\"received getdata\"]):",
    "path": "test/functional/p2p_blocksonly.py",
    "position": 20,
    "original_position": 24,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "18e5f49c985361af6b2ba25fe7f9bf8c673ffe31",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I am still not sure why I am getting error trying to assert that this if branch is hit. \r\n\r\nFrom ` else if (permission == \"forcerelay\") NetPermissions::AddFlag(flags, PF_FORCERELAY);` I konw that we can assert that PF_FORCERELAY flag is set with \"forcerelay\". However, when I tried to assert this, I got this following error that suggest that this branch isn't:\r\n\r\nAssertionError: [node 0] Expected messages \"['received getdata', 'Force relaying tx af34fc5ff9ea8babbd4083fbb79ffd2ad5aff1d6def803c07ca5aeed880bd60f from whitelisted peer=0']\" does not partially match log:\r\n\r\n - 2020-04-29T05:33:05.256801Z [msghand] Enqueuing TransactionAddedToMempool: txid=af34fc5ff9ea8babbd4083fbb79ffd2ad5aff1d6def803c07ca5aeed880bd60f wtxid=af34fc5ff9ea8babbd4083fbb79ffd2ad5aff1d6def803c07ca5aeed880bd60f\r\n - 2020-04-29T05:33:05.257550Z [msghand] Checking mempool with 1 transactions and 1 inputs\r\n - 2020-04-29T05:33:05.257628Z [msghand] AcceptToMemoryPool: peer=0: accepted af34fc5ff9ea8babbd4083fbb79ffd2ad5aff1d6def803c07ca5aeed880bd60f (poolsz 1 txn, 1 kB)\r\n - 2020-04-29T05:33:05.257685Z [msghand] sending inv (37 bytes) peer=1\r\n - 2020-04-29T05:33:05.257745Z [scheduler] TransactionAddedToMempool: txid=af34fc5ff9ea8babbd4083fbb79ffd2ad5aff1d6def803c07ca5aeed880bd60f wtxid=af34fc5ff9ea8babbd4083fbb79ffd2ad5aff1d6def803c07ca5aeed880bd60f\r\n - 2020-04-29T05:33:05.257955Z [scheduler] [default wallet] AddToWallet af34fc5ff9ea8babbd4083fbb79ffd2ad5aff1d6def803c07ca5aeed880bd60f\r\n - 2020-04-29T05:33:05.258554Z [msghand] received: getdata (37 bytes) peer=1\r\n - 2020-04",
    "created_at": "2020-04-29T05:41:39Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r417078022",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417078022"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r417078022"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417078022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 76,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 416777818
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417079292",
    "pull_request_review_id": 402377082,
    "id": 417079292,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA3OTI5Mg==",
    "diff_hunk": "@@ -57,6 +57,30 @@ def run_test(self):\n             self.nodes[0].p2p.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        assert_equal(self.nodes[0].getrawmempool(),[])\n+        first_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        second_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        peer_1_info = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peer_1_info['whitelisted'], True)\n+        assert_equal(peer_1_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool'])\n+        peer_2_info = self.nodes[0].getpeerinfo()[1]\n+        assert_equal(peer_2_info['whitelisted'], True)\n+        assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool'])\n+        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n+        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        self.log.info('Check that the whitelisted peer is still connected after sending the transaction')\n+        assert_equal(first_peer.is_connected, True)\n+\n+        self.log.info('Check that the tx from whitelisted first_peer is relayed to others (ie.second_peer)')\n+        with self.nodes[0].assert_debug_log([\"received getdata\"]):",
    "path": "test/functional/p2p_blocksonly.py",
    "position": 20,
    "original_position": 24,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "18e5f49c985361af6b2ba25fe7f9bf8c673ffe31",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "And the other place where we tested whether this if-branch is hit is in p2p_permissions.py: and the major difference between the two setups is this one uses P2PDataStore, mine uses P2PInterface: \r\n`p2p_rebroadcast_wallet = self.nodes[1].add_p2p_connection(P2PDataStore())` \r\n\r\nAlso, this test was able to assert `Force relaying ...` beacuse this broadcast happened between two full-nodes, not between full node and mini-node (like the case here). However, I did try substituing one full node out with a mini node, and this didn't change anything and test still passed.",
    "created_at": "2020-04-29T05:46:11Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r417079292",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417079292"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r417079292"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417079292/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 76,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 416777818
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417304574",
    "pull_request_review_id": 402653069,
    "id": 417304574,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMwNDU3NA==",
    "diff_hunk": "@@ -57,6 +57,30 @@ def run_test(self):\n             self.nodes[0].p2p.wait_for_tx(txid)\n             assert_equal(self.nodes[0].getmempoolinfo()['size'], 1)\n \n+        self.log.info('Check that txs from whitelisted peers are not rejected and relayed to others')\n+        self.log.info(\"Restarting node 0 with whitelist permission and blocksonly\")\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=127.0.0.1\", \"-whitelistforcerelay\", \"-blocksonly\"])\n+        assert_equal(self.nodes[0].getrawmempool(),[])\n+        first_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        second_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        peer_1_info = self.nodes[0].getpeerinfo()[0]\n+        assert_equal(peer_1_info['whitelisted'], True)\n+        assert_equal(peer_1_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool'])\n+        peer_2_info = self.nodes[0].getpeerinfo()[1]\n+        assert_equal(peer_2_info['whitelisted'], True)\n+        assert_equal(peer_2_info['permissions'], ['noban', 'forcerelay', 'relay', 'mempool'])\n+        assert_equal(self.nodes[0].testmempoolaccept([sigtx])[0]['allowed'], True)\n+        txid = self.nodes[0].testmempoolaccept([sigtx])[0]['txid']\n+        first_peer.send_message(msg_tx(FromHex(CTransaction(), sigtx)))\n+\n+        self.log.info('Check that the whitelisted peer is still connected after sending the transaction')\n+        assert_equal(first_peer.is_connected, True)\n+\n+        self.log.info('Check that the tx from whitelisted first_peer is relayed to others (ie.second_peer)')\n+        with self.nodes[0].assert_debug_log([\"received getdata\"]):",
    "path": "test/functional/p2p_blocksonly.py",
    "position": 20,
    "original_position": 24,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "18e5f49c985361af6b2ba25fe7f9bf8c673ffe31",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You will need to send the message (tx) inside the assert debug log context mangager. Otherwise the log is not captured.",
    "created_at": "2020-04-29T13:15:40Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r417304574",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417304574"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r417304574"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417304574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 76,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 416777818
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422645953",
    "pull_request_review_id": 408745445,
    "id": 422645953,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY0NTk1Mw==",
    "diff_hunk": "@@ -2535,8 +2535,9 @@ bool ProcessMessage(CNode* pfrom, const std::string& msg_type, CDataStream& vRec\n \n     if (msg_type == NetMsgType::TX) {\n         // Stop processing the transaction early if\n-        // We are in blocks only mode and peer is either not whitelisted or whitelistrelay is off\n-        // or if this peer is supposed to be a block-relay-only peer\n+        // 1) We are in blocks only mode and peer is either not whitelisted or the peer is whitelisted",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "2b462be152f2d35fd3598bfcd0d1eeea9bbb9c30",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        // 1) We are in blocks only mode and the peer has no relay permission\r\n```\r\n\r\nI think this can be said slightly more concise, but still correct",
    "created_at": "2020-05-10T13:30:12Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r422645953",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422645953"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r422645953"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422645953/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2538,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425706072",
    "pull_request_review_id": 412523453,
    "id": 425706072,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwNjA3Mg==",
    "diff_hunk": "@@ -2535,8 +2535,9 @@ bool ProcessMessage(CNode* pfrom, const std::string& msg_type, CDataStream& vRec\n \n     if (msg_type == NetMsgType::TX) {\n         // Stop processing the transaction early if\n-        // We are in blocks only mode and peer is either not whitelisted or whitelistrelay is off\n-        // or if this peer is supposed to be a block-relay-only peer\n+        // 1) We are in blocks only mode and the peer has no relay permission\n+        // but \"-whitelistrelay\" is off, or",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "7e21dbb787fb46467241234ff46e3589ba4e260c",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "this needs to be removed as well, ofc",
    "created_at": "2020-05-15T10:18:20Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r425706072",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425706072"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r425706072"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425706072/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2539,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426272868",
    "pull_request_review_id": 413172412,
    "id": 426272868,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI3Mjg2OA==",
    "diff_hunk": "@@ -2535,8 +2535,9 @@ bool ProcessMessage(CNode* pfrom, const std::string& msg_type, CDataStream& vRec\n \n     if (msg_type == NetMsgType::TX) {\n         // Stop processing the transaction early if\n-        // We are in blocks only mode and peer is either not whitelisted or whitelistrelay is off\n-        // or if this peer is supposed to be a block-relay-only peer\n+        // 1) We are in blocks only mode and the peer has no relay permission\n+        // but \"-whitelistrelay\" is off, or",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "0ea5d70b4756f376342417e0019490233cb4a918",
    "original_commit_id": "7e21dbb787fb46467241234ff46e3589ba4e260c",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ach ja, nat\u00fcrlich \ud83d\ude02  ",
    "created_at": "2020-05-17T15:18:14Z",
    "updated_at": "2020-05-17T16:01:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r426272868",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426272868"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18530#discussion_r426272868"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18530"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426272868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2539,
    "side": "RIGHT",
    "in_reply_to_id": 425706072
  }
]