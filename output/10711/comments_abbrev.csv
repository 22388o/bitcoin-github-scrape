jnewbery,2017-06-30T16:04:04Z,Wallet tests were failing on Travis because bitcoind startup was timing out. Increasing timeout from 2.5s to 10s for Travis.,https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-312307458,312307458,
meshcollider,2017-07-04T06:28:13Z,"Concept ACK https://github.com/bitcoin/bitcoin/pull/10711/commits/e538dbf42d20338f758f415a37c07555403ef6c0, looks good but haven't tested or gone through thoroughly",https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-312791543,312791543,
laanwj,2017-07-10T15:44:58Z,"The speed-up is nice, also like the idea of launching nodes in parallel. Concept ACK.",https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-314147077,314147077,
jnewbery,2017-07-11T14:12:17Z,fixed @jtimon's review comment and rebased.,https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-314456734,314456734,
jnewbery,2017-07-24T15:35:23Z,rebased with TestNode changes for multiwallet.,https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-317462059,317462059,
MarcoFalke,2017-08-08T22:04:22Z,Needs rebase,https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-321095015,321095015,
jnewbery,2017-08-09T20:49:39Z,"rebased\n\n@MarcoFalke @kallewoof @jimmysong @NicolasDorier I'd love some review of this if any of you have time.",https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-321377319,321377319,
NicolasDorier,2017-08-10T00:40:52Z,"utACK 2d189c89f6ecdb846a046bdd57883e190df7b3bf I am a big fan of this idea, it makes writing tests so much easier.",https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-321418863,321418863,
jnewbery,2017-08-15T17:14:12Z,"Thanks for the review @MarcoFalke - I've addressed all your nits (except the `stderr` in `start_nodes()` which I think maintains existing behaviour).\n\nI've updated and squashed the commits. Unsquashed history is here: https://github.com/jnewbery/bitcoin/tree/pr10711.1 if you just want to see what's changed.",https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-322529226,322529226,
MarcoFalke,2017-08-15T21:32:46Z,"re-utACK 7897338, thanks for addressing the feedback.\n\nI keep a local copy of all commits, so no need to provide branches of the history for me.",https://github.com/bitcoin/bitcoin/pull/10711#issuecomment-322595937,322595937,
jtimon,2017-07-10T18:10:40Z,Remove this?,https://github.com/bitcoin/bitcoin/pull/10711#discussion_r126496275,126496275,test/functional/test_framework/util.py
jnewbery,2017-07-11T14:12:02Z,thanks. Removed,https://github.com/bitcoin/bitcoin/pull/10711#discussion_r126700049,126700049,test/functional/test_framework/util.py
jimmysong,2017-08-09T21:06:59Z,"This is a little harder to read than something like this:\n\n    for attempt in range(40):\n        ...\n        time.sleep(0.25)",https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132307028,132307028,test/functional/test_framework/test_node.py
jimmysong,2017-08-09T21:07:40Z,no need for `as e`,https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132307194,132307194,test/functional/test_framework/test_node.py
jimmysong,2017-08-09T21:12:13Z,"What does this do? `wallet_path` is for sure a string, but how do you divide the rpc object by a string?",https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132308185,132308185,test/functional/test_framework/test_node.py
jnewbery,2017-08-09T21:59:49Z,"By magic :)\n\nTake a look at https://github.com/bitcoin/bitcoin/blob/e526ca6284b9e13be1b912b80dd73a34e739b539/test/functional/test_framework/authproxy.py#L195 and https://github.com/bitcoin/bitcoin/blob/e526ca6284b9e13be1b912b80dd73a34e739b539/test/functional/test_framework/coverage.py#L59\n\nThe interface here is supposed to be similar to Python's [pathlib](https://docs.python.org/3/library/",https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132318470,132318470,test/functional/test_framework/test_node.py
jnewbery,2017-08-09T22:00:00Z,Thanks. changed,https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132318523,132318523,test/functional/test_framework/test_node.py
jnewbery,2017-08-09T22:00:06Z,Yep,https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132318546,132318546,test/functional/test_framework/test_node.py
kallewoof,2017-08-10T02:20:57Z,"Why not allow `None` for `extra_args`? I'm generally wary of passing in objects as defaults, as if those default objects are ever altered, the altered version will be passed as the default in future calls.\n\nE.g. try the following snippet:\n```Python\ndef foo(x=[]):\n    x.append(5)\n    print(x)\n\nfoo()\nfoo()\nfoo()\n```\nYou will get as output\n```\n[5]\n[5, 5]\n[5, 5, 5]\n``",https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132350633,132350633,test/functional/test_framework/test_framework.py
NicolasDorier,2017-08-10T02:50:38Z,"wow I did not know.\n\nBut even if it was not the case, I think that the user should be able to pass `null` (Nothing), when he means ""default value"".\n\nThis code can be easily fixed by keeping the default value to Nothing and first line, checking if extra_args is nothing, if that is the case, init extra_args to an empty array.",https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132353831,132353831,test/functional/test_framework/test_framework.py
jimmysong,2017-08-10T02:58:36Z,"Totally didn't catch that, but I've run into this in the past and it's pretty nasty to debug unless you know to look for it. I agree with the others, put this back to None.",https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132354488,132354488,test/functional/test_framework/test_framework.py
kallewoof,2017-08-10T02:58:36Z,"`null` in Python is `None`, so yeah, I think `None` should be the default here and just set it to `[]` if it's `None` at the start.",https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132354489,132354489,test/functional/test_framework/test_framework.py
jnewbery,2017-08-14T16:12:29Z,"Nice. Thanks @kallewoof , I wasn't aware of that, but it makes perfect sense.\n\nChanged the default argument to `None` as suggested.",https://github.com/bitcoin/bitcoin/pull/10711#discussion_r132992785,132992785,test/functional/test_framework/test_framework.py
MarcoFalke,2017-08-15T13:39:34Z,nit: Should be `get_wallet_rpc('bad')` to qualify for refactor-only.,https://github.com/bitcoin/bitcoin/pull/10711#discussion_r133191323,133191323,test/functional/multiwallet.py
MarcoFalke,2017-08-15T14:11:21Z,nit: debug artifact,https://github.com/bitcoin/bitcoin/pull/10711#discussion_r133199148,133199148,test/functional/test_framework/test_node.py
MarcoFalke,2017-08-15T14:19:45Z,missing for node in nodes?,https://github.com/bitcoin/bitcoin/pull/10711#discussion_r133201252,133201252,test/functional/test_framework/test_framework.py
MarcoFalke,2017-08-15T14:24:21Z,nit: remove outdated comment,https://github.com/bitcoin/bitcoin/pull/10711#discussion_r133202428,133202428,test/functional/test_framework/test_framework.py
MarcoFalke,2017-08-15T14:33:01Z,nit: No need to return a value if it is never used. Can be replaced by a plain `return`.,https://github.com/bitcoin/bitcoin/pull/10711#discussion_r133204763,133204763,test/functional/test_framework/test_node.py
MarcoFalke,2017-08-15T14:48:33Z,"stderr must be set to not None. Otherwise, we will ignore any output to stderr, no?",https://github.com/bitcoin/bitcoin/pull/10711#discussion_r133209076,133209076,test/functional/test_framework/test_framework.py
jnewbery,2017-08-15T17:10:03Z,fixed,https://github.com/bitcoin/bitcoin/pull/10711#discussion_r133245795,133245795,test/functional/multiwallet.py
jnewbery,2017-08-15T17:10:08Z,removed,https://github.com/bitcoin/bitcoin/pull/10711#discussion_r133245817,133245817,test/functional/test_framework/test_node.py
jnewbery,2017-08-15T17:10:11Z,fixed,https://github.com/bitcoin/bitcoin/pull/10711#discussion_r133245836,133245836,test/functional/test_framework/test_node.py
jnewbery,2017-08-15T17:11:02Z,"This is the same as the existing behaviour. `start_nodes()` currently calls `start_node()` without the `stderr` argument set, so it defaults to `None`.\n\nThis could be changed in a future PR.",https://github.com/bitcoin/bitcoin/pull/10711#discussion_r133246044,133246044,test/functional/test_framework/test_framework.py
jnewbery,2017-08-15T17:11:07Z,fixed,https://github.com/bitcoin/bitcoin/pull/10711#discussion_r133246064,133246064,test/functional/test_framework/test_framework.py
jnewbery,2017-08-15T17:11:14Z,removed,https://github.com/bitcoin/bitcoin/pull/10711#discussion_r133246099,133246099,test/functional/test_framework/test_framework.py
