instagibbs,2018-02-16T21:03:51Z,"concept ACK, anything that gets rid of some of that nightmare argument list is a plus",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-366357625,366357625,
Empact,2018-02-17T00:16:01Z,Note other PRs in this area: #11523 #11639,https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-366395372,366395372,
practicalswift,2018-02-24T16:29:03Z,"Nice cleanup!\n\nConcept ACK",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-368240106,368240106,
laanwj,2018-03-07T18:22:45Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-371234134,371234134,
MarcoFalke,2018-04-02T15:52:36Z,"Needs rebase due to ""witness reserved value"" rename.",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-377961369,377961369,
jnewbery,2018-04-02T20:32:22Z,utACK 829f5461cd9ba850bededff78640ce1807ffcee2,https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-378035323,378035323,
Empact,2018-04-02T23:21:26Z,Rebased & ran clang-format.,https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-378078967,378078967,
jnewbery,2018-04-03T16:19:25Z,utACK 228e3f9965b66f23c611a944eed9454ca5d433eb,https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-378308555,378308555,
MarcoFalke,2018-04-03T17:44:46Z,utACK 228e3f9,https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-378336573,378336573,
sipa,2018-04-03T22:54:35Z,"This is a bit scary, due to the large number of optional arguments to `DoS` there could be overlooked cases that still compile. I'd be more comfortable reviewing if it was clear that all call sites have been touched. You could do this by either writing it as a scripted diff, or by renaming the method `DoS` to something else.",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-378424963,378424963,
MarcoFalke,2018-04-03T23:17:16Z,"Good catch. It seems it must be renamed, since a scripted diff could still lead to silent merge conflicts.\n\n(*) Obviously could do it as a scripted-diff *and* rename.",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-378429289,378429289,
Empact,2018-04-04T00:22:57Z,"I did something like that here: #12357, basically, privatize DoS, remove unnecessary argument defaults, and introduce ""Corrupt"" to live alongside ""Invalid"" as the public interface, both calling into DoS. Does that sound reasonable? I'd need to update it.",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-378440284,378440284,
Empact,2018-04-04T00:29:32Z,"I have a somewhat different take in mind, will push that up in a bit.",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-378441276,378441276,
Empact,2018-04-04T00:59:23Z,"~~* Introduced ::Corrupt to sit alongside ::Invalid~~\n~~* Dropped DoS in favor of the two above~~\n~~* Removed another random boolean argument in the process~~\n\n~~So the only accidental compilable change would require using ::Invalid, where the method signature has changed by adding a leading required int.~~",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-378445955,378445955,
jnewbery,2018-04-04T13:55:28Z,Travis job timed out. I've restarted it.,https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-378608285,378608285,
MarcoFalke,2018-04-04T21:56:38Z,See also discussion in #11523,https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-378758129,378758129,
Empact,2018-04-05T10:56:27Z,"~~Ok as of c978a83 I've~~\n~~* replaced the ::Corrupt/::Invalid split with a chaining call to ::SetCorruptionPossible~~\n~~* dropped ::Invalid in favor of ::DoS (because I wanted to use Invalid for other purposes below)~~\n\n~As of f759385 I have~~\n~~* Split the DoS calls along the REJECT_CODES~~\n~~* Privatized DoS entirely - note this involves changing the reject code of 2 errors from 0 t",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-378897563,378897563,
jnewbery,2018-04-05T15:19:31Z,"The scope of this PR seems to have crept quite substantially! Can you update the PR title to indicate what the current branch is actually doing.\n\nI think I like some of the new validation state interface that you've added here, but you should get the opinion of @TheBlueMatt , who's rewritten that interface here: #11639.",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-378973267,378973267,
TheBlueMatt,2018-04-05T15:55:46Z,"Indeed, this seems to have grown into something rather duplicative with #11639 with a slightly different approach. I didn't do the removal of the ""ret"" argument there, but I think it (appropriately) goes further than this by removing the ""DoS"" field entirely (its really, really dumb that its there). Further, I think the reason list in this PR is incomplete - malleated should be a seaparate reason ",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-378985321,378985321,
Empact,2018-04-05T16:34:26Z,"Fair enough! The goal was to take an incremental approach and I'd rather stick with that, so I backed out the last two commits described above, and renamed `::DoS` to `::Reject`, in light of @sipa's comments.\n\n@TheBlueMatt honestly I don't know the codebase well enough to evaluate #11639, trying to do something a step in that direction if possible.",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-378997791,378997791,
Empact,2018-04-05T16:55:04Z,"Moved this back to sharing a common base with 228e3f9, for easier diffing / review.",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-379003828,379003828,
TheBlueMatt,2018-04-05T16:59:26Z,"This seems like a great PR to make use of the scripted-diff infrastructure. re: coflicts with #11639 it might make sense to skip the ""level explicit in ::Invalid"" and ""SetCorruptionPossible"" changes (especially the SetCorruptionPossible change - I'm not convinced its the right approach - CorruptionPossible is a separate state which should be indicated as such, not a flag which should be added on t",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-379005197,379005197,
Empact,2018-04-12T20:45:35Z,"Planning to split this down over a few PRs to simplify review, e.g. making maximum used of scripted-diff.",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-380938881,380938881,
Empact,2018-04-13T11:57:45Z,"Closing in favor of #12976, which attempts to incorporate all the feedback from here.",https://github.com/bitcoin/bitcoin/pull/12463#issuecomment-381113258,381113258,
jnewbery,2018-04-04T14:13:27Z,"I think you can make `strDebugMessageIn` a required argument for this and `Corrupt()` below, since all calls to both functions specify a `strDebugMessageIn`. That removes the final optional argument.",https://github.com/bitcoin/bitcoin/pull/12463#discussion_r179154648,179154648,src/consensus/validation.h
jnewbery,2018-04-04T14:14:45Z,"Probably scope creep so feel free to ignore, but since you're changing things around so much, it'd be clearer to me to change this to:\n\n```\nif (mode != MODE_ERROR)\n```\n\nand unify the `return false`s at the end of the function.",https://github.com/bitcoin/bitcoin/pull/12463#discussion_r179155077,179155077,src/consensus/validation.h
Empact,2018-04-04T22:19:37Z,"I'm seeing calls with just 3 args for each, e.g. validation.cpp, lines 561 and 566. `strRejectReasonIn` is consistently provided.",https://github.com/bitcoin/bitcoin/pull/12463#discussion_r179300362,179300362,src/consensus/validation.h
Empact,2018-04-04T22:32:21Z,"It's interesting to consistently provide validation debug information though, that's a project I'm up for.",https://github.com/bitcoin/bitcoin/pull/12463#discussion_r179302967,179302967,src/consensus/validation.h
