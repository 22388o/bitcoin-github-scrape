[
  {
    "sha": "fa0e5b89cf742df56c6c8f49fe9b3c54d2970a66",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTBlNWI4OWNmNzQyZGY1NmM2YzhmNDlmZTliM2M1NGQyOTcwYTY2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-27T13:25:05Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-30T13:19:14Z"
      },
      "message": "Add templated GetRandomDuration<>",
      "tree": {
        "sha": "510c91dbf42bb275803df45311ed19f5e04d861a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/510c91dbf42bb275803df45311ed19f5e04d861a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa0e5b89cf742df56c6c8f49fe9b3c54d2970a66",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhd7wwAnbQQHRc+DSQSCwRNFgcHk6j1SD+LAOvu7uYY4egtk9QvjXBdZ81nGz5c\nHe84IICVoyX9tC/LbU23U33vrQZ1WN4JOqnRQ9TTugSbQ07kb7Oxm/YEr/weVEl8\nVafN+9TcS8TDfAdUk7GS+2Y6WCNq47Dvz3KRN2kiPjT2vp5q8McXCVMx3ozPs2AQ\nxrBj/huzSd690ujjRtOfP6/vkJ90jB5evLGSbbCELmhlsznXKfwGViEEalY72JVD\nlefnt76UIs6BQjtwXf9rpy9aLNmqKD+C2osU3qrMNHfG6NxE5l4v4QRTdexQr3vG\nWlA+iaa7OsaDOMFFQJjd5QkywyCTmoxNZO8bTtW5O6q0ofugyr0aOZZxAcHkc9ac\nQIRPcgn0EY9kKZ9XmGy8g0/EpUCSBc8ENgyhoLdNZVH6jSZS46Qd1F/pMm2lJeWo\ntN2G0oypw2oI/i4mqJ3NTNXTWIYIXokWR7MZV5KXZ7CfMicSbG4DDLAqvCylujec\nXUe4bRBh\n=r/0C\n-----END PGP SIGNATURE-----",
        "payload": "tree 510c91dbf42bb275803df45311ed19f5e04d861a\nparent af2ec6b03745cf408f169cfbd74e3380a69975e0\nauthor MarcoFalke <falke.marco@gmail.com> 1587993905 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1588252754 -0400\n\nAdd templated GetRandomDuration<>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0e5b89cf742df56c6c8f49fe9b3c54d2970a66",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0e5b89cf742df56c6c8f49fe9b3c54d2970a66",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0e5b89cf742df56c6c8f49fe9b3c54d2970a66/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "af2ec6b03745cf408f169cfbd74e3380a69975e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af2ec6b03745cf408f169cfbd74e3380a69975e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/af2ec6b03745cf408f169cfbd74e3380a69975e0"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 16,
      "deletions": 16
    },
    "files": [
      {
        "sha": "27d8367de4a5810773c287fca3a0924e96bce71b",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 14,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0e5b89cf742df56c6c8f49fe9b3c54d2970a66/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0e5b89cf742df56c6c8f49fe9b3c54d2970a66/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=fa0e5b89cf742df56c6c8f49fe9b3c54d2970a66",
        "patch": "@@ -14,16 +14,14 @@\n #include <wincrypt.h>\n #endif\n #include <logging.h>  // for LogPrintf()\n+#include <randomenv.h>\n+#include <support/allocators/secure.h>\n #include <sync.h>     // for Mutex\n #include <util/time.h> // for GetTimeMicros()\n \n #include <stdlib.h>\n #include <thread>\n \n-#include <randomenv.h>\n-\n-#include <support/allocators/secure.h>\n-\n #ifndef WIN32\n #include <fcntl.h>\n #include <sys/time.h>\n@@ -587,16 +585,6 @@ uint64_t GetRand(uint64_t nMax) noexcept\n     return FastRandomContext(g_mock_deterministic_tests).randrange(nMax);\n }\n \n-std::chrono::microseconds GetRandMicros(std::chrono::microseconds duration_max) noexcept\n-{\n-    return std::chrono::microseconds{GetRand(duration_max.count())};\n-}\n-\n-std::chrono::milliseconds GetRandMillis(std::chrono::milliseconds duration_max) noexcept\n-{\n-    return std::chrono::milliseconds{GetRand(duration_max.count())};\n-}\n-\n int GetRandInt(int nMax) noexcept\n {\n     return GetRand(nMax);"
      },
      {
        "sha": "0c6dc24983590e57dc9fe772be3731b28f909448",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0e5b89cf742df56c6c8f49fe9b3c54d2970a66/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0e5b89cf742df56c6c8f49fe9b3c54d2970a66/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=fa0e5b89cf742df56c6c8f49fe9b3c54d2970a66",
        "patch": "@@ -67,9 +67,21 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a uniform random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n-std::chrono::microseconds GetRandMicros(std::chrono::microseconds duration_max) noexcept;\n-std::chrono::milliseconds GetRandMillis(std::chrono::milliseconds duration_max) noexcept;\n+/** Generate a uniform random duration in the range [0..max). Precondition: max.count() > 0 */\n+template <typename D>\n+D GetRandomDuration(typename std::common_type<D>::type max) noexcept\n+// Having the compiler infer the template argument from the function argument\n+// is dangerous, because the desired return value generally has a different\n+// type than the function argument. So std::common_type is used to force the\n+// call site to specify the type of the return value.\n+{\n+    assert(max.count() > 0);\n+    return D{GetRand(max.count())};\n+};\n+constexpr auto GetRandMicros = GetRandomDuration<std::chrono::microseconds>;\n+constexpr auto GetRandMillis = GetRandomDuration<std::chrono::milliseconds>;\n int GetRandInt(int nMax) noexcept;\n uint256 GetRandHash() noexcept;\n "
      }
    ]
  },
  {
    "sha": "0000ea32656833efa3d2ffd9bab66c88c83334f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDAwZWEzMjY1NjgzM2VmYTNkMmZmZDliYWI2NmM4OGM4MzMzNGYw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-27T15:57:21Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-30T13:19:16Z"
      },
      "message": "test: Add test for GetRandMillis and GetRandMicros",
      "tree": {
        "sha": "39549571650d6a5daed85992fb2ddd59a1d04c70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39549571650d6a5daed85992fb2ddd59a1d04c70"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0000ea32656833efa3d2ffd9bab66c88c83334f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiWYQv/RoyFbKgvqhEzLy5i2Og4w6aX1M22FlM+w93Grmz6zuAKmSI30hxWkJcD\ny9JTGrkliKpZ6+WHX8nOsJy6Ls3SY774rUA3XmFQ07n5ZB/j5LuZkjkOneaEP38o\nMVFtXgHQ+EBH6J93q+JKewOR5L1fnsLGlnhn+lejKZrX1zfErAZpSu6aRAjVNnDW\ns/YcedrHRw84sfuUrY2yKlh9uUXJQQVzlmtMQkumlR5HigjMpaC4Jfjltw9QLA0d\nhJFVslwOrPZEGZ/VyCJyyiHbcKV8X+uDpAiZmS2QFw7RAUW7xoMVSzEuBJpDfdrZ\nohS+9ElEvjYEltUCuN8BR3EFzAxmI06d/qWP1x0p9sdOdx14IAVzZMjimXvKd7LN\nrU3vy5px9d8LL7eDTTjHWsUjHFNDmdw8Nc3VHKgoYLPq6RSIKCNqGN6ZMDhaAL6Q\ngO46v2gnW7UbfZwxZ6pDALVa1GbeyxHuxO/fS8g8o7pVCYCgOkK2tj06btCAyZ3o\nAGw6yqxI\n=5OC1\n-----END PGP SIGNATURE-----",
        "payload": "tree 39549571650d6a5daed85992fb2ddd59a1d04c70\nparent fa0e5b89cf742df56c6c8f49fe9b3c54d2970a66\nauthor MarcoFalke <falke.marco@gmail.com> 1588003041 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1588252756 -0400\n\ntest: Add test for GetRandMillis and GetRandMicros\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0000ea32656833efa3d2ffd9bab66c88c83334f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0000ea32656833efa3d2ffd9bab66c88c83334f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0000ea32656833efa3d2ffd9bab66c88c83334f0/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa0e5b89cf742df56c6c8f49fe9b3c54d2970a66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0e5b89cf742df56c6c8f49fe9b3c54d2970a66",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0e5b89cf742df56c6c8f49fe9b3c54d2970a66"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "186ee6b0a5e73b1bb8a93e7901b89f81c405ef0a",
        "filename": "src/test/random_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0000ea32656833efa3d2ffd9bab66c88c83334f0/src/test/random_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0000ea32656833efa3d2ffd9bab66c88c83334f0/src/test/random_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/random_tests.cpp?ref=0000ea32656833efa3d2ffd9bab66c88c83334f0",
        "patch": "@@ -28,6 +28,8 @@ BOOST_AUTO_TEST_CASE(fastrandom_tests)\n     for (int i = 10; i > 0; --i) {\n         BOOST_CHECK_EQUAL(GetRand(std::numeric_limits<uint64_t>::max()), uint64_t{10393729187455219830U});\n         BOOST_CHECK_EQUAL(GetRandInt(std::numeric_limits<int>::max()), int{769702006});\n+        BOOST_CHECK_EQUAL(GetRandMicros(std::chrono::hours{1}).count(), 2917185654);\n+        BOOST_CHECK_EQUAL(GetRandMillis(std::chrono::hours{1}).count(), 2144374);\n     }\n     BOOST_CHECK_EQUAL(ctx1.rand32(), ctx2.rand32());\n     BOOST_CHECK_EQUAL(ctx1.rand32(), ctx2.rand32());\n@@ -47,6 +49,8 @@ BOOST_AUTO_TEST_CASE(fastrandom_tests)\n     for (int i = 10; i > 0; --i) {\n         BOOST_CHECK(GetRand(std::numeric_limits<uint64_t>::max()) != uint64_t{10393729187455219830U});\n         BOOST_CHECK(GetRandInt(std::numeric_limits<int>::max()) != int{769702006});\n+        BOOST_CHECK(GetRandMicros(std::chrono::hours{1}) != std::chrono::microseconds{2917185654});\n+        BOOST_CHECK(GetRandMillis(std::chrono::hours{1}) != std::chrono::milliseconds{2144374});\n     }\n     {\n         FastRandomContext ctx3, ctx4;\n@@ -87,7 +91,7 @@ BOOST_AUTO_TEST_CASE(stdrandom_test)\n         BOOST_CHECK(x >= 3);\n         BOOST_CHECK(x <= 9);\n \n-        std::vector<int> test{1,2,3,4,5,6,7,8,9,10};\n+        std::vector<int> test{1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n         std::shuffle(test.begin(), test.end(), ctx);\n         for (int j = 1; j <= 10; ++j) {\n             BOOST_CHECK(std::find(test.begin(), test.end(), j) != test.end());\n@@ -97,7 +101,6 @@ BOOST_AUTO_TEST_CASE(stdrandom_test)\n             BOOST_CHECK(std::find(test.begin(), test.end(), j) != test.end());\n         }\n     }\n-\n }\n \n /** Test that Shuffle reaches every permutation with equal probability. */"
      }
    ]
  }
]