[
  {
    "sha": "d387b8ec15e553db9b9c370314ee359e981fb374",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzg3YjhlYzE1ZTU1M2RiOWI5YzM3MDMxNGVlMzU5ZTk4MWZiMzc0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-05-05T11:22:28Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-05-06T07:34:54Z"
      },
      "message": "rpc: add `getblockchaininfo` and `getnetworkinfo`\n\nAdds two new info query commands that take over information from\nhodge-podge `getinfo`.\n\nAlso some new information is added:\n- `getblockchaininfo`\n  - `chain`: (string) current chain (main, testnet3, regtest)\n  - `verificationprogress: (numeric) estimated verification progress\n  - `chainwork`\n- `getnetworkinfo`\n  - `localaddresses`: (array) local addresses, from mapLocalHost (fixes #1734)",
      "tree": {
        "sha": "9d1b3a161e60aff59f00ee0e9ad1fcc75ccd5056",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d1b3a161e60aff59f00ee0e9ad1fcc75ccd5056"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d387b8ec15e553db9b9c370314ee359e981fb374",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d387b8ec15e553db9b9c370314ee359e981fb374",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d387b8ec15e553db9b9c370314ee359e981fb374",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d387b8ec15e553db9b9c370314ee359e981fb374/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d4ffe4e425b5a3f6fe4ff0ce7297608dfe6c7417",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4ffe4e425b5a3f6fe4ff0ce7297608dfe6c7417",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d4ffe4e425b5a3f6fe4ff0ce7297608dfe6c7417"
      }
    ],
    "stats": {
      "total": 107,
      "additions": 100,
      "deletions": 7
    },
    "files": [
      {
        "sha": "6bde1e79993f5c69cf1f1f2d544515d7b5ff7422",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d387b8ec15e553db9b9c370314ee359e981fb374/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d387b8ec15e553db9b9c370314ee359e981fb374/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=d387b8ec15e553db9b9c370314ee359e981fb374",
        "patch": "@@ -44,18 +44,13 @@ static const int MAX_OUTBOUND_CONNECTIONS = 8;\n bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOutbound = NULL, const char *strDest = NULL, bool fOneShot = false);\n \n \n-struct LocalServiceInfo {\n-    int nScore;\n-    int nPort;\n-};\n-\n //\n // Global state variables\n //\n bool fDiscover = true;\n uint64_t nLocalServices = NODE_NETWORK;\n-static CCriticalSection cs_mapLocalHost;\n-static map<CNetAddr, LocalServiceInfo> mapLocalHost;\n+CCriticalSection cs_mapLocalHost;\n+map<CNetAddr, LocalServiceInfo> mapLocalHost;\n static bool vfReachable[NET_MAX] = {};\n static bool vfLimited[NET_MAX] = {};\n static CNode* pnodeLocalHost = NULL;"
      },
      {
        "sha": "729b1bcd57484907f9a85fc14e6cf56d41631919",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d387b8ec15e553db9b9c370314ee359e981fb374/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d387b8ec15e553db9b9c370314ee359e981fb374/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=d387b8ec15e553db9b9c370314ee359e981fb374",
        "patch": "@@ -116,6 +116,13 @@ extern CCriticalSection cs_vAddedNodes;\n extern NodeId nLastNodeId;\n extern CCriticalSection cs_nLastNodeId;\n \n+struct LocalServiceInfo {\n+    int nScore;\n+    int nPort;\n+};\n+\n+extern CCriticalSection cs_mapLocalHost;\n+extern map<CNetAddr, LocalServiceInfo> mapLocalHost;\n \n class CNodeStats\n {"
      },
      {
        "sha": "1ed8a8e866e0e4521ad11d4c2a2693331179236e",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d387b8ec15e553db9b9c370314ee359e981fb374/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d387b8ec15e553db9b9c370314ee359e981fb374/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=d387b8ec15e553db9b9c370314ee359e981fb374",
        "patch": "@@ -6,6 +6,7 @@\n #include \"rpcserver.h\"\n #include \"main.h\"\n #include \"sync.h\"\n+#include \"checkpoints.h\"\n \n #include <stdint.h>\n \n@@ -429,3 +430,38 @@ Value verifychain(const Array& params, bool fHelp)\n     return VerifyDB(nCheckLevel, nCheckDepth);\n }\n \n+Value getblockchaininfo(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"getblockchaininfo\\n\"\n+            \"Returns an object containing various state info regarding block chain processing.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"chain\\\": \\\"xxxx\\\",        (string) current chain (main, testnet3, regtest)\\n\"\n+            \"  \\\"blocks\\\": xxxxxx,         (numeric) the current number of blocks processed in the server\\n\"\n+            \"  \\\"bestblockhash\\\": \\\"...\\\", (string) the hash of the currently best block\\n\"\n+            \"  \\\"difficulty\\\": xxxxxx,     (numeric) the current difficulty\\n\"\n+            \"  \\\"verificationprogress\\\": xxxx, (numeric) estimate of verification progress [0..1]\\n\"\n+            \"  \\\"chainwork\\\": \\\"xxxx\\\"     (string) total amount of work in active chain, in hexadecimal\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getblockchaininfo\", \"\")\n+            + HelpExampleRpc(\"getblockchaininfo\", \"\")\n+        );\n+\n+    proxyType proxy;\n+    GetProxy(NET_IPV4, proxy);\n+\n+    Object obj;\n+    std::string chain = Params().DataDir();\n+    if(chain.empty())\n+        chain = \"main\";\n+    obj.push_back(Pair(\"chain\",         chain));\n+    obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n+    obj.push_back(Pair(\"bestblockhash\", chainActive.Tip()->GetBlockHash().GetHex()));\n+    obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n+    obj.push_back(Pair(\"verificationprogress\", Checkpoints::GuessVerificationProgress(chainActive.Tip())));\n+    obj.push_back(Pair(\"chainwork\",     chainActive.Tip()->nChainWork.GetHex()));\n+    return obj;\n+}"
      },
      {
        "sha": "573d6cd3f670348d504ca4df0aa92f7f3919164b",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d387b8ec15e553db9b9c370314ee359e981fb374/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d387b8ec15e553db9b9c370314ee359e981fb374/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=d387b8ec15e553db9b9c370314ee359e981fb374",
        "patch": "@@ -333,3 +333,54 @@ Value getnettotals(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"timemillis\", static_cast<boost::int64_t>(GetTimeMillis())));\n     return obj;\n }\n+\n+Value getnetworkinfo(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"getnetworkinfo\\n\"\n+            \"Returns an object containing various state info regarding P2P networking.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"version\\\": xxxxx,           (numeric) the server version\\n\"\n+            \"  \\\"protocolversion\\\": xxxxx,   (numeric) the protocol version\\n\"\n+            \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n+            \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n+            \"  \\\"proxy\\\": \\\"host:port\\\",     (string, optional) the proxy used by the server\\n\"\n+            \"  \\\"relayfee\\\": x.xxxx,         (numeric) minimum relay fee for non-free transactions in btc/kb\\n\"\n+            \"  \\\"localaddresses\\\": [,        (array) list of local addresses\\n\"\n+            \"    \\\"address\\\": \\\"xxxx\\\",      (string) network address\\n\"\n+            \"    \\\"port\\\": xxx,              (numeric) network port\\n\"\n+            \"    \\\"score\\\": xxx              (numeric) relative score\\n\"\n+            \"  ]\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnetworkinfo\", \"\")\n+            + HelpExampleRpc(\"getnetworkinfo\", \"\")\n+        );\n+\n+    proxyType proxy;\n+    GetProxy(NET_IPV4, proxy);\n+\n+    Object obj;\n+    obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n+    obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n+    obj.push_back(Pair(\"timeoffset\",    (boost::int64_t)GetTimeOffset()));\n+    obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n+    obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n+    obj.push_back(Pair(\"relayfee\",      ValueFromAmount(CTransaction::nMinRelayTxFee)));\n+    Array localAddresses;\n+    {\n+        LOCK(cs_mapLocalHost);\n+        BOOST_FOREACH(const PAIRTYPE(CNetAddr, LocalServiceInfo) &item, mapLocalHost)\n+        {\n+            Object rec;\n+            rec.push_back(Pair(\"address\", item.first.ToString()));\n+            rec.push_back(Pair(\"port\", item.second.nPort));\n+            rec.push_back(Pair(\"score\", item.second.nScore));\n+            localAddresses.push_back(rec);\n+        }\n+    }\n+    obj.push_back(Pair(\"localaddresses\", localAddresses));\n+    return obj;\n+}"
      },
      {
        "sha": "f78cb420f436e2b5772cfb21bff2c8d7975caf30",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d387b8ec15e553db9b9c370314ee359e981fb374/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d387b8ec15e553db9b9c370314ee359e981fb374/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=d387b8ec15e553db9b9c370314ee359e981fb374",
        "patch": "@@ -228,6 +228,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"stop\",                   &stop,                   true,      true,       false },\n \n     /* P2P networking */\n+    { \"getnetworkinfo\",         &getnetworkinfo,         true,      false,      false },\n     { \"addnode\",                &addnode,                true,      true,       false },\n     { \"getaddednodeinfo\",       &getaddednodeinfo,       true,      true,       false },\n     { \"getconnectioncount\",     &getconnectioncount,     true,      false,      false },\n@@ -236,6 +237,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"ping\",                   &ping,                   true,      false,      false },\n \n     /* Block chain and UTXO */\n+    { \"getblockchaininfo\",      &getblockchaininfo,      true,      false,      false },\n     { \"getbestblockhash\",       &getbestblockhash,       true,      false,      false },\n     { \"getblockcount\",          &getblockcount,          true,      false,      false },\n     { \"getblock\",               &getblock,               false,     false,      false },"
      },
      {
        "sha": "1092c691beede19d23b2cfaffaf8e426c3e97b61",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d387b8ec15e553db9b9c370314ee359e981fb374/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d387b8ec15e553db9b9c370314ee359e981fb374/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=d387b8ec15e553db9b9c370314ee359e981fb374",
        "patch": "@@ -164,6 +164,8 @@ extern json_spirit::Value encryptwallet(const json_spirit::Array& params, bool f\n extern json_spirit::Value validateaddress(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getinfo(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getwalletinfo(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value getblockchaininfo(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value getnetworkinfo(const json_spirit::Array& params, bool fHelp);\n \n extern json_spirit::Value getrawtransaction(const json_spirit::Array& params, bool fHelp); // in rcprawtransaction.cpp\n extern json_spirit::Value listunspent(const json_spirit::Array& params, bool fHelp);"
      }
    ]
  }
]