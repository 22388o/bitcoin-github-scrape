fanquake,2017-06-08T07:21:45Z,Both linux builds timed out after ~48 minutes.,https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-307021322,307021322,
jnewbery,2017-06-08T14:30:37Z,"I suspect that this timeout is due to the python3-zmq Context not closing cleanly at the end of the zmq_test.py test. See https://stackoverflow.com/questions/17140417/termination-of-python-script-while-using-zeromq-with-dead-server for example.\n\nI'm working on a branch that fixes that behaviour here: https://github.com/jnewbery/bitcoin/tree/zmqtestimprovements . It's currently building in Trav",https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-307121335,307121335,
jnewbery,2017-06-08T15:05:35Z,"Opened #10555 to fix the python zmq issue. @achow101 - if rebasing on that resolves your travis issue, could you review/ACK that PR?",https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-307132027,307132027,
achow101,2017-06-08T18:51:57Z,Rebased on top of #10555 ,https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-307194390,307194390,
MarcoFalke,2017-06-18T12:26:03Z,Reopen. Was closed due to false positive regex match by GitHub.,https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-309274670,309274670,
achow101,2017-06-18T17:26:57Z,Rebased after #10555 merge.,https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-309290917,309290917,
achow101,2017-08-15T21:55:51Z,rebased,https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-322600911,322600911,
achow101,2017-08-23T23:50:59Z,Nits addresses (I think) and rebased (there were merge conflicts).,https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-324493724,324493724,
jnewbery,2017-09-06T22:57:58Z,"Tested ACK ba0b4f1c0a2c47f2f8c342686c94c6e358ea4efe, but needs rebase.",https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-327634559,327634559,
achow101,2017-09-06T23:07:39Z,Rebased,https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-327636245,327636245,
jnewbery,2017-09-06T23:53:13Z,Tested ACK a3696dcec45f11f202c1666084c4aa1f8fabd37f,https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-327643266,327643266,
promag,2017-09-07T00:14:02Z,"Just saw @jnewbery comment above:\n> An unfortunate aspect of this test is that it assumes an order for ZMQ notifications (tx > rawtx > hashblock > rawblock).\n\nCan be *fixed* with one socket per notification.",https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-327646330,327646330,
jnewbery,2017-09-18T15:51:19Z,"> Can be fixed with one socket per notification.\n\n@promag - sounds like a very sensible change. This PR simply extends what's already there so I think we should merge this as is. I'd be happy to review a follow-up PR if you want to implement that.",https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-330266927,330266927,
promag,2017-09-18T16:06:01Z,"@jnewbery agree. As for the follow up, I think it could be added somewhere in `TestFramework` something to abstract the sockets creation, to ease testing subscribers. As it is, it's too much verbose for testing purpose.",https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-330271664,330271664,
jnewbery,2017-09-19T13:34:18Z,"@promag \n\n> As for the follow up, I think it could be added somewhere in TestFramework something to abstract the sockets creation\n\nIf you're thinking of abstracting away the ZMQ interface, I think it would be better to add a new class in test_node.py to be owned by the `TestNode` class, like how I added a `TestNodeCLI` class in https://github.com/bitcoin/bitcoin/pull/10798\n\nHowever, th",https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-330540570,330540570,
achow101,2017-09-28T16:15:18Z,Can this be merged?,https://github.com/bitcoin/bitcoin/pull/10552#issuecomment-332887317,332887317,
jnewbery,2017-08-23T20:13:13Z,nit: why not placed alphabetically like the other imports?,https://github.com/bitcoin/bitcoin/pull/10552#discussion_r134858069,134858069,test/functional/test_framework/util.py
jnewbery,2017-08-23T20:13:42Z,"Please place this in the 'Utility Functions' section, rather than 'Node Functions'",https://github.com/bitcoin/bitcoin/pull/10552#discussion_r134858189,134858189,test/functional/test_framework/util.py
jnewbery,2017-08-23T20:14:33Z,why not just assign `txhash` on line 69. There's no reason to have `body` in this section.,https://github.com/bitcoin/bitcoin/pull/10552#discussion_r134858404,134858404,test/functional/zmq_test.py
jnewbery,2017-08-23T20:15:31Z,No need for the duplicated comment,https://github.com/bitcoin/bitcoin/pull/10552#discussion_r134858651,134858651,test/functional/zmq_test.py
jnewbery,2017-08-23T20:16:03Z,No need for this line,https://github.com/bitcoin/bitcoin/pull/10552#discussion_r134858757,134858757,test/functional/zmq_test.py
jnewbery,2017-08-23T20:16:32Z,I'd move this assert to immediately after the `topic = ...` line (like in the previous tests in this script).,https://github.com/bitcoin/bitcoin/pull/10552#discussion_r134858852,134858852,test/functional/zmq_test.py
promag,2017-09-06T23:54:45Z,"Nit, rename to hash256 to resemble `CHash256`?",https://github.com/bitcoin/bitcoin/pull/10552#discussion_r137418821,137418821,test/functional/test_framework/util.py
promag,2017-09-06T23:57:42Z,"Ultra nit, sort arguments.",https://github.com/bitcoin/bitcoin/pull/10552#discussion_r137419177,137419177,test/functional/zmq_test.py
achow101,2017-09-18T15:44:44Z,Done,https://github.com/bitcoin/bitcoin/pull/10552#discussion_r139460749,139460749,test/functional/test_framework/util.py
achow101,2017-09-18T15:44:47Z,Done,https://github.com/bitcoin/bitcoin/pull/10552#discussion_r139460772,139460772,test/functional/zmq_test.py
promag,2017-09-18T17:52:14Z,Move before `hex_str_to_bytes`.,https://github.com/bitcoin/bitcoin/pull/10552#discussion_r139493541,139493541,test/functional/test_framework/util.py
achow101,2017-09-19T02:08:14Z,Done,https://github.com/bitcoin/bitcoin/pull/10552#discussion_r139583043,139583043,test/functional/test_framework/util.py
