TheBlueMatt,2018-01-03T16:41:05Z,"Hmm, I mean in general its probably a terrible idea to be calling bitcoind's RPC from a browser directly...I would probably be happy to see this if we force the setting of an -alloworigin=$ORIGIN option (which implies IP whitelist as well) to force users to use it at least somewhat securely.",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-355059998,355059998,
lionello,2018-01-05T01:19:46Z,"There's plenty of good reason to enable RPC from browser, but I agree we have to make it opt-in. Will add that to the patch.",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-355447184,355447184,
gmaxwell,2018-01-08T02:01:47Z,"Things like this are not sufficient to make access from browsers safe, because we must also be safe even if the user has old browsers with CORS bugs on their system. (e.g. IIRC old IE was trivially bypassable).\n\nAs a result there would have to be a lot of developer resources available to implement, review, and characterize the full set of protections needed to prevent that from being a gaping ",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-355872083,355872083,
lionello,2018-02-06T04:27:39Z,"@gmaxwell Done: I've added the flag `-rpccorsdomain` to match the existing options (and similar option in Ethereum's Geth.)\n\nI've also added tests for that flag.\n\nAs for your question: we have an internal website that we use to sign transactions with hardware wallets. We use RPC to send out the signed transactions. We'd prefer to do this without a service (which needs audits, security upda",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-363307306,363307306,
Sjors,2018-02-20T16:06:43Z,"Needs rebase. I'm generally a fan of correct CORS / CSP headers, will review later.",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-367026886,367026886,
Sjors,2018-02-20T20:32:15Z,"POST works (assuming `bitcoin:bitcoin` credentials, running on port 8085):\n```\n\ncurl -X POST \\n  http://localhost:8085/ \\n  -H 'Authorization: Basic Yml0Y29pbjpiaXRjb2lu=' \\n  -H 'Cache-Control: no-cache' \\n  -H 'Content-Type: application/json' \\n  -d '{\n	""method"": ""getblockchaininfo""\n}'\n```\n\nBut OPTIONS doesn't:\n\n```\ncurl -X OPTIONS \\n  http://localhost:8085/ \\",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-367109475,367109475,
lionello,2018-02-21T00:22:19Z,"@Sjors Just using `OPTIONS` doesn't make it a valid CORS pre-flight request. Try this:\n\n```\ncurl -X OPTIONS \\n    http://localhost:8085/ \\n    -H 'Authorization: Basic Yml0Y29pbjpiaXRjb2lu=' \\n    -H 'Cache-Control: no-cache' \\n    -H 'Content-Type: application/json' \\n    -H 'Origin: null' \\n    -H 'access-control-request-method: POST' \\n    -d '{\n	""method"": ""getblockchainin",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-367169299,367169299,
Sjors,2018-02-22T09:35:59Z,"Same error unfortunately.\n\nIncorrect OPTIONS request should probably throw a unique error regardless.\n\nI tried your full example, but since the JSON payload itself shouldn't be needed in an OPTIONS request, I think it can be shortened a bit:\n```\ncurl -X OPTIONS \\n    http://localhost:8085/ \\n    -H 'Authorization: Basic Yml0Y29pbjpiaXRjb2lu=' \\n    -H 'Cache-Control: no-cache' \",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-367621680,367621680,
lionello,2018-02-22T10:30:32Z,@Sjors Did you provide the `-rpccorsdomain` command line arg?,https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-367638021,367638021,
Sjors,2018-02-22T17:50:33Z,"Yes, I used `-rpccorsdomain=http://localhost:8080`. However I used the wrong port in my `Origin` header.\n\nBetter error messages would be very useful here, either through the browser or `rpc` log entries.\n\nThis worked:\n\n```\ncurl -v -X OPTIONS \\n    http://localhost:8085/ \\n    -H 'Origin: http://localhost:8080' \\n    -H 'Access-Control-Request-Method: POST' \\n    -H 'Access-Co",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-367763831,367763831,
Sjors,2018-02-22T18:12:37Z,"Any malicious website would need to trick the user into handing out RPC authentication details, as well as setting `server=1` in `bitcoin.conf`.\n\nFor HTTP Basic Auth they need to trick the user into configuring `rpcuser=` and `rpcpassword=` or run the credentials script.  Otherwise they need to make the user find and upload the cookie.\n\nI think it would be particularly useful for data visu",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-367770496,367770496,
lionello,2018-04-18T08:50:18Z,@Sjors The default is still CORS disabled. Would you still want it to only be available with `--disable-wallet` or `--seatbelts=0`?,https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-382313609,382313609,
MarcoFalke,2018-05-09T18:40:25Z,Needs rebase if still relevant,https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-387836097,387836097,
lionello,2018-05-10T00:26:00Z,@MarcoFalke @Sjors Rebased.,https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-387914223,387914223,
takahser,2018-11-06T17:12:28Z,any news on that one? is it going to be merged anytime soon?,https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-436332449,436332449,
lionello,2018-11-07T01:41:20Z,"Rebased, if anybody still cared.\n\nThis patch got merged in Bitcoin ABC which was what I cared about ;)",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-436472932,436472932,
takahser,2018-11-07T08:43:14Z,"@lionello that was quick, thank you.\nI hope this will get merged soon, since I'd like to spin up some CORS-enabled bitcoind nodes.",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-436547575,436547575,
ryanofsky,2018-11-07T16:11:11Z,"This seems like a nice change, and I'd really curious to know what some use-cases are. (Lacking web background, or enough of an imagination myself...)\n\nMaybe something about this could also be added to the documentation https://github.com/bitcoin/bitcoin/blob/master/doc/REST-interface.md",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-436678557,436678557,
takahser,2018-11-07T16:45:06Z,"@ryanofsky in my case, I'm considering to use in `disablewallet` mode as a bitcoin node, that is used by a web wallet, for fetching and sending transactions (transactions are signed on the client, so no private key's are sent around the network). Ofc we can't say for sure, who (which IP) will use the web wallet, but they have one thing in common: the URL of the webwallet. We can leverage this piec",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-436692026,436692026,
lionello,2018-11-08T00:53:23Z,"@ryanofsky The scenarios are having a website interact with the blockchain node directly, without the need for a backend: browser --rpc--> bitcoind. You can do transaction signing in the browser (JS libs, or HW device) and send transactions directly.",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-436833345,436833345,
Sjors,2018-11-10T17:04:23Z,"Actually NAT doesn't help, because an attacker could tell a user to run `bitcoind -rpccorsdomain=http://evil.com/` and have them visit  `http://evil.com/` which would then empty the users wallet (`https://evil.com` might not work because some browsers refuse to XHR to `http` from an `https` site, but I'd have to test that).",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-437598771,437598771,
Sjors,2018-11-20T18:54:35Z,"I missed how much RPC and REST are intertwined; it's one and the same server, not a separate one as I assumed. So in the examples above I'm just making normal (authenticated) JSON-RPC requests. Let's try that again:\n\n```\ncurl 'http://localhost:8080/rest/chaininfo.json' -H 'Origin: http://localhost:8080'    -H 'Content-Type: application/json'  -H 'Accept: application/json'\n```\n\nThe [RES",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-440389910,440389910,
Sjors,2018-11-20T19:33:56Z,"After brief IRC [discussion](http://www.erisian.com.au/bitcoin-core-dev/log-2018-11-20.html#l-326) today I'm switching to light Concept NACK. \n\nThe REST API wasn't intended for this use case. It's meant as a more performant alternative to the JSON-RPC (using `bin` and `hex` formats). It's not battle hardened so should only be called by semi trusted software locally. It's not safe against DoS.",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-440402519,440402519,
DrahtBot,2019-05-13T16:47:12Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-491899968,491899968,
fanquake,2019-06-17T09:28:21Z,"Going to close this. A couple of (implied?) NACKs, and a reversal from a  utACK to NACK, no further discussion for 8 months. ",https://github.com/bitcoin/bitcoin/pull/12040#issuecomment-502607335,502607335,
practicalswift,2018-11-07T18:03:18Z,Nit: Missing space after `=` :-),https://github.com/bitcoin/bitcoin/pull/12040#discussion_r231616144,231616144,test/functional/interface_http.py
lionello,2018-11-08T00:58:51Z,"Weird, it was fixed in 20d3c18964dff877c2fbf7189819412289eaaab2 but still shows without the space.",https://github.com/bitcoin/bitcoin/pull/12040#discussion_r231734377,231734377,test/functional/interface_http.py
lionello,2018-11-08T01:00:07Z,My bad. Fixed in 210b8ee1fbf79cff98bf76d53b4f35bc9cdd02d2,https://github.com/bitcoin/bitcoin/pull/12040#discussion_r231734602,231734602,test/functional/interface_http.py
Sjors,2018-11-10T16:34:58Z,Let's call this `str_rest_cors_domain` ([new naming convention](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#variable-names)) and the parameter `-restcorsdomain` (since it's only used with `-rest=1`).,https://github.com/bitcoin/bitcoin/pull/12040#discussion_r232457734,232457734,src/httprpc.cpp
lionello,2018-11-12T05:53:56Z,"The other options still use the old `-rpc...` naming though, so I'm not convinced this helps anyone. Even the variables declared right before `strRPCCORSDomain` use the old naming.",https://github.com/bitcoin/bitcoin/pull/12040#discussion_r232540990,232540990,src/httprpc.cpp
Sjors,2018-11-20T15:05:59Z,"I find the use of `-rpc` confusing when a setting is about the REST interface. `-rpcauth`, `-rpcuser` and `-rpcpassword` is shared between the regular RPC and REST so there it makes sense (although I'm not a fan of that sharing). The rest is just internal variables.",https://github.com/bitcoin/bitcoin/pull/12040#discussion_r235039087,235039087,src/httprpc.cpp
sipa,2018-11-20T16:18:05Z,"REST doesn't have authentication, I thought?",https://github.com/bitcoin/bitcoin/pull/12040#discussion_r235070466,235070466,src/httprpc.cpp
Sjors,2018-11-20T16:57:09Z,"@sipa it does, see my command-line example above. It has full wallet access too.",https://github.com/bitcoin/bitcoin/pull/12040#discussion_r235086763,235086763,src/httprpc.cpp
sipa,2018-11-20T17:11:05Z,"@Sjors I'm very confused. The REST interface only exposes public information (blocks, transactions with txindex, headers, chaininfo, utxoset, mempool), and should never require authentication. Does this PR change that? Your example seems to just use the RPC interface.",https://github.com/bitcoin/bitcoin/pull/12040#discussion_r235092254,235092254,src/httprpc.cpp
