practicalswift,2017-10-19T10:08:33Z,Concept ACK. Nice cleanup!,https://github.com/bitcoin/bitcoin/pull/11524#issuecomment-337862596,337862596,
sipa,2017-10-21T14:16:32Z,Concept ACK; I prefer @ryanofsky's suggestion as well.,https://github.com/bitcoin/bitcoin/pull/11524#issuecomment-338403160,338403160,
meshcollider,2017-10-22T10:07:50Z,"Concept ACK, nice cleanup.\nI too prefer @ryanofsky's version plus your comments :)",https://github.com/bitcoin/bitcoin/pull/11524#issuecomment-338466024,338466024,
tjps,2017-10-25T00:56:04Z,"@ryanofsky - I was unaware of std::partial_sort, and while it seems perfectly suited to this use case, all the benchmarks I found comparing it to std::sort seemed to indicate it was slower.  I'll leave it using std::sort for now.\n\nAlso since `removeLastKElements` is a no-op on an empty vector, I left it as a void return type and skipped the chained conditional return checks.  I think this make",https://github.com/bitcoin/bitcoin/pull/11524#issuecomment-339180312,339180312,
tjps,2017-10-26T18:47:57Z,Updated diff to include a little DRY/readability improvement at the end of the same function.,https://github.com/bitcoin/bitcoin/pull/11524#issuecomment-339762398,339762398,
TheBlueMatt,2017-11-06T17:29:24Z,utACK efa57568236cd7b3a80419e09e9babd546cbbda3,https://github.com/bitcoin/bitcoin/pull/11524#issuecomment-342223391,342223391,
sipa,2017-11-07T18:43:13Z,"utACK efa57568236cd7b3a80419e09e9babd546cbbda3, but can you follow the function naming convention (`EraseLastKElements`)?",https://github.com/bitcoin/bitcoin/pull/11524#issuecomment-342581199,342581199,
tjps,2017-11-07T23:34:36Z,"@sipa whoops, of course. Updated the function name.",https://github.com/bitcoin/bitcoin/pull/11524#issuecomment-342659928,342659928,
sipa,2017-11-07T23:36:39Z,"re-utACK 5ce7cb95180b7d8873dae91d8370bc7ea69cd2a7, only change is the function name.",https://github.com/bitcoin/bitcoin/pull/11524#issuecomment-342660316,342660316,
laanwj,2017-11-08T07:46:48Z,utACK 5ce7cb9,https://github.com/bitcoin/bitcoin/pull/11524#issuecomment-342736778,342736778,
MarcoFalke,2017-11-08T20:07:38Z,post merge utACK 5ce7cb95180b7d8873dae91d8370bc7ea69cd2a7,https://github.com/bitcoin/bitcoin/pull/11524#issuecomment-342943289,342943289,
ryanofsky,2017-10-31T18:26:33Z,"Maybe don't require comparator to be function pointer. It'd be nice to allow comparator to be a lambda or function class:\n\n```c++\ntemplate<typename T, typename Compare>\nstatic void removeLastKElements(std::vector<T> &elements, Compare comp, size_t k)\n{\n    std::sort(elements.begin(), elements.end(), comp);\n    ...\n}\n```",https://github.com/bitcoin/bitcoin/pull/11524#discussion_r148086314,148086314,src/net.cpp
ryanofsky,2017-10-31T18:30:16Z,"Naming convention in new code would call this `cut_size`. I would probably just inline this variable, though. Also I think it's a little weird how the code is using ""remove"" ""cut"" and ""erase"" interchangeably. I don't see why you wouldn't want to be consistent and just say ""erase"" everywhere.",https://github.com/bitcoin/bitcoin/pull/11524#discussion_r148087414,148087414,src/net.cpp
tjps,2017-11-01T20:25:30Z,"That's a good point, should have pulled that from your example.  Old habits die hard.",https://github.com/bitcoin/bitcoin/pull/11524#discussion_r148374223,148374223,src/net.cpp
tjps,2017-11-01T20:38:13Z,"I like `k` to refer to the K in the function name. I agree that the naming should be more consistent, switching to 'erase' across the board.",https://github.com/bitcoin/bitcoin/pull/11524#discussion_r148377382,148377382,src/net.cpp
TheBlueMatt,2017-11-06T16:43:03Z,"Technically this introduces undefined behavior - we no longer return early if we're gonna call erase(end()), which is undefined.",https://github.com/bitcoin/bitcoin/pull/11524#discussion_r149133606,149133606,src/net.cpp
ryanofsky,2017-11-06T16:55:47Z,"> Technically this introduces undefined behavior - we no longer return early if we're gonna call erase(end()), which is undefined.\n\nThis seems to be fine according to http://en.cppreference.com/w/cpp/container/vector/erase: ""The iterator first does not need to be dereferenceable if first==last: erasing an empty range is a no-op.""\n",https://github.com/bitcoin/bitcoin/pull/11524#discussion_r149137496,149137496,src/net.cpp
TheBlueMatt,2017-11-06T17:29:20Z,"Oops, indeed, somehow I missed that line.",https://github.com/bitcoin/bitcoin/pull/11524#discussion_r149147003,149147003,src/net.cpp
