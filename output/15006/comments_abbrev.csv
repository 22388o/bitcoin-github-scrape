DrahtBot,2018-12-20T00:36:44Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15937](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15937.html) (WIP: Add loadwallet and createwallet load_o",https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-448809019,448809019,
jonasschnelli,2018-12-20T01:13:07Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-448819127,448819127,
Sjors,2018-12-20T11:17:33Z,"Concept ACK.\n\nToday on IRC:\n<img width=""1114"" alt=""schermafbeelding 2018-12-20 om 11 17 16"" src=""https://user-images.githubusercontent.com/10217/50281883-d6d5c100-0448-11e9-98e8-1dd8d18af599.png"">\n",https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-448962210,448962210,
jnewbery,2018-12-20T19:29:43Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-449110284,449110284,
laanwj,2019-01-02T12:26:23Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-450851391,450851391,
laanwj,2019-01-21T19:10:10Z,"This fails travis:\n```\nAssertion failed: lock cs_wallet not held in wallet/wallet.cpp:1389; locks held:\nFAIL qt/test/test_bitcoin-qt (exit status: 134)\n```",https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-456173533,456173533,
achow101,2019-01-21T20:02:17Z,Fixed by rebasing,https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-456185280,456185280,
achow101,2019-01-22T03:53:00Z,I've decided to base this on #15226 instead of #14938.,https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-456262833,456262833,
achow101,2019-01-29T19:57:19Z,Rebased,https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-458684703,458684703,
achow101,2019-02-01T15:40:47Z,Rebased,https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-459764330,459764330,
achow101,2019-02-10T20:08:26Z,Rebased,https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-462167338,462167338,
fanquake,2019-02-15T03:24:24Z,"testing b69db9a; `src/bitcoin-cli createwallet test true false ""\""""`, `bitcoind` aborts with:\n```\n2019-02-15T03:19:38Z Using BerkeleyDB version Berkeley DB 4.8.30: (April  9, 2010)\n2019-02-15T03:19:38Z Using wallet /Users/michael/Library/Application Support/Bitcoin/wallets/test\n2019-02-15T03:19:38Z BerkeleyEnvironment::Open: LogDir=/Users/michael/Library/Application Support/Bitcoin/wallets",https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-463892153,463892153,
achow101,2019-02-15T04:49:43Z,Fixed that problem.,https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-463905718,463905718,
achow101,2019-02-16T05:30:53Z,I changed it so that you can make blank encrypted wallets,https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-464294299,464294299,
Sjors,2019-02-16T08:40:51Z,"Concept ACK on that change, but you broke wallet_createwallet.py :-)",https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-464316476,464316476,
achow101,2019-02-16T17:34:45Z,Should be fixed now.,https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-464365671,464365671,
Sjors,2019-02-19T08:07:22Z,"tACK 2fb944a\n\nI'm tempted to make `passphrase` the second argument, although that breaks backwards compatibility, so users can more easily ignore the more advanced `disable_private_keys` and `blank` arguments.\n\nMaybe we should just start making the RPC examples use named arguments.",https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-465028371,465028371,
achow101,2019-05-14T02:52:04Z,Addressed comments. Also rebased so that `IsValidNumArgs` is available.,https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-492058925,492058925,
laanwj,2019-05-16T16:19:03Z,"utACK 662d1171d9e29964b039ba4c5bc8a2304426c003\nGoing to merge this, I think the micro-nits can be addressed later and don't need to hold thi sup.",https://github.com/bitcoin/bitcoin/pull/15006#issuecomment-493135604,493135604,
practicalswift,2018-12-21T08:50:31Z,"~~Missing whitespace after `,`. Please run this newly added file through `black` to make sure formatting is correct :-)~~",https://github.com/bitcoin/bitcoin/pull/15006#discussion_r243521069,243521069,test/functional/wallet_createwallet.py
Sjors,2018-12-21T11:48:27Z,"@practicalswift that's an upstream test from #14938, where this has been fixed.",https://github.com/bitcoin/bitcoin/pull/15006#discussion_r243561498,243561498,test/functional/wallet_createwallet.py
laanwj,2019-01-31T13:12:14Z,"`handleCanGetAddressesChanged` is a terrible method name in itself, took me at least 5 minutes to decode it, please add a comment saying it's a handler for changes in whether addresses can be generated or not :-)",https://github.com/bitcoin/bitcoin/pull/15006#discussion_r252660851,252660851,src/interfaces/wallet.cpp
laanwj,2019-01-31T13:14:42Z,I remember I had a comment on this (please factor out the value→cli functionality to a function instead of duplicating it) but somehow it got lost …,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r252661615,252661615,test/functional/test_framework/test_node.py
achow101,2019-01-31T15:39:45Z,"Since this issue affects multiple PRs, I've split the fix into a separate PR: #15301",https://github.com/bitcoin/bitcoin/pull/15006#discussion_r252718076,252718076,test/functional/test_framework/test_node.py
achow101,2019-01-31T20:03:35Z,That's a change from #15225 and out of scope for this pr. sorry.,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r252819979,252819979,src/interfaces/wallet.cpp
Sjors,2019-01-31T20:29:09Z,"Fwiw I find it easy enough to read, but I'm used to similar nomenclature from iOs :-)",https://github.com/bitcoin/bitcoin/pull/15006#discussion_r252828152,252828152,src/interfaces/wallet.cpp
jnewbery,2019-01-31T21:51:21Z,"hmmm, bizarre. You definitely did have a comment here because I responded to it!",https://github.com/bitcoin/bitcoin/pull/15006#discussion_r252855356,252855356,test/functional/test_framework/test_node.py
MarcoFalke,2019-02-12T23:51:45Z,"```suggestion\n                    {""passphrase"", RPCArg::Type::STR, /* default */ ""''"", ""Encrypt the wallet with this passphrase. The empty string (\""\"") will result in an unencrypted wallet.""},\n```\n\nMention that the default value is the empty string `""\""\""""` or `""''""`.",https://github.com/bitcoin/bitcoin/pull/15006#discussion_r256196630,256196630,src/wallet/rpcwallet.cpp
achow101,2019-02-15T02:19:22Z,There really isn't a default value as the default is that there is no password and the wallet is unencrypted. So I've changed this to be `RPCArg::Optional::OMITTED`.,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r257085176,257085176,src/wallet/rpcwallet.cpp
Sjors,2019-02-15T15:11:46Z,nit: move to a shared function so it's more clear this is identical to `encryptwallet`,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r257270945,257270945,src/wallet/rpcwallet.cpp
Sjors,2019-02-15T15:14:52Z,Add comment why you're temporarily making the wallet blank:,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r257272256,257272256,src/wallet/rpcwallet.cpp
Sjors,2019-02-15T15:17:59Z,Can you (add a comment to) explain why? ,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r257273567,257273567,src/wallet/rpcwallet.cpp
Sjors,2019-02-15T15:18:41Z,Nit: 1 key (and explain that normally encrypting a wallet adds new keys),https://github.com/bitcoin/bitcoin/pull/15006#discussion_r257273862,257273862,test/functional/wallet_createwallet.py
achow101,2019-02-16T05:20:07Z,It's not identical. There isn't enough shared here to warrant that IMO,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r257447291,257447291,src/wallet/rpcwallet.cpp
achow101,2019-02-16T05:29:47Z,Done,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r257447499,257447499,src/wallet/rpcwallet.cpp
achow101,2019-02-16T05:29:53Z,I removed that,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r257447501,257447501,src/wallet/rpcwallet.cpp
achow101,2019-02-16T05:30:20Z,fine,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r257447511,257447511,test/functional/wallet_createwallet.py
ryanofsky,2019-03-19T15:28:35Z,"I think it would be safer raise an error if the passphrase is non-null and empty instead of pretending the passphrase wasn't provided. I'm imagining a buggy shell script with `bitcoin-cli createwallet ""$NAME"" false false ""$PASS""` that forgot to set the PASS variable or spelled it differently. Better to fail in this case than go on like nothing's wrong.",https://github.com/bitcoin/bitcoin/pull/15006#discussion_r266949472,266949472,src/wallet/rpcwallet.cpp
achow101,2019-03-19T16:22:18Z,Done,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r266978011,266978011,src/wallet/rpcwallet.cpp
promag,2019-04-02T14:12:07Z,Is there a reason to have this after the above `AddWallet`? Currently if something fails the wallet is kept.,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r271325695,271325695,src/wallet/rpcwallet.cpp
promag,2019-04-14T19:58:52Z,I suggest moving this before `AddWallet(wallet)`.,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r275171693,275171693,src/wallet/rpcwallet.cpp
promag,2019-04-14T19:59:28Z,Don't know how could these be tested.,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r275171729,275171729,src/wallet/rpcwallet.cpp
promag,2019-04-30T14:32:08Z,`... if a non empty passphrase is specified.`,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r279782238,279782238,doc/release-notes-15006.md
promag,2019-04-30T14:32:35Z,IDK if it should trim?,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r279782411,279782411,src/wallet/rpcwallet.cpp
jnewbery,2019-05-02T20:59:44Z,Consider changing this to `IsValidNumArgs()` rather than manually setting the number of params.,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r280594018,280594018,src/wallet/rpcwallet.cpp
jnewbery,2019-05-02T21:07:33Z,Should the wallet be relocked after setting the seed?,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r280596407,280596407,src/wallet/rpcwallet.cpp
jnewbery,2019-05-02T21:14:08Z,"Suggest adding the following tests:\n\n- test that the wallet is locked by calling a method that requires the wallet to be unlocked (eg `signmessage`) and testing that it triggers an error\n- test that there are no keys in the wallet",https://github.com/bitcoin/bitcoin/pull/15006#discussion_r280598475,280598475,test/functional/wallet_createwallet.py
jnewbery,2019-05-02T21:14:29Z,nit: prefer using named arguments for clarity,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r280598584,280598584,test/functional/wallet_createwallet.py
jnewbery,2019-05-02T21:14:40Z,nit: s/1 keys/1 key/,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r280598639,280598639,test/functional/wallet_createwallet.py
jnewbery,2019-05-02T21:15:12Z,"again, I suggest testing that the wallet is locked immediately after creation (this test will currently fail).",https://github.com/bitcoin/bitcoin/pull/15006#discussion_r280598792,280598792,test/functional/wallet_createwallet.py
sipa,2019-05-09T23:06:46Z,It seems you accidentally the grammar.,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r282697875,282697875,src/wallet/rpcwallet.cpp
achow101,2019-05-14T02:49:46Z,Done,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r283607852,283607852,src/wallet/rpcwallet.cpp
achow101,2019-05-14T02:50:32Z,"They can't, but the error still needs to be handled in case of disk corruption.",https://github.com/bitcoin/bitcoin/pull/15006#discussion_r283607978,283607978,src/wallet/rpcwallet.cpp
achow101,2019-05-14T02:50:37Z,Done,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r283608000,283608000,doc/release-notes-15006.md
achow101,2019-05-14T02:50:52Z,I don't think so. ,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r283608038,283608038,src/wallet/rpcwallet.cpp
achow101,2019-05-14T02:50:57Z,Done,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r283608050,283608050,src/wallet/rpcwallet.cpp
achow101,2019-05-14T02:51:21Z,I've changed it to relock since that's what encryptwallet does after encryption.,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r283608122,283608122,src/wallet/rpcwallet.cpp
achow101,2019-05-14T02:51:26Z,Done,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r283608132,283608132,test/functional/wallet_createwallet.py
achow101,2019-05-14T02:51:29Z,Done,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r283608141,283608141,test/functional/wallet_createwallet.py
achow101,2019-05-14T02:51:33Z,Done,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r283608153,283608153,test/functional/wallet_createwallet.py
achow101,2019-05-14T02:51:40Z,Done,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r283608172,283608172,test/functional/wallet_createwallet.py
achow101,2019-05-14T02:51:45Z,Fixed,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r283608184,283608184,src/wallet/rpcwallet.cpp
jnewbery,2019-05-16T15:01:15Z,"nit: I think this could help text could be improved by adding a second sentence: ""If no passphrase is provided, the wallet will not be encrypted on creation.""",https://github.com/bitcoin/bitcoin/pull/15006#discussion_r284753023,284753023,src/wallet/rpcwallet.cpp
jnewbery,2019-05-16T15:03:53Z,"nit: It'd be a better user experience if we error'ed out when the user provides `disable_private_keys=true` and `passphrase=something`. If they provide that input, they're expecting the wallet to be encrypted somehow. Better to error out and say ""wallets without private keys cannot be encrypted"" than just swallow the passphrase silently.",https://github.com/bitcoin/bitcoin/pull/15006#discussion_r284754328,284754328,src/wallet/rpcwallet.cpp
jnewbery,2019-05-16T15:12:05Z,"micronit: I always prefer named arguments in tests, so there's no ambiguity about what the RPC method call should be. In that case it'd be `...wblank.signmessage, address=""fakeaddress"", message=""test""` here.\n\nEDIT: `assert_raises_rpc_error()` itself takes an argument called `message`, so this doesn't work. We should fix that (in a different PR) by making `assert_raises_rpc_error`'s argument so",https://github.com/bitcoin/bitcoin/pull/15006#discussion_r284758660,284758660,test/functional/wallet_createwallet.py
jnewbery,2019-05-16T15:14:18Z,"micronit: again, I'd prefer named arguments here (and dropping the unneeded optional arguments):\n\n```\nassert_raises_rpc_error(-16, 'Cannot encrypt a wallet with a blank password', self.nodes[0].createwallet, wallet_name='w7', passphrase='')\n```\n",https://github.com/bitcoin/bitcoin/pull/15006#discussion_r284759771,284759771,test/functional/wallet_createwallet.py
MarcoFalke,2019-05-16T17:18:07Z,Or use a lambda to bind the named args?,https://github.com/bitcoin/bitcoin/pull/15006#discussion_r284813137,284813137,test/functional/wallet_createwallet.py
