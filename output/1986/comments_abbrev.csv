laanwj,2012-11-05T07:41:10Z,"I agree this is useful, even with encrypted transport over SSL it's a safe precaution to not use cleartext passwords.\n\nIt's a pity though that we need to invent our own authentication scheme for this, but it looks like you evaluated the other options already.\n\nOne question: taking a quick look at the code I don't see any challenge response code in there. How well does this withstand replay att",https://github.com/bitcoin/bitcoin/pull/1986#issuecomment-10062557,10062557,
jgarzik,2012-11-05T16:57:13Z,"Your basic impression is sound.  HTTP Digest was the preferred solution, but that introduces an additional round-trip to obtain a server nonce value, mitigating replay attacks.\n\nLacking that round trip to gain additional protection, the best one can do is make sure the embedded time is within a certain window.  Currently there are no time checks, because I wanted to get some feedback as to best ",https://github.com/bitcoin/bitcoin/pull/1986#issuecomment-10078302,10078302,
jgarzik,2012-11-05T18:08:32Z,"Just added a commit to clamp the timestamp to +/- 60 seconds.\n\nHowever, it is still open for discussion, because this is a usability issue:  users with a drifting clock will get an unfriendly, vague ""not authorized"" error message.  The window should be as small as possible... while still being wide enough to avoid most users hitting this issue.\n\n(of course, I think all users should be running ",https://github.com/bitcoin/bitcoin/pull/1986#issuecomment-10081088,10081088,
gmaxwell,2012-11-05T18:37:38Z,So why not use digest auth instead of something custom (and fragile) and solve the latency concerns by persisting the connection where you're concerned with that.  The session bring up tear down has more of those nasty round trips in any case.\n,https://github.com/bitcoin/bitcoin/pull/1986#issuecomment-10082143,10082143,
jgarzik,2012-11-05T19:00:49Z,"""custom and fragile"" is oversold, considering this is intentionally highly similar to Amazon S3's HMAC authentication scheme.  S3 must even deal with the same issue: picking a time window encompassing average client clock drift, without shutting out too many.  I think they chose 5 minutes.\n",https://github.com/bitcoin/bitcoin/pull/1986#issuecomment-10083046,10083046,
gavinandresen,2012-11-05T19:08:17Z,"RE: times:  default should be 'as secure as possible.'  Users should sync their clocks (but an if (fDebug) printf(""rpc timestamp out of sync..."") would be nice to make it easier to debug but not open up non -debug usage to flood-of-bad-authorization DoS attack).\n\nRE: custom and fragile:\n\nThis seems less fragile than the old, maybe-soon-to-be-broken, MD5-based HTTP digest authorization. Jeff: a",https://github.com/bitcoin/bitcoin/pull/1986#issuecomment-10083337,10083337,
gmaxwell,2012-11-05T19:26:28Z,I'm just concerned that we're solving things that weren't obvious a problem with novel cryptographic authentication protocols.   Even with authentication it is still unacceptable to run RPC across an insecure network because an active attacker can just intercept and replace RPC calls (not to mention sniffing the content)... and without connection persistence anything latency sensitive will still s,https://github.com/bitcoin/bitcoin/pull/1986#issuecomment-10084019,10084019,
gavinandresen,2012-11-10T22:55:21Z,"The DKIM RFC 6376 : http://www.ietf.org/rfc/rfc6376.txt ... also seems very similar.  It uses an explicit expiration time, which seems like the right thing to do.\n\nIt is overly complicated for this (e.g. we don't need multiple signature algorithms, don't need to specify which headers are part of the signature hash, etc), but I always like adopting or adapting an existing standard that experts ha",https://github.com/bitcoin/bitcoin/pull/1986#issuecomment-10260979,10260979,
luke-jr,2012-11-13T05:59:01Z,Needs rebase\n,https://github.com/bitcoin/bitcoin/pull/1986#issuecomment-10316647,10316647,
jgarzik,2012-11-16T02:33:26Z,Rebased.  Still need to address valid @gavinandresen etc. comments.\n,https://github.com/bitcoin/bitcoin/pull/1986#issuecomment-10434614,10434614,
BitcoinPullTester,2012-11-23T16:02:56Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/010cc65142f83b1045bc21b64cfe7cb46b8eff78 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1986#issuecomment-10663520,10663520,
jgarzik,2013-05-30T17:00:28Z,"Closing.  Will reopen with closer integration with Amazon S3 spec, as per comments.\n",https://github.com/bitcoin/bitcoin/pull/1986#issuecomment-18694001,18694001,
luke-jr,2013-08-19T18:05:43Z,"Found a bug. The initial request sends ""Connection: close"" header, but then if the server requests Basic auth instead, it sends the retry over the same socket (which is now closed).\n",https://github.com/bitcoin/bitcoin/pull/1986#issuecomment-22891796,22891796,
gavinandresen,2012-11-05T16:52:00Z,"What is the format of strDate?  And shouldn't there be a check here to make sure strDate is reasonably close to the current time, to prevent replay attacks?\n",https://github.com/bitcoin/bitcoin/pull/1986#discussion_r2031692,2031692,src/bitcoinrpc.cpp
jgarzik,2012-11-05T16:59:14Z,"1) Format:  Unix time (number of seconds since epoch)\n\n2) Yes, there should be a check.  See main pull req discussion, querying the best time window.\n",https://github.com/bitcoin/bitcoin/pull/1986#discussion_r2031801,2031801,src/bitcoinrpc.cpp
