luke-jr,2015-07-07T06:02:54Z,"Inspired by Bitcoin XT and @petertodd's ""Satoshi RBF"" merely renaming the base codebase rather than appending on to the end or adding comments.\n",https://github.com/bitcoin/bitcoin/pull/6385#issuecomment-119082205,119082205,
jgarzik,2015-07-07T06:48:34Z,Personally I would only do half of this:  Create the FormatUserAgent() wrapper.  Then drop the rest.\n\nThat way forks have a very easy way to change the UA - change one modular function - without us having to worrying about a struct with a single use case inside the core code itself.\n,https://github.com/bitcoin/bitcoin/pull/6385#issuecomment-119090827,119090827,
luke-jr,2015-07-07T06:54:35Z,@jgarzik That doesn't make sense to me. The FormatUserAgent function doesn't do anything except handle the structs... Do you mean UAInitialiser?\n,https://github.com/bitcoin/bitcoin/pull/6385#issuecomment-119093317,119093317,
luke-jr,2015-07-07T06:56:10Z,"Oh, and I forgot the original reason I started doing this: so the alert code can be compared to each codebase component individually. Eg, an alert targeting Satoshi 0.10.2 ought to be picked up by minor forks by default, without having to make a special alert for each variant.\n",https://github.com/bitcoin/bitcoin/pull/6385#issuecomment-119094026,119094026,
jgarzik,2015-07-07T07:00:03Z,"@luke-jr vUserAgentCodebases is static - this basically adds complexity that is not needed for this codebase.\n\nA less intrusive change centralizing the user version composition makes sense for all codebases, and would be a useful cleanup.\n\nOther codebases can append to the version string without all this complexity, either.\n",https://github.com/bitcoin/bitcoin/pull/6385#issuecomment-119095011,119095011,
laanwj,2015-07-07T07:28:25Z,Agree with @jgarzik. I'm not convinced that we need the extra complexity and boilerplate here.\nWhat is the use of a vector of involved codebases inside one codebase? You're at most in one codebase at a time.\n,https://github.com/bitcoin/bitcoin/pull/6385#issuecomment-119103476,119103476,
luke-jr,2015-07-09T09:17:37Z,"@laanwj Derived codebases such as my ""ljr"" forks and (at present) Mike Hearn's Bitcoin XT should be using /Satoshi:x.y.z/Derived:ver/, rather than discarding the hierarchy entirely. Peter Todd's RBF forks should be using a simple comment (since it's just policy). These kinds of modifications are at present unnecessarily complex and conflicting (eg, RBF+ljr+XT don't merge cleanly). Furthermore, ale",https://github.com/bitcoin/bitcoin/pull/6385#issuecomment-119883902,119883902,
jonasschnelli,2015-07-24T11:33:26Z,Concept ACK.\nHow would this intersects with https://github.com/bitcoin/bitcoin/pull/6462?\n,https://github.com/bitcoin/bitcoin/pull/6385#issuecomment-124493373,124493373,
laanwj,2015-08-20T15:40:03Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/6385#issuecomment-133055145,133055145,
jgarzik,2015-09-16T13:27:26Z,"I would love to see _just_ the FormatUserAgent() transformation in a 1st commit.  That seems immediately mergeable.  Still unconvinced about the overall change -- the default is static always in master, and users who need this are likely knowledgeable enough to accomplish the same thing more easily.\n\nUsually FLOSS source code bases of all stripes simply create a single ""version_extra"" metavariab",https://github.com/bitcoin/bitcoin/pull/6385#issuecomment-140741889,140741889,
laanwj,2015-09-24T11:44:23Z,"I agree again with @jgarzik. Let's just make the extra version easy to patch, but the extra machinery around it doesn't seem worth the extra complexity just to avoid a trivial merge conflict.\n\nAs for alerts, if the alert system in its current form survives at all it's not going to be used for anything that fine-grained, just network-wide alerts. Specific software can have its own mechanisms (thi",https://github.com/bitcoin/bitcoin/pull/6385#issuecomment-142905750,142905750,
laanwj,2015-09-24T12:03:10Z,Closing this for now.\n,https://github.com/bitcoin/bitcoin/pull/6385#issuecomment-142910462,142910462,
