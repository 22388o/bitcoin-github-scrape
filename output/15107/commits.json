[
  {
    "sha": "e1386cc4f21f496345545d59416059d6c15d146b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTM4NmNjNGYyMWY0OTYzNDU1NDVkNTk0MTYwNTlkNmMxNWQxNDZi",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-05T00:21:26Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-01-05T00:21:26Z"
      },
      "message": "rest: Return 404 in /rest/headers if block hash does not exists",
      "tree": {
        "sha": "dabbf08df61bb7e8129d1e875ce269af40f646c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dabbf08df61bb7e8129d1e875ce269af40f646c8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1386cc4f21f496345545d59416059d6c15d146b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1386cc4f21f496345545d59416059d6c15d146b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e1386cc4f21f496345545d59416059d6c15d146b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1386cc4f21f496345545d59416059d6c15d146b/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f7e182a973ed66b4c11dc6239e57016655503b4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7e182a973ed66b4c11dc6239e57016655503b4c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f7e182a973ed66b4c11dc6239e57016655503b4c"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "eefe29adb22d21d8267c0849f66995946db1a26c",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1386cc4f21f496345545d59416059d6c15d146b/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1386cc4f21f496345545d59416059d6c15d146b/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=e1386cc4f21f496345545d59416059d6c15d146b",
        "patch": "@@ -143,6 +143,7 @@ static bool rest_headers(HTTPRequest* req,\n         LOCK(cs_main);\n         tip = chainActive.Tip();\n         const CBlockIndex* pindex = LookupBlockIndex(hash);\n+        if (!pindex) return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n         while (pindex != nullptr && chainActive.Contains(pindex)) {\n             headers.push_back(pindex);\n             if (headers.size() == (unsigned long)count)"
      },
      {
        "sha": "44d3b14217e848d607958a22f9f793e01d127ffa",
        "filename": "test/functional/interface_rest.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1386cc4f21f496345545d59416059d6c15d146b/test/functional/interface_rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1386cc4f21f496345545d59416059d6c15d146b/test/functional/interface_rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_rest.py?ref=e1386cc4f21f496345545d59416059d6c15d146b",
        "patch": "@@ -201,6 +201,10 @@ def run_test(self):\n         self.log.info(\"Test the /block and /headers URIs\")\n         bb_hash = self.nodes[0].getbestblockhash()\n \n+        # Should give 404 if block hash does not exists\n+        self.test_rest_request('/block/0000000000000000000000000000000000000000000000000000000000000000', status=404, ret_type=RetType.OBJ)\n+        self.test_rest_request('/headers/1/0000000000000000000000000000000000000000000000000000000000000000', status=404, ret_type=RetType.OBJ)\n+\n         # Check binary format\n         response = self.test_rest_request(\"/block/{}\".format(bb_hash), req_type=ReqType.BIN, ret_type=RetType.OBJ)\n         assert_greater_than(int(response.getheader('content-length')), 80)"
      }
    ]
  }
]