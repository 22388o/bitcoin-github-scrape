[
  {
    "sha": "6a5ccd65c704253b7442b54064f5ba281c34fd26",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTVjY2Q2NWM3MDQyNTNiNzQ0MmI1NDA2NGY1YmEyODFjMzRmZDI2",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-08-06T18:49:14Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-08-06T18:49:14Z"
      },
      "message": "scripted-diff: Rename JoinErrors in more general MakeUnorderedList\n\n-BEGIN VERIFY SCRIPT-\nsed -i -e 's/JoinErrors/MakeUnorderedList/' -- src/qt/bitcoin.cpp\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "aad30deab9c06bcdab9e5b48b1428706b71e37cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aad30deab9c06bcdab9e5b48b1428706b71e37cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a5ccd65c704253b7442b54064f5ba281c34fd26",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmENhCoACgkQQQEIES5+\nqB/3dw/9Hj67B8v1NJaTuHOpZIVco4hI1nRzEbOYhUz3+EOKFftz5Cc7ivLQWXS0\nmDtE0ZcJoBp9oigZd3456bplQJ08+CuJcUNp2mgAHKNhxyY89qMzW0g0kl+YW388\nUghDFauSM08N/iVUhVpBW7INwxZI2unuuFnCZUi8/WQ8nyg0JueJipGvFTTvYUnE\n0vMoowGAETIm12qFVtNDGnFK049+4YQdGjtl6w0Bfc6M9pPb52qPjB2PprlNFZFp\n3noPvF2AvWvWqEAA+W4myveMe+1r/BxgBYpDLAG832SKiYZ1gvkw9n8siguGq4BZ\nf+sSXOd9qCqaVKlmyB+Pqms+kCB8wtnNEn4f4SOIAqXNpjPRJ7h7ofy/1M3cOUrT\npy+CPEXCKsue9Qj1NVE6uGlkZkHuMoo4EVqRq6GuSneBxSRVU9FURN27PxITNB53\nPiZEwG0Q8td6etTcHjuV5WE7AW3EwmcdlSgrpTsvIeJNu4EP1o0I3F353KMWnWH1\nAFYlS3XAKVd54lkCyAvofJ8HLvwLD40hPFFdTWzn/DX8qCTtWJmAN0XtxEfgEhlq\nJzZwsQtQE7mbMBrrqa7sm5pi8aD4BFtc0/0AyXG0M5OGKvyRhr75d8T+ezWnVqy1\nQfk92XoCiCOTICJtROgictmE4IKm3ACU0ULOEb1yguy1A/huwtE=\n=D9Cx\n-----END PGP SIGNATURE-----",
        "payload": "tree aad30deab9c06bcdab9e5b48b1428706b71e37cf\nparent 03826aecc56c5c5c76570805897c2ddf92e11ab6\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1628275754 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1628275754 +0300\n\nscripted-diff: Rename JoinErrors in more general MakeUnorderedList\n\n-BEGIN VERIFY SCRIPT-\nsed -i -e 's/JoinErrors/MakeUnorderedList/' -- src/qt/bitcoin.cpp\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a5ccd65c704253b7442b54064f5ba281c34fd26",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a5ccd65c704253b7442b54064f5ba281c34fd26",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a5ccd65c704253b7442b54064f5ba281c34fd26/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "03826aecc56c5c5c76570805897c2ddf92e11ab6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03826aecc56c5c5c76570805897c2ddf92e11ab6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/03826aecc56c5c5c76570805897c2ddf92e11ab6"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "ababab31d351b42b3460e7c18d6af05238b66144",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a5ccd65c704253b7442b54064f5ba281c34fd26/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a5ccd65c704253b7442b54064f5ba281c34fd26/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=6a5ccd65c704253b7442b54064f5ba281c34fd26",
        "patch": "@@ -144,7 +144,7 @@ static void initTranslations(QTranslator &qtTranslatorBase, QTranslator &qtTrans\n         QApplication::installTranslator(&translator);\n }\n \n-static std::string JoinErrors(const std::vector<std::string>& errors)\n+static std::string MakeUnorderedList(const std::vector<std::string>& errors)\n {\n     return Join(errors, \"\\n\", [](const std::string& error) { return \"- \" + error; });\n }\n@@ -158,13 +158,13 @@ static bool InitSettings()\n     std::vector<std::string> errors;\n     if (!gArgs.ReadSettingsFile(&errors)) {\n         bilingual_str error = _(\"Settings file could not be read\");\n-        InitError(Untranslated(strprintf(\"%s:\\n%s\\n\", error.original, JoinErrors(errors))));\n+        InitError(Untranslated(strprintf(\"%s:\\n%s\\n\", error.original, MakeUnorderedList(errors))));\n \n         QMessageBox messagebox(QMessageBox::Critical, PACKAGE_NAME, QString::fromStdString(strprintf(\"%s.\", error.translated)), QMessageBox::Reset | QMessageBox::Abort);\n         /*: Explanatory text shown on startup when the settings file cannot be read.\n             Prompts user to make a choice between resetting or aborting. */\n         messagebox.setInformativeText(QObject::tr(\"Do you want to reset settings to default values, or to abort without making changes?\"));\n-        messagebox.setDetailedText(QString::fromStdString(JoinErrors(errors)));\n+        messagebox.setDetailedText(QString::fromStdString(MakeUnorderedList(errors)));\n         messagebox.setTextFormat(Qt::PlainText);\n         messagebox.setDefaultButton(QMessageBox::Reset);\n         switch (messagebox.exec()) {\n@@ -180,14 +180,14 @@ static bool InitSettings()\n     errors.clear();\n     if (!gArgs.WriteSettingsFile(&errors)) {\n         bilingual_str error = _(\"Settings file could not be written\");\n-        InitError(Untranslated(strprintf(\"%s:\\n%s\\n\", error.original, JoinErrors(errors))));\n+        InitError(Untranslated(strprintf(\"%s:\\n%s\\n\", error.original, MakeUnorderedList(errors))));\n \n         QMessageBox messagebox(QMessageBox::Critical, PACKAGE_NAME, QString::fromStdString(strprintf(\"%s.\", error.translated)), QMessageBox::Ok);\n         /*: Explanatory text shown on startup when the settings file could not be written.\n             Prompts user to check that we have the ability to write to the file.\n             Explains that the user has the option of running without a settings file.*/\n         messagebox.setInformativeText(QObject::tr(\"A fatal error occured. Check that settings file is writable, or try running with -nosettings.\"));\n-        messagebox.setDetailedText(QString::fromStdString(JoinErrors(errors)));\n+        messagebox.setDetailedText(QString::fromStdString(MakeUnorderedList(errors)));\n         messagebox.setTextFormat(Qt::PlainText);\n         messagebox.setDefaultButton(QMessageBox::Ok);\n         messagebox.exec();"
      }
    ]
  },
  {
    "sha": "77a90f03acd551bcc538f6728939cc2ed8c6a3c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3N2E5MGYwM2FjZDU1MWJjYzUzOGY2NzI4OTM5Y2MyZWQ4YzZhM2M0",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-08-06T18:51:57Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-08-06T19:08:24Z"
      },
      "message": "refactor: Move MakeUnorderedList into util/string.h to make it reusable",
      "tree": {
        "sha": "9901e842354ac2450b6b7ba724c208089efae8f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9901e842354ac2450b6b7ba724c208089efae8f9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77a90f03acd551bcc538f6728939cc2ed8c6a3c4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmENiKgACgkQQQEIES5+\nqB8AJA/5ASwGexB9jO6E4Odyp5S+n9Wt0w5SMIfGRThWb8Jn/wappN3mYpvZM0Rk\namYNc1vV4uVnWgpwwLOe7Z/KnPwYchP00/eY4GQw7jstljRj05lJPi44V54zl4p4\nWaa723dHf1x+Ub+X9Xcv9NZ+PnqCVRLGlHRyLZNrwbgX1hzAkGlD5zyOKUlFDAj7\nuk2XOncn5gT9WtMnPHKcD1OyzyT4WwyC/M5SO7vWtpVsftfEPYTd3cnu0sWIDn2a\nnQd9fk4C5+cqdYqOzTM3NN46Aui8WazE/Caa2J2yxlmreuDHddH2VWAtPiexAhtC\n6aFCpwWcwoLsmbeE/p4Qa9yCEtbewONsKAQa1Tm20O16CmB2Vh1HwlaL9oPO/Jkn\nT9dKf39yohKQQwt4c8hXtOSHXnQtlyWjvHlKolNxGklqFtOMfcF6pLL4b/ng0Qdb\nOtH7uw0+qQPB9E6ChA6ihA9iXajDmfCg/8Hjb8OarO243h4k/rcle0Gitq897k3c\nGb1YltTG1ZQv7CV66OMy0e+5KiA2q8uUBOAGKcfrFvgxLftBk+gX2gk+6dvrMPhr\nPAVUe0nL7QiripwwfW7UB9EQxqcFyfIh82WV9kOJqxeBRU5+vU4ar26SxD71JPwi\n5TPsKQ7iWeGWdc5i787GhM6PbKBCnAhMcXhkbqxrQkfRHSSmmGc=\n=BTNe\n-----END PGP SIGNATURE-----",
        "payload": "tree 9901e842354ac2450b6b7ba724c208089efae8f9\nparent 6a5ccd65c704253b7442b54064f5ba281c34fd26\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1628275917 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1628276904 +0300\n\nrefactor: Move MakeUnorderedList into util/string.h to make it reusable\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77a90f03acd551bcc538f6728939cc2ed8c6a3c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/77a90f03acd551bcc538f6728939cc2ed8c6a3c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77a90f03acd551bcc538f6728939cc2ed8c6a3c4/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a5ccd65c704253b7442b54064f5ba281c34fd26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a5ccd65c704253b7442b54064f5ba281c34fd26",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a5ccd65c704253b7442b54064f5ba281c34fd26"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 10,
      "deletions": 6
    },
    "files": [
      {
        "sha": "09f453363d612c86a3fdef6c314de3d3113bebc1",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77a90f03acd551bcc538f6728939cc2ed8c6a3c4/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77a90f03acd551bcc538f6728939cc2ed8c6a3c4/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=77a90f03acd551bcc538f6728939cc2ed8c6a3c4",
        "patch": "@@ -28,6 +28,7 @@\n #include <qt/utilitydialog.h>\n #include <qt/winshutdownmonitor.h>\n #include <uint256.h>\n+#include <util/string.h>\n #include <util/system.h>\n #include <util/threadnames.h>\n #include <util/translation.h>\n@@ -144,11 +145,6 @@ static void initTranslations(QTranslator &qtTranslatorBase, QTranslator &qtTrans\n         QApplication::installTranslator(&translator);\n }\n \n-static std::string MakeUnorderedList(const std::vector<std::string>& errors)\n-{\n-    return Join(errors, \"\\n\", [](const std::string& error) { return \"- \" + error; });\n-}\n-\n static bool InitSettings()\n {\n     if (!gArgs.GetSettingsPath()) {\n@@ -186,7 +182,7 @@ static bool InitSettings()\n         /*: Explanatory text shown on startup when the settings file could not be written.\n             Prompts user to check that we have the ability to write to the file.\n             Explains that the user has the option of running without a settings file.*/\n-        messagebox.setInformativeText(QObject::tr(\"A fatal error occured. Check that settings file is writable, or try running with -nosettings.\"));\n+        messagebox.setInformativeText(QObject::tr(\"A fatal error occurred. Check that settings file is writable, or try running with -nosettings.\"));\n         messagebox.setDetailedText(QString::fromStdString(MakeUnorderedList(errors)));\n         messagebox.setTextFormat(Qt::PlainText);\n         messagebox.setDefaultButton(QMessageBox::Ok);"
      },
      {
        "sha": "5617e4acc1bb446e7b6b95fe1ffe8a46d77c58d0",
        "filename": "src/util/string.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77a90f03acd551bcc538f6728939cc2ed8c6a3c4/src/util/string.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77a90f03acd551bcc538f6728939cc2ed8c6a3c4/src/util/string.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/string.h?ref=77a90f03acd551bcc538f6728939cc2ed8c6a3c4",
        "patch": "@@ -64,6 +64,14 @@ inline std::string Join(const std::vector<std::string>& list, const std::string&\n     return Join<std::string>(list, separator);\n }\n \n+/**\n+ * Create an unordered multi-line list of items.\n+ */\n+inline std::string MakeUnorderedList(const std::vector<std::string>& items)\n+{\n+    return Join(items, \"\\n\", [](const std::string& item) { return \"- \" + item; });\n+}\n+\n /**\n  * Check if a string does not contain any embedded NUL (\\0) characters\n  */"
      }
    ]
  },
  {
    "sha": "bb56486a170aacb355f4a973f0cd40ab3918a0cd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjU2NDg2YTE3MGFhY2IzNTVmNGE5NzNmMGNkNDBhYjM5MThhMGNk",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-08-06T18:59:14Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-08-06T19:08:26Z"
      },
      "message": "refactor: Reuse MakeUnorderedList where possible",
      "tree": {
        "sha": "6455508e1f2398716b5b845613fd71ce84740be2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6455508e1f2398716b5b845613fd71ce84740be2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb56486a170aacb355f4a973f0cd40ab3918a0cd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmENiKoACgkQQQEIES5+\nqB+mtg/+MztrWZBdA3hqtiRPlHelBsuFS8tYUthlLDgcNIrlIxaxkEHFZFeme7V+\n0IT+lCb59VSZJmsSVsyAbKhaNYknyZxDSoafgIZXjYqXBvHcc4loTS3kpfvImKZe\nT8lAHP22EbtA46JAgTwjrrUBCFoodRVF12RdNAA/fI+pBkspNi3KHCzdKmaXeyhP\ns37XpES+GvRIooI9wVO9V7Wfla77K5cBygQbEh4KGQayrIjb8OV/yts1eAKcK4BQ\nE1p4ZcggVDWmRXT9sNj0tquOWVXk9FjPla3jVGt+WRihQyT7N1ALsUev/60vSyKo\nYoK+f2TDrePH2PLAtA257toBvezcdjjILM32XRvU/FWmxkcn8oIaX47WgH+C3Du1\nVkVbRIPxBmR7ig1Mo9aOhEhlZyBruw7TYs/lfkCocFlDyjJ9gmankdN3uwotSR2h\nG44byFUgeV8wNH0g7P75gpccX3mc15LvES6Yr4Z0GiJgH/bRR+xgU6t5hxtMznmj\nGoY8JWwkpTkFAbFVthCyH+bghxUn8Yo1PUshI9ls4NeocN4UlUgDp3FjhYk9my2+\n9fV1uH0Qym65Vop9d25uLNg4EQ9Qzr2IcouYlxzP6rrf6up2XuKM0z8P7bRj51XL\nlJ/RTGQRi5WKchvYlt2hn6B+vYFn8pLPjjTEEQKlW5h4iHhCdxA=\n=rdqn\n-----END PGP SIGNATURE-----",
        "payload": "tree 6455508e1f2398716b5b845613fd71ce84740be2\nparent 77a90f03acd551bcc538f6728939cc2ed8c6a3c4\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1628276354 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1628276906 +0300\n\nrefactor: Reuse MakeUnorderedList where possible\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb56486a170aacb355f4a973f0cd40ab3918a0cd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb56486a170aacb355f4a973f0cd40ab3918a0cd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb56486a170aacb355f4a973f0cd40ab3918a0cd/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "77a90f03acd551bcc538f6728939cc2ed8c6a3c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77a90f03acd551bcc538f6728939cc2ed8c6a3c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/77a90f03acd551bcc538f6728939cc2ed8c6a3c4"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "909019d796822b392671cb2cc8183e8840111bfe",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb56486a170aacb355f4a973f0cd40ab3918a0cd/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb56486a170aacb355f4a973f0cd40ab3918a0cd/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=bb56486a170aacb355f4a973f0cd40ab3918a0cd",
        "patch": "@@ -36,6 +36,7 @@\n #include <txmempool.h>\n #include <undo.h>\n #include <util/strencodings.h>\n+#include <util/string.h>\n #include <util/system.h>\n #include <util/translation.h>\n #include <validation.h>\n@@ -1328,7 +1329,7 @@ static RPCHelpMan verifychain()\n                 \"\\nVerifies blockchain database.\\n\",\n                 {\n                     {\"checklevel\", RPCArg::Type::NUM, RPCArg::DefaultHint{strprintf(\"%d, range=0-4\", DEFAULT_CHECKLEVEL)},\n-                        strprintf(\"How thorough the block verification is:\\n - %s\", Join(CHECKLEVEL_DOC, \"\\n- \"))},\n+                        strprintf(\"How thorough the block verification is:\\n%s\", MakeUnorderedList(CHECKLEVEL_DOC))},\n                     {\"nblocks\", RPCArg::Type::NUM, RPCArg::DefaultHint{strprintf(\"%d, 0=all\", DEFAULT_CHECKBLOCKS)}, \"The number of blocks to check.\"},\n                 },\n                 RPCResult{"
      },
      {
        "sha": "30d41038198693da19aa721ab921f6beb4586eed",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb56486a170aacb355f4a973f0cd40ab3918a0cd/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb56486a170aacb355f4a973f0cd40ab3918a0cd/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=bb56486a170aacb355f4a973f0cd40ab3918a0cd",
        "patch": "@@ -502,11 +502,11 @@ bool ArgsManager::InitSettings(std::string& error)\n \n     std::vector<std::string> errors;\n     if (!ReadSettingsFile(&errors)) {\n-        error = strprintf(\"Failed loading settings file:\\n- %s\\n\", Join(errors, \"\\n- \"));\n+        error = strprintf(\"Failed loading settings file:\\n%s\\n\", MakeUnorderedList(errors));\n         return false;\n     }\n     if (!WriteSettingsFile(&errors)) {\n-        error = strprintf(\"Failed saving settings file:\\n- %s\\n\", Join(errors, \"\\n- \"));\n+        error = strprintf(\"Failed saving settings file:\\n%s\\n\", MakeUnorderedList(errors));\n         return false;\n     }\n     return true;"
      }
    ]
  }
]