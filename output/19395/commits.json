[
  {
    "sha": "8b9546cca23c6eb5ca568d51f4ae9f9a132449fa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Yjk1NDZjY2EyM2M2ZWI1Y2E1NjhkNTFmNGFlOWY5YTEzMjQ0OWZh",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-06-27T12:58:49Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-06-28T18:40:54Z"
      },
      "message": "Bugfix: RPC/Mining: Fix up GBT docs\n\n- Clarify rules, capabilities, coinbaseaux, coinbasetxn\n- Specify name of 'transactions' key",
      "tree": {
        "sha": "bcd721511ecb9f184001490db1ee40a278373d7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bcd721511ecb9f184001490db1ee40a278373d7e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b9546cca23c6eb5ca568d51f4ae9f9a132449fa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b9546cca23c6eb5ca568d51f4ae9f9a132449fa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b9546cca23c6eb5ca568d51f4ae9f9a132449fa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b9546cca23c6eb5ca568d51f4ae9f9a132449fa/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a840dab2a582747947db0ab92cfc829316966c96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a840dab2a582747947db0ab92cfc829316966c96",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a840dab2a582747947db0ab92cfc829316966c96"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "b31e8acd6c0db7a7c12e54eb9cf71413fbaff795",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b9546cca23c6eb5ca568d51f4ae9f9a132449fa/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b9546cca23c6eb5ca568d51f4ae9f9a132449fa/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=8b9546cca23c6eb5ca568d51f4ae9f9a132449fa",
        "patch": "@@ -348,12 +348,13 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n                             {\"mode\", RPCArg::Type::STR, /* treat as named arg */ RPCArg::Optional::OMITTED_NAMED_ARG, \"This must be set to \\\"template\\\", \\\"proposal\\\" (see BIP 23), or omitted\"},\n                             {\"capabilities\", RPCArg::Type::ARR, /* treat as named arg */ RPCArg::Optional::OMITTED_NAMED_ARG, \"A list of strings\",\n                                 {\n-                                    {\"support\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"client side supported feature, 'longpoll', 'coinbasetxn', 'coinbasevalue', 'proposal', 'serverlist', 'workid'\"},\n+                                    {\"str\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"client side supported feature, 'longpoll', 'coinbasetxn', 'coinbasevalue', 'proposal', 'serverlist', 'workid'\"},\n                                 },\n                                 },\n                             {\"rules\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"A list of strings\",\n                                 {\n-                                    {\"support\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"client side supported softfork deployment\"},\n+                                    {\"segwit\", RPCArg::Type::STR, RPCArg::Optional::NO, \"(literal) indicates client side segwit support\"},\n+                                    {\"str\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"other client side supported softfork deployment\"},\n                                 },\n                                 },\n                         },\n@@ -365,15 +366,15 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n                         {RPCResult::Type::NUM, \"version\", \"The preferred block version\"},\n                         {RPCResult::Type::ARR, \"rules\", \"specific block rules that are to be enforced\",\n                             {\n-                                {RPCResult::Type::STR, \"\", \"rulename\"},\n+                                {RPCResult::Type::STR, \"\", \"name of a rule the client must understand to some extent; see BIP 9 for format\"},\n                             }},\n                         {RPCResult::Type::OBJ_DYN, \"vbavailable\", \"set of pending, supported versionbit (BIP 9) softfork deployments\",\n                             {\n                                 {RPCResult::Type::NUM, \"rulename\", \"identifies the bit number as indicating acceptance and readiness for the named softfork rule\"},\n                             }},\n                         {RPCResult::Type::NUM, \"vbrequired\", \"bit mask of versionbits the server requires set in submissions\"},\n                         {RPCResult::Type::STR, \"previousblockhash\", \"The hash of current highest block\"},\n-                        {RPCResult::Type::ARR, \"\", \"contents of non-coinbase transactions that should be included in the next block\",\n+                        {RPCResult::Type::ARR, \"transactions\", \"contents of non-coinbase transactions that should be included in the next block\",\n                             {\n                                 {RPCResult::Type::OBJ, \"\", \"\",\n                                     {\n@@ -389,12 +390,12 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n                                         {RPCResult::Type::NUM, \"weight\", \"total transaction weight, as counted for purposes of block limits\"},\n                                     }},\n                             }},\n-                        {RPCResult::Type::OBJ, \"coinbaseaux\", \"data that should be included in the coinbase's scriptSig content\",\n+                        {RPCResult::Type::OBJ_DYN, \"coinbaseaux\", \"data that should be included in the coinbase's scriptSig content\",\n                         {\n-                            {RPCResult::Type::ELISION, \"\", \"\"},\n+                            {RPCResult::Type::STR_HEX, \"str\", \"values must be in the coinbase (keys may be ignored)\"},\n                         }},\n                         {RPCResult::Type::NUM, \"coinbasevalue\", \"maximum allowable input to coinbase transaction, including the generation award and transaction fees (in satoshis)\"},\n-                        {RPCResult::Type::OBJ, \"coinbasetxn\", \"information for coinbase transaction\",\n+                        {RPCResult::Type::OBJ, \"coinbasetxn\", \"information for coinbase transaction (in same format as elements of 'transactions' above)\",\n                         {\n                             {RPCResult::Type::ELISION, \"\", \"\"},\n                         }},"
      }
    ]
  }
]