[
  {
    "sha": "faf7d7418cf01cb04cd457bcc630654da958a777",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWY3ZDc0MThjZjAxY2IwNGNkNDU3YmNjNjMwNjU0ZGE5NThhNzc3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-02T18:29:36Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-02-03T18:30:14Z"
      },
      "message": "fuzz: Avoid extraneous copy of input data, using Span<>",
      "tree": {
        "sha": "7adaeeef624d4921c6895b715197a5dcf47b2ac7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7adaeeef624d4921c6895b715197a5dcf47b2ac7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf7d7418cf01cb04cd457bcc630654da958a777",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgCBQwAs69hKFM1q1+0Vj/o7kg7Mi7FbQzbG++5rLXROyblJCR4aVI7qkYJQuij\n4zCUnXQd4RHdBtl8CvjI0BW2wgFfQPAs67KjtKPWEv/SPvTbh3iukbCs+n5JqIcO\nUVjAOISsfsMWtJ0+IkmbEUJ4xlvmTyxJzIjt90cLrXXAXNUzpCvZYuJXoEMgdjP2\nKK0UJxguPi6xADtwuzpqv6aDVSGxXhULT/VDrSWTTREx4CGjixHYHjMTGaxw7VFc\noV6PLoyhNOGmzKHbS6sb7wCCy9MbZxao0iqui0AJ85K3aOIP2DzTapwXEcQoaRzK\nrIJ5LTJLUjx/GbVYGqaIdb78KRT/YSP8R7Ct3ER+yW3s6bosa80JcWYEFFdF1ve5\n9pOAu8EWQes9uS5HPWgRg0sz51gJMB3jZBaFb/X2ogg+WJwIDSVxeN9TA/AwwLmr\nLI3m7FITOb91HaiL+RCTekM6Xk8itLlI4srPmErtJrt1GlmuDXLxmS9aa5CJta6N\nwlPokYCr\n=TMjf\n-----END PGP SIGNATURE-----",
        "payload": "tree 7adaeeef624d4921c6895b715197a5dcf47b2ac7\nparent ea96e17e1f2c2b0a949366260906ef02e560a425\nauthor MarcoFalke <falke.marco@gmail.com> 1609612176 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1612377014 +0100\n\nfuzz: Avoid extraneous copy of input data, using Span<>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf7d7418cf01cb04cd457bcc630654da958a777",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faf7d7418cf01cb04cd457bcc630654da958a777",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf7d7418cf01cb04cd457bcc630654da958a777/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea96e17e1f2c2b0a949366260906ef02e560a425",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea96e17e1f2c2b0a949366260906ef02e560a425",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea96e17e1f2c2b0a949366260906ef02e560a425"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 10,
      "deletions": 11
    },
    "files": [
      {
        "sha": "ba5f0c1a7588293dd8fc1c842887fa013bc42949",
        "filename": "src/test/fuzz/deserialize.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf7d7418cf01cb04cd457bcc630654da958a777/src/test/fuzz/deserialize.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf7d7418cf01cb04cd457bcc630654da958a777/src/test/fuzz/deserialize.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/deserialize.cpp?ref=faf7d7418cf01cb04cd457bcc630654da958a777",
        "patch": "@@ -30,8 +30,6 @@\n #include <stdint.h>\n #include <unistd.h>\n \n-#include <vector>\n-\n #include <test/fuzz/fuzz.h>\n \n void initialize_deserialize()\n@@ -71,7 +69,7 @@ T Deserialize(CDataStream ds)\n }\n \n template <typename T>\n-void DeserializeFromFuzzingInput(const std::vector<uint8_t>& buffer, T& obj, const Optional<int> protocol_version = nullopt)\n+void DeserializeFromFuzzingInput(FuzzBufferType buffer, T& obj, const Optional<int> protocol_version = nullopt)\n {\n     CDataStream ds(buffer, SER_NETWORK, INIT_PROTO_VERSION);\n     if (protocol_version) {"
      },
      {
        "sha": "e5df6721638da92eb139906dcc510c5d973375a2",
        "filename": "src/test/fuzz/fuzz.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf7d7418cf01cb04cd457bcc630654da958a777/src/test/fuzz/fuzz.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf7d7418cf01cb04cd457bcc630654da958a777/src/test/fuzz/fuzz.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/fuzz.cpp?ref=faf7d7418cf01cb04cd457bcc630654da958a777",
        "patch": "@@ -59,8 +59,7 @@ static bool read_stdin(std::vector<uint8_t>& data)\n extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n {\n     static const auto& test_one_input = *Assert(g_test_one_input);\n-    const std::vector<uint8_t> input(data, data + size);\n-    test_one_input(input);\n+    test_one_input({data, size});\n     return 0;\n }\n "
      },
      {
        "sha": "19386a505917b898cc9d30d958be3e90ae2634cb",
        "filename": "src/test/fuzz/fuzz.h",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf7d7418cf01cb04cd457bcc630654da958a777/src/test/fuzz/fuzz.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf7d7418cf01cb04cd457bcc630654da958a777/src/test/fuzz/fuzz.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/fuzz.h?ref=faf7d7418cf01cb04cd457bcc630654da958a777",
        "patch": "@@ -5,12 +5,15 @@\n #ifndef BITCOIN_TEST_FUZZ_FUZZ_H\n #define BITCOIN_TEST_FUZZ_FUZZ_H\n \n+#include <span.h>\n+\n #include <cstdint>\n #include <functional>\n #include <string_view>\n-#include <vector>\n \n-using TypeTestOneInput = std::function<void(const std::vector<uint8_t>&)>;\n+using FuzzBufferType = Span<const uint8_t>;\n+\n+using TypeTestOneInput = std::function<void(FuzzBufferType)>;\n using TypeInitialize = std::function<void()>;\n \n void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target, TypeInitialize init);\n@@ -21,13 +24,13 @@ inline void FuzzFrameworkEmptyFun() {}\n     FUZZ_TARGET_INIT(name, FuzzFrameworkEmptyFun)\n \n #define FUZZ_TARGET_INIT(name, init_fun)                                      \\\n-    void name##_fuzz_target(const std::vector<uint8_t>&);                     \\\n+    void name##_fuzz_target(FuzzBufferType);                                  \\\n     struct name##_Before_Main {                                               \\\n         name##_Before_Main()                                                  \\\n         {                                                                     \\\n             FuzzFrameworkRegisterTarget(#name, name##_fuzz_target, init_fun); \\\n         }                                                                     \\\n     } const static g_##name##_before_main;                                    \\\n-    void name##_fuzz_target(const std::vector<uint8_t>& buffer)\n+    void name##_fuzz_target(FuzzBufferType buffer)\n \n #endif // BITCOIN_TEST_FUZZ_FUZZ_H"
      },
      {
        "sha": "a3e46ca2a2f1705a54871029576292599cb5b98c",
        "filename": "src/test/fuzz/process_message.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf7d7418cf01cb04cd457bcc630654da958a777/src/test/fuzz/process_message.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf7d7418cf01cb04cd457bcc630654da958a777/src/test/fuzz/process_message.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/process_message.cpp?ref=faf7d7418cf01cb04cd457bcc630654da958a777",
        "patch": "@@ -30,7 +30,6 @@\n #include <iostream>\n #include <memory>\n #include <string>\n-#include <vector>\n \n namespace {\n const TestingSetup* g_setup;\n@@ -46,7 +45,7 @@ void initialize_process_message()\n     SyncWithValidationInterfaceQueue();\n }\n \n-void fuzz_target(const std::vector<uint8_t>& buffer, const std::string& LIMIT_TO_MESSAGE_TYPE)\n+void fuzz_target(FuzzBufferType buffer, const std::string& LIMIT_TO_MESSAGE_TYPE)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n "
      }
    ]
  }
]