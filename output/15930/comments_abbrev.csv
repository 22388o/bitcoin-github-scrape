laanwj,2019-05-01 15:29:06,"Concept ACK\n\n> or rpcs redundant to this such as getbalance could be removed.\n\nDunno, I think having a dedicated call to get the balance is useful. If it's not broken (like mis-named methods) I'd prefer keeping it.",https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-488315314,488315314,
instagibbs,2019-05-01 15:43:51,concept ACK,https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-488319813,488319813,
MarcoFalke,2019-05-01 16:38:58,"> How about we have a getbalances RPC that just returns the balances object added in this PR.\n\nThen I'd rather not add the same struct to getwalletinfo. Imo a single place where to get this is enough.",https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-488336043,488336043,
jnewbery,2019-05-01 18:16:34,"I don't have an issue with the same data appearing in multiple RPC methods, but if you think that's an issue, then I'd have a slight preference for a `getbalances` RPC method to be separate from `getwalletinfo`. I think either is an improvement though.\n\nI also think all wallet `get-` and `list-` methods should return a best block hash, so it's clear at what point the returned values are valid.",https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-488365245,488365245,
jonasschnelli,2019-05-02 08:41:33,"Nice!\nConcept ACK.\n\nI agree with @jnewbery about returning the new object through `getbalance`. Why?\n`getwalletinfo`, for historical and logical reasons, has the is_min is_spendable balance value in it and I think removing it makes little sense. We already have the same data type in `getbalance` and to me it would just be logical to switch from a single balance value to the new obect (in b",https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-488593290,488593290,
luke-jr,2019-05-02 12:15:43,This seems redundant with JSON-RPC batching?,https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-488649814,488649814,
MarcoFalke,2019-05-02 12:24:14,"@luke-jr It would be horribly redundant to provide a separate rpc for each balance type, when it comes at no cost to return them all.",https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-488652088,488652088,
luke-jr,2019-05-02 12:43:58,Perhaps just a `getbalances` as @jnewbery suggested then?,https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-488657748,488657748,
promag,2019-05-02 12:49:48,Having a separate RPC makes `getwalletinfo` constant (after removing deprecated fields).,https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-488659526,488659526,
MarcoFalke,2019-05-02 12:59:27,"Ok, going to rework to make this a fresh `getbalances` call (not to be confused with `getbalance`)",https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-488662718,488662718,
jnewbery,2019-05-02 13:47:02,"> This seems redundant with JSON-RPC batching?\n\nNote that batched RPCs are not atomic (and nor could they ever be, since the RPC server can't take the main lock).",https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-488679795,488679795,
jnewbery,2019-05-02 15:49:39,utACK eeee1497aca36eea40e386d0694bbd062bd1e89d,https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-488726916,488726916,
luke-jr,2019-05-02 18:28:27,PR title/description needs update,https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-488780872,488780872,
jnewbery,2019-05-03 18:56:49,"utACK facfb4111d14a3b06c46690a2cca7ca91cea8a96\n\nOnly change is adding ""DEPRECATED"" to the balance descriptions in `getwalletinfo` and replacing the despicable `*` with a glorious `-` in the release notes.",https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-489203824,489203824,
laanwj,2019-05-06 09:35:15,lightly tested ACK facfb4111d14a3b06c46690a2cca7ca91cea8a96,https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-489562344,489562344,
jonatack,2019-05-06 11:36:14,Post-merge tested ACK a3d2d6b0674c11e7c0cf227848322470b1cf11e9,https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-489589895,489589895,
promag,2019-05-06 15:13:19,utACK facfb41.,https://github.com/bitcoin/bitcoin/pull/15930#issuecomment-489657711,489657711,
jnewbery,2019-05-01 15:52:26,"Consider changing description to ""alias for balances.mine.trusted for backwards compatibility. This filed may be removed in a future version."" and similar for below.",https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280115804,280115804,src/wallet/rpcwallet.cpp
promag,2019-05-01 19:55:51,Could assert `balances.min.trusted == balance` as well as for `unconfirmed_balance` and `immature_balance`.,https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280193929,280193929,test/functional/wallet_balance.py
promag,2019-05-02 14:40:16,"Maybe `Deprecated, use getbalances().mine.trusted` instead?",https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280450427,280450427,src/wallet/rpcwallet.cpp
promag,2019-05-02 14:43:03,Any reason to not just send zeros?,https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280451748,280451748,src/wallet/rpcwallet.cpp
promag,2019-05-02 14:47:21,Unless a rescan is in progress?,https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280453748,280453748,src/wallet/rpcwallet.cpp
jnewbery,2019-05-02 15:49:28,"I agree this could be changed. My suggestion earlier was something like ""Alias for getbalances().mine.trusted for backwards compatibility. This filed may be removed in a future version.""",https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280482897,280482897,src/wallet/rpcwallet.cpp
luke-jr,2019-05-02 17:58:01,Why are these losing pointer constness?,https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280532230,280532230,src/wallet/rpcwallet.cpp
MarcoFalke,2019-05-02 18:03:36,"We don't really use pointer constness anywhere else in the code base. If it is required, the function should take a const reference instead.",https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280534324,280534324,src/wallet/rpcwallet.cpp
MarcoFalke,2019-05-02 18:04:12,"This boilerplate is copy-pasted, so I'd rather change it in another pull.",https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280534524,280534524,src/wallet/rpcwallet.cpp
MarcoFalke,2019-05-02 18:05:00,Seems too bloated ,https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280534799,280534799,src/wallet/rpcwallet.cpp
MarcoFalke,2019-05-02 18:07:16,"We have a track record of removing RPC features when users relied on them, so I'd rather keep them around redundantly instead of getting yelled at again and have users stick to EOL software instead of upgrading to a recent version.",https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280535587,280535587,src/wallet/rpcwallet.cpp
sipa,2019-05-02 18:08:10,"@luke-jr It is not the pointer losing constness, but the `pwallet` local variable losing constness.\n\n`CWallet * const pwallet` means ""Take a pointer-to-CWallet as argument, and store in the local variable `pwallet` which is const"". It's not actually part of the function signature.",https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280535914,280535914,src/wallet/rpcwallet.cpp
luke-jr,2019-05-02 18:27:38,"It's not part of the function signature, but it safeguards against accidentally changing the pointer within the function.",https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280542994,280542994,src/wallet/rpcwallet.cpp
luke-jr,2019-05-02 18:29:28,"We've been using a `-` here, not `*`",https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280543669,280543669,doc/release-notes.md
promag,2019-05-03 13:54:25,"@MarcoFalke agree it shouldn't be removed, but marking deprecated encourages using `getbalances` instead.",https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280783644,280783644,src/wallet/rpcwallet.cpp
MarcoFalke,2019-05-03 18:00:37,Done,https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280872739,280872739,src/wallet/rpcwallet.cpp
MarcoFalke,2019-05-03 18:08:02,Done: Replaced `*` with `-`,https://github.com/bitcoin/bitcoin/pull/15930#discussion_r280875255,280875255,doc/release-notes.md
laanwj,2019-05-06 09:36:36,Good call on referring to the RPC help for details. This is what the release notes should do instead of substitute for documentation :+1: ,https://github.com/bitcoin/bitcoin/pull/15930#discussion_r281118831,281118831,doc/release-notes.md
