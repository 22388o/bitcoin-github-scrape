[
  {
    "sha": "e7415a5a95f53abf1f8ffa2085217b249d7caf61",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNzQxNWE1YTk1ZjUzYWJmMWY4ZmZhMjA4NTIxN2IyNDlkN2NhZjYx",
    "commit": {
      "author": {
        "name": "David A. Harding",
        "email": "dave@dtrt.org",
        "date": "2019-08-19T17:14:32Z"
      },
      "committer": {
        "name": "David A. Harding",
        "email": "dave@dtrt.org",
        "date": "2019-08-22T23:21:41Z"
      },
      "message": "Doc: move detached release notes into release-notes.md",
      "tree": {
        "sha": "b05e40d8275aacebc5738f77eb6a6c532c7f2a6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b05e40d8275aacebc5738f77eb6a6c532c7f2a6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7415a5a95f53abf1f8ffa2085217b249d7caf61",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEgxUkqkMp0LnoXjCr2dtBqWwiadMFAl1fI4YACgkQ2dtBqWwi\nadNZMg/8D6s3E9qHX2ZQgJ6mvSL2NOHC8HHwiRK8HUxTykct4vaT9RVf6rfVA/cj\nkg11XocxtpjwL91Q8DG+ih7HQsNM50oA9JJ4CE/5lK9LroLmLSBM/lfgHLGkw4do\nK9H435YS/TG6i2Zrn/H2KLJdgmab8tiGi5q5+uzZB2zJYIUiViWW7q2o4j8p4H2i\n8UWAVaeUnbsyUhumbyJydnfimN/D6VHcNz0sfTNfT7oyAxj4dRmERcFix7KT7hhq\nns+KENKqmYKU6+Yluxm/kcoyrpTLqQXE/z7Tm/1rYaq08HYdvft6i8DOajBGZ32F\nfM9/2wdsbjexYjvWFBRLWaBwb2PUe2YPj7MhDyBXN8pP4KKncMNYKAV8SvbiOg0h\nCFttA+hVdtoZjeSrR4QdRQsgh8p+g59N8zMCSm6QV6/LMR1GbZM2ESYXOX4cDiVd\nZwz6OZ1Pie+gFuusVZo3H0G+o0+VgYA4e6len6D8PQTTlaQt3wAu9NyAsL2sWhdI\nHUchg6LkbgVaZKoY2QzYIji+Wi2a5lXdZRmyoes2enKSfzFs3w7yB/vkgNf6tQaS\n2EetGyPAVryGX89ksNPvaDNYWF9gUvMM7S7ckbvJk7IFj7MSsDbsTXyrRW7UoAUT\nrEch+QB94wGQgR3fcL2auDWxoy+wxrtD0Qr88ZPSbhTK0lpjIkE=\n=EDJD\n-----END PGP SIGNATURE-----",
        "payload": "tree b05e40d8275aacebc5738f77eb6a6c532c7f2a6e\nparent 52b9797119d5ee20b255efc68931ac7e158e325d\nauthor David A. Harding <dave@dtrt.org> 1566234872 -1000\ncommitter David A. Harding <dave@dtrt.org> 1566516101 -1000\n\nDoc: move detached release notes into release-notes.md\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7415a5a95f53abf1f8ffa2085217b249d7caf61",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e7415a5a95f53abf1f8ffa2085217b249d7caf61",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7415a5a95f53abf1f8ffa2085217b249d7caf61/comments",
    "author": {
      "login": "harding",
      "id": 61096,
      "node_id": "MDQ6VXNlcjYxMDk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harding",
      "html_url": "https://github.com/harding",
      "followers_url": "https://api.github.com/users/harding/followers",
      "following_url": "https://api.github.com/users/harding/following{/other_user}",
      "gists_url": "https://api.github.com/users/harding/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
      "organizations_url": "https://api.github.com/users/harding/orgs",
      "repos_url": "https://api.github.com/users/harding/repos",
      "events_url": "https://api.github.com/users/harding/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harding/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "harding",
      "id": 61096,
      "node_id": "MDQ6VXNlcjYxMDk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harding",
      "html_url": "https://github.com/harding",
      "followers_url": "https://api.github.com/users/harding/followers",
      "following_url": "https://api.github.com/users/harding/following{/other_user}",
      "gists_url": "https://api.github.com/users/harding/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
      "organizations_url": "https://api.github.com/users/harding/orgs",
      "repos_url": "https://api.github.com/users/harding/repos",
      "events_url": "https://api.github.com/users/harding/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harding/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "52b9797119d5ee20b255efc68931ac7e158e325d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52b9797119d5ee20b255efc68931ac7e158e325d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/52b9797119d5ee20b255efc68931ac7e158e325d"
      }
    ],
    "stats": {
      "total": 284,
      "additions": 141,
      "deletions": 143
    },
    "files": [
      {
        "sha": "21867b7fb2f5245abe3c9748c0619358082cf7c8",
        "filename": "doc/release-notes-0.18.1-16257.md",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-0.18.1-16257.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-0.18.1-16257.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-0.18.1-16257.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,6 +0,0 @@\n-Wallet changes\n---------------\n-When creating a transaction with a fee above `-maxtxfee` (default 0.1 BTC),\n-the RPC commands `walletcreatefundedpsbt` and  `fundrawtransaction` will now fail\n-instead of rounding down the fee. Beware that the `feeRate` argument is specified\n-in BTC per kilobyte, not satoshi per byte."
      },
      {
        "sha": "a500aceb0f081715daab62021c0f145b838aefcf",
        "filename": "doc/release-notes-13756.md",
        "status": "removed",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-13756.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-13756.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-13756.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,41 +0,0 @@\n-Coin selection\n---------------\n-\n-### Reuse Avoidance\n-\n-A new wallet flag `avoid_reuse` has been added (default off). When enabled,\n-a wallet will distinguish between used and unused addresses, and default to not\n-use the former in coin selection.\n-\n-Rescanning the blockchain is required, to correctly mark previously\n-used destinations.\n-\n-Together with \"avoid partial spends\" (present as of Bitcoin v0.17), this\n-addresses a serious privacy issue where a malicious user can track spends by\n-peppering a previously paid to address with near-dust outputs, which would then\n-be inadvertently included in future payments.\n-\n-New RPCs\n---------\n-\n-- A new `setwalletflag` RPC sets/unsets flags for an existing wallet.\n-\n-\n-Updated RPCs\n-------------\n-\n-Several RPCs have been updated to include an \"avoid_reuse\" flag, used to control\n-whether already used addresses should be left out or included in the operation.\n-These include:\n-\n-- createwallet\n-- getbalance\n-- getbalances\n-- sendtoaddress\n-\n-In addition, `sendtoaddress` has been changed to avoid partial spends when `avoid_reuse`\n-is enabled (if not already enabled via the  `-avoidpartialspends` command line flag),\n-as it would otherwise risk using up the \"wrong\" UTXO for an address reuse case.\n-\n-The listunspent RPC has also been updated to now include a \"reused\" bool, for nodes\n-with \"avoid_reuse\" enabled."
      },
      {
        "sha": "d8cad369c5d9a85aea0c3f25048a8570405f1fbb",
        "filename": "doc/release-notes-14054.md",
        "status": "removed",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-14054.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-14054.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-14054.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,7 +0,0 @@\n-P2P changes\n------------\n-\n-BIP 61 reject messages were deprecated in v0.18. They are now disabled by\n-default, but can be enabled by setting the `-enablebip61` command line option.\n-BIP 61 reject messages will be removed entirely in a future version of\n-Bitcoin Core."
      },
      {
        "sha": "1fcc38866a3842c835bcc5edc1a9ac5abd15136e",
        "filename": "doc/release-notes-14802.md",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-14802.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-14802.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-14802.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,3 +0,0 @@\n-RPC changes\n------------\n-The `getblockstats` RPC is faster for fee calculation by using BlockUndo data. Also, `-txindex` is no longer required and `getblockstats` works for all non-pruned blocks."
      },
      {
        "sha": "4bb0fcca7409c794e527e0768be037bb14f2ce90",
        "filename": "doc/release-notes-14954.md",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-14954.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-14954.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-14954.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,3 +0,0 @@\n-Build system changes\n---------------------\n-Python >=3.5 is now required by all aspects of the project. This includes the build systems, test framework and linters. The previously supported minimum (3.4), was EOL in March 2019. See #14954 for more details.\n\\ No newline at end of file"
      },
      {
        "sha": "76ed3247a63d465d5966bc91db86f95d6aeb1c08",
        "filename": "doc/release-notes-15006.md",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15006.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15006.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15006.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,4 +0,0 @@\n-Miscellaneous RPC changes\n-------------\n-\n-- `createwallet` can now create encrypted wallets if a non-empty passphrase is specified."
      },
      {
        "sha": "25edfd440281c876417ee0528b1c584d2c19e695",
        "filename": "doc/release-notes-15427.md",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15427.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15427.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15427.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,9 +0,0 @@\n-Updated RPCs\n-------------\n-\n-The `utxoupdatepsbt` RPC method has been updated to take a `descriptors`\n-argument. When provided, input and output scripts and keys will be filled in\n-when known, and P2SH-witness inputs will be filled in from the UTXO set when a\n-descriptor is provided that shows they're spending segwit outputs.\n-\n-See the RPC help text for full details."
      },
      {
        "sha": "49964d755059dafc7a67b45fa8d57ae9f8472ca7",
        "filename": "doc/release-notes-15566.md",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15566.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15566.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15566.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,3 +0,0 @@\n-Miscellaneous CLI Changes\n--------------------------\n-- The `testnet` field in `bitcoin-cli -getinfo` has been renamed to `chain` and now returns the current network name as defined in BIP70 (main, test, regtest).\n\\ No newline at end of file"
      },
      {
        "sha": "bf89a70a4eb81ca393237112467675d3b78feab7",
        "filename": "doc/release-notes-15620.md",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15620.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15620.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15620.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,13 +0,0 @@\n-Updated RPCs\n-------------\n-\n-* The -maxtxfee setting no longer has any effect on non-wallet RPCs.\n-\n-  The `sendrawtransaction` and `testmempoolaccept` RPC methods previously\n-  accepted an `allowhighfees` parameter to fail the mempool acceptance in case\n-  the transaction's fee would exceed the value of the command line argument\n-  `-maxtxfee`. To uncouple the RPCs from the global option, they now have a\n-  hardcoded default for the maximum transaction fee, that can be changed for\n-  both RPCs on a per-call basis with the `maxfeerate` parameter. The\n-  `allowhighfees` boolean option has been removed and replaced by the\n-  `maxfeerate` numeric option."
      },
      {
        "sha": "048d5e72185214d79585543eff1b3131f9d3588e",
        "filename": "doc/release-notes-15637.md",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15637.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15637.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15637.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,3 +0,0 @@\n-RPC changes\n------------\n-In getmempoolancestors, getmempooldescendants, getmempoolentry and getrawmempool RPCs, to be consistent with the returned value and other RPCs such as getrawtransaction, vsize has been added and size is now deprecated. size will only be returned if bitcoind is started with `-deprecatedrpc=size`.\n\\ No newline at end of file"
      },
      {
        "sha": "7a4a60b1ee7c8f0d27c17d98c6ae277900eadc93",
        "filename": "doc/release-notes-15730.md",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15730.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15730.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15730.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,5 +0,0 @@\n-RPC changes\n------------\n-The RPC `getwalletinfo` response now includes the `scanning` key with an object\n-if there is a scanning in progress or `false` otherwise. Currently the object\n-has the scanning duration and progress."
      },
      {
        "sha": "a1df31f2502a0609334eb6204714707ddc626b80",
        "filename": "doc/release-notes-15849.md",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15849.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15849.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15849.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,6 +0,0 @@\n-Thread names in logs\n---------------------\n-\n-On platforms supporting `thread_local`, log lines can be prefixed with the name\n-of the thread that caused the log. To enable this behavior, use\n-`-logthreadnames=1`."
      },
      {
        "sha": "493c7126ee9d6c7fb9d6a6af2dd63d668a6ff0c2",
        "filename": "doc/release-notes-15993.md",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15993.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-15993.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15993.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,3 +0,0 @@\n-Build system changes\n---------------------\n-The minimum supported miniUPnPc API version is set to 10. This keeps compatibility with Ubuntu 16.04 LTS and Debian 8 `libminiupnpc-dev` packages. Please note, on Debian this package is still vulnerable to [CVE-2017-8798](https://security-tracker.debian.org/tracker/CVE-2017-8798) (in jessie only) and [CVE-2017-1000494](https://security-tracker.debian.org/tracker/CVE-2017-1000494) (both in jessie and in stretch)."
      },
      {
        "sha": "7e150d10e752e9e75dc8ddab00cf4426246893a4",
        "filename": "doc/release-notes-16060.md",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-16060.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-16060.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-16060.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,15 +0,0 @@\n-Low-level RPC changes\n-----------------------\n-\n-- Soft fork reporting in the `getblockchaininfo` return object has been\n-  updated. For full details, see the RPC help text. In summary:\n-  - The `bip9_softforks` sub-object is no longer returned\n-  - The `softforks` sub-object now returns an object keyed by soft fork name,\n-    rather than an array\n-  - Each softfork object in the `softforks` object contains a `type` value which\n-    is either `buried` (for soft fork deployments where the activation height is\n-    hard-coded into the client implementation), or `bip9` (for soft fork deployments\n-    where activation is controlled by BIP 9 signaling).\n-\n-- `getblocktemplate` no longer returns a `rules` array containing `CSV`\n-  and `segwit` (the BIP 9 deployments that are currently in active state)."
      },
      {
        "sha": "80157151672851a30e06493f989ba68c26bdcd99",
        "filename": "doc/release-notes-16383.md",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-16383.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-16383.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-16383.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,8 +0,0 @@\n-RPC changes\n------------\n-\n-RPCs which have an `include_watchonly` argument or `includeWatching`\n-option now default to `true` for watch-only wallets. Affected RPCs\n-are: `getbalance`, `listreceivedbyaddress`, `listreceivedbylabel`,\n-`listtransactions`, `listsinceblock`, `gettransaction`,\n-`walletcreatefundedpsbt`, and `fundrawtransaction`."
      },
      {
        "sha": "f09cba4b6d55fea1b551aba2a3820d93f9291acd",
        "filename": "doc/release-notes-16394.md",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-16394.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-16394.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-16394.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,4 +0,0 @@\n-RPC changes\n------------\n-`createwallet` now returns a warning if an empty string is used as an encryption password, and does not encrypt the wallet, instead of raising an error.\n-This makes it easier to disable encryption but also specify other options when using the `bitcoin-cli` tool."
      },
      {
        "sha": "7e5539cb0d87f312e9c51159098f82c26510bec7",
        "filename": "doc/release-notes-16647.md",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-16647.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes-16647.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-16647.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,3 +0,0 @@\n-RPC changes\n------------\n-`getmempoolentry` now provides a `weight` field containing the transaction weight as defined in BIP 141."
      },
      {
        "sha": "081e2e0a9b668878ba8dab7a649c53fb93876127",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 141,
        "deletions": 0,
        "changes": 141,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7415a5a95f53abf1f8ffa2085217b249d7caf61/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7415a5a95f53abf1f8ffa2085217b249d7caf61/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=e7415a5a95f53abf1f8ffa2085217b249d7caf61",
        "patch": "@@ -73,6 +73,8 @@ New RPCs\n   `getunconfirmedbalance` and the balance fields in `getwalletinfo`, as well as\n   `getbalance`. The old calls may be removed in a future version.\n \n+- A new `setwalletflag` RPC sets/unsets flags for an existing wallet.\n+\n Updated RPCs\n ------------\n \n@@ -88,19 +90,119 @@ Low-level Changes section below.\n   `-limitancestorcount`, `-limitdescendantcount` and `-walletrejectlongchains`\n   command line arguments.\n \n+- Several RPCs have been updated to include an \"avoid_reuse\" flag, used\n+  to control whether already used addresses should be left out or\n+  included in the operation.  These include:\n+\n+    - createwallet\n+    - getbalance\n+    - getbalances\n+    - sendtoaddress\n+\n+  In addition, `sendtoaddress` has been changed to avoid partial spends\n+  when `avoid_reuse` is enabled (if not already enabled via the\n+  `-avoidpartialspends` command line flag), as it would otherwise risk\n+  using up the \"wrong\" UTXO for an address reuse case.\n+\n+  The listunspent RPC has also been updated to now include a \"reused\"\n+  bool, for nodes with \"avoid_reuse\" enabled.\n+\n+- The `getblockstats` RPC is faster for fee calculation by using\n+  BlockUndo data. Also , `-txindex` is no longer required and\n+  `getblockstats` works for all non-pruned blocks.\n+\n+- `createwallet` can now create encrypted wallets if a non-empty\n+  passphrase is specified.\n+\n+- The `utxoupdatepsbt` RPC method has been updated to take a\n+  `descriptors` argument. When provided, input and output scripts and\n+  keys will be filled in when known, and P2SH-witness inputs will be\n+  filled in from the UTXO set when a descriptor is provided that shows\n+  they're spending segwit outputs.\n+\n+  See the RPC help text for full details.\n+\n+- The -maxtxfee setting no longer has any effect on non-wallet RPCs.\n+\n+  The `sendrawtransaction` and `testmempoolaccept` RPC methods previously\n+  accepted an `allowhighfees` parameter to fail the mempool acceptance in case\n+  the transaction's fee would exceed the value of the command line argument\n+  `-maxtxfee`. To uncouple the RPCs from the global option, they now have a\n+  hardcoded default for the maximum transaction fee, that can be changed for\n+  both RPCs on a per-call basis with the `maxfeerate` parameter. The\n+  `allowhighfees` boolean option has been removed and replaced by the\n+  `maxfeerate` numeric option.\n+\n+- In getmempoolancestors, getmempooldescendants, getmempoolentry and\n+  getrawmempool RPCs, to be consistent with the returned value and other\n+  RPCs such as getrawtransaction, vsize has been added and size is now\n+  deprecated. size will only be returned if bitcoind is started with\n+  `-deprecatedrpc=size`.\n+\n+- The RPC `getwalletinfo` response now includes the `scanning` key with\n+  an object if there is a scanning in progress or `false` otherwise.\n+  Currently the object has the scanning duration and progress.\n+\n+- `createwallet` now returns a warning if an empty string is used as an\n+  encryption password, and does not encrypt the wallet, instead of\n+  raising an error.  This makes it easier to disable encryption but also\n+  specify other options when using the `bitcoin-cli` tool.\n+\n+- `getmempoolentry` now provides a `weight` field containing the\n+  transaction weight as defined in BIP 141.\n+\n Deprecated or removed RPCs\n --------------------------\n \n - The `totalFee` option of the `bumpfee` RPC has been deprecated and will be\n   removed in 0.20.  To continue using this option start with\n   `-deprecatedrpc=totalFee`.  See the `bumpfee` RPC help text for more details.\n \n+P2P changes\n+-----------\n+\n+- BIP 61 reject messages were deprecated in v0.18. They are now disabled\n+  by default, but can be enabled by setting the `-enablebip61` command\n+  line option.  BIP 61 reject messages will be removed entirely in a\n+  future version of Bitcoin Core.\n+\n+- The default value for the -peerbloomfilters configuration option (and,\n+  thus, NODE_BLOOM support) has been changed to false.  This resolves\n+  well-known DoS vectors in Bitcoin Core, especially for nodes with\n+  spinning disks. It is not anticipated that this will result in a\n+  significant lack of availability of NODE_BLOOM-enabled nodes in the\n+  coming years, however, clients which rely on the availability of\n+  NODE_BLOOM-supporting nodes on the P2P network should consider the\n+  process of migrating to a more modern (and less trustful and\n+  privacy-violating) alternative over the coming years.\n+\n+Miscellaneous CLI Changes\n+-------------------------\n+- The `testnet` field in `bitcoin-cli -getinfo` has been renamed to\n+  `chain` and now returns the current network name as defined in BIP70\n+  (main, test, regtest).\n+\n Low-level changes\n =================\n \n RPC\n ---\n \n+- Soft fork reporting in the `getblockchaininfo` return object has been\n+  updated. For full details, see the RPC help text. In summary:\n+\n+  - The `bip9_softforks` sub-object is no longer returned\n+  - The `softforks` sub-object now returns an object keyed by soft fork name,\n+    rather than an array\n+  - Each softfork object in the `softforks` object contains a `type`\n+    value which is either `buried` (for soft fork deployments where the\n+    activation height is hard-coded into the client implementation), or\n+    `bip9` (for soft fork deployments where activation is controlled by\n+    BIP 9 signaling).\n+\n+- `getblocktemplate` no longer returns a `rules` array containing `CSV`\n+  and `segwit` (the BIP 9 deployments that are currently in active\n+  state).\n \n Tests\n -----\n@@ -120,6 +222,10 @@ Configuration\n   the selected network. This change takes only effect if the selected network\n   is not mainnet.\n \n+- On platforms supporting `thread_local`, log lines can be prefixed with\n+  the name of the thread that caused the log. To enable this behavior,\n+  use `-logthreadnames=1`.\n+\n Network\n -------\n \n@@ -141,6 +247,41 @@ Wallet\n   the calls to any of the import RPCs would fail when the first block is\n   pruned.\n \n+- When creating a transaction with a fee above `-maxtxfee` (default 0.1\n+  BTC), the RPC commands `walletcreatefundedpsbt` and\n+  `fundrawtransaction` will now fail instead of rounding down the fee.\n+  Beware that the `feeRate` argument is specified in BTC per kilobyte,\n+  not satoshi per byte.\n+\n+- A new wallet flag `avoid_reuse` has been added (default off). When\n+  enabled, a wallet will distinguish between used and unused addresses,\n+  and default to not use the former in coin selection.\n+\n+  Rescanning the blockchain is required, to correctly mark previously\n+  used destinations.\n+\n+  Together with \"avoid partial spends\" (present as of Bitcoin v0.17),\n+  this addresses a serious privacy issue where a malicious user can\n+  track spends by peppering a previously paid to address with near-dust\n+  outputs, which would then be inadvertently included in future\n+  payments.\n+\n+Build system changes\n+--------------------\n+\n+- Python >=3.5 is now required by all aspects of the project. This\n+  includes the build systems, test framework and linters. The previously\n+  supported minimum (3.4), was E OL in March 2019. See #14954 for more\n+  details.\n+\n+- The minimum supported miniUPnPc API version is set to 10. This keeps\n+  compatibility with Ubuntu 16.04 LTS and Debian 8 `libminiupnpc-dev`\n+  packages. Please note, on Debian this package is still vulnerable to\n+  [CVE-2017-8798](https://security-tracker.debian.org/tracker/CVE-2017-8798)\n+  (in jessie only) and\n+  [CVE-2017-1000494](https://security-tracker.debian.org/tracker/CVE-2017-1000494)\n+  (both in jessie and in stretch).\n+\n Credits\n =======\n "
      },
      {
        "sha": "9c77cb9ae5e5a88f9917bdb33cfc9bed030f4fbb",
        "filename": "doc/release-notes/release-notes-16152.md",
        "status": "removed",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes/release-notes-16152.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52b9797119d5ee20b255efc68931ac7e158e325d/doc/release-notes/release-notes-16152.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-16152.md?ref=52b9797119d5ee20b255efc68931ac7e158e325d",
        "patch": "@@ -1,7 +0,0 @@\n-P2P Changes\n------------\n-- The default value for the -peerbloomfilters configuration option (and, thus, NODE_BLOOM support) has been changed to false.\n-  This resolves well-known DoS vectors in Bitcoin Core, especially for nodes with spinning disks. It is not anticipated that\n-  this will result in a significant lack of availability of NODE_BLOOM-enabled nodes in the coming years, however, clients\n-  which rely on the availability of NODE_BLOOM-supporting nodes on the P2P network should consider the process of migrating\n-  to a more modern (and less trustful and privacy-violating) alternative over the coming years."
      }
    ]
  },
  {
    "sha": "7e1634a927f86dcffc7e35fdd479d19c414b14ab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZTE2MzRhOTI3Zjg2ZGNmZmM3ZTM1ZmRkNDc5ZDE5YzQxNGIxNGFi",
    "commit": {
      "author": {
        "name": "David A. Harding",
        "email": "dave@dtrt.org",
        "date": "2019-08-22T19:22:52Z"
      },
      "committer": {
        "name": "David A. Harding",
        "email": "dave@dtrt.org",
        "date": "2019-08-23T19:14:06Z"
      },
      "message": "Release notes: edit previously-detached notes",
      "tree": {
        "sha": "6b85daa335eff66c2d20571f022e0db81a31a428",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b85daa335eff66c2d20571f022e0db81a31a428"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e1634a927f86dcffc7e35fdd479d19c414b14ab",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEgxUkqkMp0LnoXjCr2dtBqWwiadMFAl1gOwAACgkQ2dtBqWwi\nadNLrBAArNSlU6VFtv5GlZDMcXlA8DRU+RVkNq71Yi8tAqIjQzOOvvHWqL2U1Ctb\nryiDgMGznHltaHOaw7PZwa3IBH5mjYNBTjTc1He4LzRgH+QtsLXQw7XnaJei+/n+\n6UDcOaUoyJNFWGmxyhLNPFcde9CP7ZyBC1xtc/DRmrdW8HIez9L0k13/pIBwHFyR\nrpqF4wf6DH9lhJigNKVlxYenddlBaVpRR7rUjvTPFhkMZk0OPtDn8ZaUNTC9iz5m\nsmoZzpLfqtnO/LAFkLbxflZF7OTxXaB9GRECLQf6HWFsLwn/Vlu3EbB21q9y2BBj\nE+tiq5XsoIcXudDBoyIsjk1psoVcIsMRjcQbwGpPAjSdPKr+hX23NDHTotDaP8Ps\nBBGUvyMSTEiOJj+iHP8uAgHd0lzON9XIVN1HThANDidlkpRCQeL2WpheOvhassRt\nPDRV9pEENdCBnW7ZR2KY+o3+Z6QMGo7+o6L4/ESlYeGkwJW1dim9r119DxaNK19W\n8F8I7WgkDup6IkQ6HPjDvlXDooo6PKmG4MmzBYBqmH6rR06A4ho66birMBRzS+W2\nkPbMbJ48S1w+YD/RU7RVecZgP/Lip7o6J3rsZLM94HOyjXnAcZNgQWBLWFMZVrrI\nfsBcG3plRSnh2igu8ZNfb9FsEig7SmQcg/abhGPHaixbBIxaoak=\n=V494\n-----END PGP SIGNATURE-----",
        "payload": "tree 6b85daa335eff66c2d20571f022e0db81a31a428\nparent e7415a5a95f53abf1f8ffa2085217b249d7caf61\nauthor David A. Harding <dave@dtrt.org> 1566501772 -1000\ncommitter David A. Harding <dave@dtrt.org> 1566587646 -1000\n\nRelease notes: edit previously-detached notes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e1634a927f86dcffc7e35fdd479d19c414b14ab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7e1634a927f86dcffc7e35fdd479d19c414b14ab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e1634a927f86dcffc7e35fdd479d19c414b14ab/comments",
    "author": {
      "login": "harding",
      "id": 61096,
      "node_id": "MDQ6VXNlcjYxMDk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harding",
      "html_url": "https://github.com/harding",
      "followers_url": "https://api.github.com/users/harding/followers",
      "following_url": "https://api.github.com/users/harding/following{/other_user}",
      "gists_url": "https://api.github.com/users/harding/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
      "organizations_url": "https://api.github.com/users/harding/orgs",
      "repos_url": "https://api.github.com/users/harding/repos",
      "events_url": "https://api.github.com/users/harding/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harding/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "harding",
      "id": 61096,
      "node_id": "MDQ6VXNlcjYxMDk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harding",
      "html_url": "https://github.com/harding",
      "followers_url": "https://api.github.com/users/harding/followers",
      "following_url": "https://api.github.com/users/harding/following{/other_user}",
      "gists_url": "https://api.github.com/users/harding/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
      "organizations_url": "https://api.github.com/users/harding/orgs",
      "repos_url": "https://api.github.com/users/harding/repos",
      "events_url": "https://api.github.com/users/harding/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harding/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e7415a5a95f53abf1f8ffa2085217b249d7caf61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7415a5a95f53abf1f8ffa2085217b249d7caf61",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e7415a5a95f53abf1f8ffa2085217b249d7caf61"
      }
    ],
    "stats": {
      "total": 251,
      "additions": 121,
      "deletions": 130
    },
    "files": [
      {
        "sha": "9af4e8a2795a37a70490f41e61b2f8ba406b4ac1",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 121,
        "deletions": 130,
        "changes": 251,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e1634a927f86dcffc7e35fdd479d19c414b14ab/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e1634a927f86dcffc7e35fdd479d19c414b14ab/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=7e1634a927f86dcffc7e35fdd479d19c414b14ab",
        "patch": "@@ -70,161 +70,155 @@ New RPCs\n - `getbalances` returns an object with all balances (`mine`,\n   `untrusted_pending` and `immature`). Please refer to the RPC help of\n   `getbalances` for details. The new RPC is intended to replace\n-  `getunconfirmedbalance` and the balance fields in `getwalletinfo`, as well as\n-  `getbalance`. The old calls may be removed in a future version.\n+  `getbalance`, `getunconfirmedbalance`, and the balance fields in\n+  `getwalletinfo`.  These old calls and fields may be removed in a\n+  future version. (#15930, #16239)\n \n-- A new `setwalletflag` RPC sets/unsets flags for an existing wallet.\n+- `setwalletflag` sets and unsets wallet flags that enable or disable\n+  features specific to that existing wallet, such as the new\n+  `avoid_reuse` feature documented elsewhere in these release notes.\n+  (#13756)\n \n Updated RPCs\n ------------\n \n Note: some low-level RPC changes mainly useful for testing are described in the\n Low-level Changes section below.\n \n-- The `sendmany` RPC had an argument `minconf` that was not well specified and\n-  would lead to RPC errors even when the wallet's coin selection would succeed.\n-  The `sendtoaddress` RPC never had this check, so to normalize the behavior,\n-  `minconf` is now ignored in `sendmany`. If the coin selection does not\n-  succeed due to missing coins, it will still throw an RPC error. Be reminded\n-  that coin selection is influenced by the `-spendzeroconfchange`,\n-  `-limitancestorcount`, `-limitdescendantcount` and `-walletrejectlongchains`\n-  command line arguments.\n-\n-- Several RPCs have been updated to include an \"avoid_reuse\" flag, used\n-  to control whether already used addresses should be left out or\n-  included in the operation.  These include:\n-\n-    - createwallet\n-    - getbalance\n-    - getbalances\n-    - sendtoaddress\n-\n-  In addition, `sendtoaddress` has been changed to avoid partial spends\n-  when `avoid_reuse` is enabled (if not already enabled via the\n-  `-avoidpartialspends` command line flag), as it would otherwise risk\n-  using up the \"wrong\" UTXO for an address reuse case.\n-\n-  The listunspent RPC has also been updated to now include a \"reused\"\n-  bool, for nodes with \"avoid_reuse\" enabled.\n-\n-- The `getblockstats` RPC is faster for fee calculation by using\n-  BlockUndo data. Also , `-txindex` is no longer required and\n-  `getblockstats` works for all non-pruned blocks.\n-\n-- `createwallet` can now create encrypted wallets if a non-empty\n-  passphrase is specified.\n-\n-- The `utxoupdatepsbt` RPC method has been updated to take a\n-  `descriptors` argument. When provided, input and output scripts and\n-  keys will be filled in when known, and P2SH-witness inputs will be\n-  filled in from the UTXO set when a descriptor is provided that shows\n-  they're spending segwit outputs.\n-\n-  See the RPC help text for full details.\n-\n-- The -maxtxfee setting no longer has any effect on non-wallet RPCs.\n-\n-  The `sendrawtransaction` and `testmempoolaccept` RPC methods previously\n-  accepted an `allowhighfees` parameter to fail the mempool acceptance in case\n-  the transaction's fee would exceed the value of the command line argument\n-  `-maxtxfee`. To uncouple the RPCs from the global option, they now have a\n-  hardcoded default for the maximum transaction fee, that can be changed for\n-  both RPCs on a per-call basis with the `maxfeerate` parameter. The\n-  `allowhighfees` boolean option has been removed and replaced by the\n-  `maxfeerate` numeric option.\n-\n-- In getmempoolancestors, getmempooldescendants, getmempoolentry and\n-  getrawmempool RPCs, to be consistent with the returned value and other\n-  RPCs such as getrawtransaction, vsize has been added and size is now\n-  deprecated. size will only be returned if bitcoind is started with\n-  `-deprecatedrpc=size`.\n-\n-- The RPC `getwalletinfo` response now includes the `scanning` key with\n-  an object if there is a scanning in progress or `false` otherwise.\n-  Currently the object has the scanning duration and progress.\n-\n-- `createwallet` now returns a warning if an empty string is used as an\n-  encryption password, and does not encrypt the wallet, instead of\n-  raising an error.  This makes it easier to disable encryption but also\n-  specify other options when using the `bitcoin-cli` tool.\n+- `sendmany` no longer has a `minconf` argument.  This argument was not\n+  well specified and would lead to RPC errors even when the wallet's\n+  coin selection succeeded.  Users who want to influence coin selection\n+  can use the existing `-spendzeroconfchange`, `-limitancestorcount`,\n+  `-limitdescendantcount` and `-walletrejectlongchains` configuration\n+  arguments. (#15596)\n+\n+- `getbalance` and `sendtoaddress`, plus the new RPCs `getbalances` and\n+  `createwallet`, now accept an \"avoid_reuse\" parameter that controls\n+  whether already used addresses should be included in the operation.\n+  Additionally, `sendtoaddress` will avoid partial spends when\n+  `avoid_reuse` is enabled even if this feature is not already enabled\n+  via the `-avoidpartialspends` command line flag because not doing so\n+  would risk using up the \"wrong\" UTXO for an address reuse case.\n+  (#13756)\n+\n+- `listunspent` now returns a \"reused\" bool for each output if the\n+  wallet flag \"avoid_reuse\" is enabled. (#13756)\n+\n+- `getblockstats` now uses BlockUndo data instead of the transaction\n+  index, making it much faster, no longer dependent on the `-txindex`\n+  configuration option, and functional for all non-pruned blocks.\n+  (#14802)\n+\n+- `utxoupdatepsbt` now accepts a `descriptors` parameter that will fill\n+  out input and output scripts and keys when known. P2SH-witness inputs\n+  will be filled in from the UTXO set when a descriptor is provided that\n+  shows they're spending segwit outputs.  See the RPC help text for full\n+  details. (#15427)\n+\n+- `sendrawtransaction` and `testmempoolaccept` no longer accept a\n+  `allowhighfees` parameter to fail mempool acceptance if the\n+  transaction fee exceedes the value of the configuration option\n+  `-maxtxfee`.  Now there is a hardcoded default maximum feerate that\n+  can be changed when calling either RPC using a `maxfeerate` parameter.\n+  (#15620)\n+\n+- `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry`, and\n+  `getrawmempool` no longer return a `size` field unless the\n+  configuration option `-deprecatedrpc=size` is used.  Instead a new\n+  `vsize` field is returned with the transaction's virtual size\n+  (consistent with other RPCs such as `getrawtransaction`). (#15637)\n+\n+- `getwalletinfo` now includes a `scanning` field that is either `false`\n+  (no scanning) or an object with information about the duration and\n+  progress of the wallet's scanning historical blocks for transactions\n+  affecting its balances. (#15730)\n+\n+- `createwallet` accepts a new `passphrase` parameter.  If set, this\n+  will create the new wallet encrypted with the given passphrase.  If\n+  unset (the default) or set to an empty string, no encryption will be\n+  used. (#16394)\n \n - `getmempoolentry` now provides a `weight` field containing the\n-  transaction weight as defined in BIP 141.\n+  transaction weight as defined in BIP141. (#16647)\n \n Deprecated or removed RPCs\n --------------------------\n \n-- The `totalFee` option of the `bumpfee` RPC has been deprecated and will be\n-  removed in 0.20.  To continue using this option start with\n-  `-deprecatedrpc=totalFee`.  See the `bumpfee` RPC help text for more details.\n+- `bumpfee` no longer accepts a `totalFee` option unless the\n+  configuration parameter `deprecatedrpc=totalFee` is specified.  This\n+  parameter will be fully removed in a subsequent release. (#15996)\n \n P2P changes\n -----------\n \n - BIP 61 reject messages were deprecated in v0.18. They are now disabled\n   by default, but can be enabled by setting the `-enablebip61` command\n   line option.  BIP 61 reject messages will be removed entirely in a\n-  future version of Bitcoin Core.\n-\n-- The default value for the -peerbloomfilters configuration option (and,\n-  thus, NODE_BLOOM support) has been changed to false.  This resolves\n-  well-known DoS vectors in Bitcoin Core, especially for nodes with\n-  spinning disks. It is not anticipated that this will result in a\n-  significant lack of availability of NODE_BLOOM-enabled nodes in the\n-  coming years, however, clients which rely on the availability of\n-  NODE_BLOOM-supporting nodes on the P2P network should consider the\n-  process of migrating to a more modern (and less trustful and\n-  privacy-violating) alternative over the coming years.\n+  future version of Bitcoin Core. (#14054)\n+\n+- To eliminate well-known denial-of-service vectors in Bitcoin Core,\n+  especially for nodes with spinning disks, the default value for the\n+  `-peerbloomfilters` configuration option has been changed to false.\n+  This prevents Bitcoin Core from sending the BIP111 NODE_BLOOM service\n+  flag, accepting BIP37 bloom filters, or serving merkle blocks or\n+  transactions matching a bloom filter.  Users who still want to provide\n+  bloom filter support may either set the configuration option to true\n+  to re-enable both BIP111 and BIP37 support or enable just BIP37\n+  support for specific peers using the updated `-whitelist` and\n+  `-whitebind` configuration options described elsewhere in these\n+  release notes.  For the near future, lightweight clients using public\n+  BIP111/BIP37 nodes should still be able to connect to older versions\n+  of Bitcoin Core and nodes that have manually enabled BIP37 support,\n+  but developers of such software should consider migrating to either\n+  using specific BIP37 nodes or an alternative transaction filtering\n+  system. (#16152)\n \n Miscellaneous CLI Changes\n -------------------------\n+\n - The `testnet` field in `bitcoin-cli -getinfo` has been renamed to\n   `chain` and now returns the current network name as defined in BIP70\n-  (main, test, regtest).\n+  (main, test, regtest). (#15566)\n \n Low-level changes\n =================\n \n RPC\n ---\n \n-- Soft fork reporting in the `getblockchaininfo` return object has been\n-  updated. For full details, see the RPC help text. In summary:\n-\n-  - The `bip9_softforks` sub-object is no longer returned\n-  - The `softforks` sub-object now returns an object keyed by soft fork name,\n-    rather than an array\n-  - Each softfork object in the `softforks` object contains a `type`\n-    value which is either `buried` (for soft fork deployments where the\n-    activation height is hard-coded into the client implementation), or\n-    `bip9` (for soft fork deployments where activation is controlled by\n-    BIP 9 signaling).\n+- `getblockchaininfo` no longer returns a `bip9_softforks` object.\n+  Instead, information has been moved into the `softforks` object and\n+  an additional `type` field describes how Bitcoin Core determines\n+  whether that soft fork is active (e.g. BIP9 or BIP90).  See the RPC\n+  help for details. (#16060)\n \n - `getblocktemplate` no longer returns a `rules` array containing `CSV`\n-  and `segwit` (the BIP 9 deployments that are currently in active\n-  state).\n+  and `segwit` (the BIP9 deployments that are currently in active\n+  state). (#16060)\n \n Tests\n -----\n \n-- The regression test chain, that can be enabled by the `-regtest` command line\n-  flag, now requires transactions to not violate standard policy by default.\n-  Making the default the same as for mainnet, makes it easier to test mainnet\n-  behavior on regtest. Be reminded that the testnet still allows non-standard\n-  txs by default and that the policy can be locally adjusted with the\n-  `-acceptnonstdtxn` command line flag for both test chains.\n+- The regression test chain enabled by the `-regtest` command line flag\n+  now requires transactions to not violate standard policy by default.\n+  This is the same default used for mainnet and makes it easier to test\n+  mainnet behavior on regtest. Note that the testnet still allows\n+  non-standard txs by default and that the policy can be locally\n+  adjusted with the `-acceptnonstdtxn` command line flag for both test\n+  chains. (#15891)\n \n Configuration\n ------------\n \n-- An error is issued where previously a warning was issued when a setting in\n-  the config file was specified in the default section, but not overridden for\n-  the selected network. This change takes only effect if the selected network\n-  is not mainnet.\n+- A setting specified in the default section but not also specified in a\n+  network-specific section (e.g. testnet) will now produce a error\n+  preventing startup instead of just a warning unless the network is\n+  mainnet.  This prevents settings intended for mainnet from being\n+  applied to testnet or regtest. (#15629)\n \n - On platforms supporting `thread_local`, log lines can be prefixed with\n   the name of the thread that caused the log. To enable this behavior,\n-  use `-logthreadnames=1`.\n+  use `-logthreadnames=1`. (#15849)\n \n Network\n -------\n@@ -235,52 +229,49 @@ Network\n   peers' announcements were received.  In this release, the download logic has\n   changed to randomize the fetch order across peers and to prefer sending\n   download requests to outbound peers over inbound peers. This fixes an issue\n-  where inbound peers can prevent a node from getting a transaction.\n+  where inbound peers could prevent a node from getting a transaction.\n+  (#14897, #15834)\n \n Wallet\n ------\n \n - When in pruned mode, a rescan that was triggered by an `importwallet`,\n-  `importpubkey`, `importaddress`, or `importprivkey` RPC will only fail when\n-  blocks have been pruned. Previously it would fail when `-prune` has been set.\n-  This change allows to set `-prune` to a high value (e.g. the disk size) and\n-  the calls to any of the import RPCs would fail when the first block is\n-  pruned.\n+  `importpubkey`, `importaddress`, or `importprivkey` RPC will only fail\n+  when blocks have been pruned. Previously it would fail when `-prune`\n+  has been set.  This change allows setting `-prune` to a high value\n+  (e.g. the disk size) without the calls to any of the import RPCs\n+  failing until the first block is pruned. (#15870)\n \n - When creating a transaction with a fee above `-maxtxfee` (default 0.1\n   BTC), the RPC commands `walletcreatefundedpsbt` and\n   `fundrawtransaction` will now fail instead of rounding down the fee.\n-  Beware that the `feeRate` argument is specified in BTC per kilobyte,\n-  not satoshi per byte.\n+  Be aware that the `feeRate` argument is specified in BTC per 1,000\n+  vbytes, not satoshi per vbyte. (#16257)\n \n - A new wallet flag `avoid_reuse` has been added (default off). When\n   enabled, a wallet will distinguish between used and unused addresses,\n-  and default to not use the former in coin selection.\n-\n-  Rescanning the blockchain is required, to correctly mark previously\n-  used destinations.\n-\n-  Together with \"avoid partial spends\" (present as of Bitcoin v0.17),\n-  this addresses a serious privacy issue where a malicious user can\n-  track spends by peppering a previously paid to address with near-dust\n-  outputs, which would then be inadvertently included in future\n-  payments.\n+  and default to not use the former in coin selection.  When setting\n+  this flag on an existing wallet, rescanning the blockchain is required\n+  to correctly mark previously used destinations.  Together with \"avoid\n+  partial spends\" (added in Bitcoin Core v0.17.0), this can eliminate a\n+  serious privacy issue where a malicious user can track spends by\n+  sending small payments to a previously-paid address that would then\n+  be included with unrelated inputs in future payments. (#13756)\n \n Build system changes\n --------------------\n \n - Python >=3.5 is now required by all aspects of the project. This\n   includes the build systems, test framework and linters. The previously\n-  supported minimum (3.4), was E OL in March 2019. See #14954 for more\n-  details.\n+  supported minimum (3.4), was EOL in March 2019. (#14954)\n \n - The minimum supported miniUPnPc API version is set to 10. This keeps\n   compatibility with Ubuntu 16.04 LTS and Debian 8 `libminiupnpc-dev`\n   packages. Please note, on Debian this package is still vulnerable to\n   [CVE-2017-8798](https://security-tracker.debian.org/tracker/CVE-2017-8798)\n   (in jessie only) and\n   [CVE-2017-1000494](https://security-tracker.debian.org/tracker/CVE-2017-1000494)\n-  (both in jessie and in stretch).\n+  (both in jessie and in stretch). (#15993)\n \n Credits\n ======="
      }
    ]
  },
  {
    "sha": "74e38769895c643d75f77634519c1442fa38bad6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NGUzODc2OTg5NWM2NDNkNzVmNzc2MzQ1MTljMTQ0MmZhMzhiYWQ2",
    "commit": {
      "author": {
        "name": "David A. Harding",
        "email": "dave@dtrt.org",
        "date": "2019-08-22T18:37:50Z"
      },
      "committer": {
        "name": "David A. Harding",
        "email": "dave@dtrt.org",
        "date": "2019-08-23T19:14:57Z"
      },
      "message": "Release notes: add previously undocumented changes",
      "tree": {
        "sha": "e0d4d84926f5baa375ea7c33c6dd424a2db0cdd5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e0d4d84926f5baa375ea7c33c6dd424a2db0cdd5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74e38769895c643d75f77634519c1442fa38bad6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEgxUkqkMp0LnoXjCr2dtBqWwiadMFAl1gOzUACgkQ2dtBqWwi\nadMQmA/+PQlX3d5vVkWoz5yXT8jk6rIV6oVHTLP2QvxlksuZzpYjAkx7HMeO9VqT\nW5CV4CmtUOnkBerUWr3XbUqgApzNYA3OVrAal8s5tVzOCP0E0asQCwaaTzMK0PaU\ncTo0iA3Z7MZU9Q9h/vHJMaeSMKky3xY8RPto1jxbtBywXnAaE4BAl0rtApKXjRJN\njSTfPYvUkVyA3sAxYvJQF7oC9ML57lc+vx2F0HAvMCmKGSPPI8tq30bCYwP31p61\nUcB9XxSwBJk1Fk9UYbdu4osyJyeA7IExK86iqHthDYSJ9WoII0WE609f9cZm0FJQ\njZ13FcB8XTBj8k3K+zJKaCB/uwgD9Mqq3GeJfM5bYxAjerYVCjVl8jv/CJtIFejP\nf2UylSLT7QoZ/0duv9B1uQZnzMJg6ddNc2xgRDF3a1aQaezErMpKeCydRPLgbtvJ\n0ZLkbYqBDxMRIg2QWn1DgG9HpOlEN4RhR9ULvAQPvldL4hsR6L5vLHHWTn75Idvu\n8Rv/68sC6NwPB6Oyr8hs0qXkvaorj4xOv5zw8lHuekBHCkHAqJX02MiATlnTxHNj\n9L1I6AHkvjlChLgLuvifJmgKH5cYj6UwjTaM6Snat4mMP5sl5svRMOOpPRUwApGR\nH3DBCtGK9pXGh3DFW3wxwxHmjVKgVK7tuiaclbADYAgTWpBeUtM=\n=IXkb\n-----END PGP SIGNATURE-----",
        "payload": "tree e0d4d84926f5baa375ea7c33c6dd424a2db0cdd5\nparent 7e1634a927f86dcffc7e35fdd479d19c414b14ab\nauthor David A. Harding <dave@dtrt.org> 1566499070 -1000\ncommitter David A. Harding <dave@dtrt.org> 1566587697 -1000\n\nRelease notes: add previously undocumented changes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74e38769895c643d75f77634519c1442fa38bad6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/74e38769895c643d75f77634519c1442fa38bad6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74e38769895c643d75f77634519c1442fa38bad6/comments",
    "author": {
      "login": "harding",
      "id": 61096,
      "node_id": "MDQ6VXNlcjYxMDk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harding",
      "html_url": "https://github.com/harding",
      "followers_url": "https://api.github.com/users/harding/followers",
      "following_url": "https://api.github.com/users/harding/following{/other_user}",
      "gists_url": "https://api.github.com/users/harding/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
      "organizations_url": "https://api.github.com/users/harding/orgs",
      "repos_url": "https://api.github.com/users/harding/repos",
      "events_url": "https://api.github.com/users/harding/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harding/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "harding",
      "id": 61096,
      "node_id": "MDQ6VXNlcjYxMDk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harding",
      "html_url": "https://github.com/harding",
      "followers_url": "https://api.github.com/users/harding/followers",
      "following_url": "https://api.github.com/users/harding/following{/other_user}",
      "gists_url": "https://api.github.com/users/harding/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
      "organizations_url": "https://api.github.com/users/harding/orgs",
      "repos_url": "https://api.github.com/users/harding/repos",
      "events_url": "https://api.github.com/users/harding/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harding/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7e1634a927f86dcffc7e35fdd479d19c414b14ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e1634a927f86dcffc7e35fdd479d19c414b14ab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7e1634a927f86dcffc7e35fdd479d19c414b14ab"
      }
    ],
    "stats": {
      "total": 94,
      "additions": 94,
      "deletions": 0
    },
    "files": [
      {
        "sha": "04aab56a7298592cb1fa1a01286976abbf8c3f20",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 94,
        "deletions": 0,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74e38769895c643d75f77634519c1442fa38bad6/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74e38769895c643d75f77634519c1442fa38bad6/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=74e38769895c643d75f77634519c1442fa38bad6",
        "patch": "@@ -64,6 +64,13 @@ platform.\n Notable changes\n ===============\n \n+New user documentation\n+----------------------\n+\n+- [Reduce memory](https://github.com/bitcoin/bitcoin/blob/master/doc/reduce-memory.md)\n+  suggests configuration tweaks for running Bitcoin Core on systems with\n+  limited memory. (#16339)\n+\n New RPCs\n --------\n \n@@ -79,6 +86,30 @@ New RPCs\n   `avoid_reuse` feature documented elsewhere in these release notes.\n   (#13756)\n \n+- `getblockfilter` gets the BIP158 filter for the specified block.  This\n+  RPC is only enabled if block filters have been created using the\n+  `-blockfilterindex` configuration option. (#14121)\n+\n+New settings\n+------------\n+\n+- `-blockfilterindex` enables the creation of BIP158 block filters for\n+  the entire blockchain.  Filters will be created in the background and\n+  currently use about 4 GiB of space.  Note: this version of Bitcoin\n+  Core does not serve block filters over the P2P network, although the\n+  local user may obtain block filters using the `getblockfilter` RPC.\n+  (#14121)\n+\n+Updated settings\n+----------------\n+\n+- `whitebind` and `whitelist` now accept a list of permissions to\n+  provide peers connecting using the indicated interfaces or IP\n+  addresses.  If no permissions are specified with an address or CIDR\n+  network, the implicit default permissions are the same as previous\n+  releases.  See the `bitcoind -help` output for these two options for\n+  details about the available permissions. (#16248)\n+\n Updated RPCs\n ------------\n \n@@ -141,13 +172,41 @@ Low-level Changes section below.\n - `getmempoolentry` now provides a `weight` field containing the\n   transaction weight as defined in BIP141. (#16647)\n \n+- `getdescriptorinfo` now returns an additional `checksum` field\n+  containing the checksum for the unmodified descriptor provided by the\n+  user (that is, before the descriptor is normalized for the\n+  `descriptor` field). (#15986)\n+\n+- `walletcreatefundedpsbt` now signals BIP125 Replace-by-Fee if the\n+  `-walletrbf` configuration option is set to true. (#15911)\n+\n+GUI changes\n+-----------\n+\n+- Provides bech32 addresses by default.  The user may change the address\n+  during invoice generation using a GUI toggle, or the default address\n+  type may be changed by the `-addresstype` configuration option.\n+  (#15711, #16497)\n+\n+Deprecated or removed configuration options\n+-------------------------------------------\n+\n+- `-mempoolreplacement` is removed, although default node behavior\n+  remains the same.  This option previously allowed the user to prevent\n+  the node from accepting or relaying BIP125 transaction replacements.\n+  This is different from the remaining configuration option\n+  `-walletrbf`. (#16171)\n+\n Deprecated or removed RPCs\n --------------------------\n \n - `bumpfee` no longer accepts a `totalFee` option unless the\n   configuration parameter `deprecatedrpc=totalFee` is specified.  This\n   parameter will be fully removed in a subsequent release. (#15996)\n \n+- `generate` is now removed after being deprecated in Bitcoin Core 0.18.\n+  Use the `generatetoaddress` RPC instead. (#15492)\n+\n P2P changes\n -----------\n \n@@ -196,6 +255,9 @@ RPC\n   and `segwit` (the BIP9 deployments that are currently in active\n   state). (#16060)\n \n+- `getrpcinfo` now returns a `logpath` field with the path to\n+  `debug.log`. (#15483)\n+\n Tests\n -----\n \n@@ -232,6 +294,38 @@ Network\n   where inbound peers could prevent a node from getting a transaction.\n   (#14897, #15834)\n \n+- If a Tor hidden service is being used, Bitcoin Core will be bound to\n+  the standard port 8333 even if a different port is configured for\n+  clearnet connections.  This prevents leaking node identity through use\n+  of identical non-default port numbers. (#15651)\n+\n+Mempool and transaction relay\n+-----------------------------\n+\n+- Allows one extra single-ancestor transaction per package.  Previously,\n+  if a transaction in the mempool had 25 descendants, or it and all of\n+  its descendants were over 101,000 vbytes, any newly-received\n+  transaction that was also a descendant would be ignored.  Now, one\n+  extra descendant will be allowed provided it is an immediate\n+  descendant (child) and the child's size is 10,000 vbytes or less.\n+  This makes it possible for two-party contract protocols such as\n+  Lightning Network to give each participant an output they can spend\n+  immediately for Child-Pays-For-Parent (CPFP) fee bumping without\n+  allowing one malicious participant to fill the entire package and thus\n+  prevent the other participant from spending their output. (#15681)\n+\n+- Transactions with outputs paying v1 to v16 witness versions (future\n+  segwit versions) are now accepted into the mempool, relayed, and\n+  mined.  Attempting to spend those outputs remains forbidden by policy\n+  (\"non-standard\").  When this change has been widely deployed, wallets\n+  and services can accept any valid bech32 Bitcoin address without\n+  concern that transactions paying future segwit versions will become\n+  stuck in an unconfirmed state. (#15846)\n+\n+- Legacy transactions (transactions with no segwit inputs) must now be\n+  sent using the legacy encoding format, enforcing the rule specified in\n+  BIP144.  (#14039)\n+\n Wallet\n ------\n "
      }
    ]
  }
]