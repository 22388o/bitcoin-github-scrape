[
  {
    "sha": "7dee8f48088c75ab0e51be60679505f8ce570919",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZGVlOGY0ODA4OGM3NWFiMGU1MWJlNjA2Nzk1MDVmOGNlNTcwOTE5",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-09-13T19:31:11Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-09-13T19:33:46Z"
      },
      "message": "[wallet] Rename 'decode' argument in gettransaction method to 'verbose'\n\nThis makes the RPC method consistent with other RPC methods that have a\n'verbose' option.\n\nChange the name of the return object from 'decoded' to details.\n\nUpdate help text.",
      "tree": {
        "sha": "cc31c38c3d8aaf300645db7e84ddb877b5e89fcd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc31c38c3d8aaf300645db7e84ddb877b5e89fcd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7dee8f48088c75ab0e51be60679505f8ce570919",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dee8f48088c75ab0e51be60679505f8ce570919",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7dee8f48088c75ab0e51be60679505f8ce570919",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dee8f48088c75ab0e51be60679505f8ce570919/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb4f5beb6ede4aadeaff779cd67a0f6665419488",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb4f5beb6ede4aadeaff779cd67a0f6665419488",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb4f5beb6ede4aadeaff779cd67a0f6665419488"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 14,
      "deletions": 14
    },
    "files": [
      {
        "sha": "14e4004f72620525cb4098822b7c72a7510a6fcb",
        "filename": "doc/release-notes-16185.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dee8f48088c75ab0e51be60679505f8ce570919/doc/release-notes-16185.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dee8f48088c75ab0e51be60679505f8ce570919/doc/release-notes-16185.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-16185.md?ref=7dee8f48088c75ab0e51be60679505f8ce570919",
        "patch": "@@ -1,3 +1,3 @@\n RPC changes\n -----------\n-The `gettransaction` RPC now accepts a third (boolean) argument `decode`. If set to `true`, a new `decoded` field will be added to the response containing the decoded transaction.\n+The `gettransaction` RPC now accepts a third (boolean) argument `verbose`. If set to `true`, a new `details` field will be added to the response containing additional transaction details."
      },
      {
        "sha": "c2714f9c83c2a7005f7597a0b2e13239330643bc",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dee8f48088c75ab0e51be60679505f8ce570919/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dee8f48088c75ab0e51be60679505f8ce570919/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=7dee8f48088c75ab0e51be60679505f8ce570919",
        "patch": "@@ -85,7 +85,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"getblockheader\", 1, \"verbose\" },\n     { \"getchaintxstats\", 0, \"nblocks\" },\n     { \"gettransaction\", 1, \"include_watchonly\" },\n-    { \"gettransaction\", 2, \"decode\" },\n+    { \"gettransaction\", 2, \"verbose\" },\n     { \"getrawtransaction\", 1, \"verbose\" },\n     { \"createrawtransaction\", 0, \"inputs\" },\n     { \"createrawtransaction\", 1, \"outputs\" },"
      },
      {
        "sha": "9952e868f95cf7a3184d6731c7856015ff613330",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dee8f48088c75ab0e51be60679505f8ce570919/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dee8f48088c75ab0e51be60679505f8ce570919/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=7dee8f48088c75ab0e51be60679505f8ce570919",
        "patch": "@@ -1649,7 +1649,7 @@ static UniValue gettransaction(const JSONRPCRequest& request)\n                 {\n                     {\"txid\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The transaction id\"},\n                     {\"include_watchonly\", RPCArg::Type::BOOL, /* default */ \"true for watch-only wallets, otherwise false\", \"Whether to include watch-only addresses in balance calculation and details[]\"},\n-                    {\"decode\", RPCArg::Type::BOOL, /* default */ \"false\", \"Whether to add a field with the decoded transaction\"},\n+                    {\"verbose\", RPCArg::Type::BOOL, /* default */ \"false\", \"Whether to add a field with additional transaction details\"},\n                 },\n                 RPCResult{\n             \"{\\n\"\n@@ -1685,7 +1685,7 @@ static UniValue gettransaction(const JSONRPCRequest& request)\n             \"    ,...\\n\"\n             \"  ],\\n\"\n             \"  \\\"hex\\\" : \\\"data\\\"         (string) Raw data for transaction\\n\"\n-            \"  \\\"decoded\\\" : transaction         (json object) Optional, the decoded transaction\\n\"\n+            \"  \\\"details\\\" : transaction         (json object) Optional, additional transaction details. This object contains the same transaction details as the `getrawtransaction` RPC method\\n\"\n             \"}\\n\"\n                 },\n                 RPCExamples{\n@@ -1711,7 +1711,7 @@ static UniValue gettransaction(const JSONRPCRequest& request)\n         filter |= ISMINE_WATCH_ONLY;\n     }\n \n-    bool decode_tx = request.params[2].isNull() ? false : request.params[2].get_bool();\n+    bool verbose = request.params[2].isNull() ? false : request.params[2].get_bool();\n \n     UniValue entry(UniValue::VOBJ);\n     auto it = pwallet->mapWallet.find(hash);\n@@ -1738,10 +1738,10 @@ static UniValue gettransaction(const JSONRPCRequest& request)\n     std::string strHex = EncodeHexTx(*wtx.tx, pwallet->chain().rpcSerializationFlags());\n     entry.pushKV(\"hex\", strHex);\n \n-    if (decode_tx) {\n-        UniValue decoded(UniValue::VOBJ);\n-        TxToUniv(*wtx.tx, uint256(), decoded, false);\n-        entry.pushKV(\"decoded\", decoded);\n+    if (verbose) {\n+        UniValue details(UniValue::VOBJ);\n+        TxToUniv(*wtx.tx, uint256(), details, false);\n+        entry.pushKV(\"details\", details);\n     }\n \n     return entry;\n@@ -4189,7 +4189,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"getrawchangeaddress\",              &getrawchangeaddress,           {\"address_type\"} },\n     { \"wallet\",             \"getreceivedbyaddress\",             &getreceivedbyaddress,          {\"address\",\"minconf\"} },\n     { \"wallet\",             \"getreceivedbylabel\",               &getreceivedbylabel,            {\"label\",\"minconf\"} },\n-    { \"wallet\",             \"gettransaction\",                   &gettransaction,                {\"txid\",\"include_watchonly\",\"decode\"} },\n+    { \"wallet\",             \"gettransaction\",                   &gettransaction,                {\"txid\",\"include_watchonly\",\"verbose\"} },\n     { \"wallet\",             \"getunconfirmedbalance\",            &getunconfirmedbalance,         {} },\n     { \"wallet\",             \"getbalances\",                      &getbalances,                   {} },\n     { \"wallet\",             \"getwalletinfo\",                    &getwalletinfo,                 {} },"
      },
      {
        "sha": "4c3fe3078b91377cacf692d4b3450f99cce51980",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dee8f48088c75ab0e51be60679505f8ce570919/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dee8f48088c75ab0e51be60679505f8ce570919/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=7dee8f48088c75ab0e51be60679505f8ce570919",
        "patch": "@@ -499,10 +499,10 @@ def run_test(self):\n         self.nodes[0].setlabel(change, 'foobar')\n         assert_equal(self.nodes[0].getaddressinfo(change)['ischange'], False)\n \n-        # Test \"decoded\" field value in gettransaction response\n-        self.log.info(\"Testing gettransaction decoding...\")\n-        tx = self.nodes[0].gettransaction(txid=txid, decode=True)\n-        assert_equal(tx[\"decoded\"], self.nodes[0].decoderawtransaction(tx[\"hex\"]))\n+        # Test \"verbose\" field value in gettransaction response\n+        self.log.info(\"Testing verbose gettransaction...\")\n+        tx = self.nodes[0].gettransaction(txid=txid, verbose=True)\n+        assert_equal(tx[\"details\"], self.nodes[0].decoderawtransaction(tx[\"hex\"]))\n \n \n if __name__ == '__main__':"
      }
    ]
  }
]