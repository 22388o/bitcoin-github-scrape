[
  {
    "sha": "3c2e9c854ee5f0801211c9f3416f06146e046f7a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzJlOWM4NTRlZTVmMDgwMTIxMWM5ZjM0MTZmMDYxNDZlMDQ2Zjdh",
    "commit": {
      "author": {
        "name": "Ivan Metlushko",
        "email": "metlushko@gmail.com",
        "date": "2020-06-26T09:47:32Z"
      },
      "committer": {
        "name": "Ivan Metlushko",
        "email": "metlushko@gmail.com",
        "date": "2020-06-26T09:47:32Z"
      },
      "message": "test: faster functional test shutdown\n\nWe don't need to wait for clean nodes shutdown during test shutdown,\nso just send kill signal and move on with the next test. Because we\nalready allow to run tests in parallel there is no possible problems\ndue to resource contention.",
      "tree": {
        "sha": "7a0511e2928ae372ce46242064715d8957073898",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7a0511e2928ae372ce46242064715d8957073898"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c2e9c854ee5f0801211c9f3416f06146e046f7a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c2e9c854ee5f0801211c9f3416f06146e046f7a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c2e9c854ee5f0801211c9f3416f06146e046f7a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c2e9c854ee5f0801211c9f3416f06146e046f7a/comments",
    "author": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f32f7e907a5eb73e880c567c699569081608ed7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f32f7e907a5eb73e880c567c699569081608ed7a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f32f7e907a5eb73e880c567c699569081608ed7a"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 12,
      "deletions": 5
    },
    "files": [
      {
        "sha": "561943af15451589d3fbd5f927e53652cc7c2946",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2e9c854ee5f0801211c9f3416f06146e046f7a/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2e9c854ee5f0801211c9f3416f06146e046f7a/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=3c2e9c854ee5f0801211c9f3416f06146e046f7a",
        "patch": "@@ -259,9 +259,9 @@ def shutdown(self):\n         self.log.debug('Closing down network thread')\n         self.network_thread.close()\n         if not self.options.noshutdown:\n-            self.log.info(\"Stopping nodes\")\n-            if self.nodes:\n-                self.stop_nodes()\n+            self.log.info(\"Killing nodes\")\n+            for node in self.nodes:\n+                node.kill_node(wait=False)\n         else:\n             for node in self.nodes:\n                 node.cleanup_on_exit = False"
      },
      {
        "sha": "cdebbe4aced3788318b6c8dc9a3a519fe656dbf9",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2e9c854ee5f0801211c9f3416f06146e046f7a/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2e9c854ee5f0801211c9f3416f06146e046f7a/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=3c2e9c854ee5f0801211c9f3416f06146e046f7a",
        "patch": "@@ -164,12 +164,12 @@ def _raise_assertion_error(self, msg: str):\n     def __del__(self):\n         # Ensure that we don't leave any bitcoind processes lying around after\n         # the test ends\n-        if self.process and self.cleanup_on_exit:\n+        if self.cleanup_on_exit:\n             # Should only happen on test failure\n             # Avoid using logger, as that may have already been shutdown when\n             # this destructor is called.\n             print(self._node_msg(\"Cleaning up leftover process\"))\n-            self.process.kill()\n+            self.kill_node()\n \n     def __getattr__(self, name):\n         \"\"\"Dispatches any unrecognised messages to the RPC connection or a CLI instance.\"\"\"\n@@ -337,6 +337,13 @@ def stop_node(self, expected_stderr='', wait=0):\n \n         del self.p2ps[:]\n \n+    def kill_node(self, wait=True):\n+        if self.process:\n+            self.process.kill()\n+            if wait:\n+                self.process.wait()\n+        self.process = None\n+\n     def is_node_stopped(self):\n         \"\"\"Checks whether the node has stopped.\n "
      }
    ]
  }
]