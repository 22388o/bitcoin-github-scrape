[
  {
    "sha": "9ec8006998fac2f7a6889a5bf1a5916c2dd2e3d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZWM4MDA2OTk4ZmFjMmY3YTY4ODlhNWJmMWE1OTE2YzJkZDJlM2Q4",
    "commit": {
      "author": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-08-29T17:35:55Z"
      },
      "committer": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-08-29T17:35:55Z"
      },
      "message": "Move CWalletTx::IsConfirmed to wallet.cpp",
      "tree": {
        "sha": "85d589138ba82e1c44b60c911b14d56178baea07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85d589138ba82e1c44b60c911b14d56178baea07"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ec8006998fac2f7a6889a5bf1a5916c2dd2e3d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ec8006998fac2f7a6889a5bf1a5916c2dd2e3d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9ec8006998fac2f7a6889a5bf1a5916c2dd2e3d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ec8006998fac2f7a6889a5bf1a5916c2dd2e3d8/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ff33a3470dd1d1446549d02609c991c0490e0fdf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff33a3470dd1d1446549d02609c991c0490e0fdf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ff33a3470dd1d1446549d02609c991c0490e0fdf"
      }
    ],
    "stats": {
      "total": 86,
      "additions": 44,
      "deletions": 42
    },
    "files": [
      {
        "sha": "645fb8cb0878d6a23acaf7de9e947cdfd1cf67f2",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ec8006998fac2f7a6889a5bf1a5916c2dd2e3d8/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ec8006998fac2f7a6889a5bf1a5916c2dd2e3d8/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=9ec8006998fac2f7a6889a5bf1a5916c2dd2e3d8",
        "patch": "@@ -729,6 +729,49 @@ void CWalletTx::GetAccountAmounts(const string& strAccount, int64& nReceived,\n     }\n }\n \n+bool CWalletTx::IsConfirmed() const\n+{\n+    // Quick answer in most cases\n+    if (!IsFinalTx(*this))\n+        return false;\n+    if (GetDepthInMainChain() >= 1)\n+        return true;\n+    if (!IsFromMe()) // using wtx's cached debit\n+        return false;\n+\n+    // If no confirmations but it's from us, we can still\n+    // consider it confirmed if all dependencies are confirmed\n+    std::map<uint256, const CMerkleTx*> mapPrev;\n+    std::vector<const CMerkleTx*> vWorkQueue;\n+    vWorkQueue.reserve(vtxPrev.size()+1);\n+    vWorkQueue.push_back(this);\n+    for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n+    {\n+        const CMerkleTx* ptx = vWorkQueue[i];\n+\n+        if (!IsFinalTx(*ptx))\n+            return false;\n+        if (ptx->GetDepthInMainChain() >= 1)\n+            continue;\n+        if (!pwallet->IsFromMe(*ptx))\n+            return false;\n+\n+        if (mapPrev.empty())\n+        {\n+            BOOST_FOREACH(const CMerkleTx& tx, vtxPrev)\n+                mapPrev[tx.GetHash()] = &tx;\n+        }\n+\n+        BOOST_FOREACH(const CTxIn& txin, ptx->vin)\n+        {\n+            if (!mapPrev.count(txin.prevout.hash))\n+                return false;\n+            vWorkQueue.push_back(mapPrev[txin.prevout.hash]);\n+        }\n+    }\n+    return true;\n+}\n+\n void CWalletTx::AddSupportingTransactions()\n {\n     vtxPrev.clear();"
      },
      {
        "sha": "7956a0615036c1eb1ff00e4cf45e827fe85f50ce",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 42,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ec8006998fac2f7a6889a5bf1a5916c2dd2e3d8/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ec8006998fac2f7a6889a5bf1a5916c2dd2e3d8/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=9ec8006998fac2f7a6889a5bf1a5916c2dd2e3d8",
        "patch": "@@ -666,48 +666,7 @@ class CWalletTx : public CMerkleTx\n         return (GetDebit() > 0);\n     }\n \n-    bool IsConfirmed() const\n-    {\n-        // Quick answer in most cases\n-        if (!IsFinalTx(*this))\n-            return false;\n-        if (GetDepthInMainChain() >= 1)\n-            return true;\n-        if (!IsFromMe()) // using wtx's cached debit\n-            return false;\n-\n-        // If no confirmations but it's from us, we can still\n-        // consider it confirmed if all dependencies are confirmed\n-        std::map<uint256, const CMerkleTx*> mapPrev;\n-        std::vector<const CMerkleTx*> vWorkQueue;\n-        vWorkQueue.reserve(vtxPrev.size()+1);\n-        vWorkQueue.push_back(this);\n-        for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n-        {\n-            const CMerkleTx* ptx = vWorkQueue[i];\n-\n-            if (!IsFinalTx(*ptx))\n-                return false;\n-            if (ptx->GetDepthInMainChain() >= 1)\n-                continue;\n-            if (!pwallet->IsFromMe(*ptx))\n-                return false;\n-\n-            if (mapPrev.empty())\n-            {\n-                BOOST_FOREACH(const CMerkleTx& tx, vtxPrev)\n-                    mapPrev[tx.GetHash()] = &tx;\n-            }\n-\n-            BOOST_FOREACH(const CTxIn& txin, ptx->vin)\n-            {\n-                if (!mapPrev.count(txin.prevout.hash))\n-                    return false;\n-                vWorkQueue.push_back(mapPrev[txin.prevout.hash]);\n-            }\n-        }\n-        return true;\n-    }\n+    bool IsConfirmed() const;\n \n     bool WriteToDisk();\n "
      }
    ]
  },
  {
    "sha": "d2c7d60a478e4e681a2f2866fa0cfc425e3efb37",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmM3ZDYwYTQ3OGU0ZTY4MWEyZjI4NjZmYTBjZmM0MjVlM2VmYjM3",
    "commit": {
      "author": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-08-29T17:38:23Z"
      },
      "committer": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-08-29T17:38:23Z"
      },
      "message": "Improve CWalletTx::IsConfirmed performance.\n\nBuild a cache of already processed transactions is sufficient to fix this.",
      "tree": {
        "sha": "2046c04fe56b42fb2506c0d1ad410d537c01db33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2046c04fe56b42fb2506c0d1ad410d537c01db33"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2c7d60a478e4e681a2f2866fa0cfc425e3efb37",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2c7d60a478e4e681a2f2866fa0cfc425e3efb37",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2c7d60a478e4e681a2f2866fa0cfc425e3efb37",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2c7d60a478e4e681a2f2866fa0cfc425e3efb37/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9ec8006998fac2f7a6889a5bf1a5916c2dd2e3d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ec8006998fac2f7a6889a5bf1a5916c2dd2e3d8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ec8006998fac2f7a6889a5bf1a5916c2dd2e3d8"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 28,
      "deletions": 20
    },
    "files": [
      {
        "sha": "021d2bb78cf75a51ce666f1c0db1b2faff1f0799",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 20,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2c7d60a478e4e681a2f2866fa0cfc425e3efb37/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2c7d60a478e4e681a2f2866fa0cfc425e3efb37/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=d2c7d60a478e4e681a2f2866fa0cfc425e3efb37",
        "patch": "@@ -741,32 +741,40 @@ bool CWalletTx::IsConfirmed() const\n \n     // If no confirmations but it's from us, we can still\n     // consider it confirmed if all dependencies are confirmed\n-    std::map<uint256, const CMerkleTx*> mapPrev;\n-    std::vector<const CMerkleTx*> vWorkQueue;\n-    vWorkQueue.reserve(vtxPrev.size()+1);\n-    vWorkQueue.push_back(this);\n+    std::vector<uint256> vWorkQueue;\n+    \n+    BOOST_FOREACH(const CTxIn& txin, this->vin)\n+        vWorkQueue.push_back(txin.prevout.hash);\n+    \n+    set<uint256> setAlreadyDone;\n+    \n     for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n     {\n-        const CMerkleTx* ptx = vWorkQueue[i];\n-\n-        if (!IsFinalTx(*ptx))\n+        uint256 hash = vWorkQueue[i];\n+        \n+        if (setAlreadyDone.count(hash))\n+            continue;\n+        setAlreadyDone.insert(hash);\n+        \n+        CMerkleTx tx;\n+        map<uint256, CWalletTx>::const_iterator mi = pwallet->mapWallet.find(hash);\n+        \n+        // dependent transactions cannot be found\n+        if (mi == pwallet->mapWallet.end())\n+            return false;\n+        \n+        tx = (*mi).second;\n+        \n+        if (!IsFinalTx(tx))\n             return false;\n-        if (ptx->GetDepthInMainChain() >= 1)\n+        if (tx.GetDepthInMainChain() >= 1)\n             continue;\n-        if (!pwallet->IsFromMe(*ptx))\n+        if (!pwallet->IsFromMe(tx))\n             return false;\n-\n-        if (mapPrev.empty())\n-        {\n-            BOOST_FOREACH(const CMerkleTx& tx, vtxPrev)\n-                mapPrev[tx.GetHash()] = &tx;\n-        }\n-\n-        BOOST_FOREACH(const CTxIn& txin, ptx->vin)\n+        \n+        BOOST_FOREACH(const CTxIn& txin, tx.vin)\n         {\n-            if (!mapPrev.count(txin.prevout.hash))\n-                return false;\n-            vWorkQueue.push_back(mapPrev[txin.prevout.hash]);\n+            vWorkQueue.push_back(txin.prevout.hash);\n         }\n     }\n     return true;"
      }
    ]
  },
  {
    "sha": "3214be2eb1e086553d8c51065434595c2e336d79",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMjE0YmUyZWIxZTA4NjU1M2Q4YzUxMDY1NDM0NTk1YzJlMzM2ZDc5",
    "commit": {
      "author": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-08-29T18:58:16Z"
      },
      "committer": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-08-29T18:58:16Z"
      },
      "message": "Search both mapWallet and vtxPrev for dependent transactions",
      "tree": {
        "sha": "2d9c94d51635ebd53adf0925c22f80d885de80c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d9c94d51635ebd53adf0925c22f80d885de80c0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3214be2eb1e086553d8c51065434595c2e336d79",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3214be2eb1e086553d8c51065434595c2e336d79",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3214be2eb1e086553d8c51065434595c2e336d79",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3214be2eb1e086553d8c51065434595c2e336d79/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2c7d60a478e4e681a2f2866fa0cfc425e3efb37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2c7d60a478e4e681a2f2866fa0cfc425e3efb37",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2c7d60a478e4e681a2f2866fa0cfc425e3efb37"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 15,
      "deletions": 4
    },
    "files": [
      {
        "sha": "238fff32640306ddb669cc502eba5d12f4dda5e7",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 4,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3214be2eb1e086553d8c51065434595c2e336d79/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3214be2eb1e086553d8c51065434595c2e336d79/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=3214be2eb1e086553d8c51065434595c2e336d79",
        "patch": "@@ -743,7 +743,13 @@ bool CWalletTx::IsConfirmed() const\n     // consider it confirmed if all dependencies are confirmed\n     std::vector<uint256> vWorkQueue;\n     \n-    BOOST_FOREACH(const CTxIn& txin, this->vin)\n+    // pwallet->mapWallet doesn't contain !IsMine transactions\n+    std::map<uint256, CMerkleTx> mapPrev;\n+    \n+    BOOST_FOREACH(const CMerkleTx& tx, vtxPrev)\n+        mapPrev[tx.GetHash()] = tx;\n+    \n+    BOOST_FOREACH(const CTxIn& txin, vin)\n         vWorkQueue.push_back(txin.prevout.hash);\n     \n     set<uint256> setAlreadyDone;\n@@ -756,14 +762,19 @@ bool CWalletTx::IsConfirmed() const\n             continue;\n         setAlreadyDone.insert(hash);\n         \n-        CMerkleTx tx;\n         map<uint256, CWalletTx>::const_iterator mi = pwallet->mapWallet.find(hash);\n+        map<uint256, CMerkleTx>::const_iterator pi = mapPrev.find(hash);\n         \n         // dependent transactions cannot be found\n-        if (mi == pwallet->mapWallet.end())\n+        if (mi == pwallet->mapWallet.end() && pi == mapPrev.end())\n             return false;\n         \n-        tx = (*mi).second;\n+        CMerkleTx tx;\n+        if (mi != pwallet->mapWallet.end())\n+            tx = (*mi).second;\n+        \n+        if (pi != mapPrev.end())\n+            tx = (*pi).second;\n         \n         if (!IsFinalTx(tx))\n             return false;"
      }
    ]
  },
  {
    "sha": "a64565da35a46a82d791455c15219f38ab83b14b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNjQ1NjVkYTM1YTQ2YTgyZDc5MTQ1NWMxNTIxOWYzOGFiODNiMTRi",
    "commit": {
      "author": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-08-29T19:18:02Z"
      },
      "committer": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-08-29T19:18:02Z"
      },
      "message": "Further improve performance of IsConfirmed.\nreplace setAlreadyDone with setAlreadyQueued",
      "tree": {
        "sha": "28c06cb699d85bb1ad984d464641b6cca2c0f155",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28c06cb699d85bb1ad984d464641b6cca2c0f155"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a64565da35a46a82d791455c15219f38ab83b14b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a64565da35a46a82d791455c15219f38ab83b14b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a64565da35a46a82d791455c15219f38ab83b14b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a64565da35a46a82d791455c15219f38ab83b14b/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3214be2eb1e086553d8c51065434595c2e336d79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3214be2eb1e086553d8c51065434595c2e336d79",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3214be2eb1e086553d8c51065434595c2e336d79"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 12,
      "deletions": 6
    },
    "files": [
      {
        "sha": "0ea7e40ada66c4a2c046709727dd2be798b3b753",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 6,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a64565da35a46a82d791455c15219f38ab83b14b/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a64565da35a46a82d791455c15219f38ab83b14b/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=a64565da35a46a82d791455c15219f38ab83b14b",
        "patch": "@@ -743,25 +743,27 @@ bool CWalletTx::IsConfirmed() const\n     // consider it confirmed if all dependencies are confirmed\n     std::vector<uint256> vWorkQueue;\n     \n+    set<uint256> setAlreadyQueued;\n+    \n     // pwallet->mapWallet doesn't contain !IsMine transactions\n     std::map<uint256, CMerkleTx> mapPrev;\n     \n     BOOST_FOREACH(const CMerkleTx& tx, vtxPrev)\n         mapPrev[tx.GetHash()] = tx;\n     \n     BOOST_FOREACH(const CTxIn& txin, vin)\n+    {\n+        if (setAlreadyQueued.count(txin.prevout.hash))\n+            continue;\n+        setAlreadyQueued.insert(txin.prevout.hash);\n+        \n         vWorkQueue.push_back(txin.prevout.hash);\n-    \n-    set<uint256> setAlreadyDone;\n+    }\n     \n     for (unsigned int i = 0; i < vWorkQueue.size(); i++)\n     {\n         uint256 hash = vWorkQueue[i];\n         \n-        if (setAlreadyDone.count(hash))\n-            continue;\n-        setAlreadyDone.insert(hash);\n-        \n         map<uint256, CWalletTx>::const_iterator mi = pwallet->mapWallet.find(hash);\n         map<uint256, CMerkleTx>::const_iterator pi = mapPrev.find(hash);\n         \n@@ -785,6 +787,10 @@ bool CWalletTx::IsConfirmed() const\n         \n         BOOST_FOREACH(const CTxIn& txin, tx.vin)\n         {\n+            if (setAlreadyQueued.count(txin.prevout.hash))\n+                continue;\n+            setAlreadyQueued.insert(txin.prevout.hash);\n+            \n             vWorkQueue.push_back(txin.prevout.hash);\n         }\n     }"
      }
    ]
  }
]