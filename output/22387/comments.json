[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872651861",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-872651861",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 872651861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjY1MTg2MQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-02T01:41:05Z",
    "updated_at": "2021-07-19T01:51:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22490 by mzumsande\n* #21528 by amitiuttarwar\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872651861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872679319",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-872679319",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 872679319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjY3OTMxOQ==",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?u=03240c7cca7b55e5b9239eeab7a5914663a42b91&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-02T03:08:32Z",
    "updated_at": "2021-07-02T03:08:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "> There are measures to limit the influence attackers can have on the addrman database (bucket restrictions based on IPs), but still - **there is no need to permit them to feed us addresses at a rate that's orders of magnitude larger than what is common on the network today**, especially as it will cause us to spam our peers too.\r\n\r\nConcept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872679319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872802081",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-872802081",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 872802081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MjgwMjA4MQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-02T08:02:16Z",
    "updated_at": "2021-07-02T08:02:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/872802081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/873138272",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-873138272",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 873138272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzEzODI3Mg==",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?u=03240c7cca7b55e5b9239eeab7a5914663a42b91&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-02T17:04:11Z",
    "updated_at": "2021-07-02T17:04:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Compiled the branch but don't want to run [test/functional/p2p_addr_relay.py](https://github.com/sipa/bitcoin/blob/202106_rate_limit_addr/test/functional/p2p_addr_relay.py). I want to test it manually on testnet.\r\n\r\n1. Can we do `send_and_ping` used in the test with some RPC?\r\n2. How can we try this on testnet? I am assuming: Compile branch, run two nodes on testnet, use `addnode`, spam other node with random addresses (not sure how to do this?) and compare the results for `getnodeaddresses` doing same on master branch.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/873138272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/873143328",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-873143328",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 873143328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzE0MzMyOA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-02T17:13:26Z",
    "updated_at": "2021-07-02T17:13:26Z",
    "author_association": "MEMBER",
    "body": "@prayank23 No, it's testing a P2P aspect, you can't do that through RPC. There is the `addpeeraddress` RPC for injecting new addresses, but it doesn't have (or need) the same rate limiting.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/873143328/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/873208395",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-873208395",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 873208395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzIwODM5NQ==",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-02T19:11:30Z",
    "updated_at": "2021-07-02T19:21:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK to introducing a rate limiting mechanism for addr relay, some general questions about the approach:\r\n\r\nThe approach of a constant counter increase doesn't scale with the total number of self-announcing nodes in the network, while addr traffic to a node probably does (or at least should?). Did you consider the possibility of an adaptive rate limiting approach (e.g. let the token counter increase based on recently observed addr frequency from outbound peers or something like that) that could adapt to changes in network size or in the general efficiency of gossip relay over time - or would that be too complicated/have some other downsides?\r\n\r\nChoosing the rate limit of\u00a0\u00a00.1 addr/s\u00a0based on current observations of 0.005-0.025 addr/s also kind of says that we are happy with the current efficiency of addr gossip - are we though? (#21528 would likely increase it, though I'm not sure by how much)\r\n\r\nIt would be great to have some historical references about observed addr/s rate (to see whether it has changed significantly over the years with increasing SPV nodes, introduction of block-relay-only connections etc.), but I would assume this kind of data doesn't exist anywhere...\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/873208395/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/873214929",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-873214929",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 873214929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzIxNDkyOQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-02T19:26:18Z",
    "updated_at": "2021-07-02T19:26:18Z",
    "author_association": "MEMBER",
    "body": "@mzumsande Those are reasonable points. My thinking is mostly that some limit here is necessary, and if this appears to be too restrictive as the network or other aspects of addr relay change, they can be revisited - those are unlikely to cause dramatic changes in short periods of time. I think an adaptive limit is too easily exploited.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/873214929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/873454941",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-873454941",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 873454941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzQ1NDk0MQ==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-03T19:00:59Z",
    "updated_at": "2021-07-03T19:00:59Z",
    "author_association": "MEMBER",
    "body": "So sorry for that accidental close / open \ud83d\ude33",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/873454941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875536479",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-875536479",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 875536479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTUzNjQ3OQ==",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?u=06eb9ae4f9b3f954056098860decccbf1340e40f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-07T11:46:55Z",
    "updated_at": "2021-07-07T11:46:55Z",
    "author_association": "MEMBER",
    "body": "I have 2 conceptual questions to this PR:\r\n\r\n1. How does it work against the \"bottlenecking problem\" (something we saw in the dandelion/rate-limiting discussion too)?\r\nLet's say your reachable node has 10 outbound conns, and couple inbounds.\r\nAn attacker makes 100 connections to your node, and constantly spends all tokens by transmitting more-than-average addrs. Now, when your peers receive announcements from your node, they might very likely exclude your honest inbounds (you announced to them) from relay, and announce only those Sybil nodes instead.\r\nPreviously, they would relay everything I guess?\r\n\r\n2. Do we want to design these tokens while keeping in mind that we also wanna reuse them for other kinds of p2p dos? Or are we going to have separate tokens for other use-cases in the future? Or do you want to ignore this aspect for now?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875536479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875592657",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-875592657",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 875592657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTU5MjY1Nw==",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?u=3e27bc6589085f3450be1b0e969d04008cc77565&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-07T13:13:55Z",
    "updated_at": "2021-07-07T13:13:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "re ACK dc8a1863f30b5944490cdbaa3271afbf8cd6da9a via `git range-diff dade562...dc8a186`\r\n\r\n- New constant `MAX_ADDR_PROCESSING_TOKEN_BUCKET` \r\n- Comments about exceeding [soft] limit when incrementing for GETADDR\r\n- const `time_diff` and `increment`\r\n- `break` out of addrs loop when tokens run out\r\n- rand ranges {1,255} + refactors in test",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875592657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875868090",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-875868090",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 875868090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTg2ODA5MA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-07T19:21:27Z",
    "updated_at": "2021-07-07T19:21:27Z",
    "author_association": "MEMBER",
    "body": "@vasild\r\n\r\nI think your logging exaggerates the effect, ecause it only prints #addr/time for individual messages, ignoring that the token bucket can accumulate across multiple messages.\r\n\r\nOn my own nodes I do see occasional rate limiting, but they're all (a) very early in a connection's lifetime or (b) from very spammy nodes (with \"bitnodes\" or \"multiven\" in their user agent).\r\n\r\n@naumenkogs\r\n\r\n1. Good point, that's perhaps interesting for a future improvement to consider. I don't think this PR is making anything worse though - it stops spammy addr messages at a much earlier stage, but as is on the network, they are already stopped eventually due to the size limit of the `m_addr_to_send` buffer.\r\n2. I'm not sure yet, perhaps something to discuss when similar rate-limitings are being added for other things.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875868090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875889604",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-875889604",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 875889604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTg4OTYwNA==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-07T19:56:46Z",
    "updated_at": "2021-07-07T19:56:46Z",
    "author_association": "MEMBER",
    "body": "re-ACK 8b60d6f538abbee5ea3ef6b49968f6afd2581877",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875889604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876018530",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-876018530",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 876018530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjAxODUzMA==",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T00:16:08Z",
    "updated_at": "2021-07-08T00:16:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876018530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876379345",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-876379345",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 876379345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjM3OTM0NQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T12:01:05Z",
    "updated_at": "2021-07-08T12:01:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think your logging exaggerates the effect, ecause it only prints #addr/time for individual messages...\r\n\r\nIt prints addr/time but it also prints number of addresses received (in the current addr message) and total tokens accumulated. If the former is larger than the latter, then addresses were dropped.\r\n\r\nHere is some crunching of the data:\r\n\r\nIn the first 1h after startup:\r\n\r\n6891 addresses received in total, in 1123 addr/addrv2 messages\r\n2496 addresses were dropped due to rate limiting\r\n\r\n![rate_limiting_1h](https://user-images.githubusercontent.com/266751/124918046-dd22ed00-dff4-11eb-9d4a-3c941a75c5d3.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876379345/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876457797",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-876457797",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 876457797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjQ1Nzc5Nw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T13:52:16Z",
    "updated_at": "2021-07-08T13:52:16Z",
    "author_association": "MEMBER",
    "body": "@vasild, I've dug into your logs a bit:\r\n\r\npeer | SUM of addresses received | PERCENTAGE of addresses received | SUM of addresses dropped | PERCENTAGE of addresses dropped\r\n-- | -- | -- | -- | --\r\n127.0.0.1 | 86 | 1.86% | 0 | 0.00%\r\n140.143.155.41 | 61 | 1.32% | 2 | 0.10%\r\n168.119.79.89 | 366 | 7.93% | 163 | 7.79%\r\n188.166.69.73 | 25 | 0.54% | 1 | 0.05%\r\n2a01:4f8:140:948b::2 | 173 | 3.75% | 0 | 0.00%\r\n2a03:b0c0:2:d0::4bc:2001 | 17 | 0.37% | 3 | 0.14%\r\n3.236.255.16 | 10 | 0.22% | 0 | 0.00%\r\n34.64.249.186 | 6 | 0.13% | 0 | 0.00%\r\n35.197.140.219 | 132 | 2.86% | 0 | 0.00%\r\n46.101.235.143 | 1 | 0.02% | 0 | 0.00%\r\n60.244.109.19 | 144 | 3.12% | 0 | 0.00%\r\n70.64.27.12 | 1146 | 24.82% | 949 | 45.34%\r\n83.150.56.145 | 479 | 10.37% | 260 | 12.42%\r\n88.99.167.186 | 6 | 0.13% | 0 | 0.00%\r\n94.237.44.67 | 71 | 1.54% | 3 | 0.14%\r\n99.108.237.173 | 181 | 3.92% | 3 | 0.14%\r\nbitcornrd36coazsbzsz4pdebyzvaplmsalq4kpoljmn6cg6x5zq.b32.i2p | 193 | 4.18% | 16 | 0.76%\r\ni3hcdakiz2tyvggkwefvdjoi7444kgvd2mbdfizjvv43q7zukezq.b32.i2p | 84 | 1.82% | 3 | 0.14%\r\nkokkmpquqlkptu5hkmzqlttsmtwxicldr4so7wqsufk6bwf32nma.b32.i2p | 169 | 3.66% | 9 | 0.43%\r\nppsmb5ln3rx6mfdzx2nwsleug5etsavbbzjkdealaybrh2jo2n6a.b32.i2p | 582 | 12.60% | 358 | 17.10%\r\nq5csjdscadbsm27ceyuk7naxveak5yevqlnrowhgcnaxxauwc24zvhqd.onion | 138 | 2.99% | 0 | 0.00%\r\nshh2ewyegnuwnmdse5kl5toybdvzkvk2yj4zcowz6iwhhh3ykdfa.b32.i2p | 548 | 11.87% | 323 | 15.43%\r\nGrand Total | 4618 | 100.00% | 2093 | 100.00%\r\n\r\nSo the majority of your peers are having 0-3 address records dropped, mostly in the first one or two `addr` messages received. There are a handful of peers that are sending a huge number of address records, which are consequently being strongly rate-limited. Those peers are:\r\n\r\n- 168.119.79.89\r\n- 70.64.27.12\r\n- 83.150.56.145\r\n- ppsmb5ln3rx6mfdzx2nwsleug5etsavbbzjkdealaybrh2jo2n6a.b32.i2p\r\n- shh2ewyegnuwnmdse5kl5toybdvzkvk2yj4zcowz6iwhhh3ykdfa.b32.i2p\r\n\r\nIt's probably worth checking those peers' versions/user agent strings. I'd be very surprised to see so many addresses being gossipped by Bitcoin Core nodes. They'd have to be receiving hundreds of addr messages from _their_ peers with <10 address records in each.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876457797/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876468394",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-876468394",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 876468394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjQ2ODM5NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T14:04:45Z",
    "updated_at": "2021-07-08T14:04:45Z",
    "author_association": "MEMBER",
    "body": "utACK 8b60d6f538",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876468394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876541617",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-876541617",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 876541617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjU0MTYxNw==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T15:37:28Z",
    "updated_at": "2021-07-08T15:37:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "> It's probably worth checking those peers' versions/user agent strings...\r\n\r\n```sh\r\n$ bitcoin-cli getpeerinfo |jq 'map(select(.addr |startswith(\"ppsmb5ln3rx6mfdzx2nwsleug5etsavbbzjkdealaybrh2jo2n6a.b32.i2p\") or startswith(\"shh2ewyegnuwnmdse5kl5toybdvzkvk2yj4zcowz6iwhhh3ykdfa.b32.i2p\") or startswith(\"168.119.79.89\") or startswith(\"70.64.27.12\") or startswith(\"83.150.56.145\"))) |map({addr: .addr, subver: .subver})'\r\n[\r\n  {\r\n    \"addr\": \"shh2ewyegnuwnmdse5kl5toybdvzkvk2yj4zcowz6iwhhh3ykdfa.b32.i2p:0\",\r\n    \"subver\": \"/Satoshi:21.99.0/\"\r\n  },\r\n  {\r\n    \"addr\": \"ppsmb5ln3rx6mfdzx2nwsleug5etsavbbzjkdealaybrh2jo2n6a.b32.i2p:0\",\r\n    \"subver\": \"/Satoshi:0.21.1/Knots:20210629/\"\r\n  },\r\n  {\r\n    \"addr\": \"168.119.79.89:8333\",\r\n    \"subver\": \"/Satoshi:0.21.1/\"\r\n  },\r\n  {\r\n    \"addr\": \"70.64.27.12:8333\",\r\n    \"subver\": \"/Satoshi:0.21.1/\"\r\n  },\r\n  {\r\n    \"addr\": \"83.150.56.145:8333\",\r\n    \"subver\": \"/Satoshi:0.21.1/\"\r\n  }\r\n]\r\n```\r\n\r\nInteresting... I am not sure how to interpret all this. My first thought is that the rate limit is too aggressive and is cutting normal traffic. OTOH I feel like I need more in order judge this properly.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876541617/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876602300",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-876602300",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 876602300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjYwMjMwMA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T17:06:07Z",
    "updated_at": "2021-07-08T17:06:07Z",
    "author_association": "MEMBER",
    "body": "> I am not sure how to interpret all this\r\n\r\nMe neither! Here's one example of addresses received from 70.64.27.12:\r\n\r\ntime | addresses received | tokens | rate | peer\r\n-- | -- | -- | -- | --\r\n2021-07-07T09:05:56 | 5 | 9.09188 | 0.079376 | 70.64.27.12\r\n2021-07-07T09:06:18 | 176 | 6.29241 | 7.99806 | 70.64.27.12\r\n\r\nThey send us an `addr` message with 5 addresses, followed 22 seconds later by an `addr` messages with 176 addresses.\r\n\r\nThere are only three ways that Bitcoin Core adds addresses to `m_addrs_to_send` for a peer:\r\n\r\n1. self announcement (on connection to outbound nodes, and once every 24 hours on average)\r\n2. a response to a `getaddr` request\r\n3. relaying to 2 random peers when receiving a gossipped addr (as long as the `addr` message it received had fewer than 10 addresses).\r\n\r\n(1) and (2) can't be responsible here, so if 70.64.27.12 really is a Bitcoin Core v0.21.1 node, then it must be receiving a huge number of `addr` messages (containing fewer than 10 addresses each) from its peers, and then relaying them on.\r\n\r\nThe next step might be to enable message capture (https://github.com/bitcoin/bitcoin/blob/master/contrib/message-capture/message-capture-docs.md) to see what the contents of those `addr` messages are.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876602300/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878411443",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-878411443",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 878411443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODQxMTQ0Mw==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T16:15:40Z",
    "updated_at": "2021-07-12T16:15:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I updated the printout to show also the addresses being dropped and to calculate the average addr/sec for the sender from the time they connected to the time a particular `addr` message was received. Results from running it for 1h are below.\r\n\r\nTotal addresses received: 9917\r\nDropped addresses: 5073\r\n\r\nTotal number of peers who sent us addresses: 26\r\nDropped at least one address from this number of peers: 22\r\n\r\nThe addresses being dropped look legit. I tried connecting to a bunch of them and they are responsive and report some version of Bitcoin Core. Could not connect to some others (time out or connection refused), but it is expected that not all nodes are up all the time. So, the addresses being dropped by the rate limiter do not look like a trash.\r\n\r\nHere is a histogram of how often various addr/sec are observed (the red line is 0.1, everything right from it results in some dropping):\r\n\r\n![histo](https://user-images.githubusercontent.com/266751/125320671-3b750600-e33c-11eb-8db6-1c1a4dbff613.png)\r\n\r\nTo me it looks like that the rate limiter is too aggressive and is cutting legit traffic. What about increasing `MAX_ADDR_RATE_PER_SECOND` from `0.1` to something like `0.6`?\r\n\r\n[Log output](https://github.com/bitcoin/bitcoin/files/6802856/rate_limit.txt)\r\n\r\n<details>\r\n<summary>[patch] log print</summary>\r\n\r\n```diff\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -242,12 +242,13 @@ struct Peer {\r\n     bool m_getaddr_recvd{false};\r\n     /** Number of addr messages that can be processed from this peer. Start at 1 to\r\n      *  permit self-announcement. */\r\n     double m_addr_token_bucket{1.0};\r\n     /** When m_addr_token_bucket was last updated */\r\n     std::chrono::microseconds m_addr_token_timestamp{GetTime<std::chrono::microseconds>()};\r\n+    size_t m_total_addr_received{0};\r\n\r\n     /** Set of txids to reconsider once their parent transactions have been accepted **/\r\n     std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);\r\n\r\n     /** Protects m_getdata_requests **/\r\n     Mutex m_getdata_requests_mutex;\r\n@@ -2797,12 +2798,36 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\r\n         const auto current_time = GetTime<std::chrono::microseconds>();\r\n         if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\r\n             // Don't increment bucket if it's already full\r\n             const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\r\n             const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\r\n             peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\r\n+#if 1\r\n+            peer->m_total_addr_received += vAddr.size();\r\n+            const auto connection_duration =\r\n+                std::max(count_microseconds(current_time) / 1000000 - pfrom.nTimeConnected, 1L);\r\n+            std::string extra_msg;\r\n+            // If will drop, log how many and the addresses themselves.\r\n+            if (vAddr.size() > peer->m_addr_token_bucket) {\r\n+                const auto num_drop = static_cast<size_t>(std::ceil(vAddr.size() - peer->m_addr_token_bucket));\r\n+                extra_msg = strprintf(\",num drop:%u,dropped:\", num_drop);\r\n+                for (size_t i = vAddr.size() - num_drop; i < vAddr.size(); ++i) {\r\n+                    extra_msg += vAddr[i].ToStringIPPort();\r\n+                    if (i < vAddr.size() - 1) {\r\n+                        extra_msg += \";\";\r\n+                    }\r\n+                }\r\n+            }\r\n+            LogPrintf(\"RATE LIMIT:received addresses:%u,available tokens:%.4lf,avg \"\r\n+                      \"addr/sec:%.4lf,peer:%s%s\\n\",\r\n+                      vAddr.size(),\r\n+                      peer->m_addr_token_bucket,\r\n+                      static_cast<double>(peer->m_total_addr_received) / connection_duration,\r\n+                      pfrom.addr.ToStringIP(),\r\n+                      extra_msg);\r\n+#endif\r\n         }\r\n         peer->m_addr_token_timestamp = current_time;\r\n\r\n         Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\r\n         const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\r\n         for (CAddress& addr : vAddr)\r\n```\r\n</details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878411443/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878417152",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-878417152",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 878417152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODQxNzE1Mg==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T16:23:28Z",
    "updated_at": "2021-07-12T16:23:28Z",
    "author_association": "MEMBER",
    "body": "@vasild Interesting. Are these by any chance onion/i2p peers? One theory could be that those peers generally are connected only/mostly to a small subset of nodes only, and thus the \"pick one or two peers to relay to\" policy results in a \"funnel\" effect for them?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878417152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878426183",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-878426183",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 878426183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODQyNjE4Mw==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T16:37:27Z",
    "updated_at": "2021-07-12T16:37:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here are the 26 peers my node was connected to. The ones that triggered the rate limiter are marked with `*` (they are 22):\r\n\r\n```\r\n* 127.0.0.1\r\n* 140.143.155.41\r\n* 148.251.40.218\r\n* 158.69.72.5\r\n* 188.166.69.73\r\n* 2001:19f0:6000:9008:5400:ff:fe1b:164b\r\n* 22plzy5mqwz64iukd2hbsa5oo454iwkjko26tifi54ir4mbnpfea.b32.i2p\r\n  2600:1f18:41a0:d000:cba6:77c8:4429:7ea\r\n* 2600:1f1c:2d3:2400:4da7:c467:efd:8d03\r\n* 2600:1f1c:2d3:2403:5bac:3fc6:6513:7a63\r\n* 2604:a880:400:d0::1bdb:4001\r\n* 2a01:4f8:160:832e::2\r\n* 2a03:b0c0:2:d0::4bc:2001\r\n* 2a04:3544:1000:1510:b08f:6fff:fe1b:3007\r\n  2a0f:2a80::11\r\n  3.236.255.16\r\n* 34.87.112.13\r\n* 35.228.225.73\r\n* 35.247.228.106\r\n* 39.101.136.226\r\n* 94.237.44.67\r\n* 95.217.41.235\r\n* bitcornrd36coazsbzsz4pdebyzvaplmsalq4kpoljmn6cg6x5zq.b32.i2p\r\n* ppsmb5ln3rx6mfdzx2nwsleug5etsavbbzjkdealaybrh2jo2n6a.b32.i2p\r\n* shh2ewyegnuwnmdse5kl5toybdvzkvk2yj4zcowz6iwhhh3ykdfa.b32.i2p\r\n  vnqix5uljfwssvzbexzjeuoehjujtw4iqftiu34nbvig64kkmnla.b32.i2p\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878426183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878639355",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-878639355",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 878639355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODYzOTM1NQ==",
    "user": {
      "login": "GeneFerneau",
      "id": 80422284,
      "node_id": "MDQ6VXNlcjgwNDIyMjg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/80422284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GeneFerneau",
      "html_url": "https://github.com/GeneFerneau",
      "followers_url": "https://api.github.com/users/GeneFerneau/followers",
      "following_url": "https://api.github.com/users/GeneFerneau/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeneFerneau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GeneFerneau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeneFerneau/subscriptions",
      "organizations_url": "https://api.github.com/users/GeneFerneau/orgs",
      "repos_url": "https://api.github.com/users/GeneFerneau/repos",
      "events_url": "https://api.github.com/users/GeneFerneau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GeneFerneau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T22:27:26Z",
    "updated_at": "2021-07-12T22:27:26Z",
    "author_association": "NONE",
    "body": "Concept + review ACK [8b60d6f](https://github.com/bitcoin/bitcoin/pull/22387/commits/8b60d6f538abbee5ea3ef6b49968f6afd2581877)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878639355/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878665937",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-878665937",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 878665937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODY2NTkzNw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T23:31:33Z",
    "updated_at": "2021-07-12T23:31:33Z",
    "author_association": "MEMBER",
    "body": "@vasild I've added a commit that adds some statistics to `getpeerinfo`. So far it does indeed seem there are addr messages being sent from seemingly-honest peers that are being rate limited by it. I'm going to keep running this on a few nodes for a while to gather more statistics, but I'm beginning to agree that the 0.1 addr/s limit may be too strict.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878665937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878689516",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-878689516",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 878689516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODY4OTUxNg==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-13T00:38:29Z",
    "updated_at": "2021-07-13T00:38:29Z",
    "author_association": "MEMBER",
    "body": "See the bitcoin-dev list mail, where there is a link to https://bitcointalk.org/index.php?topic=5348856.0.\n\nCould that be what we're seeing?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878689516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878694069",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-878694069",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 878694069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODY5NDA2OQ==",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-13T00:53:05Z",
    "updated_at": "2021-07-13T00:54:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think so too, I ran this patch last week and again today, for a few hours each. While I saw very few hits of the rate limit last week, I observed a similar pattern to @vasild's data today: Some peers send spikes of large addr messages of size 50-100, alternating with several small addrs <10. So it seems like they may have some other peer that is spamming them - not continuously but every ~3 minutes or so.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878694069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/879256798",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-879256798",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 879256798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3OTI1Njc5OA==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-13T17:08:52Z",
    "updated_at": "2021-07-13T17:08:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I observed a similar pattern to @vasild's data today: Some peers send spikes of large addr messages of size 50-100, alternating with several small addrs <10\r\n\r\nI think it is more complicated :exploding_head:. From the log linked from https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-878411443:\r\n\r\nBelow, the numbers mean that an `addr` message with that many addresses was received. Messages from which addresses were dropped are marked with `*`. For example, `140.143.155.41   5 7* 15` means that this peer sent us 3 `addr` messages each containing 5, 7 and 15 addresses and something was dropped from the message that contained 7 addresses.\r\n\r\n<details>\r\n<summary>received per peer, sorted by size</summary>\r\n\r\n```\r\n127.0.0.1                                                    1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 6 6 6 7 7 7 8* 9 9 10 12 12* 14 25\r\n140.143.155.41                                               8 9 9 10 10 10 10 10*\r\n148.251.40.218                                               1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1* 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2* 3 3 3 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4* 4* 4* 4* 5 6 6 6* 7 7 7* 8 8 8 8* 9 9* 10 10* 12 18* 24* 25* 27* 31* 45* 52* 59* 67* 78* 99*\r\n158.69.72.5                                                  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2* 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4* 5 5 5 5 5 5* 6 6 6 6 6 6 6* 6* 7 7 7 7 7 8 9 9 10* 12 83* 84* 88* 91* 105*\r\n188.166.69.73                                                8* 9\r\n2001:19f0:6000:9008:5400:ff:fe1b:164b                        1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2* 2* 2* 3 3 3 3 3 3 3 3* 3* 4 4 4* 5 5 5 5 5 5* 5* 6 6* 6* 6* 7 7 8* 8* 9* 10 11* 13 16 19 26*\r\n22plzy5mqwz64iukd2hbsa5oo454iwkjko26tifi54ir4mbnpfea.b32.i2p 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2* 3 3 3 3 3 3 3 3 3 3 3 4 4 5 5 5 5 6 6 7 7 7 8 8 9 9 10 11 13 14 18\r\n2600:1f18:41a0:d000:cba6:77c8:4429:7ea                       1 2\r\n2600:1f1c:2d3:2400:4da7:c467:efd:8d03                        1 1 2 2 3 5 5*\r\n2600:1f1c:2d3:2403:5bac:3fc6:6513:7a63                       1 1 1 2 3 3 3* 4 4 4 5* 6 6 11\r\n2604:a880:400:d0::1bdb:4001                                  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1* 1* 2 2 2 2 2 2 2 2 2 2 2 2 2* 2* 3 3 3 3 3 3 3 3* 4 4 4 4 4 4 4 4* 4* 4* 4* 5 5 5 5 5 6 6 6 7* 7* 7* 8 8 8 9 9 9* 10* 15 15* 26* 29* 65* 75* 82* 90* 94* 94* 96* 102* 107*\r\n2a01:4f8:160:832e::2                                         1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2* 2* 3 3 3 3 3 4 4 4 4 4 4 4 4 4* 5 5 5 5* 5* 6 6* 8* 9 11 27* 33* 34* 37* 39* 41* 42* 46* 46* 61* 71* 79* 81* 83* 84* 87* 92* 94* 94* 100* 113*\r\n2a03:b0c0:2:d0::4bc:2001                                     10*\r\n2a04:3544:1000:1510:b08f:6fff:fe1b:3007                      7 7 8 9 9 10* 10*\r\n2a0f:2a80::11                                                2 2 2 3 3 3 3 3 3 3\r\n3.236.255.16                                                 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 3 3 3 4 4 5 5\r\n34.87.112.13                                                 1 1 1 1 1 1 1 1 1 1 1 1* 2 2 2 2 2 3 3 3 3 4 5 5 6 6 7 9 9 9* 13*\r\n35.228.225.73                                                1 1 1 1 1 1 2 3 3 3 3 4 4 4 4 5 7 8 12 18*\r\n35.247.228.106                                               1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3* 4 4 4 4 4 4* 4* 4* 5 5 5 6 6 6 6 6 6 7 8 8 8* 9 9 10 10 10 10* 11 12 12* 13*\r\n39.101.136.226                                               1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1* 2 2 2 2 2 2 2 2 2* 3 3 3 3 3 3 3 3* 3* 3* 3* 3* 3* 4 4 4 4 4* 4* 4* 4* 4* 4* 5 5* 5* 5* 5* 5* 6* 6* 6* 7 7 7* 8 8 8* 8* 8* 9* 9* 11 11* 11* 11* 11* 12* 15* 15* 16* 17* 17* 31* 37* 38* 39* 41* 44* 46* 47* 50* 55* 55* 56* 59* 59* 62*\r\n94.237.44.67                                                 6 7 7 9 9 9 9 10*\r\n95.217.41.235                                                1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 4 5 10 40* 51* 63* 82* 82* 84* 87* 91* 92* 93*\r\nbitcornrd36coazsbzsz4pdebyzvaplmsalq4kpoljmn6cg6x5zq.b32.i2p 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2* 3 3 3 3 3 3 3* 4 4 4 4 4 4 4* 5 5 5 6 6 6 6 6 6 7 7 8 8 8 8 8 8* 9 9* 10* 11 12 12 12 14 16* 18\r\nppsmb5ln3rx6mfdzx2nwsleug5etsavbbzjkdealaybrh2jo2n6a.b32.i2p 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 5 6 6 7 7 8 11 11 11 12 70* 83* 86*\r\nshh2ewyegnuwnmdse5kl5toybdvzkvk2yj4zcowz6iwhhh3ykdfa.b32.i2p 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1* 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3* 3* 4 4 4 4 4 4 4 4* 4* 4* 5 5 5 5 5 5 6 6* 6* 6* 6* 7 7* 7* 8 8 9 9* 12* 14* 15 28* 32* 40* 50* 57* 81* 86* 88* 90* 94*\r\nvnqix5uljfwssvzbexzjeuoehjujtw4iqftiu34nbvig64kkmnla.b32.i2p 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 5 5 5 5 5 6 6 6 6 7 7 9 9 10 11 14 16 19 19 23\r\n```\r\n</details>\r\n\r\nThe numbers are sorted so it is easy to spot the peers who send us `addr` messages with >10 addresses. Lots of dropping also happens from smaller (<10) `addr` messages. Why nobody sent us a message with 1000 addresses?\r\n\r\n<details>\r\n<summary>Same data, but in chronological order</summary>\r\n\r\n```\r\n127.0.0.1                                                    1 3 12 8 2 9 1 5 3 1 4 2 5 5 3 6 1 2 5 5 5 10 2 2 9 3 6 2 1 3 25 1 6 5 2 2 2 2 7 2 1 2 1 4 1 7 4 2 1 3 7 4 12 2 5 5 4 2 4 5 1 14 2 1 2\r\n140.143.155.41                                               10 9 10 10 9 10 8 10\r\n148.251.40.218                                               1 4 5 59 25 1 2 1 10 9 99 7 1 3 31 27 1 7 7 2 1 3 4 2 78 2 3 4 4 3 3 3 24 45 1 1 2 2 2 3 1 6 1 8 1 3 1 1 1 2 1 8 1 9 4 3 2 2 52 1 2 18 4 1 2 4 2 6 8 10 67 4 1 12 2 4 1 4 3 3 3 3 1 1 1 1 1 8 4 2 1 3 2 2 1 6 4\r\n158.69.72.5                                                  1 1 1 1 2 2 1 12 4 4 83 2 1 91 2 5 2 5 9 3 2 1 1 3 2 2 9 3 6 2 2 1 2 1 3 1 5 5 7 6 4 84 3 3 2 2 6 105 3 8 1 2 2 1 1 7 6 1 3 2 4 7 3 6 1 2 2 1 7 5 4 1 2 6 2 3 2 88 6 1 1 4 1 2 2 2 6 1 7 1 4 5 10 2\r\n188.166.69.73                                                8 9\r\n2001:19f0:6000:9008:5400:ff:fe1b:164b                        1 5 2 5 2 5 1 5 4 3 7 2 16 2 19 1 3 3 2 1 4 2 2 1 2 6 5 1 1 6 1 1 2 13 6 3 2 11 3 2 3 6 5 5 3 7 26 3 4 2 1 10 8 3 2 2 1 8 9\r\n22plzy5mqwz64iukd2hbsa5oo454iwkjko26tifi54ir4mbnpfea.b32.i2p 2 1 8 4 9 11 2 3 2 3 1 5 5 3 3 1 2 2 1 1 1 13 10 1 2 8 1 3 2 1 3 1 3 7 1 2 6 4 1 14 2 2 1 3 3 1 2 3 1 2 2 6 5 3 5 7 9 2 7 2 1 1 18\r\n2600:1f18:41a0:d000:cba6:77c8:4429:7ea                       1 2\r\n2600:1f1c:2d3:2400:4da7:c467:efd:8d03                        1 5 2 3 1 2 5\r\n2600:1f1c:2d3:2403:5bac:3fc6:6513:7a63                       3 6 6 4 2 1 4 11 1 3 4 3 5 1\r\n2604:a880:400:d0::1bdb:4001                                  26 7 4 3 2 1 1 1 7 1 1 2 5 4 1 6 2 1 1 5 94 1 1 2 10 2 1 65 29 1 4 2 2 2 4 5 1 2 1 107 3 1 1 94 3 8 1 9 4 6 1 1 1 15 82 3 4 9 6 4 1 2 9 1 90 1 3 4 1 2 1 1 7 96 8 15 4 1 2 1 3 3 1 102 1 2 1 4 1 1 5 4 5 8 3 75 1 2\r\n2a01:4f8:160:832e::2                                         37 1 4 46 34 2 4 11 61 27 4 8 1 2 94 1 4 79 92 5 2 1 113 2 1 1 3 2 1 5 3 1 87 2 1 1 2 81 4 1 4 2 2 2 3 1 1 1 84 6 5 3 94 1 5 2 39 46 1 1 2 100 4 1 1 3 42 1 4 1 83 1 4 2 5 71 6 2 9 1 33 41 1 1 2\r\n2a03:b0c0:2:d0::4bc:2001                                     10\r\n2a04:3544:1000:1510:b08f:6fff:fe1b:3007                      10 9 10 8 7 9 7\r\n2a0f:2a80::11                                                3 3 3 3 3 2 3 2 3 2\r\n3.236.255.16                                                 1 1 2 1 1 1 5 1 1 1 2 1 1 1 1 1 2 1 5 1 3 1 3 2 1 1 3 1 1 1 4 1 1 1 2 1 4 2 1 1 2 2 1 1 1 1\r\n34.87.112.13                                                 3 2 2 9 1 1 1 1 6 6 2 9 3 2 7 1 9 1 1 3 13 4 1 3 5 2 1 1 1 1 5\r\n35.228.225.73                                                4 1 12 18 1 8 5 3 3 4 1 2 1 3 4 1 7 1 3 4\r\n35.247.228.106                                               3 2 3 13 4 10 1 1 1 9 2 2 4 4 2 3 3 12 8 4 10 3 3 3 3 6 5 2 6 2 1 1 3 2 7 2 8 1 1 2 2 2 9 4 1 6 4 4 2 5 6 2 12 10 2 2 1 3 2 1 10 1 6 2 3 2 2 3 1 3 3 5 1 3 11 8 2 4 3 2 6 2\r\n39.101.136.226                                               11 56 1 8 2 62 1 6 4 5 1 5 1 11 15 5 4 3 1 7 3 59 2 1 6 3 4 1 46 3 8 1 2 47 3 3 11 1 2 3 55 15 4 8 38 17 2 1 2 2 1 7 55 11 5 8 1 1 3 11 3 37 4 1 1 5 9 17 31 3 4 8 3 1 2 1 2 39 3 44 1 9 3 5 1 7 6 41 12 4 4 4 59 16 50 1 1 4\r\n94.237.44.67                                                 7 9 9 10 9 6 7 9\r\n95.217.41.235                                                91 2 2 1 1 1 92 1 2 1 1 1 1 1 1 2 2 2 2 82 2 2 2 3 1 1 1 2 82 3 1 2 93 1 2 84 3 3 1 1 10 2 1 1 2 87 3 4 1 5 1 1 2 2 40 51 1 1 3 1 63 1 1 1 1 1 2 1 2 1 1 2 2\r\nbitcornrd36coazsbzsz4pdebyzvaplmsalq4kpoljmn6cg6x5zq.b32.i2p 2 1 3 2 6 4 4 4 4 6 7 1 1 3 8 7 16 9 1 3 10 1 3 8 2 4 6 6 6 2 4 4 12 8 12 5 8 8 2 1 1 8 14 5 1 3 9 6 2 1 1 2 2 2 2 1 11 2 5 12 18 2 1 1 1 1 3 3\r\nppsmb5ln3rx6mfdzx2nwsleug5etsavbbzjkdealaybrh2jo2n6a.b32.i2p 2 12 1 2 2 3 1 11 2 1 3 1 86 4 3 4 3 83 7 3 1 3 1 8 70 2 3 2 2 3 1 2 2 1 2 1 11 3 6 3 1 1 2 2 3 1 7 1 4 1 2 6 1 4 2 5 4 3 1 11 3\r\nshh2ewyegnuwnmdse5kl5toybdvzkvk2yj4zcowz6iwhhh3ykdfa.b32.i2p 3 3 9 4 1 88 8 3 6 1 28 1 4 1 5 1 1 2 57 12 1 3 6 86 2 6 9 4 7 3 3 3 2 15 3 40 5 2 3 4 1 5 1 8 1 4 1 94 1 14 4 3 1 4 1 4 2 5 32 50 3 1 2 1 2 4 1 81 2 6 6 1 7 1 1 2 3 2 5 5 4 2 7 2 90 1\r\nvnqix5uljfwssvzbexzjeuoehjujtw4iqftiu34nbvig64kkmnla.b32.i2p 1 1 1 1 2 14 1 1 1 9 2 1 1 2 5 19 1 3 1 1 2 1 1 1 2 2 3 3 5 3 4 1 5 1 5 1 1 19 7 2 1 1 5 1 23 1 1 1 2 3 6 2 3 3 3 10 6 16 3 4 6 3 7 1 1 1 2 4 4 1 1 2 9 11 2 3 6 3\r\n```\r\n</details>\r\n\r\nNext thing would be to log the accepted and dropped addresses and sample the % of the ones that are responsive. If the good/responsive VS down/unresponsive/bogus? rate is the same in the accepted and dropped then the dropped traffic was legit and should not have been dropped.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/879256798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/879504816",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-879504816",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 879504816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3OTUwNDgxNg==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-14T01:08:02Z",
    "updated_at": "2021-07-14T01:08:02Z",
    "author_association": "MEMBER",
    "body": "@vasild I assume that whoever is creating these spam addr messages isn't sending them directly to you, and is probably sending them in batches of 10 (because when you send more, they don't trigger relay, and thus we wouldn't be seeing them). So what you're seeing is the backscatter result of what ends up randomly relayed 1 or more steps on, split by the 1-to-2 peers selection, and merged by the m_addr_to_send vectors.\r\n\r\nWhat I'm observing is that there are sometimes hours of barely any rate-limiting going on, and then suddenly a ton, from multiple peers at once. This makes me think we should be primarily looking at those low-activity periods, as they are almost certainly more representative of honest traffic. In the presence of a spam attack, rate-limiting will drop things - including legitimate traffic - but I don't think that's fundamentally different from what would otherwise be happening; the loss would just happen in a different place (rate-limiting, vs overwriting in `m_addr_to_send`). So I think I prefer keeping it at 0.1/s for now.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/879504816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880411631",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-880411631",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 880411631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDQxMTYzMQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-15T05:40:46Z",
    "updated_at": "2021-07-15T05:40:46Z",
    "author_association": "MEMBER",
    "body": "All comments addressed, I think.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880411631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880538711",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-880538711",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 880538711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDUzODcxMQ==",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?u=06eb9ae4f9b3f954056098860decccbf1340e40f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-15T09:20:44Z",
    "updated_at": "2021-07-15T09:20:44Z",
    "author_association": "MEMBER",
    "body": "ACK 56c8ca2844fecb980cfdd9a21c881ed0616890d8",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880538711/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880725257",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-880725257",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 880725257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDcyNTI1Nw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-15T14:08:06Z",
    "updated_at": "2021-07-15T14:08:06Z",
    "author_association": "MEMBER",
    "body": "ACK 56c8ca2844fecb980cfdd9a21c881ed0616890d8\r\n\r\nIf you touch this again, I suggest squashing _Add logging for rate limiting_ and _Add addr rate limiting statistics_ (the second commit completely reverts the changes of the first).\r\n\r\nI've made some improvements to the test here: https://github.com/jnewbery/bitcoin/tree/2021-07-addr-relay-test-changes that factors out a lot of duplicate code. Feel free to take any of those changes in this PR, or I can open a follow-up after this is merged.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880725257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880799030",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-880799030",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 880799030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDc5OTAzMA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-15T15:37:09Z",
    "updated_at": "2021-07-15T15:49:14Z",
    "author_association": "MEMBER",
    "body": "Not sure if it is related to the changes here, but I got an ~~intermittent~~ reprodicible fail in `p2p_addrv2_relay.py` locally when running with this PR on top of master (56c8ca2844fecb980cfdd9a21c881ed0616890d8).\r\n```\r\n83/213 - p2p_addrv2_relay.py failed, Duration: 8 s\r\n                                                                                       \r\nstdout:                                                                                \r\n2021-07-15T15:33:49.927000Z TestFramework (INFO): Initializing test directory /tmp/test_runner_\u20bf_\ud83c\udfc3_20210715_172622/p2p_addrv2_relay_129\r\n2021-07-15T15:33:51.721000Z TestFramework (INFO): Create connection that sends addrv2 messages\r\n2021-07-15T15:33:51.825000Z TestFramework (INFO): Send too-large addrv2 message\r\n2021-07-15T15:33:51.890000Z TestFramework (INFO): Check that addrv2 message content is relayed and added to addrman\r\n2021-07-15T15:33:52.099000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):                                                     \r\n  File \"\u2026/bitcoin/test/functional/test_framework/test_framework.py\", line 128, in main\r\n    self.run_test()\r\n  File \"\u2026/bitcoin/test/functional/p2p_addrv2_relay.py\", line 82, in run_test\r\n    assert addr_receiver.addrv2_received_and_checked\r\nAssertionError\r\n2021-07-15T15:33:52.152000Z TestFramework (INFO): Stopping nodes\r\n```\r\nEdit: ran the tests again and it happened again, seems reproducible.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880799030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880860700",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-880860700",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 880860700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDg2MDcwMA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-15T16:54:29Z",
    "updated_at": "2021-07-15T16:54:29Z",
    "author_association": "MEMBER",
    "body": "> I got an reprodicible fail in p2p_addrv2_relay.py locally when running with this PR on top of master (56c8ca2).\r\n\r\nThis is because the bitcoin core node is now shuffling the addresses before processing/relaying them, and this test depends on the exact same `addrv2` message being received by the node and relayed to another peer.\r\n\r\nThis would fix it. Sorry for the ugly python:\r\n\r\n```diff\r\n@@ -42,7 +42,10 @@ class AddrReceiver(P2PInterface):\r\n         super().__init__(support_addrv2 = True)\r\n \r\n     def on_addrv2(self, message):\r\n-        if ADDRS == message.addrs:\r\n+        sorted_addrs_received = sorted(zip([address.ip for address in message.addrs], [address.port for address in message.addrs]))\r\n+        sorted_addrs_expected = sorted(zip([address.ip for address in ADDRS], [address.port for address in ADDRS]))\r\n+        if sorted_addrs_received == sorted_addrs_expected:\r\n             self.addrv2_received_and_checked = True\r\n \r\n     def wait_for_addrv2(self):\r\n```\r\n\r\n(there's no ordering function on `CAddress` objects)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/880860700/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/881074512",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-881074512",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 881074512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MTA3NDUxMg==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-15T23:34:24Z",
    "updated_at": "2021-07-15T23:34:24Z",
    "author_association": "MEMBER",
    "body": "@laanwj Fixed using a variant of @jnewbery's suggestion. Also squashed in his commits for cleaning up the new tests.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/881074512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/881381758",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-881381758",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 881381758,
    "node_id": "IC_kwDOABII5840iNF-",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-16T11:34:18Z",
    "updated_at": "2021-08-14T17:37:19Z",
    "author_association": "MEMBER",
    "body": "Here's a branch of this pull that adds the new stats to `-netinfo`, if useful to anyone for testing: https://github.com/jonatack/bitcoin/commits/netinfo-addr-statistics\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/881381758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/882443434",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-882443434",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 882443434,
    "node_id": "IC_kwDOABII5840mQSq",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-19T10:41:50Z",
    "updated_at": "2021-07-19T10:41:50Z",
    "author_association": "MEMBER",
    "body": "ACK a4bcd687c934d47aa3922334e97e579caf5f8124",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/882443434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/888695939",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#issuecomment-888695939",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22387",
    "id": 888695939,
    "node_id": "IC_kwDOABII5840-GyD",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-28T23:57:36Z",
    "updated_at": "2021-07-28T23:57:36Z",
    "author_association": "MEMBER",
    "body": "Backported in #22569.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/888695939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662921032",
    "pull_request_review_id": 698062663,
    "id": 662921032,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjkyMTAzMg==",
    "diff_hunk": "@@ -232,6 +235,11 @@ struct Peer {\n     std::atomic_bool m_wants_addrv2{false};\n     /** Whether this peer has already sent us a getaddr message. */\n     bool m_getaddr_recvd{false};\n+    /** Number of addr messages that can be processed from this peer. Start at 1 to\n+     *  permit self-announcement. */\n+    double m_addr_token_bucket{1.0};\n+    /** When m_addr_token_bucket was last updated */\n+    std::chrono::microseconds m_addr_token_timestamp{0};",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "484d8fdd94265b1dc1c850fb2cc3f743b0fffb1c",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No need for default initialization value here if this is set in the initialization list in the only ctor.",
    "created_at": "2021-07-02T10:45:40Z",
    "updated_at": "2021-07-02T12:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r662921032",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662921032"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r662921032"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662921032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 242,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662943964",
    "pull_request_review_id": 698062663,
    "id": 662943964,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mjk0Mzk2NA==",
    "diff_hunk": "@@ -2776,11 +2787,24 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+        double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\n+        peer->m_addr_token_timestamp = current_time;\n+        peer->m_addr_token_bucket += std::max(0.0, std::min<double>(MAX_ADDR_TO_SEND - peer->m_addr_token_bucket, increment));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 49,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "484d8fdd94265b1dc1c850fb2cc3f743b0fffb1c",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I find this line quite difficult to parse. I think the intention is that we don't cap m_addr_token_bucket to MAX_ADDR_TO_SEND (in the case where it was incremented because we sent a getaddr). Is this easier to read:\r\n\r\n```diff\r\n         // Update/increment addr rate limiting bucket.\r\n         const auto current_time = GetTime<std::chrono::microseconds>();\r\n-        auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\r\n-        double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\r\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\r\n+            // Don't increment bucket if it's already full\r\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\r\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\r\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_TO_SEND);\r\n+        }\r\n         peer->m_addr_token_timestamp = current_time;\r\n-        peer->m_addr_token_bucket += std::max(0.0, std::min<double>(MAX_ADDR_TO_SEND - peer->m_addr_token_bucket, increment));\r\n \r\n         for (CAddress& addr : vAddr)\r\n         {\r\n```",
    "created_at": "2021-07-02T11:28:36Z",
    "updated_at": "2021-07-02T12:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r662943964",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662943964"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r662943964"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662943964/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2796,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662944636",
    "pull_request_review_id": 698062663,
    "id": 662944636,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mjk0NDYzNg==",
    "diff_hunk": "@@ -207,6 +224,71 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+            peer.sync_with_ping()",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 70,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "484d8fdd94265b1dc1c850fb2cc3f743b0fffb1c",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think this is necessary. The `add_[outbound_]p2p_connection()` methods already do a sync_with_ping.",
    "created_at": "2021-07-02T11:29:49Z",
    "updated_at": "2021-07-02T12:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r662944636",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662944636"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r662944636"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662944636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 240,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662945737",
    "pull_request_review_id": 698062663,
    "id": 662945737,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mjk0NTczNw==",
    "diff_hunk": "@@ -207,6 +224,71 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+            peer.sync_with_ping()\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert addr_count_0 == 0",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 74,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "484d8fdd94265b1dc1c850fb2cc3f743b0fffb1c",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Consider using the `assert_equal()`/`assert_greater_than()`/`assert_greater_than_or_equal()` helper functions (they give more helpful output if the test fails).",
    "created_at": "2021-07-02T11:31:42Z",
    "updated_at": "2021-07-02T12:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r662945737",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662945737"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r662945737"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662945737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 244,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662949531",
    "pull_request_review_id": 698062663,
    "id": 662949531,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mjk0OTUzMQ==",
    "diff_hunk": "@@ -75,6 +79,19 @@ def setup_addr_msg(self, num):\n         msg.addrs = addrs\n         return msg\n \n+    def setup_rand_addr_msg(self, num):",
    "path": "test/functional/p2p_addr_relay.py",
    "position": 65,
    "original_position": 28,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "484d8fdd94265b1dc1c850fb2cc3f743b0fffb1c",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(not necessarily for this PR) should the other tests be updated to use random IP addresses? I guess you're doing this and not reusing setup_addr_msg() in case the addresses returned may result in addrman bucket collisions?",
    "created_at": "2021-07-02T11:39:22Z",
    "updated_at": "2021-07-02T12:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r662949531",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662949531"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r662949531"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662949531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 97,
    "original_line": 97,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662949805",
    "pull_request_review_id": 698062663,
    "id": 662949805,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mjk0OTgwNQ==",
    "diff_hunk": "@@ -207,6 +224,71 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+            peer.sync_with_ping()\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert addr_count_0 == 0\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_1 = len(self.nodes[0].getnodeaddresses(0))\n+            assert addr_count_1 <= tokens\n+            assert addr_count_1 <= addr_count_0 + 600\n+            assert (addr_count_1 > addr_count_0) == (tokens > 0)\n+\n+            # Send 600 more addresses. For the outbound-full-relay peer (which sends a GETADDR, and thus will\n+            # process up to 1001 incoming addresses), this means more entries will appear.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_2 = len(self.nodes[0].getnodeaddresses(0))\n+            assert addr_count_2 <= tokens\n+            assert addr_count_2 <= addr_count_1 + 600\n+            assert (addr_count_2 > addr_count_1) == (tokens > 600)\n+\n+            # Send 10 more. As we reached the processing limit for all nodes, this should have no effect.\n+            peer.send_and_ping(self.setup_rand_addr_msg(10))\n+            addr_count_3 = len(self.nodes[0].getnodeaddresses(0))\n+            assert addr_count_3 <= tokens\n+            assert addr_count_3 <= addr_count_2 + 10\n+            assert (addr_count_3 > addr_count_2) == False",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 96,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "484d8fdd94265b1dc1c850fb2cc3f743b0fffb1c",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n            assert (addr_count_3 <= addr_count_2)\r\n```\r\n\r\n(or better yet, use `assert_greater_than_or_equal()`)",
    "created_at": "2021-07-02T11:39:58Z",
    "updated_at": "2021-07-02T12:50:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r662949805",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662949805"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r662949805"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662949805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 266,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662999155",
    "pull_request_review_id": 698167580,
    "id": 662999155,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Mjk5OTE1NQ==",
    "diff_hunk": "@@ -232,6 +235,11 @@ struct Peer {\n     std::atomic_bool m_wants_addrv2{false};\n     /** Whether this peer has already sent us a getaddr message. */\n     bool m_getaddr_recvd{false};\n+    /** Number of addr messages that can be processed from this peer. Start at 1 to\n+     *  permit self-announcement. */\n+    double m_addr_token_bucket{1.0};\n+    /** When m_addr_token_bucket was last updated */\n+    std::chrono::microseconds m_addr_token_timestamp{0};",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "484d8fdd94265b1dc1c850fb2cc3f743b0fffb1c",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    std::chrono::microseconds m_addr_token_timestamp{GetTime<std::chrono::microseconds>()};\r\n```\r\n\r\nDoes this compile? If yes, the constructor can be left untouched.",
    "created_at": "2021-07-02T13:06:55Z",
    "updated_at": "2021-07-02T13:06:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r662999155",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662999155"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r662999155"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662999155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 242,
    "side": "RIGHT",
    "in_reply_to_id": 662921032
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663105927",
    "pull_request_review_id": 698314916,
    "id": 663105927,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzEwNTkyNw==",
    "diff_hunk": "@@ -75,6 +79,19 @@ def setup_addr_msg(self, num):\n         msg.addrs = addrs\n         return msg\n \n+    def setup_rand_addr_msg(self, num):",
    "path": "test/functional/p2p_addr_relay.py",
    "position": 65,
    "original_position": 28,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "484d8fdd94265b1dc1c850fb2cc3f743b0fffb1c",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I tried to reuse it, but things fail because the existing setup_addr_message are limited to 256 addresses, and when I tried to generalize it, some of the other tests started failing.",
    "created_at": "2021-07-02T15:48:16Z",
    "updated_at": "2021-07-02T15:48:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663105927",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663105927"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663105927"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663105927/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 97,
    "original_line": 97,
    "side": "RIGHT",
    "in_reply_to_id": 662949531
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663139663",
    "pull_request_review_id": 698359194,
    "id": 663139663,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzEzOTY2Mw==",
    "diff_hunk": "@@ -232,6 +235,11 @@ struct Peer {\n     std::atomic_bool m_wants_addrv2{false};\n     /** Whether this peer has already sent us a getaddr message. */\n     bool m_getaddr_recvd{false};\n+    /** Number of addr messages that can be processed from this peer. Start at 1 to\n+     *  permit self-announcement. */\n+    double m_addr_token_bucket{1.0};\n+    /** When m_addr_token_bucket was last updated */\n+    std::chrono::microseconds m_addr_token_timestamp{0};",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "484d8fdd94265b1dc1c850fb2cc3f743b0fffb1c",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done, it works.",
    "created_at": "2021-07-02T16:51:47Z",
    "updated_at": "2021-07-02T16:51:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663139663",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663139663"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663139663"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663139663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 242,
    "side": "RIGHT",
    "in_reply_to_id": 662921032
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663139730",
    "pull_request_review_id": 698359287,
    "id": 663139730,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzEzOTczMA==",
    "diff_hunk": "@@ -2776,11 +2787,24 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+        double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\n+        peer->m_addr_token_timestamp = current_time;\n+        peer->m_addr_token_bucket += std::max(0.0, std::min<double>(MAX_ADDR_TO_SEND - peer->m_addr_token_bucket, increment));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 49,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "484d8fdd94265b1dc1c850fb2cc3f743b0fffb1c",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done, much better.",
    "created_at": "2021-07-02T16:51:57Z",
    "updated_at": "2021-07-02T16:51:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663139730",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663139730"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663139730"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663139730/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2796,
    "side": "RIGHT",
    "in_reply_to_id": 662943964
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663139801",
    "pull_request_review_id": 698359381,
    "id": 663139801,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzEzOTgwMQ==",
    "diff_hunk": "@@ -207,6 +224,71 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+            peer.sync_with_ping()",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 70,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "484d8fdd94265b1dc1c850fb2cc3f743b0fffb1c",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Gone.",
    "created_at": "2021-07-02T16:52:05Z",
    "updated_at": "2021-07-02T16:52:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663139801",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663139801"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663139801"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663139801/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 240,
    "side": "RIGHT",
    "in_reply_to_id": 662944636
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663139843",
    "pull_request_review_id": 698359449,
    "id": 663139843,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzEzOTg0Mw==",
    "diff_hunk": "@@ -207,6 +224,71 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+            peer.sync_with_ping()\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert addr_count_0 == 0",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 74,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "484d8fdd94265b1dc1c850fb2cc3f743b0fffb1c",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-07-02T16:52:11Z",
    "updated_at": "2021-07-02T16:52:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663139843",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663139843"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663139843"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663139843/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 244,
    "side": "RIGHT",
    "in_reply_to_id": 662945737
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663141174",
    "pull_request_review_id": 698361128,
    "id": 663141174,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzE0MTE3NA==",
    "diff_hunk": "@@ -207,6 +224,71 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+            peer.sync_with_ping()\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert addr_count_0 == 0\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_1 = len(self.nodes[0].getnodeaddresses(0))\n+            assert addr_count_1 <= tokens\n+            assert addr_count_1 <= addr_count_0 + 600\n+            assert (addr_count_1 > addr_count_0) == (tokens > 0)\n+\n+            # Send 600 more addresses. For the outbound-full-relay peer (which sends a GETADDR, and thus will\n+            # process up to 1001 incoming addresses), this means more entries will appear.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_2 = len(self.nodes[0].getnodeaddresses(0))\n+            assert addr_count_2 <= tokens\n+            assert addr_count_2 <= addr_count_1 + 600\n+            assert (addr_count_2 > addr_count_1) == (tokens > 600)\n+\n+            # Send 10 more. As we reached the processing limit for all nodes, this should have no effect.\n+            peer.send_and_ping(self.setup_rand_addr_msg(10))\n+            addr_count_3 = len(self.nodes[0].getnodeaddresses(0))\n+            assert addr_count_3 <= tokens\n+            assert addr_count_3 <= addr_count_2 + 10\n+            assert (addr_count_3 > addr_count_2) == False",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 96,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "484d8fdd94265b1dc1c850fb2cc3f743b0fffb1c",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Or even better: `assert_equal(addr_count_2, addr_count_3)`. Done.",
    "created_at": "2021-07-02T16:54:48Z",
    "updated_at": "2021-07-02T16:54:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663141174",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663141174"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663141174"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663141174/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 266,
    "side": "RIGHT",
    "in_reply_to_id": 662949805
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663559469",
    "pull_request_review_id": 698709971,
    "id": 663559469,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzU1OTQ2OQ==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_TO_SEND);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n                 return;\n \n+            // Apply rate limiting.\n+            if (pfrom.addr != addr && !pfrom.HasPermission(NetPermissionFlags::Addr)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "2decfa58c19d9d6b5604b0931fa34cd94ccc32c8",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why the condition `pfrom.addr != addr` in addition to starting with `m_addr_token_bucket{1.0}`? Shouldn't self-announcements from our peer consume a token too?",
    "created_at": "2021-07-04T21:35:07Z",
    "updated_at": "2021-07-04T22:01:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663559469",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663559469"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663559469"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663559469/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2808,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663560244",
    "pull_request_review_id": 698709971,
    "id": 663560244,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzU2MDI0NA==",
    "diff_hunk": "@@ -208,6 +225,69 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_equal(addr_count_0, 0)\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_1 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_1)\n+            assert_greater_than_or_equal(addr_count_0 + 600, addr_count_1)\n+            assert_equal(addr_count_1 > addr_count_0, tokens > 0)",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 66,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "bb42151fee7714360f38882a77cbf2bba08cd514",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think that this could fail intermittently in the \"inbound\" case, where we have just 1 token. The first addr of the shuffled message consumes the token, but if `IsRoutable()` happens to be false for this random address, it won't be accepted to addrman (`CAddrMan::Add_()`), and other addrs of the message won't be either because there are no tokens left. ",
    "created_at": "2021-07-04T21:42:35Z",
    "updated_at": "2021-07-04T22:01:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663560244",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663560244"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663560244"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663560244/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 251,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663560937",
    "pull_request_review_id": 698709971,
    "id": 663560937,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MzU2MDkzNw==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_TO_SEND);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "2decfa58c19d9d6b5604b0931fa34cd94ccc32c8",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What is the reason for adding the `Shuffle` here, considering that the token counter grows deterministically and our peer could calculate anyway how many addrs of the packet we would process/discard if they cared to keep track of that?",
    "created_at": "2021-07-04T21:50:31Z",
    "updated_at": "2021-07-04T22:01:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663560937",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663560937"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r663560937"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/663560937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2812,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664232247",
    "pull_request_review_id": 699531352,
    "id": 664232247,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDIzMjI0Nw==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_TO_SEND);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n                 return;\n \n+            // Apply rate limiting.\n+            if (pfrom.addr != addr && !pfrom.HasPermission(NetPermissionFlags::Addr)) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "2decfa58c19d9d6b5604b0931fa34cd94ccc32c8",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's a leftover from an earlier iteration where I didn't have the `m_addr_token_bucket{1.0}` initialization. I've removed it.",
    "created_at": "2021-07-06T04:47:18Z",
    "updated_at": "2021-07-06T04:47:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664232247",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664232247"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664232247"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664232247/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2808,
    "side": "RIGHT",
    "in_reply_to_id": 663559469
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664237309",
    "pull_request_review_id": 699537302,
    "id": 664237309,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDIzNzMwOQ==",
    "diff_hunk": "@@ -208,6 +225,69 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_equal(addr_count_0, 0)\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_1 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_1)\n+            assert_greater_than_or_equal(addr_count_0 + 600, addr_count_1)\n+            assert_equal(addr_count_1 > addr_count_0, tokens > 0)",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 66,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "bb42151fee7714360f38882a77cbf2bba08cd514",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've updated the test to generate only routable IPs.",
    "created_at": "2021-07-06T05:03:46Z",
    "updated_at": "2021-07-06T05:03:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664237309",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664237309"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664237309"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664237309/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 251,
    "side": "RIGHT",
    "in_reply_to_id": 663560244
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664238361",
    "pull_request_review_id": 699538711,
    "id": 664238361,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDIzODM2MQ==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_TO_SEND);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "2decfa58c19d9d6b5604b0931fa34cd94ccc32c8",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The idea is that if we're going to be dropping some part of incoming messages because of rate-limiting, we should do it uniformly. This isn't to stop any kind of attack, but to give slightly fairer treatment to existing nodes on the network, which don't randomize on sending (there is random replacement once the outgoing buffer hits 1000, but that is rarely if ever hit under normal network conditions).",
    "created_at": "2021-07-06T05:07:27Z",
    "updated_at": "2021-07-06T05:07:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664238361",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664238361"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664238361"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664238361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2812,
    "side": "RIGHT",
    "in_reply_to_id": 663560937
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664460746",
    "pull_request_review_id": 699826384,
    "id": 664460746,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDQ2MDc0Ng==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 41,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not being intimately familiar with the `std::chrono` library, I found this line a little difficult to parse. The `std::chrono::duration<double>` is an instantiation of `duration` with the representation set to `double` and the period set to the default ratio of `1` (i.e. one second). This line therefore initializes a `duration` object that represents seconds as doubles from the `time_diff` variable (and then multiplies by the `MAX_ADDR_RATE_PER_SECOND`).",
    "created_at": "2021-07-06T11:12:12Z",
    "updated_at": "2021-07-06T16:17:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664460746",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664460746"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664460746"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664460746/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2796,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664467172",
    "pull_request_review_id": 699826384,
    "id": 664467172,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDQ2NzE3Mg==",
    "diff_hunk": "@@ -58,6 +58,7 @@ class InvalidMessagesTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n+        self.extra_args = [[\"-whitelist=addr@127.0.0.1\"]]",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": 4,
    "original_position": 4,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It was surprising that this test needed to be updated. My understanding was that it was testing malformed p2p messages in the net layer, but it seems that various application layer errors have also been added to the test.",
    "created_at": "2021-07-06T11:23:03Z",
    "updated_at": "2021-07-06T16:17:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664467172",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664467172"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664467172"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664467172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 61,
    "original_line": 61,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664543727",
    "pull_request_review_id": 699937128,
    "id": 664543727,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDU0MzcyNw==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_TO_SEND);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n                 return;\n \n+            // Apply rate limiting.\n+            if (!pfrom.HasPermission(NetPermissionFlags::Addr)) {\n+                if (peer->m_addr_token_bucket < 1.0) continue;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 54,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should that not be `break;`? `peer->m_addr_token_bucket` is not going to increase inside this loop.",
    "created_at": "2021-07-06T13:14:07Z",
    "updated_at": "2021-07-06T13:34:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664543727",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664543727"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664543727"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664543727/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2809,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664547038",
    "pull_request_review_id": 699937128,
    "id": 664547038,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDU0NzAzOA==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_TO_SEND);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: this entire snippet can be inside `if (!pfrom.HasPermission(NetPermissionFlags::Addr)) {` to avoid making calculations that are not going to be used later. That may be insignificant wrt performance (the shuffle too?) and the deeper indentation may look ugly, so feel free to ignore.",
    "created_at": "2021-07-06T13:18:15Z",
    "updated_at": "2021-07-06T13:34:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664547038",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664547038"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664547038"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664547038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2791,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2812,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664552110",
    "pull_request_review_id": 699937128,
    "id": 664552110,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDU1MjExMA==",
    "diff_hunk": "@@ -155,6 +155,9 @@ static constexpr uint32_t MAX_GETCFHEADERS_SIZE = 2000;\n static constexpr size_t MAX_PCT_ADDR_TO_SEND = 23;\n /** The maximum number of address records permitted in an ADDR message. */\n static constexpr size_t MAX_ADDR_TO_SEND{1000};\n+/** The maximum rate of address records we're willing to process on average. Can be bypassed using\n+ *  the NetPermissionFlags::Addr permission. */\n+static constexpr double MAX_ADDR_RATE_PER_SECOND{0.1};",
    "path": "src/net_processing.cpp",
    "position": 6,
    "original_position": 6,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "For bucket size we use `MAX_ADDR_TO_SEND` in the code, but they are semantically different. Maybe add new constant `ADDR_RATE_BUCKET_SIZE`? Should that be a little bit higher than `MAX_ADDR_TO_SEND`? For example:\r\n\r\n1. The peer sends us some unsolicited addr\r\n2. We send getaddr and fill the bucket to the max 1000\r\n3. We receive the unsolicited addr from 1.\r\n4. We receive the getaddr response from 2. (1000 addresses)\r\n\r\n=> some address is going to be dropped unnecessary, even though the peer did not \"spam\" us.",
    "created_at": "2021-07-06T13:24:37Z",
    "updated_at": "2021-07-06T13:34:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664552110",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664552110"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664552110"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664552110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 160,
    "original_line": 160,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664553208",
    "pull_request_review_id": 699937128,
    "id": 664553208,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDU1MzIwOA==",
    "diff_hunk": "@@ -2583,6 +2591,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             // Get recent addresses\n             m_connman.PushMessage(&pfrom, CNetMsgMaker(greatest_common_version).Make(NetMsgType::GETADDR));\n             peer->m_getaddr_sent = true;\n+            // When requesting a getaddr, accept an additional MAX_ADDR_TO_SEND addresses in response.\n+            peer->m_addr_token_bucket += MAX_ADDR_TO_SEND;",
    "path": "src/net_processing.cpp",
    "position": 45,
    "original_position": 27,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is ok as `MAX_ADDR_TO_SEND`",
    "created_at": "2021-07-06T13:25:54Z",
    "updated_at": "2021-07-06T13:34:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664553208",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664553208"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664553208"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664553208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2606,
    "original_line": 2606,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664553943",
    "pull_request_review_id": 699937128,
    "id": 664553943,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDU1Mzk0Mw==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This `MAX_ADDR_TO_SEND` is semantically the bucket size, so if a new constant is added it should be used here.",
    "created_at": "2021-07-06T13:26:48Z",
    "updated_at": "2021-07-06T13:34:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664553943",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664553943"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664553943"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664553943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2793,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664554249",
    "pull_request_review_id": 699937128,
    "id": 664554249,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDU1NDI0OQ==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_TO_SEND);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 42,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This `MAX_ADDR_TO_SEND` is semantically the bucket size, so if a new constant is added it should be used here.",
    "created_at": "2021-07-06T13:27:07Z",
    "updated_at": "2021-07-06T13:34:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664554249",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664554249"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664554249"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664554249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2797,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664559669",
    "pull_request_review_id": 699937128,
    "id": 664559669,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDU1OTY2OQ==",
    "diff_hunk": "@@ -75,6 +80,19 @@ def setup_addr_msg(self, num):\n         msg.addrs = addrs\n         return msg\n \n+    def setup_rand_addr_msg(self, num):\n+        addrs = []\n+        for i in range(num):\n+            addr = CAddress()\n+            addr.time = self.mocktime + i\n+            addr.nServices = NODE_NETWORK | NODE_WITNESS\n+            addr.ip = f\"{random.randrange(128,169)}.{random.randrange(1,255)}.{1+random.randrange(1,255)}.{1+random.randrange(1,255)}\"",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 36,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why the second octet in [1,254] and 3rd and 4th [2,255]?\r\n\r\n`1+randrange(1,255)` is the same as `randrange(2,256)`, why the former?",
    "created_at": "2021-07-06T13:33:26Z",
    "updated_at": "2021-07-06T13:34:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664559669",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664559669"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664559669"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664559669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 89,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664699379",
    "pull_request_review_id": 700147680,
    "id": 664699379,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDY5OTM3OQ==",
    "diff_hunk": "@@ -207,6 +225,69 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_equal(addr_count_0, 0)\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_1 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_1)\n+            assert_greater_than_or_equal(addr_count_0 + 600, addr_count_1)\n+            assert_equal(addr_count_1 > addr_count_0, tokens > 0)\n+\n+            # Send 600 more addresses. For the outbound-full-relay peer (which sends a GETADDR, and thus will\n+            # process up to 1001 incoming addresses), this means more entries will appear.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_2 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_2)\n+            assert_greater_than_or_equal(addr_count_1 + 600, addr_count_2)\n+            assert_equal(addr_count_2 > addr_count_1, tokens > 600)\n+\n+            # Send 10 more. As we reached the processing limit for all nodes, this should have no effect.\n+            peer.send_and_ping(self.setup_rand_addr_msg(10))\n+            addr_count_3 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_3)\n+            assert_equal(addr_count_2, addr_count_3)\n+\n+            # Advance the time by 100 seconds, permitting the processing of 10 more addresses. Send 200,\n+            # but verify that no more than 10 are processed.\n+            self.mocktime += 100\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if not no_relay:\n+                tokens += 10\n+            peer.send_and_ping(self.setup_rand_addr_msg(200))\n+            addr_count_4 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_4)\n+            assert_greater_than_or_equal(addr_count_3 + 10, addr_count_4)\n+\n+            # Advance the time by 1000 seconds, permitting the processing of 100 more addresses. Send 200,\n+            # but verify that no more than 100 are processed (and at least some).\n+            self.mocktime += 1000\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if not no_relay:\n+                tokens += 100\n+            peer.send_and_ping(self.setup_rand_addr_msg(200))\n+            addr_count_5 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_5)\n+            assert_greater_than_or_equal(addr_count_4 + 100, addr_count_5)\n+            assert_equal(addr_count_5 > addr_count_4, not no_relay)",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 119,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Isn't the `Advance the time by 100 seconds` test unnecessary given the `Advance the time by 1000 seconds` test? I think the latter is testing everything that the former does.",
    "created_at": "2021-07-06T16:16:35Z",
    "updated_at": "2021-07-06T16:19:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664699379",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664699379"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664699379"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664699379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 267,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 288,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664699518",
    "pull_request_review_id": 699826384,
    "id": 664699518,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDY5OTUxOA==",
    "diff_hunk": "@@ -207,6 +225,69 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_equal(addr_count_0, 0)\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_1 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_1)\n+            assert_greater_than_or_equal(addr_count_0 + 600, addr_count_1)\n+            assert_equal(addr_count_1 > addr_count_0, tokens > 0)\n+\n+            # Send 600 more addresses. For the outbound-full-relay peer (which sends a GETADDR, and thus will\n+            # process up to 1001 incoming addresses), this means more entries will appear.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_2 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_2)\n+            assert_greater_than_or_equal(addr_count_1 + 600, addr_count_2)\n+            assert_equal(addr_count_2 > addr_count_1, tokens > 600)\n+\n+            # Send 10 more. As we reached the processing limit for all nodes, this should have no effect.\n+            peer.send_and_ping(self.setup_rand_addr_msg(10))\n+            addr_count_3 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_3)\n+            assert_equal(addr_count_2, addr_count_3)\n+\n+            # Advance the time by 100 seconds, permitting the processing of 10 more addresses. Send 200,\n+            # but verify that no more than 10 are processed.\n+            self.mocktime += 100\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if not no_relay:\n+                tokens += 10",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 103,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You reuse this value of 10 lower down. How about saving it as a variable to remove that repetition (and also to test that the no_relay node's addr count doesn't increase):\r\n\r\n```diff\r\n--- a/test/functional/p2p_addr_relay.py\r\n+++ b/test/functional/p2p_addr_relay.py\r\n@@ -268,23 +268,23 @@ class AddrTest(BitcoinTestFramework):\r\n             # but verify that no more than 10 are processed.\r\n             self.mocktime += 100\r\n             self.nodes[0].setmocktime(self.mocktime)\r\n-            if not no_relay:\r\n-                tokens += 10\r\n+            new_tokens = 0 if no_relay else 10\r\n+            tokens += new_tokens\r\n             peer.send_and_ping(self.setup_rand_addr_msg(200))\r\n             addr_count_4 = len(self.nodes[0].getnodeaddresses(0))\r\n             assert_greater_than_or_equal(tokens, addr_count_4)\r\n-            assert_greater_than_or_equal(addr_count_3 + 10, addr_count_4)\r\n+            assert_greater_than_or_equal(addr_count_3 + new_tokens, addr_count_4)\r\n \r\n             # Advance the time by 1000 seconds, permitting the processing of 100 more addresses. Send 200,\r\n             # but verify that no more than 100 are processed (and at least some).\r\n             self.mocktime += 1000\r\n             self.nodes[0].setmocktime(self.mocktime)\r\n-            if not no_relay:\r\n-                tokens += 100\r\n+            new_tokens = 0 if no_relay else 100\r\n+            tokens += new_tokens\r\n             peer.send_and_ping(self.setup_rand_addr_msg(200))\r\n             addr_count_5 = len(self.nodes[0].getnodeaddresses(0))\r\n             assert_greater_than_or_equal(tokens, addr_count_5)\r\n-            assert_greater_than_or_equal(addr_count_4 + 100, addr_count_5)\r\n+            assert_greater_than_or_equal(addr_count_4 + new_tokens, addr_count_5)\r\n             assert_equal(addr_count_5 > addr_count_4, not no_relay)\r\n \r\n             self.nodes[0].disconnect_p2ps()\r\n```",
    "created_at": "2021-07-06T16:16:47Z",
    "updated_at": "2021-07-06T16:17:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664699518",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664699518"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664699518"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664699518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 272,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664701781",
    "pull_request_review_id": 700150976,
    "id": 664701781,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDcwMTc4MQ==",
    "diff_hunk": "@@ -155,6 +155,9 @@ static constexpr uint32_t MAX_GETCFHEADERS_SIZE = 2000;\n static constexpr size_t MAX_PCT_ADDR_TO_SEND = 23;\n /** The maximum number of address records permitted in an ADDR message. */\n static constexpr size_t MAX_ADDR_TO_SEND{1000};\n+/** The maximum rate of address records we're willing to process on average. Can be bypassed using\n+ *  the NetPermissionFlags::Addr permission. */\n+static constexpr double MAX_ADDR_RATE_PER_SECOND{0.1};",
    "path": "src/net_processing.cpp",
    "position": 6,
    "original_position": 6,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "2 is incorrect. We increment the bucket by 1000, not set it to 1000.",
    "created_at": "2021-07-06T16:20:02Z",
    "updated_at": "2021-07-06T16:20:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664701781",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664701781"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664701781"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664701781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 160,
    "original_line": 160,
    "side": "RIGHT",
    "in_reply_to_id": 664552110
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664704257",
    "pull_request_review_id": 700154088,
    "id": 664704257,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDcwNDI1Nw==",
    "diff_hunk": "@@ -207,6 +225,69 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_equal(addr_count_0, 0)\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_1 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_1)\n+            assert_greater_than_or_equal(addr_count_0 + 600, addr_count_1)\n+            assert_equal(addr_count_1 > addr_count_0, tokens > 0)\n+\n+            # Send 600 more addresses. For the outbound-full-relay peer (which sends a GETADDR, and thus will\n+            # process up to 1001 incoming addresses), this means more entries will appear.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_2 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_2)\n+            assert_greater_than_or_equal(addr_count_1 + 600, addr_count_2)\n+            assert_equal(addr_count_2 > addr_count_1, tokens > 600)\n+\n+            # Send 10 more. As we reached the processing limit for all nodes, this should have no effect.\n+            peer.send_and_ping(self.setup_rand_addr_msg(10))\n+            addr_count_3 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_3)\n+            assert_equal(addr_count_2, addr_count_3)\n+\n+            # Advance the time by 100 seconds, permitting the processing of 10 more addresses. Send 200,\n+            # but verify that no more than 10 are processed.\n+            self.mocktime += 100\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if not no_relay:\n+                tokens += 10",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 103,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe have just one constant in the test \"bucket size = 1000\" and derive everything from it? So that if the bucket size is changed in the future in `net_processing.cpp` this test is easier to adjust.",
    "created_at": "2021-07-06T16:23:24Z",
    "updated_at": "2021-07-06T16:23:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664704257",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664704257"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664704257"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664704257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 272,
    "side": "RIGHT",
    "in_reply_to_id": 664699518
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664705551",
    "pull_request_review_id": 700155832,
    "id": 664705551,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDcwNTU1MQ==",
    "diff_hunk": "@@ -2583,6 +2591,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             // Get recent addresses\n             m_connman.PushMessage(&pfrom, CNetMsgMaker(greatest_common_version).Make(NetMsgType::GETADDR));\n             peer->m_getaddr_sent = true;\n+            // When requesting a getaddr, accept an additional MAX_ADDR_TO_SEND addresses in response.\n+            peer->m_addr_token_bucket += MAX_ADDR_TO_SEND;",
    "path": "src/net_processing.cpp",
    "position": 45,
    "original_position": 27,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "87c8d2d072d52c79f092cc432f98c6157fe8e662",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In 87c8d2d072d52c79f092cc432f98c6157fe8e662\r\n\r\nThe commit message states that \"The token counter increases at a rate of 0.1 tokens per second, and will accrue up to a maximum of 1000 tokens\" but this seems a bit misleading. Since 1000 tokens are added upon sending a GETADDR, we could bump it past 1000 (I think the maximum is perhaps 1007, and 1001 seems likely). Perhaps something like \"The token counter increases at a rate of 0.1 tokens per second unless it has already reached 1000...\" would be more clear.",
    "created_at": "2021-07-06T16:25:15Z",
    "updated_at": "2021-07-06T17:40:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664705551",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664705551"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664705551"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664705551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2606,
    "original_line": 2606,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664711094",
    "pull_request_review_id": 700163040,
    "id": 664711094,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDcxMTA5NA==",
    "diff_hunk": "@@ -155,6 +155,9 @@ static constexpr uint32_t MAX_GETCFHEADERS_SIZE = 2000;\n static constexpr size_t MAX_PCT_ADDR_TO_SEND = 23;\n /** The maximum number of address records permitted in an ADDR message. */\n static constexpr size_t MAX_ADDR_TO_SEND{1000};\n+/** The maximum rate of address records we're willing to process on average. Can be bypassed using\n+ *  the NetPermissionFlags::Addr permission. */\n+static constexpr double MAX_ADDR_RATE_PER_SECOND{0.1};",
    "path": "src/net_processing.cpp",
    "position": 6,
    "original_position": 6,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right! It is capped to `1000`, but when expecting getaddr response we just do `+= 1000` without checking. Sorry for the noise.",
    "created_at": "2021-07-06T16:32:47Z",
    "updated_at": "2021-07-06T16:32:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664711094",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664711094"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664711094"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664711094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 160,
    "original_line": 160,
    "side": "RIGHT",
    "in_reply_to_id": 664552110
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664750999",
    "pull_request_review_id": 700155832,
    "id": 664750999,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDc1MDk5OQ==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_TO_SEND);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n                 return;\n \n+            // Apply rate limiting.\n+            if (!pfrom.HasPermission(NetPermissionFlags::Addr)) {\n+                if (peer->m_addr_token_bucket < 1.0) continue;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 54,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't understand why it should be `break` - am I missing something? There are other things happening in the loop as well",
    "created_at": "2021-07-06T17:31:59Z",
    "updated_at": "2021-07-06T17:40:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664750999",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664750999"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664750999"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664750999/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2809,
    "side": "RIGHT",
    "in_reply_to_id": 664543727
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664752631",
    "pull_request_review_id": 700155832,
    "id": 664752631,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDc1MjYzMQ==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 41,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\r\n            const double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\r\n```",
    "created_at": "2021-07-06T17:34:35Z",
    "updated_at": "2021-07-06T17:40:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664752631",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664752631"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664752631"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664752631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2795,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2796,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664927787",
    "pull_request_review_id": 700443590,
    "id": 664927787,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDkyNzc4Nw==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_TO_SEND);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n                 return;\n \n+            // Apply rate limiting.\n+            if (!pfrom.HasPermission(NetPermissionFlags::Addr)) {\n+                if (peer->m_addr_token_bucket < 1.0) continue;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 54,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indeed, a break is enough. Fixed.\r\n\r\n@glozow The loop does many things, but if if at some point the rate-limiting condition is reached, it will be reached for all further loop iterations too.",
    "created_at": "2021-07-06T22:57:35Z",
    "updated_at": "2021-07-06T22:57:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664927787",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664927787"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664927787"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664927787/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2809,
    "side": "RIGHT",
    "in_reply_to_id": 664543727
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664928077",
    "pull_request_review_id": 700443993,
    "id": 664928077,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDkyODA3Nw==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_TO_SEND);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No, if `pfrom.HasPermission(NetPermissionFlags::Addr)` is true, the loop still has to run - just the rate-limiting check is skipped.",
    "created_at": "2021-07-06T22:58:31Z",
    "updated_at": "2021-07-06T22:58:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664928077",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664928077"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664928077"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664928077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2791,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2812,
    "side": "RIGHT",
    "in_reply_to_id": 664547038
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664928627",
    "pull_request_review_id": 700444681,
    "id": 664928627,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDkyODYyNw==",
    "diff_hunk": "@@ -155,6 +155,9 @@ static constexpr uint32_t MAX_GETCFHEADERS_SIZE = 2000;\n static constexpr size_t MAX_PCT_ADDR_TO_SEND = 23;\n /** The maximum number of address records permitted in an ADDR message. */\n static constexpr size_t MAX_ADDR_TO_SEND{1000};\n+/** The maximum rate of address records we're willing to process on average. Can be bypassed using\n+ *  the NetPermissionFlags::Addr permission. */\n+static constexpr double MAX_ADDR_RATE_PER_SECOND{0.1};",
    "path": "src/net_processing.cpp",
    "position": 6,
    "original_position": 6,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've introduced a separate `MAX_ADDR_PROCESSING_TOKEN_BUCKET` constant, also initialized to 0. Also amended a few comments to be clearer about the fact that GETADDR can exceed this limit.",
    "created_at": "2021-07-06T23:00:03Z",
    "updated_at": "2021-07-06T23:00:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664928627",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664928627"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664928627"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664928627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 160,
    "original_line": 160,
    "side": "RIGHT",
    "in_reply_to_id": 664552110
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664928716",
    "pull_request_review_id": 700444765,
    "id": 664928716,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDkyODcxNg==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_TO_SEND);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 42,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-07-06T23:00:14Z",
    "updated_at": "2021-07-06T23:00:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664928716",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664928716"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664928716"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664928716/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2797,
    "side": "RIGHT",
    "in_reply_to_id": 664554249
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664928779",
    "pull_request_review_id": 700444831,
    "id": 664928779,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDkyODc3OQ==",
    "diff_hunk": "@@ -75,6 +80,19 @@ def setup_addr_msg(self, num):\n         msg.addrs = addrs\n         return msg\n \n+    def setup_rand_addr_msg(self, num):\n+        addrs = []\n+        for i in range(num):\n+            addr = CAddress()\n+            addr.time = self.mocktime + i\n+            addr.nServices = NODE_NETWORK | NODE_WITNESS\n+            addr.ip = f\"{random.randrange(128,169)}.{random.randrange(1,255)}.{1+random.randrange(1,255)}.{1+random.randrange(1,255)}\"",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 36,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "A typo, fixed.",
    "created_at": "2021-07-06T23:00:24Z",
    "updated_at": "2021-07-06T23:00:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664928779",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664928779"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664928779"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664928779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 89,
    "side": "RIGHT",
    "in_reply_to_id": 664559669
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664930730",
    "pull_request_review_id": 700447323,
    "id": 664930730,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDkzMDczMA==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 41,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've replaced it with the helpful `CountSecondsDouble` we have in util/time.h.",
    "created_at": "2021-07-06T23:06:03Z",
    "updated_at": "2021-07-06T23:06:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664930730",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664930730"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664930730"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664930730/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2796,
    "side": "RIGHT",
    "in_reply_to_id": 664460746
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664967887",
    "pull_request_review_id": 700489761,
    "id": 664967887,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDk2Nzg4Nw==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-07-07T01:04:01Z",
    "updated_at": "2021-07-07T01:04:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664967887",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664967887"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664967887"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664967887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2793,
    "side": "RIGHT",
    "in_reply_to_id": 664553943
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664978068",
    "pull_request_review_id": 700502053,
    "id": 664978068,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDk3ODA2OA==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 41,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-07-07T01:37:38Z",
    "updated_at": "2021-07-07T01:37:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664978068",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664978068"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664978068"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664978068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2795,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2796,
    "side": "RIGHT",
    "in_reply_to_id": 664752631
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664978166",
    "pull_request_review_id": 700502167,
    "id": 664978166,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDk3ODE2Ng==",
    "diff_hunk": "@@ -2583,6 +2591,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             // Get recent addresses\n             m_connman.PushMessage(&pfrom, CNetMsgMaker(greatest_common_version).Make(NetMsgType::GETADDR));\n             peer->m_getaddr_sent = true;\n+            // When requesting a getaddr, accept an additional MAX_ADDR_TO_SEND addresses in response.\n+            peer->m_addr_token_bucket += MAX_ADDR_TO_SEND;",
    "path": "src/net_processing.cpp",
    "position": 45,
    "original_position": 27,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "87c8d2d072d52c79f092cc432f98c6157fe8e662",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added a comment about this to the commit message.",
    "created_at": "2021-07-07T01:37:59Z",
    "updated_at": "2021-07-07T01:38:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664978166",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664978166"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664978166"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664978166/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2606,
    "original_line": 2606,
    "side": "RIGHT",
    "in_reply_to_id": 664705551
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664978731",
    "pull_request_review_id": 700502852,
    "id": 664978731,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDk3ODczMQ==",
    "diff_hunk": "@@ -207,6 +225,69 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_equal(addr_count_0, 0)\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_1 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_1)\n+            assert_greater_than_or_equal(addr_count_0 + 600, addr_count_1)\n+            assert_equal(addr_count_1 > addr_count_0, tokens > 0)\n+\n+            # Send 600 more addresses. For the outbound-full-relay peer (which sends a GETADDR, and thus will\n+            # process up to 1001 incoming addresses), this means more entries will appear.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_2 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_2)\n+            assert_greater_than_or_equal(addr_count_1 + 600, addr_count_2)\n+            assert_equal(addr_count_2 > addr_count_1, tokens > 600)\n+\n+            # Send 10 more. As we reached the processing limit for all nodes, this should have no effect.\n+            peer.send_and_ping(self.setup_rand_addr_msg(10))\n+            addr_count_3 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_3)\n+            assert_equal(addr_count_2, addr_count_3)\n+\n+            # Advance the time by 100 seconds, permitting the processing of 10 more addresses. Send 200,\n+            # but verify that no more than 10 are processed.\n+            self.mocktime += 100\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if not no_relay:\n+                tokens += 10\n+            peer.send_and_ping(self.setup_rand_addr_msg(200))\n+            addr_count_4 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_4)\n+            assert_greater_than_or_equal(addr_count_3 + 10, addr_count_4)\n+\n+            # Advance the time by 1000 seconds, permitting the processing of 100 more addresses. Send 200,\n+            # but verify that no more than 100 are processed (and at least some).\n+            self.mocktime += 1000\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if not no_relay:\n+                tokens += 100\n+            peer.send_and_ping(self.setup_rand_addr_msg(200))\n+            addr_count_5 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_5)\n+            assert_greater_than_or_equal(addr_count_4 + 100, addr_count_5)\n+            assert_equal(addr_count_5 > addr_count_4, not no_relay)",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 119,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Perhaps, I'm not entirely sure. The issue is that the last test is a bit weak, as a ton of entries have already been added to addrman (which fills up the relevant buckets asymptotically), so not that much is expected to be added anymore. The test before happens at a point when it's somewhat less full, so it's more appropriate a place to test that not too much is being added. The value of the last test is really only the ability to test that it incremented at all (which isn't guaranteed with 10 extra tokens).",
    "created_at": "2021-07-07T01:39:59Z",
    "updated_at": "2021-07-07T01:39:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664978731",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664978731"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664978731"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664978731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 267,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 288,
    "side": "RIGHT",
    "in_reply_to_id": 664699379
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664979029",
    "pull_request_review_id": 700503171,
    "id": 664979029,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NDk3OTAyOQ==",
    "diff_hunk": "@@ -207,6 +225,69 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_equal(addr_count_0, 0)\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_1 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_1)\n+            assert_greater_than_or_equal(addr_count_0 + 600, addr_count_1)\n+            assert_equal(addr_count_1 > addr_count_0, tokens > 0)\n+\n+            # Send 600 more addresses. For the outbound-full-relay peer (which sends a GETADDR, and thus will\n+            # process up to 1001 incoming addresses), this means more entries will appear.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_2 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_2)\n+            assert_greater_than_or_equal(addr_count_1 + 600, addr_count_2)\n+            assert_equal(addr_count_2 > addr_count_1, tokens > 600)\n+\n+            # Send 10 more. As we reached the processing limit for all nodes, this should have no effect.\n+            peer.send_and_ping(self.setup_rand_addr_msg(10))\n+            addr_count_3 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_3)\n+            assert_equal(addr_count_2, addr_count_3)\n+\n+            # Advance the time by 100 seconds, permitting the processing of 10 more addresses. Send 200,\n+            # but verify that no more than 10 are processed.\n+            self.mocktime += 100\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if not no_relay:\n+                tokens += 10",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 103,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jnewbery Done.\r\n\r\n@vasild It's not entirely clear how to do that sufficiently generically (we'll probably want different test cases entirely if the rate limit changes).",
    "created_at": "2021-07-07T01:40:44Z",
    "updated_at": "2021-07-07T01:40:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664979029",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664979029"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r664979029"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/664979029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 272,
    "side": "RIGHT",
    "in_reply_to_id": 664699518
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665141497",
    "pull_request_review_id": 700701796,
    "id": 665141497,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTE0MTQ5Nw==",
    "diff_hunk": "@@ -2777,11 +2787,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_TO_SEND) {\n+            // Don't increment bucket if it's already full\n+            auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            double increment = std::chrono::duration<double>(time_diff).count() * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_TO_SEND);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dade562ea5479e32c6a49fc92e9646f761b8e376",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> this entire snippet can be inside ...\r\n> ... the loop still has to run ...\r\n\r\nThe loop if after the snippet, it will run. Just to clarify:\r\n\r\n```diff\r\n--- i/src/net_processing.cpp\r\n+++ w/src/net_processing.cpp\r\n@@ -2790,24 +2790,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\r\n \r\n         // Store the new addresses\r\n         std::vector<CAddress> vAddrOk;\r\n         int64_t nNow = GetAdjustedTime();\r\n         int64_t nSince = nNow - 10 * 60;\r\n \r\n-        // Update/increment addr rate limiting bucket.\r\n-        const auto current_time = GetTime<std::chrono::microseconds>();\r\n-        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\r\n-            // Don't increment bucket if it's already full\r\n-            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\r\n-            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\r\n-            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\r\n-        }\r\n-        peer->m_addr_token_timestamp = current_time;\r\n-\r\n-        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\r\n         const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\r\n+\r\n+        if (rate_limited) {\r\n+            // Update/increment addr rate limiting bucket.\r\n+            const auto current_time = GetTime<std::chrono::microseconds>();\r\n+            if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\r\n+                // Don't increment bucket if it's already full\r\n+                const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\r\n+                const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\r\n+                peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\r\n+            }\r\n+            peer->m_addr_token_timestamp = current_time;\r\n+\r\n+            Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\r\n+        }\r\n+\r\n         for (CAddress& addr : vAddr)\r\n```\r\n\r\nDoes not change the behavior, but is slightly more performant :+1: (and deeply indented :-1:). Again, feel free to ignore. This comment is just for clarification, not an insistence :)",
    "created_at": "2021-07-07T08:07:14Z",
    "updated_at": "2021-07-07T08:08:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665141497",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665141497"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665141497"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665141497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2791,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2812,
    "side": "RIGHT",
    "in_reply_to_id": 664547038
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665145646",
    "pull_request_review_id": 700707406,
    "id": 665145646,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTE0NTY0Ng==",
    "diff_hunk": "@@ -2777,11 +2792,29 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n+        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n                 return;\n \n+            // Apply rate limiting.\n+            if (rate_limited) {\n+                if (peer->m_addr_token_bucket < 1.0) break;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 69,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dc8a1863f30b5944490cdbaa3271afbf8cd6da9a",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do you think it makes sense to log a (debug) message if this occurs? The assumption is that it will happen very rarely, if ever, so it might be of interest if it happens in order to have an idea of its frequency.",
    "created_at": "2021-07-07T08:13:00Z",
    "updated_at": "2021-07-07T10:29:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665145646",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665145646"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665145646"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665145646/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2813,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2815,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665146003",
    "pull_request_review_id": 700707900,
    "id": 665146003,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTE0NjAwMw==",
    "diff_hunk": "@@ -215,7 +222,7 @@ struct Peer {\n     /** Whether a ping has been requested by the user */\n     std::atomic<bool> m_ping_queued{false};\n \n-    /** A vector of addresses to send to the peer, limited to MAX_ADDR_TO_SEND. */",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dc8a1863f30b5944490cdbaa3271afbf8cd6da9a",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There's no need to change this comment.",
    "created_at": "2021-07-07T08:13:29Z",
    "updated_at": "2021-07-07T08:19:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665146003",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665146003"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665146003"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665146003/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 218,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665377495",
    "pull_request_review_id": 701015174,
    "id": 665377495,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTM3NzQ5NQ==",
    "diff_hunk": "@@ -2777,11 +2792,29 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n+        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n                 return;\n \n+            // Apply rate limiting.\n+            if (rate_limited) {\n+                if (peer->m_addr_token_bucket < 1.0) break;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 69,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dc8a1863f30b5944490cdbaa3271afbf8cd6da9a",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It seems reasonable to print a single log in the `BCLog::NET` if an `addr` or `addrv2` p2p message has address records dropped.",
    "created_at": "2021-07-07T13:35:53Z",
    "updated_at": "2021-07-07T13:35:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665377495",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665377495"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665377495"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665377495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2813,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2815,
    "side": "RIGHT",
    "in_reply_to_id": 665145646
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665624211",
    "pull_request_review_id": 701339111,
    "id": 665624211,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTYyNDIxMQ==",
    "diff_hunk": "@@ -2777,11 +2792,29 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n+        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n                 return;\n \n+            // Apply rate limiting.\n+            if (rate_limited) {\n+                if (peer->m_addr_token_bucket < 1.0) break;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 69,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dc8a1863f30b5944490cdbaa3271afbf8cd6da9a",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It does happen occasionally very early in a connection's lifetime, if an address send event happens in the first 10 seconds. A few crawlers that very actively provide addresses also trigger it sometimes. I think both of these are harmless.\r\n\r\nAdded a commit to add logging.",
    "created_at": "2021-07-07T18:46:28Z",
    "updated_at": "2021-07-07T18:46:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665624211",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665624211"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665624211"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665624211/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2813,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2815,
    "side": "RIGHT",
    "in_reply_to_id": 665145646
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665630867",
    "pull_request_review_id": 701347520,
    "id": 665630867,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTYzMDg2Nw==",
    "diff_hunk": "@@ -2837,6 +2841,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             if (fReachable)\n                 vAddrOk.push_back(addr);\n         }\n+        if (rate_limiting_triggered) {\n+            LogPrint(BCLog::NET, \"Rate limiting an address message from peer=%d\\n\", pfrom.GetId());",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "cb0c885fbbe05e73581de429d0c1d451eb4d2696",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Couldn't this just be in the `if` where `rate_limiting_triggered` is being set and thus remove the need for the bool?",
    "created_at": "2021-07-07T18:56:49Z",
    "updated_at": "2021-07-07T18:57:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665630867",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665630867"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665630867"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665630867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2845,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665631239",
    "pull_request_review_id": 701347520,
    "id": 665631239,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTYzMTIzOQ==",
    "diff_hunk": "@@ -208,6 +225,69 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 46,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dc8a1863f30b5944490cdbaa3271afbf8cd6da9a",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: use f-string instead?",
    "created_at": "2021-07-07T18:57:22Z",
    "updated_at": "2021-07-07T18:57:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665631239",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665631239"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665631239"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665631239/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 231,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665639769",
    "pull_request_review_id": 701359496,
    "id": 665639769,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTYzOTc2OQ==",
    "diff_hunk": "@@ -215,7 +222,7 @@ struct Peer {\n     /** Whether a ping has been requested by the user */\n     std::atomic<bool> m_ping_queued{false};\n \n-    /** A vector of addresses to send to the peer, limited to MAX_ADDR_TO_SEND. */",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dc8a1863f30b5944490cdbaa3271afbf8cd6da9a",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-07-07T19:11:18Z",
    "updated_at": "2021-07-07T19:11:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665639769",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665639769"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665639769"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665639769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 218,
    "side": "LEFT",
    "in_reply_to_id": 665146003
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665640098",
    "pull_request_review_id": 701359930,
    "id": 665640098,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTY0MDA5OA==",
    "diff_hunk": "@@ -2837,6 +2841,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             if (fReachable)\n                 vAddrOk.push_back(addr);\n         }\n+        if (rate_limiting_triggered) {\n+            LogPrint(BCLog::NET, \"Rate limiting an address message from peer=%d\\n\", pfrom.GetId());",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "cb0c885fbbe05e73581de429d0c1d451eb4d2696",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good idea, done.",
    "created_at": "2021-07-07T19:11:55Z",
    "updated_at": "2021-07-07T19:11:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665640098",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665640098"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665640098"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665640098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2845,
    "side": "RIGHT",
    "in_reply_to_id": 665630867
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665640237",
    "pull_request_review_id": 701360102,
    "id": 665640237,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTY0MDIzNw==",
    "diff_hunk": "@@ -208,6 +225,69 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 46,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dc8a1863f30b5944490cdbaa3271afbf8cd6da9a",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't find those generally more readable.",
    "created_at": "2021-07-07T19:12:08Z",
    "updated_at": "2021-07-07T19:12:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665640237",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665640237"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665640237"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665640237/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 231,
    "side": "RIGHT",
    "in_reply_to_id": 665631239
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665780690",
    "pull_request_review_id": 701537117,
    "id": 665780690,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTc4MDY5MA==",
    "diff_hunk": "@@ -208,6 +225,69 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_equal(addr_count_0, 0)\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_1 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_1)\n+            assert_greater_than_or_equal(addr_count_0 + 600, addr_count_1)\n+            assert_equal(addr_count_1 > addr_count_0, tokens > 0)\n+\n+            # Send 600 more addresses. For the outbound-full-relay peer (which sends a GETADDR, and thus will",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 68,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "f8e51a85ac0c783808fc64179fcc108aad676079",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: this comment is backwards (our node sends a GETADDR and processes the incoming addresses, not the outbound peer)",
    "created_at": "2021-07-08T00:03:45Z",
    "updated_at": "2021-07-08T00:24:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665780690",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665780690"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665780690"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665780690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 257,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665882202",
    "pull_request_review_id": 701654647,
    "id": 665882202,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTg4MjIwMg==",
    "diff_hunk": "@@ -233,6 +240,11 @@ struct Peer {\n     std::atomic_bool m_wants_addrv2{false};\n     /** Whether this peer has already sent us a getaddr message. */\n     bool m_getaddr_recvd{false};\n+    /** Number of addr messages that can be processed from this peer. Start at 1 to",
    "path": "src/net_processing.cpp",
    "position": 18,
    "original_position": 18,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "4291de17e9de183d1433d96047bbe135fd0821ef",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I believe this is not about  'Number of addr messages' (because one message can contain 1000 items), but about number of addr items?",
    "created_at": "2021-07-08T05:34:19Z",
    "updated_at": "2021-07-08T09:09:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665882202",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665882202"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r665882202"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665882202/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 243,
    "original_line": 243,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666114299",
    "pull_request_review_id": 701956579,
    "id": 666114299,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NjExNDI5OQ==",
    "diff_hunk": "@@ -233,6 +240,11 @@ struct Peer {\n     std::atomic_bool m_wants_addrv2{false};\n     /** Whether this peer has already sent us a getaddr message. */\n     bool m_getaddr_recvd{false};\n+    /** Number of addr messages that can be processed from this peer. Start at 1 to\n+     *  permit self-announcement. */\n+    double m_addr_token_bucket{1.0};",
    "path": "src/net_processing.cpp",
    "position": 20,
    "original_position": 20,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "8b60d6f538abbee5ea3ef6b49968f6afd2581877",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It looks like the code makes sure that this number never leaves the range `0.0..MAX_ADDR_PROCESSING_TOKEN_BUCKET`, right?\r\n(I generally don't like using floating point for countable objects because of potential infinite loops when the value becomes too large or negative to be represented with a granularity of 1, but I think this issue is avoided)",
    "created_at": "2021-07-08T11:39:42Z",
    "updated_at": "2021-07-08T11:39:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r666114299",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666114299"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r666114299"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666114299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 245,
    "original_line": 245,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666132900",
    "pull_request_review_id": 701981682,
    "id": 666132900,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NjEzMjkwMA==",
    "diff_hunk": "@@ -233,6 +240,11 @@ struct Peer {\n     std::atomic_bool m_wants_addrv2{false};\n     /** Whether this peer has already sent us a getaddr message. */\n     bool m_getaddr_recvd{false};\n+    /** Number of addr messages that can be processed from this peer. Start at 1 to\n+     *  permit self-announcement. */\n+    double m_addr_token_bucket{1.0};",
    "path": "src/net_processing.cpp",
    "position": 20,
    "original_position": 20,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "8b60d6f538abbee5ea3ef6b49968f6afd2581877",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It could exceed that limit - when we send `getaddr` we increment it with `MAX_ADDR_TO_SEND` (1000) regardless of its current value. It should be ok wrt concerns about floating point, given that we send `getaddr` just once.",
    "created_at": "2021-07-08T12:09:35Z",
    "updated_at": "2021-07-08T12:09:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r666132900",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666132900"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r666132900"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666132900/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 245,
    "original_line": 245,
    "side": "RIGHT",
    "in_reply_to_id": 666114299
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666155905",
    "pull_request_review_id": 702012096,
    "id": 666155905,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NjE1NTkwNQ==",
    "diff_hunk": "@@ -233,6 +240,11 @@ struct Peer {\n     std::atomic_bool m_wants_addrv2{false};\n     /** Whether this peer has already sent us a getaddr message. */\n     bool m_getaddr_recvd{false};\n+    /** Number of addr messages that can be processed from this peer. Start at 1 to\n+     *  permit self-announcement. */\n+    double m_addr_token_bucket{1.0};",
    "path": "src/net_processing.cpp",
    "position": 20,
    "original_position": 20,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "8b60d6f538abbee5ea3ef6b49968f6afd2581877",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> It looks like the code makes sure that this number never leaves the range 0.0..MAX_ADDR_PROCESSING_TOKEN_BUCKET, right?\r\n\r\nNot quite. `m_addr_token_bucket` may exceed `MAX_ADDR_PROCESSING_TOKEN_BUCKET` immediately after we send a `getaddr` message. I think that the theoretic maximum it can reach is 1007 (we send the `getaddr` as soon as we receive the peer's `version` message, which can be up to 60 seconds after the connection is established).",
    "created_at": "2021-07-08T12:42:02Z",
    "updated_at": "2021-07-08T12:42:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r666155905",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666155905"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r666155905"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666155905/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 245,
    "original_line": 245,
    "side": "RIGHT",
    "in_reply_to_id": 666114299
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667692734",
    "pull_request_review_id": 703800705,
    "id": 667692734,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzY5MjczNA==",
    "diff_hunk": "@@ -233,6 +240,11 @@ struct Peer {\n     std::atomic_bool m_wants_addrv2{false};\n     /** Whether this peer has already sent us a getaddr message. */\n     bool m_getaddr_recvd{false};\n+    /** Number of addr messages that can be processed from this peer. Start at 1 to\n+     *  permit self-announcement. */\n+    double m_addr_token_bucket{1.0};",
    "path": "src/net_processing.cpp",
    "position": 20,
    "original_position": 20,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "8b60d6f538abbee5ea3ef6b49968f6afd2581877",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right, thanks, that's not really going to give problems.",
    "created_at": "2021-07-12T07:33:49Z",
    "updated_at": "2021-07-12T07:33:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r667692734",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667692734"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r667692734"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667692734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 245,
    "original_line": 245,
    "side": "RIGHT",
    "in_reply_to_id": 666114299
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667694456",
    "pull_request_review_id": 703803113,
    "id": 667694456,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzY5NDQ1Ng==",
    "diff_hunk": "@@ -208,6 +225,69 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 46,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dc8a1863f30b5944490cdbaa3271afbf8cd6da9a",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "For more complex formatting I think f-strings are more readable, because they specify the value where it is inserted, but if there is only one value, I agree that doesn't win anything.",
    "created_at": "2021-07-12T07:36:05Z",
    "updated_at": "2021-07-12T07:36:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r667694456",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667694456"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r667694456"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667694456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 231,
    "side": "RIGHT",
    "in_reply_to_id": 665631239
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668289378",
    "pull_request_review_id": 704584099,
    "id": 668289378,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODI4OTM3OA==",
    "diff_hunk": "@@ -2777,11 +2792,32 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);",
    "path": "src/net_processing.cpp",
    "position": 58,
    "original_position": 45,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "8b60d6f538abbee5ea3ef6b49968f6afd2581877",
    "user": {
      "login": "GeneFerneau",
      "id": 80422284,
      "node_id": "MDQ6VXNlcjgwNDIyMjg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/80422284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GeneFerneau",
      "html_url": "https://github.com/GeneFerneau",
      "followers_url": "https://api.github.com/users/GeneFerneau/followers",
      "following_url": "https://api.github.com/users/GeneFerneau/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeneFerneau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GeneFerneau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeneFerneau/subscriptions",
      "organizations_url": "https://api.github.com/users/GeneFerneau/orgs",
      "repos_url": "https://api.github.com/users/GeneFerneau/repos",
      "events_url": "https://api.github.com/users/GeneFerneau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GeneFerneau/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This could result in a very large number if `peer->m_addr_token_timestamp` is negative. Maybe a check that `peer->m_addr_token_timestamp` is positive? Probably doesn't matter with the `std::min` check below, just a thought.",
    "created_at": "2021-07-12T22:08:50Z",
    "updated_at": "2021-07-12T22:12:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668289378",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668289378"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668289378"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668289378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2806,
    "original_line": 2806,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668291499",
    "pull_request_review_id": 704586558,
    "id": 668291499,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODI5MTQ5OQ==",
    "diff_hunk": "@@ -2777,11 +2792,32 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);",
    "path": "src/net_processing.cpp",
    "position": 58,
    "original_position": 45,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "8b60d6f538abbee5ea3ef6b49968f6afd2581877",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That variable is initialized to the current time, so it can't be negative.",
    "created_at": "2021-07-12T22:13:23Z",
    "updated_at": "2021-07-12T22:13:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668291499",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668291499"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668291499"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668291499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2806,
    "original_line": 2806,
    "side": "RIGHT",
    "in_reply_to_id": 668289378
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668294202",
    "pull_request_review_id": 704589696,
    "id": 668294202,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODI5NDIwMg==",
    "diff_hunk": "@@ -2777,11 +2792,32 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);",
    "path": "src/net_processing.cpp",
    "position": 58,
    "original_position": 45,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "8b60d6f538abbee5ea3ef6b49968f6afd2581877",
    "user": {
      "login": "GeneFerneau",
      "id": 80422284,
      "node_id": "MDQ6VXNlcjgwNDIyMjg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/80422284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GeneFerneau",
      "html_url": "https://github.com/GeneFerneau",
      "followers_url": "https://api.github.com/users/GeneFerneau/followers",
      "following_url": "https://api.github.com/users/GeneFerneau/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeneFerneau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GeneFerneau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeneFerneau/subscriptions",
      "organizations_url": "https://api.github.com/users/GeneFerneau/orgs",
      "repos_url": "https://api.github.com/users/GeneFerneau/repos",
      "events_url": "https://api.github.com/users/GeneFerneau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GeneFerneau/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I was under the impression this variable is under peer (attacker) control, so could take on any value.",
    "created_at": "2021-07-12T22:19:18Z",
    "updated_at": "2021-07-12T22:19:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668294202",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668294202"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668294202"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668294202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2806,
    "original_line": 2806,
    "side": "RIGHT",
    "in_reply_to_id": 668289378
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668294737",
    "pull_request_review_id": 704590356,
    "id": 668294737,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODI5NDczNw==",
    "diff_hunk": "@@ -2777,11 +2792,32 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);",
    "path": "src/net_processing.cpp",
    "position": 58,
    "original_position": 45,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "8b60d6f538abbee5ea3ef6b49968f6afd2581877",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That's incorrect. It's just our local time when the m_addr_token_bucket variable was last updated.",
    "created_at": "2021-07-12T22:20:33Z",
    "updated_at": "2021-07-12T22:20:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668294737",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668294737"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668294737"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668294737/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2806,
    "original_line": 2806,
    "side": "RIGHT",
    "in_reply_to_id": 668289378
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668733056",
    "pull_request_review_id": 705145016,
    "id": 668733056,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODczMzA1Ng==",
    "diff_hunk": "@@ -2777,11 +2798,34 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n+        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\n+        uint64_t num_proc = 0, num_rate_limit = 0;\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n                 return;\n \n+            // Apply rate limiting.\n+            if (rate_limited) {\n+                if (peer->m_addr_token_bucket < 1.0) {\n+                    LogPrint(BCLog::NET, \"Rate limiting an address message from peer=%d\\n\", pfrom.GetId());\n+                    num_rate_limit++;\n+                    continue;\n+                }",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "df1ddf8f085a1db31dd1bd420e5e1a5a7fc301b0",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If the peer sends us an `addr` message with 50 addresses and we drop the last 30, this would cause 30 printouts to the log, which may be a bit excessive. I think it would be possible to do the counting before the loop and also make the log message a bit more useful by printing the total number of addresses in the message and the number of the dropped ones.",
    "created_at": "2021-07-13T12:52:45Z",
    "updated_at": "2021-07-13T13:10:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668733056",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668733056"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668733056"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668733056/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2822,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2826,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668743463",
    "pull_request_review_id": 705145016,
    "id": 668743463,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODc0MzQ2Mw==",
    "diff_hunk": "@@ -2777,11 +2798,34 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);",
    "path": "src/net_processing.cpp",
    "position": 60,
    "original_position": 60,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "df1ddf8f085a1db31dd1bd420e5e1a5a7fc301b0",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Here we can calculate the number of to be dropped addresses and also log the message, for example:\r\n\r\n```diff\r\n--- i/src/net_processing.cpp\r\n+++ w/src/net_processing.cpp\r\n@@ -2796,36 +2796,46 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\r\n \r\n         // Store the new addresses\r\n         std::vector<CAddress> vAddrOk;\r\n         int64_t nNow = GetAdjustedTime();\r\n         int64_t nSince = nNow - 10 * 60;\r\n \r\n+        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\r\n+        uint64_t num_proc = 0, num_rate_limit = 0;\r\n+\r\n         // Update/increment addr rate limiting bucket.\r\n         const auto current_time = GetTime<std::chrono::microseconds>();\r\n         if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\r\n             // Don't increment bucket if it's already full\r\n             const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\r\n             const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\r\n             peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\r\n+\r\n+            if (rate_limited && vAddr.size() > peer->m_addr_token_bucket) {\r\n+                num_rate_limit =\r\n+                    static_cast<uint64_t>(std::ceil(vAddr.size() - peer->m_addr_token_bucket));\r\n+                LogPrint(BCLog::NET,\r\n+                         \"Rate limiting %u of %u addresses from a message from peer=%d%s\\n\",\r\n+                         pfrom.GetId(),\r\n+                         num_rate_limit,\r\n+                         vAddr.size(),\r\n+                         fLogIPs ? \", peeraddr=\" + pfrom.addr.ToString() : \"\");\r\n+            }\r\n         }\r\n         peer->m_addr_token_timestamp = current_time;\r\n \r\n         Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\r\n-        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\r\n-        uint64_t num_proc = 0, num_rate_limit = 0;\r\n         for (CAddress& addr : vAddr)\r\n         {\r\n             if (interruptMsgProc)\r\n                 return;\r\n \r\n             // Apply rate limiting.\r\n             if (rate_limited) {\r\n                 if (peer->m_addr_token_bucket < 1.0) {\r\n-                    LogPrint(BCLog::NET, \"Rate limiting an address message from peer=%d\\n\", pfrom.GetId());\r\n-                    num_rate_limit++;\r\n-                    continue;\r\n+                    break;\r\n                 }\r\n                 peer->m_addr_token_bucket -= 1.0;\r\n             }\r\n             // We only bother storing full nodes, though this may include\r\n             // things which we would not make an outbound connection to, in\r\n             // part because we may make feeler connections to them.\r\n```",
    "created_at": "2021-07-13T13:05:22Z",
    "updated_at": "2021-07-13T13:09:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668743463",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668743463"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668743463"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668743463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2808,
    "original_line": 2808,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668771763",
    "pull_request_review_id": 705198585,
    "id": 668771763,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODc3MTc2Mw==",
    "diff_hunk": "@@ -2777,11 +2798,34 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n+        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\n+        uint64_t num_proc = 0, num_rate_limit = 0;\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n                 return;\n \n+            // Apply rate limiting.\n+            if (rate_limited) {\n+                if (peer->m_addr_token_bucket < 1.0) {\n+                    LogPrint(BCLog::NET, \"Rate limiting an address message from peer=%d\\n\", pfrom.GetId());\n+                    num_rate_limit++;\n+                    continue;\n+                }",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "df1ddf8f085a1db31dd1bd420e5e1a5a7fc301b0",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This used to be a `break`, which would mean that the log is printed only once. Is there a reason that it's been reverted to `continue`?",
    "created_at": "2021-07-13T13:37:37Z",
    "updated_at": "2021-07-13T13:37:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668771763",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668771763"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668771763"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668771763/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2822,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2826,
    "side": "RIGHT",
    "in_reply_to_id": 668733056
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668814369",
    "pull_request_review_id": 705257630,
    "id": 668814369,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODgxNDM2OQ==",
    "diff_hunk": "@@ -2777,11 +2798,34 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n+        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\n+        uint64_t num_proc = 0, num_rate_limit = 0;\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n                 return;\n \n+            // Apply rate limiting.\n+            if (rate_limited) {\n+                if (peer->m_addr_token_bucket < 1.0) {\n+                    LogPrint(BCLog::NET, \"Rate limiting an address message from peer=%d\\n\", pfrom.GetId());\n+                    num_rate_limit++;\n+                    continue;\n+                }",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "df1ddf8f085a1db31dd1bd420e5e1a5a7fc301b0",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "oh, I see it's for the new metrics.",
    "created_at": "2021-07-13T14:23:23Z",
    "updated_at": "2021-07-13T14:23:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668814369",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668814369"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r668814369"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668814369/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2822,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2826,
    "side": "RIGHT",
    "in_reply_to_id": 668733056
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669385730",
    "pull_request_review_id": 705973344,
    "id": 669385730,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTM4NTczMA==",
    "diff_hunk": "@@ -2777,11 +2798,34 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);",
    "path": "src/net_processing.cpp",
    "position": 60,
    "original_position": 60,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "df1ddf8f085a1db31dd1bd420e5e1a5a7fc301b0",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Now I see that I have messed up the order of the arguments to `LogPrint()` :facepalm:. Correction:\r\n\r\n```diff\r\n                 LogPrint(BCLog::NET, \"Rate limiting %u of %u addresses from a message from peer=%d%s\\n\r\n-                         pfrom.GetId(),\r\n                          num_rate_limit,\r\n                          vAddr.size(),\r\n+                         pfrom.GetId(),\r\n                          fLogIPs ? \", peeraddr=\" + pfrom.addr.ToString() : \"\");\r\n```",
    "created_at": "2021-07-14T08:04:47Z",
    "updated_at": "2021-07-14T08:04:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669385730",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669385730"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669385730"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669385730/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2808,
    "original_line": 2808,
    "side": "RIGHT",
    "in_reply_to_id": 668743463
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669397937",
    "pull_request_review_id": 705989456,
    "id": 669397937,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTM5NzkzNw==",
    "diff_hunk": "@@ -2795,6 +2845,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                 // Do not process banned/discouraged addresses beyond remembering we received them\n                 continue;\n             }\n+            num_proc++;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 94,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "759c3d4d28874ea6c0b97ad910635d7858d41884",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This was `if (!peer->m_getaddr_sent) num_proc++;` in a previous incarnation and I thought it was ok. With unconditional `num_proc++`, observing addr/sec (`(addr_processed + addr_rate_limited) / connection_duration`) in order to find a better value for `MAX_ADDR_RATE_PER_SECOND` is not appropriate because the calculated addr/sec may be allowed to go higher than 0.1 without causing any rate limiting (we increment the tokens by 1000 when we send `getaddr`). I guess either way is fine.\r\n\r\nAbout putting this increment after two possible `continue`s: I think that if we do some processing (`MayHaveUsefulAddressDB()` or banmap lookup) and decide to `continue`, that should be counted as \"processing\" too. I.e. `num_proc++;` should be put before `MayHaveUsefulAddressDB()` above. Or if it remains here, then maybe `addr_accepted` or `addr_added` is a name that would better describe what we have done. Maybe have both `addr_received` (`vAddr.size()`) and `addr_accepted`?",
    "created_at": "2021-07-14T08:22:09Z",
    "updated_at": "2021-07-14T08:37:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669397937",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669397937"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669397937"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669397937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2848,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669439983",
    "pull_request_review_id": 706044276,
    "id": 669439983,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTQzOTk4Mw==",
    "diff_hunk": "@@ -2777,11 +2798,34 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);",
    "path": "src/net_processing.cpp",
    "position": 60,
    "original_position": 60,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "df1ddf8f085a1db31dd1bd420e5e1a5a7fc301b0",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This better be outside of the `if`:\r\n\r\n```diff\r\n         if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\r\n             // Don't increment bucket if it's already full\r\n             const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\r\n             const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\r\n             peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_AD\r\n-            if (rate_limited && vAddr.size() > peer->m_addr_token_bucket) {\r\n-                num_rate_limit = (uint64_t)std::ceil(vAddr.size() - peer->m_addr_token_bucket);\r\n-                LogPrint(BCLog::NET, \"Rate limiting %u of %u addresses from a message from peer=%d%s\\n\r\n-                         pfrom.GetId(),\r\n-                         num_rate_limit,\r\n-                         vAddr.size(),\r\n-                         fLogIPs ? \", peeraddr=\" + pfrom.addr.ToString() : \"\");\r\n-            }\r\n         }\r\n+        if (rate_limited && vAddr.size() > peer->m_addr_token_bucket) {\r\n+            num_rate_limit = (uint64_t)std::ceil(vAddr.size() - peer->m_addr_token_bucket);\r\n+            LogPrint(BCLog::NET,\r\n+                     \"Rate limiting %u of %u addresses from a message from peer=%d%s\\n\",\r\n+                     num_rate_limit,\r\n+                     vAddr.size(),\r\n+                     pfrom.GetId(),\r\n+                     fLogIPs ? \", peeraddr=\" + pfrom.addr.ToString() : \"\");\r\n+        }\r\n         peer->m_addr_token_timestamp = current_time;\r\n```",
    "created_at": "2021-07-14T09:18:04Z",
    "updated_at": "2021-07-14T09:18:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669439983",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669439983"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669439983"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669439983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2808,
    "original_line": 2808,
    "side": "RIGHT",
    "in_reply_to_id": 668743463
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669448082",
    "pull_request_review_id": 706054718,
    "id": 669448082,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTQ0ODA4Mg==",
    "diff_hunk": "@@ -2777,11 +2798,40 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\n+        uint64_t num_proc = 0, num_rate_limit = 0;\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\n+            if (rate_limited && vAddr.size() > peer->m_addr_token_bucket) {\n+                num_rate_limit = (uint64_t)std::ceil(vAddr.size() - peer->m_addr_token_bucket);\n+                LogPrint(BCLog::NET, \"Rate limiting %u of %u addresses from a message from peer=%d%s\\n\",\n+                         pfrom.GetId(),\n+                         num_rate_limit,\n+                         vAddr.size(),\n+                         fLogIPs ? \", peeraddr=\" + pfrom.addr.ToString() : \"\");\n+            }",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 70,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "759c3d4d28874ea6c0b97ad910635d7858d41884",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think instead of making this calculation up here and logging, it'd be clearer just to use a counter in the loop below and then log in the same place that the statistics are updated. That way, if the logic for address processing changes, then the logging will automatically be consistent with the true values and the statistics:\r\n\r\n```diff\r\n             const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\r\n             const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\r\n             peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\r\n-            if (rate_limited && vAddr.size() > peer->m_addr_token_bucket) {\r\n-                num_rate_limit = (uint64_t)std::ceil(vAddr.size() - peer->m_addr_token_bucket);\r\n-                LogPrint(BCLog::NET, \"Rate limiting %u of %u addresses from a message from peer=%d%s\\n\",\r\n-                         pfrom.GetId(),\r\n-                         num_rate_limit,\r\n-                         vAddr.size(),\r\n-                         fLogIPs ? \", peeraddr=\" + pfrom.addr.ToString() : \"\");\r\n-            }\r\n         }\r\n         peer->m_addr_token_timestamp = current_time;\r\n \r\n@@ -2828,7 +2820,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\r\n             // Apply rate limiting.\r\n             if (rate_limited) {\r\n                 if (peer->m_addr_token_bucket < 1.0) {\r\n-                    break;\r\n+                    num_rate_limit++;\r\n+                    continue;\r\n                 }\r\n                 peer->m_addr_token_bucket -= 1.0;\r\n             }\r\n@@ -2857,6 +2850,15 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\r\n         }\r\n         peer->m_addr_processed += num_proc;\r\n         peer->m_addr_rate_limited += num_rate_limit;\r\n+        if (num_rate_limit > 0) {\r\n+            // Conditionally log if we rate-limited addresses from this peer.\r\n+            LogPrint(BCLog::NET, \"Received addr: %u addresses (%u processed, %u rate-limited) from peer=%d%s\\n\",\r\n+                     vAddr.size(),\r\n+                     num_proc,\r\n+                     num_rate_limit,\r\n+                     pfrom.GetId(),\r\n+                     fLogIPs ? \", peeraddr=\" + pfrom.addr.ToString() : \"\");\r\n+        }\r\n+\r\n         m_addrman.Add(vAddrOk, pfrom.addr, 2 * 60 * 60);\r\n         if (vAddr.size() < 1000) peer->m_getaddr_sent = false;\r\n         if (pfrom.IsAddrFetchConn()) {\r\n\r\n```\r\n\r\n(we could also log even if no addresses were rate-limited. We already log to `BCLog::NET` at the top of every `ProcessMessage()` call).",
    "created_at": "2021-07-14T09:29:15Z",
    "updated_at": "2021-07-14T10:24:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669448082",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669448082"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669448082"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669448082/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2812,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2818,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669448632",
    "pull_request_review_id": 706054718,
    "id": 669448632,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTQ0ODYzMg==",
    "diff_hunk": "@@ -2777,11 +2798,40 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\n+        uint64_t num_proc = 0, num_rate_limit = 0;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "759c3d4d28874ea6c0b97ad910635d7858d41884",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's generally best to avoid multiple declarations per line: https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#es10-declare-one-name-only-per-declaration.",
    "created_at": "2021-07-14T09:30:01Z",
    "updated_at": "2021-07-14T10:24:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669448632",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669448632"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669448632"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669448632/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2804,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669453482",
    "pull_request_review_id": 706054718,
    "id": 669453482,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTQ1MzQ4Mg==",
    "diff_hunk": "@@ -2795,6 +2845,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                 // Do not process banned/discouraged addresses beyond remembering we received them\n                 continue;\n             }\n+            num_proc++;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 94,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "759c3d4d28874ea6c0b97ad910635d7858d41884",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree with logging the vAddr.size() as well as `num_proc`. I don't have any strong opinion about the name: `addrs_accepted` or `addrs_added` implies that the address has been added to addrman, which is not necessarily the case. `addrs_relayed` is also inaccurate since the address might not actually be relayed. `addrs_processed` seems fine to me.",
    "created_at": "2021-07-14T09:37:05Z",
    "updated_at": "2021-07-14T10:24:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669453482",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669453482"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669453482"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669453482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2848,
    "side": "RIGHT",
    "in_reply_to_id": 669397937
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669485429",
    "pull_request_review_id": 706054718,
    "id": 669485429,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTQ4NTQyOQ==",
    "diff_hunk": "@@ -207,6 +225,69 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_equal(addr_count_0, 0)\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_1 = len(self.nodes[0].getnodeaddresses(0))",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 79,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "759c3d4d28874ea6c0b97ad910635d7858d41884",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Now that you've added addr relay statistics to `getpeerinfo`, you can isolate and observe the (predictable) p2p behaviour, rather than the (stochastic) addrman effects:\r\n\r\n<details>\r\n<summary>Diff</summary>\r\n\r\n```diff\r\n@@ -244,25 +244,55 @@ class AddrTest(BitcoinTestFramework):\r\n             assert_equal(addr_count_0, 0)\r\n \r\n             # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\r\n-            peer.send_and_ping(self.setup_rand_addr_msg(600))\r\n-            addr_count_1 = len(self.nodes[0].getnodeaddresses(0))\r\n-            assert_greater_than_or_equal(tokens, addr_count_1)\r\n-            assert_greater_than_or_equal(addr_count_0 + 600, addr_count_1)\r\n-            assert_equal(addr_count_1 > addr_count_0, tokens > 0)\r\n+            addrs = 600\r\n+            peer.send_and_ping(self.setup_rand_addr_msg(addrs))\r\n+\r\n+            peerinfo_1 = self.nodes[0].getpeerinfo()[0]\r\n+            addrs_processed_1 = peerinfo_1['addr_processed']\r\n+            addrs_rate_limited_1 = peerinfo_1['addr_rate_limited']\r\n+            self.log.info(f\"addrs_processed = {addrs_processed_1}, addrs_rate_limited = {addrs_rate_limited_1}\")\r\n+\r\n+            if not no_relay:\r\n+                assert_equal(addrs_processed_1, min(addrs, tokens))\r\n+                assert_equal(addrs_rate_limited_1, addrs - min(addrs, tokens))\r\n+            else:\r\n+                assert_equal(addrs_processed_1, 0)\r\n+                assert_equal(addrs_rate_limited_1, 0)\r\n \r\n             # Send 600 more addresses. For the outbound-full-relay peer (which sends a GETADDR, and thus will\r\n             # process up to 1001 incoming addresses), this means more entries will appear.\r\n-            peer.send_and_ping(self.setup_rand_addr_msg(600))\r\n-            addr_count_2 = len(self.nodes[0].getnodeaddresses(0))\r\n-            assert_greater_than_or_equal(tokens, addr_count_2)\r\n-            assert_greater_than_or_equal(addr_count_1 + 600, addr_count_2)\r\n-            assert_equal(addr_count_2 > addr_count_1, tokens > 600)\r\n+            new_addrs = 600\r\n+            peer.send_and_ping(self.setup_rand_addr_msg(new_addrs))\r\n+\r\n+            addrs += new_addrs\r\n+            peerinfo_2 = self.nodes[0].getpeerinfo()[0]\r\n+            addrs_processed_2 = peerinfo_2['addr_processed']\r\n+            addrs_rate_limited_2 = peerinfo_2['addr_rate_limited']\r\n+            self.log.info(f\"addrs_processed = {addrs_processed_2}, addrs_rate_limited = {addrs_rate_limited_2}\")\r\n+\r\n+            if not no_relay:\r\n+                assert_equal(addrs_processed_2, min(addrs, tokens))\r\n+                assert_equal(addrs_rate_limited_2, addrs - min(addrs, tokens))\r\n+            else:\r\n+                assert_equal(addrs_processed_2, 0)\r\n+                assert_equal(addrs_rate_limited_2, 0)\r\n\r\n             # Send 10 more. As we reached the processing limit for all nodes, this should have no effect.\r\n-            peer.send_and_ping(self.setup_rand_addr_msg(10))\r\n-            addr_count_3 = len(self.nodes[0].getnodeaddresses(0))\r\n-            assert_greater_than_or_equal(tokens, addr_count_3)\r\n-            assert_equal(addr_count_2, addr_count_3)\r\n+            new_addrs = 10\r\n+            peer.send_and_ping(self.setup_rand_addr_msg(new_addrs))\r\n+\r\n+            addrs += new_addrs\r\n+            peerinfo_3 = self.nodes[0].getpeerinfo()[0]\r\n+            addrs_processed_3 = peerinfo_3['addr_processed']\r\n+            addrs_rate_limited_3 = peerinfo_3['addr_rate_limited']\r\n+            self.log.info(f\"addrs_processed = {addrs_processed_3}, addrs_rate_limited = {addrs_rate_limited_3}\")\r\n+\r\n+            if not no_relay:\r\n+                assert_equal(addrs_processed_3, min(addrs, tokens))\r\n+                assert_equal(addrs_rate_limited_3, addrs - min(addrs, tokens))\r\n+            else:\r\n+                assert_equal(addrs_processed_3, 0)\r\n+                assert_equal(addrs_rate_limited_3, 0)\r\n \r\n             # Advance the time by 100 seconds, permitting the processing of 10 more addresses. Send 200,\r\n             # but verify that no more than 10 are processed.\r\n@@ -270,10 +300,21 @@ class AddrTest(BitcoinTestFramework):\r\n             self.nodes[0].setmocktime(self.mocktime)\r\n             new_tokens = 0 if no_relay else 10\r\n             tokens += new_tokens\r\n-            peer.send_and_ping(self.setup_rand_addr_msg(200))\r\n-            addr_count_4 = len(self.nodes[0].getnodeaddresses(0))\r\n-            assert_greater_than_or_equal(tokens, addr_count_4)\r\n-            assert_greater_than_or_equal(addr_count_3 + new_tokens, addr_count_4)\r\n+            new_addrs = 200\r\n+            peer.send_and_ping(self.setup_rand_addr_msg(new_addrs))\r\n+\r\n+            addrs += new_addrs\r\n+            peerinfo_4 = self.nodes[0].getpeerinfo()[0]\r\n+            addrs_processed_4 = peerinfo_4['addr_processed']\r\n+            addrs_rate_limited_4 = peerinfo_4['addr_rate_limited']\r\n+            self.log.info(f\"addrs_processed = {addrs_processed_4}, addrs_rate_limited = {addrs_rate_limited_4}\")\r\n+\r\n+            if not no_relay:\r\n+                assert_equal(addrs_processed_4, min(addrs, tokens))\r\n+                assert_equal(addrs_rate_limited_4, addrs - min(addrs, tokens))\r\n+            else:\r\n+                assert_equal(addrs_processed_4, 0)\r\n+                assert_equal(addrs_rate_limited_4, 0)\r\n \r\n             # Advance the time by 1000 seconds, permitting the processing of 100 more addresses. Send 200,\r\n             # but verify that no more than 100 are processed (and at least some).\r\n@@ -281,11 +322,21 @@ class AddrTest(BitcoinTestFramework):\r\n             self.nodes[0].setmocktime(self.mocktime)\r\n             new_tokens = 0 if no_relay else 100\r\n             tokens += new_tokens\r\n-            peer.send_and_ping(self.setup_rand_addr_msg(200))\r\n-            addr_count_5 = len(self.nodes[0].getnodeaddresses(0))\r\n-            assert_greater_than_or_equal(tokens, addr_count_5)\r\n-            assert_greater_than_or_equal(addr_count_4 + new_tokens, addr_count_5)\r\n-            assert_equal(addr_count_5 > addr_count_4, not no_relay)\r\n+            new_addrs = 200\r\n+            peer.send_and_ping(self.setup_rand_addr_msg(new_addrs))\r\n+\r\n+            addrs += new_addrs\r\n+            peerinfo_5 = self.nodes[0].getpeerinfo()[0]\r\n+            addrs_processed_5 = peerinfo_5['addr_processed']\r\n+            addrs_rate_limited_5 = peerinfo_5['addr_rate_limited']\r\n+            self.log.info(f\"addrs_processed = {addrs_processed_5}, addrs_rate_limited = {addrs_rate_limited_5}\")\r\n+\r\n+            if not no_relay:\r\n+                assert_equal(addrs_processed_5, min(addrs, tokens))\r\n+                assert_equal(addrs_rate_limited_5, addrs - min(addrs, tokens))\r\n+            else:\r\n+                assert_equal(addrs_processed_5, 0)\r\n+                assert_equal(addrs_rate_limited_5, 0)\r\n \r\n             self.nodes[0].disconnect_p2ps()\r\n```\r\n</details>\r\n\r\n(Obviously, there's a lot of duplicate code above that can be factored out into a `send_and_test()` routine.)",
    "created_at": "2021-07-14T10:23:25Z",
    "updated_at": "2021-07-14T10:24:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669485429",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669485429"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669485429"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669485429/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 248,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669784245",
    "pull_request_review_id": 706500330,
    "id": 669784245,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTc4NDI0NQ==",
    "diff_hunk": "@@ -2795,6 +2845,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n                 // Do not process banned/discouraged addresses beyond remembering we received them\n                 continue;\n             }\n+            num_proc++;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 94,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "759c3d4d28874ea6c0b97ad910635d7858d41884",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@vasild I removed the \"!peer->m_getaddr_sent\" because it doesn't work reliably. If we receive a randomly relayed addr before receiving the response to GETADDR, the getaddr response will still be counted (and I see that happen fairly regularly).",
    "created_at": "2021-07-14T16:45:18Z",
    "updated_at": "2021-07-14T16:45:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669784245",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669784245"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669784245"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669784245/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2848,
    "side": "RIGHT",
    "in_reply_to_id": 669397937
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669883193",
    "pull_request_review_id": 706628732,
    "id": 669883193,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTg4MzE5Mw==",
    "diff_hunk": "@@ -2777,11 +2798,34 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n+        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\n+        uint64_t num_proc = 0, num_rate_limit = 0;\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n                 return;\n \n+            // Apply rate limiting.\n+            if (rate_limited) {\n+                if (peer->m_addr_token_bucket < 1.0) {\n+                    LogPrint(BCLog::NET, \"Rate limiting an address message from peer=%d\\n\", pfrom.GetId());\n+                    num_rate_limit++;\n+                    continue;\n+                }",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "df1ddf8f085a1db31dd1bd420e5e1a5a7fc301b0",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This has been reverted by using your suggestion below.",
    "created_at": "2021-07-14T19:12:40Z",
    "updated_at": "2021-07-14T19:12:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669883193",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669883193"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669883193"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669883193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2822,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2826,
    "side": "RIGHT",
    "in_reply_to_id": 668733056
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669883402",
    "pull_request_review_id": 706629009,
    "id": 669883402,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTg4MzQwMg==",
    "diff_hunk": "@@ -2777,11 +2798,34 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);",
    "path": "src/net_processing.cpp",
    "position": 60,
    "original_position": 60,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "df1ddf8f085a1db31dd1bd420e5e1a5a7fc301b0",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done, and moved using @jnewbery's suggestion below.",
    "created_at": "2021-07-14T19:12:59Z",
    "updated_at": "2021-07-14T19:12:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669883402",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669883402"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669883402"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669883402/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2808,
    "original_line": 2808,
    "side": "RIGHT",
    "in_reply_to_id": 668743463
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669883764",
    "pull_request_review_id": 706629491,
    "id": 669883764,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTg4Mzc2NA==",
    "diff_hunk": "@@ -2777,11 +2798,40 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\n+        uint64_t num_proc = 0, num_rate_limit = 0;\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\n+            if (rate_limited && vAddr.size() > peer->m_addr_token_bucket) {\n+                num_rate_limit = (uint64_t)std::ceil(vAddr.size() - peer->m_addr_token_bucket);\n+                LogPrint(BCLog::NET, \"Rate limiting %u of %u addresses from a message from peer=%d%s\\n\",\n+                         pfrom.GetId(),\n+                         num_rate_limit,\n+                         vAddr.size(),\n+                         fLogIPs ? \", peeraddr=\" + pfrom.addr.ToString() : \"\");\n+            }",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 70,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "759c3d4d28874ea6c0b97ad910635d7858d41884",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That's a lot cleaner; done (and made it unconditional).",
    "created_at": "2021-07-14T19:13:37Z",
    "updated_at": "2021-07-14T19:13:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669883764",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669883764"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669883764"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669883764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2812,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2818,
    "side": "RIGHT",
    "in_reply_to_id": 669448082
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669883932",
    "pull_request_review_id": 706629769,
    "id": 669883932,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTg4MzkzMg==",
    "diff_hunk": "@@ -207,6 +225,69 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_equal(addr_count_0, 0)\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_1 = len(self.nodes[0].getnodeaddresses(0))",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 79,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "759c3d4d28874ea6c0b97ad910635d7858d41884",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added as a separate commit.",
    "created_at": "2021-07-14T19:13:57Z",
    "updated_at": "2021-07-14T19:13:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669883932",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669883932"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669883932"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669883932/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 248,
    "side": "RIGHT",
    "in_reply_to_id": 669485429
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669885542",
    "pull_request_review_id": 706631817,
    "id": 669885542,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTg4NTU0Mg==",
    "diff_hunk": "@@ -2777,11 +2798,40 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\n+        uint64_t num_proc = 0, num_rate_limit = 0;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "759c3d4d28874ea6c0b97ad910635d7858d41884",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Gone.",
    "created_at": "2021-07-14T19:16:36Z",
    "updated_at": "2021-07-14T19:16:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669885542",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669885542"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669885542"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669885542/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2804,
    "side": "RIGHT",
    "in_reply_to_id": 669448632
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669885704",
    "pull_request_review_id": 706632063,
    "id": 669885704,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTg4NTcwNA==",
    "diff_hunk": "@@ -208,6 +225,69 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 46,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "dc8a1863f30b5944490cdbaa3271afbf8cd6da9a",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-07-14T19:16:56Z",
    "updated_at": "2021-07-14T19:16:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669885704",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669885704"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r669885704"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669885704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 231,
    "side": "RIGHT",
    "in_reply_to_id": 665631239
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670219126",
    "pull_request_review_id": 707032297,
    "id": 670219126,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MDIxOTEyNg==",
    "diff_hunk": "@@ -207,6 +222,110 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info(f'Test rate limiting of addr processing for {contype} peers')\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_equal(addr_count_0, 0)\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\n+            addrs = 600\n+            peer.send_and_ping(self.setup_rand_addr_msg(addrs))\n+            peerinfo_1 = self.nodes[0].getpeerinfo()[0]\n+            addrs_processed_1 = peerinfo_1['addr_processed']\n+            addrs_rate_limited_1 = peerinfo_1['addr_rate_limited']\n+            self.log.info(f\"addrs_processed = {addrs_processed_1}, addrs_rate_limited = {addrs_rate_limited_1}\")\n+            if not no_relay:\n+                assert_equal(addrs_processed_1, min(addrs, tokens))\n+                assert_equal(addrs_rate_limited_1, addrs - min(addrs, tokens))\n+            else:\n+                assert_equal(addrs_processed_1, 0)\n+                assert_equal(addrs_rate_limited_1, 0)",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 91,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "56c8ca2844fecb980cfdd9a21c881ed0616890d8",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This and similar statements below can be shortened:\r\n```suggestion\r\n            assert_equal(addrs_processed_1, min(addrs, tokens))\r\n            assert_equal(addrs_rate_limited_1, 0 if no_relay else addrs - addrs_processed_1)\r\n```",
    "created_at": "2021-07-15T07:48:01Z",
    "updated_at": "2021-07-15T07:50:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r670219126",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670219126"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r670219126"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670219126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 250,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 255,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670289045",
    "pull_request_review_id": 707124589,
    "id": 670289045,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MDI4OTA0NQ==",
    "diff_hunk": "@@ -245,6 +245,10 @@ struct Peer {\n     double m_addr_token_bucket{1.0};\n     /** When m_addr_token_bucket was last updated */\n     std::chrono::microseconds m_addr_token_timestamp{GetTime<std::chrono::microseconds>()};\n+    /** Total number of addresses processed. */\n+    std::atomic<uint64_t> m_addr_processed{0};",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "023b0c75bb3197b23bd61a795008ce0996a260c9",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: the name \"processed\" is confusing because from the first glance it's unclear whether it includes limited or not",
    "created_at": "2021-07-15T09:19:59Z",
    "updated_at": "2021-07-15T09:19:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r670289045",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670289045"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r670289045"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670289045/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 249,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670867989",
    "pull_request_review_id": 707895392,
    "id": 670867989,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MDg2Nzk4OQ==",
    "diff_hunk": "@@ -208,6 +225,69 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def rate_limit_tests(self):\n+\n+        for contype, tokens, no_relay in [(\"outbound-full-relay\", 1001, False), (\"block-relay-only\", 0, True), (\"inbound\", 1, False)]:\n+            self.log.info('Test rate limiting of addr processing for %s peers' % contype)\n+            self.stop_node(0)\n+            os.remove(os.path.join(self.nodes[0].datadir, \"regtest\", \"peers.dat\"))\n+            self.start_node(0, [])\n+            self.mocktime = int(time.time())\n+            self.nodes[0].setmocktime(self.mocktime)\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+\n+            # Check that we start off with empty addrman\n+            addr_count_0 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_equal(addr_count_0, 0)\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in at least 1 address.\n+            peer.send_and_ping(self.setup_rand_addr_msg(600))\n+            addr_count_1 = len(self.nodes[0].getnodeaddresses(0))\n+            assert_greater_than_or_equal(tokens, addr_count_1)\n+            assert_greater_than_or_equal(addr_count_0 + 600, addr_count_1)\n+            assert_equal(addr_count_1 > addr_count_0, tokens > 0)\n+\n+            # Send 600 more addresses. For the outbound-full-relay peer (which sends a GETADDR, and thus will",
    "path": "test/functional/p2p_addr_relay.py",
    "position": null,
    "original_position": 68,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "f8e51a85ac0c783808fc64179fcc108aad676079",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-07-15T23:30:40Z",
    "updated_at": "2021-07-15T23:30:41Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r670867989",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670867989"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r670867989"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670867989/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 257,
    "side": "RIGHT",
    "in_reply_to_id": 665780690
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670868922",
    "pull_request_review_id": 707896457,
    "id": 670868922,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MDg2ODkyMg==",
    "diff_hunk": "@@ -245,6 +245,10 @@ struct Peer {\n     double m_addr_token_bucket{1.0};\n     /** When m_addr_token_bucket was last updated */\n     std::chrono::microseconds m_addr_token_timestamp{GetTime<std::chrono::microseconds>()};\n+    /** Total number of addresses processed. */\n+    std::atomic<uint64_t> m_addr_processed{0};",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "023b0c75bb3197b23bd61a795008ce0996a260c9",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added more comments.",
    "created_at": "2021-07-15T23:33:32Z",
    "updated_at": "2021-07-15T23:33:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r670868922",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670868922"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r670868922"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/670868922/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 249,
    "side": "RIGHT",
    "in_reply_to_id": 670289045
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/671107215",
    "pull_request_review_id": 708186507,
    "id": 671107215,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTEwNzIxNQ==",
    "diff_hunk": "@@ -42,7 +42,9 @@ def __init__(self):\n         super().__init__(support_addrv2 = True)\n \n     def on_addrv2(self, message):\n-        if ADDRS == message.addrs:\n+        expected_set = set((addr.ip, addr.port) for addr in ADDRS)\n+        received_set = set((addr.ip, addr.port) for addr in message.addrs)",
    "path": "test/functional/p2p_addrv2_relay.py",
    "position": 6,
    "original_position": 6,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Much nicer!",
    "created_at": "2021-07-16T09:33:11Z",
    "updated_at": "2021-07-16T09:35:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r671107215",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/671107215"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r671107215"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/671107215/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 45,
    "original_start_line": 45,
    "start_side": "RIGHT",
    "line": 46,
    "original_line": 46,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/671144448",
    "pull_request_review_id": 708235682,
    "id": 671144448,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTE0NDQ0OA==",
    "diff_hunk": "@@ -207,6 +239,63 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def send_addrs_and_test_rate_limiting(self, peer, no_relay, new_addrs, total_addrs):\n+        \"\"\"Send an addr message and check that the number of addresses processed and rate-limited is as expected\"\"\"\n+\n+        peer.send_and_ping(self.setup_rand_addr_msg(new_addrs))\n+\n+        peerinfo = self.nodes[0].getpeerinfo()[0]\n+        addrs_processed = peerinfo['addr_processed']\n+        addrs_rate_limited = peerinfo['addr_rate_limited']\n+        self.log.debug(f\"addrs_processed = {addrs_processed}, addrs_rate_limited = {addrs_rate_limited}\")\n+\n+        if no_relay:\n+            assert_equal(addrs_processed, 0)\n+            assert_equal(addrs_rate_limited, 0)\n+        else:\n+            assert_equal(addrs_processed, min(total_addrs, peer.tokens))\n+            assert_equal(addrs_rate_limited, max(0, total_addrs - peer.tokens))\n+\n+    def rate_limit_tests(self):\n+\n+        self.mocktime = int(time.time())\n+        self.restart_node(0, [])\n+        self.nodes[0].setmocktime(self.mocktime)\n+\n+        for contype, no_relay in [(\"outbound-full-relay\", False), (\"block-relay-only\", True), (\"inbound\", False)]:\n+            self.log.info(f'Test rate limiting of addr processing for {contype} peers')\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in addresses being processed.\n+            self.send_addrs_and_test_rate_limiting(peer, no_relay, 600, 600)",
    "path": "test/functional/p2p_addr_relay.py",
    "position": 125,
    "original_position": 125,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "a4bcd687c934d47aa3 In the five `send_addrs_and_test_rate_limiting` calls, could use named arguments for these passed integer values.\r\n```suggestion\r\n            self.send_addrs_and_test_rate_limiting(peer, no_relay, new_addrs=600, total_addrs=600)\r\n```",
    "created_at": "2021-07-16T10:36:28Z",
    "updated_at": "2021-07-16T10:40:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r671144448",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/671144448"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r671144448"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/671144448/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 273,
    "original_line": 273,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/672410564",
    "pull_request_review_id": 709697940,
    "id": 672410564,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MjQxMDU2NA==",
    "diff_hunk": "@@ -2777,11 +2798,34 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\n+        uint64_t num_proc = 0;\n+        uint64_t num_rate_limit = 0;\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n                 return;\n \n+            // Apply rate limiting.\n+            if (rate_limited) {\n+                if (peer->m_addr_token_bucket < 1.0) {\n+                    ++num_rate_limit;\n+                    continue;\n+                }\n+                peer->m_addr_token_bucket -= 1.0;\n+            }",
    "path": "src/net_processing.cpp",
    "position": 80,
    "original_position": 80,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is there a reason to increment the bucket when rate limiting is disabled? I presume you want to prepare for the future where permission flags can be changed at runtime? In that case, shouldn't the code here be:\r\n\r\n```cpp\r\n            if (peer->m_addr_token_bucket < 1.0) {\r\n                if (rate_limited) {\r\n                    ++num_rate_limit;\r\n                    continue;\r\n                }\r\n            } else {\r\n                peer->m_addr_token_bucket -= 1.0;\r\n            }",
    "created_at": "2021-07-19T15:36:44Z",
    "updated_at": "2021-07-19T15:57:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r672410564",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/672410564"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r672410564"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/672410564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 2822,
    "original_start_line": 2822,
    "start_side": "RIGHT",
    "line": 2828,
    "original_line": 2828,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/672414835",
    "pull_request_review_id": 709697940,
    "id": 672414835,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MjQxNDgzNQ==",
    "diff_hunk": "@@ -2804,6 +2849,15 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             if (fReachable)\n                 vAddrOk.push_back(addr);\n         }\n+        peer->m_addr_processed += num_proc;\n+        peer->m_addr_rate_limited += num_rate_limit;\n+        LogPrint(BCLog::NET, \"Received addr: %u addresses (%u processed, %u rate-limited) from peer=%d%s\\n\",\n+                 vAddr.size(),\n+                 num_proc,\n+                 num_rate_limit,\n+                 pfrom.GetId(),\n+                 fLogIPs ? \", peeraddr=\" + pfrom.addr.ToString() : \"\");",
    "path": "src/net_processing.cpp",
    "position": 103,
    "original_position": 103,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is there a reason to log the ip address outside of the version handshake? This seems redundant, as the ip shouldn't change afterwards and should be easy to lookup by grepping for the handshake of the peer id.\r\n\r\nOtherwise this encourages to put other redundant stuff (ua-string, ...) into this log messages and other log messages as well.",
    "created_at": "2021-07-19T15:41:47Z",
    "updated_at": "2021-07-19T15:57:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r672414835",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/672414835"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r672414835"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/672414835/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2859,
    "original_line": 2859,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/672417898",
    "pull_request_review_id": 709697940,
    "id": 672417898,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MjQxNzg5OA==",
    "diff_hunk": "@@ -242,6 +242,8 @@ static RPCHelpMan getpeerinfo()\n                 heights.push_back(height);\n             }\n             obj.pushKV(\"inflight\", heights);\n+            obj.pushKV(\"addr_processed\", statestats.m_addr_processed);\n+            obj.pushKV(\"addr_rate_limited\", statestats.m_addr_rate_limited);",
    "path": "src/rpc/net.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "is there a reason to omit this from the documentation?",
    "created_at": "2021-07-19T15:45:28Z",
    "updated_at": "2021-07-19T15:57:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r672417898",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/672417898"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r672417898"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/672417898/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 246,
    "original_line": 246,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/672447534",
    "pull_request_review_id": 709746487,
    "id": 672447534,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MjQ0NzUzNA==",
    "diff_hunk": "@@ -242,6 +242,8 @@ static RPCHelpMan getpeerinfo()\n                 heights.push_back(height);\n             }\n             obj.pushKV(\"inflight\", heights);\n+            obj.pushKV(\"addr_processed\", statestats.m_addr_processed);\n+            obj.pushKV(\"addr_rate_limited\", statestats.m_addr_rate_limited);",
    "path": "src/rpc/net.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "can use the descriptions in a5cc9e28f9e125a62168dcbe0b3484d098e56c1f if so inclined",
    "created_at": "2021-07-19T16:22:40Z",
    "updated_at": "2021-07-19T16:22:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r672447534",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/672447534"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r672447534"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/672447534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 246,
    "original_line": 246,
    "side": "RIGHT",
    "in_reply_to_id": 672417898
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681037829",
    "pull_request_review_id": 720292568,
    "id": 681037829,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MTAzNzgyOQ==",
    "diff_hunk": "@@ -2777,11 +2798,34 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         std::vector<CAddress> vAddrOk;\n         int64_t nNow = GetAdjustedTime();\n         int64_t nSince = nNow - 10 * 60;\n+\n+        // Update/increment addr rate limiting bucket.\n+        const auto current_time = GetTime<std::chrono::microseconds>();\n+        if (peer->m_addr_token_bucket < MAX_ADDR_PROCESSING_TOKEN_BUCKET) {\n+            // Don't increment bucket if it's already full\n+            const auto time_diff = std::max(current_time - peer->m_addr_token_timestamp, 0us);\n+            const double increment = CountSecondsDouble(time_diff) * MAX_ADDR_RATE_PER_SECOND;\n+            peer->m_addr_token_bucket = std::min<double>(peer->m_addr_token_bucket + increment, MAX_ADDR_PROCESSING_TOKEN_BUCKET);\n+        }\n+        peer->m_addr_token_timestamp = current_time;\n+\n+        const bool rate_limited = !pfrom.HasPermission(NetPermissionFlags::Addr);\n+        uint64_t num_proc = 0;\n+        uint64_t num_rate_limit = 0;\n+        Shuffle(vAddr.begin(), vAddr.end(), FastRandomContext());\n         for (CAddress& addr : vAddr)\n         {\n             if (interruptMsgProc)\n                 return;\n \n+            // Apply rate limiting.\n+            if (rate_limited) {\n+                if (peer->m_addr_token_bucket < 1.0) {\n+                    ++num_rate_limit;\n+                    continue;\n+                }\n+                peer->m_addr_token_bucket -= 1.0;\n+            }",
    "path": "src/net_processing.cpp",
    "position": 80,
    "original_position": 80,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Proposed in #22604.",
    "created_at": "2021-08-02T14:50:42Z",
    "updated_at": "2021-08-02T14:50:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r681037829",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681037829"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r681037829"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681037829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 2822,
    "original_start_line": 2822,
    "start_side": "RIGHT",
    "line": 2828,
    "original_line": 2828,
    "side": "RIGHT",
    "in_reply_to_id": 672410564
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681038307",
    "pull_request_review_id": 720293170,
    "id": 681038307,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MTAzODMwNw==",
    "diff_hunk": "@@ -233,6 +240,11 @@ struct Peer {\n     std::atomic_bool m_wants_addrv2{false};\n     /** Whether this peer has already sent us a getaddr message. */\n     bool m_getaddr_recvd{false};\n+    /** Number of addr messages that can be processed from this peer. Start at 1 to",
    "path": "src/net_processing.cpp",
    "position": 18,
    "original_position": 18,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "4291de17e9de183d1433d96047bbe135fd0821ef",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Proposed \"addresses\" in #22604.",
    "created_at": "2021-08-02T14:51:14Z",
    "updated_at": "2021-08-02T14:51:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r681038307",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681038307"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r681038307"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681038307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 243,
    "original_line": 243,
    "side": "RIGHT",
    "in_reply_to_id": 665882202
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681038622",
    "pull_request_review_id": 720293622,
    "id": 681038622,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MTAzODYyMg==",
    "diff_hunk": "@@ -242,6 +242,8 @@ static RPCHelpMan getpeerinfo()\n                 heights.push_back(height);\n             }\n             obj.pushKV(\"inflight\", heights);\n+            obj.pushKV(\"addr_processed\", statestats.m_addr_processed);\n+            obj.pushKV(\"addr_rate_limited\", statestats.m_addr_rate_limited);",
    "path": "src/rpc/net.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "helps added in #22604.",
    "created_at": "2021-08-02T14:51:42Z",
    "updated_at": "2021-08-02T14:51:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r681038622",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681038622"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r681038622"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681038622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 246,
    "original_line": 246,
    "side": "RIGHT",
    "in_reply_to_id": 672417898
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681038735",
    "pull_request_review_id": 720293750,
    "id": 681038735,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MTAzODczNQ==",
    "diff_hunk": "@@ -2804,6 +2849,15 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             if (fReachable)\n                 vAddrOk.push_back(addr);\n         }\n+        peer->m_addr_processed += num_proc;\n+        peer->m_addr_rate_limited += num_rate_limit;\n+        LogPrint(BCLog::NET, \"Received addr: %u addresses (%u processed, %u rate-limited) from peer=%d%s\\n\",\n+                 vAddr.size(),\n+                 num_proc,\n+                 num_rate_limit,\n+                 pfrom.GetId(),\n+                 fLogIPs ? \", peeraddr=\" + pfrom.addr.ToString() : \"\");",
    "path": "src/net_processing.cpp",
    "position": 103,
    "original_position": 103,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Proposed in #22604.",
    "created_at": "2021-08-02T14:51:49Z",
    "updated_at": "2021-08-02T14:51:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r681038735",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681038735"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r681038735"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681038735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2859,
    "original_line": 2859,
    "side": "RIGHT",
    "in_reply_to_id": 672414835
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681038906",
    "pull_request_review_id": 720293959,
    "id": 681038906,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MTAzODkwNg==",
    "diff_hunk": "@@ -207,6 +239,63 @@ def blocksonly_mode_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def send_addrs_and_test_rate_limiting(self, peer, no_relay, new_addrs, total_addrs):\n+        \"\"\"Send an addr message and check that the number of addresses processed and rate-limited is as expected\"\"\"\n+\n+        peer.send_and_ping(self.setup_rand_addr_msg(new_addrs))\n+\n+        peerinfo = self.nodes[0].getpeerinfo()[0]\n+        addrs_processed = peerinfo['addr_processed']\n+        addrs_rate_limited = peerinfo['addr_rate_limited']\n+        self.log.debug(f\"addrs_processed = {addrs_processed}, addrs_rate_limited = {addrs_rate_limited}\")\n+\n+        if no_relay:\n+            assert_equal(addrs_processed, 0)\n+            assert_equal(addrs_rate_limited, 0)\n+        else:\n+            assert_equal(addrs_processed, min(total_addrs, peer.tokens))\n+            assert_equal(addrs_rate_limited, max(0, total_addrs - peer.tokens))\n+\n+    def rate_limit_tests(self):\n+\n+        self.mocktime = int(time.time())\n+        self.restart_node(0, [])\n+        self.nodes[0].setmocktime(self.mocktime)\n+\n+        for contype, no_relay in [(\"outbound-full-relay\", False), (\"block-relay-only\", True), (\"inbound\", False)]:\n+            self.log.info(f'Test rate limiting of addr processing for {contype} peers')\n+            if contype == \"inbound\":\n+                peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+            else:\n+                peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=contype)\n+\n+            # Send 600 addresses. For all but the block-relay-only peer this should result in addresses being processed.\n+            self.send_addrs_and_test_rate_limiting(peer, no_relay, 600, 600)",
    "path": "test/functional/p2p_addr_relay.py",
    "position": 125,
    "original_position": 125,
    "commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "original_commit_id": "a4bcd687c934d47aa3922334e97e579caf5f8124",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Proposed in #22604.",
    "created_at": "2021-08-02T14:52:01Z",
    "updated_at": "2021-08-02T14:52:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r681038906",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681038906"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22387#discussion_r681038906"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22387"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/681038906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 273,
    "original_line": 273,
    "side": "RIGHT",
    "in_reply_to_id": 671144448
  }
]