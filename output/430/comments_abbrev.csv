jgarzik,2011-07-26T01:46:03Z,"ACK, looks pretty good to me\n",https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1650959,1650959,
sipa,2011-07-26T09:17:04Z,"ACK, with one remark: if the output buffer of the base64 decoder is 1024 bytes, it supports inputs up to 1365 character (not 512). Maybe a smaller buffer suffices?\n",https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1652756,1652756,
JoelKatz,2011-07-26T09:39:51Z,"Yeah, a smaller buffer or a better test. I was originally going to make the caller pass it a buffer to avoid having to allocate a std:string to return and to permit it to support any length, but it didn't seem worth it since it's only called once per RPC call.\n",https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1652872,1652872,
JoelKatz,2011-07-26T09:52:41Z,"I tried to amend that change without messing up the tree, but my git-fu was insufficient. If I try to revert the original patch, it conflicts in util.h, and I can't find the right way to merge the fix with the revert. And I don't want to clutter the tree with two commits, no with a commit/revert/commit.\n",https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1652938,1652938,
sipa,2011-07-26T09:58:51Z,"Make a new commit in which you fix whatever you want to fix. Then, run git ""rebase -i upstream/master"", it will show you a list of commits from current master to your HEAD. Modify the line with the fix in it to be ""fixup"", and possibly move it up if it should not be squashed together with the latest commit.\n",https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1652966,1652966,
JoelKatz,2011-07-26T10:21:36Z,"Thanks. I shrunk the buffer and cleaned up some spacing/indentation issues to better match bitcoin style. I couldn't quite figure out how to get it to squash into the commit that added that code in the first place, but I think I did manage to merge it as a fixup.\n",https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1653064,1653064,
TheBlueMatt,2011-07-26T11:21:14Z,"Looks good, though why is strRPCUser and strRPCPass defined in util and initialized in init?\nCould it not be defined and initialized in rpc.cpp so that it doesnt have to be yet another global?\n",https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1653349,1653349,
gavinandresen,2011-07-26T22:02:37Z,"I agree with Matt, strRPCUser/Pass don't belong in util.h.\n\nHow much of a speed-up do each of these changes get?  (first rule of optimization: measure speed before and after every single change, I can't count the number of times I made a change that ""must"" make code faster that didn't).\n",https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1658405,1658405,
JoelKatz,2011-07-26T23:19:28Z,"strRPCUser/strRPCPass makes a 'getwork' RPC request about 2% faster alone. However, the improvement is only so small because there are so many other performance disasters in that code path (once you knock those down, it's about 9%). It's true that this specific optimization doesn't help the mainline code very much only because the mainline's RPC and JSON code is so poor.\n\nBut those changes are c",https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1659993,1659993,
gavinandresen,2011-07-27T01:47:26Z,"Can you avoid using words like ""disaster"" when you mean ""not optimized for what I want to use it for"" ?\n\nSorry for sounding grumpy, but I'm grumpy. Adding 100+ more lines of code for a speedup that nobody but mining pool operators will notice is not a good tradeoff in my mind, because we're having enough trouble making sure the code we already have works properly in all cases.\n",https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1660644,1660644,
JoelKatz,2011-07-27T05:39:22Z,"I think the truth is somewhere between ""disaster"" and ""not optimized for what I want to use it for"".\n\nI agree that there aren't that many mining pool operators, but they have a disproprtionate impact on the way the network operates because they are the most likely to choose what transactions get into blocks, which chains to extend, and so on. I think it benefits the safety and stability of the s",https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1661397,1661397,
sipa,2011-07-28T11:21:57Z,"Specific opinions regarding the different commits:\n- Fix UNIX-specific thread handle leak: this is a bugfix, should be merged\n- Optimize RPC user/pass lookups: if such a simple change can cause a 2% speedup, i have no objections to merging. I agree it doesn't belong in util but in rpc.\n- Faster Base64 decoder: using inline code vs. using a library is always a controversial issue, but this is si",https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1671777,1671777,
jgarzik,2011-08-04T19:24:11Z,Merged the bug fix\n,https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1729895,1729895,
gavinandresen,2011-08-09T15:41:45Z,RPC user/pass is a 2% speedup-- what's the speedup of the other 2 patches?\n,https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1764410,1764410,
JoelKatz,2011-08-11T02:57:00Z,"I'll have to track down those results, but they're greater than 2% -- the RPC user/pass cache was the smallest of the improvements. (Note that these are percentages in the specific case where you're hammering the code with 'getwork' requests. They shouldn't make any other workloads worse though.)\n",https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1778766,1778766,
jgarzik,2011-08-11T03:33:14Z,"I've definitely been pushing for patches that serve the mining community.  It is a numerically small set of nodes, but very impactful and important for the communal integrity of our network, IMHO.  Lacking any better solution, we should look seriously at applying patchsets being universally adopted by mining pool operators.\n",https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1778951,1778951,
alexwaters,2011-08-29T13:18:54Z,"I was hoping this thread had to do with optimizing the load time of the GUI. On windows 7 x64 it takes a minimum of 30 seconds on my mining rig. It can take longer than a minute on my laptop, and sometimes doesn't load on either.\n\nThis is a major inconvenience when you want to use Bitcoins to pay for a pita at Meze grille. Frustrating enough that people testing out the Bitcoin concept might walk",https://github.com/bitcoin/bitcoin/pull/430#issuecomment-1930387,1930387,
