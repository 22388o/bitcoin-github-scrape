fanquake,2020-07-16 13:00:00,Concept ACK ðŸš€ ,https://github.com/bitcoin/bitcoin/pull/19530#issuecomment-659394609,659394609,
theuni,2020-07-16 20:06:18,"Rebased after #17919 . \n\nAlso added another commit after https://github.com/tpoechtrager/cctools-port/pull/85 was merged upstream to fix lto detection with external clang.",https://github.com/bitcoin/bitcoin/pull/19530#issuecomment-659642591,659642591,
fanquake,2020-07-17 02:44:39,"Checked out this branch at https://github.com/bitcoin/bitcoin/pull/19530/commits/5962522fbcb7b72c269fc271ac4463791a103918 and did a `make -C depends/ -j6 HOST=x86_64-apple-darwin16`. I'm seeing:\n\n```bash\n[ 97%] Building C object genisoimage/CMakeFiles/genisoimage.dir/endian.o\n[ 97%] Building C object genisoimage/CMakeFiles/genisoimage.dir/sha1.o\n[ 97%] Building C object genisoimage/CMake",https://github.com/bitcoin/bitcoin/pull/19530#issuecomment-659802512,659802512,
theuni,2020-07-17 12:53:08,"@fanquake Strange... this is fine locally, and our c-i didn't have any trouble with it either.\n\nIs the problem locally reproducible?",https://github.com/bitcoin/bitcoin/pull/19530#issuecomment-660090106,660090106,
theuni,2020-07-17 15:21:48,"For me, builds of ```bitcoind``` and ```bitcoin-qt``` even succeed with lto enabled for dependencies as well with the following hack:\n```diff\ndiff --git a/depends/hosts/darwin.mk b/depends/hosts/darwin.mk\nindex 6099fd4c71..c4180ac2f8 100644\n--- a/depends/hosts/darwin.mk\n+++ b/depends/hosts/darwin.mk\n@@ -28,8 +28,8 @@ OSX_SDK=$(SDK_PATH)/Xcode-$(XCODE_VERSION)-$(XCODE_BUILD_ID)-extracte",https://github.com/bitcoin/bitcoin/pull/19530#issuecomment-660166898,660166898,
DrahtBot,2020-07-18 17:56:02,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit fd59670642f511523570607b752ae409b5e04e7d<br>(master) | commit 3fa897a0ef921a446dfb46d929c22038e367b837<br>(master and this pull) |\n|--|--|--|\n| bitcoin-core-linux-0.21-res.yml | [`505c6e4b3d5cb53e...`](https://drahtbot.space/gitian/bitcoin/bitcoin/fd59670642f511523570607b752ae409b5e04e7d/bitcoin-core-linux-0.21-res.yml,https://github.com/bitcoin/bitcoin/pull/19530#issuecomment-660518209,660518209,
fanquake,2020-07-19 07:28:14,"> @fanquake Strange... this is fine locally, and our c-i didn't have any trouble with it either.\n> Is the problem locally reproducible?\n\nYes. Turns out the issue is actually a [change in defaults](https://gcc.gnu.org/gcc-10/porting_to.html) in GCC 10.1. See #19553. In the mean time, I'll retest here with an earlier GCC.",https://github.com/bitcoin/bitcoin/pull/19530#issuecomment-660602029,660602029,
laanwj,2020-07-22 15:13:11,"Concept ACK, even though we don't use LTO for builds currently, if it isn't unnecessary to disable it explicitly in the toolchain, we shouldn't.",https://github.com/bitcoin/bitcoin/pull/19530#issuecomment-662512004,662512004,
theuni,2020-07-23 22:45:40,"Continuing the conversation from #19565:\n> The solution seemed to be to pass -object_path_lto through to ld64. Doing that I end up with a properly generated .dSYM:\n\nI think I understand what's happening here. From the clang docs\n```\n  The default for :option:`-flto` is ""full"", in which the\n  LLVM bitcode is suitable for monolithic Link Time Optimization (LTO), where\n  the linker merg",https://github.com/bitcoin/bitcoin/pull/19530#issuecomment-663268200,663268200,
