[
  {
    "sha": "0103d6434ea9d155259b40575008239a3762d6f7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTAzZDY0MzRlYTlkMTU1MjU5YjQwNTc1MDA4MjM5YTM3NjJkNmY3",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-28T21:26:18Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-07-29T16:28:30Z"
      },
      "message": "Introduce DummyDatabase and use it in the tests",
      "tree": {
        "sha": "4767072ead340fa78e1a21b2b4b3c3d06e3db8d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4767072ead340fa78e1a21b2b4b3c3d06e3db8d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0103d6434ea9d155259b40575008239a3762d6f7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0103d6434ea9d155259b40575008239a3762d6f7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0103d6434ea9d155259b40575008239a3762d6f7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0103d6434ea9d155259b40575008239a3762d6f7/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8db23349fe9b512e6801d59d17052c5a7a1c64df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8db23349fe9b512e6801d59d17052c5a7a1c64df",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8db23349fe9b512e6801d59d17052c5a7a1c64df"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 42,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0afaba5fd17fcea3ed274d8c9de30f9acb27c1f2",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0103d6434ea9d155259b40575008239a3762d6f7/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0103d6434ea9d155259b40575008239a3762d6f7/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=0103d6434ea9d155259b40575008239a3762d6f7",
        "patch": "@@ -9,6 +9,7 @@\n #include <clientversion.h>\n #include <fs.h>\n #include <streams.h>\n+#include <util/memory.h>\n \n #include <atomic>\n #include <memory>\n@@ -154,4 +155,44 @@ class WalletDatabase\n     virtual std::unique_ptr<DatabaseBatch> MakeBatch(const char* mode = \"r+\", bool flush_on_close = true) = 0;\n };\n \n+/** RAII class that provides access to a DummyDatabase. Never fails. */\n+class DummyBatch : public DatabaseBatch\n+{\n+private:\n+    bool ReadKey(CDataStream&& key, CDataStream& value) override { return true; }\n+    bool WriteKey(CDataStream&& key, CDataStream&& value, bool overwrite=true) override { return true; }\n+    bool EraseKey(CDataStream&& key) override { return true; }\n+    bool HasKey(CDataStream&& key) override { return true; }\n+\n+public:\n+    void Flush() override {}\n+    void Close() override {}\n+\n+    bool StartCursor() override { return true; }\n+    bool ReadAtCursor(CDataStream& ssKey, CDataStream& ssValue, bool& complete) override { return true; }\n+    void CloseCursor() override {}\n+    bool TxnBegin() override { return true; }\n+    bool TxnCommit() override { return true; }\n+    bool TxnAbort() override { return true; }\n+};\n+\n+/** A dummy WalletDatabase that does nothing and never fails. Only used by unit tests.\n+ **/\n+class DummyDatabase : public WalletDatabase\n+{\n+public:\n+    void Open(const char* mode) override {};\n+    void AddRef() override {}\n+    void RemoveRef() override {}\n+    bool Rewrite(const char* pszSkip=nullptr) override { return true; }\n+    bool Backup(const std::string& strDest) const override { return true; }\n+    void Close() override {}\n+    void Flush() override {}\n+    bool PeriodicFlush() override { return true; }\n+    void IncrementUpdateCounter() override { ++nUpdateCounter; }\n+    void ReloadDbEnv() override {}\n+    bool Verify(bilingual_str& errorStr) override { return true; }\n+    std::unique_ptr<DatabaseBatch> MakeBatch(const char* mode = \"r+\", bool flush_on_close = true) override { return MakeUnique<DummyBatch>(); }\n+};\n+\n #endif // BITCOIN_WALLET_DB_H"
      },
      {
        "sha": "a6d327994bd5a095c235e0277deca41f094f76ad",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0103d6434ea9d155259b40575008239a3762d6f7/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0103d6434ea9d155259b40575008239a3762d6f7/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=0103d6434ea9d155259b40575008239a3762d6f7",
        "patch": "@@ -1021,7 +1021,7 @@ std::unique_ptr<WalletDatabase> CreateWalletDatabase(const fs::path& path)\n /** Return object for accessing dummy database with no read/write capabilities. */\n std::unique_ptr<WalletDatabase> CreateDummyWalletDatabase()\n {\n-    return MakeUnique<BerkeleyDatabase>();\n+    return MakeUnique<DummyDatabase>();\n }\n \n /** Return object for accessing temporary in-memory database. */"
      }
    ]
  },
  {
    "sha": "da039d2a915097c23f2b46e063042409bdc3c4f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTAzOWQyYTkxNTA5N2MyM2YyYjQ2ZTA2MzA0MjQwOWJkYzNjNGY0",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-05-28T21:30:50Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-07-29T16:30:23Z"
      },
      "message": "Remove BDB dummy databases",
      "tree": {
        "sha": "bb5d0c259810e2093c6e787ab65b5b01e893b55e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb5d0c259810e2093c6e787ab65b5b01e893b55e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da039d2a915097c23f2b46e063042409bdc3c4f4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da039d2a915097c23f2b46e063042409bdc3c4f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da039d2a915097c23f2b46e063042409bdc3c4f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da039d2a915097c23f2b46e063042409bdc3c4f4/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0103d6434ea9d155259b40575008239a3762d6f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0103d6434ea9d155259b40575008239a3762d6f7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0103d6434ea9d155259b40575008239a3762d6f7"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 4,
      "deletions": 34
    },
    "files": [
      {
        "sha": "3178a7b47ad1f9ab1ce48da8b5c62694581d7924",
        "filename": "src/wallet/bdb.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 22,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da039d2a915097c23f2b46e063042409bdc3c4f4/src/wallet/bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da039d2a915097c23f2b46e063042409bdc3c4f4/src/wallet/bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.cpp?ref=da039d2a915097c23f2b46e063042409bdc3c4f4",
        "patch": "@@ -337,10 +337,6 @@ BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase& database, const char* pszMode, bo\n \n void BerkeleyDatabase::Open(const char* pszMode)\n {\n-    if (IsDummy()){\n-        return;\n-    }\n-\n     bool fCreate = strchr(pszMode, 'c') != nullptr;\n     unsigned int nFlags = DB_THREAD;\n     if (fCreate)\n@@ -472,9 +468,6 @@ void BerkeleyEnvironment::ReloadDbEnv()\n \n bool BerkeleyDatabase::Rewrite(const char* pszSkip)\n {\n-    if (IsDummy()) {\n-        return true;\n-    }\n     while (true) {\n         {\n             LOCK(cs_db);\n@@ -602,9 +595,6 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n \n bool BerkeleyDatabase::PeriodicFlush()\n {\n-    // There's nothing to do for dummy databases. Return true.\n-    if (IsDummy()) return true;\n-\n     // Don't flush if we can't acquire the lock.\n     TRY_LOCK(cs_db, lockDb);\n     if (!lockDb) return false;\n@@ -632,9 +622,6 @@ bool BerkeleyDatabase::PeriodicFlush()\n \n bool BerkeleyDatabase::Backup(const std::string& strDest) const\n {\n-    if (IsDummy()) {\n-        return false;\n-    }\n     while (true)\n     {\n         {\n@@ -672,23 +659,17 @@ bool BerkeleyDatabase::Backup(const std::string& strDest) const\n \n void BerkeleyDatabase::Flush()\n {\n-    if (!IsDummy()) {\n-        env->Flush(false);\n-    }\n+    env->Flush(false);\n }\n \n void BerkeleyDatabase::Close()\n {\n-    if (!IsDummy()) {\n-        env->Flush(true);\n-    }\n+    env->Flush(true);\n }\n \n void BerkeleyDatabase::ReloadDbEnv()\n {\n-    if (!IsDummy()) {\n-        env->ReloadDbEnv();\n-    }\n+    env->ReloadDbEnv();\n }\n \n bool BerkeleyBatch::StartCursor()"
      },
      {
        "sha": "75546924e83eb0cdbb9e6c5fd687f757f8918e9e",
        "filename": "src/wallet/bdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 12,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da039d2a915097c23f2b46e063042409bdc3c4f4/src/wallet/bdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da039d2a915097c23f2b46e063042409bdc3c4f4/src/wallet/bdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.h?ref=da039d2a915097c23f2b46e063042409bdc3c4f4",
        "patch": "@@ -98,10 +98,7 @@ class BerkeleyBatch;\n class BerkeleyDatabase : public WalletDatabase\n {\n public:\n-    /** Create dummy DB handle */\n-    BerkeleyDatabase() : WalletDatabase(), env(nullptr)\n-    {\n-    }\n+    BerkeleyDatabase() = delete;\n \n     /** Create DB handle to real database */\n     BerkeleyDatabase(std::shared_ptr<BerkeleyEnvironment> env, std::string filename) :\n@@ -166,14 +163,6 @@ class BerkeleyDatabase : public WalletDatabase\n \n     /** Make a BerkeleyBatch connected to this database */\n     std::unique_ptr<DatabaseBatch> MakeBatch(const char* mode = \"r+\", bool flush_on_close = true) override;\n-\n-private:\n-\n-    /** Return whether this database handle is a dummy for testing.\n-     * Only to be used at a low level, application should ideally not care\n-     * about this.\n-     */\n-    bool IsDummy() const { return env == nullptr; }\n };\n \n /** RAII class that provides access to a Berkeley database */"
      }
    ]
  },
  {
    "sha": "0fcff547d5b47822c13104978fda0c486e596526",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZmNmZjU0N2Q1YjQ3ODIyYzEzMTA0OTc4ZmRhMGM0ODZlNTk2NTI2",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-06-18T15:28:39Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-07-29T16:30:24Z"
      },
      "message": "walletdb: Ensure that having no database handle is a failure\n\nPreviously having no database handle could still be considered a success\nwhen BerkeleyDatabase and BerkeleyBatch were used for dummy database\nthings. With dedicated DummyDatabase and DummyBatch classes now, these\nshould fail.",
      "tree": {
        "sha": "79da9cbc24f2b0541849bb0867a3e6bc60b20e43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/79da9cbc24f2b0541849bb0867a3e6bc60b20e43"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0fcff547d5b47822c13104978fda0c486e596526",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fcff547d5b47822c13104978fda0c486e596526",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0fcff547d5b47822c13104978fda0c486e596526",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fcff547d5b47822c13104978fda0c486e596526/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da039d2a915097c23f2b46e063042409bdc3c4f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da039d2a915097c23f2b46e063042409bdc3c4f4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da039d2a915097c23f2b46e063042409bdc3c4f4"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a04311fdf5cc76ec30cd020869b5a62ab806011c",
        "filename": "src/wallet/bdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0fcff547d5b47822c13104978fda0c486e596526/src/wallet/bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0fcff547d5b47822c13104978fda0c486e596526/src/wallet/bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.cpp?ref=0fcff547d5b47822c13104978fda0c486e596526",
        "patch": "@@ -767,7 +767,7 @@ bool BerkeleyBatch::ReadKey(CDataStream&& key, CDataStream& value)\n bool BerkeleyBatch::WriteKey(CDataStream&& key, CDataStream&& value, bool overwrite)\n {\n     if (!pdb)\n-        return true;\n+        return false;\n     if (fReadOnly)\n         assert(!\"Write called on database in read-only mode\");\n "
      }
    ]
  }
]