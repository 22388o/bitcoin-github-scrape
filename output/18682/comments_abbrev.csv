laanwj,2020-04-17 12:27:01,"It's kind of bizarre that we're calling private functions in the first placeâ€”there's no guarantee they keep existing at all or with the same signature which we hard-code here.\nI guess the only reason that this is acceptable is because this is not production code but only a fuzzer.\nThanks for the workaround anyhow, this makes sure xenial with libevent 2.0.21 can compile the fuzzers.\n(though I",https://github.com/bitcoin/bitcoin/pull/18682#issuecomment-615216308,615216308,
MarcoFalke,2020-04-17 15:40:39,"Travis fails, so this can't be merged in its current form",https://github.com/bitcoin/bitcoin/pull/18682#issuecomment-615316447,615316447,
theStack,2020-04-17 16:19:28,"> \n> \n> Travis fails, so this can't be merged in its current form\n\nMy fault, I used an internal define from `event-config.h` for checking the version (named differently later) instead of `LIBEVENT_VERSION_NUMBER` that is defined in `event.h`. Force-pushed.",https://github.com/bitcoin/bitcoin/pull/18682#issuecomment-615337409,615337409,
theStack,2020-04-17 18:51:14,"Travis still fails in two instances due to functional tests not passing, (obviously) unrelated to this change.",https://github.com/bitcoin/bitcoin/pull/18682#issuecomment-615407429,615407429,
hebasto,2020-04-17 18:52:58,"> Travis still fails in two instances due to functional tests not passing, (obviously) unrelated to this change.\n\nRestarted.",https://github.com/bitcoin/bitcoin/pull/18682#issuecomment-615408179,615408179,
MarcoFalke,2020-04-17 13:22:15,cc @practicalswift Can this fuzzer be adjusted to remove `evhttp_parse_firstline_`?,https://github.com/bitcoin/bitcoin/pull/18682#discussion_r410218023,410218023,src/test/fuzz/http_request.cpp
practicalswift,2020-04-17 14:27:56,"Not that I know of but if someone can come up with a less ""bizarre"" solution than the one I wrote that would be awesome :)  We should avoid calling private functions if possible.",https://github.com/bitcoin/bitcoin/pull/18682#discussion_r410260143,410260143,src/test/fuzz/http_request.cpp
laanwj,2020-04-17 15:08:17,"I think ideally, fuzzing libevent's internals belongs in libevent and not in our code. But I don't think it's a big problem to have it like this.",https://github.com/bitcoin/bitcoin/pull/18682#discussion_r410286038,410286038,src/test/fuzz/http_request.cpp
practicalswift,2020-04-17 15:16:23,"@laanwj Just to clarify: the reason for the calls to the internal functions is not to fuzz libevent's internals but to be able to do `HTTPRequest http_request{evreq, true};` where the `evhttp_request` object is initialized/created in a way resembling the real-world attack surface. Let me know if you can think of a way to do that without calling internal functions - that would be great but I couldn",https://github.com/bitcoin/bitcoin/pull/18682#discussion_r410291162,410291162,src/test/fuzz/http_request.cpp
