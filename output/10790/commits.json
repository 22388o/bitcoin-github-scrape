[
  {
    "sha": "0e0bc80cbc9f17c4562277ca5014990cf0927aad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTBiYzgwY2JjOWYxN2M0NTYyMjc3Y2E1MDE0OTkwY2YwOTI3YWFk",
    "commit": {
      "author": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2017-07-11T03:20:53Z"
      },
      "committer": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2017-07-11T03:45:52Z"
      },
      "message": "Prefer vch.data() over &vch[0]in base58",
      "tree": {
        "sha": "0c97026bd7ec5f228d43ecc6231d65b3e253cff7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c97026bd7ec5f228d43ecc6231d65b3e253cff7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e0bc80cbc9f17c4562277ca5014990cf0927aad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e0bc80cbc9f17c4562277ca5014990cf0927aad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e0bc80cbc9f17c4562277ca5014990cf0927aad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e0bc80cbc9f17c4562277ca5014990cf0927aad/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9edda0c5f5f20bc6b302ad51fa5ec40ed9da184d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9edda0c5f5f20bc6b302ad51fa5ec40ed9da184d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9edda0c5f5f20bc6b302ad51fa5ec40ed9da184d"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "b1233f76d614c5dacbe5fd1f588557984c65bcd2",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e0bc80cbc9f17c4562277ca5014990cf0927aad/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e0bc80cbc9f17c4562277ca5014990cf0927aad/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=0e0bc80cbc9f17c4562277ca5014990cf0927aad",
        "patch": "@@ -110,7 +110,7 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n \n std::string EncodeBase58(const std::vector<unsigned char>& vch)\n {\n-    return EncodeBase58(&vch[0], &vch[0] + vch.size());\n+    return EncodeBase58(vch.data(), vch.data() + vch.size());\n }\n \n bool DecodeBase58(const std::string& str, std::vector<unsigned char>& vchRet)\n@@ -160,7 +160,7 @@ void CBase58Data::SetData(const std::vector<unsigned char>& vchVersionIn, const\n     vchVersion = vchVersionIn;\n     vchData.resize(nSize);\n     if (!vchData.empty())\n-        memcpy(&vchData[0], pdata, nSize);\n+        memcpy(vchData.data(), pdata, nSize);\n }\n \n void CBase58Data::SetData(const std::vector<unsigned char>& vchVersionIn, const unsigned char* pbegin, const unsigned char* pend)\n@@ -180,8 +180,8 @@ bool CBase58Data::SetString(const char* psz, unsigned int nVersionBytes)\n     vchVersion.assign(vchTemp.begin(), vchTemp.begin() + nVersionBytes);\n     vchData.resize(vchTemp.size() - nVersionBytes);\n     if (!vchData.empty())\n-        memcpy(&vchData[0], &vchTemp[nVersionBytes], vchData.size());\n-    memory_cleanse(&vchTemp[0], vchTemp.size());\n+        memcpy(vchData.data(), &vchTemp[nVersionBytes], vchData.size());\n+    memory_cleanse(vchTemp.data(), vchTemp.size());\n     return true;\n }\n \n@@ -262,7 +262,7 @@ CTxDestination CBitcoinAddress::Get() const\n     if (!IsValid())\n         return CNoDestination();\n     uint160 id;\n-    memcpy(&id, &vchData[0], 20);\n+    memcpy(&id, vchData.data(), 20);\n     if (vchVersion == Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS))\n         return CKeyID(id);\n     else if (vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS))\n@@ -276,7 +276,7 @@ bool CBitcoinAddress::GetKeyID(CKeyID& keyID) const\n     if (!IsValid() || vchVersion != Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS))\n         return false;\n     uint160 id;\n-    memcpy(&id, &vchData[0], 20);\n+    memcpy(&id, vchData.data(), 20);\n     keyID = CKeyID(id);\n     return true;\n }"
      },
      {
        "sha": "4de5cc6ce5f9f3e4b8738bfa399743f5a8284b9d",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e0bc80cbc9f17c4562277ca5014990cf0927aad/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e0bc80cbc9f17c4562277ca5014990cf0927aad/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=0e0bc80cbc9f17c4562277ca5014990cf0927aad",
        "patch": "@@ -148,7 +148,7 @@ template<typename K, int Size, CChainParams::Base58Type Type> class CBitcoinExtK\n         K ret;\n         if (vchData.size() == Size) {\n             // If base58 encoded data does not hold an ext key, return a !IsValid() key\n-            ret.Decode(&vchData[0]);\n+            ret.Decode(vchData.data());\n         }\n         return ret;\n     }"
      }
    ]
  }
]