gavinandresen,2011-12-23T16:57:48Z,"Is this really necessary?\n\nAll of the extra information (and more, I believe) is returned in some form or another from the existing ""getmemorypool"" command.\n",https://github.com/bitcoin/bitcoin/pull/721#issuecomment-3262572,3262572,
luke-jr,2011-12-23T16:59:36Z,"Maybe if one wants to do the math externally, making a number of assumptions on data not included... ""getmemorypool"" also has a lot of overhead, while this has basically none.\n",https://github.com/bitcoin/bitcoin/pull/721#issuecomment-3262589,3262589,
jgarzik,2012-01-06T16:44:30Z,"Initial reaction:  IMO not needed / overkill.  It's not the end of the world if we just add a few new fields to 'getinfo', if it is simply additional information you desire.  It is not as if getinfo is somehow resource constrained.\n\nHowever, after thinking a bit more, I think it would be nice to (1) add this getmininginfo, while (2) deleting (not simply deprecating) the mining info in getinfo.\n",https://github.com/bitcoin/bitcoin/pull/721#issuecomment-3387039,3387039,
sipa,2012-01-12T21:16:03Z,"Agree with @jgarzik here: let's clean up getinfo, and create a specific getmininginfo call for those who are interested.\n\nOver what time frame can we remove fields from getinfo?\n",https://github.com/bitcoin/bitcoin/pull/721#issuecomment-3470692,3470692,
jgarzik,2012-01-13T00:43:29Z,"The commit should remove gen/gpl/hps from getinfo, and create getmininginfo, at the same time IMO.\n\nI would ACK that for immediate timeframe.\n",https://github.com/bitcoin/bitcoin/pull/721#issuecomment-3473475,3473475,
luke-jr,2012-01-13T00:52:19Z,Like this?\n,https://github.com/bitcoin/bitcoin/pull/721#issuecomment-3473582,3473582,
jgarzik,2012-01-13T15:50:34Z,"looks great, thanks\n",https://github.com/bitcoin/bitcoin/pull/721#issuecomment-3481510,3481510,
gavinandresen,2011-12-21T19:46:46Z,"I think we should start moving away from the Just Add Another Global Variable style of coding.\n\nHow about:  nPooled as a static member of CTransaction, with a GetNumPooled() public method.\n\nAnd instead of nLastBlockTx/Size, maybe hoist vNewBlock up out of the getwork() method and return vNewBlock.last()->ntransactions/size...\n",https://github.com/bitcoin/bitcoin/pull/721#discussion_r309796,309796,src/main.h
luke-jr,2011-12-21T19:59:59Z,"Doesn't the fact that we even _have_ the transaction (and it's not in a block) imply that it's pooled? Correct me if I'm wrong, but I suspect your ideas for alternatives are inherently much slower, aren't they? If we want to move away from global variables, I think the ""proper"" route is to make an object responsible for managing the mining bits. But right now, all the mining stuff is global...\n",https://github.com/bitcoin/bitcoin/pull/721#discussion_r309827,309827,src/main.h
