droark,2016-12-18T22:07:03Z,Found a small bug affecting Python 3. Will update in a bit.,https://github.com/bitcoin/bitcoin/pull/9373#issuecomment-267850389,267850389,
droark,2016-12-20T01:57:17Z,"Nevermind. It wasn't a bug after all. Once I clarified things (command line foolishness on my behalf), I ran Python 2 and 3 with and without the bytes reversed, then ran *shasum -a 256 bootstrap.dat* each time the bootstrap file was written. The results were the same.\n\nWhile here, I did add a few comments and then did a fixup and rebase.",https://github.com/bitcoin/bitcoin/pull/9373#issuecomment-268132758,268132758,
droark,2016-12-20T23:32:41Z,Added some more documentation updates but seem to have borked my fixup. Will fix it momentarily.,https://github.com/bitcoin/bitcoin/pull/9373#issuecomment-268390166,268390166,
droark,2016-12-21T03:31:29Z,Back to normal. Did a quick sanity check. Everything looks good.,https://github.com/bitcoin/bitcoin/pull/9373#issuecomment-268426163,268426163,
droark,2016-12-31T23:51:00Z,Fixup based on @cdecker feedback.,https://github.com/bitcoin/bitcoin/pull/9373#issuecomment-269886460,269886460,
laanwj,2017-01-05T10:20:00Z,utACK 3c8f63b,https://github.com/bitcoin/bitcoin/pull/9373#issuecomment-270610883,270610883,
cdecker,2016-12-30T14:00:57Z,"Minor nit: the default suggests that the `ip:port` format should be used, while it really is two different options.",https://github.com/bitcoin/bitcoin/pull/9373#discussion_r94229353,94229353,contrib/linearize/README.md
cdecker,2016-12-30T14:03:20Z,Missing closing quote on for `input`.,https://github.com/bitcoin/bitcoin/pull/9373#discussion_r94229485,94229485,contrib/linearize/README.md
cdecker,2016-12-30T14:17:08Z,"The `encode` and `decode` call seem to be unnecessary. Also my highly unscientific test shows that \n```\ns.decode('hex')[::-1].encode('hex')\n```\nis about 5 times faster than the above loop, but may be a bit more confusing.",https://github.com/bitcoin/bitcoin/pull/9373#discussion_r94230390,94230390,contrib/linearize/linearize-data.py
cdecker,2016-12-30T14:24:08Z,"`hexlify(unhexlify(s)[::-1])` is even quicker :wink:\n",https://github.com/bitcoin/bitcoin/pull/9373#discussion_r94230849,94230849,contrib/linearize/linearize-data.py
droark,2016-12-31T19:30:15Z,Thanks! Will fix everything up.,https://github.com/bitcoin/bitcoin/pull/9373#discussion_r94276971,94276971,contrib/linearize/linearize-data.py
droark,2016-12-31T22:09:30Z,"Hello. After playing around with *timeit()*, it looks like the original code and *hexlify(unhexlify(s)[::-1]).decode()* are about the same speed. (*s.decode('hex')[::-1].encode('hex')* doesn't work, and I think it'd return incorrect results anyway.) Can you let me know how you benchmarked everything? As is, I think I'm going to leave this alone.\n\nAs for encode/decode, that has more to do with ",https://github.com/bitcoin/bitcoin/pull/9373#discussion_r94278159,94278159,contrib/linearize/linearize-data.py
cdecker,2017-01-02T10:06:38Z,"Yeah, I noticed too late that the `encode`/`decode` hex variant will not work on Python3. We're probably micro-optimizing here anyway, given that the rest of the code is doing RPC calls :-)",https://github.com/bitcoin/bitcoin/pull/9373#discussion_r94304986,94304986,contrib/linearize/linearize-data.py
