[
  {
    "sha": "11d50a416f8a014fab06b41ca5a1bc852da22ad0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMWQ1MGE0MTZmOGEwMTRmYWIwNmI0MWNhNWExYmM4NTJkYTIyYWQw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-08-02T08:03:30Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-08-02T08:03:30Z"
      },
      "message": "[script] Return early if no valid opcodes found in CountWitnessSigOps(...)\n\nPrior to this commit this was the only place in the codebase where\nGetOp(...) was called without checking the return value.",
      "tree": {
        "sha": "d401fe8550c152a2a1861ee4f6b1d6b1b732dae9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d401fe8550c152a2a1861ee4f6b1d6b1b732dae9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11d50a416f8a014fab06b41ca5a1bc852da22ad0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11d50a416f8a014fab06b41ca5a1bc852da22ad0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/11d50a416f8a014fab06b41ca5a1bc852da22ad0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11d50a416f8a014fab06b41ca5a1bc852da22ad0/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f66c59650527022b4f7abd98ff0a1a4e4741bd34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f66c59650527022b4f7abd98ff0a1a4e4741bd34",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f66c59650527022b4f7abd98ff0a1a4e4741bd34"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "19563452ac16c9e88d660ae38f64e103d697a805",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11d50a416f8a014fab06b41ca5a1bc852da22ad0/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11d50a416f8a014fab06b41ca5a1bc852da22ad0/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=11d50a416f8a014fab06b41ca5a1bc852da22ad0",
        "patch": "@@ -1557,9 +1557,15 @@ size_t CountWitnessSigOps(const CScript& scriptSig, const CScript& scriptPubKey,\n     if (scriptPubKey.IsPayToScriptHash() && scriptSig.IsPushOnly()) {\n         CScript::const_iterator pc = scriptSig.begin();\n         std::vector<unsigned char> data;\n+        bool hasValidOp = false;\n         while (pc < scriptSig.end()) {\n             opcodetype opcode;\n-            scriptSig.GetOp(pc, opcode, data);\n+            if (scriptSig.GetOp(pc, opcode, data)) {\n+                hasValidOp = true;\n+            }\n+        }\n+        if (!hasValidOp) {\n+            return 0;\n         }\n         CScript subscript(data.begin(), data.end());\n         if (subscript.IsWitnessProgram(witnessversion, witnessprogram)) {"
      }
    ]
  }
]