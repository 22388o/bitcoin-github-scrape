DrahtBot,2020-09-30 00:18:21,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18418 (wallet: Increase OUTPUT_GROUP_MAX_ENTRIES to 100 by fjahr)\n* #17526 (Use Single Random Draw In addition to knapsa",https://github.com/bitcoin/bitcoin/pull/20040#issuecomment-701061868,701061868,
instagibbs,2020-10-02 21:22:29,ACK https://github.com/bitcoin/bitcoin/pull/20040/commits/f6b305273910db0e46798d361413a7e878cb45f7,https://github.com/bitcoin/bitcoin/pull/20040#issuecomment-702964010,702964010,
fanquake,2020-10-10 02:22:33,cc @Xekyo ,https://github.com/bitcoin/bitcoin/pull/20040#issuecomment-706470625,706470625,
Xekyo,2020-11-30 21:31:05,Code Review ACK https://github.com/bitcoin/bitcoin/pull/20040/commits/f6b305273910db0e46798d361413a7e878cb45f7,https://github.com/bitcoin/bitcoin/pull/20040#issuecomment-736068730,736068730,
Xekyo,2020-11-30 21:34:06,"Disclaimer:\n@achow101  has walked me throw the PR, I have reviewed it at least twice. I think that the concept makes sense, but I'm not familiar with the wallet code globally and my C++ is somewhat rusty.",https://github.com/bitcoin/bitcoin/pull/20040#issuecomment-736070103,736070103,
achow101,2020-12-09 00:23:54,I've added a commit to rewrite `GroupOutputs` based on the comments left in downstream PR review (https://github.com/bitcoin/bitcoin/pull/17331#discussion_r536209337),https://github.com/bitcoin/bitcoin/pull/20040#issuecomment-741305599,741305599,
achow101,2021-01-28 19:14:23,"@fjahr Since this now has two ACKs, I'm going to leave this as-is for now.",https://github.com/bitcoin/bitcoin/pull/20040#issuecomment-769311295,769311295,
instagibbs,2020-10-02 13:43:54,musing: this constructor only seems useful for tests,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r498830108,498830108,src/wallet/wallet.h
instagibbs,2020-10-02 13:59:03,const,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r498839221,498839221,src/wallet/coinselection.cpp
instagibbs,2020-10-02 13:59:11,const,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r498839303,498839303,src/wallet/coinselection.cpp
instagibbs,2020-10-02 14:08:28,"nit: annotate the new bool\n\nAlso why is this being set to true? I thought that we get more *relaxed* as we fail to select with ""nicer"" coin sets? This seems to make it a tighter criteria?",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r498844850,498844850,src/wallet/wallet.cpp
instagibbs,2020-10-02 14:08:40,nit: annotate the new bool,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r498844979,498844979,src/wallet/wallet.cpp
instagibbs,2020-10-02 14:08:53,yet?,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r498845092,498845092,src/wallet/wallet.cpp
achow101,2020-10-02 16:32:06,"No, it's less restrictive. When it is false, we won't include partial groups. When is true, we do. At least that is the intended behavior.",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r498927088,498927088,src/wallet/wallet.cpp
instagibbs,2020-10-02 16:34:33,"ahhhh, I had ""avoid partial"" in my head for this.",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r498928313,498928313,src/wallet/wallet.cpp
instagibbs,2020-10-02 16:34:51,"so yes, annotation is :ok_hand: because it would have fixed my thought here",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r498928438,498928438,src/wallet/wallet.cpp
achow101,2020-10-02 17:45:25,Done,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r498962378,498962378,src/wallet/coinselection.cpp
achow101,2020-10-02 17:45:29,Done,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r498962401,498962401,src/wallet/coinselection.cpp
achow101,2020-10-02 17:45:35,Annotated,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r498962440,498962440,src/wallet/wallet.cpp
achow101,2020-10-02 17:45:41,Done,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r498962489,498962489,src/wallet/wallet.cpp
achow101,2020-10-02 17:45:46,removed,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r498962524,498962524,src/wallet/wallet.cpp
Xekyo,2020-11-24 22:14:14,"I think I have asked this before, but why can `m_input_bytes` ever be below zero here? Perhaps it would be good to have a comment to explain that.",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r529927059,529927059,src/wallet/coinselection.cpp
Xekyo,2020-11-24 22:21:56,Wouldn't this mean that if you got a tiny and a large UTXO associated with the same address that you would potentially form a OutputGroup with just the large coin? Shouldn't the group rather be ineligible as a whole to avoid the partial spend?,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r529935159,529935159,src/wallet/wallet.cpp
Xekyo,2020-11-24 22:23:56,"I think that this will result in the OutputGroup accepting uneconomic inputs in the case that the recipient is paying the fees. Should we perhaps rather filter by whether the UTXO are uneconomic, but just calculate with the value instead of the effective value for the case of the recipient paying the fees?",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r529937239,529937239,src/wallet/coinselection.cpp
achow101,2020-11-24 22:38:47,`m_input_bytes` is initialized to `-1` to indicate that it hasn't been calculated yet.,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r529952999,529952999,src/wallet/coinselection.cpp
achow101,2020-11-24 22:40:38,This would make the wallet more vulnerable to dust attacks. An attacker could them lock out a user from their funds by sending dust to an already used address.,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r529955040,529955040,src/wallet/wallet.cpp
Xekyo,2020-11-24 22:42:46,"But this is at the point where we calculate the effective value of UTXOs, so we need to know the size. Why would we want to mitigate a missing size here rather than throwing?",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r529957375,529957375,src/wallet/coinselection.cpp
achow101,2020-11-24 22:49:00,"Given that the recipient paying the fees is typically used when sweeping the wallet, I don't think it really matters.",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r529963849,529963849,src/wallet/coinselection.cpp
Xekyo,2020-11-24 22:49:09,"Yeah, I guess dust should get ignored altogether, but at higher fee rates this could in the worst-case even affect a small amount and a slightly larger amount, which should be prohibited by the partial spending restriction.",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r529964003,529964003,src/wallet/wallet.cpp
Xekyo,2020-11-25 19:38:47,"Oh, I didn't realize that it was just used for that. Wouldn't it be much easier to implement that as a ""send everything"": no coin selection, just sum up everything, deduct fees and pay the recipient address that?",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r530604074,530604074,src/wallet/coinselection.cpp
achow101,2020-11-25 19:41:03,"That's the most common use case I think, but not the only one.",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r530605164,530605164,src/wallet/coinselection.cpp
achow101,2020-11-30 18:32:39,"Since the intention is to not change behavior in this PR, I think I will leave this as is for now.\n\nAdditionally I don't think it is guaranteed that when we add a `CInputCoin` to an `OutputGroup` that we do know the size. It could be for a preset input or an input not in the wallet (there is a PR for that) where we add those coins to an `OutputGroup` and just don't use the effective value calc",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r532812179,532812179,src/wallet/coinselection.cpp
Xekyo,2020-12-09 23:59:10,"Is this an optimization from the outside transferring the knowledge that all coins were received to separate destinations, or is this an instruction not to group coins? Assuming it's the latter, I would suggest `separate_coins: true` or `group_coins: false`.",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r539739259,539739259,src/wallet/wallet.cpp
Xekyo,2020-12-10 00:28:56,`groups` ⇒ `output_groups_per_spk`,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r539751310,539751310,src/wallet/wallet.cpp
Xekyo,2020-12-10 00:33:05,`groups_map` ⇒ `spk_to_output_groups_map`,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r539752992,539752992,src/wallet/wallet.cpp
Xekyo,2020-12-10 00:34:48,`groups_pair` ⇒ `spk_and_output_groups`,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r539753640,539753640,src/wallet/wallet.cpp
achow101,2020-12-10 01:21:20,Changed to `separate_coins`,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r539771115,539771115,src/wallet/wallet.cpp
achow101,2020-12-10 01:21:31,Changed to `groups_per_spk`,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r539771171,539771171,src/wallet/wallet.cpp
achow101,2020-12-10 01:21:45,Changed to `spk_to_groups_map`,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r539771259,539771259,src/wallet/wallet.cpp
achow101,2020-12-10 01:21:57,Changed to `spk_and_groups_pair`,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r539771347,539771347,src/wallet/wallet.cpp
Xekyo,2020-12-10 03:27:40,"It may be worth considering an explicit `sweepwallet` rpc since I don't think the expectations for ""recipient pays fees"" and ""empty my wallets and send as much as you can"" necessarily match. Although, maybe in both cases it would be appropriate not to use uneconomic UTXOs. ;)",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r539817251,539817251,src/wallet/coinselection.cpp
fjahr,2021-01-01 17:27:10,"in 99b399aba5d27476b61b4865cc39553d03965d57\n\nnit: Maybe add a similar comment to `Insert` that this updates the fees now if you retouch.",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r550788340,550788340,src/wallet/coinselection.h
fjahr,2021-01-01 17:36:00,"in 416d74fb1687ae1d47a58c153d09d9afe0b6dc60\n\nnit: I think you could skip both intermediary vars (`coin_fee`, `ev`) here and instead set the `coin` members here and use them in the following lines without hurting readability.",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r550788976,550788976,src/wallet/coinselection.cpp
fjahr,2021-01-01 17:44:25,"in 416d74fb1687ae1d47a58c153d09d9afe0b6dc60\n\nnit: maybe make `positive_only` const as well?",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r550789643,550789643,src/wallet/wallet.h
fjahr,2021-01-01 17:57:35,"in f6b305273910db0e46798d361413a7e878cb45f7\n\nNow since max_descendants and partial_groups are decoupled it could be discussed if it stays like this or if this coin selection step is split up into one which only tries with the old config (leaving out partial groups) and then one after that adds partial groups. But it can be left for a follow-up if that change is desired.",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r550790769,550790769,src/wallet/wallet.cpp
fjahr,2021-01-01 18:10:12,"in 5d4597666d589e39354e0d8dd5b2afbe1a5d7d8e\n\nnit: update comment ""Single coin"" => ""Separate coin""",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r550791777,550791777,src/wallet/wallet.cpp
fjahr,2021-01-01 18:33:44,"in 5d4597666d589e39354e0d8dd5b2afbe1a5d7d8e\n\nThere is already the effectively same check in `Insert` so I think the following line is enough (`group.m_outputs.size() > 0`) and this one can safely be removed.",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r550793674,550793674,src/wallet/wallet.cpp
fjahr,2021-01-01 21:16:17,"in 5d4597666d589e39354e0d8dd5b2afbe1a5d7d8e\n\nwhitespace missing before `=`",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r550807869,550807869,src/wallet/wallet.cpp
fjahr,2021-01-01 21:18:51,"in 5d4597666d589e39354e0d8dd5b2afbe1a5d7d8e\n\nnit: `++group_it`",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r550808110,550808110,src/wallet/wallet.cpp
fjahr,2021-01-01 21:20:37,"in 5d4597666d589e39354e0d8dd5b2afbe1a5d7d8e\n\nsame as above, I think this is not necessary since Insert takes care of this now.",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r550808284,550808284,src/wallet/wallet.cpp
fjahr,2021-01-01 21:23:50,"in 5d4597666d589e39354e0d8dd5b2afbe1a5d7d8e\n\nnit: `spk` seems to be only used in the line below so I would drop it.",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r550808494,550808494,src/wallet/wallet.cpp
fjahr,2021-01-01 21:30:23,"in 6148a8acda5e594bb9b3b2d989056f9e03ddbdbd\n\nnit: This comment isn't that helpful, I would suggest something like ""Prepare coins in a format that can be passed to SelectCoinsMinConf()""",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r550809203,550809203,src/bench/coin_selection.cpp
fjahr,2021-01-01 21:33:57,"in 6148a8acda5e594bb9b3b2d989056f9e03ddbdbd\n\nThis line seems to be the same in both if-else blocks so it could be moved to the beginning of the function before the if",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r550809486,550809486,src/wallet/wallet.cpp
fjahr,2021-01-01 21:38:19,A comment would still be a good idea :) ,https://github.com/bitcoin/bitcoin/pull/20040#discussion_r550809872,550809872,src/wallet/coinselection.cpp
fjahr,2021-01-01 22:02:59,"Ah, never mind, it becomes necessary later when the `positive_only` param is added",https://github.com/bitcoin/bitcoin/pull/20040#discussion_r550811930,550811930,src/wallet/wallet.cpp
