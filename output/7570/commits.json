[
  {
    "sha": "eda3d9248971a1c3df6e6c4b23ba89be30508b51",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZGEzZDkyNDg5NzFhMWMzZGY2ZTZjNGIyM2JhODliZTMwNTA4YjUx",
    "commit": {
      "author": {
        "name": "mruddy",
        "email": "mruddy@users.noreply.github.com",
        "date": "2016-04-05T22:26:38Z"
      },
      "committer": {
        "name": "mruddy",
        "email": "mruddy@users.noreply.github.com",
        "date": "2016-04-05T22:26:38Z"
      },
      "message": "Net: Add IPv6 Link-Local Address Support",
      "tree": {
        "sha": "5d564f189b55874f40c1a31249f1c297388d5ac2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d564f189b55874f40c1a31249f1c297388d5ac2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eda3d9248971a1c3df6e6c4b23ba89be30508b51",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eda3d9248971a1c3df6e6c4b23ba89be30508b51",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eda3d9248971a1c3df6e6c4b23ba89be30508b51",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eda3d9248971a1c3df6e6c4b23ba89be30508b51/comments",
    "author": {
      "login": "mruddy",
      "id": 6440430,
      "node_id": "MDQ6VXNlcjY0NDA0MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6440430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mruddy",
      "html_url": "https://github.com/mruddy",
      "followers_url": "https://api.github.com/users/mruddy/followers",
      "following_url": "https://api.github.com/users/mruddy/following{/other_user}",
      "gists_url": "https://api.github.com/users/mruddy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mruddy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mruddy/subscriptions",
      "organizations_url": "https://api.github.com/users/mruddy/orgs",
      "repos_url": "https://api.github.com/users/mruddy/repos",
      "events_url": "https://api.github.com/users/mruddy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mruddy/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mruddy",
      "id": 6440430,
      "node_id": "MDQ6VXNlcjY0NDA0MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6440430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mruddy",
      "html_url": "https://github.com/mruddy",
      "followers_url": "https://api.github.com/users/mruddy/followers",
      "following_url": "https://api.github.com/users/mruddy/following{/other_user}",
      "gists_url": "https://api.github.com/users/mruddy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mruddy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mruddy/subscriptions",
      "organizations_url": "https://api.github.com/users/mruddy/orgs",
      "repos_url": "https://api.github.com/users/mruddy/repos",
      "events_url": "https://api.github.com/users/mruddy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mruddy/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1b2460bd5824170ab85757e35f81197199cce9d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b2460bd5824170ab85757e35f81197199cce9d6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1b2460bd5824170ab85757e35f81197199cce9d6"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 9,
      "deletions": 4
    },
    "files": [
      {
        "sha": "281c6bcb7fe79eec2e7ad2385874ae7b5b8d40e8",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eda3d9248971a1c3df6e6c4b23ba89be30508b51/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eda3d9248971a1c3df6e6c4b23ba89be30508b51/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=eda3d9248971a1c3df6e6c4b23ba89be30508b51",
        "patch": "@@ -170,7 +170,8 @@ bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsign\n         if (aiTrav->ai_family == AF_INET6)\n         {\n             assert(aiTrav->ai_addrlen >= sizeof(sockaddr_in6));\n-            vIP.push_back(CNetAddr(((struct sockaddr_in6*)(aiTrav->ai_addr))->sin6_addr));\n+            struct sockaddr_in6* s6 = (struct sockaddr_in6*) aiTrav->ai_addr;\n+            vIP.push_back(CNetAddr(s6->sin6_addr, s6->sin6_scope_id));\n         }\n \n         aiTrav = aiTrav->ai_next;\n@@ -629,6 +630,7 @@ bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest\n void CNetAddr::Init()\n {\n     memset(ip, 0, sizeof(ip));\n+    scopeId = 0;\n }\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n@@ -678,9 +680,10 @@ CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n     SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n }\n \n-CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr)\n+CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n     SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    scopeId = scope;\n }\n \n CNetAddr::CNetAddr(const char *pszIp, bool fAllowLookup)\n@@ -1099,7 +1102,7 @@ CService::CService(const struct sockaddr_in& addr) : CNetAddr(addr.sin_addr), po\n     assert(addr.sin_family == AF_INET);\n }\n \n-CService::CService(const struct sockaddr_in6 &addr) : CNetAddr(addr.sin6_addr), port(ntohs(addr.sin6_port))\n+CService::CService(const struct sockaddr_in6 &addr) : CNetAddr(addr.sin6_addr, addr.sin6_scope_id), port(ntohs(addr.sin6_port))\n {\n    assert(addr.sin6_family == AF_INET6);\n }\n@@ -1192,6 +1195,7 @@ bool CService::GetSockAddr(struct sockaddr* paddr, socklen_t *addrlen) const\n         memset(paddrin6, 0, *addrlen);\n         if (!GetIn6Addr(&paddrin6->sin6_addr))\n             return false;\n+        paddrin6->sin6_scope_id = scopeId;\n         paddrin6->sin6_family = AF_INET6;\n         paddrin6->sin6_port = htons(port);\n         return true;"
      },
      {
        "sha": "db736154fa684eb9f1f8421b123fb6d3a3312a9a",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eda3d9248971a1c3df6e6c4b23ba89be30508b51/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eda3d9248971a1c3df6e6c4b23ba89be30508b51/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=eda3d9248971a1c3df6e6c4b23ba89be30508b51",
        "patch": "@@ -44,6 +44,7 @@ class CNetAddr\n {\n     protected:\n         unsigned char ip[16]; // in network byte order\n+        uint32_t scopeId; // for scoped/link-local ipv6 addresses\n \n     public:\n         CNetAddr();\n@@ -89,7 +90,7 @@ class CNetAddr\n         std::vector<unsigned char> GetGroup() const;\n         int GetReachabilityFrom(const CNetAddr *paddrPartner = NULL) const;\n \n-        CNetAddr(const struct in6_addr& pipv6Addr);\n+        CNetAddr(const struct in6_addr& pipv6Addr, const uint32_t scope = 0);\n         bool GetIn6Addr(struct in6_addr* pipv6Addr) const;\n \n         friend bool operator==(const CNetAddr& a, const CNetAddr& b);"
      }
    ]
  }
]