sipa,2016-10-04T12:50:58Z,"Concept ACK. This allows us to maintain backward compatibility with ""bitcoin-cli getinfo"" without keeping it at the RPC level. Should ""-getinfo"" automatically trigger when the getinfo RPC is requested?\n",https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-251378640,251378640,
laanwj,2016-10-04T13:19:37Z,"> Should ""-getinfo"" automatically trigger when the getinfo RPC is requested?\n\nNot sure about that. That's how I had it first but this would blur the line between what bitcoin-cli calls an RPC call and what is actually available on the API endpoint.\n\nMaybe ""bitcoin-cli getinfo"" if it fails (with the code that the call is missing) could print an helpful message to use ""-getinfo"" instead.\n",https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-251385358,251385358,
luke-jr,2016-10-04T14:33:57Z,"Eh, IMO the only backward-compatibility need for getinfo is at the RPC level. RPC isn't really designed for end users, and in any case, end users can adapt to changes easier than legacy software making RPC calls.\n\nI don't particularly care about whether -getinfo is added to bitcoin-cli, but it doesn't seem like a viable migration path or substitute for the getinfo RPC.\n",https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-251406125,251406125,
laanwj,2016-10-04T14:45:32Z,"> I don't particularly care about whether -getinfo is added to bitcoin-cli, but it doesn't seem like a viable migration path or substitute for the getinfo RPC.\n\nYou are right that RPC is not there for end users.\nHowever, bitcoin-cli is there for end users, and many people use bitcoind+bitcoin-cli as a console wallet.\n\nThis is not just for backwards-compatibility. As I say in my OP\n\n> The hi",https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-251409625,251409625,
laanwj,2016-10-04T14:49:49Z,"And yes, this could be an external Python script too. I don't really care. Although history has shown that those scripts hardly get maintained nor used, e.g. remember `contrib/bitrpc`? Thought so.\n\n(so if that is a requirement I'm just going to keep it as a private script and not bother with this, this may be too much of an ego-PR anyway)\n",https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-251410899,251410899,
laanwj,2017-06-15T19:40:22Z,Reopening after IRC discussion.,https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-308845548,308845548,
laanwj,2017-06-15T20:28:44Z,rebased,https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-308856835,308856835,
jnewbery,2017-07-16T05:30:49Z,"I'd love for this to make it in to v0.15.0, to ease the removal of `getinfo` in (hopefully) v0.15.1.",https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-315587044,315587044,
TheBlueMatt,2017-07-16T22:55:06Z,"I am concerned that this breaks the atomicity of the previously-atomic RPC getinfo, which may be very surprising for users. I'm not sure how much it matters if you get inconsistent data in results from bitcoin-cli, since most automated things will likely be using RPC directly, but I'm not convinced it is a great direction.",https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-315643983,315643983,
promag,2017-07-16T23:26:03Z,"NACK. Keep it simple for cli. IMO this is a good example for what to not do in a cli and can lead to others do the same in their cli.. This doesn't break atomicity as there is no getinfo, at the very least that should be a concern in #8843. The ones requesting getinfo should either just make the calls or understand what they really need.",https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-315645678,315645678,
jnewbery,2017-07-16T23:59:09Z,"> I'm not convinced it is a great direction\n\n> this is a good example for what to not do in a cli and can lead to others do the same in their cli\n\nIdealogical purity is fine in its place, but this is an isolated change to help those who are currently use `getinfo` from the command line. I don't think it sets a precedent for doing more hacks with the cli.\n\nPerhaps don't document this? O",https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-315647427,315647427,
TheBlueMatt,2017-07-17T00:05:05Z,"I'm having trouble parsing your comment @promag. My concern with atomicity is that you could eg get a getwalletinfo result which is current, then a getblockchaininfo result a block later and end up with a very confused getinfo. Forcing the client to make separate calls clarifies that somewhat.\n\nAnyway, I'm curious what the previous IRC discussion was, let's bring this up at next week's meeting (",https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-315647817,315647817,
laanwj,2017-07-17T06:25:29Z,"Closing this, I don't feel like addressing the atomicity concern, it seems arbitrary, never came up before, and a way to call multiple RPC calls atomically is *WAY* out of scope for this. Not going to maintain this anymore.",https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-315676085,315676085,
promag,2017-07-17T09:06:15Z,"> but this is an isolated change to help those who are currently use getinfo from the command line\n\n@jnewbery that's what deprecation is for.\n\n> Forcing the client to make separate calls clarifies that somewhat.\n\n@TheBlueMatt I totally agree with you! Sorry if I wasn't clear.\n\n@laanwj IMO best solution is to add support for http://www.jsonrpc.org/specification#batch, where the lock",https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-315702093,315702093,
laanwj,2017-07-17T09:16:29Z,"I use a batch in the implementation of this!\n\nHolding all the locks for the whole time seems a bad idea though. A batch\nmight include, or fully consist of, RPCs that don't need any locks at all.\nLocks have been pushed down, just a version ago, to be able to handle them\nseparately per call implementation.\n\nIt could be done optionally; e.g. submit a list of locks with the batch.\nBut wtf, I h",https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-315704212,315704212,
laanwj,2017-07-17T09:25:09Z,"Anyhow I'm no longer going to work on this after the so-manyeth time this\ngets shot down for out-of-the-blue reasons.\n\nI don't even use it myself. The getinfo output doesn't provide a useful\nselection of information. I have a custom script that prints what I'm\ninterested in, and suggest everyone does the same, easy enough.\n\nOn Jul 17, 2017 11:16 AM, ""Wladimir"" <laanwj@gmail.com> wrote:\n\n>",https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-315706100,315706100,
promag,2017-07-17T09:48:20Z,"> I use a batch in the implementation of this!\n\n@laanwj sorry I've overlook the code and did not realize there is already support for server side batch requests.\n\n:+1: for custom scripting.",https://github.com/bitcoin/bitcoin/pull/8843#issuecomment-315711217,315711217,
jnewbery,2017-07-10T18:17:28Z,nit: please place alphabetically within help messages.,https://github.com/bitcoin/bitcoin/pull/8843#discussion_r126498064,126498064,src/bitcoin-cli.cpp
jnewbery,2017-07-10T18:47:09Z,nit: why add a space here?,https://github.com/bitcoin/bitcoin/pull/8843#discussion_r126505134,126505134,src/bitcoin-cli.cpp
jnewbery,2017-07-10T18:53:44Z,"slight incompatibility here since HD split. For HD split wallets, `keypoolsize` refers to the size of the external keypool, and there's a new field returned in `getwalletinfo` called `keypoolsize_hd_internal`, which refers to the size of the internal keypool. This implementation should return the sum of those two if `keypoolsize_hd_internal` exists.\n\nOtherwise:\n\n```\nâ†’ bitcoin-cli getinfo",https://github.com/bitcoin/bitcoin/pull/8843#discussion_r126506707,126506707,src/bitcoin-cli.cpp
jnewbery,2017-07-10T19:09:21Z,nit: new code so should use braces for `if` blocks (sorry!),https://github.com/bitcoin/bitcoin/pull/8843#discussion_r126510260,126510260,src/rpc/protocol.cpp
jnewbery,2017-07-16T05:30:06Z,"Actually, I've got this backwards. `getinfo` should be updated to be consistent with `getwalletinfo`, not making `-getinfo` consistent with the incorrect `getinfo`.\n\nI think that can be done as a separate commit in this PR. Let me know if you want me to make a branch with that commit.",https://github.com/bitcoin/bitcoin/pull/8843#discussion_r127599074,127599074,src/bitcoin-cli.cpp
