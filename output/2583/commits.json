[
  {
    "sha": "fe9e88cb06cf47fc30b122e3c768aa0dc1813e48",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTllODhjYjA2Y2Y0N2ZjMzBiMTIyZTNjNzY4YWEwZGMxODEzZTQ4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-04-27T12:27:05Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-04-27T13:37:26Z"
      },
      "message": "fix !O_NONBLOCK where ~O_NONBLOCK was meant\n\nUsing ! on a non-zero value will always return 0.\n\nAlso remove some duplicate and superfluous code in other places.",
      "tree": {
        "sha": "b91665b6a8e19bdf90af461b1926190399f82986",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b91665b6a8e19bdf90af461b1926190399f82986"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe9e88cb06cf47fc30b122e3c768aa0dc1813e48",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe9e88cb06cf47fc30b122e3c768aa0dc1813e48",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe9e88cb06cf47fc30b122e3c768aa0dc1813e48",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe9e88cb06cf47fc30b122e3c768aa0dc1813e48/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c3164da736d57bccc393f160236a507eacbae19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c3164da736d57bccc393f160236a507eacbae19",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c3164da736d57bccc393f160236a507eacbae19"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 10,
      "deletions": 17
    },
    "files": [
      {
        "sha": "08d133740a9c5655020fdd2c8abaa6bdaf18953c",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 17,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe9e88cb06cf47fc30b122e3c768aa0dc1813e48/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe9e88cb06cf47fc30b122e3c768aa0dc1813e48/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=fe9e88cb06cf47fc30b122e3c768aa0dc1813e48",
        "patch": "@@ -72,19 +72,14 @@ bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsign\n \n     aiHint.ai_socktype = SOCK_STREAM;\n     aiHint.ai_protocol = IPPROTO_TCP;\n-#ifdef WIN32\n-#  ifdef USE_IPV6\n+#ifdef USE_IPV6\n     aiHint.ai_family = AF_UNSPEC;\n-#  else\n+#else\n     aiHint.ai_family = AF_INET;\n-#  endif\n+#endif\n+#ifdef WIN32\n     aiHint.ai_flags = fAllowLookup ? 0 : AI_NUMERICHOST;\n #else\n-#  ifdef USE_IPV6\n-    aiHint.ai_family = AF_UNSPEC;\n-#  else\n-    aiHint.ai_family = AF_INET;\n-#  endif\n     aiHint.ai_flags = fAllowLookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n #endif\n     struct addrinfo *aiRes = NULL;\n@@ -119,13 +114,12 @@ bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsign\n \n bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup)\n {\n-    std::string str(pszName);\n-    std::string strHost = str;\n-    if (str.empty())\n+    std::string strHost(pszName);\n+    if (strHost.empty())\n         return false;\n-    if (boost::algorithm::starts_with(str, \"[\") && boost::algorithm::ends_with(str, \"]\"))\n+    if (boost::algorithm::starts_with(strHost, \"[\") && boost::algorithm::ends_with(strHost, \"]\"))\n     {\n-        strHost = str.substr(1, str.size() - 2);\n+        strHost = strHost.substr(1, strHost.size() - 2);\n     }\n \n     return LookupIntern(strHost.c_str(), vIP, nMaxSolutions, fAllowLookup);\n@@ -222,10 +216,9 @@ bool static Socks5(string strDest, int port, SOCKET& hSocket)\n         return error(\"Hostname too long\");\n     }\n     char pszSocks5Init[] = \"\\5\\1\\0\";\n-    char *pszSocks5 = pszSocks5Init;\n     ssize_t nSize = sizeof(pszSocks5Init) - 1;\n \n-    ssize_t ret = send(hSocket, pszSocks5, nSize, MSG_NOSIGNAL);\n+    ssize_t ret = send(hSocket, pszSocks5Init, nSize, MSG_NOSIGNAL);\n     if (ret != nSize)\n     {\n         closesocket(hSocket);\n@@ -414,7 +407,7 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n     if (ioctlsocket(hSocket, FIONBIO, &fNonblock) == SOCKET_ERROR)\n #else\n     fFlags = fcntl(hSocket, F_GETFL, 0);\n-    if (fcntl(hSocket, F_SETFL, fFlags & !O_NONBLOCK) == SOCKET_ERROR)\n+    if (fcntl(hSocket, F_SETFL, fFlags & ~O_NONBLOCK) == SOCKET_ERROR)\n #endif\n     {\n         closesocket(hSocket);"
      }
    ]
  }
]