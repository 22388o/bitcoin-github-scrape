DrahtBot,2019-07-24 17:59:27,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16443](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16443.html) (refactor: have CCoins* data managed under C",https://github.com/bitcoin/bitcoin/pull/16452#issuecomment-514736491,514736491,
MarcoFalke,2019-07-24 18:54:52,re-run ci,https://github.com/bitcoin/bitcoin/pull/16452#issuecomment-514756482,514756482,
jnewbery,2019-07-24 19:05:09,"Concept ACK.\n\nI had some suggested changes to `BroadcastTransaction()` here: https://github.com/jnewbery/bitcoin/commit/ecfeea015919cc44b465e969e65cb2c459c1235c (removing unnecessary local variables, improving comments). Feel free to take that commit if you think it makes sense to bundle it in this PR.",https://github.com/bitcoin/bitcoin/pull/16452#issuecomment-514760062,514760062,
promag,2019-07-24 19:41:16,"ACK, also Marco suggestions.",https://github.com/bitcoin/bitcoin/pull/16452#issuecomment-514771833,514771833,
ariard,2019-07-24 20:12:07,@MarcoFalke addressed your comments but john commit makes more sense than I take it on top of #15713,https://github.com/bitcoin/bitcoin/pull/16452#issuecomment-514781904,514781904,
MarcoFalke,2019-07-24 21:16:06,re-ACK apart from compile failures,https://github.com/bitcoin/bitcoin/pull/16452#issuecomment-514803210,514803210,
ariard,2019-07-24 21:48:54,"Sorry for compilation failures, should be good now.",https://github.com/bitcoin/bitcoin/pull/16452#issuecomment-514812821,514812821,
MarcoFalke,2019-07-25 11:55:44,"ACK 9bc8b28c1d26c28edf4bbc890be97c0ad7a73cb9\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK 9bc8b28c1d26c28edf4bbc890be97c0ad7a73cb9\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjNYgv/ecqESlAxc75rOwly8VCGKZjH4Zdb0+lfb3LnFTNgsPkd2OT1UZ9t3q",https://github.com/bitcoin/bitcoin/pull/16452#issuecomment-515014574,515014574,
ariard,2019-07-25 17:13:24,thanks @jnewbery will correct the nits in one of my other PRs to not invalidate reviews ,https://github.com/bitcoin/bitcoin/pull/16452#issuecomment-515130311,515130311,
jnewbery,2019-07-31 14:23:57,I think this is ready for merge. It could go in with or without https://github.com/jnewbery/bitcoin/commit/72f29c34c069d7cd87424f3c4dbefd4aa25400e0 (I'll open a quick follow-up PR if we merge this as is),https://github.com/bitcoin/bitcoin/pull/16452#issuecomment-516871453,516871453,
ariard,2019-07-31 14:25:39,"Okay, will rebase #15713 soon after and address nits on it at same time",https://github.com/bitcoin/bitcoin/pull/16452#issuecomment-516872141,516872141,
jonatack,2019-07-31 14:30:14,"NP. FWIW I also built and tested with @jnewbery's changes and all pass.\n```cpp\ndiff --git a/src/interfaces/chain.cpp b/src/interfaces/chain.cpp\nindex 22e4aaedaf..30966c50ad 100644\n--- a/src/interfaces/chain.cpp\n+++ b/src/interfaces/chain.cpp\n@@ -8,7 +8,6 @@\n #include <chainparams.h>\n #include <interfaces/handler.h>\n #include <interfaces/wallet.h>\n-#include <net.h>\n #include <",https://github.com/bitcoin/bitcoin/pull/16452#issuecomment-516874254,516874254,
MarcoFalke,2019-07-31 14:55:43,"`net.h` might still be included through `net_processing.h`, so the follow-up changes are only stylistic",https://github.com/bitcoin/bitcoin/pull/16452#issuecomment-516885496,516885496,
MarcoFalke,2019-07-24 19:07:31,"style-nit: connman can be a const reference instead of a mutable raw pointer, since we don't modify connman, but push the tx to the set of all nodes.\n\n```suggestion\nvoid RelayTransaction(const CTransaction& tx, const CConnman& connman);\n```",https://github.com/bitcoin/bitcoin/pull/16452#discussion_r306974989,306974989,src/net_processing.h
MarcoFalke,2019-07-24 19:14:32,"style-nit: (feel free to ignore)\n\nIt is sufficient to pass the txid (as we assume the tx is in the mempool). So maybe make the signature similar to `ChainImpl`'s `void relayTransaction(const uint256& txid)` and use it there as well?",https://github.com/bitcoin/bitcoin/pull/16452#discussion_r306978026,306978026,src/net_processing.h
MarcoFalke,2019-07-24 21:13:02,"```suggestion\n     CInv inv(MSG_TX, txid);\n```",https://github.com/bitcoin/bitcoin/pull/16452#discussion_r307024008,307024008,src/net_processing.cpp
MarcoFalke,2019-07-24 21:14:37,"`GetHash` already returns a reference, so you don't need this alias, I think",https://github.com/bitcoin/bitcoin/pull/16452#discussion_r307024614,307024614,src/net_processing.cpp
MarcoFalke,2019-07-24 21:15:19,"```suggestion\nvoid RelayTransaction(const uint256& txid, const CConnman& connman);\n```",https://github.com/bitcoin/bitcoin/pull/16452#discussion_r307024863,307024863,src/net_processing.h
MarcoFalke,2019-07-24 21:55:55,"I don't think you can move references\n\n```suggestion\n    RelayTransaction(hashTx, *g_connman);\n```\n\nAlso, what happened to this suggestion:\n\n```diff\ndiff --git a/src/interfaces/chain.cpp b/src/interfaces/chain.cpp\nindex 02f39cef8e..22e4aaedaf 100644\n--- a/src/interfaces/chain.cpp\n+++ b/src/interfaces/chain.cpp\n@@ -9,6 +9,7 @@\n #include <interfaces/handler.h>\n #include",https://github.com/bitcoin/bitcoin/pull/16452#discussion_r307038633,307038633,src/node/transaction.cpp
ariard,2019-07-24 22:05:57,"You can move reference but yes that's useless, I drop it so.\n\nAdded suggestion, didn't see it at first",https://github.com/bitcoin/bitcoin/pull/16452#discussion_r307041555,307041555,src/node/transaction.cpp
promag,2019-07-25 00:33:27,"Âµnit, pardon\n```cpp\n[&inv](CNode* pnode) {\n```",https://github.com/bitcoin/bitcoin/pull/16452#discussion_r307074179,307074179,src/net_processing.cpp
MarcoFalke,2019-07-25 11:48:48,I'd rather keep it the way it is now,https://github.com/bitcoin/bitcoin/pull/16452#discussion_r307254674,307254674,src/net_processing.cpp
jnewbery,2019-07-25 15:23:19,"nit: Please add the name of the txid argument:\n\n`void RelayTransaction(const uint256& txid, const CConnman& connman);`",https://github.com/bitcoin/bitcoin/pull/16452#discussion_r307357141,307357141,src/net_processing.h
jnewbery,2019-07-25 15:26:59,nit: you can remove the `net.h` include now that `CNode` is not used in this file.,https://github.com/bitcoin/bitcoin/pull/16452#discussion_r307359348,307359348,src/node/transaction.cpp
jnewbery,2019-07-25 15:28:25,nit: you can remove the `net.h` include now that this file doesn't use `CNode`,https://github.com/bitcoin/bitcoin/pull/16452#discussion_r307360170,307360170,src/interfaces/chain.cpp
