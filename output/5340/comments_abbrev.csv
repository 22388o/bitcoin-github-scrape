laanwj,2014-11-21T12:22:13Z,"In the mingw bug report there is also a free-standing version given: http://sourceforge.net/p/mingw/bugs/1912/?page=1\nI'd feel safer using that if we can't rely on memchr being correct either.\n\n``` c++\nstatic __inline__ size_t strnlen( const char *start, size_t maxlen )\n{\n  /* Determine the length of a NUL terminated string, subject\n   * to a maximum permitted length constraint.\n   */\n  c",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-63962937,63962937,
paveljanik,2014-11-21T12:26:09Z,"I'd prefer getting rid of strnlen completely... Writing such backwards compatible stuff can only bring in new issues. And in this case, both environments have their solutions (fork of mingw, updated Mac OS X/Xcode)...\n",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-63963309,63963309,
jonasschnelli,2014-11-21T12:28:27Z,i agree with @paveljanik. I don't think support for old or non-posix system should end up in core code.\n,https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-63963520,63963520,
laanwj,2014-11-21T12:34:09Z,"@paveljanik so you're proposing that we just close this? Fine with me, too.\n",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-63964065,63964065,
paveljanik,2014-11-21T12:43:40Z,"@laanwj I'd like to see the original problem fixed somehow ;) In this PR or elsewhere. The previous check before strnlen was OK. Is it acceptable for you to revert it and use ""if"" check as before?\n",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-63964941,63964941,
laanwj,2014-11-21T12:45:31Z,"No, it is not acceptable to revert it. The old code was incorrect.\n\nAs it seems, strnlen is only not supported on old and broken platforms, so IMO we should just keep it this way.\n",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-63965132,63965132,
paveljanik,2014-11-21T12:50:57Z,"@laanwj we could revert it intelligently, of course ;)\n",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-63965661,63965661,
laanwj,2014-11-21T12:58:55Z,"No. Using POSIX functions should be ok.\n\nEither we add a compatibility fallback for strnlen, or we don't, but that code is going to stay the same. I don't want to change everything down to the lowest common denominator of broken platforms.\n",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-63966441,63966441,
paveljanik,2014-11-21T13:16:19Z,@laanwj Agreed. So I think the compatibility fallback is the way to go (I really would like to see Bitcoin Core compilable there).\n@cfields I also do not like util.h/cpp for this. Maybe under compat/ somewhere/new files?\n,https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-63968274,63968274,
paveljanik,2014-11-21T16:43:38Z,compat-way approach in https://github.com/paveljanik/bitcoin/compare/strnlen2\n,https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-63998826,63998826,
theuni,2014-11-21T18:28:42Z,Agreed that somewhere in compat/ is better. We probably have a few other things like this (atoi64 as a quick bad example) that we could justify moving to a new dependency-less compat file.\n,https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64015072,64015072,
theuni,2014-11-21T18:48:21Z,"@paveljanik I like that approach. A separate file just for that is a bit overkill, but it also ensures that unrelated junk won't end up there in the future. I don't mind either way.\n",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64017728,64017728,
paveljanik,2014-11-21T18:54:01Z,"@theuni Yes, having one file for one function is not optimal. Can you come up with a better name for it? ;-) misc_functions.cpp and waiting for atoi64 and others?\n",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64018527,64018527,
laanwj,2014-11-24T08:57:54Z,"@paveljanik ACK. I like that approach. A function per file may be overkill, but it's better than stuffing everything in util.cpp. We can always group them later if there are a lot and it makes sense. Can you push that to this branch?\n",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64166056,64166056,
paveljanik,2014-11-24T09:35:12Z,@ laanwj  Done\n,https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64169513,64169513,
paveljanik,2014-11-24T09:43:53Z,@LinuXperia can you please verify with the standard mingw please?\n,https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64170438,64170438,
jgarzik,2014-11-24T14:32:22Z,ut ACK\n,https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64201165,64201165,
theuni,2014-11-24T17:32:22Z,Being nitpicky: It looks like compat.h needs to include config/bitcoin-config.h. We've probably gotten away with it only by accident (include ordering) in the past.\n,https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64230851,64230851,
theuni,2014-11-24T17:37:17Z,"Also being nitpicky: if the intention here is to avoid lumping things together needlessly.. this now pulls compat.h in as a dependency for anything that requires strnlen. compat/strnlen.h would avoid that, if necessary.\n",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64231592,64231592,
paveljanik,2014-11-24T18:05:34Z,"@theuni yes, compat.h needs bitcoin-config.h. Even now, because there is:\n\n``` c\n// As Solaris does not have the MSG_NOSIGNAL flag for send(2) syscall, it is defined as 0\n#if !defined(HAVE_MSG_NOSIGNAL) && !defined(MSG_NOSIGNAL)\n#define MSG_NOSIGNAL 0\n#endif\n```\n\nalready.\nstrnlen.h means, that everyone using strnlen needs to include it. I do not want that ;-)\n",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64236094,64236094,
paveljanik,2014-11-26T07:20:26Z,@theuni bitcoin-config.h added. OK now?\n,https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64523965,64523965,
theuni,2014-11-26T07:57:14Z,Thanks. utACK.\n,https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64526677,64526677,
laanwj,2014-11-26T08:43:52Z,"_[Strange - this only worked for me after manually `rm src/bitcoin-config.h`. Seemingly this file moved to `src/config` and my build was still picking up the old file]_\n\nFor google-ability it was failing with the following error:\n\n```\nIn file included from util.h:17:0,\n                 from chainparamsbase.cpp:8:\ncompat.h:92:8: error: previous declaration of â€˜size_t strnlen(const char*, siz",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64531009,64531009,
paveljanik,2014-11-26T08:50:43Z,"Isn't this because of this?\n\ncrypto/common.h:#include ""bitcoin-config.h""\nnetbase.cpp:#include ""bitcoin-config.h""\n",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64531660,64531660,
theuni,2014-11-26T08:52:14Z,"@laanwj Very strange. bitcoin-compat.h was moved to a new path to avoid problems like that where a stale file could be found. I'm not following your compiler's logic, since util.h explicitly includes ""config/bitcoin-config.h"".\n\nUnless it's a linker error due to netbase.cpp, that'd be different. (that one should be fixed either way).\n",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64531815,64531815,
laanwj,2014-11-26T08:53:07Z,"No, it was not a linker error.\n",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64531891,64531891,
theuni,2014-11-26T08:54:06Z,"@paveljanik the first one is correct, the second should be fixed.\ncrypto/ is setup to not have access to core headers by default, and uses -Iconfig/ so that it can read only config/bitcoin-config.h\n",https://github.com/bitcoin/bitcoin/pull/5340#issuecomment-64531978,64531978,
