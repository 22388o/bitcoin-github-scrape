[
  {
    "sha": "88a7967c0e726ea814533e8cde1368ee4f27f6d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OGE3OTY3YzBlNzI2ZWE4MTQ1MzNlOGNkZTEzNjhlZTRmMjdmNmQ4",
    "commit": {
      "author": {
        "name": "Eudis Duran",
        "email": "eudisd@gmail.com",
        "date": "2018-06-02T16:59:51Z"
      },
      "committer": {
        "name": "Eudis Duran",
        "email": "eudisd@gmail.com",
        "date": "2018-06-02T17:03:52Z"
      },
      "message": "Refs #13245\nUpdating wallet encryption dialog titles to better describe wallet encryption",
      "tree": {
        "sha": "db29e5a8e9584718f859438e13572306ed457fc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db29e5a8e9584718f859438e13572306ed457fc1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88a7967c0e726ea814533e8cde1368ee4f27f6d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88a7967c0e726ea814533e8cde1368ee4f27f6d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/88a7967c0e726ea814533e8cde1368ee4f27f6d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88a7967c0e726ea814533e8cde1368ee4f27f6d8/comments",
    "author": {
      "login": "eudisd",
      "id": 251685,
      "node_id": "MDQ6VXNlcjI1MTY4NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/251685?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eudisd",
      "html_url": "https://github.com/eudisd",
      "followers_url": "https://api.github.com/users/eudisd/followers",
      "following_url": "https://api.github.com/users/eudisd/following{/other_user}",
      "gists_url": "https://api.github.com/users/eudisd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eudisd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eudisd/subscriptions",
      "organizations_url": "https://api.github.com/users/eudisd/orgs",
      "repos_url": "https://api.github.com/users/eudisd/repos",
      "events_url": "https://api.github.com/users/eudisd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eudisd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "eudisd",
      "id": 251685,
      "node_id": "MDQ6VXNlcjI1MTY4NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/251685?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eudisd",
      "html_url": "https://github.com/eudisd",
      "followers_url": "https://api.github.com/users/eudisd/followers",
      "following_url": "https://api.github.com/users/eudisd/following{/other_user}",
      "gists_url": "https://api.github.com/users/eudisd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eudisd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eudisd/subscriptions",
      "organizations_url": "https://api.github.com/users/eudisd/orgs",
      "repos_url": "https://api.github.com/users/eudisd/repos",
      "events_url": "https://api.github.com/users/eudisd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eudisd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e24bf1ce184bc8d5bba70a3f3e9c43c2df07f4d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e24bf1ce184bc8d5bba70a3f3e9c43c2df07f4d3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e24bf1ce184bc8d5bba70a3f3e9c43c2df07f4d3"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "5b678f23bee82b666520c5771d63a0423646bd0c",
        "filename": "doc/release-notes/release-notes-0.4.0.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88a7967c0e726ea814533e8cde1368ee4f27f6d8/doc/release-notes/release-notes-0.4.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88a7967c0e726ea814533e8cde1368ee4f27f6d8/doc/release-notes/release-notes-0.4.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.0.md?ref=88a7967c0e726ea814533e8cde1368ee4f27f6d8",
        "patch": "@@ -29,7 +29,7 @@ Wallet Encryption\n \n Bitcoin supports native wallet encryption so that people who steal your\n wallet file don't automatically get access to all of your Bitcoins.\n-In order to enable this feature, choose \"Encrypt Wallet\" from the\n+In order to enable this feature, choose \"Create encrypted wallet\" from the\n Options menu.  You will be prompted to enter a passphrase, which\n will be used as the key to encrypt your wallet and will be needed\n every time you wish to send Bitcoins.  If you lose this passphrase,"
      },
      {
        "sha": "f086f9dde32f21c72c9725ecbc7ff763aa70aa76",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88a7967c0e726ea814533e8cde1368ee4f27f6d8/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88a7967c0e726ea814533e8cde1368ee4f27f6d8/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=88a7967c0e726ea814533e8cde1368ee4f27f6d8",
        "patch": "@@ -46,7 +46,7 @@ AskPassphraseDialog::AskPassphraseDialog(Mode _mode, QWidget *parent) :\n             ui->warningLabel->setText(tr(\"Enter the new passphrase to the wallet.<br/>Please use a passphrase of <b>ten or more random characters</b>, or <b>eight or more words</b>.\"));\n             ui->passLabel1->hide();\n             ui->passEdit1->hide();\n-            setWindowTitle(tr(\"Encrypt wallet\"));\n+            setWindowTitle(tr(\"Create encrypted wallet\"));\n             break;\n         case Unlock: // Ask passphrase\n             ui->warningLabel->setText(tr(\"This operation needs your wallet passphrase to unlock the wallet.\"));\n@@ -111,8 +111,8 @@ void AskPassphraseDialog::accept()\n             // Cannot encrypt with empty passphrase\n             break;\n         }\n-        QMessageBox::StandardButton retval = QMessageBox::question(this, tr(\"Confirm wallet encryption\"),\n-                 tr(\"Warning: If you encrypt your wallet and lose your passphrase, you will <b>LOSE ALL OF YOUR BITCOINS</b>!\") + \"<br><br>\" + tr(\"Are you sure you wish to encrypt your wallet?\"),\n+        QMessageBox::StandardButton retval = QMessageBox::question(this, tr(\"Confirm create encrypted wallet\"),\n+                 tr(\"Warning: If you encrypt your wallet and lose your passphrase, you will <b>LOSE ALL OF YOUR BITCOINS</b>!\") + \"<br><br>\" + tr(\"Are you sure you want to create a new encrypted wallet?\"),\n                  QMessageBox::Yes|QMessageBox::Cancel,\n                  QMessageBox::Cancel);\n         if(retval == QMessageBox::Yes)\n@@ -121,7 +121,7 @@ void AskPassphraseDialog::accept()\n             {\n                 if(model->setWalletEncrypted(true, newpass1))\n                 {\n-                    QMessageBox::warning(this, tr(\"Wallet encrypted\"),\n+                    QMessageBox::warning(this, tr(\"New wallet encrypted\"),\n                                          \"<qt>\" +\n                                          tr(\"%1 will close now to finish the encryption process. \"\n                                          \"Remember that encrypting your wallet cannot fully protect \"\n@@ -179,7 +179,7 @@ void AskPassphraseDialog::accept()\n         {\n             if(model->changePassphrase(oldpass, newpass1))\n             {\n-                QMessageBox::information(this, tr(\"Wallet encrypted\"),\n+                QMessageBox::information(this, tr(\"New wallet encrypted\"),\n                                      tr(\"Wallet passphrase was successfully changed.\"));\n                 QDialog::accept(); // Success\n             }"
      },
      {
        "sha": "11aaf87e348ea5293e2233a39d2bffb0a928b708",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88a7967c0e726ea814533e8cde1368ee4f27f6d8/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88a7967c0e726ea814533e8cde1368ee4f27f6d8/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=88a7967c0e726ea814533e8cde1368ee4f27f6d8",
        "patch": "@@ -353,7 +353,7 @@ void BitcoinGUI::createActions()\n     toggleHideAction = new QAction(platformStyle->TextColorIcon(\":/icons/about\"), tr(\"&Show / Hide\"), this);\n     toggleHideAction->setStatusTip(tr(\"Show or hide the main Window\"));\n \n-    encryptWalletAction = new QAction(platformStyle->TextColorIcon(\":/icons/lock_closed\"), tr(\"&Encrypt Wallet...\"), this);\n+    encryptWalletAction = new QAction(platformStyle->TextColorIcon(\":/icons/lock_closed\"), tr(\"&Create encrypted wallet..\"), this);\n     encryptWalletAction->setStatusTip(tr(\"Encrypt the private keys that belong to your wallet\"));\n     encryptWalletAction->setCheckable(true);\n     backupWalletAction = new QAction(platformStyle->TextColorIcon(\":/icons/filesave\"), tr(\"&Backup Wallet...\"), this);\n@@ -516,13 +516,13 @@ void BitcoinGUI::setClientModel(ClientModel *_clientModel)\n         }\n #endif // ENABLE_WALLET\n         unitDisplayControl->setOptionsModel(_clientModel->getOptionsModel());\n-        \n+\n         OptionsModel* optionsModel = _clientModel->getOptionsModel();\n         if(optionsModel)\n         {\n             // be aware of the tray icon disable state change reported by the OptionsModel object.\n             connect(optionsModel,SIGNAL(hideTrayIconChanged(bool)),this,SLOT(setTrayIconVisible(bool)));\n-        \n+\n             // initialize the disable state of the tray icon with the current value in the model.\n             setTrayIconVisible(optionsModel->getHideTrayIcon());\n         }\n@@ -1090,7 +1090,7 @@ void BitcoinGUI::setHDStatus(int hdEnabled)\n     labelWalletHDStatusIcon->setPixmap(platformStyle->SingleColorIcon(hdEnabled ? \":/icons/hd_enabled\" : \":/icons/hd_disabled\").pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n     labelWalletHDStatusIcon->setToolTip(hdEnabled ? tr(\"HD key generation is <b>enabled</b>\") : tr(\"HD key generation is <b>disabled</b>\"));\n \n-    // eventually disable the QLabel to set its opacity to 50% \n+    // eventually disable the QLabel to set its opacity to 50%\n     labelWalletHDStatusIcon->setEnabled(hdEnabled);\n }\n "
      }
    ]
  }
]