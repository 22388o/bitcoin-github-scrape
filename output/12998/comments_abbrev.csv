laanwj,2018-04-16T17:09:26Z,"I'm not sure making this assumption makes sense - the environment might or might not have those functions, without configure (or similar) that's impossible to know.\n\nYou could also define the `-DHAVE_DECL_BE16TOH` etc on the compiler command line, or ship with a pre-existing config.h?",https://github.com/bitcoin/bitcoin/pull/12998#issuecomment-381679180,381679180,
TheBlueMatt,2018-04-16T18:36:25Z,"In my use-case (rust-bitcoinconsensus) we don't know anything more about the environment than non-configure Bitcoin. Re-implementing just enough of Bitcoin Core's configure to define the appropriate symbols seems like the wrong way to go (and would be entirely unmaintainable), actually running autogen/configure would also be a pain as we'd have to figure out what environment we're targeting and ap",https://github.com/bitcoin/bitcoin/pull/12998#issuecomment-381705862,381705862,
theuni,2018-04-18T14:57:43Z,"Agree with @laanwj.\n\nAlso agree with @TheBlueMatt about this being annoying, though. I've run into this exact issue as well, usually when I try to copy/paste sha256.cpp into a quick project.\n\nAs these are non-standard, I don't think there's a default that makes more sense than any other. For example, I believe that these aren't present on macOS. And I don't think we can assume that they're",https://github.com/bitcoin/bitcoin/pull/12998#issuecomment-382416874,382416874,
TheBlueMatt,2018-04-18T18:38:34Z,"I mean I'm open to doing the big refactor and proxying everything through inline ""int"" functions, but I figured that would be a bigger deal than just skipping compile of the conversion functions in the case where they're already defined (ie its super obvious we dont need them). Its not supposed to be a foolproof solution, just a simple fix that happens to be sufficient in some cases, and creates e",https://github.com/bitcoin/bitcoin/pull/12998#issuecomment-382487490,382487490,
theuni,2018-04-19T17:26:11Z,"I was a bit too hasty in my review of this.\n\nI see where you're coming from now. This won't fix all non-autotools builds, but it should be strictly an improvement in cases where these defines exist.\n\nI'd still prefer _int functions since we only use these in crypto/ and serialize.h, but barring that, I see now that it's hard to argue against this.\n\nutACK 150b2f0265f11590940d9c89560b5c0",https://github.com/bitcoin/bitcoin/pull/12998#issuecomment-382816327,382816327,
laanwj,2018-04-21T08:19:47Z,"utACK - with the `#ifdef htole16` condition it makes some sense, there's no implicit assumption now.\nI suppose there's no way to shortcut this like\n```\n#define HAVE_DECL_HTOBE16 defined(htobe16)\n```",https://github.com/bitcoin/bitcoin/pull/12998#issuecomment-383277282,383277282,
fanquake,2018-04-24T15:17:16Z,I can include this in #12967.,https://github.com/bitcoin/bitcoin/pull/12998#issuecomment-383971332,383971332,
MarcoFalke,2018-04-24T15:36:41Z,@TheBlueMatt Is this for backport?,https://github.com/bitcoin/bitcoin/pull/12998#issuecomment-383978203,383978203,
TheBlueMatt,2018-04-27T23:45:02Z,"I'd prefer it, as indicated at https://botbot.me/freenode/bitcoin-core-dev/2018-04-24/?msg=99324321&page=2",https://github.com/bitcoin/bitcoin/pull/12998#issuecomment-385120311,385120311,
MarcoFalke,2018-04-27T23:47:17Z,@TheBlueMatt It is included in #12967 (you are very welcome to review it),https://github.com/bitcoin/bitcoin/pull/12998#issuecomment-385120579,385120579,
