MarcoFalke,2020-06-05 11:36:33,"Concept ACK, but this conflicts with some ongoing work, so let's get those in first.",https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-639427825,639427825,
DrahtBot,2020-06-05 13:26:11,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19503 (Add parameter feature to serialization and use it for CAddress by sipa)\n* #19498 (Tidy up ProcessOrphanTx by jnew",https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-639478768,639478768,
theStack,2020-06-10 13:41:21,Rebased.,https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-642017211,642017211,
jnewbery,2020-07-13 14:59:21,concept ACK. Needs rebase,https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-657611416,657611416,
theStack,2020-07-13 17:15:34,Rebased.,https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-657684129,657684129,
jnewbery,2020-07-13 20:58:59,"I'm modifying my concept ACK to a partial concept ACK. @theuni has pointed out to me that for maximum flexibility, we should potentially be able to run the software with different components disabled, eg it should be possible to run with connman or banman disabled. It's not possible to run net_processing without a connman, but it should be possible to run without a banman, and that possibility was",https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-657790546,657790546,
theStack,2020-07-14 11:53:50,@jnewbery: I see your PR #19514 already covers points 2 and 3 of your list. Will remove the BanMan pointer by references replacements and rebase on master as soon as #19514 is merged.,https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-658137030,658137030,
jnewbery,2020-07-14 13:53:04,#19514 is merged. I'll review this as soon as it's rebased.,https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-658193026,658193026,
theStack,2020-07-14 14:11:57,"Removed BanMan pointer by reference replacements (only leaving CConnman replacements), rebased on master, adapted PR title and PR description accordingly.",https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-658203602,658203602,
theuni,2020-07-14 20:51:58,"Concept NACK. CConnman is a pointer here because it's intended to be (eventually) optional, as a way to run bitcoind without p2p (for only local rpc, wallet, etc.)\n\nMaking it a reference is a step backwards, imo.",https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-658407096,658407096,
MarcoFalke,2020-07-15 06:59:07,"This is only changing stuff inside the call path of `PeerLogicValidation::ProcessMessages`, a function which is impossible to call when connman is nullptr. I don't see how this makes it harder to run without p2p.",https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-658584327,658584327,
jnewbery,2020-07-15 08:30:34,"I tend to agree with @MarcoFalke here. I think if we ran bitcoind without p2p, then both ConnMan and PeerLogicValidation would be disabled. PeerLogicValidation can't do anything without a ConnMan. Contrast that with BanMan, which PeerLogicValidation can very easily run without.\n\nThe fact that `connman` is dereferenced everywhere without being checked first shows that there's an expectation tha",https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-658627037,658627037,
MarcoFalke,2020-07-16 06:07:02,"ACK 0c8461a88ed66a1f70559fc96646708949b17e4b ðŸ•§\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK 0c8461a88ed66a1f70559fc96646708949b17e4b ðŸ•§\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUht4Qv/SineQytgBJXUxI6I4QLHmS7miAD8FwB1cYzr9D4kXhIXNifLt5",https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-659180499,659180499,
JeremyRubin,2020-07-16 16:21:02,"Process wise I don't think that this should have been merged over @theuni's concept nack, especially not without a reasonable amount of time to follow up.",https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-659520587,659520587,
fanquake,2020-07-17 06:27:01,I agree. I would be good to have at-least heard @theuni's thoughts here.,https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-659890148,659890148,
laanwj,2020-07-17 09:50:03,I'm going to revert this. I don't think there was enough agreement to make this change. See #19542.,https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-660004787,660004787,
theuni,2020-07-17 20:32:48,"For posterity, concept NACK withdrawn. Agree with @MarcoFalke and @jnewbery above.\n\nACK 0c8461a88ed66a1f70559fc96646708949b17e4b.",https://github.com/bitcoin/bitcoin/pull/19174#issuecomment-660324875,660324875,
