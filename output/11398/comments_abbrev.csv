jl2012,2017-09-26T17:34:35Z,"@jnewbery \n1. Yes it needs a BIP. Not sure if it should be added to BIP90, or have a new BIP\n2. It's because `bip68-112-113-p2p.py` activates it at 576",https://github.com/bitcoin/bitcoin/pull/11398#issuecomment-332275775,332275775,
gmaxwell,2017-09-27T00:56:22Z,If this is getting a BIP (I agree thats reasonable) it should perhaps be bundled with the ones for BIP143/BIP147.,https://github.com/bitcoin/bitcoin/pull/11398#issuecomment-332377472,332377472,
jl2012,2017-09-27T18:16:29Z,"As suggested I made another commit to hardcode SEGWIT deployment. To make it compatible with #11403, segwit is always active on regtest, unless overridden",https://github.com/bitcoin/bitcoin/pull/11398#issuecomment-332610478,332610478,
jtimon,2017-09-30T12:27:38Z,"Concept ACK, I was about to write this same thing on top of https://github.com/bitcoin/bitcoin/pull/11426\nWould you consider rebasing on top of it? I think it would make the code slightly nicer (you can just move DEPLOYMENT_CSV and DEPLOYMENT_SEGWIT from DeploymentPos to BuriedDeploymentPos instead of having to declare consensusParams.CSVHeight and consensusParams.SEGWITHeight ).\n",https://github.com/bitcoin/bitcoin/pull/11398#issuecomment-333305401,333305401,
jl2012,2017-09-30T12:49:29Z,@jtimon will do,https://github.com/bitcoin/bitcoin/pull/11398#issuecomment-333306457,333306457,
jl2012,2017-09-30T17:38:35Z,rebased on #11426,https://github.com/bitcoin/bitcoin/pull/11398#issuecomment-333324034,333324034,
jtimon,2017-09-30T18:09:46Z,"Review by stages, so far up to 9ff60be3a45c9a02ac65e126976de9c54b188495\n\nEDIT: perhaps it would be nice to do the rpc preparations before chaging anything from bip9 to bip90.\n\nAlthough I know some people don't like dividing things so much, I wouldn't complain about this rebasing on top of a PR with all the common preparations and the move only for csv (than whatever extra test preparations",https://github.com/bitcoin/bitcoin/pull/11398#issuecomment-333325969,333325969,
jnewbery,2017-10-03T20:53:10Z,"I don't think this should be dependant on #11426. I'm indifferent to whether #11426 is merged, but there's at least some disagreement as to whether it's beneficial.\n\nThis PR had already received some code review prior to the rebase, so I think it makes sense to leave it based on master.",https://github.com/bitcoin/bitcoin/pull/11398#issuecomment-333974973,333974973,
sdaftuar,2017-10-10T19:46:45Z,"Concept ACK.  As @jnewbery pointed out in https://github.com/bitcoin/bitcoin/pull/11389#pullrequestreview-67450833, the script interpreter doesn't allow SCRIPT_VERIFY_WITNESS if P2SH is not also set.  I think we can just pin P2SH to also always be on in regtest to ensure this never happens?",https://github.com/bitcoin/bitcoin/pull/11398#issuecomment-335586581,335586581,
sipa,2017-10-10T20:34:21Z,"Perhaps this is beyond the scope of this PR, but I would prefer it if a buried deployment wouldn't require all code paths that check the BIP9 status to require changing (and instead plug in the burying into the BIP9 status logic, so that it just always returns DEFINED before the bury height, and always ACTIVE after?). Advantages:\n* Easier to review the change that buries a deployment.\n* Suppor",https://github.com/bitcoin/bitcoin/pull/11398#issuecomment-335599326,335599326,
MarcoFalke,2017-11-10T18:28:34Z,Needs rebase,https://github.com/bitcoin/bitcoin/pull/11398#issuecomment-343550044,343550044,
jnewbery,2018-01-26T19:05:37Z,"Needs rebase. @jl2012 - is this abandoned? I think it'd be great to get it merged around the same time as #11739 to formalize segwit activation rules and clear up the testing (although there are no dependencies between the two PRs).\n\nI still think you should remove the dependency on #11426.",https://github.com/bitcoin/bitcoin/pull/11398#issuecomment-360875203,360875203,
jnewbery,2018-02-05T17:23:48Z,It appears that this PR is abandoned. I've opened #12360 as a replacement.,https://github.com/bitcoin/bitcoin/pull/11398#issuecomment-363156114,363156114,
fanquake,2018-02-05T22:24:13Z,Closing in favour of #12360,https://github.com/bitcoin/bitcoin/pull/11398#issuecomment-363242004,363242004,
jnewbery,2017-09-26T15:10:50Z,"why not combine `['reject']['status']` with `['active']` below? Once these buried softforks are pinned, an active ISM softfork is equivalent to an active BIP9 softfork.",https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141087275,141087275,src/rpc/blockchain.cpp
jnewbery,2017-09-26T15:11:46Z,"assert is a statement, not a function. This should be:\n\n`assert get_buried_softforks_status(self.nodes[0], 'csv')`",https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141087565,141087565,test/functional/bip68-sequence.py
jnewbery,2017-09-26T15:12:27Z,"nit: prefer a name like `buried_softfork_active()`, since this is returning a bool (True if the softfork is active)",https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141087838,141087838,test/functional/test_framework/util.py
jnewbery,2017-09-26T15:14:19Z,"I don't understand what this is supposed to be doing. This will always assert if we drop down to this line (a string has truthiness `True`, so `not ""string""` is always `False`)",https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141088460,141088460,test/functional/test_framework/util.py
jl2012,2017-09-26T17:25:32Z,No special reason. I just want to keep existing response untouched,https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141125600,141125600,src/rpc/blockchain.cpp
jl2012,2017-09-26T17:31:08Z,"It would drop down to this line only if `key` is not found in the results of `getblockchaininfo()`. I want it to exit with the error ""unknown softfork"" printed",https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141127102,141127102,test/functional/test_framework/util.py
jnewbery,2017-09-26T18:26:19Z,"ok, in that case you can be much more compact:\n\n```python\ndef get_buried_softforks_status(node, key):\n    softforks = [sf for sf in node.getblockchaininfo()['softforks'] if sf['id'] == key]\n    assert softforks, ""get_buried_softforks_status() called with invalid softfork %s"" % key\n    return softforks[0]['active']\n```\n\n(assuming you make the change from `['reject']['status']` wit",https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141143019,141143019,test/functional/test_framework/util.py
jnewbery,2017-09-26T18:40:09Z,Can remove these two lines,https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141146835,141146835,test/functional/bip68-112-113-p2p.py
jnewbery,2017-09-26T18:45:08Z,I suggest you change this to 432 to avoid having to change bip68-sequence.py,https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141148275,141148275,src/chainparams.cpp
jnewbery,2017-09-26T18:45:25Z,Suggestion: Change this to 345,https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141148370,141148370,test/functional/bip68-112-113-p2p.py
jnewbery,2017-09-26T18:45:39Z,"assert is a statement, not a function",https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141148442,141148442,test/functional/bip68-112-113-p2p.py
jnewbery,2017-09-27T19:32:11Z,I honestly think `['reject']['status']` makes almost no sense in a post-ISM world. This PR is already a breaking API change (`getblockchaininfo` RPC no longer returns `bip9_softforks['csv']`) so why not use the opportunity to rationalize the way the information is presented to the user?,https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141445169,141445169,src/rpc/blockchain.cpp
jnewbery,2017-09-27T19:45:15Z,`9` seems like an abuse of the `version` field here,https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141448246,141448246,src/rpc/blockchain.cpp
jnewbery,2017-09-27T19:47:52Z,just pass `height` by value,https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141448858,141448858,src/rpc/blockchain.cpp
jnewbery,2017-09-27T19:50:04Z,not addressed in 48e683d18d4d3d995e7192048d4182c4c0eac0be,https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141449373,141449373,test/functional/bip68-112-113-p2p.py
jnewbery,2017-09-27T19:52:38Z,This (and other comments in this test) need to be changed to reflect CSV activation at height 432,https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141449978,141449978,test/functional/bip68-112-113-p2p.py
jnewbery,2017-09-27T19:58:19Z,sort alphabetically?,https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141451336,141451336,src/init.cpp
jnewbery,2017-09-27T19:59:47Z,nit: no hungarian notation please. `segwit_height` or `height` should do.,https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141451669,141451669,src/init.cpp
jnewbery,2017-09-27T20:06:46Z,"nit: no hungarian notation.\n\nYou could just do away with the local variable entirely:\n\n```\n    return ((int)chainActive.Height() >= params.SEGWITHeight);\n```\n",https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141453310,141453310,src/validation.cpp
jnewbery,2017-09-27T20:08:10Z,why do you need to check the `-segwitheight` argument here? Hasn't `consensusParams.SEGWITHeight` been updated by the time this function is called?,https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141453624,141453624,src/validation.cpp
jl2012,2017-09-28T04:03:57Z,"I try to keep the current behavior that the witness commitment is not made if segwit is disabled (before: nTimeout == 0 / after: SEGWITHeight < 0). If you use `-segwitheight=-1`, it should work identical to a non-segwit node. This is needed for some tests in p2p-segwit.py related to the witness commitment. (we could remove those tests, of course)",https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141522257,141522257,src/validation.cpp
jl2012,2017-09-28T04:05:34Z,ok. Maybe I should use `consensusParams.SEGWITHeight != std::numeric_limits<int>::max()` instead,https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141522342,141522342,src/validation.cpp
jl2012,2017-09-28T07:35:47Z,"ok. Then I prefer to just unify `softforks` and `bit_softforks`, so we don't need to break the API everytime we bury a softfork",https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141545039,141545039,src/rpc/blockchain.cpp
jnewbery,2017-09-28T17:57:39Z,"sorry, I misunderstood. I think your existing change is fine (and I agree that we should remove this at a later date once the tests are updated)",https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141691672,141691672,src/validation.cpp
jl2012,2017-09-29T19:15:00Z,Many different places use IsWitnessEnabled but not all look at the tip,https://github.com/bitcoin/bitcoin/pull/11398#discussion_r141946408,141946408,src/validation.cpp
jtimon,2017-11-11T19:53:34Z,bikeshed: s/bip9/versionbits/ ?,https://github.com/bitcoin/bitcoin/pull/11398#discussion_r150392041,150392041,src/rpc/blockchain.cpp
