Sjors,2021-03-02 11:52:28,"cc @ajtowns @luke-jr @TheBlueMatt and those who ACK'd the full PR: @benthecarman, @michaelfolkson, @AnthonyRonning, @lucasmoten. Try:\n```sh\nPREV=bd715ff8 N=2 && git range-diff `git merge-base --all HEAD $PREV`...$PREV HEAD~$N...HEAD --color-moved=dimmed-zebra\n```",https://github.com/bitcoin/bitcoin/pull/21334#issuecomment-788853905,788853905,
michaelfolkson,2021-03-02 12:00:05,Cool. Thanks for opening this Sjors. I'd rather not unpick all the work that has gone into BIP 8 and consensus that has built up around it over the past months. Is there a path forward you could get behind where we do actually refer to BIP 8 rather than BIP 9 even if you are opening pull requests assuming lockinontimeout=false?,https://github.com/bitcoin/bitcoin/pull/21334#issuecomment-788858048,788858048,
Sjors,2021-03-02 12:19:09,"@michaelfolkson these first commits refer to existing BIP9 code, hence the title.\n\nI agree it makes sense to refer to BIP 8 even with `LOT=false` code, but that's not yet applicable here.",https://github.com/bitcoin/bitcoin/pull/21334#issuecomment-788868612,788868612,
ajtowns,2021-03-02 12:49:34,Concept ACK for splitting commits out.,https://github.com/bitcoin/bitcoin/pull/21334#issuecomment-788884805,788884805,
luke-jr,2021-03-02 17:59:03,Can you keep this based on 831675c8dccfa6525ffe751da3cc60709c380953 please? (So it's a clean merge to both 0.21 and master),https://github.com/bitcoin/bitcoin/pull/21334#issuecomment-789097632,789097632,
DrahtBot,2021-03-02 21:37:13,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/21334#issuecomment-789237294,789237294,
Sjors,2021-03-03 13:15:40,"It's now based on based on 831675c, using the `switch` statement suggested above, and using `height + 1` again.\n\n@luke-jr so if I do a followup on this commit, I should base it on 0c471a5f306044cbd2eb230714571f05dd6aaf3c rather than the merge commit?",https://github.com/bitcoin/bitcoin/pull/21334#issuecomment-789706461,789706461,
luke-jr,2021-03-05 00:04:26,"@Sjors Due to conflicts with the remaining BIP 8 code, followups may need to be based on the merge commit - but in ideal circumstances, yes, it would be best to have kept it mergable in both branches where practical.",https://github.com/bitcoin/bitcoin/pull/21334#issuecomment-791042191,791042191,
MarcoFalke,2021-03-02 12:20:32,Any reason to disable the compile time checks that come with a switch-case?,https://github.com/bitcoin/bitcoin/pull/21334#discussion_r585517436,585517436,src/test/versionbits_tests.cpp
Sjors,2021-03-02 12:22:15,IIUC it's to remain compatible with C++11: https://github.com/bitcoin/bitcoin/pull/19573/commits/bae9a452191a7a83478f7d508a54f4a04d385505#r579334677,https://github.com/bitcoin/bitcoin/pull/21334#discussion_r585518400,585518400,src/test/versionbits_tests.cpp
MarcoFalke,2021-03-02 12:29:07,I am pretty sure that `switch` exists way before C++11,https://github.com/bitcoin/bitcoin/pull/21334#discussion_r585522723,585522723,src/test/versionbits_tests.cpp
ajtowns,2021-03-02 12:48:36,"It can't be a constexpr function with a switch. I'm not sure what the reason for it being constexpr was, though; I may have been trying something with templates at one point?",https://github.com/bitcoin/bitcoin/pull/21334#discussion_r585535918,585535918,src/test/versionbits_tests.cpp
Sjors,2021-03-02 13:06:22,I can change it to use switch and not constexpr. Is there a `./configure` flag to force c++11?,https://github.com/bitcoin/bitcoin/pull/21334#discussion_r585547883,585547883,src/test/versionbits_tests.cpp
luke-jr,2021-03-02 21:23:32,@Sjors Automatic if you develop on top of 831675c8dccfa6525ffe751da3cc60709c380953 ;),https://github.com/bitcoin/bitcoin/pull/21334#discussion_r585919708,585919708,src/test/versionbits_tests.cpp
ajtowns,2021-03-03 10:59:17,"```c++\nstatic const std::string StateName(ThresholdState state)\n{\n    switch (state) {\n    case ThresholdState::DEFINED:   return ""DEFINED"";\n    case ThresholdState::STARTED:   return ""STARTED"";\n    case ThresholdState::LOCKED_IN: return ""LOCKED_IN"";\n    case ThresholdState::ACTIVE:    return ""ACTIVE"";\n    case ThresholdState::FAILED:    return ""FAILED"";\n    } // no default case,",https://github.com/bitcoin/bitcoin/pull/21334#discussion_r586319262,586319262,src/test/versionbits_tests.cpp
Sjors,2021-03-03 12:55:39,"Two birds, one stone...",https://github.com/bitcoin/bitcoin/pull/21334#discussion_r586393319,586393319,src/test/versionbits_tests.cpp
