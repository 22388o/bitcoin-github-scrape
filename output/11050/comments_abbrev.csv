ryanofsky,2017-08-15T03:37:18Z,"Added a documentation commit 4195613ea411c164e8b30c5803d35ea90a863dee -> f4c29d6e9d11885f522ea05499261ba0da56af36 ([pr/narg.2](https://github.com/ryanofsky/bitcoin/commits/pr/narg.2) -> [pr/narg.3](https://github.com/ryanofsky/bitcoin/commits/pr/narg.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/narg.2...pr/narg.3))",https://github.com/bitcoin/bitcoin/pull/11050#issuecomment-322369102,322369102,
promag,2017-08-15T13:14:52Z,utACK f4c29d6.,https://github.com/bitcoin/bitcoin/pull/11050#issuecomment-322462654,322462654,
ryanofsky,2017-08-15T20:21:53Z,"Added another commit to clean up getbalance code a little and make it return nicer errors: f4c29d6e9d11885f522ea05499261ba0da56af36 -> a53cb75c9f8a8aca54830039bc1ed7f160a6e30c ([pr/narg.3](https://github.com/ryanofsky/bitcoin/commits/pr/narg.3) -> [pr/narg.4](https://github.com/ryanofsky/bitcoin/commits/pr/narg.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/narg.3...pr/narg.4)).\n",https://github.com/bitcoin/bitcoin/pull/11050#issuecomment-322577723,322577723,
meshcollider,2017-08-16T12:09:33Z,utACK https://github.com/bitcoin/bitcoin/commit/745d2e315f39d7591c0ea9e772a19e3cd9b51b09,https://github.com/bitcoin/bitcoin/pull/11050#issuecomment-322750521,322750521,
promag,2017-08-18T00:37:10Z,utACK 745d2e3.,https://github.com/bitcoin/bitcoin/pull/11050#issuecomment-323229596,323229596,
TheBlueMatt,2017-08-20T21:07:33Z,utACK 745d2e315f39d7591c0ea9e772a19e3cd9b51b09,https://github.com/bitcoin/bitcoin/pull/11050#issuecomment-323612072,323612072,
laanwj,2017-08-22T07:26:34Z,utACK 745d2e3,https://github.com/bitcoin/bitcoin/pull/11050#issuecomment-323942425,323942425,
promag,2017-08-15T00:55:22Z,`get_array` already throws and above you also replace `RPCTypeCheck` validation with `get_bool`. Remove?,https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133097520,133097520,src/wallet/rpcwallet.cpp
promag,2017-08-15T00:59:09Z,IMO `size()` sounds better in this case.,https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133097936,133097936,src/wallet/rpcwallet.cpp
ryanofsky,2017-08-15T01:17:51Z,"> get_array already throws and above you also replace RPCTypeCheck validation with get_bool. Remove?\n\nIt throws a different error that doesn't specify passed type name.",https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133099769,133099769,src/wallet/rpcwallet.cpp
ryanofsky,2017-08-15T01:28:14Z,"The problem with checking size == 1 is that it's fragile and will break if you want to add new arguments to the RPC. \n\nChecking params.size() can also create confusion when using named arguments, because the current named argument implementation creates variable length null-padded arrays, so adding or removing one named argument can cause a completely different argument to switch from missing ",https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133100918,133100918,src/wallet/rpcwallet.cpp
promag,2017-08-15T01:37:12Z,So add `RPCTypeCheckArgument` for 1st param?,https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133101709,133101709,src/wallet/rpcwallet.cpp
promag,2017-08-15T01:37:59Z,"Sorry, you did!",https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133101777,133101777,src/wallet/rpcwallet.cpp
promag,2017-08-15T01:40:16Z,If another argument is added then this would be `if (request.params[1].isNull() && request.params[2].isNull())` right?,https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133102009,133102009,src/wallet/rpcwallet.cpp
ryanofsky,2017-08-15T03:14:11Z,"\nThread https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133097936\n\nNo, params[1] is the `transactions` argument to the `lockunspent` RPC. The `transactions` argument may be an array of transaction outputs, or it may be null, or it may be missing.\n\nThis code is just saying that if the `transactions` argument is null or missing, then all transactions should be unlocked. The previ",https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133109710,133109710,src/wallet/rpcwallet.cpp
laanwj,2017-08-15T07:49:30Z,Agree with ryanofsky. `isNull` is correct here.,https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133133654,133133654,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-08-17T18:40:51Z,Couldnt this just be request.params[1].isTrue() like many other checks?,https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133796083,133796083,src/rpc/rawtransaction.cpp
TheBlueMatt,2017-08-17T18:43:52Z,How about we just stop type-checking it instead?,https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133796793,133796793,src/wallet/rpcwallet.cpp
ryanofsky,2017-08-17T18:59:30Z,"> Couldnt this just be request.params[1].isTrue() like many other checks?\n\nThis would be a different (and I think worse) behavior. Calling get_bool will throw an exception if the type is not boolean, while calling isTrue will just return false. I think it's better to throw an exception if a value other than true, false, or null is passed, instead taking all strings, objects and numbers to be f",https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133800650,133800650,src/rpc/rawtransaction.cpp
jnewbery,2017-08-17T19:04:22Z,"This is safer. It throws an error when the user passes in ""True"" as a string (rather than silently evaluating to false)",https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133801798,133801798,src/rpc/rawtransaction.cpp
ryanofsky,2017-08-17T19:10:12Z,"> How about we just stop type-checking it instead?\n\nI think there's some benefit to keeping the type checking here, and it doesn't really cost anything. Maybe somebody forgets the dummy parameter and is calling this RPC with a comment. Slightly better to throw an error in get_int instead of silently dropping the comment.",https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133803001,133803001,src/wallet/rpcwallet.cpp
jnewbery,2017-08-17T19:16:28Z,"> It throws a different error that doesn't specify passed type name.\n\nSo we should update `is_<type>()` error message to output the passed type.",https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133804333,133804333,src/wallet/rpcwallet.cpp
ryanofsky,2017-08-17T19:44:03Z,"> So we should update is_<type>() error message to output the passed type.\n\nIf you mean `get_<type>()` error message, we can do this but it would involve making a change upstream in https://github.com/jgarzik/univalue. Anyway this commit is trying to do exactly one thing: ""treat null arguments the same as missing arguments, instead of throwing type errors"". If people don't like RPCTypeCheck fu",https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133810218,133810218,src/wallet/rpcwallet.cpp
jnewbery,2017-08-17T21:07:58Z,"yes, I meant `get_<type>()`.\n\nAgree that this should be done in a follow-up PR. I've tested that this PR maintains existing behaviour for the error checking in `lockunspent`",https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133829303,133829303,src/wallet/rpcwallet.cpp
promag,2017-08-17T23:09:51Z,This param should be type checked?,https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133850525,133850525,src/rpc/rawtransaction.cpp
promag,2017-08-17T23:14:17Z,Add `{}` where appropriate. ,https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133851133,133851133,src/rpc/net.cpp
ryanofsky,2017-08-18T00:03:10Z,"> Add {} where appropriate.\n\nAdded as followup in https://github.com/bitcoin/bitcoin/pull/11050#issue-250186439. This PR is already doing a bunch of different things and has been reviewed by 4 people. I don't want to add noise, delay, and complexity sticking braces everywhere as well.",https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133856869,133856869,src/rpc/net.cpp
ryanofsky,2017-08-18T00:07:37Z,"> This param should be type checked?\n\nAdded as followup in https://github.com/bitcoin/bitcoin/pull/11050#issue-250186439. This commit is not changing behavior in any way, and the PR is not adding new type checking in other places.",https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133857326,133857326,src/rpc/rawtransaction.cpp
ryanofsky,2017-08-18T00:16:40Z,Added as followup in https://github.com/bitcoin/bitcoin/pull/11050#issue-250186439,https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133858276,133858276,src/wallet/rpcwallet.cpp
promag,2017-08-18T00:35:35Z,Sure.,https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133860075,133860075,src/rpc/net.cpp
promag,2017-08-18T00:36:15Z,"> This commit is not changing behavior\n\nRight!",https://github.com/bitcoin/bitcoin/pull/11050#discussion_r133860125,133860125,src/rpc/rawtransaction.cpp
laanwj,2017-08-22T07:25:58Z,"> rather than silently evaluating to false\n\nYes, please be careful to throw exceptions on wrong types instead of silently ignoring errors. Than can lead to hazardous bugs in user code.",https://github.com/bitcoin/bitcoin/pull/11050#discussion_r134402722,134402722,src/rpc/rawtransaction.cpp
