DrahtBot,2020-06-17 23:20:16,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19826 (Pass mempool reference to chainstate constructor by MarcoFalke)\n* #19806 (validation: UTXO snapshot activation by",https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-645675813,645675813,
hebasto,2020-06-18 09:04:41,"From [IRC](http://www.erisian.com.au/bitcoin-core-dev/log-2020-06-18.html#l-34):\n> \<sipa\> eh, i agree - that change isn't a step in the right direction\n\n@sipa \nWhich direction is right?",https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-645885934,645885934,
hebasto,2020-06-18 09:28:35,"From [IRC](http://www.erisian.com.au/bitcoin-core-dev/log-2020-06-18.html#l-96):\n> \<jeremyrubin\> I think it's basically getting rid of a recursive mutex for code that's still designed to take a recursive mutex\n> \<gwillen\> it's better than a true recursive mutex because it's not possible to recurse by accident, you have to declare at call time which behavior you want (although better if you",https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-645899608,645899608,
hebasto,2020-06-18 09:31:16,Searching for concept (N)ACKs before separating digestible chunks for reviewing into smaller pulls.,https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-645901110,645901110,
MarcoFalke,2020-06-18 11:29:54,"Currently this adds a lot of code complexity. Also, it adds mental complexity to write code that doesn't crash or deadlock/UB whereas the `RecursiveMutex` just works (TM).\n\nMaybe there is a way to achieve the same without the added complexity? For example, always force the caller to take the lock for the right scope. This would also solve issues of non-atomic RPC responses or at make them more",https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-645957467,645957467,
hebasto,2020-06-18 11:38:59,"> Currently this adds a lot of code complexity. Also, it adds mental complexity to write code that doesn't crash or deadlock/UB whereas the `RecursiveMutex` just works (TM).\n\nA function that locks `RecursiveMutex` there are no guarantees that protected invariants are held before locking. This adds mental complexity to read code.\n\n> Maybe there is a way to achieve the same without the added",https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-645961153,645961153,
gwillen,2020-06-19 19:34:43,"@hebasto Do you have any thoughts on ""function takes `bool locked`"" versus ""split function into _locked and _unlocked variants""?\n\nIn some of the cases here, I see that the latter would require some (maybe substantial) refactoring to avoid code duplication, and I assume that's why you didn't go that route. But that would not only eliminate conditional locking (which is scary), it would probably",https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-646830650,646830650,
hebasto,2020-06-20 12:41:58,"@gwillen \n> @hebasto Do you have any thoughts on ""function takes `bool locked`"" versus ""split function into _locked and _unlocked variants""?\n\nFor new code I prefer clean ""split function into _locked and _unlocked variants"" like https://github.com/bitcoin/bitcoin/pull/19238#discussion_r442410258. Unfortunately, that is not the case in this PR.\n\n> In some of the cases here, I see that the ",https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-646989728,646989728,
hebasto,2020-06-20 13:04:04,Rebased 4e00526c689c4164d02d8ca76331f3ed5da7b13c -> c9e7d011d69bb1ef965945bf90d7441165430808 ([pr19306.01](https://github.com/hebasto/bitcoin/commits/pr19306.01) -> [pr19306.02](https://github.com/hebasto/bitcoin/commits/pr19306.02)) due to the conflict with #19293.,https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-646992056,646992056,
hebasto,2020-06-23 17:30:46,Rebased c9e7d011d69bb1ef965945bf90d7441165430808 -> 3fc8fa23fc4ff2978c89bba46f08e746b6e4c154 ([pr19306.02](https://github.com/hebasto/bitcoin/commits/pr19306.02) -> [pr19306.03](https://github.com/hebasto/bitcoin/commits/pr19306.03)) due to the conflicts with #18027 and #19198.,https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-648306831,648306831,
hebasto,2020-06-24 18:17:44,Rebased 3fc8fa23fc4ff2978c89bba46f08e746b6e4c154 -> ff3d969891b0687219906f18e66c5bb499915968 ([pr19306.03](https://github.com/hebasto/bitcoin/commits/pr19306.03) -> [pr19306.04](https://github.com/hebasto/bitcoin/commits/pr19306.04)) due to the conflict with https://github.com/bitcoin-core/gui/pull/11.,https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-648985193,648985193,
hebasto,2020-07-03 09:12:29,Rebased ff3d969891b0687219906f18e66c5bb499915968 -> 511670449669116df5488cd4f807de620e55a7e3 ([pr19306.04](https://github.com/hebasto/bitcoin/commits/pr19306.04) -> [pr19306.05](https://github.com/hebasto/bitcoin/commits/pr19306.05)) due to the conflict with #19331.,https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-653442538,653442538,
hebasto,2020-07-16 18:57:50,Rebased 511670449669116df5488cd4f807de620e55a7e3 -> 0c03cea32d3ab30a58e62bbe42af6ebef016ede4 ([pr19306.05](https://github.com/hebasto/bitcoin/commits/pr19306.05) -> [pr19306.06](https://github.com/hebasto/bitcoin/commits/pr19306.06)) due to the conflicts with #19174 and #19474.,https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-659606337,659606337,
hebasto,2020-07-29 11:32:37,Rebased 0c03cea32d3ab30a58e62bbe42af6ebef016ede4 -> 656cba72f475603497e318ed3f01db4ab694b2af ([pr19306.06](https://github.com/hebasto/bitcoin/commits/pr19306.06) -> [pr19306.07](https://github.com/hebasto/bitcoin/commits/pr19306.07)) due to the conflicts with #18044 and #18637.,https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-665611336,665611336,
hebasto,2020-08-02 21:50:43,"Rebased 656cba72f475603497e318ed3f01db4ab694b2af -> e23248c51c092269a33cde7ad0ff70a815876396 ([pr19306.07](https://github.com/hebasto/bitcoin/commits/pr19306.07) -> [pr19306.08](https://github.com/hebasto/bitcoin/commits/pr19306.08)) due to the conflicts with #18011, #19569, and #19604.",https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-667728985,667728985,
hebasto,2020-08-02 22:47:37,Some commits split out into #19647. So please start reviewing from #19647.,https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-667734476,667734476,
hebasto,2020-08-21 06:56:52,Rebased e23248c51c092269a33cde7ad0ff70a815876396 -> 95b4daa91ea4eecd3f345a20f285fb0528f5070d ([pr19306.08](https://github.com/hebasto/bitcoin/commits/pr19306.08) -> [pr19306.09](https://github.com/hebasto/bitcoin/commits/pr19306.09)) due to the conflict with #19569.,https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-678077957,678077957,
hebasto,2020-08-24 19:14:50,Rebased 95b4daa91ea4eecd3f345a20f285fb0528f5070d -> 1faf43ac3b2cb2a116f501e56c2cd6fed903409c ([pr19306.09](https://github.com/hebasto/bitcoin/commits/pr19306.09) -> [pr19306.10](https://github.com/hebasto/bitcoin/commits/pr19306.10)) due to the conflict with #19704.,https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-679314335,679314335,
hebasto,2020-09-06 12:46:53,Rebased 1faf43ac3b2cb2a116f501e56c2cd6fed903409c -> a887d73dcb05d59067635aff91baf85e0c7c7396 ([pr19306.10](https://github.com/hebasto/bitcoin/commits/pr19306.10) -> [pr19306.12](https://github.com/hebasto/bitcoin/commits/pr19306.12)) due to the merge conflicts.,https://github.com/bitcoin/bitcoin/pull/19306#issuecomment-687780825,687780825,
