[
  {
    "sha": "ff330badd45067cb520b1cfa1844f60a4c9f2031",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZjMzMGJhZGQ0NTA2N2NiNTIwYjFjZmExODQ0ZjYwYTRjOWYyMDMx",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-25T07:19:57Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-26T18:02:46Z"
      },
      "message": "Default to bnb_used = false as there are many cases where BnB is not used",
      "tree": {
        "sha": "cad0b5bb7362c49534382cf0c6286aa69110f93e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cad0b5bb7362c49534382cf0c6286aa69110f93e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff330badd45067cb520b1cfa1844f60a4c9f2031",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff330badd45067cb520b1cfa1844f60a4c9f2031",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ff330badd45067cb520b1cfa1844f60a4c9f2031",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff330badd45067cb520b1cfa1844f60a4c9f2031/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b79caf658019de2c65a53c9e11fd1d2f4c369b6"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 4,
      "deletions": 7
    },
    "files": [
      {
        "sha": "647b381b39471f8d883e9d13af7549b26c9844ce",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff330badd45067cb520b1cfa1844f60a4c9f2031/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff330badd45067cb520b1cfa1844f60a4c9f2031/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ff330badd45067cb520b1cfa1844f60a4c9f2031",
        "patch": "@@ -2270,12 +2270,12 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     std::vector<COutput> vCoins(vAvailableCoins);\n     CAmount value_to_select = nTargetValue;\n \n+    // Default to bnb was not used. If we use it, we set it later\n+    bnb_used = false;\n+\n     // coin control -> return all selected outputs (we want all selected to go into the transaction for sure)\n     if (coin_control.HasSelected() && !coin_control.fAllowOtherInputs)\n     {\n-        // We didn't use BnB here, so set it to false.\n-        bnb_used = false;\n-\n         for (const COutput& out : vCoins)\n         {\n             if (!out.fSpendable)\n@@ -2300,14 +2300,12 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n             const CWalletTx& wtx = it->second;\n             // Clearly invalid input, fail\n             if (wtx.tx->vout.size() <= outpoint.n) {\n-                bnb_used = false;\n                 return false;\n             }\n             // Just to calculate the marginal byte size\n             CInputCoin coin(wtx.tx, outpoint.n, wtx.GetSpendSize(outpoint.n, false));\n             nValueFromPresetInputs += coin.txout.nValue;\n             if (coin.m_input_bytes <= 0) {\n-                bnb_used = false;\n                 return false; // Not solvable, can't estimate size for fee\n             }\n             coin.effective_value = coin.txout.nValue - coin_selection_params.effective_fee.GetFee(coin.m_input_bytes);\n@@ -2318,7 +2316,6 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n             }\n             setPresetCoins.insert(coin);\n         } else {\n-            bnb_used = false;\n             return false; // TODO: Allow non-wallet inputs\n         }\n     }\n@@ -2678,7 +2675,7 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n                 }\n \n                 // Choose coins to use\n-                bool bnb_used;\n+                bool bnb_used = false;\n                 if (pick_new_inputs) {\n                     nValueIn = 0;\n                     setCoins.clear();"
      }
    ]
  },
  {
    "sha": "eadd1304c81e0b89178e4cc7630bd31650850c85",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYWRkMTMwNGM4MWUwYjg5MTc4ZTRjYzc2MzBiZDMxNjUwODUwYzg1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-23T03:21:36Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-26T18:02:46Z"
      },
      "message": "tests: Add a test for funding with sufficient preset inputs and subtractFeeFromOutputs",
      "tree": {
        "sha": "5ef912f7e46c08e24d332d8aadf2f7346ab2cfc5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5ef912f7e46c08e24d332d8aadf2f7346ab2cfc5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eadd1304c81e0b89178e4cc7630bd31650850c85",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eadd1304c81e0b89178e4cc7630bd31650850c85",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eadd1304c81e0b89178e4cc7630bd31650850c85",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eadd1304c81e0b89178e4cc7630bd31650850c85/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ff330badd45067cb520b1cfa1844f60a4c9f2031",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff330badd45067cb520b1cfa1844f60a4c9f2031",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ff330badd45067cb520b1cfa1844f60a4c9f2031"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 13,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6f1ae0d3ba4fbf9188adf2471c1a695469b8bc8b",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eadd1304c81e0b89178e4cc7630bd31650850c85/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eadd1304c81e0b89178e4cc7630bd31650850c85/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=eadd1304c81e0b89178e4cc7630bd31650850c85",
        "patch": "@@ -92,6 +92,7 @@ def run_test(self):\n         self.test_option_feerate()\n         self.test_address_reuse()\n         self.test_option_subtract_fee_from_outputs()\n+        self.test_subtract_fee_with_presets()\n \n     def test_change_position(self):\n         \"\"\"Ensure setting changePosition in fundraw with an exact match is handled properly.\"\"\"\n@@ -741,5 +742,17 @@ def test_option_subtract_fee_from_outputs(self):\n         # The total subtracted from the outputs is equal to the fee.\n         assert_equal(share[0] + share[2] + share[3], result[0]['fee'])\n \n+    def test_subtract_fee_with_presets(self):\n+        self.log.info(\"Test fundrawtxn subtract fee from outputs with preset inputs that are sufficient\")\n+\n+        addr = self.nodes[0].getnewaddress()\n+        txid = self.nodes[0].sendtoaddress(addr, 10)\n+        vout = find_vout_for_address(self.nodes[0], txid, addr)\n+\n+        rawtx = self.nodes[0].createrawtransaction([{'txid': txid, 'vout': vout}], [{self.nodes[0].getnewaddress(): 5}])\n+        fundedtx = self.nodes[0].fundrawtransaction(rawtx, {'subtractFeeFromOutputs': [0]})\n+        signedtx = self.nodes[0].signrawtransactionwithwallet(fundedtx['hex'])\n+        self.nodes[0].sendrawtransaction(signedtx['hex'])\n+\n if __name__ == '__main__':\n     RawTransactionsTest().main()"
      }
    ]
  }
]