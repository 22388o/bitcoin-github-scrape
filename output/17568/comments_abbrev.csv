DrahtBot,2019-11-23 05:01:32,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17526](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17526.html) (Use Single Random Draw In addition to knaps",https://github.com/bitcoin/bitcoin/pull/17568#issuecomment-557767502,557767502,
meshcollider,2019-11-23 05:19:15,The new test passes on current master without the code change,https://github.com/bitcoin/bitcoin/pull/17568#issuecomment-557768407,557768407,
achow101,2019-11-23 05:27:49,"> The new test passes on current master without the code change\n\nNot for me:\n\n```\n2019-11-23T05:27:14.580000Z TestFramework (INFO): Test fundrawtxn subtract fee from outputs with preset inputs that are sufficient\n2019-11-23T05:27:14.637000Z TestFramework (ERROR): JSONRPC error\nTraceback (most recent call last):\n  File ""/home/andy/bitcoin/bitcoin/test/functional/test_framework/test_",https://github.com/bitcoin/bitcoin/pull/17568#issuecomment-557768853,557768853,
laanwj,2019-11-23 09:20:29,"I've tested this.\nWhen running the new test on current master's binary, the ""rpc_fundrawtransaction.py"" test gives me a ""test_framework.authproxy.JSONRPCException: Fee exceeds maximum configured by -maxtxfee (-4)"" consistently.\nAfter recompile with this patch, it passes.\n\nThis is really strange, I wonder what causes the difference in behavior for @meshcollider .\n",https://github.com/bitcoin/bitcoin/pull/17568#issuecomment-557781538,557781538,
darosior,2019-11-23 12:37:27,FWIW the test pass on master for me as well (without the code change).,https://github.com/bitcoin/bitcoin/pull/17568#issuecomment-557794453,557794453,
meshcollider,2019-11-24 05:02:29,"```diff\nsamuel@hansome-pc:~/git/bitcoin$ git diff master\ndiff --git a/test/functional/rpc_fundrawtransaction.py b/test/functional/rpc_fundrawtransaction.py\nindex 693051edc..6f1ae0d3b 100755\n--- a/test/functional/rpc_fundrawtransaction.py\n+++ b/test/functional/rpc_fundrawtransaction.py\n@@ -92,6 +92,7 @@ class RawTransactionsTest(BitcoinTestFramework):\n         self.test_option_feerate",https://github.com/bitcoin/bitcoin/pull/17568#issuecomment-557858285,557858285,
achow101,2019-11-25 07:26:17,"I figured out why we are getting different test results on master.\n\nIt's because bnb_used is not initialized, so the access is undefined behavior and changes depending on the optimizations used. I always configured with `--enable-debug` which disables all optimizations. Presumably this results in `bnb_used` having some value that corresponds to `true`. After configuring without `--enable-debug",https://github.com/bitcoin/bitcoin/pull/17568#issuecomment-558026462,558026462,
meshcollider,2019-11-25 08:56:03,"Ah, good find. \n\nCode review ACK d3ca0b4a9621bdab47d22229adbf6f81c0d11384",https://github.com/bitcoin/bitcoin/pull/17568#issuecomment-558055060,558055060,
Sjors,2019-11-25 18:42:04,"@practicalswift spotted a similar issue in #13546. Let's also actually initialize this thing, as @promag [suggested](https://github.com/bitcoin/bitcoin/pull/13546#issuecomment-400985313):\nhttps://github.com/bitcoin/bitcoin/blob/2a97d2b1a525dbc8f6e6610fe543e003acfb7fac/src/wallet/wallet.cpp#L2681",https://github.com/bitcoin/bitcoin/pull/17568#issuecomment-558286757,558286757,
achow101,2019-11-26 18:03:09,Changed `bnb_used` to be initialized to false. Also updated the commit message.,https://github.com/bitcoin/bitcoin/pull/17568#issuecomment-558749883,558749883,
instagibbs,2019-11-26 18:05:57,utACK https://github.com/bitcoin/bitcoin/pull/17568/commits/eadd1304c81e0b89178e4cc7630bd31650850c85,https://github.com/bitcoin/bitcoin/pull/17568#issuecomment-558751012,558751012,
Sjors,2019-11-27 16:12:34,"ACK eadd130. I can't get this new test to fail on macOS (without this PR). It passes whether or not I compile with `--enable-debug`. It does fail on Ubuntu. Yay undefined behavior... Anyway, it's a useful test.",https://github.com/bitcoin/bitcoin/pull/17568#issuecomment-559153260,559153260,
promag,2019-12-01 21:12:21,"@Sjors thanks for the mention.\n\nCode review ACK eadd1304c81e0b89178e4cc7630bd31650850c85.",https://github.com/bitcoin/bitcoin/pull/17568#issuecomment-560159706,560159706,
meshcollider,2019-11-23 03:46:09,Why leave this case here when we know it is false?,https://github.com/bitcoin/bitcoin/pull/17568#discussion_r349856687,349856687,src/wallet/wallet.cpp
achow101,2019-11-23 04:35:57,"Oops, forgot to delete that.",https://github.com/bitcoin/bitcoin/pull/17568#discussion_r349858178,349858178,src/wallet/wallet.cpp
