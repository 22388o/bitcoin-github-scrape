[
  {
    "sha": "78f589ad28099ccda0819c32cc2ea51b0358e7de",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OGY1ODlhZDI4MDk5Y2NkYTA4MTljMzJjYzJlYTUxYjAzNThlN2Rl",
    "commit": {
      "author": {
        "name": "ptschip",
        "email": "peter.tschipper@gmail.com",
        "date": "2015-08-11T15:52:57Z"
      },
      "committer": {
        "name": "ptschip",
        "email": "peter.tschipper@gmail.com",
        "date": "2015-08-11T15:52:57Z"
      },
      "message": "Enable running of python regression test on windows\n\n1) rpc-tests.sh - take out the exit if windows and also do not allow running of run-bitcoin-cli\n   as it cannot be invoked as a windows process through python\n2) util.py - allow for handling of windows NUL files, add extra code around the creation\n   of the \"cache\" files in the event one or several are missing,",
      "tree": {
        "sha": "a204056a7a777c5a4bbce57858994a744b78c7bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a204056a7a777c5a4bbce57858994a744b78c7bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78f589ad28099ccda0819c32cc2ea51b0358e7de",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78f589ad28099ccda0819c32cc2ea51b0358e7de",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78f589ad28099ccda0819c32cc2ea51b0358e7de",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78f589ad28099ccda0819c32cc2ea51b0358e7de/comments",
    "author": {
      "login": "ptschip",
      "id": 12862928,
      "node_id": "MDQ6VXNlcjEyODYyOTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12862928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptschip",
      "html_url": "https://github.com/ptschip",
      "followers_url": "https://api.github.com/users/ptschip/followers",
      "following_url": "https://api.github.com/users/ptschip/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptschip/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptschip/subscriptions",
      "organizations_url": "https://api.github.com/users/ptschip/orgs",
      "repos_url": "https://api.github.com/users/ptschip/repos",
      "events_url": "https://api.github.com/users/ptschip/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptschip/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ptschip",
      "id": 12862928,
      "node_id": "MDQ6VXNlcjEyODYyOTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12862928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptschip",
      "html_url": "https://github.com/ptschip",
      "followers_url": "https://api.github.com/users/ptschip/followers",
      "following_url": "https://api.github.com/users/ptschip/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptschip/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptschip/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptschip/subscriptions",
      "organizations_url": "https://api.github.com/users/ptschip/orgs",
      "repos_url": "https://api.github.com/users/ptschip/repos",
      "events_url": "https://api.github.com/users/ptschip/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptschip/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "87f37e259d6deb52ee464edde7aece687eea97a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87f37e259d6deb52ee464edde7aece687eea97a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/87f37e259d6deb52ee464edde7aece687eea97a5"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 20,
      "deletions": 8
    },
    "files": [
      {
        "sha": "16c8ca016f6b35e4b75289806a46b7c8aed17f17",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78f589ad28099ccda0819c32cc2ea51b0358e7de/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78f589ad28099ccda0819c32cc2ea51b0358e7de/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=78f589ad28099ccda0819c32cc2ea51b0358e7de",
        "patch": "@@ -5,13 +5,9 @@ CURDIR=$(cd $(dirname \"$0\"); pwd)\n # Get BUILDDIR and REAL_BITCOIND\n . \"${CURDIR}/tests-config.sh\"\n \n-export BITCOINCLI=${BUILDDIR}/qa/pull-tester/run-bitcoin-cli\n+export BITCOINCLI=${REAL_BITCOINCLI}\n export BITCOIND=${REAL_BITCOIND}\n \n-if [ \"x${EXEEXT}\" = \"x.exe\" ]; then\n-  echo \"Win tests currently disabled\"\n-  exit 0\n-fi\n \n #Run the tests\n "
      },
      {
        "sha": "7ce3275aab95ac1bad174b653c8ad86bf228b1cc",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 19,
        "deletions": 3,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78f589ad28099ccda0819c32cc2ea51b0358e7de/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78f589ad28099ccda0819c32cc2ea51b0358e7de/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=78f589ad28099ccda0819c32cc2ea51b0358e7de",
        "patch": "@@ -20,6 +20,12 @@\n from authproxy import AuthServiceProxy, JSONRPCException\n from util import *\n \n+def null_file():\n+    if os.name == 'nt':\n+        return open(\"NUL\", \"w+\")\n+    else:\n+\treturn open(\"/dev/null\", \"w+\")\n+\n def p2p_port(n):\n     return 11000 + n + os.getpid()%999\n def rpc_port(n):\n@@ -78,8 +84,16 @@ def initialize_chain(test_dir):\n     bitcoind and bitcoin-cli must be in search path.\n     \"\"\"\n \n-    if not os.path.isdir(os.path.join(\"cache\", \"node0\")):\n-        devnull = open(\"/dev/null\", \"w+\")\n+    if ( not os.path.isdir(os.path.join(\"cache\", \"node0\"))\n+             or not os.path.isdir(os.path.join(\"cache\", \"node1\")) \n+             or not os.path.isdir(os.path.join(\"cache\", \"node2\")) \n+             or not os.path.isdir(os.path.join(\"cache\", \"node3\")) ):\n+\n+        #find and delete old cache directories if any exist\n+        for i in range(4):\n+\t    if os.path.isdir(os.path.join(\"cache\", \"node\"+str(i))): shutil.rmtree(os.path.join(\"cache\", \"node\"+str(i)))\n+\n+        devnull = null_file()\n         # Create cache directories, run bitcoinds:\n         for i in range(4):\n             datadir=initialize_datadir(\"cache\", i)\n@@ -171,9 +185,10 @@ def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=\n     args = [ binary, \"-datadir=\"+datadir, \"-keypool=1\", \"-discover=0\", \"-rest\" ]\n     if extra_args is not None: args.extend(extra_args)\n     bitcoind_processes[i] = subprocess.Popen(args)\n-    devnull = open(\"/dev/null\", \"w+\")\n+    devnull = null_file()\n     if os.getenv(\"PYTHON_DEBUG\", \"\"):\n         print \"start_node: bitcoind started, calling bitcoin-cli -rpcwait getblockcount\"\n+\n     subprocess.check_call([ os.getenv(\"BITCOINCLI\", \"bitcoin-cli\"), \"-datadir=\"+datadir] +\n                           _rpchost_to_args(rpchost)  +\n                           [\"-rpcwait\", \"getblockcount\"], stdout=devnull)\n@@ -221,6 +236,7 @@ def wait_bitcoinds():\n \n def connect_nodes(from_connection, node_num):\n     ip_port = \"127.0.0.1:\"+str(p2p_port(node_num))\n+   \n     from_connection.addnode(ip_port, \"onetry\")\n     # poll until version handshake complete to avoid race conditions\n     # with transaction relaying"
      }
    ]
  }
]