theuni,2017-09-28T18:12:31Z,"Rebased after #10663.\n\nAlso, changed from the last version: Rather than passing in a socket reference and returning a bool, CreateSocket() now returns a socket (which may be invalid) instead. That's much more straightforward, IMO, and matches the usage of socket().",https://github.com/bitcoin/bitcoin/pull/11363#issuecomment-332919589,332919589,
theuni,2017-11-07T21:22:57Z,"Rebased and fixed the check against the connect() return value, which was already wrong, but doesn't really matter because it's always detected on first use anyway.",https://github.com/bitcoin/bitcoin/pull/11363#issuecomment-342626470,342626470,
TheBlueMatt,2017-11-07T21:23:23Z,utACK f766175ebe4400561f60b75b0ede4015003bad8c,https://github.com/bitcoin/bitcoin/pull/11363#issuecomment-342626592,342626592,
laanwj,2017-12-12T10:46:02Z,"This gives me a new warning:\n```\n/.../bitcoin/src/netbase.cpp:449:17: warning: comparison of integers of different signs: 'SOCKET' (aka 'unsigned int') and 'int' [-Wsign-compare]\n    if (hSocket == -1)\n        ~~~~~~~ ^  ~~\n1 warning generated.\n```",https://github.com/bitcoin/bitcoin/pull/11363#issuecomment-351014618,351014618,
theuni,2017-12-12T20:34:18Z,"@laanwj Yes, thanks. Due to our SOCKET wrappers, we need to compare against INVALID_SOCKET rather than SOCKET_ERROR. Pushed the squashed change as it was very simple (it's actually just reverting a change from this PR, it was already correct in master).\n\nDiff from before: git diff f766175ebe44..3830b6e06591\n```patch\n\ndiff --git a/src/netbase.cpp b/src/netbase.cpp\nindex ba2c988..74ea6b1",https://github.com/bitcoin/bitcoin/pull/11363#issuecomment-351185698,351185698,
laanwj,2017-12-13T04:42:22Z,utACK 3830b6e0659106458c941029f5b2e789e3cb38a3,https://github.com/bitcoin/bitcoin/pull/11363#issuecomment-351280671,351280671,
promag,2017-09-20T00:19:30Z,If socks negotiation fail then `hSocket` will not be `INVALID_SOCKET` which is a different behavior than before. This also indicates that there is a leak in master because `hSocket` is not freed?,https://github.com/bitcoin/bitcoin/pull/11363#discussion_r139849608,139849608,src/netbase.cpp
theuni,2017-09-20T01:51:52Z,"Nice Catch! Force-pushed the missing CloseSocket()s.\n```diff\ndiff --git a/src/netbase.cpp b/src/netbase.cpp\nindex 18763d2..4b72826 100644\n--- a/src/netbase.cpp\n+++ b/src/netbase.cpp\n@@ -561,11 +561,15 @@ bool ConnectThroughProxy(const proxyType &proxy, const std::string& strDest, int\n         ProxyCredentials random_auth;\n         static std::atomic_int counter(0);\n         rando",https://github.com/bitcoin/bitcoin/pull/11363#discussion_r139859391,139859391,src/netbase.cpp
promag,2017-09-20T10:09:25Z,`CloseSocket` sets `hSocket` to `INVALID_SOCKET` so this LGTM. I wonder if you could just `return CloseSocket(hSocket)`?,https://github.com/bitcoin/bitcoin/pull/11363#discussion_r139928315,139928315,src/netbase.cpp
theuni,2017-09-20T17:15:48Z,"CloseSocket's return value indicates whether the close succeeded or not, which would be true in this case. Not what we want :)",https://github.com/bitcoin/bitcoin/pull/11363#discussion_r140034168,140034168,src/netbase.cpp
promag,2017-09-21T09:44:39Z,Ahhh yeah... now I win the most stupid comment award.,https://github.com/bitcoin/bitcoin/pull/11363#discussion_r140195540,140195540,src/netbase.cpp
theuni,2017-09-21T14:48:11Z,"Hah, no worries. We'll call it even for pointing out my mistake here",https://github.com/bitcoin/bitcoin/pull/11363#discussion_r140263956,140263956,src/netbase.cpp
TheBlueMatt,2017-09-28T23:48:28Z,"You need to change the return values values of all the ""return false""s in here - INVALID_SOCKET is (currently) ~0, so we will pretend the socket creation succeeded.",https://github.com/bitcoin/bitcoin/pull/11363#discussion_r141762603,141762603,src/netbase.cpp
TheBlueMatt,2017-09-28T23:50:23Z,"At the risk of making you redo a bunch of work, is it possible to const-ify the socket here and make the caller do the CloseSocket instead? Shits currently a maze and it'd be nice to clean it up sooner rather than try to follow it through the libevent changes.",https://github.com/bitcoin/bitcoin/pull/11363#discussion_r141762847,141762847,src/netbase.cpp
theuni,2017-09-29T00:07:35Z,"Thanks, don't know how I missed those.",https://github.com/bitcoin/bitcoin/pull/11363#discussion_r141764714,141764714,src/netbase.cpp
theuni,2017-09-29T00:17:19Z,"Yes, that makes sense. Now that we don't have chained connect functions, it's much more clear what ""the caller"" means. The maze was only there because we had to close at all levels to be safe.\n\nWill do.",https://github.com/bitcoin/bitcoin/pull/11363#discussion_r141765733,141765733,src/netbase.cpp
laanwj,2017-12-12T11:37:08Z,NOSIGPIPE handling moved to `CreateSocket(addrBind)`?,https://github.com/bitcoin/bitcoin/pull/11363#discussion_r156341473,156341473,src/net.cpp
laanwj,2017-12-12T11:38:09Z,"Where did this move? The only remaining reference to TCP_NODELAY I see is in `SetSocketNoDelay`, which is called on accepted sockets only.",https://github.com/bitcoin/bitcoin/pull/11363#discussion_r156341683,156341683,src/net.cpp
TheBlueMatt,2017-12-12T19:12:03Z,"Its also called in netbase.cpp in CreateSocket, so should be set for outbound and inbound connection sockets, though not the listen socket, but that makes sense.",https://github.com/bitcoin/bitcoin/pull/11363#discussion_r156466046,156466046,src/net.cpp
TheBlueMatt,2017-12-12T19:13:07Z,"Yes, I think part of the goal is to get random socket flag-fiddling things out of net and into netbase, its kinda split between both right now. @theuni ?",https://github.com/bitcoin/bitcoin/pull/11363#discussion_r156466360,156466360,src/net.cpp
theuni,2017-12-12T20:10:22Z,"Yep. If it's something we require for all sockets, imo it makes sense to do it in CreateSocket.",https://github.com/bitcoin/bitcoin/pull/11363#discussion_r156482239,156482239,src/net.cpp
theuni,2017-12-12T20:16:20Z,"It's set on the listen socket as well (which should pass it down to accepted sockets anyway), since BindListenPort now uses CreateSocket().",https://github.com/bitcoin/bitcoin/pull/11363#discussion_r156483628,156483628,src/net.cpp
