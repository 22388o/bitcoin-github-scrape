[
  {
    "sha": "fa465e4da4c7242d7edd6339747572d23a39ff98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTQ2NWU0ZGE0YzcyNDJkN2VkZDYzMzk3NDc1NzJkMjNhMzlmZjk4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-22T13:03:35Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-22T13:01:19Z"
      },
      "message": "test: Add missing syncwithvalidationinterfacequeue to wallet_import_rescan",
      "tree": {
        "sha": "ebf759fdb403f64a76ef2aa6bf76207f819d905b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ebf759fdb403f64a76ef2aa6bf76207f819d905b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa465e4da4c7242d7edd6339747572d23a39ff98",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj7ygwAk4RFpfSGwrCSLiH3gjcRGoVizKmh23Cy33JRSMcH+X22HLro7JwOQEWB\nWM/XaYC2CsgrpKRMYV3fxjd2FhO2ZSyTHsPj8tqLQCbgK+BkVRgAQrC5EOU9t+m4\nD8asYgRRStQsB7o4Cq9zOsauOCh+IMeyeeP64+8aOl13ac1CqgOQ9xAqobYqXcyk\n+EMU4yORAokWGht/HhuHRpUi8EhRGx8ijrn2kXLVkmOai8zlkKAp5zi1YPgAv4JU\nTh67k7hqf7BKypxCajFxS3rHuIXO4MTqHvbev7YrJ1BHpj9GCoefm9xdjhdpYzT2\ngQis0VRosfRPzzLJaPty9DZnTExys7lUoK7McVqO1Cd7tvP8xMHjgyQAempOnwTS\nwob6S2HMK/NMNV/ZkOTHKwGl2K64vccz3LEtx+JDINaBsbeD/H6LAOxns/wDmXje\nLQtjQza9fFhSY3VT8VjMybwGXpA4EIv+7J00rsvNphxPnN3fcRDY9yoMQfXWUBC9\n3AuJjfQ8\n=PD84\n-----END PGP SIGNATURE-----",
        "payload": "tree ebf759fdb403f64a76ef2aa6bf76207f819d905b\nparent 56376f336548b53cf31e98a58dfb4db22cede6e5\nauthor MarcoFalke <falke.marco@gmail.com> 1555938215 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1555938079 -0400\n\ntest: Add missing syncwithvalidationinterfacequeue to wallet_import_rescan\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa465e4da4c7242d7edd6339747572d23a39ff98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa465e4da4c7242d7edd6339747572d23a39ff98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa465e4da4c7242d7edd6339747572d23a39ff98/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "56376f336548b53cf31e98a58dfb4db22cede6e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56376f336548b53cf31e98a58dfb4db22cede6e5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/56376f336548b53cf31e98a58dfb4db22cede6e5"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9de30d0374de36eab7d8912ca66900cc78b39a6d",
        "filename": "test/functional/wallet_import_rescan.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa465e4da4c7242d7edd6339747572d23a39ff98/test/functional/wallet_import_rescan.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa465e4da4c7242d7edd6339747572d23a39ff98/test/functional/wallet_import_rescan.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_import_rescan.py?ref=fa465e4da4c7242d7edd6339747572d23a39ff98",
        "patch": "@@ -166,11 +166,12 @@ def run_test(self):\n         timestamp = self.nodes[0].getblockheader(self.nodes[0].getbestblockhash())[\"time\"]\n         set_node_times(self.nodes, timestamp + TIMESTAMP_WINDOW + 1)\n         self.nodes[0].generate(1)\n-        self.sync_blocks()\n+        self.sync_all()\n \n         # For each variation of wallet key import, invoke the import RPC and\n         # check the results from getbalance and listtransactions.\n         for variant in IMPORT_VARIANTS:\n+            self.log.info('Run import for variant {}'.format(variant))\n             variant.expect_disabled = variant.rescan == Rescan.yes and variant.prune and variant.call == Call.single\n             expect_rescan = variant.rescan == Rescan.yes and not variant.expect_disabled\n             variant.node = self.nodes[2 + IMPORT_NODES.index(ImportNode(variant.prune, expect_rescan))]\n@@ -192,10 +193,11 @@ def run_test(self):\n         # Generate a block containing the new transactions.\n         self.nodes[0].generate(1)\n         assert_equal(self.nodes[0].getrawmempool(), [])\n-        self.sync_blocks()\n+        self.sync_all()\n \n         # Check the latest results from getbalance and listtransactions.\n         for variant in IMPORT_VARIANTS:\n+            self.log.info('Run check for variant {}'.format(variant))\n             if not variant.expect_disabled:\n                 variant.expected_balance += variant.sent_amount\n                 variant.expected_txs += 1"
      }
    ]
  }
]