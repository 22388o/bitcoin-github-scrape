[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534049877",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-534049877",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 534049877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDA0OTg3Nw==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-23T10:53:57Z",
    "updated_at": "2019-09-23T10:53:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Somewhat follows the suggestions of [@luke-jr](https://github.com/bitcoin/bitcoin/pull/15558#issuecomment-471239506) and [@jgarzik](https://github.com/bitcoin/bitcoin/pull/15558#issuecomment-471208937) in #15558",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534049877/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534052183",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-534052183",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 534052183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDA1MjE4Mw==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-23T11:02:05Z",
    "updated_at": "2019-09-23T11:02:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Behaviour looks like:\r\n\r\n```\r\n2019-09-23T10:54:49Z dnsseed thread start\r\n2019-09-23T10:54:49Z Waiting 300 seconds before falling back to DNS seeds.\r\n2019-09-23T10:54:50Z trying connection XXX lastseen=662.4hrs\r\n2019-09-23T10:54:55Z connection to XXX timeout\r\n2019-09-23T10:54:55Z trying connection XXX lastseen=197.4hrs\r\n2019-09-23T10:54:56Z Added connection peer=0\r\n2019-09-23T10:54:56Z New outbound peer connected: ...\r\n2019-09-23T10:54:56Z trying connection XXX lastseen=469.4hrs\r\n```\r\n\r\nDNS thread would previously have decided to contact seeds here.\r\n```\r\n2019-09-23T10:55:01Z connection to XXX timeout\r\n2019-09-23T10:55:02Z trying connection XXX lastseen=685.1hrs\r\n2019-09-23T10:55:07Z connection to XXX timeout\r\n2019-09-23T10:55:07Z trying connection XXX lastseen=232.5hrs\r\n2019-09-23T10:55:12Z connection to XXX timeout\r\n2019-09-23T10:55:13Z trying connection XXX lastseen=388.0hrs\r\n```\r\n\r\nDNS thread checks for early exit here, but doesn't need one so keeps waiting.\r\n\r\n```\r\n2019-09-23T10:55:18Z connection to XXX timeout\r\n2019-09-23T10:55:18Z trying connection XXX lastseen=15.6hrs\r\n2019-09-23T10:55:19Z Added connection peer=1\r\n2019-09-23T10:55:19Z New outbound peer connected: ...\r\n2019-09-23T10:55:19Z trying connection XXX lastseen=36.8hrs\r\n2019-09-23T10:55:24Z connection to XXX timeout\r\n2019-09-23T10:55:25Z trying connection XXX lastseen=214.8hrs\r\n2019-09-23T10:55:30Z connection to XXX timeout\r\n2019-09-23T10:55:30Z trying connection XXX lastseen=524.4hrs\r\n2019-09-23T10:55:35Z connection to XXX timeout\r\n2019-09-23T10:55:36Z trying connection XXX lastseen=1705.3hrs\r\n```\r\n\r\nDNS thread checks again for early exit, and since there's two connections now, does:\r\n\r\n```\r\n2019-09-23T10:55:39Z P2P peers available. Skipped DNS seeding.\r\n2019-09-23T10:55:39Z dnsseed thread exit\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534052183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534113186",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-534113186",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 534113186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDExMzE4Ng==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-23T14:02:19Z",
    "updated_at": "2019-09-23T14:02:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK: seed querying should be kept to a minimum for obvious reasons",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534113186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534163054",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-534163054",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 534163054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDE2MzA1NA==",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?u=06eb9ae4f9b3f954056098860decccbf1340e40f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-23T15:53:34Z",
    "updated_at": "2019-09-23T15:53:34Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.\r\n\r\nThis doesn't make us depend on a single seed, does it?\r\nAlso, perhaps move some of the magic numbers to constants?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534163054/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534226798",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-534226798",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 534226798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDIyNjc5OA==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-23T18:32:22Z",
    "updated_at": "2019-09-23T18:32:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed the logic to make it query in batches of 3 more sensibly, and bumped the delay for adding fixed seeds to 6 minutes from startup (fixed nodes are only added if addrman is empty, which will only happen if DNS seeds aren't replying -- but this may be due to the first one we try hanging, rather than all of them failing, so 6m is a compromise).\r\n\r\nBehaviour for empty peers.dat, but no ability to actually connect anywhere is to immediately query 3 random dns seeds, then wait 11 seconds and try the next 3, etc:\r\n\r\n```\r\n2019-09-23T18:02:46Z Loaded 0 addresses from peers.dat  0ms\r\n2019-09-23T18:02:46Z dnsseed thread start\r\n2019-09-23T18:02:46Z Loading addresses from DNS seed dnsseed.bluematt.me\r\n2019-09-23T18:02:47Z Loading addresses from DNS seed dnsseed.bitcoin.dashjr.org\r\n2019-09-23T18:02:52Z Loading addresses from DNS seed seed.bitcoin.jonasschnelli.ch\r\n2019-09-23T18:02:52Z Waiting 11 seconds before querying DNS seeds.\r\n2019-09-23T18:03:03Z Loading addresses from DNS seed dnsseed.emzy.de\r\n2019-09-23T18:03:03Z Loading addresses from DNS seed seed.bitcoin.sipa.be\r\n2019-09-23T18:03:03Z Loading addresses from DNS seed seed.bitcoin.sprovoost.nl\r\n2019-09-23T18:03:03Z Waiting 11 seconds before querying DNS seeds.\r\n2019-09-23T18:03:14Z Loading addresses from DNS seed seed.btc.petertodd.org\r\n2019-09-23T18:03:14Z 33 addresses found from DNS seeds\r\n2019-09-23T18:03:14Z dnsseed thread exit\r\n```\r\n\r\nSame deal if there's some but less than 1k entries in addrman, except it'll wait 11s first:\r\n\r\n```\r\n2019-09-23T18:23:15Z Loaded 33 addresses from peers.dat  0ms\r\n2019-09-23T18:23:15Z dnsseed thread start\r\n2019-09-23T18:23:15Z Waiting 11 seconds before querying DNS seeds.\r\n2019-09-23T18:23:26Z Loading addresses from DNS seed dnsseed.bitcoin.dashjr.org\r\n2019-09-23T18:23:26Z Loading addresses from DNS seed dnsseed.emzy.de\r\n2019-09-23T18:23:26Z Loading addresses from DNS seed dnsseed.bluematt.me\r\n2019-09-23T18:23:27Z Waiting 11 seconds before querying DNS seeds.\r\n2019-09-23T18:23:38Z Loading addresses from DNS seed seed.btc.petertodd.org\r\n2019-09-23T18:23:38Z Loading addresses from DNS seed seed.bitcoin.sipa.be\r\n2019-09-23T18:23:38Z Loading addresses from DNS seed seed.bitcoin.jonasschnelli.ch\r\n2019-09-23T18:23:38Z Waiting 11 seconds before querying DNS seeds.\r\n2019-09-23T18:23:49Z Loading addresses from DNS seed seed.bitcoin.sprovoost.nl\r\n2019-09-23T18:23:49Z 0 addresses found from DNS seeds\r\n2019-09-23T18:23:49Z dnsseed thread exit\r\n```\r\n\r\n(seed.bitcoinstats.com seems to hang for me, so I've dropped it from my chainparams, but that change isn't in this patch)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534226798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534261214",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-534261214",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 534261214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDI2MTIxNA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-23T20:03:33Z",
    "updated_at": "2020-05-21T01:20:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19029 (net: Fix CThreadInterrupt::sleep_for TSan issues by hebasto)\n* #15502 (p2p: Speed up initial connection to p2p network by ajtowns)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534261214/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/572781406",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-572781406",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 572781406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Mjc4MTQwNg==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-09T22:14:54Z",
    "updated_at": "2020-01-09T22:14:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "This shouldn't run if the node is not currently making automatic connections (network disable or -noconnect).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/572781406/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584460820",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-584460820",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 584460820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDQ2MDgyMA==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-11T03:06:23Z",
    "updated_at": "2020-02-11T03:06:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gmaxwell\r\n\r\n> This shouldn't run if the node is not currently making automatic connections (network disable or -noconnect).\r\n\r\nFor `-noconnect` we already have \"parameter interaction: -connect set -> setting -dnsseed=0\" which prevents the dns thread from ever starting. Not sure what network disable means, should we not do dns seeding if `-onlynet=onion` or something?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584460820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584475372",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-584475372",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 584475372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDQ3NTM3Mg==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-11T04:39:11Z",
    "updated_at": "2020-02-11T04:39:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased, reverted delay for fixed seeds, and changed to explicitly query all dns seeds if we start up with an empty addrman.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584475372/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584626477",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-584626477",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 584626477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDYyNjQ3Nw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-11T13:09:14Z",
    "updated_at": "2020-02-11T13:09:14Z",
    "author_association": "MEMBER",
    "body": "> Not sure what network disable means\r\n\r\nThere is a `setnetworkactive` RPC, which can disable the connman",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584626477/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584725738",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-584725738",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 584725738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDcyNTczOA==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-11T16:35:46Z",
    "updated_at": "2020-02-11T16:35:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added patch to avoid querying DNS seeds while `setnetworkactive` is set to false.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584725738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/597542131",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-597542131",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 597542131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzU0MjEzMQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-11T09:58:34Z",
    "updated_at": "2020-03-11T09:58:34Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/597542131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/597648742",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-597648742",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 597648742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzY0ODc0Mg==",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?u=0b02049ec38b6bb7d55c5c66d9bbeb0d4b822129&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-11T13:55:08Z",
    "updated_at": "2020-03-11T13:55:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "concept ACK\r\n\r\nWhen DNS seeding was introduced, the idea was to be a backup, for when P2P peer addr exchange is not working for whatever reason.  It seems preferable to make the polling closer to \"24 hours\" or \"never\" in the case where AddrMan is healthy and happy.\r\n\r\nRegardless of that preference, concept ACK as stated above, as this appears to be a strict improvement & resolve an issue.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/597648742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/599296139",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-599296139",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 599296139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTI5NjEzOQ==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-16T01:18:10Z",
    "updated_at": "2020-03-16T01:18:10Z",
    "author_association": "MEMBER",
    "body": "@ajtowns I think you need to update commit message, it's still mentioning the 25s delays while you now rely on DNSSEED_DELAY_FEW_PEERS?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/599296139/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/634154652",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-634154652",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 634154652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDE1NDY1Mg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-26T17:06:55Z",
    "updated_at": "2020-05-26T17:06:55Z",
    "author_association": "MEMBER",
    "body": "@ajtowns Would you prefer to add a new commit with documentation or instead have this merged first or something else?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/634154652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635012553",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-635012553",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16939",
    "id": 635012553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTAxMjU1Mw==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T00:15:29Z",
    "updated_at": "2020-05-28T00:15:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @ajtowns Would you prefer to add a new commit with documentation or instead have this merged first or something else?\r\n\r\nMaybe a separate PR for updating the comments? See #19084 ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635012553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364966153",
    "pull_request_review_id": 340823054,
    "id": 364966153,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk2NjE1Mw==",
    "diff_hunk": "@@ -53,6 +53,15 @@ static constexpr int DUMP_PEERS_INTERVAL = 15 * 60;\n /** Number of DNS seeds to query when the number of connections is low. */\n static constexpr int DNSSEEDS_TO_QUERY_AT_ONCE = 3;\n \n+/** How long to delay before querying DNS seeds\n+ */\n+static constexpr std::chrono::seconds DNSSEEDS_DELAY_FEW_PEERS{11};\n+static constexpr std::chrono::seconds DNSSEEDS_DELAY_MANY_PEERS{300};",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "899d9f4097a3c23eb2dcb3fe186e9e90a5eb9d83",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: // 5 minutes, also move them to net.h ?",
    "created_at": "2020-01-09T21:23:21Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364966153",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364966153"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364966153"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364966153/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 59,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364966899",
    "pull_request_review_id": 340823054,
    "id": 364966899,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk2Njg5OQ==",
    "diff_hunk": "@@ -1543,30 +1552,55 @@ void CConnman::ThreadDNSAddressSeed()\n     Shuffle(seeds.begin(), seeds.end(), rng);\n     int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n     int found = 0;\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= 1000 ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n \n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.",
    "path": "src/net.cpp",
    "position": 30,
    "original_position": 35,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "899d9f4097a3c23eb2dcb3fe186e9e90a5eb9d83",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You can lay out trade-off further: \"Every new DNS seed queried increases the bar for eclipsing node but leaks more privacy.\"",
    "created_at": "2020-01-09T21:25:28Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364966899",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364966899"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364966899"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364966899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1595,
    "original_line": 1595,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364970093",
    "pull_request_review_id": 340823054,
    "id": 364970093,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3MDA5Mw==",
    "diff_hunk": "@@ -1543,30 +1552,55 @@ void CConnman::ThreadDNSAddressSeed()\n     Shuffle(seeds.begin(), seeds.end(), rng);\n     int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n     int found = 0;\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= 1000 ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "899d9f4097a3c23eb2dcb3fe186e9e90a5eb9d83",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What the logic for picking 1000 ? If we assume uniform address propagation, what's the ratio of reliable public nodes on others in addrman and what the probability of not connecting successfully to at least 3 outbound peers ? Based on that, I would say intuitively we may scale down number a bit to increase number of nodes who delay DNS query.",
    "created_at": "2020-01-09T21:33:19Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364970093",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364970093"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364970093"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364970093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1555,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364971195",
    "pull_request_review_id": 340823054,
    "id": 364971195,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3MTE5NQ==",
    "diff_hunk": "@@ -1543,30 +1552,55 @@ void CConnman::ThreadDNSAddressSeed()\n     Shuffle(seeds.begin(), seeds.end(), rng);\n     int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n     int found = 0;\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= 1000 ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n \n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n         if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n-\n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+            std::chrono::seconds to_wait = seeds_wait_time;",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "899d9f4097a3c23eb2dcb3fe186e9e90a5eb9d83",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "For fresh nodes, addrman can't be bigger than 1000 after querying 3 dns (because nMaxIPs == 256), but if we change DNSSEEDS_TO_QUERY_AT_ONCE, we may assign  seeds_wait_time before every time evaluation instead",
    "created_at": "2020-01-09T21:36:10Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364971195",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364971195"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364971195"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364971195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1604,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364972769",
    "pull_request_review_id": 340823054,
    "id": 364972769,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3Mjc2OQ==",
    "diff_hunk": "@@ -1543,30 +1552,55 @@ void CConnman::ThreadDNSAddressSeed()\n     Shuffle(seeds.begin(), seeds.end(), rng);\n     int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n     int found = 0;\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= 1000 ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n \n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n         if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n-\n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+            std::chrono::seconds to_wait = seeds_wait_time;\n+            while (to_wait.count() > 0) {\n+                std::chrono::seconds w{25};\n+                if (w > to_wait) w = to_wait;\n+                if (!interruptNet.sleep_for(w)) return;\n+                to_wait -= w;\n+\n+                int nRelevant = 0;\n+                {\n+                    LOCK(cs_vNodes);\n+                    for (const CNode* pnode : vNodes) {\n+                        nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n+                    }\n+                }\n+                if (nRelevant >= 2) {\n+                    if (found > 0) {\n+                        LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n+                        LogPrintf(\"P2P peers available. Finished DNS seeding.\\n\");\n+                    } else {\n+                        LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n+                    }\n+                    return;\n+                }\n             }\n             seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n+        } else if (seeds_right_now == 0) {",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 81,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "899d9f4097a3c23eb2dcb3fe186e9e90a5eb9d83",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not sure about this, I would say that's a behavior change. Previously node with  an empty addrman would have query all DNS seeds due to seeds_right_now == -1 as you noticed in #15558. Now you may exit early, if among DNSSEEDS_TO_QUERY_AT_ONCE you find at least 2 outbound peers but with final result of having less address origin diversity in your addrman..",
    "created_at": "2020-01-09T21:39:55Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364972769",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364972769"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364972769"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364972769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1629,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364973333",
    "pull_request_review_id": 340823054,
    "id": 364973333,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3MzMzMw==",
    "diff_hunk": "@@ -1715,7 +1749,7 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             return;\n \n         // Add seed nodes if DNS seeds are all down (an infrastructure attack?).\n-        if (addrman.size() == 0 && (GetTime() - nStart > 60)) {\n+        if (addrman.size() == 0 && (GetTime() - nStart > FIXEDSEEDS_DELAY)) {",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 91,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "899d9f4097a3c23eb2dcb3fe186e9e90a5eb9d83",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a behavior change too, I do understand the logic to increase privacy for fresh nodes if DNS  are busy but how did you pick up this number ?",
    "created_at": "2020-01-09T21:41:20Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364973333",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364973333"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364973333"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364973333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1752,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377420664",
    "pull_request_review_id": 356388476,
    "id": 377420664,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQyMDY2NA==",
    "diff_hunk": "@@ -53,6 +53,15 @@ static constexpr int DUMP_PEERS_INTERVAL = 15 * 60;\n /** Number of DNS seeds to query when the number of connections is low. */\n static constexpr int DNSSEEDS_TO_QUERY_AT_ONCE = 3;\n \n+/** How long to delay before querying DNS seeds\n+ */\n+static constexpr std::chrono::seconds DNSSEEDS_DELAY_FEW_PEERS{11};\n+static constexpr std::chrono::seconds DNSSEEDS_DELAY_MANY_PEERS{300};",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "899d9f4097a3c23eb2dcb3fe186e9e90a5eb9d83",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "They're not needed from other modules, so doesn't make sense to have them in net.h",
    "created_at": "2020-02-11T02:16:40Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r377420664",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377420664"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r377420664"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377420664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 59,
    "side": "RIGHT",
    "in_reply_to_id": 364966153
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377426911",
    "pull_request_review_id": 356395572,
    "id": 377426911,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQyNjkxMQ==",
    "diff_hunk": "@@ -1543,30 +1552,55 @@ void CConnman::ThreadDNSAddressSeed()\n     Shuffle(seeds.begin(), seeds.end(), rng);\n     int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n     int found = 0;\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= 1000 ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "899d9f4097a3c23eb2dcb3fe186e9e90a5eb9d83",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "1000 is the maximum number of entries the `addr` message can include, so seems a good threshold to indicate you've managed to pick up some live data from the p2p network about potential peers, rather than just some results from DNS lookups.",
    "created_at": "2020-02-11T02:52:17Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r377426911",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377426911"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r377426911"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377426911/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1555,
    "side": "RIGHT",
    "in_reply_to_id": 364970093
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377439532",
    "pull_request_review_id": 356409807,
    "id": 377439532,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzOTUzMg==",
    "diff_hunk": "@@ -1715,7 +1749,7 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             return;\n \n         // Add seed nodes if DNS seeds are all down (an infrastructure attack?).\n-        if (addrman.size() == 0 && (GetTime() - nStart > 60)) {\n+        if (addrman.size() == 0 && (GetTime() - nStart > FIXEDSEEDS_DELAY)) {",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 91,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "899d9f4097a3c23eb2dcb3fe186e9e90a5eb9d83",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This change isn't needed -- if addrman is going to end up empty, it will have been empty for each dns seed which means there would have been no delay in querying the seed.",
    "created_at": "2020-02-11T04:10:03Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r377439532",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377439532"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r377439532"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377439532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1752,
    "side": "RIGHT",
    "in_reply_to_id": 364973333
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377758118",
    "pull_request_review_id": 356816422,
    "id": 377758118,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc1ODExOA==",
    "diff_hunk": "@@ -1543,30 +1552,55 @@ void CConnman::ThreadDNSAddressSeed()\n     Shuffle(seeds.begin(), seeds.end(), rng);\n     int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n     int found = 0;\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= 1000 ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n \n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n         if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n-\n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+            std::chrono::seconds to_wait = seeds_wait_time;",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "899d9f4097a3c23eb2dcb3fe186e9e90a5eb9d83",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "With the current code:\r\n\r\n * if addrman starts off at 0, it'll query all DNS seeds with no delay\r\n * if addrman starts off under 1000, it'll query all DNS seeds in groups of 3 after waiting 11 seconds before each group\r\n * if addrman starts off over 1000, it'll query all DNS seeds in groups of 3 after waiting 5 minutes before each group\r\n\r\nThat seems mostly fine to me?\r\n\r\n(The timeout for connecting to a peer is nConnectTimeout which is 5 seconds; so 11 seconds will pass if you happen to try three peers that timeout before getting two that succeed)",
    "created_at": "2020-02-11T16:43:45Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r377758118",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377758118"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r377758118"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377758118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1604,
    "side": "RIGHT",
    "in_reply_to_id": 364971195
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/390967622",
    "pull_request_review_id": 372754053,
    "id": 390967622,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2NzYyMg==",
    "diff_hunk": "@@ -1573,26 +1579,55 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n         if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n-\n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+            std::chrono::seconds to_wait = seeds_wait_time;\n+            while (to_wait.count() > 0) {\n+                std::chrono::seconds w{25}; // check for early abort every 25 seconds",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 55,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "5bf16653168cbc3c8bd0814cfa937d0dc8a879ff",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "As 25 seconds is a timeout for the _early_ exit from dnsseed thread, we could do not introduce a new heuristic constant at all:\r\n```diff\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -41,9 +41,9 @@\r\n static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\r\n #endif\r\n \r\n-#include <unordered_map>\r\n-\r\n+#include <chrono>\r\n #include <math.h>\r\n+#include <unordered_map>\r\n \r\n // Dump addresses to peers.dat every 15 minutes (900s)\r\n static constexpr int DUMP_PEERS_INTERVAL = 15 * 60;\r\n@@ -1601,12 +1601,12 @@ void CConnman::ThreadDNSAddressSeed()\r\n     for (const std::string& seed : seeds) {\r\n         if (addrman.size() > 0 && seeds_right_now == 0) {\r\n             LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\r\n-            std::chrono::seconds to_wait = seeds_wait_time;\r\n+            std::chrono::milliseconds to_wait{seeds_wait_time};\r\n             while (to_wait.count() > 0) {\r\n-                std::chrono::seconds w{25}; // check for early abort every 25 seconds\r\n-                if (w > to_wait) w = to_wait;\r\n-                if (!interruptNet.sleep_for(w)) return;\r\n-                to_wait -= w;\r\n+                std::chrono::milliseconds recheck_period{nConnectTimeout};\r\n+                if (recheck_period > to_wait) recheck_period = to_wait;\r\n+                if (!interruptNet.sleep_for(recheck_period)) return;\r\n+                to_wait -= recheck_period;\r\n \r\n                 int nRelevant = 0;\r\n                 {\r\n```",
    "created_at": "2020-03-11T13:26:35Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r390967622",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/390967622"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r390967622"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/390967622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1606,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391002439",
    "pull_request_review_id": 372799147,
    "id": 391002439,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwMjQzOQ==",
    "diff_hunk": "@@ -1573,26 +1579,55 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n         if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n-\n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+            std::chrono::seconds to_wait = seeds_wait_time;\n+            while (to_wait.count() > 0) {\n+                std::chrono::seconds w{25}; // check for early abort every 25 seconds\n+                if (w > to_wait) w = to_wait;\n+                if (!interruptNet.sleep_for(w)) return;\n+                to_wait -= w;\n+\n+                int nRelevant = 0;\n+                {\n+                    LOCK(cs_vNodes);\n+                    for (const CNode* pnode : vNodes) {\n+                        nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n+                    }\n+                }\n+                if (nRelevant >= 2) {\n+                    if (found > 0) {\n+                        LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n+                        LogPrintf(\"P2P peers available. Finished DNS seeding.\\n\");\n+                    } else {\n+                        LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n+                    }\n+                    return;\n+                }\n             }\n             seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n+        } else if (seeds_right_now == 0) {\n+            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 79,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "5bf16653168cbc3c8bd0814cfa937d0dc8a879ff",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It seems this branch will never be executed since all of the dns seeds are explicitly queried if we start up with an empty addrman:\r\nhttps://github.com/bitcoin/bitcoin/blob/5bf16653168cbc3c8bd0814cfa937d0dc8a879ff/src/net.cpp#L1582-L1585",
    "created_at": "2020-03-11T14:17:25Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r391002439",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391002439"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r391002439"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391002439/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1629,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1630,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391008151",
    "pull_request_review_id": 372806494,
    "id": 391008151,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAwODE1MQ==",
    "diff_hunk": "@@ -1573,26 +1579,55 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n         if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n-\n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+            std::chrono::seconds to_wait = seeds_wait_time;\n+            while (to_wait.count() > 0) {\n+                std::chrono::seconds w{25}; // check for early abort every 25 seconds\n+                if (w > to_wait) w = to_wait;\n+                if (!interruptNet.sleep_for(w)) return;\n+                to_wait -= w;\n+\n+                int nRelevant = 0;\n+                {\n+                    LOCK(cs_vNodes);\n+                    for (const CNode* pnode : vNodes) {\n+                        nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n+                    }\n+                }\n+                if (nRelevant >= 2) {",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 67,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "5bf16653168cbc3c8bd0814cfa937d0dc8a879ff",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "While here mind replacing a magic number 2 with a named constant?",
    "created_at": "2020-03-11T14:24:59Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r391008151",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391008151"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r391008151"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391008151/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1618,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391341643",
    "pull_request_review_id": 373209188,
    "id": 391341643,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM0MTY0Mw==",
    "diff_hunk": "@@ -1573,26 +1579,55 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n         if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n-\n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+            std::chrono::seconds to_wait = seeds_wait_time;\n+            while (to_wait.count() > 0) {\n+                std::chrono::seconds w{25}; // check for early abort every 25 seconds",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 55,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "5bf16653168cbc3c8bd0814cfa937d0dc8a879ff",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It'd make sense for `DNSSEEDS_DELAY_FEW_PEERS` to be calculated from that rather than a constant, but the early exit ought to be based on how long it takes for a connection to _succeed_ rather than the timeout time",
    "created_at": "2020-03-12T00:22:40Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r391341643",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391341643"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r391341643"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/391341643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1606,
    "side": "RIGHT",
    "in_reply_to_id": 390967622
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392048614",
    "pull_request_review_id": 374071152,
    "id": 392048614,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0ODYxNA==",
    "diff_hunk": "@@ -1573,26 +1579,55 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n         if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n-\n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+            std::chrono::seconds to_wait = seeds_wait_time;\n+            while (to_wait.count() > 0) {\n+                std::chrono::seconds w{25}; // check for early abort every 25 seconds",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 55,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "5bf16653168cbc3c8bd0814cfa937d0dc8a879ff",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "On the other hand, can easily reuse `DNSSEEDS_DELAY_FEW_PEERS` instead of a new constant, so will just do that.",
    "created_at": "2020-03-13T06:21:22Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r392048614",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392048614"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r392048614"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392048614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1606,
    "side": "RIGHT",
    "in_reply_to_id": 390967622
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392048829",
    "pull_request_review_id": 374071375,
    "id": 392048829,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA0ODgyOQ==",
    "diff_hunk": "@@ -1573,26 +1579,55 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n         if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n-\n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+            std::chrono::seconds to_wait = seeds_wait_time;\n+            while (to_wait.count() > 0) {\n+                std::chrono::seconds w{25}; // check for early abort every 25 seconds\n+                if (w > to_wait) w = to_wait;\n+                if (!interruptNet.sleep_for(w)) return;\n+                to_wait -= w;\n+\n+                int nRelevant = 0;\n+                {\n+                    LOCK(cs_vNodes);\n+                    for (const CNode* pnode : vNodes) {\n+                        nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n+                    }\n+                }\n+                if (nRelevant >= 2) {\n+                    if (found > 0) {\n+                        LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n+                        LogPrintf(\"P2P peers available. Finished DNS seeding.\\n\");\n+                    } else {\n+                        LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n+                    }\n+                    return;\n+                }\n             }\n             seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n+        } else if (seeds_right_now == 0) {\n+            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 79,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "5bf16653168cbc3c8bd0814cfa937d0dc8a879ff",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Rearranged to `if (s_r_n == 0) { s_r_n += AT_ONCE; if (addrman.size() == 0) { wait(); } }`",
    "created_at": "2020-03-13T06:22:09Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r392048829",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392048829"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r392048829"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392048829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1629,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1630,
    "side": "RIGHT",
    "in_reply_to_id": 391002439
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392733605",
    "pull_request_review_id": 374854236,
    "id": 392733605,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczMzYwNQ==",
    "diff_hunk": "@@ -1543,30 +1552,55 @@ void CConnman::ThreadDNSAddressSeed()\n     Shuffle(seeds.begin(), seeds.end(), rng);\n     int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n     int found = 0;\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= 1000 ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "899d9f4097a3c23eb2dcb3fe186e9e90a5eb9d83",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Okay, make sense given we send `GETADDR` at `VERSION` reception which means if you have at only one reliable outbound connection you should be able to bootstrap your addrman without seed assistance.",
    "created_at": "2020-03-16T00:44:42Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r392733605",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392733605"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r392733605"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392733605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1555,
    "side": "RIGHT",
    "in_reply_to_id": 364970093
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392736056",
    "pull_request_review_id": 374858171,
    "id": 392736056,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczNjA1Ng==",
    "diff_hunk": "@@ -1543,30 +1552,55 @@ void CConnman::ThreadDNSAddressSeed()\n     Shuffle(seeds.begin(), seeds.end(), rng);\n     int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n     int found = 0;\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= 1000 ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n \n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n         if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n-\n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+            std::chrono::seconds to_wait = seeds_wait_time;",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "899d9f4097a3c23eb2dcb3fe186e9e90a5eb9d83",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right, I think I forget we set `seeds_right_now` to number of seeds if if we don't have any known peers (IIRC my comment motivation)",
    "created_at": "2020-03-16T01:05:29Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r392736056",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392736056"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r392736056"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392736056/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1604,
    "side": "RIGHT",
    "in_reply_to_id": 364971195
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392778614",
    "pull_request_review_id": 374907474,
    "id": 392778614,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc3ODYxNA==",
    "diff_hunk": "@@ -1573,31 +1579,68 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n-        if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n+        if (seeds_right_now == 0) {\n+            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n \n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            if (addrman.size() > 0) {\n+                LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+                std::chrono::seconds to_wait = seeds_wait_time;\n+                while (to_wait.count() > 0) {\n+                    std::chrono::seconds w = DNSSEEDS_DELAY_FEW_PEERS;",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 58,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "b1338cc25c0d66a73aea760117e488b6c91d0d43",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n                    std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\r\n```",
    "created_at": "2020-03-16T04:35:14Z",
    "updated_at": "2020-03-17T18:26:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r392778614",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392778614"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r392778614"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392778614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1609,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393890788",
    "pull_request_review_id": 376305040,
    "id": 393890788,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5MDc4OA==",
    "diff_hunk": "@@ -1573,31 +1579,68 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n-        if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n+        if (seeds_right_now == 0) {\n+            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n \n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            if (addrman.size() > 0) {\n+                LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+                std::chrono::seconds to_wait = seeds_wait_time;\n+                while (to_wait.count() > 0) {\n+                    std::chrono::seconds w = DNSSEEDS_DELAY_FEW_PEERS;",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 58,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "b1338cc25c0d66a73aea760117e488b6c91d0d43",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Took this since I rebased to update the commit description",
    "created_at": "2020-03-17T18:36:27Z",
    "updated_at": "2020-03-17T18:36:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r393890788",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393890788"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r393890788"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/393890788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1609,
    "side": "RIGHT",
    "in_reply_to_id": 392778614
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395579741",
    "pull_request_review_id": 378408988,
    "id": 395579741,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU3OTc0MQ==",
    "diff_hunk": "@@ -1573,31 +1579,67 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);",
    "path": "src/net.cpp",
    "position": 34,
    "original_position": 34,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could add `#include <chrono>`? See [Source code organization](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#source-code-organization).",
    "created_at": "2020-03-20T11:34:15Z",
    "updated_at": "2020-03-20T11:44:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r395579741",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395579741"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r395579741"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395579741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1599,
    "original_line": 1599,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395582049",
    "pull_request_review_id": 378408988,
    "id": 395582049,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU4MjA0OQ==",
    "diff_hunk": "@@ -1573,31 +1579,67 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n-        if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n+        if (seeds_right_now == 0) {\n+            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n \n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            if (addrman.size() > 0) {",
    "path": "src/net.cpp",
    "position": 54,
    "original_position": 54,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Considering https://github.com/bitcoin/bitcoin/blob/96954d17948662672cababc940e453dff08e8cbb/src/net.cpp#L1582-L1585 and https://github.com/bitcoin/bitcoin/blob/96954d17948662672cababc940e453dff08e8cbb/src/net.cpp#L1602\r\n\r\nthis point is not reachable when `addrman.size() == 0`, and `addrman.size() > 0` will always be evaluated to true, so it could be dropped, no?",
    "created_at": "2020-03-20T11:40:07Z",
    "updated_at": "2020-03-20T11:44:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r395582049",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395582049"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r395582049"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395582049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1605,
    "original_line": 1605,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395582691",
    "pull_request_review_id": 378408988,
    "id": 395582691,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU4MjY5MQ==",
    "diff_hunk": "@@ -1573,31 +1579,67 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n-        if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n+        if (seeds_right_now == 0) {\n+            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n \n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            if (addrman.size() > 0) {\n+                LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+                std::chrono::seconds to_wait = seeds_wait_time;\n+                while (to_wait.count() > 0) {\n+                    std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n+                    if (!interruptNet.sleep_for(w)) return;\n+                    to_wait -= w;\n+\n+                    int nRelevant = 0;\n+                    {\n+                        LOCK(cs_vNodes);\n+                        for (const CNode* pnode : vNodes) {\n+                            nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n+                        }\n+                    }\n+                    if (nRelevant >= 2) {",
    "path": "src/net.cpp",
    "position": 69,
    "original_position": 69,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n                    if (nRelevant >= DNSSEEDS_ENOUGH_PEERS) {\r\n```",
    "created_at": "2020-03-20T11:41:34Z",
    "updated_at": "2020-03-20T11:44:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r395582691",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395582691"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r395582691"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/395582691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1620,
    "original_line": 1620,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427450474",
    "pull_request_review_id": 414638503,
    "id": 427450474,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ1MDQ3NA==",
    "diff_hunk": "@@ -51,6 +51,12 @@ static constexpr int DUMP_PEERS_INTERVAL = 15 * 60;\n /** Number of DNS seeds to query when the number of connections is low. */\n static constexpr int DNSSEEDS_TO_QUERY_AT_ONCE = 3;\n \n+/** How long to delay before querying DNS seeds\n+ */\n+static constexpr std::chrono::seconds DNSSEEDS_DELAY_FEW_PEERS{11}; // 11sec\n+static constexpr std::chrono::seconds DNSSEEDS_DELAY_MANY_PEERS{300}; // 5min\n+static constexpr int DNSSEEDS_DELAY_PEER_THRESHOLD = 1000; // \"many\" vs \"few\" peers -- you should only get this many if you've been on the live network",
    "path": "src/net.cpp",
    "position": 8,
    "original_position": 8,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think we should expand this comment into couple sentences. What's \"live network\" is unclear. What if we have 500 peers, is that not a live network?\r\nWould be also nice to briefly rationalize this distinction (yes, one more time).\r\nAlso, long inline comments like this are hard to read :)",
    "created_at": "2020-05-19T16:49:47Z",
    "updated_at": "2020-05-19T18:01:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r427450474",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427450474"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r427450474"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427450474/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 58,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427467271",
    "pull_request_review_id": 414638503,
    "id": 427467271,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ2NzI3MQ==",
    "diff_hunk": "@@ -1573,31 +1579,67 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {",
    "path": "src/net.cpp",
    "position": 17,
    "original_position": 17,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Comment here would be nice too. What exactly this tells us?\r\nFor example, I spent time thinking \"what if a node was connected to 1 node via --connect\". But then they'd still probably have a big addrman (all learned from that peer)...",
    "created_at": "2020-05-19T17:16:32Z",
    "updated_at": "2020-05-19T18:01:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r427467271",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427467271"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r427467271"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427467271/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1582,
    "original_line": 1582,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427478370",
    "pull_request_review_id": 414638503,
    "id": 427478370,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3ODM3MA==",
    "diff_hunk": "@@ -1573,31 +1579,67 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n-        if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n+        if (seeds_right_now == 0) {\n+            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n \n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            if (addrman.size() > 0) {",
    "path": "src/net.cpp",
    "position": 54,
    "original_position": 54,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think you are right @hebasto. Although it took 5 minutes for me to confirm. I think if we remove this redundant check, a comment should be added.",
    "created_at": "2020-05-19T17:33:39Z",
    "updated_at": "2020-05-19T18:02:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r427478370",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427478370"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r427478370"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/427478370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1605,
    "original_line": 1605,
    "side": "RIGHT",
    "in_reply_to_id": 395582049
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430527006",
    "pull_request_review_id": 418447438,
    "id": 430527006,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUyNzAwNg==",
    "diff_hunk": "@@ -1573,31 +1579,67 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n-        if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n+        if (seeds_right_now == 0) {\n+            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n \n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            if (addrman.size() > 0) {",
    "path": "src/net.cpp",
    "position": 54,
    "original_position": 54,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If we did reach it with `addrman.size() == 0`, waiting would be pointless, so I don't think the logic is wrong; there's no `else` so there's no unreachable code, just a conditional branch that always happens to go one way. I think double checking is a bit more robust in case we change the code to querying some subset of dns seeds when addrman is empty in future, eg if we had dozens of dns seeds available.",
    "created_at": "2020-05-26T16:00:35Z",
    "updated_at": "2020-05-26T16:00:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r430527006",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430527006"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r430527006"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430527006/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1605,
    "original_line": 1605,
    "side": "RIGHT",
    "in_reply_to_id": 395582049
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430542113",
    "pull_request_review_id": 418466779,
    "id": 430542113,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0MjExMw==",
    "diff_hunk": "@@ -1573,31 +1579,67 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {",
    "path": "src/net.cpp",
    "position": 17,
    "original_position": 17,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It tells us we don't have any known peers (there's already a comment to that effect) -- perhaps this is the first time you've started bitcoind or you've just restarted after deleting peers.dat. If you previously queried the dns seeds, or have at some point connected to some other peers that aren't in IBD, this shouldn't be true any more.",
    "created_at": "2020-05-26T16:22:18Z",
    "updated_at": "2020-05-26T16:22:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r430542113",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430542113"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r430542113"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430542113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1582,
    "original_line": 1582,
    "side": "RIGHT",
    "in_reply_to_id": 427467271
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430554421",
    "pull_request_review_id": 418483833,
    "id": 430554421,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU1NDQyMQ==",
    "diff_hunk": "@@ -1573,31 +1579,67 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);",
    "path": "src/net.cpp",
    "position": 34,
    "original_position": 34,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We already use std::chrono in net.cpp; I think it's included via net.h via addrman.h via util/system.h via util/time.h. So yeah, could see the value in cleaning that up, but don't think it needs to be in this patch.",
    "created_at": "2020-05-26T16:40:19Z",
    "updated_at": "2020-05-26T16:40:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r430554421",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430554421"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r430554421"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430554421/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1599,
    "original_line": 1599,
    "side": "RIGHT",
    "in_reply_to_id": 395579741
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430557396",
    "pull_request_review_id": 418486375,
    "id": 430557396,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU1NzM5Ng==",
    "diff_hunk": "@@ -1573,31 +1579,67 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n-        if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n+        if (seeds_right_now == 0) {\n+            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n \n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            if (addrman.size() > 0) {\n+                LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+                std::chrono::seconds to_wait = seeds_wait_time;\n+                while (to_wait.count() > 0) {\n+                    std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n+                    if (!interruptNet.sleep_for(w)) return;\n+                    to_wait -= w;\n+\n+                    int nRelevant = 0;\n+                    {\n+                        LOCK(cs_vNodes);\n+                        for (const CNode* pnode : vNodes) {\n+                            nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n+                        }\n+                    }\n+                    if (nRelevant >= 2) {",
    "path": "src/net.cpp",
    "position": 69,
    "original_position": 69,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't really think this adds anything -- the logs in the body of the if seems like it documents the value better than giving it a name would, and we don't reuse it anywhere else.",
    "created_at": "2020-05-26T16:43:35Z",
    "updated_at": "2020-05-26T16:43:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r430557396",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430557396"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r430557396"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430557396/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1620,
    "original_line": 1620,
    "side": "RIGHT",
    "in_reply_to_id": 395582691
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431984399",
    "pull_request_review_id": 420310676,
    "id": 431984399,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk4NDM5OQ==",
    "diff_hunk": "@@ -1573,31 +1579,61 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();",
    "path": "src/net.cpp",
    "position": 19,
    "original_position": 19,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "fa5894f7f581718ea28bb34b52fcd3b33ff3e644",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This undoes #15558 for the first run. No strong opinion on the matter, but it should probably be in the PR and commit description. It's also not mentioned in the comments below. \r\n\r\nAlso, both here and in the `if` branch it's useful to comment that `seeds_right_now > 0` causes the wait to be skipped.  ",
    "created_at": "2020-05-28T16:55:47Z",
    "updated_at": "2020-05-28T17:39:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r431984399",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431984399"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r431984399"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431984399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1584,
    "original_line": 1584,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431998452",
    "pull_request_review_id": 420310676,
    "id": 431998452,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5ODQ1Mg==",
    "diff_hunk": "@@ -1573,31 +1579,67 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n-        if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n+        if (seeds_right_now == 0) {\n+            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n \n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            if (addrman.size() > 0) {",
    "path": "src/net.cpp",
    "position": 54,
    "original_position": 54,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> in case we change the code to querying some subset of dns seeds when addrman is empty in future\r\n\r\nThat's worth explaining in a comment. It may also be more readable to have a `bool skip_wait`",
    "created_at": "2020-05-28T17:18:58Z",
    "updated_at": "2020-05-28T17:39:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r431998452",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431998452"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r431998452"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/431998452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1605,
    "original_line": 1605,
    "side": "RIGHT",
    "in_reply_to_id": 395582049
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432002579",
    "pull_request_review_id": 420310676,
    "id": 432002579,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwMjU3OQ==",
    "diff_hunk": "@@ -1573,31 +1579,61 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();\n     }\n \n+    // goal: only query DNS seed if address need is acute\n+    // * If we have a reasonable number of peers in addrman, spend\n+    //   some time trying them first. This improves user privacy by\n+    //   creating fewer identifying DNS requests, reduces trust by\n+    //   giving seeds less influence on the network topology, and\n+    //   reduces traffic to the seeds.\n+    // * When querying DNS seeds query a few at once, this ensures\n+    //   that we don't give DNS seeds the ability to eclipse nodes\n+    //   that query them.\n+    // * If we continue having problems, eventually query all the\n+    //   DNS seeds, and if that fails too, also try the fixed seeds.\n+    //   (done in ThreadOpenConnections)\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n     for (const std::string& seed : seeds) {\n-        // goal: only query DNS seed if address need is acute\n-        // Avoiding DNS seeds when we don't need them improves user privacy by\n-        // creating fewer identifying DNS requests, reduces trust by giving seeds\n-        // less influence on the network topology, and reduces traffic to the seeds.\n-        if (addrman.size() > 0 && seeds_right_now == 0) {\n-            if (!interruptNet.sleep_for(std::chrono::seconds(11))) return;\n+        if (seeds_right_now == 0) {\n+            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n \n-            LOCK(cs_vNodes);\n-            int nRelevant = 0;\n-            for (const CNode* pnode : vNodes) {\n-                nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n-            }\n-            if (nRelevant >= 2) {\n-                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n-                return;\n+            if (addrman.size() > 0) {\n+                LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+                std::chrono::seconds to_wait = seeds_wait_time;\n+                while (to_wait.count() > 0) {\n+                    std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);",
    "path": "src/net.cpp",
    "position": 58,
    "original_position": 58,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "fa5894f7f581718ea28bb34b52fcd3b33ff3e644",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could use a comment of why you're sleeping in shorter intervals: because we can exit this thread once we have enough nodes.",
    "created_at": "2020-05-28T17:25:45Z",
    "updated_at": "2020-05-28T17:39:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r432002579",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432002579"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r432002579"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432002579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1609,
    "original_line": 1609,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432150619",
    "pull_request_review_id": 420526056,
    "id": 432150619,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE1MDYxOQ==",
    "diff_hunk": "@@ -1573,31 +1579,61 @@ void CConnman::ThreadDNSAddressSeed()\n     if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n         // When -forcednsseed is provided, query all.\n         seeds_right_now = seeds.size();\n+    } else if (addrman.size() == 0) {\n+        // If we have no known peers, query all.\n+        seeds_right_now = seeds.size();",
    "path": "src/net.cpp",
    "position": 19,
    "original_position": 19,
    "commit_id": "96954d17948662672cababc940e453dff08e8cbb",
    "original_commit_id": "fa5894f7f581718ea28bb34b52fcd3b33ff3e644",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In #15558 the first run will set `seeds_right_now = 0` then see that `addrman.size() > 0 && seeds_right_now == 0` is false (since `addrman.size() == 0`) so will not sleep nor bump `seeds_right_now` by `DNSSEEDS_TO_QUERY_AT_ONCE`, it will then query a seed, and decrement `seeds_right_now` so that it's `-1`, at which point `addrman.size() > 0 && seeds_right_now == 0` will continue being false (because `seeds_right_now < 0`) and will query all seeds without waiting between them.\r\n\r\nThis retains that behaviour, but is explicit about it. See [suhas's comment on 15558](https://github.com/bitcoin/bitcoin/pull/15558#discussion_r327643907)",
    "created_at": "2020-05-28T22:05:44Z",
    "updated_at": "2020-05-28T22:05:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r432150619",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432150619"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16939#discussion_r432150619"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/432150619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1584,
    "original_line": 1584,
    "side": "RIGHT",
    "in_reply_to_id": 431984399
  }
]