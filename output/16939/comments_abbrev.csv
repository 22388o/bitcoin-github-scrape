ajtowns,2019-09-23 10:53:57,Somewhat follows the suggestions of [@luke-jr](https://github.com/bitcoin/bitcoin/pull/15558#issuecomment-471239506) and [@jgarzik](https://github.com/bitcoin/bitcoin/pull/15558#issuecomment-471208937) in #15558,https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-534049877,534049877,
ajtowns,2019-09-23 11:02:05,"Behaviour looks like:\n\n```\n2019-09-23T10:54:49Z dnsseed thread start\n2019-09-23T10:54:49Z Waiting 300 seconds before falling back to DNS seeds.\n2019-09-23T10:54:50Z trying connection XXX lastseen=662.4hrs\n2019-09-23T10:54:55Z connection to XXX timeout\n2019-09-23T10:54:55Z trying connection XXX lastseen=197.4hrs\n2019-09-23T10:54:56Z Added connection peer=0\n2019-09-23T10:54:56Z New",https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-534052183,534052183,
practicalswift,2019-09-23 14:02:19,Concept ACK: seed querying should be kept to a minimum for obvious reasons,https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-534113186,534113186,
naumenkogs,2019-09-23 15:53:34,"Concept ACK.\n\nThis doesn't make us depend on a single seed, does it?\nAlso, perhaps move some of the magic numbers to constants?",https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-534163054,534163054,
ajtowns,2019-09-23 18:32:22,"Fixed the logic to make it query in batches of 3 more sensibly, and bumped the delay for adding fixed seeds to 6 minutes from startup (fixed nodes are only added if addrman is empty, which will only happen if DNS seeds aren't replying -- but this may be due to the first one we try hanging, rather than all of them failing, so 6m is a compromise).\n\nBehaviour for empty peers.dat, but no ability t",https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-534226798,534226798,
DrahtBot,2019-09-23 20:03:33,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19029 (net: Fix CThreadInterrupt::sleep_for TSan issues by hebasto)\n* #15502 (p2p: Speed up initial connection to p2p ne",https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-534261214,534261214,
gmaxwell,2020-01-09 22:14:54,This shouldn't run if the node is not currently making automatic connections (network disable or -noconnect).,https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-572781406,572781406,
ajtowns,2020-02-11 03:06:23,"@gmaxwell\n\n> This shouldn't run if the node is not currently making automatic connections (network disable or -noconnect).\n\nFor `-noconnect` we already have ""parameter interaction: -connect set -> setting -dnsseed=0"" which prevents the dns thread from ever starting. Not sure what network disable means, should we not do dns seeding if `-onlynet=onion` or something?",https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-584460820,584460820,
ajtowns,2020-02-11 04:39:11,"Rebased, reverted delay for fixed seeds, and changed to explicitly query all dns seeds if we start up with an empty addrman.",https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-584475372,584475372,
MarcoFalke,2020-02-11 13:09:14,"> Not sure what network disable means\n\nThere is a `setnetworkactive` RPC, which can disable the connman",https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-584626477,584626477,
ajtowns,2020-02-11 16:35:46,Added patch to avoid querying DNS seeds while `setnetworkactive` is set to false.,https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-584725738,584725738,
hebasto,2020-03-11 09:58:34,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-597542131,597542131,
jgarzik,2020-03-11 13:55:08,"concept ACK\n\nWhen DNS seeding was introduced, the idea was to be a backup, for when P2P peer addr exchange is not working for whatever reason.  It seems preferable to make the polling closer to ""24 hours"" or ""never"" in the case where AddrMan is healthy and happy.\n\nRegardless of that preference, concept ACK as stated above, as this appears to be a strict improvement & resolve an issue.\n",https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-597648742,597648742,
ariard,2020-03-16 01:18:10,"@ajtowns I think you need to update commit message, it's still mentioning the 25s delays while you now rely on DNSSEED_DELAY_FEW_PEERS?",https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-599296139,599296139,
MarcoFalke,2020-05-26 17:06:55,@ajtowns Would you prefer to add a new commit with documentation or instead have this merged first or something else?,https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-634154652,634154652,
ajtowns,2020-05-28 00:15:29,"> @ajtowns Would you prefer to add a new commit with documentation or instead have this merged first or something else?\n\nMaybe a separate PR for updating the comments? See #19084 ",https://github.com/bitcoin/bitcoin/pull/16939#issuecomment-635012553,635012553,
ariard,2020-01-09 21:23:21,"nit: // 5 minutes, also move them to net.h ?",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364966153,364966153,src/net.cpp
ariard,2020-01-09 21:25:28,"You can lay out trade-off further: ""Every new DNS seed queried increases the bar for eclipsing node but leaks more privacy.""",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364966899,364966899,src/net.cpp
ariard,2020-01-09 21:33:19,"What the logic for picking 1000 ? If we assume uniform address propagation, what's the ratio of reliable public nodes on others in addrman and what the probability of not connecting successfully to at least 3 outbound peers ? Based on that, I would say intuitively we may scale down number a bit to increase number of nodes who delay DNS query.",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364970093,364970093,src/net.cpp
ariard,2020-01-09 21:36:10,"For fresh nodes, addrman can't be bigger than 1000 after querying 3 dns (because nMaxIPs == 256), but if we change DNSSEEDS_TO_QUERY_AT_ONCE, we may assign  seeds_wait_time before every time evaluation instead",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364971195,364971195,src/net.cpp
ariard,2020-01-09 21:39:55,"Not sure about this, I would say that's a behavior change. Previously node with  an empty addrman would have query all DNS seeds due to seeds_right_now == -1 as you noticed in #15558. Now you may exit early, if among DNSSEEDS_TO_QUERY_AT_ONCE you find at least 2 outbound peers but with final result of having less address origin diversity in your addrman..",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364972769,364972769,src/net.cpp
ariard,2020-01-09 21:41:20,"This is a behavior change too, I do understand the logic to increase privacy for fresh nodes if DNS  are busy but how did you pick up this number ?",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r364973333,364973333,src/net.cpp
ajtowns,2020-02-11 02:16:40,"They're not needed from other modules, so doesn't make sense to have them in net.h",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r377420664,377420664,src/net.cpp
ajtowns,2020-02-11 02:52:17,"1000 is the maximum number of entries the `addr` message can include, so seems a good threshold to indicate you've managed to pick up some live data from the p2p network about potential peers, rather than just some results from DNS lookups.",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r377426911,377426911,src/net.cpp
ajtowns,2020-02-11 04:10:03,"This change isn't needed -- if addrman is going to end up empty, it will have been empty for each dns seed which means there would have been no delay in querying the seed.",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r377439532,377439532,src/net.cpp
ajtowns,2020-02-11 16:43:45,"With the current code:\n\n * if addrman starts off at 0, it'll query all DNS seeds with no delay\n * if addrman starts off under 1000, it'll query all DNS seeds in groups of 3 after waiting 11 seconds before each group\n * if addrman starts off over 1000, it'll query all DNS seeds in groups of 3 after waiting 5 minutes before each group\n\nThat seems mostly fine to me?\n\n(The timeout for ",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r377758118,377758118,src/net.cpp
hebasto,2020-03-11 13:26:35,"As 25 seconds is a timeout for the _early_ exit from dnsseed thread, we could do not introduce a new heuristic constant at all:\n```diff\n--- a/src/net.cpp\n+++ b/src/net.cpp\n@@ -41,9 +41,9 @@\n static_assert(MINIUPNPC_API_VERSION >= 10, ""miniUPnPc API version >= 10 assumed"");\n #endif\n \n-#include <unordered_map>\n-\n+#include <chrono>\n #include <math.h>\n+#include <unordered_map>",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r390967622,390967622,src/net.cpp
hebasto,2020-03-11 14:17:25,"It seems this branch will never be executed since all of the dns seeds are explicitly queried if we start up with an empty addrman:\nhttps://github.com/bitcoin/bitcoin/blob/5bf16653168cbc3c8bd0814cfa937d0dc8a879ff/src/net.cpp#L1582-L1585",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r391002439,391002439,src/net.cpp
hebasto,2020-03-11 14:24:59,While here mind replacing a magic number 2 with a named constant?,https://github.com/bitcoin/bitcoin/pull/16939#discussion_r391008151,391008151,src/net.cpp
ajtowns,2020-03-12 00:22:40,"It'd make sense for `DNSSEEDS_DELAY_FEW_PEERS` to be calculated from that rather than a constant, but the early exit ought to be based on how long it takes for a connection to _succeed_ rather than the timeout time",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r391341643,391341643,src/net.cpp
ajtowns,2020-03-13 06:21:22,"On the other hand, can easily reuse `DNSSEEDS_DELAY_FEW_PEERS` instead of a new constant, so will just do that.",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r392048614,392048614,src/net.cpp
ajtowns,2020-03-13 06:22:09,Rearranged to `if (s_r_n == 0) { s_r_n += AT_ONCE; if (addrman.size() == 0) { wait(); } }`,https://github.com/bitcoin/bitcoin/pull/16939#discussion_r392048829,392048829,src/net.cpp
ariard,2020-03-16 00:44:42,"Okay, make sense given we send `GETADDR` at `VERSION` reception which means if you have at only one reliable outbound connection you should be able to bootstrap your addrman without seed assistance.",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r392733605,392733605,src/net.cpp
ariard,2020-03-16 01:05:29,"Right, I think I forget we set `seeds_right_now` to number of seeds if if we don't have any known peers (IIRC my comment motivation)",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r392736056,392736056,src/net.cpp
sipa,2020-03-16 04:35:14,"```suggestion\n                    std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n```",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r392778614,392778614,src/net.cpp
ajtowns,2020-03-17 18:36:27,Took this since I rebased to update the commit description,https://github.com/bitcoin/bitcoin/pull/16939#discussion_r393890788,393890788,src/net.cpp
hebasto,2020-03-20 11:34:15,Could add `#include <chrono>`? See [Source code organization](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#source-code-organization).,https://github.com/bitcoin/bitcoin/pull/16939#discussion_r395579741,395579741,src/net.cpp
hebasto,2020-03-20 11:40:07,"Considering https://github.com/bitcoin/bitcoin/blob/96954d17948662672cababc940e453dff08e8cbb/src/net.cpp#L1582-L1585 and https://github.com/bitcoin/bitcoin/blob/96954d17948662672cababc940e453dff08e8cbb/src/net.cpp#L1602\n\nthis point is not reachable when `addrman.size() == 0`, and `addrman.size() > 0` will always be evaluated to true, so it could be dropped, no?",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r395582049,395582049,src/net.cpp
hebasto,2020-03-20 11:41:34,"```suggestion\n                    if (nRelevant >= DNSSEEDS_ENOUGH_PEERS) {\n```",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r395582691,395582691,src/net.cpp
naumenkogs,2020-05-19 16:49:47,"I think we should expand this comment into couple sentences. What's ""live network"" is unclear. What if we have 500 peers, is that not a live network?\nWould be also nice to briefly rationalize this distinction (yes, one more time).\nAlso, long inline comments like this are hard to read :)",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r427450474,427450474,src/net.cpp
naumenkogs,2020-05-19 17:16:32,"Comment here would be nice too. What exactly this tells us?\nFor example, I spent time thinking ""what if a node was connected to 1 node via --connect"". But then they'd still probably have a big addrman (all learned from that peer)...",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r427467271,427467271,src/net.cpp
naumenkogs,2020-05-19 17:33:39,"I think you are right @hebasto. Although it took 5 minutes for me to confirm. I think if we remove this redundant check, a comment should be added.",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r427478370,427478370,src/net.cpp
ajtowns,2020-05-26 16:00:35,"If we did reach it with `addrman.size() == 0`, waiting would be pointless, so I don't think the logic is wrong; there's no `else` so there's no unreachable code, just a conditional branch that always happens to go one way. I think double checking is a bit more robust in case we change the code to querying some subset of dns seeds when addrman is empty in future, eg if we had dozens of dns seeds av",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r430527006,430527006,src/net.cpp
ajtowns,2020-05-26 16:22:18,"It tells us we don't have any known peers (there's already a comment to that effect) -- perhaps this is the first time you've started bitcoind or you've just restarted after deleting peers.dat. If you previously queried the dns seeds, or have at some point connected to some other peers that aren't in IBD, this shouldn't be true any more.",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r430542113,430542113,src/net.cpp
ajtowns,2020-05-26 16:40:19,"We already use std::chrono in net.cpp; I think it's included via net.h via addrman.h via util/system.h via util/time.h. So yeah, could see the value in cleaning that up, but don't think it needs to be in this patch.",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r430554421,430554421,src/net.cpp
ajtowns,2020-05-26 16:43:35,"I don't really think this adds anything -- the logs in the body of the if seems like it documents the value better than giving it a name would, and we don't reuse it anywhere else.",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r430557396,430557396,src/net.cpp
Sjors,2020-05-28 16:55:47,"This undoes #15558 for the first run. No strong opinion on the matter, but it should probably be in the PR and commit description. It's also not mentioned in the comments below. \n\nAlso, both here and in the `if` branch it's useful to comment that `seeds_right_now > 0` causes the wait to be skipped.  ",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r431984399,431984399,src/net.cpp
Sjors,2020-05-28 17:18:58,"> in case we change the code to querying some subset of dns seeds when addrman is empty in future\n\nThat's worth explaining in a comment. It may also be more readable to have a `bool skip_wait`",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r431998452,431998452,src/net.cpp
Sjors,2020-05-28 17:25:45,Could use a comment of why you're sleeping in shorter intervals: because we can exit this thread once we have enough nodes.,https://github.com/bitcoin/bitcoin/pull/16939#discussion_r432002579,432002579,src/net.cpp
ajtowns,2020-05-28 22:05:44,"In #15558 the first run will set `seeds_right_now = 0` then see that `addrman.size() > 0 && seeds_right_now == 0` is false (since `addrman.size() == 0`) so will not sleep nor bump `seeds_right_now` by `DNSSEEDS_TO_QUERY_AT_ONCE`, it will then query a seed, and decrement `seeds_right_now` so that it's `-1`, at which point `addrman.size() > 0 && seeds_right_now == 0` will continue being false (becau",https://github.com/bitcoin/bitcoin/pull/16939#discussion_r432150619,432150619,src/net.cpp
