laanwj,2019-08-29 19:52:21,"Doesn't it help to set a lower `par=` value if the sync goes too fast? Or what about picking up one of the earlier PRs that reduced I/O priority? This seems kind of a kludge, tbh.",https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526335691,526335691,
jonasschnelli,2019-08-29 19:52:59,"Concept ACK on a throttle function (unsure about pausing versus disable paralelism in verification).\n\nRelevant: #12965 (same goal, different approach)",https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526335915,526335915,
emilengler,2019-08-29 19:57:31,"@laanwj\nIMO\n```\n       Set the number of script verification threads (-8 to 16, 0 = auto, <0 =\n       leave that many cores free, default: 0)\n```\ndoesn't really indicate an I/O throttle if this is what you mean",https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526337462,526337462,
laanwj,2019-08-29 19:58:27,"> doesn't really indicate an I/O throttle if this is what you mean\n\nIt's not, but by using less CPU power for verification, the consequence is that it'll go slower and automatically do less I/O as well.",https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526337825,526337825,
emilengler,2019-08-29 20:02:04,"What is if you still have a powerful CPU (even with 1 thread) and a fast internet connection?\nAlso I don't think `-par` was made to reduce the I/O speed, this is more a side-effect",https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526339073,526339073,
laanwj,2019-08-29 20:03:05,"Neither is adding sleep between blocks! So, that's why I mentioned I/O throttling. Your OS has ways to do this that are actually throttling I/O.",https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526339447,526339447,
laanwj,2019-08-29 20:05:01,See e.g. #9245,https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526340213,526340213,
DrahtBot,2019-08-29 20:06:26,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16324](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16324.html) (Get cs_main out of the critical path in Pro",https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526340715,526340715,
emilengler,2019-08-29 20:17:00,"I definitely need to read myself into I/O throttling but as long as a thread sleeps, no I/O stuff is being done as well...",https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526344332,526344332,
GChuf,2019-08-30 09:48:11,"Not sure how the code works, but wouldn't it be better for the program to ignore that line of code when blockpause = 0?\nI'm thinking this should help, unless the program has to go through this extra _if_ statement every time and not just once.\n\n```\n    if (Params().NetworkIDString() != ""regtest"" and blockpause != 0)\n    {\n        std::this_thread::sleep_for(std::chrono::milliseconds(bl",https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526539139,526539139,
emilengler,2019-08-30 11:49:42,@GChuf I also thought about it but I donâ€™t think it actually makes a difference. Take a look at the output log for example,https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526571944,526571944,
GChuf,2019-08-30 15:00:23,"@emilengler still, if we have the option to not include that operation every time a block is found, I think it's worth it, no matter if the difference is perceivable",https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526634867,526634867,
ariard,2019-08-30 15:09:08,"Concept NACK, the problem you're describing is more an OS resource monitoring issue than a problem in Core. IMO complicating critical code paths with options should be really worth it.\n\nIf you are using a Linux, have a look on `man 7 cgroups`, it provides fine-grained throttling policy to specify upper I/O rate limits on a device.",https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526638025,526638025,
emilengler,2019-08-30 15:58:24,@GChuf I still think checking for something every block takes longer than just executing a function,https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526655386,526655386,
GChuf,2019-08-30 17:57:29,@emilengler so it checks for regtest for every block as well? is there a way to check only once at the beginning?,https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526693016,526693016,
emilengler,2019-08-30 21:34:49,"@GChuf Yes, in terms of not calling the function everytime",https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526757432,526757432,
emilengler,2019-08-31 09:53:17,"Done, forget to do the commit yesterday",https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-526817569,526817569,
sdaftuar,2019-09-03 14:48:42,"Approach NACK for many of the reasons given above -- this is a kludge and not the best way to achieve the desired goal; we should have a high bar for complicating consensus code, and I think adding a spurious sleep to intentionally degrade performance does not meet that bar; and we should not expose confusing command line options to users.\n\nI haven't reviewed #9245 in any depth but the approac",https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-527492594,527492594,
emilengler,2019-09-03 15:58:33,Closed for the above reasons,https://github.com/bitcoin/bitcoin/pull/16761#issuecomment-527523280,527523280,
promag,2019-08-30 09:53:12,Why?,https://github.com/bitcoin/bitcoin/pull/16761#discussion_r319441326,319441326,src/validation.cpp
emilengler,2019-08-30 11:48:48,Say you generate 100 blocks with 1000 blockpause. This would take 100 seconds and the program would hang up.,https://github.com/bitcoin/bitcoin/pull/16761#discussion_r319476835,319476835,src/validation.cpp
promag,2019-08-31 09:58:14,:eyes:,https://github.com/bitcoin/bitcoin/pull/16761#discussion_r319718506,319718506,src/validation.cpp
mzumsande,2019-08-31 18:41:11,"That is not a valid concern imo, especially with the default value being 0. Regtest exists to test features on mainnet, and this would prevent testing of blockpause in functional tests for no pressing reason.",https://github.com/bitcoin/bitcoin/pull/16761#discussion_r319733028,319733028,src/validation.cpp
emilengler,2019-08-31 19:45:40,"You're right but this feature was meant for the block download, not creation",https://github.com/bitcoin/bitcoin/pull/16761#discussion_r319734577,319734577,src/validation.cpp
