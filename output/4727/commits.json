[
  {
    "sha": "4302fa67b12794648abb40a9e9f18230041691b4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MzAyZmE2N2IxMjc5NDY0OGFiYjQwYTllOWYxODIzMDA0MTY5MWI0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-11T23:21:23Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:49:41Z"
      },
      "message": "depends: Use pic for all linux dependencies\n\nThis avoids textrels, and matches previous gitian behavior.",
      "tree": {
        "sha": "54ccd8b98189d26f7184bd8eace7056cf39d06d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/54ccd8b98189d26f7184bd8eace7056cf39d06d0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4302fa67b12794648abb40a9e9f18230041691b4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4302fa67b12794648abb40a9e9f18230041691b4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4302fa67b12794648abb40a9e9f18230041691b4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4302fa67b12794648abb40a9e9f18230041691b4/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b5d1b1092998bc95313856d535c632ea5a8f9104",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5d1b1092998bc95313856d535c632ea5a8f9104",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5d1b1092998bc95313856d535c632ea5a8f9104"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 13,
      "deletions": 14
    },
    "files": [
      {
        "sha": "68841afdb84c7fe05834c60062ae393fc0962d9a",
        "filename": "depends/packages/bdb.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=4302fa67b12794648abb40a9e9f18230041691b4",
        "patch": "@@ -8,8 +8,7 @@ $(package)_build_subdir=build_unix\n define $(package)_set_vars\n $(package)_config_opts=--disable-shared --enable-cxx --disable-replication\n $(package)_config_opts_mingw32=--enable-mingw\n-$(package)_config_opts_x86_64_linux=--with-pic\n-$(package)_config_opts_arm_linux=--with-pic\n+$(package)_config_opts_linux=--with-pic\n endef\n \n define $(package)_preprocess_cmds"
      },
      {
        "sha": "f50828c546dae7c924629d9dfb859543aa6c3314",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=4302fa67b12794648abb40a9e9f18230041691b4",
        "patch": "@@ -22,8 +22,7 @@ $(package)_toolset_darwin=darwin\n $(package)_archiver_darwin=$($(package)_libtool)\n $(package)_config_libraries=chrono,filesystem,program_options,system,thread,test\n $(package)_cxxflags=-fvisibility=hidden\n-$(package)_cxxflags_x86_64_linux=-fPIC\n-$(package)_cxxflags_arm_linux=-fPIC\n+$(package)_cxxflags_linux=-fPIC\n endef\n \n define $(package)_preprocess_cmds"
      },
      {
        "sha": "f7d6e0f9fc58d63769369003483908f18cdca866",
        "filename": "depends/packages/freetype.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=4302fa67b12794648abb40a9e9f18230041691b4",
        "patch": "@@ -6,7 +6,7 @@ $(package)_sha256_hash=c0848b29d52ef3ca27ad92e08351f023c5e24ce8cea7d8fe69fc96358\n \n define $(package)_set_vars\n   $(package)_config_opts=--without-zlib --without-png --disable-static\n-  $(package)_config_opts_x86_64_linux=--with-pic\n+  $(package)_config_opts_linux=--with-pic\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "178d592ee63ff9d0f74de6029b4c7becdc850367",
        "filename": "depends/packages/libX11.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/libX11.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/libX11.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libX11.mk?ref=4302fa67b12794648abb40a9e9f18230041691b4",
        "patch": "@@ -7,7 +7,7 @@ $(package)_dependencies=libxcb xtrans xextproto xproto\n \n define $(package)_set_vars\n $(package)_config_opts=--disable-xkb --disable-static\n-$(package)_config_opts_x86_64_linux=--with-pic\n+$(package)_config_opts_linux=--with-pic\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "e87df2e4de6760ace30d169b24c83ee0b7cfc7dd",
        "filename": "depends/packages/libXau.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/libXau.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/libXau.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXau.mk?ref=4302fa67b12794648abb40a9e9f18230041691b4",
        "patch": "@@ -7,7 +7,7 @@ $(package)_dependencies=xproto\n \n define $(package)_set_vars\n   $(package)_config_opts=--disable-shared\n-  $(package)_config_opts_x86_64_linux=--with-pic\n+  $(package)_config_opts_linux=--with-pic\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "6d7a556c1100b50f8547c079d4febfd9075c2e1d",
        "filename": "depends/packages/openssl.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=4302fa67b12794648abb40a9e9f18230041691b4",
        "patch": "@@ -10,12 +10,13 @@ $(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/o\n $(package)_config_opts+=no-krb5 no-camellia no-capieng no-cast no-cms no-dtls1 no-gost no-gmp no-heartbeats no-idea no-jpake no-md2\n $(package)_config_opts+=no-mdc2 no-rc5 no-rdrand no-rfc3779 no-rsax no-sctp no-seed no-sha0 no-static_engine no-whirlpool no-rc2 no-rc4 no-ssl2 no-ssl3\n $(package)_config_opts+=$($(package)_cflags) $($(package)_cppflags)\n-$(package)_config_opts_x86_64_linux=-fPIC linux-x86_64\n-$(package)_config_opts_arm_linux=-fPIC linux-generic32\n+$(package)_config_opts_linux=-fPIC\n+$(package)_config_opts_x86_64_linux=linux-x86_64\n+$(package)_config_opts_i686_linux=linux-generic32\n+$(package)_config_opts_arm_linux=linux-generic32\n $(package)_config_opts_x86_64_darwin=darwin64-x86_64-cc\n $(package)_config_opts_x86_64_mingw32=mingw64\n $(package)_config_opts_i686_mingw32=mingw\n-$(package)_config_opts_i686_linux=linux-generic32 -fPIC\n endef\n \n define $(package)_preprocess_cmds"
      },
      {
        "sha": "5affad28375a9f0c6a2a11d2c46f7f19b47a0e24",
        "filename": "depends/packages/protobuf.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/protobuf.mk?ref=4302fa67b12794648abb40a9e9f18230041691b4",
        "patch": "@@ -7,7 +7,7 @@ $(package)_dependencies=native_$(package)\n \n define $(package)_set_vars\n   $(package)_config_opts=--disable-shared --with-protoc=$(build_prefix)/bin/protoc\n-  $(package)_config_opts_x86_64_linux=--with-pic\n+  $(package)_config_opts_linux=--with-pic\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "1ad329e94d7a171f0b91e7f421691ef1f9f4a337",
        "filename": "depends/packages/qrencode.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=4302fa67b12794648abb40a9e9f18230041691b4",
        "patch": "@@ -6,7 +6,7 @@ $(package)_sha256_hash=dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b5\n \n define $(package)_set_vars\n $(package)_config_opts=--disable-shared -without-tools --disable-sdltest\n-$(package)_config_opts_x86_64_linux=--with-pic\n+$(package)_config_opts_linux=--with-pic\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "0c7c958d62d42e52fa5cb694a026ea9f36ccabfa",
        "filename": "depends/packages/xcb_proto.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/xcb_proto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/xcb_proto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xcb_proto.mk?ref=4302fa67b12794648abb40a9e9f18230041691b4",
        "patch": "@@ -6,7 +6,7 @@ $(package)_sha256_hash=7ef40ddd855b750bc597d2a435da21e55e502a0fefa85b274f2c92280\n \n define $(package)_set_vars\n   $(package)_config_opts=--disable-shared\n-  $(package)_config_opts_x86_64_linux=--with-pic\n+  $(package)_config_opts_linux=--with-pic\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "99eefa6d5ea24b2d2f4e5ecf38b07390432a8549",
        "filename": "depends/packages/xtrans.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/xtrans.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4302fa67b12794648abb40a9e9f18230041691b4/depends/packages/xtrans.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xtrans.mk?ref=4302fa67b12794648abb40a9e9f18230041691b4",
        "patch": "@@ -6,7 +6,7 @@ $(package)_sha256_hash=054d4ee3efd52508c753e9f7bc655ef185a29bd2850dd9e2fc2ccc335\n $(package)_dependencies=\n \n define $(package)_set_vars\n-$(package)_config_opts_x86_64_linux=--with-pic --disable-static\n+$(package)_config_opts_linux=--with-pic --disable-static\n endef\n \n define $(package)_config_cmds"
      }
    ]
  },
  {
    "sha": "5f93ec202810c1bc082f181fbfe6af4438b395fe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZjkzZWMyMDI4MTBjMWJjMDgyZjE4MWZiZmU2YWY0NDM4YjM5NWZl",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-08-29T03:21:18Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:49:41Z"
      },
      "message": "depends: Add a package for qt4.6. Linux uses it by default.\n\nWe're not ready to switch to a static qt5 for Linux yet due to missing plugin\nsupport. This adds a recipe for building a shared qt4 that we build and link\nagainst, but don't distribute.\n\nmake USE_LINUX_STATIC_QT5=1 can be used to build static qt5 as before.",
      "tree": {
        "sha": "f5535da2a48ecc838d6c3190905bc6b6aa43988b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f5535da2a48ecc838d6c3190905bc6b6aa43988b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f93ec202810c1bc082f181fbfe6af4438b395fe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f93ec202810c1bc082f181fbfe6af4438b395fe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5f93ec202810c1bc082f181fbfe6af4438b395fe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f93ec202810c1bc082f181fbfe6af4438b395fe/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4302fa67b12794648abb40a9e9f18230041691b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4302fa67b12794648abb40a9e9f18230041691b4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4302fa67b12794648abb40a9e9f18230041691b4"
      }
    ],
    "stats": {
      "total": 138,
      "additions": 136,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5de015971429eb6af93982e9b6eee66bc843dedb",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -6,6 +6,7 @@ SDK_PATH ?= $(BASEDIR)/SDKs\n NO_QT ?=\n NO_WALLET ?=\n NO_UPNP ?=\n+USE_LINUX_STATIC_QT5 ?=\n FALLBACK_DOWNLOAD_PATH ?= https://bitcoincore.org/depends-sources\n \n BUILD = $(shell ./config.guess)"
      },
      {
        "sha": "e768feecf76a5d74427d57c6746964feb65e08be",
        "filename": "depends/README.usage",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/depends/README.usage",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/depends/README.usage",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.usage?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -23,6 +23,7 @@ NO_QT: Don't download/build/cache qt and its dependencies\n NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n NO_UPNP: Don't download/build/cache packages needed for enabling upnp\n DEBUG: disable some optimizations and enable more runtime checking\n+USE_LINUX_STATIC_QT5: Build a static qt5 rather than shared qt4. Linux only.\n \n If some packages are not built, for example 'make NO_WALLET=1', the appropriate\n options will be passed to bitcoin's configure. In this case, --disable-wallet."
      },
      {
        "sha": "fc60323b1c918a8229f8ba4b04d63310b4d98ec5",
        "filename": "depends/packages/libICE.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/depends/packages/libICE.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/depends/packages/libICE.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libICE.mk?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -0,0 +1,23 @@\n+package=libICE\n+$(package)_version=1.0.9\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=8f7032f2c1c64352b5423f6b48a8ebdc339cc63064af34d66a6c9aa79759e202\n+$(package)_dependencies=xtrans xproto\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-static --disable-docs --disable-specs --without-xsltproc\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "0f9307ca76acb8edb8dc892cefc046627f111654",
        "filename": "depends/packages/libSM.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/depends/packages/libSM.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/depends/packages/libSM.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libSM.mk?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -0,0 +1,23 @@\n+package=libSM\n+$(package)_version=1.2.2\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=0baca8c9f5d934450a70896c4ad38d06475521255ca63b717a6510fdb6e287bd\n+$(package)_dependencies=xtrans xproto libICE\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--without-libuuid  --without-xsltproc  --disable-docs --disable-static\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "305d21cb2daf1095c87f5eabe024a3dff4325230",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -2,8 +2,17 @@ packages:=boost openssl gmp\n native_packages := native_ccache native_comparisontool\n \n qt_native_packages = native_protobuf\n-qt_packages = qt qrencode protobuf\n-qt_linux_packages=expat dbus libxcb xcb_proto libXau xproto freetype fontconfig libX11 xextproto libXext xtrans\n+qt_packages = qrencode protobuf\n+\n+qt46_linux_packages = qt46 expat dbus libxcb xcb_proto libXau xproto freetype libX11 xextproto libXext xtrans libICE libSM\n+qt5_linux_packages= qt expat dbus libxcb xcb_proto libXau xproto freetype fontconfig libX11 xextproto libXext xtrans\n+\n+qt_darwin_packages=qt\n+qt_mingw32_packages=qt\n+\n+qt_linux_$(USE_LINUX_STATIC_QT5):=$(qt5_linux_packages)\n+qt_linux_:=$(qt46_linux_packages)\n+qt_linux_packages:=$(qt_linux_$(USE_LINUX_STATIC_QT5))\n \n wallet_packages=bdb\n "
      },
      {
        "sha": "6af8052931989a97bba5ad518b7c9e55eba57632",
        "filename": "depends/packages/qt46.mk",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/depends/packages/qt46.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/depends/packages/qt46.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt46.mk?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -0,0 +1,67 @@\n+PACKAGE=qt46\n+$(package)_version=4.6.2\n+$(package)_download_path=http://download.qt-project.org/archive/qt/4.6/\n+$(package)_file_name=qt-everywhere-opensource-src-$($(package)_version).tar.gz\n+$(package)_sha256_hash=176f51ddb06dce67ab4b2efc6b327dc21ed8f764c5d97acc15ff1f907c2affae\n+$(package)_dependencies=openssl\n+$(package)_linux_dependencies=freetype dbus libX11 xproto libXext libICE libSM\n+$(package)_patches=stlfix.patch \n+\n+define $(package)_set_vars\n+$(package)_config_opts  = -prefix $(host_prefix) -headerdir $(host_prefix)/include/qt4 -bindir $(build_prefix)/bin\n+$(package)_config_opts += -release -no-separate-debug-info -opensource -confirm-license\n+$(package)_config_opts += -stl -qt-zlib\n+\n+$(package)_config_opts += -nomake examples -nomake tests -nomake tools -nomake translations -nomake demos -nomake docs\n+$(package)_config_opts += -no-audio-backend -no-glib -no-nis -no-cups -no-iconv -no-gif -no-pch\n+$(package)_config_opts += -no-xkb -no-xrender -no-xrandr -no-xfixes -no-xcursor -no-xinerama -no-xsync -no-xinput -no-mitshm -no-xshape\n+$(package)_config_opts += -no-libtiff -no-fontconfig -openssl-linked\n+$(package)_config_opts += -no-sql-db2 -no-sql-ibase -no-sql-oci -no-sql-tds -no-sql-mysql\n+$(package)_config_opts += -no-sql-odbc -no-sql-psql -no-sql-sqlite -no-sql-sqlite2\n+$(package)_config_opts += -no-xmlpatterns -no-multimedia -no-phonon -no-scripttools -no-declarative\n+$(package)_config_opts += -no-phonon-backend -no-webkit -no-javascript-jit -no-script\n+$(package)_config_opts += -no-svg -no-libjpeg -no-libtiff -no-libpng -no-libmng -no-qt3support -no-opengl\n+\n+$(package)_config_opts_x86_64_linux  += -platform linux-g++-64\n+$(package)_config_opts_i686_linux  = -platform linux-g++-32\n+$(package)_build_env  = QT_RCC_TEST=1\n+endef\n+\n+define $(package)_preprocess_cmds\n+   sed -i.old \"s|/include /usr/include||\" config.tests/unix/freetype/freetype.pri && \\\n+   sed -i.old \"s|src_plugins.depends = src_gui src_sql src_svg|src_plugins.depends = src_gui src_sql|\" src/src.pro && \\\n+   sed -i.old \"s|\\.lower(|\\.toLower(|g\" src/network/ssl/qsslsocket_openssl.cpp && \\\n+   sed -i.old \"s|Key_BackSpace|Key_Backspace|\" src/gui/itemviews/qabstractitemview.cpp && \\\n+   sed -i.old \"s|/usr/X11R6/lib64|$(host_prefix)/lib|\" mkspecs/*/*.conf && \\\n+   sed -i.old \"s|/usr/X11R6/lib|$(host_prefix)/lib|\" mkspecs/*/*.conf && \\\n+   sed -i.old \"s|/usr/X11R6/include|$(host_prefix)/include|\" mkspecs/*/*.conf && \\\n+   sed -i.old \"s|QMAKE_LFLAGS_SHLIB  += -shared|QMAKE_LFLAGS_SHLIB  += -shared -Wl,--exclude-libs,ALL|\" mkspecs/common/g++.conf && \\\n+   sed -i.old \"/SSLv2_client_method/d\" src/network/ssl/qsslsocket_openssl.cpp src/network/ssl/qsslsocket_openssl_symbols.cpp && \\\n+   sed -i.old \"/SSLv2_server_method/d\" src/network/ssl/qsslsocket_openssl.cpp src/network/ssl/qsslsocket_openssl_symbols.cpp && \\\n+   patch -p1 < $($(package)_patch_dir)/stlfix.patch \n+endef\n+\n+define $(package)_config_cmds\n+  export PKG_CONFIG_SYSROOT_DIR=/ && \\\n+  export PKG_CONFIG_LIBDIR=$(host_prefix)/lib/pkgconfig && \\\n+  export PKG_CONFIG_PATH=$(host_prefix)/share/pkgconfig  && \\\n+  export CPATH=$(host_prefix)/include && \\\n+  OPENSSL_LIBS='-L$(host_prefix)/lib -lssl -lcrypto' ./configure $($(package)_config_opts) && \\\n+  cd tools/linguist/lrelease; ../../../bin/qmake  -o Makefile lrelease.pro\n+endef\n+\n+define $(package)_build_cmds\n+  export CPATH=$(host_prefix)/include && \\\n+  $(MAKE) -C src && \\\n+  $(MAKE) -C tools/linguist/lrelease\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) -C src INSTALL_ROOT=$($(package)_staging_dir) install && \\\n+  $(MAKE) -C tools/linguist/lrelease INSTALL_ROOT=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf mkspecs/ lib/cmake/ && \\\n+  find native/bin -type f -exec mv {} {}-qt4 \\;\n+endef"
      },
      {
        "sha": "f8f6fb04b0b70db71dc5b2c75d2a5cfb6bc48893",
        "filename": "depends/patches/qt46/stlfix.patch",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/depends/patches/qt46/stlfix.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/depends/patches/qt46/stlfix.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt46/stlfix.patch?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -0,0 +1,10 @@\n+--- old/config.tests/unix/stl/stltest.cpp\t2011-06-23 03:45:23.000000000 -0400\n++++ new/config.tests/unix/stl/stltest.cpp\t2014-08-28 00:54:04.154837604 -0400\n+@@ -49,6 +49,7 @@\n+ #include <vector>\n+ #include <algorithm>\n+ #include <iostream>\n++#include <cstddef>\n+ \n+ // something mean to see if the compiler and C++ standard lib are good enough\n+ template<class K, class T>"
      }
    ]
  },
  {
    "sha": "1aead42d41178d0eeeae2c1b7d0131af9d6fffd2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYWVhZDQyZDQxMTc4ZDBlZWVhZTJjMWI3ZDAxMzFhZjlkNmZmZmQy",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-08-12T23:13:04Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:49:41Z"
      },
      "message": "gitian: descriptors overhaul\n\nDescriptors now make use of the dependencies builder, so results are cached.\nA very new version (>= e9741525c) of Gitian should be used in order to take\nadvantage of caching.",
      "tree": {
        "sha": "19c8eaa38f45c3c35a03c3704b5e9de9fe87d9cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/19c8eaa38f45c3c35a03c3704b5e9de9fe87d9cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1aead42d41178d0eeeae2c1b7d0131af9d6fffd2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1aead42d41178d0eeeae2c1b7d0131af9d6fffd2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1aead42d41178d0eeeae2c1b7d0131af9d6fffd2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1aead42d41178d0eeeae2c1b7d0131af9d6fffd2/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f93ec202810c1bc082f181fbfe6af4438b395fe"
      }
    ],
    "stats": {
      "total": 1772,
      "additions": 256,
      "deletions": 1516
    },
    "files": [
      {
        "sha": "bd3534633737acf904f8a256f758b01a0d7a9b10",
        "filename": "contrib/gitian-descriptors/boost-linux.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 55,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/boost-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/boost-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/boost-linux.yml?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -1,55 +0,0 @@\n----\n-name: \"boost\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"i386\"\n-- \"amd64\"\n-packages:\n-- \"g++\"\n-- \"unzip\"\n-- \"pkg-config\"\n-- \"libtool\"\n-- \"faketime\"\n-- \"bsdmainutils\"\n-- \"zip\"\n-- \"libz-dev\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes: []\n-files:\n-- \"boost_1_55_0.tar.bz2\"\n-script: |\n-  STAGING=\"$HOME/install\"\n-  TEMPDIR=\"$HOME/tmp\"\n-  export LIBRARY_PATH=\"$STAGING/lib\"\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  # Input Integrity Check\n-  echo \"fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52  boost_1_55_0.tar.bz2\" | shasum -c\n-\n-  mkdir -p \"$STAGING\"\n-  tar --warning=no-timestamp -xjf boost_1_55_0.tar.bz2\n-  cd boost_1_55_0\n-  GCCVERSION=$(g++ -E -dM $(mktemp --suffix=.h) | grep __VERSION__ | cut -d ' ' -f 3 | cut -d '\"' -f 2)\n-  # note: bjam with -d+2 reveals that -O3 is implied by default, no need to provide it in cxxflags\n-  echo \"using gcc : $GCCVERSION : g++\n-        :\n-        <cxxflags>\\\"-frandom-seed=boost1 -fPIC\\\"\n-  ;\" > user-config.jam\n-\n-  ./bootstrap.sh --without-icu\n-\n-  ./bjam toolset=gcc threadapi=pthread threading=multi variant=release link=static runtime-link=shared --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 --layout=tagged --build-type=complete --prefix=\"$STAGING\" $MAKEOPTS -d+2 install\n-\n-  # post-process all generated libraries to be deterministic\n-  # extract them to a temporary directory then re-build them deterministically\n-  for LIB in $(find $STAGING -name \\*.a); do\n-    rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n-    ar xv $LIB | cut -b5- > /tmp/list.txt\n-    rm $LIB\n-    ar crsD $LIB $(cat /tmp/list.txt)\n-  done\n-  #\n-  cd \"$STAGING\"\n-  find | sort | zip -X@ $OUTDIR/boost-linux${GBUILD_BITS}-1.55.0-gitian-r1.zip"
      },
      {
        "sha": "347952e3a663988e3df5cd125137ca5cd07e8e3c",
        "filename": "contrib/gitian-descriptors/boost-win.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/boost-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/boost-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/boost-win.yml?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -1,86 +0,0 @@\n----\n-name: \"boost\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"mingw-w64\"\n-- \"g++-mingw-w64\"\n-- \"faketime\"\n-- \"zip\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes: []\n-files:\n-- \"boost_1_55_0.tar.bz2\"\n-- \"boost-mingw-gas-cross-compile-2013-03-03.patch\"\n-script: |\n-  # Defines\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  INDIR=$HOME/build\n-  TEMPDIR=$HOME/tmp\n-  # Input Integrity Check\n-  echo \"fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52  boost_1_55_0.tar.bz2\" | shasum -c\n-  echo \"d2b7f6a1d7051faef3c9cf41a92fa3671d905ef1e1da920d07651a43299f6268  boost-mingw-gas-cross-compile-2013-03-03.patch\" | shasum -c\n-\n-  for BITS in 32 64; do # for architectures\n-    #\n-    INSTALLPREFIX=$HOME/staging${BITS}\n-    BUILDDIR=$HOME/build${BITS}\n-    if [ \"x$BITS\" = \"x32\" ]; then\n-      HOST=i686-w64-mingw32\n-    else\n-      HOST=x86_64-w64-mingw32\n-    fi\n-    #\n-    mkdir -p $INSTALLPREFIX $BUILDDIR\n-    cd $BUILDDIR\n-    #\n-    tar --warning=no-timestamp -xjf $INDIR/boost_1_55_0.tar.bz2\n-    cd boost_1_55_0\n-    GCCVERSION=$($HOST-g++ -E -dM $(mktemp --suffix=.h) | grep __VERSION__ | cut -d ' ' -f 3 | cut -d '\"' -f 2)\n-    echo \"using gcc : $GCCVERSION : $HOST-g++\n-        :\n-        <rc>$HOST-windres\n-        <archiver>$HOST-ar\n-        <cxxflags>-frandom-seed=boost1\n-        <ranlib>$HOST-ranlib\n-  ;\" > user-config.jam\n-    ./bootstrap.sh --without-icu\n-\n-    # Workaround: Upstream boost dev refuses to include patch that would allow Free Software cross-compile toolchain to work\n-    #             This patch was authored by the Fedora package developer and ships in Fedora's mingw32-boost.\n-    #             Please obtain the exact patch that matches the above sha256sum from one of the following mirrors.\n-    #\n-    # Read History:   https://svn.boost.org/trac/boost/ticket/7262\n-    # History Mirror: http://rose.makesad.us/~paulproteus/mirrors/7262%20Boost.Context%20fails%20to%20build%20using%20MinGW.html\n-    #\n-    # Patch:          https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch\n-    # Patch Mirror:   http://wtogami.fedorapeople.org/boost-mingw-gas-cross-compile-2013-03-03.patch\n-    # Patch Mirror:   http://mindstalk.net/host/boost-mingw-gas-cross-compile-2013-03-03.patch\n-    # Patch Mirror:   http://rose.makesad.us/~paulproteus/mirrors/boost-mingw-gas-cross-compile-2013-03-03.patch\n-    patch -p0 < $INDIR/boost-mingw-gas-cross-compile-2013-03-03.patch\n-\n-    # Bug Workaround: boost-1.54.0 broke the ability to disable zlib, still broken in 1.55\n-    # https://svn.boost.org/trac/boost/ticket/9156\n-    sed -i 's^\\[ ac.check-library /zlib//zlib : <library>/zlib//zlib^^' libs/iostreams/build/Jamfile.v2\n-    sed -i 's^<source>zlib.cpp <source>gzip.cpp \\]^^' libs/iostreams/build/Jamfile.v2\n-\n-    # http://statmt.org/~s0565741/software/boost_1_52_0/libs/context/doc/html/context/requirements.html\n-    # \"For cross-compiling the lib you must specify certain additional properties at bjam command line: target-os, abi, binary-format, architecture and address-model.\"\n-    ./bjam toolset=gcc binary-format=pe target-os=windows threadapi=win32 address-model=$BITS threading=multi variant=release link=static runtime-link=static --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 -sNO_ZLIB=1 --layout=tagged --build-type=complete --prefix=\"$INSTALLPREFIX\" $MAKEOPTS install\n-    # post-process all generated libraries to be deterministic\n-    # extract them to a temporary directory then re-build them deterministically\n-    for LIB in $(find $INSTALLPREFIX -name \\*.a); do\n-        rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n-        $HOST-ar xv $LIB | cut -b5- > /tmp/list.txt\n-        rm $LIB\n-        $HOST-ar crsD $LIB $(cat /tmp/list.txt)\n-    done\n-    #\n-    cd \"$INSTALLPREFIX\"\n-    find | sort | zip -X@ $OUTDIR/boost-win$BITS-1.55.0-gitian-r6.zip\n-  done # for BITS in\n-"
      },
      {
        "sha": "82212221334ab96b2ddfdf31382c1dacb684522c",
        "filename": "contrib/gitian-descriptors/deps-linux.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 98,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/deps-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/deps-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-linux.yml?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -1,98 +0,0 @@\n----\n-name: \"bitcoin\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"i386\"\n-- \"amd64\"\n-packages:\n-- \"g++\"\n-- \"unzip\"\n-- \"zip\"\n-- \"pkg-config\"\n-- \"libtool\"\n-- \"faketime\"\n-- \"bsdmainutils\"\n-reference_datetime: \"2013-06-01 00:00:00\"\n-remotes: []\n-files:\n-- \"openssl-1.0.1h.tar.gz\"\n-- \"miniupnpc-1.9.tar.gz\"\n-- \"qrencode-3.4.3.tar.bz2\"\n-- \"protobuf-2.5.0.tar.bz2\"\n-- \"db-4.8.30.NC.tar.gz\"\n-script: |\n-  STAGING=\"$HOME/install\"\n-  TEMPDIR=\"$HOME/tmp\"\n-  OPTFLAGS='-O2'\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  export LIBRARY_PATH=\"$STAGING/lib\"\n-  # Integrity Check\n-  echo \"9d1c8a9836aa63e2c6adb684186cbd4371c9e9dcc01d6e3bb447abf2d4d3d093  openssl-1.0.1h.tar.gz\"  | sha256sum -c\n-  echo \"2923e453e880bb949e3d4da9f83dd3cb6f08946d35de0b864d0339cf70934464  miniupnpc-1.9.tar.gz\"   | sha256sum -c\n-  echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n-  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n-  echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"    | sha256sum -c\n-\n-  #\n-  tar xzf openssl-1.0.1h.tar.gz\n-  cd openssl-1.0.1h\n-  #   need -fPIC to avoid relocation error in 64 bit builds\n-  ./config no-shared no-zlib no-dso no-krb5 --openssldir=$STAGING -fPIC\n-  #   need to build OpenSSL with faketime because a timestamp is embedded into cversion.o\n-  make\n-  make install_sw\n-  cd ..\n-  #\n-  tar xzfm miniupnpc-1.9.tar.gz\n-  cd miniupnpc-1.9\n-  #   miniupnpc is always built with -fPIC\n-  INSTALLPREFIX=$STAGING make $MAKEOPTS install\n-  rm -f $STAGING/lib/libminiupnpc.so* # no way to skip shared lib build\n-  cd ..\n-  #\n-  tar xjf qrencode-3.4.3.tar.bz2\n-  cd qrencode-3.4.3\n-  unset FAKETIME # unset fake time during configure, as it does some clock sanity tests\n-  #   need --with-pic to avoid relocation error in 64 bit builds\n-  ./configure --prefix=$STAGING --enable-static --disable-shared --with-pic --without-tools --disable-dependency-tracking\n-  # Workaround to prevent re-configuring by make; make all files have a date in the past\n-  find . -print0 | xargs -r0 touch -t 200001010000\n-  export FAKETIME=$REFERENCE_DATETIME\n-  make $MAKEOPTS install\n-  cd ..\n-  #\n-  tar xjf protobuf-2.5.0.tar.bz2\n-  cd protobuf-2.5.0\n-  mkdir -p $STAGING/host/bin\n-  unset FAKETIME # unset fake time during configure, as it does some clock sanity tests\n-  #   need --with-pic to avoid relocation error in 64 bit builds\n-  ./configure --prefix=$STAGING --bindir=$STAGING/host/bin --enable-static --disable-shared --with-pic --without-zlib\n-  # Workaround to prevent re-configuring by make; make all files have a date in the past\n-  find . -print0 | xargs -r0 touch -t 200001010000\n-  export FAKETIME=$REFERENCE_DATETIME\n-  make $MAKEOPTS install\n-  cd ..\n-  #\n-  tar xzf db-4.8.30.NC.tar.gz\n-  cd db-4.8.30.NC/build_unix\n-  #   need --with-pic to avoid relocation error in 64 bit builds\n-  ../dist/configure --prefix=$STAGING --enable-cxx --disable-shared --with-pic\n-  # Workaround to prevent re-configuring by make; make all files have a date in the past\n-  find . -print0 | xargs -r0 touch -t 200001010000\n-  make $MAKEOPTS library_build\n-  make install_lib install_include\n-  cd ../..\n-  # post-process all generated libraries to be deterministic\n-  # extract them to a temporary directory then re-build them deterministically\n-  for LIB in $(find $STAGING -name \\*.a); do\n-    rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n-    ar xv $LIB | cut -b5- > /tmp/list.txt\n-    rm $LIB\n-    ar crsD $LIB $(cat /tmp/list.txt)\n-  done\n-  #\n-  cd $STAGING\n-  find include lib bin host | sort | zip -X@ $OUTDIR/bitcoin-deps-linux${GBUILD_BITS}-gitian-r6.zip"
      },
      {
        "sha": "fe02950ef9c09ee5a3c0941ba9660390f01b53ec",
        "filename": "contrib/gitian-descriptors/deps-win.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 128,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/deps-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/deps-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-win.yml?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -1,128 +0,0 @@\n----\n-name: \"bitcoin-deps\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"mingw-w64\"\n-- \"g++-mingw-w64\"\n-- \"git-core\"\n-- \"zip\"\n-- \"faketime\"\n-- \"psmisc\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes: []\n-files:\n-- \"openssl-1.0.1h.tar.gz\"\n-- \"db-4.8.30.NC.tar.gz\"\n-- \"miniupnpc-1.9.tar.gz\"\n-- \"zlib-1.2.8.tar.gz\"\n-- \"libpng-1.6.8.tar.gz\"\n-- \"qrencode-3.4.3.tar.bz2\"\n-script: |\n-  #\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  INDIR=$HOME/build\n-  TEMPDIR=$HOME/tmp\n-  # Input Integrity Check\n-  echo \"9d1c8a9836aa63e2c6adb684186cbd4371c9e9dcc01d6e3bb447abf2d4d3d093  openssl-1.0.1h.tar.gz\"  | sha256sum -c\n-  echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"    | sha256sum -c\n-  echo \"2923e453e880bb949e3d4da9f83dd3cb6f08946d35de0b864d0339cf70934464  miniupnpc-1.9.tar.gz\"   | sha256sum -c\n-  echo \"36658cb768a54c1d4dec43c3116c27ed893e88b02ecfcb44f2166f9c0b7f2a0d  zlib-1.2.8.tar.gz\"      | sha256sum -c\n-  echo \"32c7acf1608b9c8b71b743b9780adb7a7b347563dbfb4a5263761056da44cc96  libpng-1.6.8.tar.gz\"    | sha256sum -c\n-  echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n-\n-  for BITS in 32 64; do # for architectures\n-    #\n-    INSTALLPREFIX=$HOME/staging${BITS}\n-    BUILDDIR=$HOME/build${BITS}\n-    if [ \"x$BITS\" = \"x32\" ]; then\n-      HOST=i686-w64-mingw32\n-    else\n-      HOST=x86_64-w64-mingw32\n-    fi\n-    #\n-    mkdir -p $INSTALLPREFIX $BUILDDIR\n-    cd $BUILDDIR\n-    #\n-    tar xzf $INDIR/openssl-1.0.1h.tar.gz\n-    cd openssl-1.0.1h\n-    if [ \"x$BITS\" = \"x32\" ]; then\n-      OPENSSL_TGT=mingw\n-    else\n-      OPENSSL_TGT=mingw64\n-    fi\n-    ./Configure --cross-compile-prefix=$HOST- ${OPENSSL_TGT} no-shared no-dso --openssldir=$INSTALLPREFIX\n-    make\n-    make install_sw\n-    cd ..\n-    #\n-    tar xzf $INDIR/db-4.8.30.NC.tar.gz\n-    cd db-4.8.30.NC/build_unix\n-    ../dist/configure --prefix=$INSTALLPREFIX --enable-mingw --enable-cxx --host=$HOST --disable-shared\n-    make $MAKEOPTS library_build\n-    make install_lib install_include\n-    cd ../..\n-    #\n-    tar xzf $INDIR/miniupnpc-1.9.tar.gz\n-    cd miniupnpc-1.9\n-    echo \"\n-  --- miniupnpc-1.9/Makefile.mingw.orig   2013-09-29 18:52:51.014087958 -1000\n-  +++ miniupnpc-1.9/Makefile.mingw        2013-09-29 19:09:29.663318691 -1000\n-  @@ -67,8 +67,8 @@\n-   \n-   wingenminiupnpcstrings.o:\twingenminiupnpcstrings.c\n-   \n-  -miniupnpcstrings.h: miniupnpcstrings.h.in wingenminiupnpcstrings\n-  -\twingenminiupnpcstrings \\$< \\$@\n-  +miniupnpcstrings.h: miniupnpcstrings.h.in \n-  +\tsed -e 's|OS/version|MSWindows/5.1.2600|' -e 's|MINIUPNPC_VERSION_STRING \\\"version\\\"|MINIUPNPC_VERSION_STRING \\\"VERSIONHERE\\\"|' \\$< > \\$@\n-   \n-   minixml.o:\tminixml.c minixml.h miniupnpcstrings.h\n-   \n-  \" | sed \"s/VERSIONHERE/$(cat VERSION)/\" | patch -p1\n-    mkdir -p dll\n-    make -f Makefile.mingw CC=$HOST-gcc AR=$HOST-ar libminiupnpc.a\n-    install -d $INSTALLPREFIX/include/miniupnpc\n-    install *.h $INSTALLPREFIX/include/miniupnpc\n-    install libminiupnpc.a  $INSTALLPREFIX/lib\n-    cd ..\n-    #\n-    tar xzf $INDIR/zlib-1.2.8.tar.gz\n-    cd zlib-1.2.8\n-    CROSS_PREFIX=$HOST- ./configure --prefix=$INSTALLPREFIX --static\n-    make\n-    make install\n-    cd ..\n-    #\n-    tar xzf $INDIR/libpng-1.6.8.tar.gz\n-    cd libpng-1.6.8\n-    OPT=\"-O2\"\n-    CPPFLAGS=\"${OPT} -I$INSTALLPREFIX/include\" CFLAGS=\"${OPT} -I$INSTALLPREFIX/include\" LDFLAGS=\"${OPT} -L$INSTALLPREFIX/lib\" ./configure --disable-shared --prefix=$INSTALLPREFIX --host=$HOST\n-    make $MAKEOPTS\n-    make install\n-    cd ..\n-    #\n-    tar xjf $INDIR/qrencode-3.4.3.tar.bz2\n-    cd qrencode-3.4.3\n-    png_CFLAGS=\"-I$INSTALLPREFIX/include\" png_LIBS=\"-L$INSTALLPREFIX/lib -lpng\" ./configure --prefix=$INSTALLPREFIX --host=$HOST --enable-static --disable-shared --without-tools --disable-dependency-tracking\n-    # Workaround to prevent re-configuring by make (resulting in missing m4 error); make all files have a date in the past\n-    find . -print0 | xargs -r0 touch -t 200001010000\n-    make\n-    make install\n-    cd ..\n-    # post-process all generated libraries to be deterministic\n-    # extract them to a temporary directory then re-build them deterministically\n-    for LIB in $(find $INSTALLPREFIX -name \\*.a); do\n-        rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n-        $HOST-ar xv $LIB | cut -b5- > /tmp/list.txt\n-        rm $LIB\n-        $HOST-ar crsD $LIB $(cat /tmp/list.txt)\n-    done\n-    #\n-    cd $INSTALLPREFIX\n-    find include lib | sort | zip -X@ $OUTDIR/bitcoin-deps-win$BITS-gitian-r13.zip\n-  done # for BITS in"
      },
      {
        "sha": "69de6bf623917e183ef635612d1f1433024df604",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 68,
        "deletions": 60,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1aead42d41178d0eeeae2c1b7d0131af9d6fffd2/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1aead42d41178d0eeeae2c1b7d0131af9d6fffd2/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=1aead42d41178d0eeeae2c1b7d0131af9d6fffd2",
        "patch": "@@ -1,86 +1,94 @@\n ---\n-name: \"bitcoin\"\n+name: \"bitcoin-linux-0.10\"\n+enable_cache: true\n suites:\n - \"precise\"\n architectures:\n-- \"i386\"\n - \"amd64\"\n packages: \n-- \"g++\"\n+- \"g++-multilib\"\n - \"git-core\"\n-- \"unzip\"\n - \"pkg-config\"\n - \"autoconf2.13\"\n - \"libtool\"\n - \"automake\"\n - \"faketime\"\n - \"bsdmainutils\"\n-- \"libqt4-core\"\n-- \"libqt4-gui\"\n-- \"libqt4-dbus\"\n-- \"libqt4-network\"\n-- \"libqt4-test\"\n+- \"binutils-gold\"\n reference_datetime: \"2013-06-01 00:00:00\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n-files:\n-- \"bitcoin-deps-linux32-gitian-r6.zip\"\n-- \"bitcoin-deps-linux64-gitian-r6.zip\"\n-- \"boost-linux32-1.55.0-gitian-r1.zip\"\n-- \"boost-linux64-1.55.0-gitian-r1.zip\"\n-- \"qt-linux32-4.6.4-gitian-r1.tar.gz\"\n-- \"qt-linux64-4.6.4-gitian-r1.tar.gz\"\n+files: []\n script: |\n-  STAGING=\"$HOME/install\"\n-  OPTFLAGS='-O2'\n-  BINDIR=\"${OUTDIR}/bin/${GBUILD_BITS}\" # 32/64 bit build specific output directory\n-  TEMPDIR=\"$HOME/tempdir\"\n-  export TZ=UTC\n-  export LIBRARY_PATH=\"$STAGING/lib\"\n-  export PATH=\"$STAGING/bin:$PATH\"\n-  mkdir -p ${BINDIR}\n-  #\n-  mkdir -p $STAGING\n-  cd $STAGING\n-  unzip ../build/bitcoin-deps-linux${GBUILD_BITS}-gitian-r6.zip\n-  unzip ../build/boost-linux${GBUILD_BITS}-1.55.0-gitian-r1.zip\n-  tar -zxf ../build/qt-linux${GBUILD_BITS}-4.6.4-gitian-r1.tar.gz\n-  cd ../build\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"i686-pc-linux-gnu x86_64-unknown-linux-gnu\"\n+  CONFIGFLAGS=\"--enable-upnp-default --enable-glibc-back-compat\"\n+  FAKETIME_HOST_PROGS=\"\"\n+  FAKETIME_PROGS=\"date ar ranlib nm strip\"\n+\n+  export QT_RCC_TEST=1\n+  export GZIP=\"-9n\"\n+  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=`pwd`\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  # Create global faketime wrappers\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+\n+  # Create per-host faketime wrappers\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  export PATH=${WRAP_DIR}:${PATH}\n \n-  # Avoid exporting *any* symbols from the executable\n-  # This avoids conflicts between the libraries statically linked into bitcoin and any\n-  # libraries we may link dynamically (such as Qt and OpenSSL, see issue #4094).\n-  # It also avoids start-up overhead to not export any unnecessary symbols.\n-  # To do this, build a linker script that marks all symbols as local.\n-  LINKER_SCRIPT=$HOME/build/linker_version_script\n-  echo '\n-  {\n-    local: *;\n-  };' > $LINKER_SCRIPT\n-  function do_configure {\n-      ./configure \"$@\" --enable-upnp-default --prefix=$STAGING --with-protoc-bindir=$STAGING/host/bin --with-qt-bindir=$STAGING/bin --with-boost=$STAGING --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib -Wl,--version-script=$LINKER_SCRIPT ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\" --enable-glibc-back-compat\n-  }\n-  #\n   cd bitcoin\n+  BASEPREFIX=`pwd`/depends\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Create the release tarball using (arbitrarily) the first host\n   ./autogen.sh\n-  do_configure\n+  ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n   make dist\n   DISTNAME=`echo bitcoin-*.tar.gz`\n \n-  # Build dynamic versions of everything\n-  # (with static linking to boost and openssl as well a some non-OS deps)\n-  mkdir -p distsrc\n-  cd distsrc\n-  tar --strip-components=1 -xf ../$DISTNAME\n-  do_configure --bindir=$BINDIR \n-  make $MAKEOPTS\n-  make $MAKEOPTS install-strip\n-  make $MAKEOPTS clean\n+  ORIGPATH=\"$PATH\"\n+  # Extract the release tarball into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    tar --strip-components=1 -xf ../$DISTNAME\n \n-  # sort distribution tar file and normalize user/group/mtime information for deterministic output\n+    ./configure --prefix=${BASEPREFIX}/${i} --bindir=${OUTDIR}/${i}/bin --includedir=${OUTDIR}/${i}/include --libdir=${OUTDIR}/${i}/lib --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n+    make ${MAKEOPTS}\n+    make install-strip\n+    cd ..\n+  done\n   mkdir -p $OUTDIR/src\n-  rm -rf $TEMPDIR\n-  mkdir -p $TEMPDIR\n-  cd $TEMPDIR\n-  tar -xvf $HOME/build/bitcoin/$DISTNAME | sort | tar --no-recursion -cT /dev/stdin --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 --mtime=\"$REFERENCE_DATETIME\" | gzip -n > $OUTDIR/src/$DISTNAME\n+  mv $DISTNAME $OUTDIR/src\n+  mv ${OUTDIR}/x86_64-* ${OUTDIR}/64\n+  mv ${OUTDIR}/i686-* ${OUTDIR}/32"
      },
      {
        "sha": "bc3d561c357089535420f7d25d9abcf57dc8838f",
        "filename": "contrib/gitian-descriptors/gitian-osx-bitcoin.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 61,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/gitian-osx-bitcoin.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/gitian-osx-bitcoin.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-bitcoin.yml?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -1,61 +0,0 @@\n----\n-name: \"bitcoin\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"i386\"\n-packages:\n-- \"git-core\"\n-- \"automake\"\n-- \"faketime\"\n-- \"bsdmainutils\"\n-- \"pkg-config\"\n-- \"p7zip-full\"\n-- \"libtool\"\n-\n-reference_datetime: \"2013-06-01 00:00:00\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files:\n-- \"osx-native-depends-r3.tar.gz\"\n-- \"osx-depends-r4.tar.gz\"\n-- \"osx-depends-qt-5.2.1-r4.tar.gz\"\n-- \"MacOSX10.7.sdk.tar.gz\"\n-\n-script: |\n-\n-  HOST=x86_64-apple-darwin11\n-  PREFIX=`pwd`/osx-cross-depends/prefix\n-  SDK=`pwd`/osx-cross-depends/SDKs/MacOSX10.7.sdk\n-  NATIVEPREFIX=`pwd`/osx-cross-depends/native-prefix\n-  export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n-\n-  export SOURCES_PATH=`pwd`\n-\n-  mkdir -p osx-cross-depends/SDKs\n-\n-  tar -C osx-cross-depends/SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n-\n-  tar -C osx-cross-depends -xf osx-native-depends-r3.tar.gz\n-  tar -C osx-cross-depends -xf osx-depends-r4.tar.gz\n-  tar -C osx-cross-depends -xf osx-depends-qt-5.2.1-r4.tar.gz\n-  export PATH=`pwd`/osx-cross-depends/native-prefix/bin:$PATH\n-\n-  cd bitcoin\n-\n-  export ZERO_AR_DATE=1\n-  export QT_RCC_TEST=1\n-  ./autogen.sh\n-  ./configure --host=${HOST} --with-boost=${PREFIX} CC=clang CXX=clang++ OBJC=clang OBJCXX=clang++ CFLAGS=\"-target ${HOST} -mmacosx-version-min=10.6 --sysroot ${SDK} -msse2 -Qunused-arguments\" CXXFLAGS=\"-target ${HOST} -mmacosx-version-min=10.6 --sysroot ${SDK} -msse2 -Qunused-arguments\" LDFLAGS=\"-B${NATIVEPREFIX}/bin -L${PREFIX}/lib -L${SDK}/usr/lib/i686-apple-darwin10/4.2.1\" CPPFLAGS=\"-I${NATIVEPREFIX}/lib/clang/3.2/include -I${PREFIX}/include\" SSL_LIBS=\"-lz -lssl -lcrypto\" --disable-tests -with-gui=qt5 PKG_CONFIG_LIBDIR=\"${PREFIX}/lib/pkgconfig\" --disable-dependency-tracking --disable-maintainer-mode\n-  make dist\n-  mkdir -p distsrc\n-  cd distsrc\n-  tar --strip-components=1 -xf ../bitcoin-*.tar*\n-  ./configure --host=${HOST} --with-boost=${PREFIX} CC=clang CXX=clang++ OBJC=clang OBJCXX=clang++ CFLAGS=\"-target ${HOST} -mmacosx-version-min=10.6 --sysroot ${SDK} -msse2 -Qunused-arguments\" CXXFLAGS=\"-target ${HOST} -mmacosx-version-min=10.6 --sysroot ${SDK} -msse2 -Qunused-arguments\" LDFLAGS=\"-B${NATIVEPREFIX}/bin -L${PREFIX}/lib -L${SDK}/usr/lib/i686-apple-darwin10/4.2.1\" CPPFLAGS=\"-I${NATIVEPREFIX}/lib/clang/3.2/include -I${PREFIX}/include\" SSL_LIBS=\"-lz -lssl -lcrypto\" --disable-tests -with-gui=qt5 PKG_CONFIG_LIBDIR=\"${PREFIX}/lib/pkgconfig\"  --disable-dependency-tracking --disable-maintainer-mode\n-  make $MAKEOPTS\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  make deploy\n-  dmg dmg Bitcoin-Qt.dmg $OUTDIR/Bitcoin-Qt.dmg"
      },
      {
        "sha": "07a021cf0c59ac7d6f96c80ea1cc00b56a402e18",
        "filename": "contrib/gitian-descriptors/gitian-osx-depends.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 159,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/gitian-osx-depends.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/gitian-osx-depends.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-depends.yml?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -1,159 +0,0 @@\n----\n-name: \"osx-depends\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"i386\"\n-packages:\n-- \"git-core\"\n-- \"automake\"\n-- \"p7zip-full\"\n-\n-reference_datetime: \"2013-06-01 00:00:00\"\n-remotes: []\n-files:\n-- \"boost_1_55_0.tar.bz2\"\n-- \"db-4.8.30.NC.tar.gz\"\n-- \"miniupnpc-1.9.tar.gz\"\n-- \"openssl-1.0.1h.tar.gz\"\n-- \"protobuf-2.5.0.tar.bz2\"\n-- \"qrencode-3.4.3.tar.bz2\"\n-- \"MacOSX10.7.sdk.tar.gz\"\n-- \"osx-native-depends-r3.tar.gz\"\n-\n-script: |\n-\n-  echo \"fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52  boost_1_55_0.tar.bz2\" | sha256sum -c\n-  echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\" | sha256sum -c\n-  echo \"2923e453e880bb949e3d4da9f83dd3cb6f08946d35de0b864d0339cf70934464  miniupnpc-1.9.tar.gz\" | sha256sum -c\n-  echo \"9d1c8a9836aa63e2c6adb684186cbd4371c9e9dcc01d6e3bb447abf2d4d3d093  openssl-1.0.1h.tar.gz\" | sha256sum -c\n-  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n-  echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n-\n-  REVISION=r4\n-  export SOURCES_PATH=`pwd`\n-  export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n-  export PATH=$HOME:$PATH\n-  export SOURCES_PATH=`pwd`\n-  export ZERO_AR_DATE=1\n-\n-  mkdir -p osx-cross-depends/build\n-  cd osx-cross-depends\n-\n-  PREFIX=`pwd`/prefix\n-  NATIVEPREFIX=`pwd`/native-prefix\n-  BUILD_BASE=`pwd`/build\n-  SDK=`pwd`/SDKs/MacOSX10.7.sdk\n-  HOST=x86_64-apple-darwin11\n-  MIN_VERSION=10.6\n-\n-  INT_CFLAGS=\"-target ${HOST} -mmacosx-version-min=${MIN_VERSION} --sysroot ${SDK} -msse2 -Qunused-arguments\"\n-  INT_CXXFLAGS=\"${INT_CFLAGS}\"\n-  INT_LDFLAGS=\"-L${PREFIX}/lib -L${SDK}/usr/lib/i686-apple-darwin10/4.2.1\"\n-  INT_LDFLAGS_CLANG=\"-B${NATIVEPREFIX}/bin\"\n-  INT_CPPFLAGS=\"-I${PREFIX}/include\"\n-  INT_CC=clang\n-  INT_CXX=clang++\n-  INT_OBJC=clang\n-  INT_OBJCXX=clang++\n-  INT_AR=${HOST}-ar\n-  INT_RANLIB=${HOST}-ranlib\n-  INT_LIBTOOL=${HOST}-libtool\n-  INT_INSTALL_NAME_TOOL=${HOST}-install_name_tool\n-\n-  export PATH=${NATIVEPREFIX}/bin:${PATH}\n-\n-  mkdir -p ${NATIVEPREFIX}/bin\n-  mkdir -p ${NATIVEPREFIX}/lib\n-  mkdir -p ${PREFIX}/bin\n-  mkdir -p ${PREFIX}/lib\n-  mkdir -p ${BUILD_BASE}\n-\n-  mkdir -p SDKs\n-  tar -C SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n-\n-  tar xf /home/ubuntu/build/osx-native-depends-r3.tar.gz\n-\n-  # bdb\n-  SOURCE_FILE=${SOURCES_PATH}/db-4.8.30.NC.tar.gz\n-  BUILD_DIR=${BUILD_BASE}/db-4.8.30.NC\n-\n-  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n-  sed -i 's/__atomic_compare_exchange/__atomic_compare_exchange_db/g' ${BUILD_DIR}/dbinc/atomic.h\n-  pushd ${BUILD_DIR}\n-  cd build_unix;\n-  ../dist/configure --host=${HOST} --prefix=\"${PREFIX}\" --disable-shared --enable-cxx CC=\"${INT_CC}\" CXX=\"${INT_CXX}\" AR=\"${INT_AR}\" RANLIB=\"${INT_RANLIB}\" OBJC=\"${INT_OBJC}\" OBJCXX=\"${INT_OBJCXX}\" CFLAGS=\"${INT_CFLAGS}\" CXXFLAGS=\"${INT_CXXFLAGS}\" LDFLAGS=\"${INT_CLANG_LDFLAGS} ${INT_LDFLAGS}\" CPPFLAGS=\"${INT_CPPFLAGS}\"\n-  make $MAKEOPTS libdb.a libdb_cxx.a\n-  make  install_lib install_include\n-  popd\n-\n-  # openssl\n-  SOURCE_FILE=${SOURCES_PATH}/openssl-1.0.1h.tar.gz\n-  BUILD_DIR=${BUILD_BASE}/openssl-1.0.1h\n-\n-  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n-  pushd ${BUILD_DIR}\n-  sed -ie \"s|cc:|${INT_CC}:|\" ${BUILD_DIR}/Configure\n-  sed -ie \"s|\\(-arch [_a-zA-Z0-9]*\\)|\\1 --sysroot ${SDK}  -target ${HOST} -msse2|\" ${BUILD_DIR}/Configure\n-  AR=\"${INT_AR}\" RANLIB=\"${INT_RANLIB}\" ./Configure --prefix=${PREFIX} --openssldir=${PREFIX}/etc/openssl zlib shared no-krb5 darwin64-x86_64-cc ${INT_LDFLAGS} ${INT_CLANG_LDFLAGS} ${INT_CPPFLAGS}\n-  sed -i \"s|engines apps test|engines|\" ${BUILD_DIR}/Makefile\n-  sed -i \"/define DATE/d\" ${BUILD_DIR}/crypto/Makefile\n-  make -j1 build_libs libcrypto.pc libssl.pc openssl.pc\n-  make -j1 install_sw\n-  popd\n-\n-  #libminiupnpc\n-  SOURCE_FILE=${SOURCES_PATH}/miniupnpc-1.9.tar.gz\n-  BUILD_DIR=${BUILD_BASE}/miniupnpc-1.9\n-\n-  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n-  pushd ${BUILD_DIR}\n-  CFLAGS=\"${INT_CFLAGS} ${INT_CPPFLAGS}\" make $MAKEOPTS OS=Darwin CC=\"${INT_CC}\" AR=\"${INT_AR}\" libminiupnpc.a\n-  install -d ${PREFIX}/include/miniupnpc\n-  install *.h ${PREFIX}/include/miniupnpc\n-  install libminiupnpc.a  ${PREFIX}/lib\n-  popd\n-\n-  # qrencode\n-  SOURCE_FILE=${SOURCES_PATH}/qrencode-3.4.3.tar.bz2\n-  BUILD_DIR=${BUILD_BASE}/qrencode-3.4.3\n-  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n-  pushd ${BUILD_DIR}\n-\n-  # m4 folder is not included in the stable release, which can confuse aclocal\n-  # if its timestamp ends up being earlier than configure.ac when extracted\n-  touch aclocal.m4\n-  ./configure --host=${HOST} --prefix=\"${PREFIX}\" --disable-shared CC=\"${INT_CC}\" CXX=\"${INT_CXX}\" AR=\"${INT_AR}\" RANLIB=\"${INT_RANLIB}\" OBJC=\"${INT_OBJC}\" OBJCXX=\"${INT_OBJCXX}\" CFLAGS=\"${INT_CFLAGS}\" CXXFLAGS=\"${INT_CXXFLAGS}\" LDFLAGS=\"${INT_CLANG_LDFLAGS} ${INT_LDFLAGS}\" CPPFLAGS=\"${INT_CPPFLAGS}\" --disable-shared -without-tools --disable-sdltest --disable-dependency-tracking\n-  make $MAKEOPTS\n-  make install\n-  popd\n-\n-  # libprotobuf\n-  SOURCE_FILE=${SOURCES_PATH}/protobuf-2.5.0.tar.bz2\n-  BUILD_DIR=${BUILD_BASE}/protobuf-2.5.0\n-\n-  tar -C ${BUILD_BASE} -xjf ${SOURCE_FILE}\n-  pushd ${BUILD_DIR}\n-  ./configure --host=${HOST} --prefix=\"${PREFIX}\" --disable-shared --enable-cxx CC=\"${INT_CC}\" CXX=\"${INT_CXX}\" AR=\"${INT_AR}\" RANLIB=\"${INT_RANLIB}\" OBJC=\"${INT_OBJC}\" OBJCXX=\"${INT_OBJCXX}\" CFLAGS=\"${INT_CFLAGS}\" CXXFLAGS=\"${INT_CXXFLAGS}\" LDFLAGS=\"${INT_CLANG_LDFLAGS} ${INT_LDFLAGS}\" CPPFLAGS=\"${INT_CPPFLAGS}\" --enable-shared=no --disable-dependency-tracking --with-protoc=${NATIVEPREFIX}/bin/protoc\n-  cd src\n-  make $MAKEOPTS libprotobuf.la\n-  make install-libLTLIBRARIES install-nobase_includeHEADERS\n-  cd ..\n-  make install-pkgconfigDATA\n-  popd\n-\n-  # boost\n-  SOURCE_FILE=${SOURCES_PATH}/boost_1_55_0.tar.bz2\n-  BUILD_DIR=${BUILD_BASE}/boost_1_55_0\n-\n-  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n-  pushd ${BUILD_DIR}\n-  ./bootstrap.sh --with-libraries=chrono,filesystem,program_options,system,thread,test\n-  echo \"using darwin : : ${INT_CXX} : <cxxflags>\\\"${INT_CFLAGS} ${INT_CPPFLAGS}\\\" <linkflags>\\\"${INT_LDFLAGS} ${INT_CLANG_LDFLAGS}\\\" <archiver>\\\"${INT_LIBTOOL}\\\" <striper>\\\"${INT_STRIP}\\\" : ;\" > \"user-config.jam\"\n-  ./b2 -d2 --layout=tagged --build-type=complete --prefix=\"${PREFIX}\" --toolset=darwin-4.2.1 --user-config=user-config.jam variant=release threading=multi link=static install\n-  popd\n-\n-  export GZIP=\"-9n\"\n-  find prefix | sort | tar --no-recursion -czf osx-depends-${REVISION}.tar.gz -T -\n-\n-  mv osx-depends-${REVISION}.tar.gz $OUTDIR"
      },
      {
        "sha": "a753ad704ffe70d56f20be3562f2152d48862be9",
        "filename": "contrib/gitian-descriptors/gitian-osx-native.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 178,
        "changes": 178,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/gitian-osx-native.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/gitian-osx-native.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-native.yml?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -1,178 +0,0 @@\n----\n-name: \"osx-native\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"i386\"\n-packages:\n-- \"git-core\"\n-- \"automake\"\n-- \"faketime\"\n-- \"libssl-dev\"\n-- \"libbz2-dev\"\n-- \"libz-dev\"\n-- \"cmake\"\n-- \"libcap-dev\"\n-- \"p7zip-full\"\n-- \"uuid-dev\"\n-\n-reference_datetime: \"2013-06-01 00:00:00\"\n-remotes: []\n-files:\n-- \"10cc648683617cca8bcbeae507888099b41b530c.tar.gz\"\n-- \"cctools-809.tar.gz\"\n-- \"dyld-195.5.tar.gz\"\n-- \"ld64-127.2.tar.gz\"\n-- \"protobuf-2.5.0.tar.bz2\"\n-- \"MacOSX10.7.sdk.tar.gz\"\n-- \"cdrkit-1.1.11.tar.gz\"\n-- \"libdmg-hfsplus-v0.1.tar.gz\"\n-- \"clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\"\n-- \"cdrkit-deterministic.patch\"\n-\n-\n-script: |\n-\n-  echo \"18406961fd4a1ec5c7ea35c91d6a80a2f8bb797a2bd243a610bd75e13eff9aca  10cc648683617cca8bcbeae507888099b41b530c.tar.gz\" | sha256sum -c\n-  echo \"03ba62749b843b131c7304a044a98c6ffacd65b1399b921d69add0375f79d8ad  cctools-809.tar.gz\" | sha256sum -c\n-  echo \"2cf0484c87cf79b606b351a7055a247dae84093ae92c747a74e0cde2c8c8f83c  dyld-195.5.tar.gz\" | sha256sum -c\n-  echo \"97b75547b2bd761306ab3e15ae297f01e7ab9760b922bc657f4ef72e4e052142  ld64-127.2.tar.gz\" | sha256sum -c\n-  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n-  echo \"d1c030756ecc182defee9fe885638c1785d35a2c2a297b4604c0e0dcc78e47da  cdrkit-1.1.11.tar.gz\" | sha256sum -c\n-  echo \"6569a02eb31c2827080d7d59001869ea14484c281efab0ae7f2b86af5c3120b3  libdmg-hfsplus-v0.1.tar.gz\" | sha256sum -c\n-  echo \"b9d57a88f9514fa1f327a1a703756d0c1c960f4c58494a5bd80313245d13ffff  clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\" | sha256sum -c\n-  echo \"cc12bdbd7a09f71cb2a6a3e6ec3e0abe885ca7111c2b47857f5095e5980caf4f  cdrkit-deterministic.patch\" | sha256sum -c\n-\n-\n-  REVISION=r3\n-  export REFERENCE_DATETIME\n-  export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-\n-  REAL_AR=`which ar`\n-  REAL_RANLIB=`which ranlib`\n-  REAL_DATE=`which date`\n-\n-  echo '#!/bin/bash' > $HOME/ar\n-  echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/ar\n-  echo \"$REAL_AR \\\"\\$@\\\"\" >> $HOME/ar\n-\n-  echo '#!/bin/bash' > $HOME/ranlib\n-  echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/ranlib\n-  echo \"$REAL_RANLIB \\\"\\$@\\\"\" >> $HOME/ranlib\n-\n-  echo '#!/bin/bash' > $HOME/date\n-  echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/date\n-  echo \"$REAL_DATE \\\"\\$@\\\"\" >> $HOME/date\n-\n-  chmod +x $HOME/ar $HOME/ranlib $HOME/date\n-\n-\n-  export PATH=$HOME:$PATH\n-  export SOURCES_PATH=`pwd`\n-\n-  mkdir -p osx-cross-depends/build\n-  cd osx-cross-depends\n-\n-  NATIVEPREFIX=`pwd`/native-prefix\n-  BUILD_BASE=`pwd`/build\n-  SDK=`pwd`/SDKs/MacOSX10.7.sdk\n-  HOST=x86_64-apple-darwin11\n-  MIN_VERSION=10.6\n-\n-  CFLAGS=\"\"\n-  CXXFLAGS=\"${CFLAGS}\"\n-  LDFLAGS=\"-L${NATIVEPREFIX}/lib\"\n-\n-  export PATH=${NATIVEPREFIX}/bin:${PATH}\n-\n-  mkdir -p ${NATIVEPREFIX}/bin\n-  mkdir -p ${NATIVEPREFIX}/lib\n-\n-  mkdir -p SDKs\n-  tar -C SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n-\n-  #  Clang\n-  SOURCE_FILE=${SOURCES_PATH}/clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\n-  BUILD_DIR=${BUILD_BASE}/clang+llvm-3.2-x86-linux-ubuntu-12.04\n-\n-  mkdir -p ${NATIVEPREFIX}/lib/clang/3.2/include\n-  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n-  cp ${BUILD_DIR}/bin/clang ${NATIVEPREFIX}/bin/\n-  cp ${BUILD_DIR}/bin/clang++ ${NATIVEPREFIX}/bin/\n-  cp ${BUILD_DIR}/lib/libLTO.so ${NATIVEPREFIX}/lib/\n-  cp ${BUILD_DIR}/lib/clang/3.2/include/* ${NATIVEPREFIX}/lib/clang/3.2/include\n-\n-  # cctools\n-  SOURCE_FILE=${SOURCES_PATH}/10cc648683617cca8bcbeae507888099b41b530c.tar.gz\n-  BUILD_DIR=${BUILD_BASE}/toolchain4-10cc648683617cca8bcbeae507888099b41b530c\n-\n-  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n-  mkdir -p ${BUILD_DIR}/sdks\n-  pushd ${BUILD_DIR}/sdks;\n-  ln -sf ${SDK} MacOSX10.7.sdk\n-  ln -sf ${SOURCES_PATH}/cctools-809.tar.gz ${BUILD_DIR}/cctools2odcctools/cctools-809.tar.gz\n-  ln -sf ${SOURCES_PATH}/ld64-127.2.tar.gz ${BUILD_DIR}/cctools2odcctools/ld64-127.2.tar.gz\n-  ln -sf ${SOURCES_PATH}/dyld-195.5.tar.gz ${BUILD_DIR}/cctools2odcctools/dyld-195.5.tar.gz\n-\n-  tar -C ${BUILD_DIR} -xf ${SOURCES_PATH}/clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\n-  #   Hack in the use of our llvm headers rather than grabbing the old llvm-gcc.\n-  sed -i \"s|GCC_DIR|LLVM_CLANG_DIR|g\" ${BUILD_DIR}/cctools2odcctools/extract.sh\n-  sed -i \"s|llvmgcc42-2336.1|clang+llvm-3.2-x86-linux-ubuntu-12.04|g\" ${BUILD_DIR}/cctools2odcctools/extract.sh\n-  sed -i \"s|\\${LLVM_CLANG_DIR}/llvmCore/include/llvm-c|\\${LLVM_CLANG_DIR}/include/llvm-c \\${LLVM_CLANG_DIR}/include/llvm |\" ${BUILD_DIR}/cctools2odcctools/extract.sh\n-\n-  sed -i \"s|fAC_INIT|AC_INIT|\" ${BUILD_DIR}/cctools2odcctools/files/configure.ac\n-  sed -i 's/\\# Dynamically linked LTO/\\t ;\\&\\n\\t linux*)\\n# Dynamically linked LTO/' ${BUILD_DIR}/cctools2odcctools/files/configure.ac\n-\n-  cd ${BUILD_DIR}/cctools2odcctools\n-  ./extract.sh --osxver 10.7\n-  cd odcctools-809\n-  ./configure --prefix=${NATIVEPREFIX} --target=${HOST} CFLAGS=\"${CFLAGS} -I${NATIVEPREFIX}/include -D__DARWIN_UNIX03 -D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS\" LDFLAGS=\"${LDFLAGS} -Wl,-rpath=\\\\\\$\\$ORIGIN/../lib\" --with-sysroot=${SDK}\n-\n-  #   The 'PC' define in sparc/reg.h conflicts but doesn't get used anyway. Just rename it.\n-  sed -i \"s|define\\tPC|define\\tPC_|\"  ${BUILD_DIR}/cctools2odcctools/odcctools-809/include/architecture/sparc/reg.h\n-  make $MAKEOPTS\n-  make install\n-  popd\n-\n-  # protoc\n-  SOURCE_FILE=${SOURCES_PATH}/protobuf-2.5.0.tar.bz2\n-  BUILD_DIR=${BUILD_BASE}/protobuf-2.5.0\n-\n-  tar -C ${BUILD_BASE} -xjf ${SOURCE_FILE}\n-  pushd ${BUILD_DIR};\n-  ./configure --enable-shared=no --disable-dependency-tracking --prefix=${NATIVEPREFIX}\n-  make $MAKEOPTS\n-  cp ${BUILD_DIR}/src/protoc ${NATIVEPREFIX}/bin/\n-  popd\n-\n-  # cdrkit\n-  SOURCE_FILE=${SOURCES_PATH}/cdrkit-1.1.11.tar.gz\n-  BUILD_DIR=${BUILD_BASE}/cdrkit-1.1.11\n-\n-  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n-  pushd ${BUILD_DIR}\n-  patch -p1 < ${SOURCES_PATH}/cdrkit-deterministic.patch\n-  cmake -DCMAKE_INSTALL_PREFIX=${NATIVEPREFIX}\n-  make $MAKEOPTS genisoimage\n-  make -C genisoimage install\n-  popd\n-\n-  # libdmg-hfsplus\n-  SOURCE_FILE=${SOURCES_PATH}/libdmg-hfsplus-v0.1.tar.gz\n-  BUILD_DIR=${BUILD_BASE}/libdmg-hfsplus-libdmg-hfsplus-v0.1\n-\n-  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n-  mkdir -p ${BUILD_DIR}/build\n-  pushd ${BUILD_DIR}/build\n-  cmake -DCMAKE_INSTALL_PREFIX:PATH=${NATIVEPREFIX}/bin ..\n-  make $MAKEOPTS\n-  make install\n-  popd\n-\n-  rm -rf native-prefix/docs\n-\n-  export GZIP=\"-9n\"\n-  find native-prefix | sort | tar --no-recursion -czf osx-native-depends-$REVISION.tar.gz -T -\n-  mv osx-native-depends-$REVISION.tar.gz $OUTDIR"
      },
      {
        "sha": "5e0ad9222a855c0b22a58470b975f280e7b37d2c",
        "filename": "contrib/gitian-descriptors/gitian-osx-qt.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 186,
        "changes": 186,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/gitian-osx-qt.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/gitian-osx-qt.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-qt.yml?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -1,186 +0,0 @@\n----\n-name: \"osx-qt\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"i386\"\n-packages:\n-- \"git-core\"\n-- \"automake\"\n-- \"p7zip-full\"\n-\n-reference_datetime: \"2013-06-01 00:00:00\"\n-remotes: []\n-files:\n-- \"qt-everywhere-opensource-src-5.2.1.tar.gz\"\n-- \"osx-native-depends-r3.tar.gz\"\n-- \"osx-depends-r4.tar.gz\"\n-- \"MacOSX10.7.sdk.tar.gz\"\n-\n-script: |\n-\n-  echo \"84e924181d4ad6db00239d87250cc89868484a14841f77fb85ab1f1dbdcd7da1  qt-everywhere-opensource-src-5.2.1.tar.gz\" | sha256sum -c\n-\n-  REVISION=r4\n-  export SOURCES_PATH=`pwd`\n-  export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n-  export ZERO_AR_DATE=1\n-\n-  export TZ=UTC\n-\n-  REAL_DATE=`which date`\n-  echo '#!/bin/bash' > $HOME/date\n-  echo \"$REAL_DATE -d \\\"${REFERENCE_DATETIME}\\\" \\\"\\$@\\\"\" >> $HOME/date\n-\n-  chmod +x $HOME/date\n-  export PATH=$HOME:$PATH\n-\n-  mkdir -p osx-cross-depends/build\n-  cd osx-cross-depends\n-\n-  PREFIX=`pwd`/prefix\n-  NATIVEPREFIX=`pwd`/native-prefix\n-  BUILD_BASE=`pwd`/build\n-  SDK=`pwd`/SDKs/MacOSX10.7.sdk\n-  HOST=x86_64-apple-darwin11\n-  MIN_VERSION=10.6\n-\n-  INT_CFLAGS=\"-target ${HOST} -mmacosx-version-min=${MIN_VERSION} --sysroot ${SDK} -msse2 -Qunused-arguments\"\n-  INT_CXXFLAGS=\"${INT_CFLAGS}\"\n-  INT_LDFLAGS=\"-L${PREFIX}/lib -L${SDK}/usr/lib/i686-apple-darwin10/4.2.1\"\n-  INT_LDFLAGS_CLANG=\"-B${NATIVEPREFIX}/bin\"\n-  INT_CPPFLAGS=\"-I${PREFIX}/include\"\n-  INT_CC=clang\n-  INT_CXX=clang++\n-  INT_OBJC=clang\n-  INT_OBJCXX=clang++\n-  INT_AR=${HOST}-ar\n-  INT_RANLIB=${HOST}-ranlib\n-  INT_LIBTOOL=${HOST}-libtool\n-  INT_INSTALL_NAME_TOOL=${HOST}-install_name_tool\n-\n-  export PATH=${NATIVEPREFIX}/bin:${PATH}\n-\n-  mkdir -p ${NATIVEPREFIX}/bin\n-  mkdir -p ${NATIVEPREFIX}/lib\n-  mkdir -p ${PREFIX}/bin\n-  mkdir -p ${PREFIX}/lib\n-  mkdir -p ${BUILD_BASE}\n-\n-  mkdir -p SDKs\n-  tar -C SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n-\n-  tar xf /home/ubuntu/build/osx-native-depends-r3.tar.gz\n-\n-  export PATH=`pwd`/native-prefix/bin:$PATH\n-  tar xf /home/ubuntu/build/osx-depends-r4.tar.gz\n-\n-  SOURCE_FILE=${SOURCES_PATH}/qt-everywhere-opensource-src-5.2.1.tar.gz\n-  BUILD_DIR=${BUILD_BASE}/qt-everywhere-opensource-src-5.2.1\n-\n-\n-  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n-\n-  # Install our mkspec. All files are pulled from the macx-clang spec, except for\n-  # our custom qmake.conf\n-  SPECFILE=${BUILD_DIR}/qtbase/mkspecs/macx-clang-linux/qmake.conf\n-\n-  mkdir -p ${BUILD_DIR}/qtbase/mkspecs/macx-clang-linux\n-  cp -f ${BUILD_DIR}/qtbase/mkspecs/macx-clang/Info.plist.lib ${BUILD_DIR}/qtbase/mkspecs/macx-clang-linux/\n-  cp -f ${BUILD_DIR}/qtbase/mkspecs/macx-clang/Info.plist.app ${BUILD_DIR}/qtbase/mkspecs/macx-clang-linux/\n-  cp -f ${BUILD_DIR}/qtbase/mkspecs/macx-clang/qplatformdefs.h ${BUILD_DIR}/qtbase/mkspecs/macx-clang-linux/\n-\n-  cat > ${SPECFILE} <<ENDCONF\n- \n-  MAKEFILE_GENERATOR      = UNIX\n-  CONFIG                 += app_bundle incremental global_init_link_order lib_version_first plugin_no_soname absolute_library_soname\n-  QMAKE_INCREMENTAL_STYLE = sublib\n-\n-  include(../common/macx.conf)\n-  include(../common/gcc-base-mac.conf)\n-  include(../common/clang.conf)\n-  include(../common/clang-mac.conf)\n-\n-  QMAKE_XCODE_VERSION=4.3\n-  QMAKE_XCODE_DEVELOPER_PATH=/Developer\n-\n-  QMAKE_MACOSX_DEPLOYMENT_TARGET = ${MIN_VERSION}\n-\n-  QMAKE_MAC_SDK=macosx\n-  QMAKE_MAC_SDK.macosx.path = ${SDK}\n-  QMAKE_MAC_SDK.macosx.platform_name = macosx\n-  QMAKE_MAC_SDK_PATH=${SDK}\n-\n-  QMAKE_CFLAGS += -target ${HOST}\n-  QMAKE_OBJECTIVE_CFLAGS += -target ${HOST}\n-  QMAKE_CXXFLAGS += -target ${HOST}\n-\n-  QMAKE_LFLAGS += -target ${HOST}\n-  QMAKE_AR = ${HOST}-ar cq\n-  QMAKE_RANLIB=${HOST}-ranlib\n-  QMAKE_LIBTOOL=${HOST}-libtool\n-  QMAKE_INSTALL_NAME_TOOL=${HOST}-install_name_tool\n-\n-  load(qt_config)\n- \n-  ENDCONF\n-\n-  pushd ${BUILD_DIR}\n-  ./configure -release -opensource -openssl-linked \\\n-  -no-audio-backend  -no-javascript-jit -no-sql-sqlite -no-sql-tds \\\n-  -no-cups -no-iconv -no-dbus -no-gif -no-audio-backend -no-freetype \\\n-  -no-javascript-jit -no-sql-sqlite -no-nis -no-cups -no-iconv -no-pch \\\n-  -no-dbus -no-gif -no-sm -nomake examples -no-feature-style-plastique \\\n-  -no-xcb -no-qml-debug -no-pch -no-nis \\\n-  -no-feature-style-cde -no-feature-style-s60 -no-feature-style-motif \\\n-  -no-feature-style-windowsmobile -no-feature-style-windowsce \\\n-  -no-feature-style-cleanlooks \\\n-  -no-sql-db2 -no-sql-ibase -no-sql-oci -no-sql-tds -no-sql-mysql \\\n-  -no-sql-odbc -no-sql-psql -no-sql-sqlite -no-sql-sqlite2 \\\n-  -skip qtsvg -skip qtwebkit -skip qtwebkit-examples -skip qtserialport \\\n-  -skip qtdeclarative -skip qtmultimedia -skip qtimageformats \\\n-  -skip qtlocation -skip qtsensors -skip qtquick1 -skip qtxmlpatterns \\\n-  -skip qtquickcontrols -skip qtactiveqt -skip qtconnectivity \\\n-  -skip qtwinextras -skip qtscript \\\n-  -prefix ${PREFIX} -bindir ${NATIVEPREFIX}/bin \\\n-  -confirm-license -xplatform macx-clang-linux -v ${INT_LDFLAGS}\n-\n-  # RCC's output is sorted using each file entry's hash as the key. Unfortunately,\n-  # the hash function uses a random seed for each run so the results aren't\n-  # deterministic. This leads to static resources being defined in a random order,\n-  # which in-turn means that object files are not predictable.\n-  # Fortunately, this upsets Qt's unit tests as well, so they've added the\n-  # QT_RCC_TEST environment variable to set a pre-defined seed. Here, do the same\n-  # thing for the same reason.\n-  QT_RCC_TEST=1 make $MAKEOPTS module-qtbase-make_first\n-\n-\n-  make $MAKEOPTS module-qttranslations-make_first\n-  make $MAKEOPTS module-qttools-make_first\n-  make $MAKEOPTS -C qtbase\n-  make -C qtbase install\n-  make -C qttranslations install\n-  make -C qttools/src/linguist install\n-  popd\n-\n-  # This file should not be installed to the destination. It's native and\n-  # non-deterministic. Remove it.\n-  # See: https://bugreports.qt-project.org/browse/QTBUG-31393\n-  rm -f ${PREFIX}/lib/libQt5Bootstrap.a\n-\n-  rm -f ${PREFIX}/lib/Qt*.framework/Qt*.prl\n-  pushd ${PREFIX}/include\n-  ln -sf ../lib/QtNetwork.framework/Headers/ QtNetwork\n-  ln -sf ../lib/QtWidgets.framework/Headers/ QtWidgets\n-  ln -sf ../lib/QtGui.framework/Headers/ QtGui\n-  ln -sf ../lib/QtCore.framework/Headers/ QtCore\n-  ln -sf ../lib/QtTest.framework/Headers/ QtTest\n-  popd\n-\n-  rm -f ${PREFIX}/lib/*.la\n-  find ${PREFIX}/lib -name \"*.prl\" -delete\n-\n-  export GZIP=\"-9n\"\n-  find native-prefix prefix | sort | tar --no-recursion -czf osx-depends-qt-5.2.1-${REVISION}.tar.gz -T -\n-\n-  mv osx-depends-qt-5.2.1-${REVISION}.tar.gz $OUTDIR"
      },
      {
        "sha": "5c230e80b16ebe8ae080148f58eb74cc7d1a6e31",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "added",
        "additions": 104,
        "deletions": 0,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1aead42d41178d0eeeae2c1b7d0131af9d6fffd2/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1aead42d41178d0eeeae2c1b7d0131af9d6fffd2/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=1aead42d41178d0eeeae2c1b7d0131af9d6fffd2",
        "patch": "@@ -0,0 +1,104 @@\n+---\n+name: \"bitcoin-osx-0.10\"\n+enable_cache: true\n+suites:\n+- \"precise\"\n+architectures:\n+- \"amd64\"\n+packages: \n+- \"g++-multilib\"\n+- \"git-core\"\n+- \"pkg-config\"\n+- \"autoconf2.13\"\n+- \"libtool\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"cmake\"\n+- \"libcap-dev\"\n+- \"libz-dev\"\n+- \"libbz2-dev\"\n+reference_datetime: \"2013-06-01 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files:\n+- \"MacOSX10.7.sdk.tar.gz\"\n+script: |\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"x86_64-apple-darwin11\"\n+  CONFIGFLAGS=\"--enable-upnp-default GENISOIMAGE=$WRAP_DIR/genisoimage\"\n+  FAKETIME_HOST_PROGS=\"\"\n+  FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n+\n+  export QT_RCC_TEST=1\n+  export GZIP=\"-9n\"\n+  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=`pwd`\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  export ZERO_AR_DATE=1\n+\n+  # Create global faketime wrappers\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+\n+  # Create per-host faketime wrappers\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  cd bitcoin\n+  BASEPREFIX=`pwd`/depends\n+\n+  mkdir -p ${BASEPREFIX}/SDKs\n+  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/MacOSX10.7.sdk.tar.gz\n+\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Create the release tarball using (arbitrarily) the first host\n+  ./autogen.sh\n+  ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n+  make dist\n+  DISTNAME=`echo bitcoin-*.tar.gz`\n+\n+  ORIGPATH=\"$PATH\"\n+  # Extract the release tarball into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    tar --strip-components=1 -xf ../$DISTNAME\n+\n+    ./configure --prefix=${BASEPREFIX}/${i} --bindir=${OUTDIR}/${i}/bin --includedir=${OUTDIR}/${i}/include --libdir=${OUTDIR}/${i}/lib --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n+    make ${MAKEOPTS}\n+    make install-strip\n+    make deploy\n+    ${WRAP_DIR}/dmg dmg Bitcoin-Qt.dmg ${OUTDIR}/Bitcoin-Qt.dmg\n+    cd ..\n+  done\n+  mkdir -p $OUTDIR/src\n+  mv $DISTNAME $OUTDIR/src"
      },
      {
        "sha": "cf5436352bc22a599d7eeb4a6400f034ffc1fd5f",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 79,
        "deletions": 78,
        "changes": 157,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1aead42d41178d0eeeae2c1b7d0131af9d6fffd2/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1aead42d41178d0eeeae2c1b7d0131af9d6fffd2/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=1aead42d41178d0eeeae2c1b7d0131af9d6fffd2",
        "patch": "@@ -1,97 +1,98 @@\n ---\n-name: \"bitcoin\"\n+name: \"bitcoin-win-0.10\"\n+enable_cache: true\n suites:\n - \"precise\"\n architectures:\n - \"amd64\"\n-packages:\n-- \"mingw-w64\"\n-- \"g++-mingw-w64\"\n+packages: \n+- \"g++\"\n - \"git-core\"\n-- \"unzip\"\n-- \"nsis\"\n-- \"faketime\"\n+- \"pkg-config\"\n - \"autoconf2.13\"\n - \"libtool\"\n - \"automake\"\n-- \"pkg-config\"\n+- \"faketime\"\n - \"bsdmainutils\"\n-\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n+- \"nsis\"\n reference_datetime: \"2013-06-01 00:00:00\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n-files:\n-- \"qt-win32-5.2.0-gitian-r3.zip\"\n-- \"qt-win64-5.2.0-gitian-r3.zip\"\n-- \"boost-win32-1.55.0-gitian-r6.zip\"\n-- \"boost-win64-1.55.0-gitian-r6.zip\"\n-- \"bitcoin-deps-win32-gitian-r13.zip\"\n-- \"bitcoin-deps-win64-gitian-r13.zip\"\n-- \"protobuf-win32-2.5.0-gitian-r4.zip\"\n-- \"protobuf-win64-2.5.0-gitian-r4.zip\"\n+files: []\n script: |\n-  # Defines\n-  export TZ=UTC\n-  INDIR=$HOME/build\n-  OPTFLAGS='-O2'\n-  TEMPDIR=\"$HOME/tempdir\"\n-  NEEDDIST=1\n-  # Qt: workaround for determinism in resource ordering\n-  #  Qt5's rcc uses a QHash to store the files for the resource.\n-  #  A security fix in QHash makes the ordering of keys to be different on every run\n-  #  (https://qt.gitorious.org/qt/qtbase/commit/c01eaa438200edc9a3bbcd8ae1e8ded058bea268).\n-  #  This is good in general but qrc shouldn't be doing a traversal over a randomized container.\n-  #  The thorough solution would be to use QMap instead of QHash, but this requires patching Qt.\n-  #  For now luckily there is a test mode that forces a fixed seed.\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"x86_64-w64-mingw32 i686-w64-mingw32\"\n+  CONFIGFLAGS=\"--enable-upnp-default\"\n+  FAKETIME_HOST_PROGS=\"g++ ar ranlib nm windres strip\"\n+  FAKETIME_PROGS=\"date makensis\"\n+\n   export QT_RCC_TEST=1\n-  for BITS in 32 64; do # for architectures\n-    #\n-    STAGING=$HOME/staging${BITS}\n-    BUILDDIR=$HOME/build${BITS}\n-    BINDIR=$OUTDIR/$BITS\n-    if [ \"x$BITS\" = \"x32\" ]; then\n-      HOST=i686-w64-mingw32\n-    else\n-      HOST=x86_64-w64-mingw32\n-    fi\n-    export PATH=$STAGING/host/bin:$PATH\n-    mkdir -p $STAGING $BUILDDIR $BINDIR\n-    #\n-    cd $STAGING\n-    unzip $INDIR/qt-win${BITS}-5.2.0-gitian-r3.zip\n-    unzip $INDIR/boost-win${BITS}-1.55.0-gitian-r6.zip\n-    unzip $INDIR/bitcoin-deps-win${BITS}-gitian-r13.zip\n-    unzip $INDIR/protobuf-win${BITS}-2.5.0-gitian-r4.zip\n-    if [ \"x$NEEDDIST\" = \"x1\" ]; then\n-      # Make source code archive which is architecture independent so it only needs to be done once\n-      cd $HOME/build/bitcoin\n-      ./autogen.sh\n-      ./configure --bindir=$OUTDIR --prefix=$STAGING --host=$HOST --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n-      make dist\n-      DISTNAME=`echo bitcoin-*.tar.gz`\n-      NEEDDIST=0\n-    fi\n-    # Build platform-dependent executables from source archive\n-    cd $BUILDDIR\n-    mkdir -p distsrc\n-    cd distsrc\n-    tar --strip-components=1 -xf $HOME/build/bitcoin/$DISTNAME\n-    ./configure --enable-upnp-default --bindir=$BINDIR --prefix=$STAGING --host=$HOST --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n-    export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-    export FAKETIME=$REFERENCE_DATETIME\n-    make $MAKEOPTS\n+  export GZIP=\"-9n\"\n+  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=`pwd`\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  # Create global faketime wrappers\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+\n+  # Create per-host faketime wrappers\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  cd bitcoin\n+  BASEPREFIX=`pwd`/depends\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Create the release tarball using (arbitrarily) the first host\n+  ./autogen.sh\n+  ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n+  make dist\n+  DISTNAME=`echo bitcoin-*.tar.gz`\n+\n+  ORIGPATH=\"$PATH\"\n+  # Extract the release tarball into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    tar --strip-components=1 -xf ../$DISTNAME\n+\n+    ./configure --prefix=${BASEPREFIX}/${i} --bindir=${OUTDIR}/${i}/bin --includedir=${OUTDIR}/${i}/include --libdir=${OUTDIR}/${i}/lib --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n+    make ${MAKEOPTS}\n     make deploy\n     make install-strip\n-    cp -f bitcoin-*setup*.exe $BINDIR/\n-    unset LD_PRELOAD\n-    unset FAKETIME\n-  done # for BITS in\n-\n-  # sort distribution tar file and normalize user/group/mtime information for deterministic output\n+    cp -f bitcoin-*setup*.exe $OUTDIR/\n+    cd ..\n+  done\n   mkdir -p $OUTDIR/src\n-  rm -rf $TEMPDIR\n-  mkdir -p $TEMPDIR\n-  cd $TEMPDIR\n-  tar -xvf $HOME/build/bitcoin/$DISTNAME | sort | tar --no-recursion -cT /dev/stdin --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 --mtime=\"$REFERENCE_DATETIME\" | gzip -n > $OUTDIR/src/$DISTNAME\n-\n+  mv $DISTNAME $OUTDIR/src\n+  mv ${OUTDIR}/x86_64-* ${OUTDIR}/64\n+  mv ${OUTDIR}/i686-* ${OUTDIR}/32"
      },
      {
        "sha": "1b7af08843df5b8ce7790e749d4f18b6fc36c6e8",
        "filename": "contrib/gitian-descriptors/protobuf-win.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/protobuf-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/protobuf-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/protobuf-win.yml?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -1,65 +0,0 @@\n----\n-name: \"protobuf-win32\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"mingw-w64\"\n-- \"g++-mingw-w64\"\n-- \"zip\"\n-- \"faketime\"\n-reference_datetime: \"2013-04-15 00:00:00\"\n-remotes: []\n-files:\n-- \"protobuf-2.5.0.tar.bz2\"\n-script: |\n-  #\n-  export TZ=UTC\n-  INDIR=$HOME/build\n-  TEMPDIR=$HOME/tmp\n-  OPTFLAGS=\"-O2\"\n-  # Integrity Check\n-  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n-\n-  for BITS in 32 64; do # for architectures\n-    #\n-    INSTALLPREFIX=$HOME/staging${BITS}\n-    BUILDDIR=$HOME/build${BITS}\n-    if [ \"x$BITS\" = \"x32\" ]; then\n-      HOST=i686-w64-mingw32\n-    else\n-      HOST=x86_64-w64-mingw32\n-    fi\n-    #\n-    mkdir -p $INSTALLPREFIX $BUILDDIR\n-    cd $BUILDDIR\n-    #\n-    tar xjf $INDIR/protobuf-2.5.0.tar.bz2\n-    cd protobuf-2.5.0\n-    # First: build a native (linux) protoc\n-    ./configure --enable-shared=no --disable-dependency-tracking --without-zlib CXXFLAGS=\"-frandom-seed=11 ${OPTFLAGS}\"\n-    make\n-    mkdir -p $INSTALLPREFIX/host/bin\n-    cp src/protoc $INSTALLPREFIX/host/bin\n-    # Now recompile with the mingw cross-compiler:\n-    make distclean\n-    ./configure --prefix=$INSTALLPREFIX --enable-shared=no --disable-dependency-tracking --without-zlib --with-protoc=$INSTALLPREFIX/host/bin/protoc --host=$HOST CXXFLAGS=\"-frandom-seed=11 ${OPTFLAGS}\"\n-    export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-    export FAKETIME=$REFERENCE_DATETIME\n-    make\n-    make install\n-    # post-process all generated libraries to be deterministic\n-    # extract them to a temporary directory then re-build them deterministically\n-    for LIB in $(find $INSTALLPREFIX -name \\*.a); do\n-        rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n-        $HOST-ar xv $LIB | cut -b5- > /tmp/list.txt\n-        rm $LIB\n-        $HOST-ar crsD $LIB $(cat /tmp/list.txt)\n-    done\n-    #\n-    cd $INSTALLPREFIX\n-    find include lib host | sort | zip -X@ $OUTDIR/protobuf-win$BITS-2.5.0-gitian-r4.zip\n-    unset LD_PRELOAD\n-    unset FAKETIME\n-  done # for BITS in"
      },
      {
        "sha": "fd86b4df1dceb6815fd9d61f329b6a779e80108f",
        "filename": "contrib/gitian-descriptors/qt-linux.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 264,
        "changes": 264,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/qt-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/qt-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-linux.yml?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -1,264 +0,0 @@\n----\n-name: \"qt-linux\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"i386\"\n-- \"amd64\"\n-packages:\n-- \"zip\"\n-- \"unzip\"\n-- \"faketime\"\n-- \"unzip\"\n-- \"libxext-dev\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes: []\n-files:\n-- \"qt-everywhere-opensource-src-4.6.4.tar.gz\"\n-script: |\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  if [ \"x$GBUILD_BITS\" = \"x32\" ]; then\n-    ARCH='i386-linux-gnu'\n-  else\n-    ARCH='x86_64-linux-gnu'\n-  fi\n-  # The purpose of this gitian build is not to actually build Qt, but to export\n-  # the headers as well as pkgconfig files in a useable format so that we can\n-  # pretend to link against an older version. The goal is to link to the\n-  # system version of Qt 4.\n-  # Also build development tools.\n-  INSTALLPREFIX=\"$HOME/install\"\n-  # Integrity Check\n-  echo \"9ad4d46c721b53a429ed5a2eecfd3c239a9ab566562f183f99d3125f1a234250  qt-everywhere-opensource-src-4.6.4.tar.gz\" | sha256sum -c\n-  # Make install directories\n-  mkdir -p $INSTALLPREFIX\n-  mkdir -p $INSTALLPREFIX/include\n-  PKGCONFIGDIR=$INSTALLPREFIX/lib/pkgconfig\n-  mkdir -p $PKGCONFIGDIR\n-  #\n-  tar xzf qt-everywhere-opensource-src-4.6.4.tar.gz\n-  cd qt-everywhere-opensource-src-4.6.4\n-  QTBUILDDIR=$(pwd)\n-  sed 's/TODAY=`date +%Y-%m-%d`/TODAY=2011-01-30/' -i configure\n-\n-  # Need to build 4.6-versioned host utilities as well (lrelease/qrc/lupdate/...)\n-  ./configure -prefix $INSTALLPREFIX -confirm-license -release -opensource -no-qt3support -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit -no-webkit -no-svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -no-opengl -nomake examples -nomake demos -nomake docs\n-  #\n-  make $MAKEOPTS -C src/tools install  # (rcc, uic, moc)\n-  make $MAKEOPTS -C tools/linguist/lrelease install  # (lrelease)\n-  # install includes and pkgconfig files\n-  for DIR in src/corelib src/gui src/testlib src/dbus src/network; do\n-    (\n-    cd $DIR\n-    # extract module (QtCore/QtNetwork/...) from Makefile\n-    MODULE=$(grep \"QMAKE_TARGET *=\" Makefile | cut -d = -f 2 | xargs)\n-    # patch makefile so that not everything is build first\n-    sed -i 's/first: all/first:/g' Makefile\n-    make install_flat_headers install_class_headers install_targ_headers\n-    # create and install pkgconfig descriptor\n-    make ../../lib/pkgconfig/$MODULE.pc\n-    sed -e \"s,$QTBUILDDIR,$INSTALLPREFIX,g\" ../../lib/pkgconfig/$MODULE.pc > $PKGCONFIGDIR/$MODULE.pc\n-    # create links to existing Qt libraries\n-    ln -sf /usr/lib/${ARCH}/lib${MODULE}.so.4 ${INSTALLPREFIX}/lib/lib${MODULE}.so\n-    )\n-  done\n-\n-  # Write our own configuration header, same as Ubuntu\n-  # When we don't do this, the configuration will be without STL support (the QString from/to stdString methods)\n-  QCONFIG=$INSTALLPREFIX/include/Qt/qconfig.h\n-  echo '\n-  /* Qt Edition */\n-  #ifndef QT_EDITION\n-  #  define QT_EDITION QT_EDITION_OPENSOURCE\n-  #endif\n-  ' > $QCONFIG\n-\n-  if [ \"x$GBUILD_BITS\" = \"x32\" ]; then\n-    echo '\n-  /* Machine byte-order */\n-  #define Q_BIG_ENDIAN 4321\n-  #define Q_LITTLE_ENDIAN 1234\n-  #define QT_BUILD_KEY \"i386 linux g++-4 full-config\"\n-  #define QT_BUILD_KEY_COMPAT \"i686 Linux g++-4 full-config\"\n-\n-  #ifdef QT_BOOTSTRAPPED\n-  #define Q_BYTE_ORDER Q_LITTLE_ENDIAN\n-  #else\n-  #define Q_BYTE_ORDER Q_LITTLE_ENDIAN\n-  #endif\n-  /* Machine Architecture */\n-  #ifndef QT_BOOTSTRAPPED\n-  # define QT_ARCH_I386\n-  #else\n-  # define QT_ARCH_I386\n-  #endif\n-  /* Compile time features */\n-  #define QT_LARGEFILE_SUPPORT 64\n-  #define QT_POINTER_SIZE 4\n-  ' >> $QCONFIG\n-  else\n-    echo '\n-  /* Machine byte-order */\n-  #define Q_BIG_ENDIAN 4321\n-  #define Q_LITTLE_ENDIAN 1234\n-  #define QT_BUILD_KEY \"x86_64 linux g++-4 full-config\"\n-  #define QT_BUILD_KEY_COMPAT \"x86_64 Linux g++-4 full-config\"\n-\n-  #ifdef QT_BOOTSTRAPPED\n-  #define Q_BYTE_ORDER Q_LITTLE_ENDIAN\n-  #else\n-  #define Q_BYTE_ORDER Q_LITTLE_ENDIAN\n-  #endif\n-  /* Machine Architecture */\n-  #ifndef QT_BOOTSTRAPPED\n-  # define QT_ARCH_X86_64\n-  #else\n-  # define QT_ARCH_X86_64\n-  #endif\n-  /* Compile time features */\n-  #define QT_LARGEFILE_SUPPORT 64\n-  #define QT_POINTER_SIZE 8\n-  ' >> $QCONFIG\n-  fi\n-\n-  echo '\n-  #ifndef QT_BOOTSTRAPPED\n-\n-  #if defined(QT_NO_EGL) && defined(QT_EGL)\n-  # undef QT_NO_EGL\n-  #elif !defined(QT_NO_EGL) && !defined(QT_EGL)\n-  # define QT_NO_EGL\n-  #endif\n-\n-  #if defined(QT_NO_GSTREAMER) && defined(QT_GSTREAMER)\n-  # undef QT_NO_GSTREAMER\n-  #elif !defined(QT_NO_GSTREAMER) && !defined(QT_GSTREAMER)\n-  # define QT_NO_GSTREAMER\n-  #endif\n-\n-  #if defined(QT_NO_ICD) && defined(QT_ICD)\n-  # undef QT_NO_ICD\n-  #elif !defined(QT_NO_ICD) && !defined(QT_ICD)\n-  # define QT_NO_ICD\n-  #endif\n-\n-  #if defined(QT_NO_IMAGEFORMAT_JPEG) && defined(QT_IMAGEFORMAT_JPEG)\n-  # undef QT_NO_IMAGEFORMAT_JPEG\n-  #elif !defined(QT_NO_IMAGEFORMAT_JPEG) && !defined(QT_IMAGEFORMAT_JPEG)\n-  # define QT_NO_IMAGEFORMAT_JPEG\n-  #endif\n-\n-  #if defined(QT_NO_IMAGEFORMAT_MNG) && defined(QT_IMAGEFORMAT_MNG)\n-  # undef QT_NO_IMAGEFORMAT_MNG\n-  #elif !defined(QT_NO_IMAGEFORMAT_MNG) && !defined(QT_IMAGEFORMAT_MNG)\n-  # define QT_NO_IMAGEFORMAT_MNG\n-  #endif\n-\n-  #if defined(QT_NO_IMAGEFORMAT_TIFF) && defined(QT_IMAGEFORMAT_TIFF)\n-  # undef QT_NO_IMAGEFORMAT_TIFF\n-  #elif !defined(QT_NO_IMAGEFORMAT_TIFF) && !defined(QT_IMAGEFORMAT_TIFF)\n-  # define QT_NO_IMAGEFORMAT_TIFF\n-  #endif\n-\n-  #if defined(QT_NO_MULTIMEDIA) && defined(QT_MULTIMEDIA)\n-  # undef QT_NO_MULTIMEDIA\n-  #elif !defined(QT_NO_MULTIMEDIA) && !defined(QT_MULTIMEDIA)\n-  # define QT_NO_MULTIMEDIA\n-  #endif\n-\n-  #if defined(QT_NO_OPENVG) && defined(QT_OPENVG)\n-  # undef QT_NO_OPENVG\n-  #elif !defined(QT_NO_OPENVG) && !defined(QT_OPENVG)\n-  # define QT_NO_OPENVG\n-  #endif\n-\n-  #if defined(QT_NO_PHONON) && defined(QT_PHONON)\n-  # undef QT_NO_PHONON\n-  #elif !defined(QT_NO_PHONON) && !defined(QT_PHONON)\n-  # define QT_NO_PHONON\n-  #endif\n-\n-  #if defined(QT_NO_PULSEAUDIO) && defined(QT_PULSEAUDIO)\n-  # undef QT_NO_PULSEAUDIO\n-  #elif !defined(QT_NO_PULSEAUDIO) && !defined(QT_PULSEAUDIO)\n-  # define QT_NO_PULSEAUDIO\n-  #endif\n-\n-  #if defined(QT_NO_S60) && defined(QT_S60)\n-  # undef QT_NO_S60\n-  #elif !defined(QT_NO_S60) && !defined(QT_S60)\n-  # define QT_NO_S60\n-  #endif\n-\n-  #if defined(QT_NO_STYLE_S60) && defined(QT_STYLE_S60)\n-  # undef QT_NO_STYLE_S60\n-  #elif !defined(QT_NO_STYLE_S60) && !defined(QT_STYLE_S60)\n-  # define QT_NO_STYLE_S60\n-  #endif\n-\n-  #if defined(QT_NO_SXE) && defined(QT_SXE)\n-  # undef QT_NO_SXE\n-  #elif !defined(QT_NO_SXE) && !defined(QT_SXE)\n-  # define QT_NO_SXE\n-  #endif\n-\n-  #if defined(QT_NO_WEBKIT) && defined(QT_WEBKIT)\n-  # undef QT_NO_WEBKIT\n-  #elif !defined(QT_NO_WEBKIT) && !defined(QT_WEBKIT)\n-  # define QT_NO_WEBKIT\n-  #endif\n-\n-  #if defined(QT_NO_ZLIB) && defined(QT_ZLIB)\n-  # undef QT_NO_ZLIB\n-  #elif !defined(QT_NO_ZLIB) && !defined(QT_ZLIB)\n-  # define QT_NO_ZLIB\n-  #endif\n-\n-  #if defined(QT_RUNTIME_XCURSOR) && defined(QT_NO_RUNTIME_XCURSOR)\n-  # undef QT_RUNTIME_XCURSOR\n-  #elif !defined(QT_RUNTIME_XCURSOR) && !defined(QT_NO_RUNTIME_XCURSOR)\n-  # define QT_RUNTIME_XCURSOR\n-  #endif\n-\n-  #if defined(QT_RUNTIME_XFIXES) && defined(QT_NO_RUNTIME_XFIXES)\n-  # undef QT_RUNTIME_XFIXES\n-  #elif !defined(QT_RUNTIME_XFIXES) && !defined(QT_NO_RUNTIME_XFIXES)\n-  # define QT_RUNTIME_XFIXES\n-  #endif\n-\n-  #if defined(QT_RUNTIME_XINERAMA) && defined(QT_NO_RUNTIME_XINERAMA)\n-  # undef QT_RUNTIME_XINERAMA\n-  #elif !defined(QT_RUNTIME_XINERAMA) && !defined(QT_NO_RUNTIME_XINERAMA)\n-  # define QT_RUNTIME_XINERAMA\n-  #endif\n-\n-  #if defined(QT_RUNTIME_XINPUT) && defined(QT_NO_RUNTIME_XINPUT)\n-  # undef QT_RUNTIME_XINPUT\n-  #elif !defined(QT_RUNTIME_XINPUT) && !defined(QT_NO_RUNTIME_XINPUT)\n-  # define QT_RUNTIME_XINPUT\n-  #endif\n-\n-  #if defined(QT_RUNTIME_XRANDR) && defined(QT_NO_RUNTIME_XRANDR)\n-  # undef QT_RUNTIME_XRANDR\n-  #elif !defined(QT_RUNTIME_XRANDR) && !defined(QT_NO_RUNTIME_XRANDR)\n-  # define QT_RUNTIME_XRANDR\n-  #endif\n-\n-  #if defined(QT_USE_MATH_H_FLOATS) && defined(QT_NO_USE_MATH_H_FLOATS)\n-  # undef QT_USE_MATH_H_FLOATS\n-  #elif !defined(QT_USE_MATH_H_FLOATS) && !defined(QT_NO_USE_MATH_H_FLOATS)\n-  # define QT_USE_MATH_H_FLOATS\n-  #endif\n-\n-  #endif // QT_BOOTSTRAPPED\n-\n-  #define QT_VISIBILITY_AVAILABLE\n-  ' >> $QCONFIG\n-  cp $QCONFIG $INSTALLPREFIX/include/QtCore/qconfig.h\n-\n-  cd $INSTALLPREFIX\n-  # as zip stores file timestamps, use faketime to intercept stat calls to set dates for all files to reference date\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  # Create a .tar.gz because .zip has problems with symbolic links\n-  find | sort | tar --no-recursion -cT /dev/stdin --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 --mtime=\"$REFERENCE_DATETIME\" | gzip -n > $OUTDIR/qt-linux${GBUILD_BITS}-4.6.4-gitian-r1.tar.gz"
      },
      {
        "sha": "57bc4c31804926f5c5ae120c4e41fefb8c8220b7",
        "filename": "contrib/gitian-descriptors/qt-win.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 92,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/qt-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f93ec202810c1bc082f181fbfe6af4438b395fe/contrib/gitian-descriptors/qt-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-win.yml?ref=5f93ec202810c1bc082f181fbfe6af4438b395fe",
        "patch": "@@ -1,92 +0,0 @@\n----\n-name: \"qt\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"amd64\"\n-packages: \n-- \"mingw-w64\"\n-- \"g++-mingw-w64\"\n-- \"zip\"\n-- \"unzip\"\n-- \"faketime\"\n-- \"libz-dev\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes: []\n-files:\n-- \"qt-everywhere-opensource-src-5.2.0.tar.gz\"\n-- \"bitcoin-deps-win32-gitian-r13.zip\"\n-- \"bitcoin-deps-win64-gitian-r13.zip\"\n-script: |\n-  # Defines\n-  export TZ=UTC\n-  INDIR=$HOME/build\n-  TEMPDIR=$HOME/tmp\n-  # Qt: workaround for determinism in resource ordering\n-  #  Qt5's rcc uses a QHash to store the files for the resource.\n-  #  A security fix in QHash makes the ordering of keys to be different on every run\n-  #  (https://qt.gitorious.org/qt/qtbase/commit/c01eaa438200edc9a3bbcd8ae1e8ded058bea268).\n-  #  This is good in general but qrc shouldn't be doing a traversal over a randomized container.\n-  #  The thorough solution would be to use QMap instead of QHash, but this requires patching Qt.\n-  #  For now luckily there is a test mode that forces a fixed seed.\n-  export QT_RCC_TEST=1\n-  # Integrity Check\n-  echo \"395ec72277c5786c65b8163ef5817fd03d0a1f524a6d47f53624baf8056f1081  qt-everywhere-opensource-src-5.2.0.tar.gz\" | sha256sum -c\n-\n-  for BITS in 32 64; do # for architectures\n-    #\n-    INSTALLPREFIX=$HOME/staging${BITS}\n-    BUILDDIR=$HOME/build${BITS}\n-    DEPSDIR=$HOME/deps${BITS}\n-    if [ \"x$BITS\" = \"x32\" ]; then\n-      HOST=i686-w64-mingw32\n-    else\n-      HOST=x86_64-w64-mingw32\n-    fi\n-    #\n-    mkdir -p $INSTALLPREFIX $INSTALLPREFIX/host/bin $DEPSDIR $BUILDDIR\n-    #\n-    # Need mingw-compiled openssl from bitcoin-deps:\n-    cd $DEPSDIR\n-    unzip $INDIR/bitcoin-deps-win${BITS}-gitian-r13.zip\n-    #\n-    cd $BUILDDIR\n-    #\n-    tar xzf $INDIR/qt-everywhere-opensource-src-5.2.0.tar.gz\n-    cd qt-everywhere-opensource-src-5.2.0\n-    SPECNAME=\"win32-g++\"\n-    SPECFILE=\"qtbase/mkspecs/${SPECNAME}/qmake.conf\"\n-    sed 's/qt_instdate=`date +%Y-%m-%d`/qt_instdate=2011-01-30/' -i qtbase/configure\n-    sed --posix \"s|QMAKE_CFLAGS            = -pipe -fno-keep-inline-dllexport|QMAKE_CFLAGS\\t\\t= -pipe -fno-keep-inline-dllexport -isystem /usr/$HOST/include/ -frandom-seed=qtbuild -I$DEPSDIR/include|\" -i ${SPECFILE}\n-    sed --posix \"s|QMAKE_LFLAGS            =|QMAKE_LFLAGS\\t\\t= -L$DEPSDIR/lib|\" -i ${SPECFILE}\n-    # Before we tried to pass arguments to ar (static linking) in using QMAKE_LIB, however\n-    #  qt removes the arguments for ar and provides a script which makes it impossible to pass the determinism flag -\n-    #  so rather than try to replace ar, post-process all libraries and plugins at the end.\n-    #\n-    # Don't load faketime while compiling Qt, qmake will get stuck in nearly infinite loops\n-    #export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-    #export FAKETIME=$REFERENCE_DATETIME\n-    #\n-    # Compile static libraries, and use statically linked openssl (-openssl-linked):\n-    OPENSSL_LIBS=\"-L$DEPSDIR/lib -lssl -lcrypto -lgdi32\" ./configure -prefix $INSTALLPREFIX -bindir $INSTALLPREFIX/host/bin -confirm-license -release -opensource -static -xplatform $SPECNAME -device-option CROSS_COMPILE=\"$HOST-\" -no-audio-backend -no-javascript-jit -no-sql-sqlite -no-sql-odbc -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-opengl -no-compile-examples -no-feature-style-windowsce -no-feature-style-windowsmobile -no-qml-debug -openssl-linked -skip qtsvg -skip qtwebkit -skip qtwebkit-examples -skip qtserialport -skip qtdeclarative -skip qtmultimedia -skip qtimageformats -skip qtlocation -skip qtsensors -skip qtquick1 -skip qtquickcontrols -skip qtactiveqt -skip qtconnectivity -skip qtwinextras -skip qtxmlpatterns -skip qtscript -skip qtdoc -system-libpng -system-zlib\n-    make $MAKEOPTS install\n-    # post-process all generated libraries and plugins to be deterministic\n-    # extract them to a temporary directory then re-build them deterministically\n-    for LIB in $(find $INSTALLPREFIX -name *.a); do\n-        rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n-        $HOST-ar xv $LIB | cut -b5- > /tmp/list.txt\n-        rm $LIB\n-        $HOST-ar crsD $LIB $(cat /tmp/list.txt)\n-    done\n-    #\n-    cd $INSTALLPREFIX\n-    # Remove unused non-deterministic stuff\n-    rm host/bin/qtpaths.exe lib/libQt5Bootstrap.a lib/libQt5Bootstrap.la\n-    # as zip stores file timestamps, use faketime to intercept stat calls to set dates for all files to reference date\n-    export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-    export FAKETIME=$REFERENCE_DATETIME\n-    find -print0 | xargs -r0 touch # fix up timestamps before packaging\n-    find | sort | zip -X@ $OUTDIR/qt-win${BITS}-5.2.0-gitian-r3.zip\n-    unset LD_PRELOAD\n-    unset FAKETIME\n-  done # for BITS in"
      },
      {
        "sha": "8fb30a5c4471cfe1b4204c4507a103d37ba5a067",
        "filename": "depends/packages/qt46.mk",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1aead42d41178d0eeeae2c1b7d0131af9d6fffd2/depends/packages/qt46.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1aead42d41178d0eeeae2c1b7d0131af9d6fffd2/depends/packages/qt46.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt46.mk?ref=1aead42d41178d0eeeae2c1b7d0131af9d6fffd2",
        "patch": "@@ -1,10 +1,9 @@\n PACKAGE=qt46\n-$(package)_version=4.6.2\n+$(package)_version=4.6.4\n $(package)_download_path=http://download.qt-project.org/archive/qt/4.6/\n $(package)_file_name=qt-everywhere-opensource-src-$($(package)_version).tar.gz\n-$(package)_sha256_hash=176f51ddb06dce67ab4b2efc6b327dc21ed8f764c5d97acc15ff1f907c2affae\n-$(package)_dependencies=openssl\n-$(package)_linux_dependencies=freetype dbus libX11 xproto libXext libICE libSM\n+$(package)_sha256_hash=9ad4d46c721b53a429ed5a2eecfd3c239a9ab566562f183f99d3125f1a234250\n+$(package)_dependencies=openssl freetype dbus libX11 xproto libXext libICE libSM\n $(package)_patches=stlfix.patch \n \n define $(package)_set_vars\n@@ -35,7 +34,7 @@ define $(package)_preprocess_cmds\n    sed -i.old \"s|/usr/X11R6/lib64|$(host_prefix)/lib|\" mkspecs/*/*.conf && \\\n    sed -i.old \"s|/usr/X11R6/lib|$(host_prefix)/lib|\" mkspecs/*/*.conf && \\\n    sed -i.old \"s|/usr/X11R6/include|$(host_prefix)/include|\" mkspecs/*/*.conf && \\\n-   sed -i.old \"s|QMAKE_LFLAGS_SHLIB  += -shared|QMAKE_LFLAGS_SHLIB  += -shared -Wl,--exclude-libs,ALL|\" mkspecs/common/g++.conf && \\\n+   sed -i.old \"s|QMAKE_LFLAGS_SHLIB\\t+= -shared|QMAKE_LFLAGS_SHLIB\\t+= -shared -Wl,--exclude-libs,ALL|\" mkspecs/common/g++.conf && \\\n    sed -i.old \"/SSLv2_client_method/d\" src/network/ssl/qsslsocket_openssl.cpp src/network/ssl/qsslsocket_openssl_symbols.cpp && \\\n    sed -i.old \"/SSLv2_server_method/d\" src/network/ssl/qsslsocket_openssl.cpp src/network/ssl/qsslsocket_openssl_symbols.cpp && \\\n    patch -p1 < $($(package)_patch_dir)/stlfix.patch \n@@ -62,6 +61,6 @@ define $(package)_stage_cmds\n endef\n \n define $(package)_postprocess_cmds\n-  rm -rf mkspecs/ lib/cmake/ && \\\n+  rm -rf mkspecs/ lib/cmake/ lib/*.prl lib/*.la && \\\n   find native/bin -type f -exec mv {} {}-qt4 \\;\n endef"
      }
    ]
  },
  {
    "sha": "4bbbdf3244e9a71e48a615a36e34de6dc0f85030",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YmJiZGYzMjQ0ZTlhNzFlNDhhNjE1YTM2ZTM0ZGU2ZGMwZjg1MDMw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-08-12T23:24:05Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:49:41Z"
      },
      "message": "gitian: quick docs update",
      "tree": {
        "sha": "491194986bb00b5d75ceff09721855f6a0dea18c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/491194986bb00b5d75ceff09721855f6a0dea18c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4bbbdf3244e9a71e48a615a36e34de6dc0f85030",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bbbdf3244e9a71e48a615a36e34de6dc0f85030",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4bbbdf3244e9a71e48a615a36e34de6dc0f85030",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bbbdf3244e9a71e48a615a36e34de6dc0f85030/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1aead42d41178d0eeeae2c1b7d0131af9d6fffd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1aead42d41178d0eeeae2c1b7d0131af9d6fffd2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1aead42d41178d0eeeae2c1b7d0131af9d6fffd2"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 6,
      "deletions": 68
    },
    "files": [
      {
        "sha": "061b897d2a2c54390bc6c1ddf0fa2310c748d537",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bbbdf3244e9a71e48a615a36e34de6dc0f85030/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bbbdf3244e9a71e48a615a36e34de6dc0f85030/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=4bbbdf3244e9a71e48a615a36e34de6dc0f85030",
        "patch": "@@ -27,7 +27,6 @@ Once you've got the right hardware and software:\n \n     # Create base images\n     cd gitian-builder\n-    bin/make-base-vm --suite precise --arch i386\n     bin/make-base-vm --suite precise --arch amd64\n     cd ..\n "
      },
      {
        "sha": "c6a7266ef1f9f62bfe6d963bc6bef3e48891fb3f",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 6,
        "deletions": 67,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bbbdf3244e9a71e48a615a36e34de6dc0f85030/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bbbdf3244e9a71e48a615a36e34de6dc0f85030/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=4bbbdf3244e9a71e48a615a36e34de6dc0f85030",
        "patch": "@@ -23,6 +23,10 @@ Release Process\n \n * * *\n \n+###update gitian\n+\n+ In order to take advantage of the new caching features in gitian, be sure to update to a recent version (e9741525c or higher is recommended)\n+\n ###perform gitian builds\n \n  From a directory containing the bitcoin source, gitian-builder and gitian.sigs\n@@ -46,71 +50,6 @@ Release Process\n  \n \ttar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.7.sdk.tar.gz MacOSX10.7.sdk\n \n- Download remaining inputs, and build everything:\n- \n-\twget 'http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.9.tar.gz' -O miniupnpc-1.9.tar.gz\n-\twget 'https://www.openssl.org/source/openssl-1.0.1h.tar.gz'\n-\twget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n-\twget 'http://zlib.net/zlib-1.2.8.tar.gz'\n-\twget 'ftp://ftp.simplesystems.org/pub/png/src/history/libpng16/libpng-1.6.8.tar.gz'\n-\twget 'https://fukuchi.org/works/qrencode/qrencode-3.4.3.tar.bz2'\n-\twget 'https://downloads.sourceforge.net/project/boost/boost/1.55.0/boost_1_55_0.tar.bz2'\n-\twget 'https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch' -O boost-mingw-gas-cross-compile-2013-03-03.patch\n-\twget 'https://download.qt-project.org/official_releases/qt/5.2/5.2.0/single/qt-everywhere-opensource-src-5.2.0.tar.gz'\n-\twget 'https://download.qt-project.org/official_releases/qt/5.2/5.2.1/single/qt-everywhere-opensource-src-5.2.1.tar.gz'\n-\twget 'https://download.qt-project.org/archive/qt/4.6/qt-everywhere-opensource-src-4.6.4.tar.gz'\n-\twget 'https://protobuf.googlecode.com/files/protobuf-2.5.0.tar.bz2'\n-\twget 'https://github.com/mingwandroid/toolchain4/archive/10cc648683617cca8bcbeae507888099b41b530c.tar.gz'\n-\twget 'http://www.opensource.apple.com/tarballs/cctools/cctools-809.tar.gz'\n-\twget 'http://www.opensource.apple.com/tarballs/dyld/dyld-195.5.tar.gz'\n-\twget 'http://www.opensource.apple.com/tarballs/ld64/ld64-127.2.tar.gz'\n-\twget 'http://pkgs.fedoraproject.org/repo/pkgs/cdrkit/cdrkit-1.1.11.tar.gz/efe08e2f3ca478486037b053acd512e9/cdrkit-1.1.11.tar.gz'\n-\twget 'https://github.com/theuni/libdmg-hfsplus/archive/libdmg-hfsplus-v0.1.tar.gz'\n-\twget 'http://llvm.org/releases/3.2/clang+llvm-3.2-x86-linux-ubuntu-12.04.tar.gz' -O clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\n-\twget 'https://raw.githubusercontent.com/theuni/osx-cross-depends/master/patches/cdrtools/genisoimage.diff' -O cdrkit-deterministic.patch\n-\tcd ..\n-\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/boost-linux.yml\n-\tmv build/out/boost-*.zip inputs/\n-\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-linux.yml\n-\tmv build/out/bitcoin-deps-*.zip inputs/\n-\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/qt-linux.yml\n-\tmv build/out/qt-*.tar.gz inputs/\n-\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/boost-win.yml\n-\tmv build/out/boost-*.zip inputs/\n-\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-win.yml\n-\tmv build/out/bitcoin-deps-*.zip inputs/\n-\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/qt-win.yml\n-\tmv build/out/qt-*.zip inputs/\n-\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/protobuf-win.yml\n-\tmv build/out/protobuf-*.zip inputs/\n-\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/gitian-osx-native.yml\n-\tmv build/out/osx-*.tar.gz inputs/\n-\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/gitian-osx-depends.yml\n-\tmv build/out/osx-*.tar.gz inputs/\n-\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/gitian-osx-qt.yml\n-\tmv build/out/osx-*.tar.gz inputs/\n-\n- The expected SHA256 hashes of the intermediate inputs are:\n-\n-    f29b7d9577417333fb56e023c2977f5726a7c297f320b175a4108cf7cd4c2d29  boost-linux32-1.55.0-gitian-r1.zip\n-    88232451c4104f7eb16e469ac6474fd1231bd485687253f7b2bdf46c0781d535  boost-linux64-1.55.0-gitian-r1.zip\n-    46710f673467e367738d8806e45b4cb5931aaeea61f4b6b55a68eea56d5006c5  bitcoin-deps-linux32-gitian-r6.zip\n-    f03be39fb26670243d3a659e64d18e19d03dec5c11e9912011107768390b5268  bitcoin-deps-linux64-gitian-r6.zip\n-    57e57dbdadc818cd270e7e00500a5e1085b3bcbdef69a885f0fb7573a8d987e1  qt-linux32-4.6.4-gitian-r1.tar.gz\n-    60eb4b9c5779580b7d66529efa5b2836ba1a70edde2a0f3f696d647906a826be  qt-linux64-4.6.4-gitian-r1.tar.gz\n-    60dc2d3b61e9c7d5dbe2f90d5955772ad748a47918ff2d8b74e8db9b1b91c909  boost-win32-1.55.0-gitian-r6.zip\n-    f65fcaf346bc7b73bc8db3a8614f4f6bee2f61fcbe495e9881133a7c2612a167  boost-win64-1.55.0-gitian-r6.zip\n-    70de248cd0dd7e7476194129e818402e974ca9c5751cbf591644dc9f332d3b59  bitcoin-deps-win32-gitian-r13.zip\n-    9eace4c76f639f4f3580a478eee4f50246e1bbb5ccdcf37a158261a5a3fa3e65  bitcoin-deps-win64-gitian-r13.zip\n-    963e3e5e85879010a91143c90a711a5d1d5aba992e38672cdf7b54e42c56b2f1  qt-win32-5.2.0-gitian-r3.zip\n-    751c579830d173ef3e6f194e83d18b92ebef6df03289db13ab77a52b6bc86ef0  qt-win64-5.2.0-gitian-r3.zip\n-    e2e403e1a08869c7eed4d4293bce13d51ec6a63592918b90ae215a0eceb44cb4  protobuf-win32-2.5.0-gitian-r4.zip\n-    a0999037e8b0ef9ade13efd88fee261ba401f5ca910068b7e0cd3262ba667db0  protobuf-win64-2.5.0-gitian-r4.zip\n-    512bc0622c883e2e0f4cbc3fedfd8c2402d06c004ce6fb32303cc2a6f405b6df  osx-native-depends-r3.tar.gz\n-    927e4b222be6d590b4bc2fc185872a5d0ca5c322adb983764d3ed84be6bdbc81  osx-depends-r4.tar.gz\n-    ec95abef1df2b096a970359787c01d8c45e2a4475b7ae34e12c022634fbdba8a  osx-depends-qt-5.2.1-r4.tar.gz\n-\n-\n  Build Bitcoin Core for Linux, Windows, and OS X:\n   \n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n@@ -125,8 +64,8 @@ Release Process\n \tzip -r bitcoin-${VERSION}-win-gitian.zip *\n \tmv bitcoin-${VERSION}-win-gitian.zip ../../../\n \tpopd\n-        ./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx-bitcoin.yml\n-        ./bin/gsign --signer $SIGNER --release ${VERSION}-osx --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-bitcoin.yml\n+        ./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+        ./bin/gsign --signer $SIGNER --release ${VERSION}-osx --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n \tpushd build/out\n \tmv Bitcoin-Qt.dmg ../../../\n \tpopd"
      }
    ]
  },
  {
    "sha": "c54d647a92c72e44daf886a334250ad1125818e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNTRkNjQ3YTkyYzcyZTQ0ZGFmODg2YTMzNDI1MGFkMTEyNTgxOGU5",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-09-01T20:12:16Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:49:41Z"
      },
      "message": "travis: let travis use shared libs for tests",
      "tree": {
        "sha": "7f632bdaf53f93a8f87b89e76a80afa31130c6a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f632bdaf53f93a8f87b89e76a80afa31130c6a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c54d647a92c72e44daf886a334250ad1125818e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c54d647a92c72e44daf886a334250ad1125818e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c54d647a92c72e44daf886a334250ad1125818e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c54d647a92c72e44daf886a334250ad1125818e9/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4bbbdf3244e9a71e48a615a36e34de6dc0f85030",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bbbdf3244e9a71e48a615a36e34de6dc0f85030",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4bbbdf3244e9a71e48a615a36e34de6dc0f85030"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1630c1d02a4da0addb7a10e020d536a9a5f4bb3e",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c54d647a92c72e44daf886a334250ad1125818e9/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c54d647a92c72e44daf886a334250ad1125818e9/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=c54d647a92c72e44daf886a334250ad1125818e9",
        "patch": "@@ -59,6 +59,7 @@ script:\n     - cd bitcoin-$HOST\n     - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n+    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then make check; fi\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.sh; fi\n after_script:"
      }
    ]
  },
  {
    "sha": "246659aff15885e2289ac774debcef932a25f063",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNDY2NTlhZmYxNTg4NWUyMjg5YWM3NzRkZWJjZWY5MzJhMjVmMDYz",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T02:46:40Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:49:41Z"
      },
      "message": "gitian: make tarballs deterministic and nuke .la files from build output",
      "tree": {
        "sha": "e0734dad4fd37f3b7fb9a5e5c01db5c49fd4defd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e0734dad4fd37f3b7fb9a5e5c01db5c49fd4defd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/246659aff15885e2289ac774debcef932a25f063",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/246659aff15885e2289ac774debcef932a25f063",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/246659aff15885e2289ac774debcef932a25f063",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/246659aff15885e2289ac774debcef932a25f063/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c54d647a92c72e44daf886a334250ad1125818e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c54d647a92c72e44daf886a334250ad1125818e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c54d647a92c72e44daf886a334250ad1125818e9"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 30,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b57a04469c62ecfb7df4a151d4fa407ab5c29e3a",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/246659aff15885e2289ac774debcef932a25f063/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/246659aff15885e2289ac774debcef932a25f063/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=246659aff15885e2289ac774debcef932a25f063",
        "patch": "@@ -75,6 +75,13 @@ script: |\n   make dist\n   DISTNAME=`echo bitcoin-*.tar.gz`\n \n+  # Correct tar file order\n+  mkdir -p temp\n+  pushd temp\n+  tar xf ../$DISTNAME\n+  find bitcoin-* | sort | tar --no-recursion -c -T - | gzip -9n > ../$DISTNAME\n+  popd\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n@@ -92,3 +99,6 @@ script: |\n   mv $DISTNAME $OUTDIR/src\n   mv ${OUTDIR}/x86_64-* ${OUTDIR}/64\n   mv ${OUTDIR}/i686-* ${OUTDIR}/32\n+\n+  # Delete unwanted stuff\n+  find ${OUTDIR} -name \"lib*.la\" -delete"
      },
      {
        "sha": "7ec0700ed3b43c979e2d579db5b42751d051966b",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/246659aff15885e2289ac774debcef932a25f063/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/246659aff15885e2289ac774debcef932a25f063/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=246659aff15885e2289ac774debcef932a25f063",
        "patch": "@@ -85,6 +85,13 @@ script: |\n   make dist\n   DISTNAME=`echo bitcoin-*.tar.gz`\n \n+  # Correct tar file order\n+  mkdir -p temp\n+  pushd temp\n+  tar xf ../$DISTNAME\n+  find bitcoin-* | sort | tar --no-recursion -c -T - | gzip -9n > ../$DISTNAME\n+  popd\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n@@ -102,3 +109,6 @@ script: |\n   done\n   mkdir -p $OUTDIR/src\n   mv $DISTNAME $OUTDIR/src\n+\n+  # Delete unwanted stuff\n+  find ${OUTDIR} -name \"lib*.la\" -delete"
      },
      {
        "sha": "172807467a693373cba4ec204ed812c97c9c7b02",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/246659aff15885e2289ac774debcef932a25f063/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/246659aff15885e2289ac774debcef932a25f063/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=246659aff15885e2289ac774debcef932a25f063",
        "patch": "@@ -77,6 +77,13 @@ script: |\n   make dist\n   DISTNAME=`echo bitcoin-*.tar.gz`\n \n+  # Correct tar file order\n+  mkdir -p temp\n+  pushd temp\n+  tar xf ../$DISTNAME\n+  find bitcoin-* | sort | tar --no-recursion -c -T - | gzip -9n > ../$DISTNAME\n+  popd\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n@@ -96,3 +103,6 @@ script: |\n   mv $DISTNAME $OUTDIR/src\n   mv ${OUTDIR}/x86_64-* ${OUTDIR}/64\n   mv ${OUTDIR}/i686-* ${OUTDIR}/32\n+\n+  # Delete unwanted stuff\n+  find ${OUTDIR} -name \"lib*.la\" -delete"
      }
    ]
  }
]