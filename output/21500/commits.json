[
  {
    "sha": "bb822a7af86897a9b6a5d616f193c258e8e76729",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjgyMmE3YWY4Njg5N2E5YjZhNWQ2MTZmMTkzYzI1OGU4ZTc2NzI5",
    "commit": {
      "author": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2021-06-24T06:35:23Z"
      },
      "committer": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2021-07-10T13:20:52Z"
      },
      "message": "wallet, rpc: add listdescriptors private option",
      "tree": {
        "sha": "ab05012696e41e9dc0e358e81622038379c62cf0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab05012696e41e9dc0e358e81622038379c62cf0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb822a7af86897a9b6a5d616f193c258e8e76729",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb822a7af86897a9b6a5d616f193c258e8e76729",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb822a7af86897a9b6a5d616f193c258e8e76729",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb822a7af86897a9b6a5d616f193c258e8e76729/comments",
    "author": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "088b348dbe82689ce1782653c8fdcebb3b636eb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/088b348dbe82689ce1782653c8fdcebb3b636eb5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/088b348dbe82689ce1782653c8fdcebb3b636eb5"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 52,
      "deletions": 7
    },
    "files": [
      {
        "sha": "9b5d181c4e71d69922786a8ddc79171be0f1a64d",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb822a7af86897a9b6a5d616f193c258e8e76729/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb822a7af86897a9b6a5d616f193c258e8e76729/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=bb822a7af86897a9b6a5d616f193c258e8e76729",
        "patch": "@@ -142,6 +142,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"importmulti\", 0, \"requests\" },\n     { \"importmulti\", 1, \"options\" },\n     { \"importdescriptors\", 0, \"requests\" },\n+    { \"listdescriptors\", 0, \"private\" },\n     { \"verifychain\", 0, \"checklevel\" },\n     { \"verifychain\", 1, \"nblocks\" },\n     { \"getblockstats\", 0, \"hash_or_height\" },"
      },
      {
        "sha": "0ab62e35db66f2239ca8e0f40d462825d10dda1a",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb822a7af86897a9b6a5d616f193c258e8e76729/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb822a7af86897a9b6a5d616f193c258e8e76729/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=bb822a7af86897a9b6a5d616f193c258e8e76729",
        "patch": "@@ -1755,8 +1755,10 @@ RPCHelpMan listdescriptors()\n {\n     return RPCHelpMan{\n         \"listdescriptors\",\n-        \"\\nList descriptors imported into a descriptor-enabled wallet.\",\n-        {},\n+        \"\\nList descriptors imported into a descriptor-enabled wallet.\\n\",\n+        {\n+            {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Show private descriptors.\"}\n+        },\n         RPCResult{RPCResult::Type::OBJ, \"\", \"\", {\n             {RPCResult::Type::STR, \"wallet_name\", \"Name of wallet this operation was performed on\"},\n             {RPCResult::Type::ARR, \"descriptors\", \"Array of descriptor objects\",\n@@ -1776,6 +1778,7 @@ RPCHelpMan listdescriptors()\n         }},\n         RPCExamples{\n             HelpExampleCli(\"listdescriptors\", \"\") + HelpExampleRpc(\"listdescriptors\", \"\")\n+            + HelpExampleCli(\"listdescriptors\", \"true\") + HelpExampleRpc(\"listdescriptors\", \"true\")\n         },\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n {\n@@ -1786,6 +1789,11 @@ RPCHelpMan listdescriptors()\n         throw JSONRPCError(RPC_WALLET_ERROR, \"listdescriptors is not available for non-descriptor wallets\");\n     }\n \n+    const bool priv = !request.params[0].isNull() && request.params[0].get_bool();\n+    if (priv) {\n+        EnsureWalletIsUnlocked(*wallet);\n+    }\n+\n     LOCK(wallet->cs_wallet);\n \n     UniValue descriptors(UniValue::VARR);\n@@ -1799,8 +1807,9 @@ RPCHelpMan listdescriptors()\n         LOCK(desc_spk_man->cs_desc_man);\n         const auto& wallet_descriptor = desc_spk_man->GetWalletDescriptor();\n         std::string descriptor;\n-        if (!desc_spk_man->GetDescriptorString(descriptor)) {\n-            throw JSONRPCError(RPC_WALLET_ERROR, \"Can't get normalized descriptor string.\");\n+\n+        if (!desc_spk_man->GetDescriptorString(descriptor, priv)) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Can't get descriptor string.\");\n         }\n         spk.pushKV(\"desc\", descriptor);\n         spk.pushKV(\"timestamp\", wallet_descriptor.creation_time);"
      },
      {
        "sha": "73eb185640e848b357e4a786a1f5ec3e51c45405",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb822a7af86897a9b6a5d616f193c258e8e76729/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb822a7af86897a9b6a5d616f193c258e8e76729/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=bb822a7af86897a9b6a5d616f193c258e8e76729",
        "patch": "@@ -3872,7 +3872,7 @@ RPCHelpMan getaddressinfo()\n     DescriptorScriptPubKeyMan* desc_spk_man = dynamic_cast<DescriptorScriptPubKeyMan*>(pwallet->GetScriptPubKeyMan(scriptPubKey));\n     if (desc_spk_man) {\n         std::string desc_str;\n-        if (desc_spk_man->GetDescriptorString(desc_str)) {\n+        if (desc_spk_man->GetDescriptorString(desc_str, /* priv */ false)) {\n             ret.pushKV(\"parent_desc\", desc_str);\n         }\n     }"
      },
      {
        "sha": "3c821e5a81fc5e55b277e892321cd0e2710722f7",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb822a7af86897a9b6a5d616f193c258e8e76729/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb822a7af86897a9b6a5d616f193c258e8e76729/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=bb822a7af86897a9b6a5d616f193c258e8e76729",
        "patch": "@@ -2258,13 +2258,20 @@ const std::vector<CScript> DescriptorScriptPubKeyMan::GetScriptPubKeys() const\n     return script_pub_keys;\n }\n \n-bool DescriptorScriptPubKeyMan::GetDescriptorString(std::string& out) const\n+bool DescriptorScriptPubKeyMan::GetDescriptorString(std::string& out, const bool priv) const\n {\n     LOCK(cs_desc_man);\n \n     FlatSigningProvider provider;\n     provider.keys = GetKeys();\n \n+    if (priv) {\n+        // For the private version, always return the master key to avoid\n+        // exposing child private keys. The risk implications of exposing child\n+        // private keys together with the parent xpub may be non-obvious for users.\n+        return m_wallet_descriptor.descriptor->ToPrivateString(provider, out);\n+    }\n+\n     return m_wallet_descriptor.descriptor->ToNormalizedString(provider, out, &m_wallet_descriptor.cache);\n }\n "
      },
      {
        "sha": "0b25a982ff8231cbc3f6c045d194c16d0e334e46",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb822a7af86897a9b6a5d616f193c258e8e76729/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb822a7af86897a9b6a5d616f193c258e8e76729/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=bb822a7af86897a9b6a5d616f193c258e8e76729",
        "patch": "@@ -621,7 +621,7 @@ class DescriptorScriptPubKeyMan : public ScriptPubKeyMan\n     const WalletDescriptor GetWalletDescriptor() const EXCLUSIVE_LOCKS_REQUIRED(cs_desc_man);\n     const std::vector<CScript> GetScriptPubKeys() const;\n \n-    bool GetDescriptorString(std::string& out) const;\n+    bool GetDescriptorString(std::string& out, const bool priv) const;\n \n     void UpgradeDescriptorCache();\n };"
      },
      {
        "sha": "6e7be929cc99f9598a73d8e7a37e0f013f35b4ab",
        "filename": "test/functional/wallet_listdescriptors.py",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb822a7af86897a9b6a5d616f193c258e8e76729/test/functional/wallet_listdescriptors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb822a7af86897a9b6a5d616f193c258e8e76729/test/functional/wallet_listdescriptors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listdescriptors.py?ref=bb822a7af86897a9b6a5d616f193c258e8e76729",
        "patch": "@@ -71,11 +71,39 @@ def run_test(self):\n             ],\n         }\n         assert_equal(expected, wallet.listdescriptors())\n+        assert_equal(expected, wallet.listdescriptors(False))\n+\n+        self.log.info('Test list private descriptors')\n+        expected_private = {\n+            'wallet_name': 'w2',\n+            'descriptors': [\n+                {'desc': descsum_create('wpkh(' + xprv + hardened_path + '/0/*)'),\n+                 'timestamp': 1296688602,\n+                 'active': False,\n+                 'range': [0, 0],\n+                 'next': 0},\n+            ],\n+        }\n+        assert_equal(expected_private, wallet.listdescriptors(True))\n \n         self.log.info(\"Test listdescriptors with encrypted wallet\")\n         wallet.encryptwallet(\"pass\")\n         assert_equal(expected, wallet.listdescriptors())\n \n+        self.log.info('Test list private descriptors with encrypted wallet')\n+        assert_raises_rpc_error(-13, 'Please enter the wallet passphrase with walletpassphrase first.', wallet.listdescriptors, True)\n+        wallet.walletpassphrase(passphrase=\"pass\", timeout=1000000)\n+        assert_equal(expected_private, wallet.listdescriptors(True))\n+\n+        self.log.info('Test list private descriptors with watch-only wallet')\n+        node.createwallet(wallet_name='watch-only', descriptors=True, disable_private_keys=True)\n+        watch_only_wallet = node.get_wallet_rpc('watch-only')\n+        watch_only_wallet.importdescriptors([{\n+            'desc': descsum_create('wpkh(' + xpub_acc + ')'),\n+            'timestamp': 1296688602,\n+        }])\n+        assert_raises_rpc_error(-4, 'Can\\'t get descriptor string', watch_only_wallet.listdescriptors, True)\n+\n         self.log.info('Test non-active non-range combo descriptor')\n         node.createwallet(wallet_name='w4', blank=True, descriptors=True)\n         wallet = node.get_wallet_rpc('w4')"
      }
    ]
  }
]