[
  {
    "sha": "79d06dc6e07103b31b530f71b7187ea82c34266b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OWQwNmRjNmUwNzEwM2IzMWI1MzBmNzFiNzE4N2VhODJjMzQyNjZi",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2014-05-21T10:50:46Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2014-05-21T17:23:03Z"
      },
      "message": "Remove redundant c_str",
      "tree": {
        "sha": "8a01bf8e5bc367115d4b58a7969b44c35cabe096",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a01bf8e5bc367115d4b58a7969b44c35cabe096"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79d06dc6e07103b31b530f71b7187ea82c34266b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79d06dc6e07103b31b530f71b7187ea82c34266b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/79d06dc6e07103b31b530f71b7187ea82c34266b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79d06dc6e07103b31b530f71b7187ea82c34266b/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6fcdad787f1fb381a3a0fe6b1a1e45477426dccb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fcdad787f1fb381a3a0fe6b1a1e45477426dccb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6fcdad787f1fb381a3a0fe6b1a1e45477426dccb"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 15,
      "deletions": 15
    },
    "files": [
      {
        "sha": "5328a93b451b1fd1fc81c4737e7f801a16fd639e",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79d06dc6e07103b31b530f71b7187ea82c34266b/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79d06dc6e07103b31b530f71b7187ea82c34266b/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=79d06dc6e07103b31b530f71b7187ea82c34266b",
        "patch": "@@ -420,7 +420,7 @@ class CAddrMan\n             Check();\n         }\n         if (fRet)\n-            LogPrint(\"addrman\", \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort().c_str(), source.ToString().c_str(), nTried, nNew);\n+            LogPrint(\"addrman\", \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort().c_str(), source.ToString(), nTried, nNew);\n         return fRet;\n     }\n \n@@ -436,7 +436,7 @@ class CAddrMan\n             Check();\n         }\n         if (nAdd)\n-            LogPrint(\"addrman\", \"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString().c_str(), nTried, nNew);\n+            LogPrint(\"addrman\", \"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString(), nTried, nNew);\n         return nAdd > 0;\n     }\n "
      },
      {
        "sha": "bc4924b48dca3a2f22be73b5729a88437df338d0",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79d06dc6e07103b31b530f71b7187ea82c34266b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79d06dc6e07103b31b530f71b7187ea82c34266b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=79d06dc6e07103b31b530f71b7187ea82c34266b",
        "patch": "@@ -914,7 +914,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         for (map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.begin(); mi != mapBlockIndex.end(); ++mi)\n         {\n             uint256 hash = (*mi).first;\n-            if (strncmp(hash.ToString().c_str(), strMatch.c_str(), strMatch.size()) == 0)\n+            if (boost::algorithm::starts_with(hash.ToString(), strMatch))\n             {\n                 CBlockIndex* pindex = (*mi).second;\n                 CBlock block;"
      },
      {
        "sha": "043a56bf38a4fc16de96e6830125aaae37640453",
        "filename": "src/leveldbwrapper.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79d06dc6e07103b31b530f71b7187ea82c34266b/src/leveldbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79d06dc6e07103b31b530f71b7187ea82c34266b/src/leveldbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.h?ref=79d06dc6e07103b31b530f71b7187ea82c34266b",
        "patch": "@@ -93,7 +93,7 @@ class CLevelDBWrapper\n         if (!status.ok()) {\n             if (status.IsNotFound())\n                 return false;\n-            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString().c_str());\n+            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString());\n             HandleError(status);\n         }\n         try {\n@@ -122,7 +122,7 @@ class CLevelDBWrapper\n         if (!status.ok()) {\n             if (status.IsNotFound())\n                 return false;\n-            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString().c_str());\n+            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString());\n             HandleError(status);\n         }\n         return true;"
      },
      {
        "sha": "1dc48c0af8a44ce910943621ff5e8a659c9e79f9",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79d06dc6e07103b31b530f71b7187ea82c34266b/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79d06dc6e07103b31b530f71b7187ea82c34266b/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=79d06dc6e07103b31b530f71b7187ea82c34266b",
        "patch": "@@ -862,13 +862,13 @@ class CBlockIndex\n     {\n         return strprintf(\"CBlockIndex(pprev=%p, nHeight=%d, merkle=%s, hashBlock=%s)\",\n             pprev, nHeight,\n-            hashMerkleRoot.ToString().c_str(),\n-            GetBlockHash().ToString().c_str());\n+            hashMerkleRoot.ToString(),\n+            GetBlockHash().ToString());\n     }\n \n     void print() const\n     {\n-        LogPrintf(\"%s\\n\", ToString().c_str());\n+        LogPrintf(\"%s\\n\", ToString());\n     }\n \n     // Check whether this block index entry is valid up to the passed validity level.\n@@ -953,14 +953,14 @@ class CDiskBlockIndex : public CBlockIndex\n         std::string str = \"CDiskBlockIndex(\";\n         str += CBlockIndex::ToString();\n         str += strprintf(\"\\n                hashBlock=%s, hashPrev=%s)\",\n-            GetBlockHash().ToString().c_str(),\n-            hashPrev.ToString().c_str());\n+            GetBlockHash().ToString(),\n+            hashPrev.ToString());\n         return str;\n     }\n \n     void print() const\n     {\n-        LogPrintf(\"%s\\n\", ToString().c_str());\n+        LogPrintf(\"%s\\n\", ToString());\n     }\n };\n "
      },
      {
        "sha": "58a8fa739ba037b39e67b984e0f057d8c24fd695",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79d06dc6e07103b31b530f71b7187ea82c34266b/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79d06dc6e07103b31b530f71b7187ea82c34266b/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=79d06dc6e07103b31b530f71b7187ea82c34266b",
        "patch": "@@ -430,7 +430,7 @@ class CNode\n             nRequestTime = it->second;\n         else\n             nRequestTime = 0;\n-        LogPrint(\"net\", \"askfor %s   %d (%s)\\n\", inv.ToString().c_str(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str());\n+        LogPrint(\"net\", \"askfor %s   %d (%s)\\n\", inv.ToString(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str());\n \n         // Make sure not to reuse time indexes to keep things in the same order\n         int64_t nNow = GetTimeMicros() - 1000000;"
      },
      {
        "sha": "aed2b7a6ad09a79d63ec2ccbdd1869b5eea34b02",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79d06dc6e07103b31b530f71b7187ea82c34266b/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79d06dc6e07103b31b530f71b7187ea82c34266b/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=79d06dc6e07103b31b530f71b7187ea82c34266b",
        "patch": "@@ -722,7 +722,7 @@ class CScript : public std::vector<unsigned char>\n \n     void print() const\n     {\n-        LogPrintf(\"%s\\n\", ToString().c_str());\n+        LogPrintf(\"%s\\n\", ToString());\n     }\n \n     CScriptID GetID() const"
      },
      {
        "sha": "81dfbba9cbd94198b5eab43bba273bde33913dcf",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79d06dc6e07103b31b530f71b7187ea82c34266b/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79d06dc6e07103b31b530f71b7187ea82c34266b/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=79d06dc6e07103b31b530f71b7187ea82c34266b",
        "patch": "@@ -720,12 +720,12 @@ class COutput\n \n     std::string ToString() const\n     {\n-        return strprintf(\"COutput(%s, %d, %d) [%s]\", tx->GetHash().ToString().c_str(), i, nDepth, FormatMoney(tx->vout[i].nValue).c_str());\n+        return strprintf(\"COutput(%s, %d, %d) [%s]\", tx->GetHash().ToString(), i, nDepth, FormatMoney(tx->vout[i].nValue).c_str());\n     }\n \n     void print() const\n     {\n-        LogPrintf(\"%s\\n\", ToString().c_str());\n+        LogPrintf(\"%s\\n\", ToString());\n     }\n };\n "
      }
    ]
  }
]