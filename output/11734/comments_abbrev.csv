fanquake,2017-11-20T13:31:58Z,This looks like #11691 without the mining.cpp changes. Can you incorporate the changes suggested in comments from that PR?,https://github.com/bitcoin/bitcoin/pull/11734#issuecomment-345696034,345696034,
practicalswift,2017-11-20T18:10:02Z,@fanquake Done!,https://github.com/bitcoin/bitcoin/pull/11734#issuecomment-345780181,345780181,
practicalswift,2017-11-21T08:29:02Z,@promag Would you mind re-reviewing? ~~One way to make the Clang thread safety analysis machinery happy without changing behaviour seems to be to repeat the locking of the recursive mutex `pwallet->cs_wallet` with a lock in the `if (pwallet)` scope as well.  That inner scope lock is technically redundant. Let me know if you find a cleaner way to do it.~~ (change reverted),https://github.com/bitcoin/bitcoin/pull/11734#issuecomment-345952219,345952219,
TheBlueMatt,2017-11-22T00:00:59Z,"It probably makes more sense to focus more on splitting out the wallet RPC stuff (ala @achow101's work) and then you can just include the wallet lock in a wallet-specific deprecated function.\n\nOn November 20, 2017 5:18:15 AM PST, practicalswift <notifications@github.com> wrote:\n>The conditional lock ...\n>\n>```\n>LOCK2(cs_main, pwallet ? &pwallet->cs_wallet : nullptr)\n>```\n>\n>... confuses C",https://github.com/bitcoin/bitcoin/pull/11734#issuecomment-346200423,346200423,
practicalswift,2017-11-22T07:35:55Z,@sipa Thanks for reviewing! New version pushed. Would you mind re-reviewing? :-),https://github.com/bitcoin/bitcoin/pull/11734#issuecomment-346267026,346267026,
promag,2017-11-20T15:18:32Z,"How about not changing behaviour:\n```cpp\nLOCK(cs_main);\n#ifdef ENABLE_WALLET\nif (pwallet) LOCK(pwallet->cs_wallet);\n#endif\n```\nAs it is, the wallet can change between the `cs_main` lock and `cs_wallet` lock. This way the diff is also shorter.\n\nEdit: ops, it doesn't work.",https://github.com/bitcoin/bitcoin/pull/11734#discussion_r152018835,152018835,src/rpc/misc.cpp
practicalswift,2017-11-20T17:27:55Z,@promag Regarding your edit - do you mean that you ran into Clang thread safety analysis warnings?,https://github.com/bitcoin/bitcoin/pull/11734#discussion_r152057656,152057656,src/rpc/misc.cpp
sipa,2017-11-22T02:08:38Z,"This has no effect, the lock is released at the closing brace.",https://github.com/bitcoin/bitcoin/pull/11734#discussion_r152452999,152452999,src/rpc/misc.cpp
practicalswift,2017-11-22T07:09:13Z,"Oh, of course! I don't know what I was thinking there :-\  Fixing!",https://github.com/bitcoin/bitcoin/pull/11734#discussion_r152482951,152482951,src/rpc/misc.cpp
