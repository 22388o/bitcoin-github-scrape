[
  {
    "sha": "e5534d2f0198e341c40e4ffa606fb65f3cd06863",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTUzNGQyZjAxOThlMzQxYzQwZTRmZmE2MDZmYjY1ZjNjZDA2ODYz",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2016-12-20T06:59:42Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2016-12-20T11:45:08Z"
      },
      "message": "Added std::unique_ptr<> wrappers with deleters for libevent modules.",
      "tree": {
        "sha": "8c1e4739b72922f43c6fba3893e5b4629e300732",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c1e4739b72922f43c6fba3893e5b4629e300732"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5534d2f0198e341c40e4ffa606fb65f3cd06863",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5534d2f0198e341c40e4ffa606fb65f3cd06863",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e5534d2f0198e341c40e4ffa606fb65f3cd06863",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5534d2f0198e341c40e4ffa606fb65f3cd06863/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f72568e6b15fc139323fb200591a50762f6df0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f72568e6b15fc139323fb200591a50762f6df0b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f72568e6b15fc139323fb200591a50762f6df0b"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 56,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ac75f250aed3fc5acb373c6992ff7e0cb7672895",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5534d2f0198e341c40e4ffa606fb65f3cd06863/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5534d2f0198e341c40e4ffa606fb65f3cd06863/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=e5534d2f0198e341c40e4ffa606fb65f3cd06863",
        "patch": "@@ -134,6 +134,7 @@ BITCOIN_CORE_H = \\\n   support/allocators/secure.h \\\n   support/allocators/zeroafterfree.h \\\n   support/cleanse.h \\\n+  support/events.h \\\n   support/lockedpool.h \\\n   sync.h \\\n   threadsafety.h \\"
      },
      {
        "sha": "16378086fa6eeab233b69f4103efc5099969d9a5",
        "filename": "src/support/events.h",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5534d2f0198e341c40e4ffa606fb65f3cd06863/src/support/events.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5534d2f0198e341c40e4ffa606fb65f3cd06863/src/support/events.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/events.h?ref=e5534d2f0198e341c40e4ffa606fb65f3cd06863",
        "patch": "@@ -0,0 +1,55 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_SUPPORT_EVENTS_H\n+#define BITCOIN_SUPPORT_EVENTS_H\n+\n+#include <ios>\n+\n+#include <event2/event.h>\n+#include <event2/http.h>\n+\n+#define MAKE_RAII(type) \\\n+/* deleter */\\\n+struct type##_deleter {\\\n+    void operator()(struct type* ob) {\\\n+        type##_free(ob);\\\n+    }\\\n+};\\\n+/* unique ptr typedef */\\\n+typedef std::unique_ptr<struct type, type##_deleter> raii_##type\n+\n+MAKE_RAII(event_base);\n+MAKE_RAII(event);\n+MAKE_RAII(evhttp);\n+MAKE_RAII(evhttp_request);\n+MAKE_RAII(evhttp_connection);\n+\n+raii_event_base obtain_event_base() {\n+    auto result = raii_event_base(event_base_new());\n+    if (!result.get())\n+        throw std::runtime_error(\"cannot create event_base\");\n+    return result;\n+}\n+\n+raii_event obtain_event(struct event_base* base, evutil_socket_t s, short events, event_callback_fn cb, void* arg) {\n+    return raii_event(event_new(base, s, events, cb, arg));\n+}\n+\n+raii_evhttp obtain_evhttp(struct event_base* base) {\n+    return raii_evhttp(evhttp_new(base));\n+}\n+\n+raii_evhttp_request obtain_evhttp_request(void(*cb)(struct evhttp_request *, void *), void *arg) {\n+    return raii_evhttp_request(evhttp_request_new(cb, arg));\n+}\n+\n+raii_evhttp_connection obtain_evhttp_connection_base(struct event_base* base, std::string host, uint16_t port) {\n+    auto result = raii_evhttp_connection(evhttp_connection_base_new(base, NULL, host.c_str(), port));\n+    if (!result.get())\n+        throw std::runtime_error(\"create connection failed\");\n+    return result;\n+}\n+\n+#endif // BITCOIN_SUPPORT_EVENTS_H"
      }
    ]
  },
  {
    "sha": "7f7f102b8d5024cc702e308f2ad86a4137d790f7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZjdmMTAyYjhkNTAyNGNjNzAyZTMwOGYyYWQ4NmE0MTM3ZDc5MGY3",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2016-12-20T11:46:11Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2016-12-20T11:48:55Z"
      },
      "message": "Switched bitcoin-cli.cpp to use RAII unique pointers with deleters.",
      "tree": {
        "sha": "76d4aa8c9e3e9828bffa9743c9b0ee4fe3d8f41b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/76d4aa8c9e3e9828bffa9743c9b0ee4fe3d8f41b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f7f102b8d5024cc702e308f2ad86a4137d790f7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f7f102b8d5024cc702e308f2ad86a4137d790f7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7f7f102b8d5024cc702e308f2ad86a4137d790f7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f7f102b8d5024cc702e308f2ad86a4137d790f7/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e5534d2f0198e341c40e4ffa606fb65f3cd06863",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5534d2f0198e341c40e4ffa606fb65f3cd06863",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5534d2f0198e341c40e4ffa606fb65f3cd06863"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 12,
      "deletions": 20
    },
    "files": [
      {
        "sha": "2d11f45301fc2e38a7f4e892f61dd460453aa853",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 20,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f7f102b8d5024cc702e308f2ad86a4137d790f7/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f7f102b8d5024cc702e308f2ad86a4137d790f7/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=7f7f102b8d5024cc702e308f2ad86a4137d790f7",
        "patch": "@@ -17,10 +17,9 @@\n #include <boost/filesystem/operations.hpp>\n #include <stdio.h>\n \n-#include <event2/event.h>\n-#include <event2/http.h>\n #include <event2/buffer.h>\n #include <event2/keyvalq_struct.h>\n+#include \"support/events.h\"\n \n #include <univalue.h>\n \n@@ -190,23 +189,19 @@ UniValue CallRPC(const std::string& strMethod, const UniValue& params)\n     std::string host = GetArg(\"-rpcconnect\", DEFAULT_RPCCONNECT);\n     int port = GetArg(\"-rpcport\", BaseParams().RPCPort());\n \n-    // Create event base\n-    struct event_base *base = event_base_new(); // TODO RAII\n-    if (!base)\n-        throw std::runtime_error(\"cannot create event_base\");\n+    // Obtain event base\n+    raii_event_base base = obtain_event_base();\n \n     // Synchronously look up hostname\n-    struct evhttp_connection *evcon = evhttp_connection_base_new(base, NULL, host.c_str(), port); // TODO RAII\n-    if (evcon == NULL)\n-        throw std::runtime_error(\"create connection failed\");\n-    evhttp_connection_set_timeout(evcon, GetArg(\"-rpcclienttimeout\", DEFAULT_HTTP_CLIENT_TIMEOUT));\n+    raii_evhttp_connection evcon = obtain_evhttp_connection_base(base.get(), host, port);\n+    evhttp_connection_set_timeout(evcon.get(), GetArg(\"-rpcclienttimeout\", DEFAULT_HTTP_CLIENT_TIMEOUT));\n \n     HTTPReply response;\n-    struct evhttp_request *req = evhttp_request_new(http_request_done, (void*)&response); // TODO RAII\n+    raii_evhttp_request req = obtain_evhttp_request(http_request_done, (void*)&response);\n     if (req == NULL)\n         throw std::runtime_error(\"create http request failed\");\n #if LIBEVENT_VERSION_NUMBER >= 0x02010300\n-    evhttp_request_set_error_cb(req, http_error_cb);\n+    evhttp_request_set_error_cb(req.get(), http_error_cb);\n #endif\n \n     // Get credentials\n@@ -223,28 +218,25 @@ UniValue CallRPC(const std::string& strMethod, const UniValue& params)\n         strRPCUserColonPass = mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"];\n     }\n \n-    struct evkeyvalq *output_headers = evhttp_request_get_output_headers(req);\n+    struct evkeyvalq* output_headers = evhttp_request_get_output_headers(req.get());\n     assert(output_headers);\n     evhttp_add_header(output_headers, \"Host\", host.c_str());\n     evhttp_add_header(output_headers, \"Connection\", \"close\");\n     evhttp_add_header(output_headers, \"Authorization\", (std::string(\"Basic \") + EncodeBase64(strRPCUserColonPass)).c_str());\n \n     // Attach request data\n     std::string strRequest = JSONRPCRequestObj(strMethod, params, 1).write() + \"\\n\";\n-    struct evbuffer * output_buffer = evhttp_request_get_output_buffer(req);\n+    struct evbuffer* output_buffer = evhttp_request_get_output_buffer(req.get());\n     assert(output_buffer);\n     evbuffer_add(output_buffer, strRequest.data(), strRequest.size());\n \n-    int r = evhttp_make_request(evcon, req, EVHTTP_REQ_POST, \"/\");\n+    int r = evhttp_make_request(evcon.get(), req.get(), EVHTTP_REQ_POST, \"/\");\n+    req.release(); // ownership moved to evcon in above call\n     if (r != 0) {\n-        evhttp_connection_free(evcon);\n-        event_base_free(base);\n         throw CConnectionFailed(\"send http request failed\");\n     }\n \n-    event_base_dispatch(base);\n-    evhttp_connection_free(evcon);\n-    event_base_free(base);\n+    event_base_dispatch(base.get());\n \n     if (response.status == 0)\n         throw CConnectionFailed(strprintf(\"couldn't connect to server: %s (code %d)\\n(make sure server is running and you are connecting to the correct RPC port)\", http_errorstring(response.error), response.error));"
      }
    ]
  },
  {
    "sha": "280a5599ebccbb54fb650f5e3939b0878b2f667a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyODBhNTU5OWViY2NiYjU0ZmI2NTBmNWUzOTM5YjA4NzhiMmY2Njdh",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2016-12-21T04:43:49Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2016-12-21T07:49:21Z"
      },
      "message": "Added some simple tests for the RAII-style events.",
      "tree": {
        "sha": "b4fa13e544e3fbf791a7e1970d3b640abbfee55b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4fa13e544e3fbf791a7e1970d3b640abbfee55b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/280a5599ebccbb54fb650f5e3939b0878b2f667a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/280a5599ebccbb54fb650f5e3939b0878b2f667a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/280a5599ebccbb54fb650f5e3939b0878b2f667a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/280a5599ebccbb54fb650f5e3939b0878b2f667a/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f7f102b8d5024cc702e308f2ad86a4137d790f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f7f102b8d5024cc702e308f2ad86a4137d790f7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f7f102b8d5024cc702e308f2ad86a4137d790f7"
      }
    ],
    "stats": {
      "total": 92,
      "additions": 91,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5d57daff4cac2053be2bcf42e4b7c7d280fbf9c5",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/280a5599ebccbb54fb650f5e3939b0878b2f667a/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/280a5599ebccbb54fb650f5e3939b0878b2f667a/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=280a5599ebccbb54fb650f5e3939b0878b2f667a",
        "patch": "@@ -74,6 +74,7 @@ BITCOIN_TESTS =\\\n   test/policyestimator_tests.cpp \\\n   test/pow_tests.cpp \\\n   test/prevector_tests.cpp \\\n+  test/raii_event_tests.cpp \\\n   test/reverselock_tests.cpp \\\n   test/rpc_tests.cpp \\\n   test/sanity_tests.cpp \\\n@@ -111,7 +112,7 @@ endif\n test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n-  $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1)\n+  $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS)\n test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n if ENABLE_WALLET\n test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)"
      },
      {
        "sha": "4f2f3cf9ef760051249ce4fc730d4403483473ab",
        "filename": "src/support/events.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/280a5599ebccbb54fb650f5e3939b0878b2f667a/src/support/events.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/280a5599ebccbb54fb650f5e3939b0878b2f667a/src/support/events.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/events.h?ref=280a5599ebccbb54fb650f5e3939b0878b2f667a",
        "patch": "@@ -6,6 +6,7 @@\n #define BITCOIN_SUPPORT_EVENTS_H\n \n #include <ios>\n+#include <memory>\n \n #include <event2/event.h>\n #include <event2/http.h>"
      },
      {
        "sha": "87d25c0e2c4bc77205232628d144ed8f68b990bd",
        "filename": "src/test/raii_event_tests.cpp",
        "status": "added",
        "additions": 88,
        "deletions": 0,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/280a5599ebccbb54fb650f5e3939b0878b2f667a/src/test/raii_event_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/280a5599ebccbb54fb650f5e3939b0878b2f667a/src/test/raii_event_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/raii_event_tests.cpp?ref=280a5599ebccbb54fb650f5e3939b0878b2f667a",
        "patch": "@@ -0,0 +1,88 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <event2/event.h>\n+#include <map>\n+#include <stdlib.h>\n+\n+#include \"support/events.h\"\n+\n+#include \"test/test_bitcoin.h\"\n+\n+#include <vector>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+static std::map<void*, short> tags;\n+static std::map<void*, uint16_t> orders;\n+static uint16_t tagSequence = 0;\n+\n+static void* tag_malloc(size_t sz) {\n+    void* mem = malloc(sz);\n+    if (!mem) return mem;\n+    tags[mem]++;\n+    orders[mem] = tagSequence++;\n+    return mem;\n+}\n+\n+static void tag_free(void* mem) {\n+    tags[mem]--;\n+    orders[mem] = tagSequence++;\n+    free(mem);\n+}\n+\n+BOOST_FIXTURE_TEST_SUITE(raii_event_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(raii_event_creation)\n+{\n+    event_set_mem_functions(tag_malloc, realloc, tag_free);\n+    \n+    void* base_ptr = NULL;\n+    {\n+        auto base = obtain_event_base();\n+        base_ptr = (void*)base.get();\n+        BOOST_CHECK(tags[base_ptr] == 1);\n+    }\n+    BOOST_CHECK(tags[base_ptr] == 0);\n+    \n+    void* event_ptr = NULL;\n+    {\n+        auto base = obtain_event_base();\n+        auto event = obtain_event(base.get(), -1, 0, NULL, NULL);\n+\n+        base_ptr = (void*)base.get();\n+        event_ptr = (void*)event.get();\n+\n+        BOOST_CHECK(tags[base_ptr] == 1);\n+        BOOST_CHECK(tags[event_ptr] == 1);\n+    }\n+    BOOST_CHECK(tags[base_ptr] == 0);\n+    BOOST_CHECK(tags[event_ptr] == 0);\n+    \n+    event_set_mem_functions(malloc, realloc, free);\n+}\n+\n+BOOST_AUTO_TEST_CASE(raii_event_order)\n+{\n+    event_set_mem_functions(tag_malloc, realloc, tag_free);\n+    \n+    void* base_ptr = NULL;\n+    void* event_ptr = NULL;\n+    {\n+        auto base = obtain_event_base();\n+        auto event = obtain_event(base.get(), -1, 0, NULL, NULL);\n+\n+        base_ptr = (void*)base.get();\n+        event_ptr = (void*)event.get();\n+\n+        // base should have allocated before event\n+        BOOST_CHECK(orders[base_ptr] < orders[event_ptr]);\n+    }\n+    // base should be freed after event\n+    BOOST_CHECK(orders[base_ptr] > orders[event_ptr]);\n+\n+    event_set_mem_functions(malloc, realloc, free);\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "05a55a639b6cd01b06be285db53edccdaf2ca189",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNWE1NWE2MzliNmNkMDFiMDZiZTI4NWRiNTNlZGNjZGFmMmNhMTg5",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-01-04T09:16:47Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-01-04T09:16:55Z"
      },
      "message": "Added EVENT_CFLAGS to test makefile to explicitly include libevent headers.",
      "tree": {
        "sha": "6e2c82d1050ee02d6d3cdcd1219674f3d958bad2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6e2c82d1050ee02d6d3cdcd1219674f3d958bad2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05a55a639b6cd01b06be285db53edccdaf2ca189",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05a55a639b6cd01b06be285db53edccdaf2ca189",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/05a55a639b6cd01b06be285db53edccdaf2ca189",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05a55a639b6cd01b06be285db53edccdaf2ca189/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "280a5599ebccbb54fb650f5e3939b0878b2f667a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/280a5599ebccbb54fb650f5e3939b0878b2f667a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/280a5599ebccbb54fb650f5e3939b0878b2f667a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c55c3ab46583c7ee8570f5dcdb8d17bff0f92e71",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05a55a639b6cd01b06be285db53edccdaf2ca189/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05a55a639b6cd01b06be285db53edccdaf2ca189/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=05a55a639b6cd01b06be285db53edccdaf2ca189",
        "patch": "@@ -110,7 +110,7 @@ BITCOIN_TESTS += \\\n endif\n \n test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n-test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n+test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)\n test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS)\n test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)"
      }
    ]
  }
]