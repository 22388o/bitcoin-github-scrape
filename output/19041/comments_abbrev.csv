sipa,2020-05-21 16:52:19,What does this change? Why?,https://github.com/bitcoin/bitcoin/pull/19041#issuecomment-632220567,632220567,
Empact,2020-05-26 21:04:50,"@sipa Looks like it extends tsan checks to include checks on `std::thread` handling etc.\n\nAdding `libc++-dev` seems to be a way to fix the build: https://packages.ubuntu.com/xenial/amd64/libc++-dev/filelist\n\nHow about running both the clang-9 wallet+qt version and the clang-10 libc++? Or is there not meaningful threading to justify it?",https://github.com/bitcoin/bitcoin/pull/19041#issuecomment-634278436,634278436,
DrahtBot,2020-05-27 20:14:53,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19077 (wallet: Add sqlite as an alternative wallet database and use it for new descriptor wallets by achow101)\n* #18077 ",https://github.com/bitcoin/bitcoin/pull/19041#issuecomment-634915248,634915248,
MarcoFalke,2020-05-30 13:19:31,"This fails because the suppressions can not be applied:\n\n```\n==8563==WARNING: invalid path to external symbolizer!\n\n==8563==WARNING: Failed to use and restart external symbolizer!\n\n==================\n\nWARNING: ThreadSanitizer: double lock of a mutex (pid=8563)\n\n    #0 <null> <null> (bitcoind+0x7e8d6)\n\n    #1 <null> <null> (libc++.so.1+0x83505)\n\n    #2 <null> <null> (b",https://github.com/bitcoin/bitcoin/pull/19041#issuecomment-636330032,636330032,
MarcoFalke,2020-05-31 23:05:40,"Fixed all issues. Travis green on the tsan run. This is ready for review. The changes are split out into separate micro-commits, so should be easier to review.",https://github.com/bitcoin/bitcoin/pull/19041#issuecomment-636544216,636544216,
practicalswift,2020-06-01 07:39:47,"ACK faf62e6ed0ca45db44c370844c3515eb5a8cda12\n\nGiven the number of new suppressions I suggest also opening an issue for tackling them :)",https://github.com/bitcoin/bitcoin/pull/19041#issuecomment-636669801,636669801,
hebasto,2020-06-01 08:48:17,"Concept ACK.\n\nCould removing `llvm` path in faf62e6ed0ca45db44c370844c3515eb5a8cda12 affect other builds with sanitizers?\n\nI still not fully understand what is (potentially) wrong with code which emits ""double locks"" warnings about _recursive_ mutexes. I can easy reproduce such warning but it does not give answers though.\n\nCould someone point me to resources to get knowledge?",https://github.com/bitcoin/bitcoin/pull/19041#issuecomment-636707654,636707654,
sipa,2020-06-01 09:00:14,"@hebasto Recursive mutexes are generally considered to be a bad idea. They work, and do what they're designed for - reentering a mutex you already hold is perfectly legal with them. However, they're generally a sign of badly structured code. In well-designed systems, you have code running inside the mutex, and code outside, and there is a clean barrier between the two. The fact that you need a rec",https://github.com/bitcoin/bitcoin/pull/19041#issuecomment-636715576,636715576,
MarcoFalke,2020-06-01 10:41:41,"> Could removing llvm path in faf62e6 affect other builds with sanitizers?\n\nNo, because the PATH is never passed into the ci container (docker) anyway and is therefore unset either way.",https://github.com/bitcoin/bitcoin/pull/19041#issuecomment-636776369,636776369,
MarcoFalke,2020-06-01 10:44:41,"> I still not fully understand what is (potentially) wrong with code which emits ""double locks"" warnings about recursive mutexes. I can easy reproduce such warning but it does not give answers though.\n\nI checked the first warning and it is about a plain mutex, not recursive one:\n\n```\nsrc/init.cpp:static Mutex g_genesis_wait_mutex;\n```\n\nI suggest we simply accept the suppressions fi",https://github.com/bitcoin/bitcoin/pull/19041#issuecomment-636777944,636777944,
MarcoFalke,2020-06-02 22:51:07,"> maybe re-organize commits to modify suppressions in a single one?\n\nI have a slight preference to keep it as is:\n\n* The commits don't mention that, but the first one is a result of running tsan in Fedora, the second commit is the result of running tsan in Focal\n* Not invalidate reviews :)",https://github.com/bitcoin/bitcoin/pull/19041#issuecomment-637848322,637848322,
hebasto,2020-06-04 06:48:00,"@MarcoFalke \n> The commits don't mention that, but the first one is a result of running tsan in Fedora, the second commit is the result of running tsan in Focal\n\nDoes this mean we should run CI test on Fedora as well?\n\n",https://github.com/bitcoin/bitcoin/pull/19041#issuecomment-638639670,638639670,
fanquake,2020-06-03 08:58:53,Is this being muted because the depends build in the tsan job is now noisier when building with Clang and libstdc++? Or is this an unrelated commit similar to fac2eeeb9d718bdb892eef9adf333ea61ba8f3d0?,https://github.com/bitcoin/bitcoin/pull/19041#discussion_r434415238,434415238,ci/test/05_before_script.sh
MarcoFalke,2020-06-03 09:42:21,"It is a combination of all of the qt build issues I've been running into lately.\n\n* Not sure how to pass in compiler flags to the qt build from outside to disable the wdeprecated warnings in depends. #15822\n* Not sure if we can bump qt to a more recent version to get rid of the warnings #18580\n* Not sure how to solve #16368 ",https://github.com/bitcoin/bitcoin/pull/19041#discussion_r434441887,434441887,ci/test/05_before_script.sh
MarcoFalke,2020-06-03 09:43:49,"I am just hoping that one of you build people will solve this one day :pray: kthxbye\n\nTo limit the changes here to purely the ci folder, I will leave any build changes for the future.",https://github.com/bitcoin/bitcoin/pull/19041#discussion_r434442772,434442772,ci/test/05_before_script.sh
MarcoFalke,2020-06-03 11:17:02,"To clarify, yes this commit is required. Otherwise the build log would exceed 40000 lines and be killed.",https://github.com/bitcoin/bitcoin/pull/19041#discussion_r434491900,434491900,ci/test/05_before_script.sh
fanquake,2020-06-03 13:52:50,"> to the qt build from outside to disable the wdeprecated warnings in depends.\n\nCan you add `NO_QT=1 NO_WALLET=1` to DEP_OPTS? Given qt is no-longer used here, and bdb wasn't used beforehand. If anything that should reduce the build output.\n\n> Not sure if we can bump qt to a more recent version\n\nThat's blocked until c++17, unless someone wants to fix c++11 support for a newer version (",https://github.com/bitcoin/bitcoin/pull/19041#discussion_r434583753,434583753,ci/test/05_before_script.sh
MarcoFalke,2020-06-03 14:02:46,"> Can you add NO_QT=1 NO_WALLET=1 to DEP_OPTS? Given qt is no-longer used here, and bdb wasn't used beforehand. If anything that should reduce the build output.\n\nWell the goal is to eventually enable tsan for the wallet and gui. I might wait for sqlite to avoid the bdb horror, but at least qt will be tested against hopefully soon.\n\nAlso, it is nice to have a test for the ""can I compile qt ",https://github.com/bitcoin/bitcoin/pull/19041#discussion_r434591239,434591239,ci/test/05_before_script.sh
MarcoFalke,2020-06-03 14:03:19,"> That's blocked until c++17, unless someone wants to fix c++11 support for a newer version (5.12) of Qt for macOS.\n\nThanks, didn't know that they switched away from cxx11",https://github.com/bitcoin/bitcoin/pull/19041#discussion_r434591591,434591591,ci/test/05_before_script.sh
fanquake,2020-06-03 14:05:43,"> Thanks, didn't know that they switched away from cxx11\n\nheh. They didn't ""officially"". They just started using c++14 features in portions of the macOS code, while claiming to still support c++11. Some details in #17768.",https://github.com/bitcoin/bitcoin/pull/19041#discussion_r434593470,434593470,ci/test/05_before_script.sh
