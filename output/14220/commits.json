[
  {
    "sha": "f979abd13867673df501bf712daa878d466389c1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOTc5YWJkMTM4Njc2NzNkZjUwMWJmNzEyZGFhODc4ZDQ2NjM4OWMx",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-09-10T20:54:46Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-10-09T02:51:39Z"
      },
      "message": "Don't relay tx data to peers until after tx announcement\n\nPrior to this commit, we'd respond with tx data for anything in mapRelay,\nregardless of whether the requesting peer was one that we'd sent an INV to\nfor the transaction in question.\n\nClose this privacy leak by maintaining a set of peers to which we've\nrelayed each transaction in mapRelay.",
      "tree": {
        "sha": "60d987437be04278ca18859cc670895780ce6b2a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/60d987437be04278ca18859cc670895780ce6b2a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f979abd13867673df501bf712daa878d466389c1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f979abd13867673df501bf712daa878d466389c1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f979abd13867673df501bf712daa878d466389c1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f979abd13867673df501bf712daa878d466389c1/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4de0b5f39cc35636d499ad29ee3c63384b13fc76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4de0b5f39cc35636d499ad29ee3c63384b13fc76",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4de0b5f39cc35636d499ad29ee3c63384b13fc76"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 13,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a69b5379c1fc656e60dec1a7a5b09597dfd3af75",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f979abd13867673df501bf712daa878d466389c1/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f979abd13867673df501bf712daa878d466389c1/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=f979abd13867673df501bf712daa878d466389c1",
        "patch": "@@ -30,6 +30,7 @@\n #include <utilstrencodings.h>\n \n #include <memory>\n+#include <unordered_set>\n \n #if defined(NDEBUG)\n # error \"Bitcoin cannot be compiled without assertions.\"\n@@ -153,7 +154,12 @@ namespace {\n     std::atomic<int64_t> g_last_tip_update(0);\n \n     /** Relay map */\n-    typedef std::map<uint256, CTransactionRef> MapRelay;\n+    struct RelayEntry {\n+        explicit RelayEntry(CTransactionRef &&tx) : m_txref(tx) {}\n+        CTransactionRef m_txref;\n+        std::unordered_set<NodeId> m_node_set;\n+    };\n+    typedef std::map<uint256, RelayEntry> MapRelay;\n     MapRelay mapRelay GUARDED_BY(cs_main);\n     /** Expiration-time ordered list of (expire time, relay map entry) pairs. */\n     std::deque<std::pair<int64_t, MapRelay::iterator>> vRelayExpiration GUARDED_BY(cs_main);\n@@ -1284,8 +1290,8 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n             bool push = false;\n             auto mi = mapRelay.find(inv.hash);\n             int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n-            if (mi != mapRelay.end()) {\n-                connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second));\n+            if (mi != mapRelay.end() && mi->second.m_node_set.count(pfrom->GetId())) {\n+                connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second.m_txref));\n                 push = true;\n             } else if (pfrom->timeLastMempoolReq) {\n                 auto txinfo = mempool.info(inv.hash);\n@@ -3609,7 +3615,10 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n                             vRelayExpiration.pop_front();\n                         }\n \n-                        auto ret = mapRelay.insert(std::make_pair(hash, std::move(txinfo.tx)));\n+                        auto ret = mapRelay.emplace(hash, RelayEntry(std::move(txinfo.tx)));\n+                        // Add this peer to the node map indicating which peers\n+                        // we will allow to download the transaction\n+                        ret.first->second.m_node_set.insert(pto->GetId());\n                         if (ret.second) {\n                             vRelayExpiration.push_back(std::make_pair(nNow + 15 * 60 * 1000000, ret.first));\n                         }"
      }
    ]
  },
  {
    "sha": "a4e0c3b090079e27a917b8ff9467ad7ba28498a6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNGUwYzNiMDkwMDc5ZTI3YTkxN2I4ZmY5NDY3YWQ3YmEyODQ5OGE2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-09-15T23:51:20Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-10-09T02:57:01Z"
      },
      "message": "[qa] Test inter-bucket privacy leakage",
      "tree": {
        "sha": "bb34ce1ff527895a970bd3724ae24276e7a39884",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb34ce1ff527895a970bd3724ae24276e7a39884"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4e0c3b090079e27a917b8ff9467ad7ba28498a6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4e0c3b090079e27a917b8ff9467ad7ba28498a6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a4e0c3b090079e27a917b8ff9467ad7ba28498a6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4e0c3b090079e27a917b8ff9467ad7ba28498a6/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f979abd13867673df501bf712daa878d466389c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f979abd13867673df501bf712daa878d466389c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f979abd13867673df501bf712daa878d466389c1"
      }
    ],
    "stats": {
      "total": 117,
      "additions": 116,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a0ceaedd67e9ec8aaaab857e2311a6d4a100fc81",
        "filename": "test/functional/p2p_leak_tx.py",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4e0c3b090079e27a917b8ff9467ad7ba28498a6/test/functional/p2p_leak_tx.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4e0c3b090079e27a917b8ff9467ad7ba28498a6/test/functional/p2p_leak_tx.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak_tx.py?ref=a4e0c3b090079e27a917b8ff9467ad7ba28498a6",
        "patch": "@@ -0,0 +1,61 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\"\n+\n+from test_framework.messages import msg_getdata, CInv\n+from test_framework.mininode import mininode_lock, P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    wait_until,\n+)\n+\n+import time\n+\n+\n+class P2PNode(P2PDataStore):\n+    def on_inv(self, msg):\n+        pass\n+\n+\n+class P2PLeakTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        gen_node = self.nodes[0]  # The block and tx generating node\n+        gen_node.generate(1)\n+        self.sync_all()\n+\n+        inbound_peer = self.nodes[0].add_p2p_connection(P2PNode())  # An \"attacking\" inbound peer\n+\n+        REPEATS = 10\n+        self.log.info('Start test for {} repeats'.format(REPEATS))\n+        for i in range(REPEATS):\n+            self.log.debug('Run {}/{}'.format(i, REPEATS))\n+            txid = gen_node.sendtoaddress(gen_node.getnewaddress(), 0.033)\n+\n+            time.sleep(5)\n+\n+            want_tx = msg_getdata()\n+            want_tx.inv.append(CInv(t=1, h=int(txid, 16)))\n+            inbound_peer.send_message(want_tx)\n+            inbound_peer.sync_with_ping()\n+\n+            if inbound_peer.last_message.get('notfound'):\n+                self.log.debug('tx {} was not yet announced to us.'.format(txid))\n+                assert_equal(inbound_peer.last_message['notfound'].vec[0].hash, int(txid, 16))\n+                inbound_peer.last_message.pop('notfound')\n+            else:\n+                self.log.debug('tx {} was announced to us.'.format(txid))\n+                assert int(txid, 16) in [inv.hash for inv in inbound_peer.last_message['inv'].inv]\n+\n+\n+if __name__ == '__main__':\n+    P2PLeakTxTest().main()"
      },
      {
        "sha": "02827862af91a123331691995d681838351d4384",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4e0c3b090079e27a917b8ff9467ad7ba28498a6/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4e0c3b090079e27a917b8ff9467ad7ba28498a6/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=a4e0c3b090079e27a917b8ff9467ad7ba28498a6",
        "patch": "@@ -1232,6 +1232,26 @@ def __repr__(self):\n         return \"msg_mempool()\"\n \n \n+class msg_notfound:\n+    __slots__ = (\"vec\")\n+    command = b\"notfound\"\n+\n+    def __init__(self, vec=None):\n+        if vec is None:\n+            self.vec = []\n+        else:\n+            self.vec = vec\n+\n+    def deserialize(self, f):\n+        self.vec = deser_vector(f, CInv)\n+\n+    def serialize(self):\n+        return ser_vector(self.vec)\n+\n+    def __repr__(self):\n+        return \"msg_notfound(vec=%s)\" % (repr(self.vec))\n+\n+\n class msg_sendheaders:\n     __slots__ = ()\n     command = b\"sendheaders\""
      },
      {
        "sha": "69edff5e5660fc48f9c3cfff2169bdfdb46eb206",
        "filename": "test/functional/test_framework/mininode.py",
        "status": "modified",
        "additions": 34,
        "deletions": 1,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4e0c3b090079e27a917b8ff9467ad7ba28498a6/test/functional/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4e0c3b090079e27a917b8ff9467ad7ba28498a6/test/functional/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/mininode.py?ref=a4e0c3b090079e27a917b8ff9467ad7ba28498a6",
        "patch": "@@ -21,7 +21,38 @@\n import sys\n import threading\n \n-from test_framework.messages import CBlockHeader, MIN_VERSION_SUPPORTED, msg_addr, msg_block, MSG_BLOCK, msg_blocktxn, msg_cmpctblock, msg_feefilter, msg_getaddr, msg_getblocks, msg_getblocktxn, msg_getdata, msg_getheaders, msg_headers, msg_inv, msg_mempool, msg_ping, msg_pong, msg_reject, msg_sendcmpct, msg_sendheaders, msg_tx, MSG_TX, MSG_TYPE_MASK, msg_verack, msg_version, NODE_NETWORK, NODE_WITNESS, sha256\n+from test_framework.messages import (\n+    CBlockHeader,\n+    MIN_VERSION_SUPPORTED,\n+    msg_addr,\n+    msg_block,\n+    MSG_BLOCK,\n+    msg_blocktxn,\n+    msg_cmpctblock,\n+    msg_feefilter,\n+    msg_getaddr,\n+    msg_getblocks,\n+    msg_getblocktxn,\n+    msg_getdata,\n+    msg_getheaders,\n+    msg_headers,\n+    msg_inv,\n+    msg_mempool,\n+    msg_notfound,\n+    msg_ping,\n+    msg_pong,\n+    msg_reject,\n+    msg_sendcmpct,\n+    msg_sendheaders,\n+    msg_tx,\n+    MSG_TX,\n+    MSG_TYPE_MASK,\n+    msg_verack,\n+    msg_version,\n+    NODE_NETWORK,\n+    NODE_WITNESS,\n+    sha256,\n+)\n from test_framework.util import wait_until\n \n logger = logging.getLogger(\"TestFramework.mininode\")\n@@ -40,6 +71,7 @@\n     b\"headers\": msg_headers,\n     b\"inv\": msg_inv,\n     b\"mempool\": msg_mempool,\n+    b\"notfound\": msg_notfound,\n     b\"ping\": msg_ping,\n     b\"pong\": msg_pong,\n     b\"reject\": msg_reject,\n@@ -295,6 +327,7 @@ def on_getdata(self, message): pass\n     def on_getheaders(self, message): pass\n     def on_headers(self, message): pass\n     def on_mempool(self, message): pass\n+    def on_notfound(self, message): pass\n     def on_pong(self, message): pass\n     def on_reject(self, message): pass\n     def on_sendcmpct(self, message): pass"
      },
      {
        "sha": "21856e48b979686732056b04938c769e9a3846b0",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4e0c3b090079e27a917b8ff9467ad7ba28498a6/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4e0c3b090079e27a917b8ff9467ad7ba28498a6/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=a4e0c3b090079e27a917b8ff9467ad7ba28498a6",
        "patch": "@@ -152,6 +152,7 @@\n     'feature_versionbits_warning.py',\n     'rpc_preciousblock.py',\n     'wallet_importprunedfunds.py',\n+    'p2p_leak_tx.py',\n     'rpc_signmessage.py',\n     'feature_nulldummy.py',\n     'mempool_accept.py',"
      }
    ]
  },
  {
    "sha": "de9662b7b8e578d31401412e821c2d910d9ea80a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTk2NjJiN2I4ZTU3OGQzMTQwMTQxMmU4MjFjMmQ5MTBkOWVhODBh",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-10-09T03:04:37Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-10-09T03:04:37Z"
      },
      "message": "Satisfy the linter",
      "tree": {
        "sha": "a03b9ec365fbd725b54743caba7d5a0e94cb4911",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a03b9ec365fbd725b54743caba7d5a0e94cb4911"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de9662b7b8e578d31401412e821c2d910d9ea80a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de9662b7b8e578d31401412e821c2d910d9ea80a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/de9662b7b8e578d31401412e821c2d910d9ea80a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de9662b7b8e578d31401412e821c2d910d9ea80a/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a4e0c3b090079e27a917b8ff9467ad7ba28498a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4e0c3b090079e27a917b8ff9467ad7ba28498a6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a4e0c3b090079e27a917b8ff9467ad7ba28498a6"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 1,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b15c57f48e2e49a4a1fdabd43f38c7bae03dc464",
        "filename": "test/functional/p2p_leak_tx.py",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de9662b7b8e578d31401412e821c2d910d9ea80a/test/functional/p2p_leak_tx.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de9662b7b8e578d31401412e821c2d910d9ea80a/test/functional/p2p_leak_tx.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak_tx.py?ref=de9662b7b8e578d31401412e821c2d910d9ea80a",
        "patch": "@@ -5,12 +5,10 @@\n \"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\"\n \n from test_framework.messages import msg_getdata, CInv\n-from test_framework.mininode import mininode_lock, P2PDataStore\n+from test_framework.mininode import P2PDataStore\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n-    assert_greater_than,\n-    wait_until,\n )\n \n import time"
      }
    ]
  }
]