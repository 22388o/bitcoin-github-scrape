TheBlueMatt,2017-07-14T17:46:32Z,"utACK I know this is a super old issue but I find the current docs astoundingly confusing, can we try for 15?",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315422455,315422455,
instagibbs,2017-07-14T17:54:10Z,"@kallewoof I think you have experience with this call?\n\ndocumentation sounds reasonable, but I don't actually know how it's used.",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315424388,315424388,
RHavar,2017-07-14T18:00:59Z,"The way the API is designed to be used is like this:\n\nLet's say I care about only rescanning of 10:\n\n```\nlet confsCareAbout = 10\nlet  hash = """"\nwhile (true) {\n     let res = exec(`bitcoin-cli listsinceblock ${hash} ${confsCareAbout)`)\n     process(res.transactions)\n     hash = res.lastblock;\n}\n```\n\nIt's a pretty sweet work flow for handling deposits. Just unfortunately ",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315426136,315426136,
morcos,2017-07-14T18:10:51Z,"NACK as is\n\nThe documentation is very misleading.  But it needs to be made even more clear than this.\nPerhaps add ""Transactions with any number of confirmations in the range from blockhash to current tip (or the fork point if blockhash is not on current chain) will be returned."" somewhere\n",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315428628,315428628,
RHavar,2017-07-14T18:17:03Z,"> (or the fork point if blockhash is not on current chain)\n\nIs that what it actually does? o.0  If so thats ....bizarre and wtf.",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315430202,315430202,
TheBlueMatt,2017-07-14T18:23:32Z,"Yes, thats what it appears to have always done...docs need to be a shitload clearer here.",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315431747,315431747,
RHavar,2017-07-14T21:34:35Z,"I pushed another stab at documenting it based on what @morcos  said, but it honestly makes no sense to me. I assume I'm misunderstanding.\n\nLet's imagine I have the blocks:\n```\n           /--> C \nA--->B\n           \-->D -->E\n```\n\nWhere E is the main chain tip. And C is orphaned. \n\nSo you're saying if I call `listsinceblock C`, it's going to return me only transactions between ",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315473441,315473441,
morcos,2017-07-14T21:41:36Z,Yes it will return between B and E,https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315474776,315474776,
RHavar,2017-07-14T21:44:54Z,"Hm, so when you said:\n> Transactions with any number of confirmations in the range from blockhash to current tip (or the fork point if blockhash is not on current chain) will be returned.\n\nYou mean that just the `lastblock` returns $target_confirmations from the   (mainTip or convergencePoint) ?.\n\nBut this is independent to the transaction filtering stuff?",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315475408,315475408,
kallewoof,2017-07-15T01:11:47Z,"`target_confirmations` seems to be handled in a very weird way right now. It only affects the returned last block, and does not actually affect the transactions being returned in any way. I would declare this a bug, personally. The only time the value is used is at https://github.com/bitcoin/bitcoin/blob/0d457c7b274a66d66d59725f5fe1ee1cef5b6391/src/wallet/rpcwallet.cpp#L1859 where\n```C++\n    C",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315499412,315499412,
TheBlueMatt,2017-07-15T01:15:00Z,"@kallewoof you are correct, but that behavior long predates the documentation for the function. I have no idea if anyone uses its previous behavior, but assuming people test things before putting them in production, best to fix the docs and leave the behavior IMO.",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315499589,315499589,
kallewoof,2017-07-15T01:20:10Z,"@TheBlueMatt That makes sense to me.\n",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315499917,315499917,
RHavar,2017-07-15T01:51:03Z,"I don't think the behavior is a bug at all, it was intentionally designed for use in a loop like I describe in an [earlier comment](https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315426136).\n\nIt's actually a really nice and simple way to handle deposits, and I know a few people who do it that way.  Note how it works really well if your depositor goes down, because you keep storing ",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315501558,315501558,
morcos,2017-07-15T03:54:30Z,"ACK 52295ba\n\nI think that language is clear and accurate\n\n(except I'm not sure about putting brackets around the argument names in the help text, is that something we do anywhere else?)\n",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315507286,315507286,
RHavar,2017-07-15T03:57:32Z,"> (except I'm not sure about putting brackets around the argument names in the help text, is that something we do anywhere else?)\n\nI just copied it from the original. It's a bit messy, but it's pretty clear and makes things a lot less ambiguous. ",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315507428,315507428,
kallewoof,2017-07-15T05:02:31Z,"> (The only reason I don't handle deposits myself that way, is how it handles double spend (attempts) are weird and inconsistent, which make it very difficult to work with when you're showing unconfirmed stuff)\n\nThe reason why double spends are weird and inconsistent is probably because you are using target_confs > 1. This means if there's a 1-2 block fork, and your target_confs = 10 or someth",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315510166,315510166,
kallewoof,2017-07-15T08:06:13Z,My initial expectation was that transactions with less than target_confs confirmations (i.e. transactions in blocks newer than the returned lastblock at the end) would be excluded from the results. This would give you a buffer of 0-confs and 1-confs that are still at risk. That's not what is happening though.,https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-315518156,315518156,
laanwj,2017-07-25T12:13:19Z,"Needs rebase and addressing of @TheBlueMatt 's nit, if this is still to make 0.15",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-317718741,317718741,
RHavar,2017-07-25T13:29:23Z,"Ok, rebased and addressed Matt's nit",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-317737395,317737395,
RHavar,2017-07-25T19:20:30Z,"Ok, fixed my rebase fail...",https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-317844151,317844151,
TheBlueMatt,2017-07-25T19:43:39Z,utACK,https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-317850359,317850359,
laanwj,2017-07-26T06:45:00Z,utACK 9f8a46f,https://github.com/bitcoin/bitcoin/pull/10655#issuecomment-317963703,317963703,
TheBlueMatt,2017-07-14T18:05:52Z,"Maybe add a note that transactions with fewer confirmations than this are still included in the response, only lastblock is changed by this argument.",https://github.com/bitcoin/bitcoin/pull/10655#discussion_r127515817,127515817,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-07-14T23:32:48Z,"No, the value returned is *always* the Nth-from-top block on the best chain.",https://github.com/bitcoin/bitcoin/pull/10655#discussion_r127567373,127567373,src/wallet/rpcwallet.cpp
RHavar,2017-07-14T23:36:57Z,"Yeah, that's what i thought >< ",https://github.com/bitcoin/bitcoin/pull/10655#discussion_r127567717,127567717,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-07-15T16:58:44Z,"""rescanning"" means something specific, maybe ""so you will be continually re-notified of transactions until they've reached 6 confirmations""",https://github.com/bitcoin/bitcoin/pull/10655#discussion_r127588303,127588303,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-07-25T19:05:43Z,Looks like a rebase error - you've removed the include_removed parameter here.,https://github.com/bitcoin/bitcoin/pull/10655#discussion_r129396912,129396912,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-07-25T19:07:08Z,"Rebase error here, too.",https://github.com/bitcoin/bitcoin/pull/10655#discussion_r129397310,129397310,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-07-25T19:07:33Z,Why did you delete the \n here?,https://github.com/bitcoin/bitcoin/pull/10655#discussion_r129397407,129397407,src/wallet/rpcwallet.cpp
RHavar,2017-07-25T19:11:09Z,"Sorry, yeah. I fail. Pushed a fix.",https://github.com/bitcoin/bitcoin/pull/10655#discussion_r129398267,129398267,src/wallet/rpcwallet.cpp
RHavar,2017-07-25T19:11:24Z,some how screwed that up in the rebase. fixed,https://github.com/bitcoin/bitcoin/pull/10655#discussion_r129398328,129398328,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-07-25T19:18:30Z,"I dont think ""bestblockhash"" is one word.",https://github.com/bitcoin/bitcoin/pull/10655#discussion_r129399962,129399962,src/wallet/rpcwallet.cpp
RHavar,2017-07-25T19:26:25Z,Ok. 😭 ,https://github.com/bitcoin/bitcoin/pull/10655#discussion_r129401704,129401704,src/wallet/rpcwallet.cpp
