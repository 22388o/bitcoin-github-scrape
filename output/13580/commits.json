[
  {
    "sha": "49d1f4cdde6d3289cb8c18ad35fc739371e25388",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OWQxZjRjZGRlNmQzMjg5Y2I4YzE4YWQzNWZjNzM5MzcxZTI1Mzg4",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-07-01T13:58:37Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-07-01T15:37:28Z"
      },
      "message": "Detect if char equals int8_t",
      "tree": {
        "sha": "94b199414d29ad742b3ed089a5014123cd03d922",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/94b199414d29ad742b3ed089a5014123cd03d922"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49d1f4cdde6d3289cb8c18ad35fc739371e25388",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49d1f4cdde6d3289cb8c18ad35fc739371e25388",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49d1f4cdde6d3289cb8c18ad35fc739371e25388",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49d1f4cdde6d3289cb8c18ad35fc739371e25388/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "686e97a0c7358291d628213447cf33e99cde7ce8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/686e97a0c7358291d628213447cf33e99cde7ce8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/686e97a0c7358291d628213447cf33e99cde7ce8"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9fba9d085145f1bf7318b3c9d846d4400bec1a3e",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49d1f4cdde6d3289cb8c18ad35fc739371e25388/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49d1f4cdde6d3289cb8c18ad35fc739371e25388/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=49d1f4cdde6d3289cb8c18ad35fc739371e25388",
        "patch": "@@ -808,6 +808,14 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n  [ AC_MSG_RESULT(no)]\n )\n \n+AC_MSG_CHECKING(for if type char equals int8_t)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdint.h>\n+  #include <type_traits>]],\n+ [[ static_assert(std::is_same<int8_t, char>::value, \"\"); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(CHAR_EQUALS_INT8, 1,[Define this symbol if type char equals int8_t]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n # Check for reduced exports\n if test x$use_reduce_exports = xyes; then\n   AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],"
      },
      {
        "sha": "df3b47ba87ca64d88ef51ee42cf480b3f0de73fa",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49d1f4cdde6d3289cb8c18ad35fc739371e25388/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49d1f4cdde6d3289cb8c18ad35fc739371e25388/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=49d1f4cdde6d3289cb8c18ad35fc739371e25388",
        "patch": "@@ -189,7 +189,9 @@ template<typename X> const X& ReadWriteAsHelper(const X& x) { return x; }\n         SerializationOp(s, CSerActionUnserialize());                  \\\n     }\n \n+#ifndef CHAR_EQUALS_INT8\n template<typename Stream> inline void Serialize(Stream& s, char a    ) { ser_writedata8(s, a); } // TODO Get rid of bare char\n+#endif\n template<typename Stream> inline void Serialize(Stream& s, int8_t a  ) { ser_writedata8(s, a); }\n template<typename Stream> inline void Serialize(Stream& s, uint8_t a ) { ser_writedata8(s, a); }\n template<typename Stream> inline void Serialize(Stream& s, int16_t a ) { ser_writedata16(s, a); }\n@@ -205,7 +207,9 @@ template<typename Stream, int N> inline void Serialize(Stream& s, const unsigned\n template<typename Stream> inline void Serialize(Stream& s, const Span<const unsigned char>& span) { s.write(CharCast(span.data()), span.size()); }\n template<typename Stream> inline void Serialize(Stream& s, const Span<unsigned char>& span) { s.write(CharCast(span.data()), span.size()); }\n \n+#ifndef CHAR_EQUALS_INT8\n template<typename Stream> inline void Unserialize(Stream& s, char& a    ) { a = ser_readdata8(s); } // TODO Get rid of bare char\n+#endif\n template<typename Stream> inline void Unserialize(Stream& s, int8_t& a  ) { a = ser_readdata8(s); }\n template<typename Stream> inline void Unserialize(Stream& s, uint8_t& a ) { a = ser_readdata8(s); }\n template<typename Stream> inline void Unserialize(Stream& s, int16_t& a ) { a = ser_readdata16(s); }"
      }
    ]
  }
]