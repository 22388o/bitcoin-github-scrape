gmaxwell,2015-11-03T22:09:48Z,"ConceptACK, will review further and test.\n",https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-153505158,153505158,
sipa,2015-11-11T07:59:01Z,"Untested, code review ACK. Needs a unit test, though.\n",https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-155697633,155697633,
sipa,2015-11-11T08:22:34Z,Together with #5967 it should be possible to also avoid the db read that's still done for coinbase transactions.\n,https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-155701630,155701630,
morcos,2015-11-12T02:34:16Z,"@sipa I'm not sure if this was the kind of unit test that you had in mind?  I thought it was important to actually test UpdateCoins instead of modifyNewCoins directly because it's how it is used that matters.\n\nThis test passes on master, passes on this PR, but fails when UpdateCoins is changed to just mark coinbases as un-FRESH but still skip the lookup (assuming the assert is commented out to p",https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-155978638,155978638,
sipa,2015-11-12T14:16:29Z,@morcos Awesome test.\n,https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-156113106,156113106,
morcos,2015-11-12T14:57:54Z,ok fixed the mess with the random nValue.\n,https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-156128886,156128886,
sipa,2015-11-12T15:04:42Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-156132015,156132015,
jgarzik,2015-11-12T15:26:18Z,lightly tested ACK\n,https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-156137582,156137582,
laanwj,2015-11-13T13:05:04Z,Code review ACK\n,https://github.com/bitcoin/bitcoin/pull/6932#issuecomment-156426767,156426767,
laanwj,2015-11-13T12:39:37Z,"If the purpose is to do this every 100 iterations, why use random?\nEither the comment or the code is wrong :)\n",https://github.com/bitcoin/bitcoin/pull/6932#discussion_r44777833,44777833,src/test/coins_tests.cpp
sipa,2015-11-13T12:43:07Z,"It's copied from the test above that I wrote. It's intended to be random, so the comment is wrong :)\n",https://github.com/bitcoin/bitcoin/pull/6932#discussion_r44778108,44778108,src/test/coins_tests.cpp
laanwj,2015-11-13T13:04:37Z,"If this was in production code I'd prefer to use a RAII pointer type (such as boost::shared_ptr) inside stack instead of explicit delete, because of exception safety and memory leaks.\nAs it is just the tests, mehh.\n",https://github.com/bitcoin/bitcoin/pull/6932#discussion_r44779703,44779703,src/test/coins_tests.cpp
sipa,2015-11-13T13:06:47Z,"I believe I originally tried using boost::unique_ptr, but you can't use\nthat inside stl containers.\n",https://github.com/bitcoin/bitcoin/pull/6932#discussion_r44779920,44779920,src/test/coins_tests.cpp
laanwj,2015-11-13T13:19:09Z,"Right - I think shared_ptr is the only boost pointer you can use inside containers.\n\nEdit: with **c++11** unique_ptr it should be possible, though, I guess we can change it by then :)\n",https://github.com/bitcoin/bitcoin/pull/6932#discussion_r44780905,44780905,src/test/coins_tests.cpp
