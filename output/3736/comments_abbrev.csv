cozz,2014-02-24T14:18:24Z,update:\n- return 1 in the case of an exception\n,https://github.com/bitcoin/bitcoin/pull/3736#issuecomment-35889786,35889786,
laanwj,2014-02-24T14:23:55Z,ACK on code changes (didn't test yet)\n,https://github.com/bitcoin/bitcoin/pull/3736#issuecomment-35890285,35890285,
laanwj,2014-02-25T11:15:41Z,"```\n$ src/bitcoin-cli help; echo $?\n...\n0\n\n$ src/bitcoin-cli; echo $?\n... [help message] ...\n1\n\n$ src/bitcoin-cli sendtoaddress ""1234"" 1.0; echo $?\nerror: {""code"":-5,""message"":""Invalid Bitcoin address""}\n5\n\nsrc/bitcoin-cli -rpcport=6667 help; echo $?\nerror: couldn't connect to server\n87\n```\n\nACK\n",https://github.com/bitcoin/bitcoin/pull/3736#issuecomment-35997515,35997515,
laanwj,2014-02-25T14:18:18Z,"Nothing new in this pull, but I wonder why this returns 87. IMO it should simply be 1 (=-RPC_MISC_ERROR): https://github.com/bitcoin/bitcoin/blob/master/src/rpcclient.cpp#L236\n",https://github.com/bitcoin/bitcoin/pull/3736#issuecomment-36011025,36011025,
mcassano,2014-02-25T23:29:15Z,cozz: Can you refactor the 1 and 0 into RET_SUCCESS and RET_FAIL variables?\n,https://github.com/bitcoin/bitcoin/pull/3736#issuecomment-36072458,36072458,
laanwj,2014-02-26T06:24:54Z,"RET_SUCCESS / RET_FAIL is not any POSIX or C standard is it? We're also not using them in any other place at the moment.\n\nIf you want to use constants, using abs(constant_from_RPCErrorCode) from src/rpcprotocol.h would make more sense as that's where the error code that are returned by CommandLineRPC (and thus by the -cli now) come from.\n",https://github.com/bitcoin/bitcoin/pull/3736#issuecomment-36094700,36094700,
cozz,2014-02-26T11:41:22Z,"update:\n- replace 1 with abs(RPC_MISC_ERROR)\n- replace 87 with abs(RPC_MISC_ERROR)\n\nWe might break a script by changing this error code, but should be very unlikely.\n",https://github.com/bitcoin/bitcoin/pull/3736#issuecomment-36116593,36116593,
BitcoinPullTester,2014-02-26T11:50:50Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/875acdf78693332a1500557ee728a4341dbe2d4c for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3736#issuecomment-36117280,36117280,
laanwj,2014-02-26T12:07:26Z,ACK on the abs(RPC_MISC_ERROR) change.\n,https://github.com/bitcoin/bitcoin/pull/3736#issuecomment-36118436,36118436,
laanwj,2014-02-24T13:55:54Z,Maybe we should also return 1 in the case of an exception (so don't default ret to 0)\n,https://github.com/bitcoin/bitcoin/pull/3736#discussion_r9991316,9991316,src/bitcoin-cli.cpp
cozz,2014-02-24T14:02:08Z,"Yes, I was also thinking about that, but I was not sure.\nSo I will update the pull then.\n",https://github.com/bitcoin/bitcoin/pull/3736#discussion_r9991498,9991498,src/bitcoin-cli.cpp
laanwj,2014-02-26T12:06:29Z,"Execution will never get here. PrintException does a re-throw unlike PrintExceptionContinue. I'd never code it that way and would put the throw in the catch() statement itself for clarity, but this is part of our legacy.\n",https://github.com/bitcoin/bitcoin/pull/3736#discussion_r10077266,10077266,src/rpcclient.cpp
cozz,2014-02-26T12:15:03Z,I see. Removing this then.\n,https://github.com/bitcoin/bitcoin/pull/3736#discussion_r10077485,10077485,src/rpcclient.cpp
