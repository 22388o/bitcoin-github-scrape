[
  {
    "sha": "1687cb4a879ee6ec8c5abf20a2c92f5fe201a66b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNjg3Y2I0YTg3OWVlNmVjOGM1YWJmMjBhMmM5MmY1ZmUyMDFhNjZi",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-12-12T01:32:44Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2018-02-08T21:06:43Z"
      },
      "message": "Refactor: One CBaseChainParams should be enough",
      "tree": {
        "sha": "892d1ccae0d6427e9e50824547935563602332af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/892d1ccae0d6427e9e50824547935563602332af"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1687cb4a879ee6ec8c5abf20a2c92f5fe201a66b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJafLvmAAoJEIhmwY6hyUSicnQP/idJ6GS6dKSDy8Ph26yGs48u\nCtPWfl1tS9o1WGWTjSN1XXvJPnZBzTskd8CfWmRjWHwW8SSutdJokXAoUTaNnrMH\nnIPdor0C55xVLjiJDT/2+ResVdXGhYdPAA7GXKmlQVKDOLBELJp8Oj7syUlfWovn\nr01nmtyerFxA2dAOrSNlkY+I5eqhq++Bp6HbnO4CS5NHYDapkkjvtAzQTCFOq4te\nEDDZ0mqN5kjGj0CetzI059X5fQI+VCEyvSkBflpH5Q6OsgVO4KgaoorNOBQDqGDE\nR2mlVCghdp7IRC0teeo9vj/c3ZTzYpEKSl7cdnEELsn/P8N2PzKF6P6tUuhmP+y7\nli41c/6qkKjjSh7AojNY7F0g5KhsBb43rtSY2DZzJ6WChJRvfl56qCQbtWc5sQgu\nJNUGvKdGF6ia7wAbF2lQZJMWXyFfFZmiLc0eOouRR4rzZ+P4G6W6rQe6zls11G6o\nu/kfoNzehxGcxrEQGSWhWKtrLyoaZWY0+wU0a8BfFYd8FucorH5UM4E8BS7sF2z8\nPC3sqFIGRQnjZe9ci6q8Inpm93KP1tlnc1jhs0UCUAQudnGm1qt5rSVo6YPkmJTG\nZ1fwF9gfooWSrbDHqhHFVN630hPjep2rUSUGUF53gaSWw9YA4htv1Lv+FRjHhsEM\n0unoNzni04pIkRTZ/LGx\n=4tNI\n-----END PGP SIGNATURE-----",
        "payload": "tree 892d1ccae0d6427e9e50824547935563602332af\nparent d405beea26c1569f46cf50ef71b376c9487ce361\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1513042364 +0100\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1518124003 +0100\n\nRefactor: One CBaseChainParams should be enough\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1687cb4a879ee6ec8c5abf20a2c92f5fe201a66b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1687cb4a879ee6ec8c5abf20a2c92f5fe201a66b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1687cb4a879ee6ec8c5abf20a2c92f5fe201a66b/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d405beea26c1569f46cf50ef71b376c9487ce361",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d405beea26c1569f46cf50ef71b376c9487ce361",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d405beea26c1569f46cf50ef71b376c9487ce361"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 6,
      "deletions": 43
    },
    "files": [
      {
        "sha": "a04258fd409ab0a98000fad0291aa7f1fe4c8a01",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 41,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1687cb4a879ee6ec8c5abf20a2c92f5fe201a66b/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1687cb4a879ee6ec8c5abf20a2c92f5fe201a66b/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=1687cb4a879ee6ec8c5abf20a2c92f5fe201a66b",
        "patch": "@@ -24,44 +24,6 @@ void AppendParamsHelpMessages(std::string& strUsage, bool debugHelp)\n     strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test chain\"));\n }\n \n-/**\n- * Main network\n- */\n-class CBaseMainParams : public CBaseChainParams\n-{\n-public:\n-    CBaseMainParams()\n-    {\n-        nRPCPort = 8332;\n-    }\n-};\n-\n-/**\n- * Testnet (v3)\n- */\n-class CBaseTestNetParams : public CBaseChainParams\n-{\n-public:\n-    CBaseTestNetParams()\n-    {\n-        nRPCPort = 18332;\n-        strDataDir = \"testnet3\";\n-    }\n-};\n-\n-/*\n- * Regression test\n- */\n-class CBaseRegTestParams : public CBaseChainParams\n-{\n-public:\n-    CBaseRegTestParams()\n-    {\n-        nRPCPort = 18443;\n-        strDataDir = \"regtest\";\n-    }\n-};\n-\n static std::unique_ptr<CBaseChainParams> globalChainBaseParams;\n \n const CBaseChainParams& BaseParams()\n@@ -73,11 +35,11 @@ const CBaseChainParams& BaseParams()\n std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain)\n {\n     if (chain == CBaseChainParams::MAIN)\n-        return std::unique_ptr<CBaseChainParams>(new CBaseMainParams());\n+        return MakeUnique<CBaseChainParams>(\"\", 8332);\n     else if (chain == CBaseChainParams::TESTNET)\n-        return std::unique_ptr<CBaseChainParams>(new CBaseTestNetParams());\n+        return MakeUnique<CBaseChainParams>(\"testnet3\", 18332);\n     else if (chain == CBaseChainParams::REGTEST)\n-        return std::unique_ptr<CBaseChainParams>(new CBaseRegTestParams());\n+        return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\n     else\n         throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }"
      },
      {
        "sha": "2cb860380ef8ce771a3bdbd7f1b8fc6de0c5f713",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1687cb4a879ee6ec8c5abf20a2c92f5fe201a66b/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1687cb4a879ee6ec8c5abf20a2c92f5fe201a66b/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=1687cb4a879ee6ec8c5abf20a2c92f5fe201a66b",
        "patch": "@@ -24,9 +24,10 @@ class CBaseChainParams\n     const std::string& DataDir() const { return strDataDir; }\n     int RPCPort() const { return nRPCPort; }\n \n-protected:\n-    CBaseChainParams() {}\n+    CBaseChainParams() = delete;\n+    CBaseChainParams(const std::string& data_dir, int rpc_port) : nRPCPort(rpc_port), strDataDir(data_dir) {}\n \n+private:\n     int nRPCPort;\n     std::string strDataDir;\n };"
      }
    ]
  }
]