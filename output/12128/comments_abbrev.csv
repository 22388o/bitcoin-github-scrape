jtimon,2018-01-11T20:09:29Z,Fixed nits,https://github.com/bitcoin/bitcoin/pull/12128#issuecomment-357046771,357046771,
promag,2018-01-11T20:54:19Z,utACK after https://github.com/bitcoin/bitcoin/pull/12128#discussion_r160762413 is addressed.,https://github.com/bitcoin/bitcoin/pull/12128#issuecomment-357058085,357058085,
jtimon,2018-01-11T22:20:19Z,Fixed last nit (using util function MakeUnique).,https://github.com/bitcoin/bitcoin/pull/12128#issuecomment-357080429,357080429,
jtimon,2018-02-08T21:09:05Z,Fixed nit (moved to deleted constructor).,https://github.com/bitcoin/bitcoin/pull/12128#issuecomment-364248915,364248915,
MarcoFalke,2018-02-08T21:24:20Z,utACK 1687cb4a879ee6ec8c5abf20a2c92f5fe201a66b,https://github.com/bitcoin/bitcoin/pull/12128#issuecomment-364252951,364252951,
jimpo,2018-02-08T23:39:33Z,utACK 1687cb4,https://github.com/bitcoin/bitcoin/pull/12128#issuecomment-364286322,364286322,
promag,2018-02-09T00:04:55Z,utACK 1687cb4. Nice change.,https://github.com/bitcoin/bitcoin/pull/12128#issuecomment-364291147,364291147,
ajtowns,2018-02-09T03:18:36Z,utACK 1687cb4a879ee6ec8c5abf20a2c92f5fe201a66b,https://github.com/bitcoin/bitcoin/pull/12128#issuecomment-364323571,364323571,
TheBlueMatt,2018-01-09T21:39:16Z,codestyle: just use data_dir and rpc_port.,https://github.com/bitcoin/bitcoin/pull/12128#discussion_r160532218,160532218,src/chainparamsbase.h
jimpo,2018-01-10T18:33:17Z,"Now that subclasses are removed, these can be private I think.",https://github.com/bitcoin/bitcoin/pull/12128#discussion_r160761802,160761802,src/chainparamsbase.h
jimpo,2018-01-10T18:34:49Z,Maybe use C++11 deleted function syntax? `CBaseChainParams() = delete`.,https://github.com/bitcoin/bitcoin/pull/12128#discussion_r160762165,160762165,src/chainparamsbase.h
jimpo,2018-01-10T18:35:47Z,"nit: Could use `MakeUnique<CBaseChainParams>("""", 8332)`",https://github.com/bitcoin/bitcoin/pull/12128#discussion_r160762413,160762413,src/chainparamsbase.cpp
MarcoFalke,2018-01-10T19:03:37Z,"and then `nRPCPort(rpc_port), strDataDir(data_dir) {}` constructor initializer list.",https://github.com/bitcoin/bitcoin/pull/12128#discussion_r160769482,160769482,src/chainparamsbase.h
jtimon,2018-01-11T20:14:49Z,"I tried, but it seems it's a C++14 feature, not C++11. :(",https://github.com/bitcoin/bitcoin/pull/12128#discussion_r161063709,161063709,src/chainparamsbase.cpp
ryanofsky,2018-01-11T20:35:22Z,"c++14 provides make_unique, but MakeUnique is just a function in util:\n\nhttps://github.com/bitcoin/bitcoin/blob/0910cbe4ef31eb95fd76c7c2f820419fe64a3150/src/util.h#L336-L338",https://github.com/bitcoin/bitcoin/pull/12128#discussion_r161068425,161068425,src/chainparamsbase.cpp
jimpo,2018-01-31T22:25:18Z,@jtimon ^,https://github.com/bitcoin/bitcoin/pull/12128#discussion_r165207333,165207333,src/chainparamsbase.h
ajtowns,2018-02-01T01:55:04Z,"Having a non-default constructor already prevents automatic declaration of the default constructor; but ""CBaseChainParams() = delete;"" seems clearer still.\n\nAlso, since nRPCPort and strDataDir are set via initializer list, and aren't fiddled with later (they're private and all the member functions are marked const), they could be marked ""const"" too.\n\nTested with these changes:\n\n```\n+",https://github.com/bitcoin/bitcoin/pull/12128#discussion_r165241490,165241490,src/chainparamsbase.h
jtimon,2018-02-01T21:27:14Z,"> Having a non-default constructor already prevents automatic declaration of the default constructor\n\nDoes it? I really think that's not the case, do you have any reference?\n\n> but ""CBaseChainParams() = delete;"" seems clearer still.\n\nPerhaps. I've never seen this contruct but if people prefer this I'm happy to change it.",https://github.com/bitcoin/bitcoin/pull/12128#discussion_r165492616,165492616,src/chainparamsbase.h
ajtowns,2018-02-02T03:29:54Z,"(`= delete` is new in C++11)\n\nReference: http://en.cppreference.com/w/cpp/language/default_constructor\n\n> If no user-declared constructors of any kind are provided for a class type (struct, class, or union), the compiler will always declare a default constructor as an inline public member of its class. \n>\n> [[c++11:]] If some user-declared  constructors are present, the user may still ",https://github.com/bitcoin/bitcoin/pull/12128#discussion_r165551413,165551413,src/chainparamsbase.h
jtimon,2018-02-06T03:10:20Z,"Thinking more about this, I see how your interest in also prohibiting the copy constructor and the override of the assign operator may make sense in many cases, but I think in this case we're just fine prohibiting only the default contructor. Anything copied from an instance initialized with the parametrized contructor should be fine.\nBut thank you for teaching me newer c++ features, I love to b",https://github.com/bitcoin/bitcoin/pull/12128#discussion_r166177008,166177008,src/chainparamsbase.h
