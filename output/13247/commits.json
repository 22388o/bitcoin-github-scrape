[
  {
    "sha": "9994d01d8b5aacc315bf985149441692b3abaf1a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTk0ZDAxZDhiNWFhY2MzMTViZjk4NTE0OTQ0MTY5MmIzYWJhZjFh",
    "commit": {
      "author": {
        "name": "Jesse Cohen",
        "email": "jc@jc.lol",
        "date": "2018-04-17T21:05:08Z"
      },
      "committer": {
        "name": "Jesse Cohen",
        "email": "jc@jc.lol",
        "date": "2018-05-18T15:50:23Z"
      },
      "message": "Add Unit Test for SingleThreadedSchedulerClient\n\nEnsures ordering of callbacks within a SingleThreadedSchedulerClient\nwith respect to each other",
      "tree": {
        "sha": "577f3ec24667fea2d12fd221a79514f87c4b14c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/577f3ec24667fea2d12fd221a79514f87c4b14c5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9994d01d8b5aacc315bf985149441692b3abaf1a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9994d01d8b5aacc315bf985149441692b3abaf1a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9994d01d8b5aacc315bf985149441692b3abaf1a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9994d01d8b5aacc315bf985149441692b3abaf1a/comments",
    "author": {
      "login": "skeees",
      "id": 195769,
      "node_id": "MDQ6VXNlcjE5NTc2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skeees",
      "html_url": "https://github.com/skeees",
      "followers_url": "https://api.github.com/users/skeees/followers",
      "following_url": "https://api.github.com/users/skeees/following{/other_user}",
      "gists_url": "https://api.github.com/users/skeees/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skeees/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
      "organizations_url": "https://api.github.com/users/skeees/orgs",
      "repos_url": "https://api.github.com/users/skeees/repos",
      "events_url": "https://api.github.com/users/skeees/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skeees/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "skeees",
      "id": 195769,
      "node_id": "MDQ6VXNlcjE5NTc2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skeees",
      "html_url": "https://github.com/skeees",
      "followers_url": "https://api.github.com/users/skeees/followers",
      "following_url": "https://api.github.com/users/skeees/following{/other_user}",
      "gists_url": "https://api.github.com/users/skeees/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skeees/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
      "organizations_url": "https://api.github.com/users/skeees/orgs",
      "repos_url": "https://api.github.com/users/skeees/repos",
      "events_url": "https://api.github.com/users/skeees/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skeees/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "34dd1a6d5e3610c2cbff76422d6a653b1acf5abc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34dd1a6d5e3610c2cbff76422d6a653b1acf5abc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/34dd1a6d5e3610c2cbff76422d6a653b1acf5abc"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 43,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b1ea4b6fabf2ebcae3c9ff4371ace41f38f6052b",
        "filename": "src/test/scheduler_tests.cpp",
        "status": "modified",
        "additions": 43,
        "deletions": 1,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9994d01d8b5aacc315bf985149441692b3abaf1a/src/test/scheduler_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9994d01d8b5aacc315bf985149441692b3abaf1a/src/test/scheduler_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/scheduler_tests.cpp?ref=9994d01d8b5aacc315bf985149441692b3abaf1a",
        "patch": "@@ -65,7 +65,7 @@ BOOST_AUTO_TEST_CASE(manythreads)\n     size_t nTasks = microTasks.getQueueInfo(first, last);\n     BOOST_CHECK(nTasks == 0);\n \n-    for (int i = 0; i < 100; i++) {\n+    for (int i = 0; i < 100; ++i) {\n         boost::chrono::system_clock::time_point t = now + boost::chrono::microseconds(randomMsec(rng));\n         boost::chrono::system_clock::time_point tReschedule = now + boost::chrono::microseconds(500 + randomMsec(rng));\n         int whichCounter = zeroToNine(rng);\n@@ -112,4 +112,46 @@ BOOST_AUTO_TEST_CASE(manythreads)\n     BOOST_CHECK_EQUAL(counterSum, 200);\n }\n \n+BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n+{\n+    CScheduler scheduler;\n+\n+    // each queue should be well ordered with respect to itself but not other queues\n+    SingleThreadedSchedulerClient queue1(&scheduler);\n+    SingleThreadedSchedulerClient queue2(&scheduler);\n+\n+    // create more threads than queues\n+    // if the queues only permit execution of one task at once then\n+    // the extra threads should effectively be doing nothing\n+    // if they don't we'll get out of order behaviour\n+    boost::thread_group threads;\n+    for (int i = 0; i < 5; ++i) {\n+        threads.create_thread(boost::bind(&CScheduler::serviceQueue, &scheduler));\n+    }\n+\n+    // these are not atomic, if SinglethreadedSchedulerClient prevents\n+    // parallel execution at the queue level no synchronization should be required here\n+    int counter1 = 0;\n+    int counter2 = 0;\n+\n+    // just simply count up on each queue - if execution is properly ordered then\n+    // the callbacks should run in exactly the order in which they were enqueued\n+    for (int i = 0; i < 100; ++i) {\n+        queue1.AddToProcessQueue([i, &counter1]() {\n+            BOOST_CHECK_EQUAL(i, counter1++);\n+        });\n+\n+        queue2.AddToProcessQueue([i, &counter2]() {\n+            BOOST_CHECK_EQUAL(i, counter2++);\n+        });\n+    }\n+\n+    // finish up\n+    scheduler.stop(true);\n+    threads.join_all();\n+\n+    BOOST_CHECK_EQUAL(counter1, 100);\n+    BOOST_CHECK_EQUAL(counter2, 100);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "b296b425a7d35a285764d8b5be09a069a9a5a020",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjk2YjQyNWE3ZDM1YTI4NTc2NGQ4YjViZTA5YTA2OWE5YTVhMDIw",
    "commit": {
      "author": {
        "name": "Jesse Cohen",
        "email": "jc@jc.lol",
        "date": "2018-05-16T15:10:31Z"
      },
      "committer": {
        "name": "Jesse Cohen",
        "email": "jc@jc.lol",
        "date": "2018-07-30T23:41:59Z"
      },
      "message": "Update documentation for SingleThreadedSchedulerClient() to specify the memory model",
      "tree": {
        "sha": "440d0b8cb46fb33febf4ba942a2eb044daebfc16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/440d0b8cb46fb33febf4ba942a2eb044daebfc16"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b296b425a7d35a285764d8b5be09a069a9a5a020",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b296b425a7d35a285764d8b5be09a069a9a5a020",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b296b425a7d35a285764d8b5be09a069a9a5a020",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b296b425a7d35a285764d8b5be09a069a9a5a020/comments",
    "author": {
      "login": "skeees",
      "id": 195769,
      "node_id": "MDQ6VXNlcjE5NTc2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skeees",
      "html_url": "https://github.com/skeees",
      "followers_url": "https://api.github.com/users/skeees/followers",
      "following_url": "https://api.github.com/users/skeees/following{/other_user}",
      "gists_url": "https://api.github.com/users/skeees/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skeees/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
      "organizations_url": "https://api.github.com/users/skeees/orgs",
      "repos_url": "https://api.github.com/users/skeees/repos",
      "events_url": "https://api.github.com/users/skeees/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skeees/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "skeees",
      "id": 195769,
      "node_id": "MDQ6VXNlcjE5NTc2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skeees",
      "html_url": "https://github.com/skeees",
      "followers_url": "https://api.github.com/users/skeees/followers",
      "following_url": "https://api.github.com/users/skeees/following{/other_user}",
      "gists_url": "https://api.github.com/users/skeees/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skeees/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
      "organizations_url": "https://api.github.com/users/skeees/orgs",
      "repos_url": "https://api.github.com/users/skeees/repos",
      "events_url": "https://api.github.com/users/skeees/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skeees/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9994d01d8b5aacc315bf985149441692b3abaf1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9994d01d8b5aacc315bf985149441692b3abaf1a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9994d01d8b5aacc315bf985149441692b3abaf1a"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 14,
      "deletions": 3
    },
    "files": [
      {
        "sha": "f96efe9f6bfe3a29d15609658b755bcd2d1e0435",
        "filename": "src/scheduler.h",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b296b425a7d35a285764d8b5be09a069a9a5a020/src/scheduler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b296b425a7d35a285764d8b5be09a069a9a5a020/src/scheduler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.h?ref=b296b425a7d35a285764d8b5be09a069a9a5a020",
        "patch": "@@ -86,9 +86,13 @@ class CScheduler\n \n /**\n  * Class used by CScheduler clients which may schedule multiple jobs\n- * which are required to be run serially. Does not require such jobs\n- * to be executed on the same thread, but no two jobs will be executed\n- * at the same time.\n+ * which are required to be run serially. Jobs may not be run on the\n+ * same thread, but no two jobs will be executed\n+ * at the same time and memory will be release-acquire consistent\n+ * (the scheduler will internally do an acquire before invoking a callback\n+ * as well as a release at the end). In practice this means that a callback\n+ * B() will be able to observe all of the effects of callback A() which executed\n+ * before it.\n  */\n class SingleThreadedSchedulerClient {\n private:\n@@ -103,6 +107,13 @@ class SingleThreadedSchedulerClient {\n \n public:\n     explicit SingleThreadedSchedulerClient(CScheduler *pschedulerIn) : m_pscheduler(pschedulerIn) {}\n+\n+    /**\n+     * Add a callback to be executed. Callbacks are executed serially\n+     * and memory is sequentially consistent between callback executions.\n+     * Practially, this means that callbacks can behave as if they are executed\n+     * in order by a single thread.\n+     */\n     void AddToProcessQueue(std::function<void (void)> func);\n \n     // Processes all remaining queue members on the calling thread, blocking until queue is empty"
      }
    ]
  },
  {
    "sha": "cbeaa91dbb1bc3ee6c05f3ee55a71268b8db2035",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYmVhYTkxZGJiMWJjM2VlNmMwNWYzZWU1NWE3MTI2OGI4ZGIyMDM1",
    "commit": {
      "author": {
        "name": "Jesse Cohen",
        "email": "jc@jc.lol",
        "date": "2018-05-16T20:20:37Z"
      },
      "committer": {
        "name": "Jesse Cohen",
        "email": "jc@jc.lol",
        "date": "2018-07-30T23:41:59Z"
      },
      "message": "Update ValidationInterface() documentation to explicitly specify threading and memory model",
      "tree": {
        "sha": "afdb8bf551425194e3011f07e7187c36d831a3f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/afdb8bf551425194e3011f07e7187c36d831a3f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cbeaa91dbb1bc3ee6c05f3ee55a71268b8db2035",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbeaa91dbb1bc3ee6c05f3ee55a71268b8db2035",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cbeaa91dbb1bc3ee6c05f3ee55a71268b8db2035",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbeaa91dbb1bc3ee6c05f3ee55a71268b8db2035/comments",
    "author": {
      "login": "skeees",
      "id": 195769,
      "node_id": "MDQ6VXNlcjE5NTc2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skeees",
      "html_url": "https://github.com/skeees",
      "followers_url": "https://api.github.com/users/skeees/followers",
      "following_url": "https://api.github.com/users/skeees/following{/other_user}",
      "gists_url": "https://api.github.com/users/skeees/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skeees/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
      "organizations_url": "https://api.github.com/users/skeees/orgs",
      "repos_url": "https://api.github.com/users/skeees/repos",
      "events_url": "https://api.github.com/users/skeees/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skeees/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "skeees",
      "id": 195769,
      "node_id": "MDQ6VXNlcjE5NTc2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skeees",
      "html_url": "https://github.com/skeees",
      "followers_url": "https://api.github.com/users/skeees/followers",
      "following_url": "https://api.github.com/users/skeees/following{/other_user}",
      "gists_url": "https://api.github.com/users/skeees/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skeees/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
      "organizations_url": "https://api.github.com/users/skeees/orgs",
      "repos_url": "https://api.github.com/users/skeees/repos",
      "events_url": "https://api.github.com/users/skeees/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skeees/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b296b425a7d35a285764d8b5be09a069a9a5a020",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b296b425a7d35a285764d8b5be09a069a9a5a020",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b296b425a7d35a285764d8b5be09a069a9a5a020"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 15,
      "deletions": 0
    },
    "files": [
      {
        "sha": "00efc085b3a98c343517aa5d8eea6d39722b46da",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cbeaa91dbb1bc3ee6c05f3ee55a71268b8db2035/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cbeaa91dbb1bc3ee6c05f3ee55a71268b8db2035/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=cbeaa91dbb1bc3ee6c05f3ee55a71268b8db2035",
        "patch": "@@ -53,6 +53,21 @@ void CallFunctionInValidationInterfaceQueue(std::function<void ()> func);\n  */\n void SyncWithValidationInterfaceQueue();\n \n+/**\n+ * Implement this to subscribe to events generated in validation\n+ *\n+ * Each CValidationInterface() subscriber will receive event callbacks\n+ * in the order in which the events were generated by validation.\n+ * Furthermore, each ValidationInterface() subscriber may assume that\n+ * callbacks effectively run in a single thread with single-threaded\n+ * memory consistency. That is, for a given ValidationInterface()\n+ * instantiation, each callback will complete before the next one is\n+ * invoked. This means, for example when a block is connected that the\n+ * UpdatedBlockTip() callback may depend on an operation performed in\n+ * the BlockConnected() callback without worrying about explicit\n+ * synchronization. No ordering should be assumed across\n+ * ValidationInterface() subscribers.\n+ */\n class CValidationInterface {\n protected:\n     /**"
      }
    ]
  }
]