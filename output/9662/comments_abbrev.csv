TheBlueMatt,2017-02-01T21:23:51Z,"It seems somewhat strange that this is set per-run and not per-wallet. Indeed, if it were set per-wallet, an easy way to get the intended behavior here is to simply encrypt your wallet with a garbage passphrase such that it can no longer be opened (not to say we shouldn't do this, better UX around that is good, but it might be easier to review/write if it re-used that infrastructure).",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-276786662,276786662,
laanwj,2017-02-02T08:03:06Z,Concept ACK. I agree that this would be better as a mode on the wallet instead of yet another startup option.,https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-276891978,276891978,
NicolasDorier,2017-02-16T01:53:52Z,"I would like to rebase on top of that for https://github.com/bitcoin/bitcoin/pull/9728, can you rebase?\nI would switch that on if hdwatchonly is used.",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-280205031,280205031,
jonasschnelli,2017-02-17T09:11:11Z,"Added two commit.\n* First commit adds a facility to store and check wallet flags (64bit). Made DISABLE_PRIVATE_KEYS the first flag.\n* Second commit makes the disablehot function per wallet (no longer a global state)\n\nDisabling private keys on a wallet that already contains private keys is not possible (also the other way around).",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-280596351,280596351,
jonasschnelli,2017-03-03T15:36:09Z,"Needed rebase (#8775).\nTravis will fail because of the missing `assert_start_raises_init_error` (see #9832).",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-283985910,283985910,
laanwj,2017-03-06T09:13:54Z,"> ideal for a use-case where one likes to use Bitcoin-Core in conjunction with a hardware-wallet or another solutions for cold-stogare\n\nNice, so this guarantees that bitcoind process will contain no private key data at all?\nSeems like s a good step towards supporting hardware wallets too.\nConcept ACK.\n\nTravis should pass now that #9832 is merged.",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-284341246,284341246,
jonasschnelli,2017-03-06T09:31:54Z,"The `disablehot.py` now makes use of the new (#9832) `assert_start_raises_init_error` call.\n\n> Nice, so this guarantees that bitcoind process will contain no private key data at all?\n\nYes. Event the default key is disabled (while still detecting the first start correctly).",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-284345511,284345511,
jonasschnelli,2017-03-29T14:44:25Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-290112718,290112718,
laanwj,2017-05-02T13:32:20Z,"Needs rebase again (sorry)\nutACK otherwise.",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-298636396,298636396,
jonasschnelli,2017-05-04T13:11:09Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-299180562,299180562,
jonasschnelli,2017-05-05T07:27:38Z,"- Completely rewrote the commit history (as reported by @ryanofsky it was messy).\n- Fixed @ryanofsky points\n\nNo strong opinion if this should be called `-disableprivatekeys` (which somehow nails it but may confuse people who just want cold key storage). Other opinions?",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-299400065,299400065,
ryanofsky,2017-05-05T14:40:42Z,"utACK fcea55a6ec6be57ee96458bde6fb24656269d3ee\n\nChanges from previous review: pwalletMain removal, SetWalletFlag rename, error message tweaks, assert_raises_jsonrpc usage, and history cleanup.",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-299483081,299483081,
NicolasDorier,2017-05-06T08:46:42Z,utACK fcea55a6ec6be57ee96458bde6fb24656269d3ee,https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-299625564,299625564,
ryanofsky,2017-05-23T17:01:29Z,"This has 3 utACKs so I'm building it now to provide a little testing. Maybe this PR should also update `doc/release-notes.md` since it's adding a new option.\n\nOn ""private keys"" vs ""hot keys"" naming, ""private keys"" still sounds more comprehensible to me, but I wouldn't weigh my opinion very heavily if ""hot key"" is a term users will know.",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-303466826,303466826,
ryanofsky,2017-05-23T18:30:05Z,"Tested ACK fcea55a6ec6be57ee96458bde6fb24656269d3ee. Confirmed disablehot option prevents generating keys, persists across reload even when disablehot option not specified in later runs, and that it prevents loading pre-existing or non-disablehot wallets. I don't think I encountered any bugs, and it seems to me this PR works well and is safe to merge.\n\nI was surprised by two things, and maybe ",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-303490818,303490818,
jonasschnelli,2017-05-24T09:20:03Z,"Added two commits.\nThe first addresses the ""importprivkey"" / ""Importwallet"" issues reported by @ryanofsky (disable both commands in -disablehot mode).\nThe second fixes a rebase `pwallet`/`pwalletmain` issue.",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-303667459,303667459,
instagibbs,2017-06-19T13:34:03Z,"needs rebase, will review",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-309440853,309440853,
instagibbs,2017-06-19T14:20:14Z,"General comment while I wait for rebase: This is fundamentally in conflict with the hdwatchonly mode proposed in https://github.com/bitcoin/bitcoin/pull/9728 which was surprising to me. Perhaps the descriptions of the mode should stress that no (pub)key generation of any sort is allowed, or explicitly state that only imported watchonly keys are supported?\n\nAlso, I think to make this mode less ",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-309454311,309454311,
Sjors,2018-02-08T17:41:38Z,"Needs rebase.\n\nTend to agree that this should be a per wallet thing and that this should be set upon wallet creation, rather than application launch.\n\nIf I understand correctly this is purely a safety feature. But I wonder if it doesn't make too many assumptions.\n\nThe term watch-only wallet is ambiguous. It could mean that the user doesn't have access to private keys at all, or that th",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-364190676,364190676,
jonasschnelli,2018-02-28T13:25:15Z,"Rebased and fixed.\nRenamed `-disablehot` to `-disableprivatekeys`\n\nSince we have no dynamic wallet creation (something like #10740), disabling private keys is only possible during wallet creation and with the `-disableprivatekeys` option.\n\nUse case:\n* Splitting the private keys from the wallet (hardware wallets, cold storage, use wallet as pure index), one wants to make sure, fundrawtr",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-369238078,369238078,
jonasschnelli,2018-03-03T05:45:02Z,Rebased (and fixed travis issue),https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-370121406,370121406,
jonasschnelli,2018-03-18T09:30:05Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-373984128,373984128,
jonasschnelli,2018-04-11T07:29:15Z,"Had to rebase after #10244 (non trivial).\nGlad if utACKers can review again.",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-380355345,380355345,
kallewoof,2018-04-11T08:28:18Z,"Late so can be safely ignored, but we say `importprivkey` so maybe `disableprivkeys` for consistency? Will review.",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-380371005,380371005,
Sjors,2018-04-11T11:05:36Z,"Concept ACK on the use of flags that are stored in the wallet (I think I overlooked that the first time I reviewed). This prevents accidentally disabling the feature. I also think it's a safe choice that you can't enable this feature on a wallet that already has private keys.\n\nThere are some problems in a multi wallet environment though.\n\nIt correctly remembers which wallets have disabled ",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-380413793,380413793,
jonasschnelli,2018-06-13T20:46:31Z,"Overhauled this PR.\n* Removed the global `-disableprivatkeys` argument.\n* Added an `options` object to `createwallet` with currently a single boolean `disableprivatekeys`.",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-397080622,397080622,
Sjors,2018-06-14T12:18:07Z,"Much better!\n\nSome stray files made it into the PR though (Bitcoin-Core.*).",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-397273626,397273626,
jonasschnelli,2018-06-14T12:21:59Z,Thanks @Sjors. Removed the accidentally added IDE files.,https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-397274582,397274582,
jonasschnelli,2018-06-18T12:45:10Z,"Fixed @jnewbery s points.\n* Added `privatekeys_enabled` to `getwalletinfo`\n* Added unit test and own rpc test",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-398041800,398041800,
jonasschnelli,2018-06-21T14:11:40Z,Fixed remaining points reported by @jnewbery and @kallewoof ,https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-399117527,399117527,
jonasschnelli,2018-06-28T19:15:56Z,Fixed @jnewbery's nits.,https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-401143462,401143462,
jnewbery,2018-07-03T10:28:18Z,utACK 5caf38f42f34b2aec7440dec752c10856e5d85a7,https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-402098330,402098330,
laanwj,2018-07-04T13:13:47Z,utACK 5caf38f42f34b2aec7440dec752c10856e5d85a7,https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-402475579,402475579,
laanwj,2018-07-05T14:13:25Z,"@jonasschnelli didn't you accidentally remove the logic so that only\nchanges to the upper 32 bits are checked?\n\nOn Wed, Jul 4, 2018 at 5:01 PM, Jonas Schnelli <notifications@github.com>\nwrote:\n\n> *@jonasschnelli* commented on this pull request.\n> ------------------------------\n>\n> In src/wallet/wallet.cpp\n> <https://github.com/bitcoin/bitcoin/pull/9662#discussion_r200152951>:\n>\n> > +  ",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-402735925,402735925,
Sjors,2018-07-10T14:59:37Z,"Lightly tested by creating a wallet via RPC, seeing it appear in the GUI, importing a watch-only address and sending some coins to it from a normal wallet. That money doesn't show up, even after confirmation, until I restart.\n\nAfter restart, importing a watch-only address and sending money to it, that transaction shows up immediately.\n\n@jnewbery said somewhere above:\n\n> Named arguments",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-403854172,403854172,
jonasschnelli,2018-07-12T09:38:26Z,Rebased and fixed the upper-bits restriction (for the wallet flags) found by @laanwj (https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-402735925).,https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-404453233,404453233,
Sjors,2018-07-12T11:21:13Z,"Unhappy Travis for the Darwin machine:\n<img width=""1839"" alt=""schermafbeelding 2018-07-12 om 13 13 49"" src=""https://user-images.githubusercontent.com/10217/42629954-73b28e10-85d5-11e8-98e6-eed75f21bc06.png"">\n\nI these warnings too when locally on macOS:\n<img width=""1096"" alt=""schermafbeelding 2018-07-12 om 13 20 39"" src=""https://user-images.githubusercontent.com/10217/42630263-703a1eb4-85d6",https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-404479211,404479211,
jonasschnelli,2018-07-12T19:39:06Z,Fixed the rebase issue (the warning; requires `cs_KeyStore` instead of `cs_wallet` now).,https://github.com/bitcoin/bitcoin/pull/9662#issuecomment-404627147,404627147,
jonasschnelli,2017-02-17T09:37:35Z,"@MarcoFalke: any idea how I can make this pass? Right now, staring bitcoind in this case with this setup will cause bitcoind to write to stderr (and halt) which then result in pass=false in `rpc-tests.py`. But it's actually the correct behaviour.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r101719386,101719386,qa/rpc-tests/disablehot.py
MarcoFalke,2017-02-18T02:10:13Z,We might create a `assert_start_raises_init_error()` method. I will take a look at this tomorrow.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r101880736,101880736,qa/rpc-tests/disablehot.py
NicolasDorier,2017-02-20T05:11:45Z,"Kind of confusing....\nI thought this would be equivalent to `CWallet::SetWalletFlags(uint64_t flags, false)`.\n\n However  while `CWallet::SetWalletFlags(uint64_t flags, bool memonly)` set the flags to the indicated value, `CWallet::SetWalletFlag(uint64_t flag)` **appends** to it.\n\nMaybe you should rename to `AddWalletFlags`.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r101948618,101948618,src/wallet/wallet.cpp
NicolasDorier,2017-02-20T06:33:22Z,does the `[]` arguments is on purpose? because I think it makes `-disablehot` ignored,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r101954523,101954523,qa/rpc-tests/disablehot.py
saleemrashid,2017-02-20T07:03:48Z,"`CWallet::AddWalletFlags(uint64_t flags, book memonly)` seems most consistent.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r101956939,101956939,src/wallet/wallet.cpp
jonasschnelli,2017-02-21T13:51:29Z,"IMO set flags seems most appropriate here. Flags are not getting *appended*. Either you set or unset IMO. For consistency, we should have a `UnsetWalletFlag()`.\nBut I agree its kind of confusing that we have a `SetWalletFlags` (plural) method that is capable or re-setting all 64 flags.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r102210332,102210332,src/wallet/wallet.cpp
jonasschnelli,2017-02-21T13:52:15Z,"We start two nodes here, the first node without startup parameters (thats why there is the `[]`). Only second node has `-disablehot`.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r102210491,102210491,qa/rpc-tests/disablehot.py
saleemrashid,2017-02-21T17:04:04Z,"I think this method should be plural, since there is no distinction between a single flag and multiple flags in its operation and it might be useful to be able to do the latter.\n\nThen, of course, you have confusion. So, a verb change in the method name might be useful.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r102261457,102261457,src/wallet/wallet.cpp
NicolasDorier,2017-02-22T02:30:57Z,"@jonasschnelli the strange thing is that [SetWalletFlag](https://github.com/bitcoin/bitcoin/pull/9662#discussion-diff-101948618R1410) switch a bit, when [SetWalletFlags](https://github.com/jonasschnelli/bitcoin/blob/e581d843f06d5fe71a4662b122f94577e5dccd55/src/wallet/wallet.cpp#L1417) set the walletFlags to a specific value. I was expecting SetWalletFlags to switch several bits.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r102371289,102371289,src/wallet/wallet.cpp
jonasschnelli,2017-02-22T08:12:01Z,Maybe renaming `SetWalletFlags` (plural) to `OverwriteWalletFlags`?,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r102403291,102403291,src/wallet/wallet.cpp
NicolasDorier,2017-03-13T07:59:14Z,I think you should use `fFirstRun` here instead of `walletInstance->vchDefaultKey.IsValid()`,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r105604719,105604719,src/wallet/wallet.cpp
jonasschnelli,2017-03-13T08:07:10Z,At this point `fFirstRun` is always `false`. And I think this also works in conjunction with `salvagewallet`.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r105605594,105605594,src/wallet/wallet.cpp
NicolasDorier,2017-03-13T08:22:16Z,"Indeed. Might be out of this PR matter, in the case of hdwatchonly, `walletInstance->vchDefaultKey.IsValid()` will be true. So this would mean `disabledHot` is incompatible with hdwatchonly mode ?",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r105607706,105607706,src/wallet/wallet.cpp
NicolasDorier,2017-03-13T08:24:45Z,"OK forget what I said, there is no reason to have disabledHot with hdwatchonly at same time.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r105608044,105608044,src/wallet/wallet.cpp
ryanofsky,2017-05-04T16:00:10Z,"In commit ""Add -disablehot option to ensure pure watchonly-wallets""\n\nI don't understand why we want to call these ""hot keys"" and not ""private keys,"" but I guess I'm out of the loop on terminology not knowing precisely what a ""hot key"" is.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r114820212,114820212,src/wallet/wallet.cpp
ryanofsky,2017-05-04T16:29:33Z,"In commit ""Add -disablehot option to ensure pure watchonly-wallets""\n\nConsider using assert_raises_jsonrpc. (It's less verbose)",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r114827067,114827067,qa/rpc-tests/disablehot.py
ryanofsky,2017-05-04T16:54:41Z,"In commit ""Add -disablehot option to ensure pure watchonly-wallets""\n\nDo you think it might be better to fail earlier in CreateTransaction, regardless of the nChange > 0 condition? I'm thinking it might be, just so calls would fail consistently instead of sometimes randomly succeeding. But I don't have much understanding of the real-world use-cases for this, so this is just a thought.\n\nCons",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r114832472,114832472,src/wallet/wallet.cpp
ryanofsky,2017-05-04T17:03:59Z,"In commit ""Make -disablehot per wallet (remove global state)""\n\nExtra newline here",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r114834621,114834621,src/qt/walletmodel.cpp
ryanofsky,2017-05-04T18:53:59Z,"> Maybe renaming SetWalletFlags (plural) to OverwriteWalletFlags?\n\nSince this is doing an `|` I'd call it `AddFlags` (which conceivably could be paired with a `RemoveFlags` doing `& ~`).",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r114860167,114860167,src/wallet/wallet.cpp
ryanofsky,2017-05-04T19:03:45Z,"> Add `-disablehot` mode: a sane mode for watchonly-wallets\n\nMaybe the error message could suggest passing `-disablehot` to avoid the problem. I think it would make the context of the error easier to understand for someone not expecting it.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r114862421,114862421,src/wallet/wallet.cpp
jonasschnelli,2017-05-05T07:19:43Z,Falling earlier would disallow creating watch-only transactions (over fundrawtransaction).,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r114942079,114942079,src/wallet/wallet.cpp
instagibbs,2017-06-19T13:35:08Z,Maybe leave a comment here to make it clear there are two modes of detecting an initialized wallet here.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r122707827,122707827,src/wallet/wallet.cpp
instagibbs,2017-06-19T13:39:55Z,"Return condition for this function is never checked. Only used here: https://github.com/bitcoin/bitcoin/blob/master/src/wallet/wallet.cpp#L639\n\nFor this mode do we even need the encrypt functionality? ",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r122708992,122708992,src/wallet/wallet.cpp
jnewbery,2017-07-10T20:44:28Z,"Agree, and combine the two conditionals to make it clearer that that's what is happening.\n\n```\nfFirstRunRet = !vchDefaultKey.IsValid() && !IsWalletFlagSet(WALLET_FLAG_DISABLE_HOT_KEYS);\n```",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r126531651,126531651,src/wallet/wallet.cpp
jnewbery,2017-07-10T20:46:00Z,nit: place alphabetically (above `-disablewallet`),https://github.com/bitcoin/bitcoin/pull/9662#discussion_r126532024,126532024,src/wallet/wallet.cpp
jnewbery,2017-07-10T20:49:11Z,"This seems like the wrong error message: `You can't disable hot keys...` when the user has not specified the `-disablehot` parameter. Rather, this branch indicates some kind of wallet corruption: the DISABLE_HOT_KEYS flag is set, but the wallet contains private keys.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r126532744,126532744,src/wallet/wallet.cpp
jnewbery,2017-07-10T20:58:53Z,"You can avoid having to override this method by setting:\n\n```python\nself.extra_args = [[], ['-disablehot']]\n```\nin the `__init__()` method",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r126535278,126535278,test/functional/disablehot.py
jnewbery,2017-07-10T20:59:09Z,please replace `print()` calls with `self.log.info()`,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r126535353,126535353,test/functional/disablehot.py
jnewbery,2017-07-10T20:59:59Z,no `;` please :slightly_smiling_face: ,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r126535546,126535546,test/functional/disablehot.py
jnewbery,2017-07-10T21:00:51Z,Can you add a short docstring explaining what the test is testing and how it is testing?,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r126535722,126535722,test/functional/disablehot.py
jnewbery,2017-07-10T21:03:20Z,Consider running a linter like flake8 over python modules to check for common nits.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r126536260,126536260,test/functional/disablehot.py
luke-jr,2017-10-30T14:18:26Z,"I would think we should fail somehow, if an unrecognised flag is set?\n",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r147714977,147714977,src/wallet/walletdb.cpp
luke-jr,2017-10-30T14:24:01Z,"Why are we touching this logic at all? Seems we should just set a default key for watchonly-only wallets, until default keys are removed normally...\n",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r147716670,147716670,src/wallet/wallet.cpp
luke-jr,2017-10-30T14:24:16Z,"Prefer:\n\n```C++\nstrprintf(_(""Disable the possibility of hot keys (only watchonlys are possible in this mode; default: %u)""), DEFAULT_DISABLE_HOT_WALLET)\n```",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r147716738,147716738,src/wallet/wallet.cpp
luke-jr,2017-10-30T14:27:56Z,"This should at least be abstracted somehow. vchDefaultKey's existence is not exactly identical to ""does this wallet have keys?""",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r147717783,147717783,src/wallet/wallet.cpp
luke-jr,2017-10-30T14:28:52Z,"Drop the ""`(use -disablehot instead)`"", since that will also fail in a multiwallet scenario.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r147718072,147718072,src/wallet/wallet.cpp
luke-jr,2017-10-30T14:30:56Z,"This should also probably fake an encrypted wallet, so it can be read by older versions sanely.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r147718724,147718724,src/wallet/wallet.cpp
luke-jr,2017-10-30T14:33:05Z,"It doesn't make sense to mention the option here, since it's tied to the wallet and can't just be toggled...",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r147719458,147719458,src/wallet/rpcdump.cpp
luke-jr,2017-10-30T14:33:17Z,"It doesn't make sense to mention the option here, since it's tied to the wallet and can't just be toggled...\n",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r147719524,147719524,src/wallet/rpcdump.cpp
promag,2017-11-03T15:16:30Z,"```cpp\nui->receiveButton->setEnabled(!_model->hotKeysDisabled());\n```",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r148811301,148811301,src/qt/receivecoinsdialog.cpp
promag,2017-11-03T15:16:59Z,Drop outer `()`?,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r148811434,148811434,src/qt/walletmodel.cpp
promag,2017-11-03T15:26:27Z,Remove const.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r148814506,148814506,src/wallet/walletdb.cpp
promag,2017-11-03T15:26:42Z,Remove const.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r148814578,148814578,src/wallet/walletdb.h
promag,2017-11-03T15:27:26Z,`set_test_params` instead.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r148814805,148814805,test/functional/disablehot.py
jonasschnelli,2018-02-28T13:18:13Z,Why?,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r171240983,171240983,src/wallet/walletdb.cpp
kallewoof,2018-04-11T08:30:09Z,Typo: `uint64_t`,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r180673561,180673561,src/wallet/wallet.h
kallewoof,2018-04-11T08:30:39Z,Why?,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r180673696,180673696,src/wallet/walletdb.h
kallewoof,2018-04-11T08:32:17Z,μNit: Why not just `GetWalletFlag`?,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r180674148,180674148,src/wallet/wallet.cpp
kallewoof,2018-04-11T08:33:46Z,I wonder if this should `throw` here instead of being a `can-fail` method.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r180674529,180674529,src/wallet/wallet.cpp
kallewoof,2018-04-11T08:34:52Z,Nit: `} else {`,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r180674803,180674803,src/wallet/wallet.cpp
kallewoof,2018-04-11T08:35:29Z,Nit: `} else if (...) {`,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r180674966,180674966,src/wallet/wallet.cpp
kallewoof,2018-04-11T08:35:57Z,I think we prefer `nullptr` over `NULL` these days.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r180675089,180675089,src/wallet/wallet.cpp
kallewoof,2018-04-11T08:36:02Z,I think we prefer `nullptr` over `NULL` these days.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r180675114,180675114,src/wallet/wallet.cpp
kallewoof,2018-04-11T08:36:06Z,I think we prefer `nullptr` over `NULL` these days.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r180675128,180675128,src/wallet/wallet.cpp
kallewoof,2018-04-11T08:36:20Z,Nit: `} else if ...`,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r180675199,180675199,src/wallet/wallet.cpp
kallewoof,2018-04-11T08:37:24Z,Typo: `uint64_t`,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r180675477,180675477,src/wallet/wallet.h
kallewoof,2018-04-11T08:38:08Z,Nit: `} else`,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r180675655,180675655,src/wallet/walletdb.cpp
kallewoof,2018-04-11T08:38:13Z,Nit: `} else`,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r180675671,180675671,src/wallet/walletdb.cpp
kallewoof,2018-04-11T08:41:00Z,"Unsure why you're explicitly giving the `""*"", 1, True` and not just doing `getbalance()` here.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r180676447,180676447,test/functional/wallet_disableprivkeys.py
kallewoof,2018-04-11T08:42:10Z,"Maybe add a test that ensures it can `signrawtransactionwithkeys` (disabling privkeys should still let you sign, if you provide the keys, I think?).",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r180676767,180676767,test/functional/wallet_disableprivkeys.py
promag,2018-06-14T12:30:01Z,I was under the impression that named arguments is preferable to `options` object.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r195403067,195403067,src/wallet/rpcwallet.cpp
jnewbery,2018-06-14T14:14:01Z,"I agree. Named arguments are much preferable. Using named arguments provides type- and error- checking for free, and simplify/flatten the interface\n\nFor example, if I typo the an option `disableprivtaekeys` here, this implementation will silently ignore the option. That's not possible with named arguments.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r195439403,195439403,src/wallet/rpcwallet.cpp
jnewbery,2018-06-14T14:23:49Z,`if ((overwriteFlags & ^g_known_wallet_flags) >> 32) {` seems slightly more readable to me.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r195443199,195443199,src/wallet/wallet.cpp
jnewbery,2018-06-14T14:27:45Z,"This seems a little dangerous. If we get into this condition for any reason, it'll be impossible for the user to load the wallet and retrieve their private keys.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r195445038,195445038,src/wallet/wallet.cpp
jnewbery,2018-06-14T14:29:06Z,How does this interact with multiwallet? Loading/unloading wallets at run time?,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r195445562,195445562,src/qt/receivecoinsdialog.cpp
jnewbery,2018-06-14T14:31:39Z,"nit: I'm not sure what the `R` is for here. In general, prefer to use `lower_case_with_underscores` for [variable names in Python](https://www.python.org/dev/peps/pep-0008/#id45).",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r195446539,195446539,test/functional/wallet_multiwallet.py
jnewbery,2018-06-14T14:32:11Z,It's not obvious to me why this test is in `wallet_multiwallet.py`. What does it have to do with multiwallet?,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r195446746,195446746,test/functional/wallet_multiwallet.py
promag,2018-06-14T16:52:48Z,"Commit ""Add facility to store wallet flags (64 bits)""\n\nMissing `LOCK(cs_wallet);`?",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r195496583,195496583,src/wallet/wallet.cpp
promag,2018-06-14T17:00:47Z,"Commit ""Add per option to disable private keys during internal wallet creation""\n\nnit `} else {`.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r195498922,195498922,src/wallet/wallet.cpp
Sjors,2018-06-14T18:35:05Z,"Sounds like that should be a warning, not an error.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r195528793,195528793,src/wallet/wallet.cpp
Sjors,2018-06-14T18:38:43Z,"I still think multiwallet should use one window per wallet rather than a dropdown inside a single window. Pending that, receive screen should at least be visible if any of the wallets aren't read-only. The receive button itself would have to be updated when the user switches between wallets.\n\nAnother question is: provided there's enough warnings (including about scams), why shouldn't a user be",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r195529932,195529932,src/qt/receivecoinsdialog.cpp
jonasschnelli,2018-06-14T20:01:39Z,"I guess I placed it there because this was the only test that used `createwallet`. But right, I shall move it to a new test.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r195553112,195553112,test/functional/wallet_multiwallet.py
jonasschnelli,2018-06-18T12:44:22Z,"@Sjors comment is orthogonal.\n\n@jnewbery: this seems to work perfectly fine with mtulitwallet. Not sure about unloading... but I guess unloading does also call `setModel()`... or can you be more specific why this should be a problem?",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r196062770,196062770,src/qt/receivecoinsdialog.cpp
jnewbery,2018-06-20T19:34:38Z,Any reason for not naming these `SetWalletFlag`/`GetWalletFlag`/`SetWalletFlags`?,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r196916120,196916120,src/wallet/wallet.h
jnewbery,2018-06-20T19:35:06Z,not addressed,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r196916238,196916238,src/wallet/walletdb.cpp
jnewbery,2018-06-20T19:36:28Z,nit: s/unkown/unknown,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r196916606,196916606,src/wallet/wallet.cpp
jnewbery,2018-06-20T19:48:12Z,nit: rpc argument names should be in lower_case_with_underscores (https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#rpc-interface-guidelines). I think this should be disable_private_keys.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r196919737,196919737,src/wallet/rpcwallet.cpp
jnewbery,2018-06-20T20:05:45Z,"Yes, you're right that this works fine with multiwallet.\n\nIt would be nice if there was help text saying that the 'receive' button is disabled because the wallet has private keys disabled (and so can't generate new receiving addresses). However, that could be added in a separate PR.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r196924775,196924775,src/qt/receivecoinsdialog.cpp
jonasschnelli,2018-06-21T13:57:36Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r197142640,197142640,src/wallet/wallet.cpp
jonasschnelli,2018-06-21T14:02:46Z,I think a specific error handling makes more sense (see error handling in walletdb),https://github.com/bitcoin/bitcoin/pull/9662#discussion_r197144520,197144520,src/wallet/wallet.cpp
jonasschnelli,2018-06-21T14:10:45Z,Agree... changed from AddWalletFlag to SetWalletFlag,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r197147479,197147479,src/wallet/wallet.h
jnewbery,2018-06-22T14:17:48Z,nit: `} else {`,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r197459599,197459599,src/wallet/walletdb.cpp
jnewbery,2018-06-22T14:18:26Z,nit: `} else if (...) {`,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r197459791,197459791,src/wallet/walletdb.cpp
jnewbery,2018-06-22T14:23:54Z,"This introduces a new build warning for me:\n\n```\nwallet/rpcwallet.cpp: In function ‘UniValue createwallet(const JSONRPCRequest&)’:\nwallet/rpcwallet.cpp:3155:152: warning: enumeral and non-enumeral type in conditional expression [-Wextra]\n     std::shared_ptr<CWallet> const wallet = CWallet::CreateWalletFromFile(wallet_name, fs::absolute(wallet_name, GetWalletDir()), (disable_privatekeys ",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r197461596,197461596,src/wallet/rpcwallet.cpp
jnewbery,2018-06-22T14:24:17Z,nit: use constexpr,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r197461728,197461728,src/wallet/wallet.h
jnewbery,2018-06-22T14:27:02Z,nit: if block should have braces.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r197462633,197462633,src/wallet/wallet.cpp
jnewbery,2018-06-22T14:29:10Z,nit: if block should use braces,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r197463342,197463342,src/wallet/wallet.cpp
jnewbery,2018-06-22T14:31:55Z,nit: no need for double parens,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r197464249,197464249,src/wallet/wallet.cpp
jnewbery,2018-06-22T14:33:42Z,"nit: change log to:\n\n`""Warning: Private keys detected in wallet {%s} with disabled private keys""), walletFile));`\n\n(since this is now a warning instead of an error)",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r197464883,197464883,src/wallet/wallet.cpp
jnewbery,2018-06-22T14:38:22Z,nit: `private_keys_enabled`,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r197466439,197466439,src/wallet/rpcwallet.cpp
laanwj,2018-07-04T13:21:01Z,nit: Code style is a bit funky here.,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r200124564,200124564,src/wallet/wallet.cpp
kallewoof,2018-07-04T14:52:01Z,"Personally think this definitely needs parens to clarify priority, but maybe I'm just easily confused.",https://github.com/bitcoin/bitcoin/pull/9662#discussion_r200150453,200150453,src/wallet/wallet.cpp
jonasschnelli,2018-07-04T15:01:16Z,Fixed,https://github.com/bitcoin/bitcoin/pull/9662#discussion_r200152951,200152951,src/wallet/wallet.cpp
