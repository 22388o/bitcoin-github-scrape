MarcoFalke,2020-08-25 12:34:37,Requested by @jnewbery in https://github.com/bitcoin/bitcoin/pull/19315#discussion_r476310077,https://github.com/bitcoin/bitcoin/pull/19800#issuecomment-679997008,679997008,
MarcoFalke,2020-08-25 13:44:07,nowallet build passed: https://travis-ci.org/github/bitcoin/bitcoin/jobs/720986253#L3238,https://github.com/bitcoin/bitcoin/pull/19800#issuecomment-680033957,680033957,
amitiuttarwar,2020-08-25 15:57:00,concept ACK!! very nice :) ,https://github.com/bitcoin/bitcoin/pull/19800#issuecomment-680113935,680113935,
theStack,2020-08-26 04:07:26,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19800#issuecomment-680555006,680555006,
MarcoFalke,2020-09-07 06:26:16,"Would be good to make progress here, so that the mockwallet can be used in new tests",https://github.com/bitcoin/bitcoin/pull/19800#issuecomment-688065974,688065974,
MarcoFalke,2020-09-07 12:54:16,Force pushed second commit to address @jnewbery's feedback,https://github.com/bitcoin/bitcoin/pull/19800#issuecomment-688306632,688306632,
jnewbery,2020-09-07 12:58:59,utACK fae0de34945dce7582ac53c90c7b84e1c478a8bc,https://github.com/bitcoin/bitcoin/pull/19800#issuecomment-688309247,688309247,
jnewbery,2020-09-07 13:08:45,utACK fa188c9c59b8c3e43c31be01797f073e27a7bc10,https://github.com/bitcoin/bitcoin/pull/19800#issuecomment-688314934,688314934,
jnewbery,2020-08-25 12:38:32,"do you think this should live in wallet_util (the docstring says ""Useful util functions for testing the wallet"") or should it be in its own module?",https://github.com/bitcoin/bitcoin/pull/19800#discussion_r476415076,476415076,test/functional/test_framework/wallet_util.py
MarcoFalke,2020-08-25 12:43:46,I think a new `wallet.py` makes sense. Any objections?,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r476418161,476418161,test/functional/test_framework/wallet_util.py
jnewbery,2020-08-25 12:44:53,No objections!,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r476418877,476418877,test/functional/test_framework/wallet_util.py
jonatack,2020-08-25 13:47:10,nit: sort,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r476461408,476461408,test/functional/test_framework/wallet.py
jonatack,2020-08-25 13:47:35,"```suggestion\nclass MiniWallet:\n```",https://github.com/bitcoin/bitcoin/pull/19800#discussion_r476461751,476461751,test/functional/test_framework/wallet.py
jonatack,2020-08-25 14:05:45,"no need for quotes?\n\n```suggestion\n        vsize = Decimal(96)\n```",https://github.com/bitcoin/bitcoin/pull/19800#discussion_r476475450,476475450,test/functional/test_framework/wallet.py
MarcoFalke,2020-08-25 14:23:24,thx. fixed all nits,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r476489184,476489184,test/functional/test_framework/wallet.py
instagibbs,2020-08-25 14:57:43,"Seems like the ""wallet"" doesn't know which funds are mature?",https://github.com/bitcoin/bitcoin/pull/19800#discussion_r476515840,476515840,test/functional/test_framework/wallet.py
MarcoFalke,2020-08-25 16:24:17,"The wallet will ""sign"" any transaction you ask it to sign. Also, coin selection is deterministic, so if immature funds are spent, it will be noticed when writing the test.",https://github.com/bitcoin/bitcoin/pull/19800#discussion_r476576757,476576757,test/functional/test_framework/wallet.py
instagibbs,2020-08-25 16:28:51,I think the real answer is you're relying on FIFO which picks oldest first.,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r476579829,476579829,test/functional/test_framework/wallet.py
MarcoFalke,2020-08-25 16:32:42,"The wallet doesn't currently query the chain in any way, so it has no notion of number of confirmations.\n\nIf this is ever needed, it can be added later",https://github.com/bitcoin/bitcoin/pull/19800#discussion_r476582353,476582353,test/functional/test_framework/wallet.py
jnewbery,2020-09-07 11:06:56,nit: standard library imports before local imports,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484362539,484362539,test/functional/test_framework/wallet.py
jnewbery,2020-09-07 11:08:11,why is the `_address` member needed? Why not always just use the `ADDRESS_BCRT1_P2WSH_OP_TRUE` constant directly?,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484363093,484363093,test/functional/test_framework/wallet.py
jnewbery,2020-09-07 11:12:12,May not be needed (unless you expect individual tests to use this in future)?,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484364988,484364988,test/functional/test_framework/wallet.py
jnewbery,2020-09-07 11:13:32,use named argument `verbosity=2` for clarity?,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484365773,484365773,test/functional/test_framework/wallet.py
jnewbery,2020-09-07 11:14:39,"Maybe add a function docstring: ""Generate blocks with an anyone-can-spend coinbase outputs, and add outputs to internal list to spend later"" or similar.",https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484366255,484366255,test/functional/test_framework/wallet.py
jnewbery,2020-09-07 11:16:52,"Rather than hoping, can you assert that send_value below is +ve, for a more helpful error message.",https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484367276,484367276,test/functional/test_framework/wallet.py
jnewbery,2020-09-07 11:18:11,Add a docstring. What's the guarantee to the caller here? That the transaction's feerate will be strictly greater than the fee_rate parameter provided?,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484367838,484367838,test/functional/test_framework/wallet.py
jnewbery,2020-09-07 11:19:48,It feels to me like the transaction construction/signing should be separated from the relaying. ie this function's responsibility should be to return a serialized transaction that the caller can then submit from any node (or manually over a p2p connection),https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484368547,484368547,test/functional/test_framework/wallet.py
jnewbery,2020-09-07 11:27:33,"I think this can just be `generate(1)` since the output UTXO can always be used in subsequent tests.\n\nCould probably do with a comment so it's obvious why two different generate commands are being used here.",https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484372207,484372207,test/functional/p2p_feefilter.py
MarcoFalke,2020-09-07 12:47:14,done,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484411593,484411593,test/functional/test_framework/wallet.py
MarcoFalke,2020-09-07 12:49:48,"If the address is changed in the future, it might be easier if there is only one occurrence of `ADDRESS_BCRT1_P2WSH_OP_TRUE`. Not sure though",https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484412944,484412944,test/functional/test_framework/wallet.py
MarcoFalke,2020-09-07 12:50:04,thx removed,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484413094,484413094,test/functional/test_framework/wallet.py
MarcoFalke,2020-09-07 12:50:24,thx changed,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484413287,484413287,test/functional/test_framework/wallet.py
MarcoFalke,2020-09-07 12:50:38,"thx, added docstring",https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484413402,484413402,test/functional/test_framework/wallet.py
MarcoFalke,2020-09-07 12:50:58,added assert,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484413580,484413580,test/functional/test_framework/wallet.py
MarcoFalke,2020-09-07 12:51:23,tx fee will be exact (or off by at most one satoshi). Added docstring,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484413807,484413807,test/functional/test_framework/wallet.py
MarcoFalke,2020-09-07 12:52:41,"Agree, but I can't have the asserts here without `testmempoolaccept` returning the vsize and fee. I will fix this when the functionality is needed.",https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484414479,484414479,test/functional/test_framework/wallet.py
MarcoFalke,2020-09-07 12:53:30,Not sure if we want package fee rats in this test. I've kept the previous behavior (packets of size 1),https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484414857,484414857,test/functional/p2p_feefilter.py
jnewbery,2020-09-07 12:59:34,"I think it's easy either way, and best not to add code until it's needed. Doesn't make a big difference though",https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484418037,484418037,test/functional/test_framework/wallet.py
jnewbery,2020-09-07 13:00:22,I still think a comment would be useful for people reading this file for the first time. Not essential though.,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484418429,484418429,test/functional/p2p_feefilter.py
MarcoFalke,2020-09-07 13:07:30,added comment,https://github.com/bitcoin/bitcoin/pull/19800#discussion_r484421900,484421900,test/functional/p2p_feefilter.py
