[
  {
    "sha": "d4c18f7330b1a967b8144df3d49a857514310a55",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNGMxOGY3MzMwYjFhOTY3YjgxNDRkZjNkNDlhODU3NTE0MzEwYTU1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2017-09-05T22:37:45Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2017-09-07T23:37:07Z"
      },
      "message": "Bump wallet version number to 159900",
      "tree": {
        "sha": "969fe554cd54b9454e3acdb5ce1b00e6bc4af992",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/969fe554cd54b9454e3acdb5ce1b00e6bc4af992"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4c18f7330b1a967b8144df3d49a857514310a55",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4c18f7330b1a967b8144df3d49a857514310a55",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d4c18f7330b1a967b8144df3d49a857514310a55",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4c18f7330b1a967b8144df3d49a857514310a55/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba05971bf4e7b9647002aa39ceb384339995195e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba05971bf4e7b9647002aa39ceb384339995195e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ba05971bf4e7b9647002aa39ceb384339995195e"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7cc25eb79b9ed8ce981e7c41df9954ca09987e06",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4c18f7330b1a967b8144df3d49a857514310a55/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4c18f7330b1a967b8144df3d49a857514310a55/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d4c18f7330b1a967b8144df3d49a857514310a55",
        "patch": "@@ -3832,8 +3832,8 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n         // Create new keyUser and set as default key\n         if (gArgs.GetBoolArg(\"-usehd\", DEFAULT_USE_HD_WALLET) && !walletInstance->IsHDEnabled()) {\n \n-            // ensure this wallet.dat can only be opened by clients supporting HD with chain split\n-            walletInstance->SetMinVersion(FEATURE_HD_SPLIT);\n+            // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n+            walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);\n \n             // generate a new master key\n             CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();"
      },
      {
        "sha": "5bd0bcd32dd537d89f76b4dc3aa1550fb31a8eea",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4c18f7330b1a967b8144df3d49a857514310a55/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4c18f7330b1a967b8144df3d49a857514310a55/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=d4c18f7330b1a967b8144df3d49a857514310a55",
        "patch": "@@ -96,6 +96,8 @@ enum WalletFeature\n \n     FEATURE_HD_SPLIT = 139900, // Wallet with HD chain split (change outputs will use m/0'/1'/k)\n \n+    FEATURE_NO_DEFAULT_KEY = 159900, // Wallet without a default key written\n+\n     FEATURE_LATEST = FEATURE_COMPRPUBKEY // HD is optional, use FEATURE_COMPRPUBKEY as latest version\n };\n "
      }
    ]
  },
  {
    "sha": "713a92073b3b391f48d4fa146bd334893ec94b8f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MTNhOTIwNzNiM2IzOTFmNDhkNGZhMTQ2YmQzMzQ4OTNlYzk0Yjhm",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2017-09-05T22:54:11Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2017-09-07T23:37:44Z"
      },
      "message": "Remove usehd option and warn when it is used\n\nRemoved the -usehd option so wallets cannot be made to be non-hd\nanymore. A warning will be displayed when the option is set.",
      "tree": {
        "sha": "4546bc0f01087c32c9cf887e1766294badc5d24a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4546bc0f01087c32c9cf887e1766294badc5d24a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/713a92073b3b391f48d4fa146bd334893ec94b8f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/713a92073b3b391f48d4fa146bd334893ec94b8f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/713a92073b3b391f48d4fa146bd334893ec94b8f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/713a92073b3b391f48d4fa146bd334893ec94b8f/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d4c18f7330b1a967b8144df3d49a857514310a55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4c18f7330b1a967b8144df3d49a857514310a55",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d4c18f7330b1a967b8144df3d49a857514310a55"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 10,
      "deletions": 22
    },
    "files": [
      {
        "sha": "f5ca2a78baa73e2812136ee5e458d68480baf095",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/713a92073b3b391f48d4fa146bd334893ec94b8f/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/713a92073b3b391f48d4fa146bd334893ec94b8f/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=713a92073b3b391f48d4fa146bd334893ec94b8f",
        "patch": "@@ -29,7 +29,6 @@ std::string GetWalletHelpString(bool showDebug)\n     strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet on startup\"));\n     strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), DEFAULT_SPEND_ZEROCONF_CHANGE));\n     strUsage += HelpMessageOpt(\"-txconfirmtarget=<n>\", strprintf(_(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\"), DEFAULT_TX_CONFIRM_TARGET));\n-    strUsage += HelpMessageOpt(\"-usehd\", _(\"Use hierarchical deterministic key generation (HD) after BIP32. Only has effect during wallet creation/first start\") + \" \" + strprintf(_(\"(default: %u)\"), DEFAULT_USE_HD_WALLET));\n     strUsage += HelpMessageOpt(\"-walletrbf\", strprintf(_(\"Send transactions with full-RBF opt-in enabled (default: %u)\"), DEFAULT_WALLET_RBF));\n     strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format on startup\"));\n     strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), DEFAULT_WALLET_DAT));"
      },
      {
        "sha": "10a1c7fa921f3410ebb835e9d6c53dee95575f38",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 11,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/713a92073b3b391f48d4fa146bd334893ec94b8f/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/713a92073b3b391f48d4fa146bd334893ec94b8f/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=713a92073b3b391f48d4fa146bd334893ec94b8f",
        "patch": "@@ -3829,17 +3829,13 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n \n     if (fFirstRun)\n     {\n-        // Create new keyUser and set as default key\n-        if (gArgs.GetBoolArg(\"-usehd\", DEFAULT_USE_HD_WALLET) && !walletInstance->IsHDEnabled()) {\n+        // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n+        walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);\n \n-            // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n-            walletInstance->SetMinVersion(FEATURE_NO_DEFAULT_KEY);\n-\n-            // generate a new master key\n-            CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n-            if (!walletInstance->SetHDMasterKey(masterPubKey))\n-                throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n-        }\n+        // generate a new master key\n+        CPubKey masterPubKey = walletInstance->GenerateNewHDMasterKey();\n+        if (!walletInstance->SetHDMasterKey(masterPubKey))\n+            throw std::runtime_error(std::string(__func__) + \": Storing master key failed\");\n \n         // Top up the keypool\n         if (!walletInstance->TopUpKeyPool()) {\n@@ -3852,7 +3848,7 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile)\n     else if (gArgs.IsArgSet(\"-usehd\")) {\n         bool useHD = gArgs.GetBoolArg(\"-usehd\", DEFAULT_USE_HD_WALLET);\n         if (walletInstance->IsHDEnabled() && !useHD) {\n-            InitError(strprintf(_(\"Error loading %s: You can't disable HD on an already existing HD wallet\"), walletFile));\n+            InitError(strprintf(_(\"Error loading %s: You can't disable HD on an already existing HD wallet or create new non-HD wallets.\"), walletFile));\n             return nullptr;\n         }\n         if (!walletInstance->IsHDEnabled() && useHD) {"
      },
      {
        "sha": "160a0f7ae570aaeeb8dfd0d9b6ce7e937b862b18",
        "filename": "test/functional/keypool-topup.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/713a92073b3b391f48d4fa146bd334893ec94b8f/test/functional/keypool-topup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/713a92073b3b391f48d4fa146bd334893ec94b8f/test/functional/keypool-topup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/keypool-topup.py?ref=713a92073b3b391f48d4fa146bd334893ec94b8f",
        "patch": "@@ -23,7 +23,7 @@ class KeypoolRestoreTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 2\n-        self.extra_args = [['-usehd=0'], ['-usehd=1', '-keypool=100', '-keypoolmin=20']]\n+        self.extra_args = [[], ['-keypool=100', '-keypoolmin=20']]\n \n     def run_test(self):\n         self.tmpdir = self.options.tmpdir"
      },
      {
        "sha": "3af04c2279391fd35a0afc18f1e47e63bcacbd97",
        "filename": "test/functional/wallet-hd.py",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/713a92073b3b391f48d4fa146bd334893ec94b8f/test/functional/wallet-hd.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/713a92073b3b391f48d4fa146bd334893ec94b8f/test/functional/wallet-hd.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet-hd.py?ref=713a92073b3b391f48d4fa146bd334893ec94b8f",
        "patch": "@@ -15,17 +15,11 @@ class WalletHDTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 2\n-        self.extra_args = [['-usehd=0'], ['-usehd=1', '-keypool=0']]\n+        self.extra_args = [[], ['-keypool=0']]\n \n     def run_test (self):\n         tmpdir = self.options.tmpdir\n \n-        # Make sure can't switch off usehd after wallet creation\n-        self.stop_node(1)\n-        self.assert_start_raises_init_error(1, ['-usehd=0'], 'already existing HD wallet')\n-        self.start_node(1)\n-        connect_nodes_bi(self.nodes, 0, 1)\n-\n         # Make sure we use hd, keep masterkeyid\n         masterkeyid = self.nodes[1].getwalletinfo()['hdmasterkeyid']\n         assert_equal(len(masterkeyid), 40)"
      },
      {
        "sha": "a643684c7fe5cb68f1405b70e1e3ff1b048a8d8c",
        "filename": "test/functional/wallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/713a92073b3b391f48d4fa146bd334893ec94b8f/test/functional/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/713a92073b3b391f48d4fa146bd334893ec94b8f/test/functional/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet.py?ref=713a92073b3b391f48d4fa146bd334893ec94b8f",
        "patch": "@@ -10,10 +10,9 @@ class WalletTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 4\n         self.setup_clean_chain = True\n-        self.extra_args = [['-usehd={:d}'.format(i%2==0)] for i in range(4)]\n \n     def setup_network(self):\n-        self.add_nodes(4, self.extra_args)\n+        self.add_nodes(4)\n         self.start_node(0)\n         self.start_node(1)\n         self.start_node(2)"
      }
    ]
  }
]