[
  {
    "sha": "72f406a475b20d8a3e284e437822009599f78dd1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MmY0MDZhNDc1YjIwZDhhM2UyODRlNDM3ODIyMDA5NTk5Zjc4ZGQx",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-04-14T14:54:53Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-04-14T14:54:53Z"
      },
      "message": "Make sure parameter names in .cpp and .h files are in sync\n\nDoxygen gets confused by parameter naming mismatches",
      "tree": {
        "sha": "adbcf35ae782539caf8caeaec883a483e898651f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/adbcf35ae782539caf8caeaec883a483e898651f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72f406a475b20d8a3e284e437822009599f78dd1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72f406a475b20d8a3e284e437822009599f78dd1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/72f406a475b20d8a3e284e437822009599f78dd1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72f406a475b20d8a3e284e437822009599f78dd1/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f4db00f9a5482c91ae8a86c6e41e0ba61acf152b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4db00f9a5482c91ae8a86c6e41e0ba61acf152b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4db00f9a5482c91ae8a86c6e41e0ba61acf152b"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "696c4e7c7cb4f3bf833d31aeee931af87dc12703",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72f406a475b20d8a3e284e437822009599f78dd1/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72f406a475b20d8a3e284e437822009599f78dd1/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=72f406a475b20d8a3e284e437822009599f78dd1",
        "patch": "@@ -34,7 +34,7 @@ class CValidationInterface {\n protected:\n     virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {}\n     virtual void TransactionAddedToMempool(const CTransactionRef &ptxn) {}\n-    virtual void BlockConnected(const std::shared_ptr<const CBlock> &block, const CBlockIndex *pindex, const std::vector<CTransactionRef> &txnConflicted) {}\n+    virtual void BlockConnected(const std::shared_ptr<const CBlock> &block, const CBlockIndex *pindex, const std::vector<CTransactionRef> &vtxConflicted) {}\n     virtual void BlockDisconnected(const std::shared_ptr<const CBlock> &block) {}\n     virtual void SetBestChain(const CBlockLocator &locator) {}\n     virtual void UpdatedTransaction(const uint256 &hash) {}"
      },
      {
        "sha": "8e8eab871025b537be6174fd0dc86211cfd5829b",
        "filename": "src/wallet/feebumper.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72f406a475b20d8a3e284e437822009599f78dd1/src/wallet/feebumper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72f406a475b20d8a3e284e437822009599f78dd1/src/wallet/feebumper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.h?ref=72f406a475b20d8a3e284e437822009599f78dd1",
        "patch": "@@ -23,7 +23,7 @@ enum class BumpFeeResult\n class CFeeBumper\n {\n public:\n-    CFeeBumper(const CWallet *pWalletIn, const uint256 txidIn, int newConfirmTarget, bool specifiedConfirmTarget, CAmount totalFee, bool newTxReplaceable);\n+    CFeeBumper(const CWallet *pWallet, const uint256 txidIn, int newConfirmTarget, bool specifiedConfirmTarget, CAmount totalFee, bool newTxReplaceable);\n     BumpFeeResult getResult() const { return currentResult; }\n     const std::vector<std::string>& getErrors() const { return vErrors; }\n     CAmount getOldFee() const { return nOldFee; }\n@@ -41,7 +41,7 @@ class CFeeBumper\n      * but, eventually sets vErrors if the tx could not be added to the mempool (will try later)\n      * or if the old transaction could not be marked as replaced\n      */\n-    bool commit(CWallet *pWalletNonConst);\n+    bool commit(CWallet *pWallet);\n \n private:\n     const uint256 txid;"
      }
    ]
  }
]