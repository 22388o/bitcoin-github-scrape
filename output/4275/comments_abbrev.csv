laanwj,2014-06-03T06:48:06Z,"Wasn't it failing later on anyway, when it gets to the real processing? At least that'd allow popping up an error.\n\nIdeally ipcParseCommandLine shouldn't signal errors, as you noticed they can't be displayed to the user.\n",https://github.com/bitcoin/bitcoin/pull/4275#issuecomment-44925528,44925528,
Diapolo,2014-06-03T07:13:44Z,"I'm also sure the error is catched later with user visible feedback about what happened. Anyway, I still think we should try to send (via `ipcCommandLine()`) first to a mainnet instance and if that fails to a testnet instance and remove that whole ""try to get or guess the right network"" stuff in `ipcParseCommandLine()` alltogether as it complicates things. Who in real world (normal user) has a tes",https://github.com/bitcoin/bitcoin/pull/4275#issuecomment-44927091,44927091,
rnicoll,2014-06-03T07:27:56Z,"I think you're right, it's adding too much error handling at the wrong point, in retrospect. Won't have time to write a new patch until tonight, but how about it switches the client to testnet if it detects a testnet payment request, and otherwise has no interaction with the network field? Thinking more about this, I think it's preferable that a mainnet payment request fails if the client is launc",https://github.com/bitcoin/bitcoin/pull/4275#issuecomment-44927996,44927996,
laanwj,2014-06-03T12:53:11Z,@Diapolo I don't agree. It should be possible to run both a testnet and mainnet instance at the same time and have URIs and payment requests arrive at the right instance.\n\n@rnicoll The idea is to override the user-provided network (provided on the command line or configuration file) with the network of the payment request. This could happen in both directions.\n,https://github.com/bitcoin/bitcoin/pull/4275#issuecomment-44960151,44960151,
rnicoll,2014-06-03T18:55:41Z,"Reworked to defer validation until GUI is up, and also to tighten checks in the GUI so a nonsense network name is never accepted (also avoids any potential issues with other coins using unsupported network names and file mixups)\n",https://github.com/bitcoin/bitcoin/pull/4275#issuecomment-45005635,45005635,
laanwj,2014-06-04T07:14:48Z,Untested ACK\n,https://github.com/bitcoin/bitcoin/pull/4275#issuecomment-45058267,45058267,
rnicoll,2014-06-04T22:33:19Z,"Fixed the superfluous .data() calls, sorry about that.\n",https://github.com/bitcoin/bitcoin/pull/4275#issuecomment-45160778,45160778,
rnicoll,2014-06-11T22:53:53Z,Removed changes obsoleted by #3824 \n,https://github.com/bitcoin/bitcoin/pull/4275#issuecomment-45810798,45810798,
rnicoll,2014-07-06T17:56:05Z,"Finally made change as requested by @laanwj , sorry about the delay.\n",https://github.com/bitcoin/bitcoin/pull/4275#issuecomment-48118324,48118324,
ghost,2014-07-06T18:03:09Z,@rnicoll You'll need to rebase this too as there are merge conflicts with `master`.\n,https://github.com/bitcoin/bitcoin/pull/4275#issuecomment-48118527,48118527,
laanwj,2014-07-08T07:26:03Z,ACK after squashing into one commit (it's going back and forth right now).\n,https://github.com/bitcoin/bitcoin/pull/4275#issuecomment-48280239,48280239,
rnicoll,2014-07-08T21:13:13Z,"Once more, with feeling...\n",https://github.com/bitcoin/bitcoin/pull/4275#issuecomment-48400249,48400249,
BitcoinPullTester,2014-07-08T21:52:11Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4275_509f926e80b3d24a6b6c6fbf535e4d4b97156a3c/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4275#issuecomment-48404179,48404179,
laanwj,2014-07-09T06:47:22Z,Woohoo :)\n,https://github.com/bitcoin/bitcoin/pull/4275#issuecomment-48435554,48435554,
leofidus,2014-06-04T19:59:43Z,This overlaps with a recent commit in #3824 (f0a83fc). In think the version in that PR solves this better.\n,https://github.com/bitcoin/bitcoin/pull/4275#discussion_r13407028,13407028,src/qt/paymentserver.cpp
Diapolo,2014-06-04T20:05:16Z,Why is .data() needed here now?\n,https://github.com/bitcoin/bitcoin/pull/4275#discussion_r13407359,13407359,src/qt/paymentserver.cpp
rnicoll,2014-06-04T22:14:23Z,"Agreed, #3824's changes to paymentserver.cpp (and paymentserver.h) look like a better answer, presuming they're going to be merged.\n",https://github.com/bitcoin/bitcoin/pull/4275#discussion_r13414486,13414486,src/qt/paymentserver.cpp
leofidus,2014-06-11T15:32:15Z,"#3824 is now merged, which makes this part unnessesary. I still like the other change this PR does, even though that one shouldn't make a big difference.\n",https://github.com/bitcoin/bitcoin/pull/4275#discussion_r13655633,13655633,src/qt/paymentserver.cpp
laanwj,2014-06-25T10:14:11Z,Keep this here - we want the reading to fail later to be able to give an appropriate error message.\n,https://github.com/bitcoin/bitcoin/pull/4275#discussion_r14177627,14177627,src/qt/paymentserver.cpp
