[
  {
    "sha": "612a931d1a3ac1678d02aed30c48fd25ccd113db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTJhOTMxZDFhM2FjMTY3OGQwMmFlZDMwYzQ4ZmQyNWNjZDExM2Ri",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-03-17T13:45:00Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-03-17T13:45:00Z"
      },
      "message": "tests: simplify next_block() function in feature_block\n\nThe solve parameter is unnecessary. Remove it and add\ncomments.",
      "tree": {
        "sha": "5559b6bc25cffcf36612c9bc66894ee095e090cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5559b6bc25cffcf36612c9bc66894ee095e090cd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/612a931d1a3ac1678d02aed30c48fd25ccd113db",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/612a931d1a3ac1678d02aed30c48fd25ccd113db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/612a931d1a3ac1678d02aed30c48fd25ccd113db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/612a931d1a3ac1678d02aed30c48fd25ccd113db/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7060d2d97a289097f41fcc79698312c0117a75c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7060d2d97a289097f41fcc79698312c0117a75c8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7060d2d97a289097f41fcc79698312c0117a75c8"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "9e8e11e64f2e7978eda4e5523f842cb017e6b4f5",
        "filename": "test/functional/feature_block.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/612a931d1a3ac1678d02aed30c48fd25ccd113db/test/functional/feature_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/612a931d1a3ac1678d02aed30c48fd25ccd113db/test/functional/feature_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_block.py?ref=612a931d1a3ac1678d02aed30c48fd25ccd113db",
        "patch": "@@ -630,17 +630,19 @@ def run_test(self):\n \n         self.log.info(\"Reject a block with invalid work\")\n         self.move_tip(44)\n-        b47 = self.next_block(47, solve=False)\n+        b47 = self.next_block(47)\n         target = uint256_from_compact(b47.nBits)\n         while b47.sha256 <= target:\n+            # Rehash nonces until an invalid too-high-hash block is found.\n             b47.nNonce += 1\n             b47.rehash()\n         self.send_blocks([b47], False, force_send=True, reject_reason='high-hash', reconnect=True)\n \n         self.log.info(\"Reject a block with a timestamp >2 hours in the future\")\n         self.move_tip(44)\n-        b48 = self.next_block(48, solve=False)\n+        b48 = self.next_block(48)\n         b48.nTime = int(time.time()) + 60 * 60 * 3\n+        # Header timestamp has changed. Re-solve the block.\n         b48.solve()\n         self.send_blocks([b48], False, force_send=True, reject_reason='time-too-new')\n \n@@ -1321,7 +1323,7 @@ def create_and_sign_transaction(self, spend_tx, value, script=CScript([OP_TRUE])\n         tx.rehash()\n         return tx\n \n-    def next_block(self, number, spend=None, additional_coinbase_value=0, script=CScript([OP_TRUE]), solve=True, *, version=1):\n+    def next_block(self, number, spend=None, additional_coinbase_value=0, script=CScript([OP_TRUE]), *, version=1):\n         if self.tip is None:\n             base_block_hash = self.genesis_hash\n             block_time = int(time.time()) + 1\n@@ -1343,10 +1345,8 @@ def next_block(self, number, spend=None, additional_coinbase_value=0, script=CSc\n             self.sign_tx(tx, spend)\n             self.add_transactions_to_block(block, [tx])\n             block.hashMerkleRoot = block.calc_merkle_root()\n-        if solve:\n-            block.solve()\n-        else:\n-            block.rehash()\n+        # Block is created. Find a valid nonce.\n+        block.solve()\n         self.tip = block\n         self.block_heights[block.sha256] = height\n         assert number not in self.blocks"
      }
    ]
  }
]