[
  {
    "sha": "54ec140fdfa58a8cdf663afbeb04116aa40d6184",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NGVjMTQwZmRmYTU4YThjZGY2NjNhZmJlYjA0MTE2YWE0MGQ2MTg0",
    "commit": {
      "author": {
        "name": "tryphe",
        "email": "tryphe@users.noreply.github.com",
        "date": "2019-05-05T02:01:51Z"
      },
      "committer": {
        "name": "tryphe",
        "email": "tryphe@noreply.github.com",
        "date": "2019-05-07T23:42:23Z"
      },
      "message": "remove old bootstrap relevant code\n\n- remove bootstrap file check from ThreadImport() which is called via the 'loadblk' thread during startup by default\n- 'loadblk' thread should only spawn if argument -loadblock is set\n\nCreate release-notes-15954.md\n\nadd release notes for modified bootstrap functionality\n\nchanged markdown formatting of title\n\nchanged semantics to reflect 0.18 notes\n\nchanged semantics to reflect 0.18 notes rather than 0.17\n\n[doc] clarify explanation\n\nremove whitespace\n\nfix documentation typo\n\nonly load blockfiles when we have paths\n\nuse absolute paths for -loadblock and regard the -noloadblock argument",
      "tree": {
        "sha": "8c28c554a7f614662ed0a33b04cf92bbb5c5a01b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c28c554a7f614662ed0a33b04cf92bbb5c5a01b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54ec140fdfa58a8cdf663afbeb04116aa40d6184",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54ec140fdfa58a8cdf663afbeb04116aa40d6184",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54ec140fdfa58a8cdf663afbeb04116aa40d6184",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54ec140fdfa58a8cdf663afbeb04116aa40d6184/comments",
    "author": {
      "login": "tryphe",
      "id": 8435003,
      "node_id": "MDQ6VXNlcjg0MzUwMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8435003?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tryphe",
      "html_url": "https://github.com/tryphe",
      "followers_url": "https://api.github.com/users/tryphe/followers",
      "following_url": "https://api.github.com/users/tryphe/following{/other_user}",
      "gists_url": "https://api.github.com/users/tryphe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tryphe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tryphe/subscriptions",
      "organizations_url": "https://api.github.com/users/tryphe/orgs",
      "repos_url": "https://api.github.com/users/tryphe/repos",
      "events_url": "https://api.github.com/users/tryphe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tryphe/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": null,
    "parents": [
      {
        "sha": "d7d7d315060620446bd363ca50f95f79d3260db7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7d7d315060620446bd363ca50f95f79d3260db7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d7d7d315060620446bd363ca50f95f79d3260db7"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 17,
      "deletions": 19
    },
    "files": [
      {
        "sha": "f4d2c5688cf56bedec05ef695d68613dcd011b47",
        "filename": "doc/release-notes-15954.md",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54ec140fdfa58a8cdf663afbeb04116aa40d6184/doc/release-notes-15954.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54ec140fdfa58a8cdf663afbeb04116aa40d6184/doc/release-notes-15954.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15954.md?ref=54ec140fdfa58a8cdf663afbeb04116aa40d6184",
        "patch": "@@ -0,0 +1,4 @@\n+Configuration option changes\n+-----------------------------\n+\n+Importing blocks upon startup via the `bootstrap.dat` file no longer occurs by default. The file must now be specified with `-loadblock=<file>`."
      },
      {
        "sha": "0b8a46370177b94fb8008ba897b49615906c49e5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 19,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54ec140fdfa58a8cdf663afbeb04116aa40d6184/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54ec140fdfa58a8cdf663afbeb04116aa40d6184/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=54ec140fdfa58a8cdf663afbeb04116aa40d6184",
        "patch": "@@ -695,20 +695,6 @@ static void ThreadImport(std::vector<fs::path> vImportFiles)\n         LoadGenesisBlock(chainparams);\n     }\n \n-    // hardcoded $DATADIR/bootstrap.dat\n-    fs::path pathBootstrap = GetDataDir() / \"bootstrap.dat\";\n-    if (fs::exists(pathBootstrap)) {\n-        FILE *file = fsbridge::fopen(pathBootstrap, \"rb\");\n-        if (file) {\n-            fs::path pathBootstrapOld = GetDataDir() / \"bootstrap.dat.old\";\n-            LogPrintf(\"Importing bootstrap.dat...\\n\");\n-            LoadExternalBlockFile(chainparams, file);\n-            RenameOver(pathBootstrap, pathBootstrapOld);\n-        } else {\n-            LogPrintf(\"Warning: Could not open bootstrap file %s\\n\", pathBootstrap.string());\n-        }\n-    }\n-\n     // -loadblock=\n     for (const fs::path& path : vImportFiles) {\n         FILE *file = fsbridge::fopen(path, \"rb\");\n@@ -1728,12 +1714,20 @@ bool AppInitMain(InitInterfaces& interfaces)\n     if (gArgs.IsArgSet(\"-blocknotify\"))\n         uiInterface.NotifyBlockTip_connect(BlockNotifyCallback);\n \n-    std::vector<fs::path> vImportFiles;\n-    for (const std::string& strFile : gArgs.GetArgs(\"-loadblock\")) {\n-        vImportFiles.push_back(strFile);\n-    }\n+    if (gArgs.IsArgSet(\"-loadblock\")) {\n+        const std::vector<std::string> vLoadBlockArgs = gArgs.GetArgs(\"-loadblock\");\n+\n+        // Regard the '-noloadblock' argument\n+        if (!vLoadBlockArgs.empty()) {\n+            std::vector<fs::path> vImportFiles;\n+            for (const std::string& strFile : vLoadBlockArgs) {\n+                vImportFiles.push_back(AbsPathForConfigVal(strFile));\n+            }\n \n-    threadGroup.create_thread(std::bind(&ThreadImport, vImportFiles));\n+            // Spawn 'loadblk' thread to run ThreadImport()\n+            threadGroup.create_thread(std::bind(&ThreadImport, vImportFiles));\n+        }\n+    }\n \n     // Wait for genesis block to be processed\n     {"
      }
    ]
  }
]