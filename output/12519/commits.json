[
  {
    "sha": "676d48fc2051960463c1b9d983e8b5af4a354b5c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NzZkNDhmYzIwNTE5NjA0NjNjMWI5ZDk4M2U4YjVhZjRhMzU0YjVj",
    "commit": {
      "author": {
        "name": "Matt Whitlock",
        "email": "bitcoin@mattwhitlock.name",
        "date": "2018-02-23T19:02:37Z"
      },
      "committer": {
        "name": "Matt Whitlock",
        "email": "bitcoin@mattwhitlock.name",
        "date": "2018-02-23T19:02:37Z"
      },
      "message": "Pass MSG_MORE flag when sending non-final network messages\n\nSince Nagle's algorithm is disabled, each and every call to send(2) can potentially generate a separate TCP segment on the wire. This is especially inefficient when sending the tiny header preceding each message payload.\n\nLinux implements a MSG_MORE flag that tells the kernel not to push the passed data immediately to the connected peer but rather to collect it in the socket's internal transmit buffer where it can be combined with data from successive calls to send(2). Where available, specify this flag when calling send(2) in CConnman::SocketSendData(CNode *) if the data buffer being sent is not the last one in pnode->vSendMsg.",
      "tree": {
        "sha": "690db4709893b97402c954c6198c193307c4226f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/690db4709893b97402c954c6198c193307c4226f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/676d48fc2051960463c1b9d983e8b5af4a354b5c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/676d48fc2051960463c1b9d983e8b5af4a354b5c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/676d48fc2051960463c1b9d983e8b5af4a354b5c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/676d48fc2051960463c1b9d983e8b5af4a354b5c/comments",
    "author": {
      "login": "whitslack",
      "id": 797782,
      "node_id": "MDQ6VXNlcjc5Nzc4Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/797782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/whitslack",
      "html_url": "https://github.com/whitslack",
      "followers_url": "https://api.github.com/users/whitslack/followers",
      "following_url": "https://api.github.com/users/whitslack/following{/other_user}",
      "gists_url": "https://api.github.com/users/whitslack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/whitslack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/whitslack/subscriptions",
      "organizations_url": "https://api.github.com/users/whitslack/orgs",
      "repos_url": "https://api.github.com/users/whitslack/repos",
      "events_url": "https://api.github.com/users/whitslack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/whitslack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "whitslack",
      "id": 797782,
      "node_id": "MDQ6VXNlcjc5Nzc4Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/797782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/whitslack",
      "html_url": "https://github.com/whitslack",
      "followers_url": "https://api.github.com/users/whitslack/followers",
      "following_url": "https://api.github.com/users/whitslack/following{/other_user}",
      "gists_url": "https://api.github.com/users/whitslack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/whitslack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/whitslack/subscriptions",
      "organizations_url": "https://api.github.com/users/whitslack/orgs",
      "repos_url": "https://api.github.com/users/whitslack/repos",
      "events_url": "https://api.github.com/users/whitslack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/whitslack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07090c5339436f856e79a8036d1c85deeb453803",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07090c5339436f856e79a8036d1c85deeb453803",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07090c5339436f856e79a8036d1c85deeb453803"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2b018855ae9ef54d3ade888baaa7b7f835b0ba13",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/676d48fc2051960463c1b9d983e8b5af4a354b5c/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/676d48fc2051960463c1b9d983e8b5af4a354b5c/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=676d48fc2051960463c1b9d983e8b5af4a354b5c",
        "patch": "@@ -891,7 +891,13 @@ size_t CConnman::SocketSendData(CNode *pnode) const\n             LOCK(pnode->cs_hSocket);\n             if (pnode->hSocket == INVALID_SOCKET)\n                 break;\n-            nBytes = send(pnode->hSocket, reinterpret_cast<const char*>(data.data()) + pnode->nSendOffset, data.size() - pnode->nSendOffset, MSG_NOSIGNAL | MSG_DONTWAIT);\n+            int flags = MSG_NOSIGNAL | MSG_DONTWAIT;\n+#ifdef MSG_MORE\n+            if (it + 1 != pnode->vSendMsg.end()) {\n+                flags |= MSG_MORE;\n+            }\n+#endif\n+            nBytes = send(pnode->hSocket, reinterpret_cast<const char*>(data.data()) + pnode->nSendOffset, data.size() - pnode->nSendOffset, flags);\n         }\n         if (nBytes > 0) {\n             pnode->nLastSend = GetSystemTimeInSeconds();"
      }
    ]
  }
]