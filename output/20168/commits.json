[
  {
    "sha": "fa68755364473e48cf039e8cc2d08036fe58c1f6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTY4NzU1MzY0NDczZTQ4Y2YwMzllOGNjMmQwODAzNmZlNThjMWY2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-10-16T11:51:00Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-10-16T11:48:17Z"
      },
      "message": "contrib: Fix gen_key_io_test_vectors.py imports",
      "tree": {
        "sha": "bcfc8a2affa76831b1a7ca2c6d24449a32e4fc11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bcfc8a2affa76831b1a7ca2c6d24449a32e4fc11"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa68755364473e48cf039e8cc2d08036fe58c1f6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiSaQwArx1nmvvutkZGWgyaMxABhY2rAl2l0OAJQOHTpTL4OMG9rkUdhV3yL09C\nwtEiDHCKn13tgarbDOqG1p2vnK0DnkM4dH1g/2P7LVgxL9Gd1h4lb2LKiKlTsq8+\neuUb+UmVC8xZuPVcXl6ZreqmU9oqumjnR8r0vYfUCZhKMt3azmaQO3JYjz9j/SOD\ncIL9IoNJj/byA0l0dR23fPA9T0XYyQFcrGd8M01/61Z4mAUMCSWkSeVz99MyOByX\nVE/uRU+ejcaKnp8ddeFte52cotnRZqMhN4n4lVwNxK0XJOLwJGQMNaaFpIy6TRSS\ngEgt+CWdRR8hpWlfd0zkD5wh6QI4GsdZXNj3O6sGFYmxx9fwmq0P42KKupwBIT/K\n0n34juSyT1Z29gX7cP+ZQkWRlrktMl3r0M8NBXk04CPju83Fl1KYUPfWpL/+jmHg\n/Ic8ZeDG0aF5gYbd34PvkBnCTTKeu3MVhZKPNU94mSj3X0cpAwmJhJdgY9OY4UPq\n927keKGl\n=IgTv\n-----END PGP SIGNATURE-----",
        "payload": "tree bcfc8a2affa76831b1a7ca2c6d24449a32e4fc11\nparent cb21d864c52b7858000ff6c8727240f1721132a9\nauthor MarcoFalke <falke.marco@gmail.com> 1602849060 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1602848897 +0200\n\ncontrib: Fix gen_key_io_test_vectors.py imports\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa68755364473e48cf039e8cc2d08036fe58c1f6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa68755364473e48cf039e8cc2d08036fe58c1f6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa68755364473e48cf039e8cc2d08036fe58c1f6/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb21d864c52b7858000ff6c8727240f1721132a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb21d864c52b7858000ff6c8727240f1721132a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb21d864c52b7858000ff6c8727240f1721132a9"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 3,
      "deletions": 6
    },
    "files": [
      {
        "sha": "49320d92e6dafc7a2c173ced1dd2f19ac5e5c481",
        "filename": "contrib/testgen/gen_key_io_test_vectors.py",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa68755364473e48cf039e8cc2d08036fe58c1f6/contrib/testgen/gen_key_io_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa68755364473e48cf039e8cc2d08036fe58c1f6/contrib/testgen/gen_key_io_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_key_io_test_vectors.py?ref=fa68755364473e48cf039e8cc2d08036fe58c1f6",
        "patch": "@@ -15,8 +15,7 @@\n from itertools import islice\n from base58 import b58encode_chk, b58decode_chk, b58chars\n import random\n-from binascii import b2a_hex\n-from segwit_addr import bech32_encode, decode, convertbits, CHARSET\n+from segwit_addr import bech32_encode, decode_segwit_address, convertbits, CHARSET\n \n # key types\n PUBKEY_ADDRESS = 0\n@@ -109,7 +108,7 @@ def is_valid(v):\n def is_valid_bech32(v):\n     '''Check vector v for bech32 validity'''\n     for hrp in ['bc', 'tb', 'bcrt']:\n-        if decode(hrp, v) != (None, None):\n+        if decode_segwit_address(hrp, v) != (None, None):\n             return True\n     return False\n \n@@ -141,9 +140,7 @@ def gen_valid_vectors():\n             rv, payload = valid_vector_generator(template)\n             assert is_valid(rv)\n             metadata = {x: y for x, y in zip(metadata_keys,template[3]) if y is not None}\n-            hexrepr = b2a_hex(payload)\n-            if isinstance(hexrepr, bytes):\n-                hexrepr = hexrepr.decode('utf8')\n+            hexrepr = payload.hex()\n             yield (rv, hexrepr, metadata)\n \n def gen_invalid_base58_vector(template):"
      }
    ]
  }
]