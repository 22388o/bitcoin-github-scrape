[
  {
    "sha": "d0b1cee1fe95eba7b968bed2c33ab681d169c91f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMGIxY2VlMWZlOTVlYmE3Yjk2OGJlZDJjMzNhYjY4MWQxNjljOTFm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-09-12T13:01:58Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-09-13T05:57:13Z"
      },
      "message": "doc: `-help-debug` implies `-help`\n\nI don't understand why `-help-debug` would be useful without requesting\nthe help, and I've made this particular mistake one time too many.\n\n(ok, so apparently the original reason that -help-debug is an option is\nto show debug options in the GUI option overview? that seems very\nunlikely to ever be used, if someone wants to add a way to show debug\noptions in the GUI it'd be better to have a check box)",
      "tree": {
        "sha": "dab8b99dfc690c80399de773059646090f1d73a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dab8b99dfc690c80399de773059646090f1d73a2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0b1cee1fe95eba7b968bed2c33ab681d169c91f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0b1cee1fe95eba7b968bed2c33ab681d169c91f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d0b1cee1fe95eba7b968bed2c33ab681d169c91f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0b1cee1fe95eba7b968bed2c33ab681d169c91f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1c12cf60736c5a3ddf75244a0d61cda7f4ad5ed0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c12cf60736c5a3ddf75244a0d61cda7f4ad5ed0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1c12cf60736c5a3ddf75244a0d61cda7f4ad5ed0"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "45689f7ecd7dd1c6a8fe48ab55b3267cdbbc6f18",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0b1cee1fe95eba7b968bed2c33ab681d169c91f/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0b1cee1fe95eba7b968bed2c33ab681d169c91f/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d0b1cee1fe95eba7b968bed2c33ab681d169c91f",
        "patch": "@@ -443,7 +443,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-debug=<category>\", \"Output debugging information (default: -nodebug, supplying <category> is optional). \"\n         \"If <category> is not supplied or if <category> = 1, output all debugging information. <category> can be: \" + ListLogCategories() + \".\", false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-debugexclude=<category>\", strprintf(\"Exclude debugging information for a category. Can be used in conjunction with -debug=1 to output debug logs for all categories except one or more specified categories.\"), false, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-help-debug\", \"Show all debugging options (usage: --help -help-debug)\", false, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-help-debug\", \"Print help message with debugging options and exit\", false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logips\", strprintf(\"Include IP addresses in debug output (default: %u)\", DEFAULT_LOGIPS), false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logtimestamps\", strprintf(\"Prepend debug output with timestamp (default: %u)\", DEFAULT_LOGTIMESTAMPS), false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS), true, OptionsCategory::DEBUG_TEST);"
      },
      {
        "sha": "a989988c45a59164728015a6f99edf4c245ae2cc",
        "filename": "src/qt/paymentrequestplus.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0b1cee1fe95eba7b968bed2c33ab681d169c91f/src/qt/paymentrequestplus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0b1cee1fe95eba7b968bed2c33ab681d169c91f/src/qt/paymentrequestplus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.cpp?ref=d0b1cee1fe95eba7b968bed2c33ab681d169c91f",
        "patch": "@@ -142,7 +142,6 @@ bool PaymentRequestPlus::getMerchant(X509_STORE* certStore, QString& merchant) c\n         if (result != 1) {\n             int error = X509_STORE_CTX_get_error(store_ctx);\n             // For testing payment requests, we allow self signed root certs!\n-            // This option is just shown in the UI options, if -help-debug is enabled.\n             if (!(error == X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT && gArgs.GetBoolArg(\"-allowselfsignedrootcertificates\", DEFAULT_SELFSIGNED_ROOTCERTS))) {\n                 throw SSLVerifyError(X509_verify_cert_error_string(error));\n             } else {"
      },
      {
        "sha": "6331dc21115fd6769feb284acb8ff944b0332906",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0b1cee1fe95eba7b968bed2c33ab681d169c91f/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0b1cee1fe95eba7b968bed2c33ab681d169c91f/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=d0b1cee1fe95eba7b968bed2c33ab681d169c91f",
        "patch": "@@ -660,7 +660,7 @@ std::string ArgsManager::GetHelpMessage() const\n \n bool HelpRequested(const ArgsManager& args)\n {\n-    return args.IsArgSet(\"-?\") || args.IsArgSet(\"-h\") || args.IsArgSet(\"-help\");\n+    return args.IsArgSet(\"-?\") || args.IsArgSet(\"-h\") || args.IsArgSet(\"-help\") || args.IsArgSet(\"-help-debug\");\n }\n \n static const int screenWidth = 79;"
      }
    ]
  }
]