[
  {
    "sha": "3b2489d795247f64aa164c109e1b94657d79945c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjI0ODlkNzk1MjQ3ZjY0YWExNjRjMTA5ZTFiOTQ2NTdkNzk5NDVj",
    "commit": {
      "author": {
        "name": "Harris",
        "email": "brakmic@gmail.com",
        "date": "2020-04-19T16:38:38Z"
      },
      "committer": {
        "name": "Harris",
        "email": "brakmic@gmail.com",
        "date": "2020-04-19T16:38:38Z"
      },
      "message": "cli: show default values in config args log",
      "tree": {
        "sha": "3ff5d6b33903247045ad152350950ea76bd97fda",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ff5d6b33903247045ad152350950ea76bd97fda"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b2489d795247f64aa164c109e1b94657d79945c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEED2bWxOeRx//n2QOeJiaFvHjtEfsFAl6cfo4ACgkQJiaFvHjt\nEfvgSQf+P+CuO0wH8RHh6vOLI2fyvRJYcdm6hDb5VKUZVBNxdblxXXfELwIKq5X/\npZOrkk3wpSpFQPonZqxCpbyP0nAye0GaAPyKRCLszNksZFOa3H8qn0sQiWPPPYRX\nTgx23b1bMaaxQEeKHGvalUcov8GxBhKtuzPHugvoPcLnaa4Q4Cu3o6c19NVbLpIE\n8b2JcFV3bkgtAmjiovlLoPHm2Ws374jtvbpH2usNjo5WBuiTRENIm61ziLL0CT8v\nkfiiiM3QzjtDnRJwGfHn2EuUiAgRvv6DEQI8FiEwrsdUFHT55WrUpdEIdq5UsvCW\ngYZlLIJ41mRPAK2dlPQukj6VRvsQMg==\n=wGst\n-----END PGP SIGNATURE-----",
        "payload": "tree 3ff5d6b33903247045ad152350950ea76bd97fda\nparent 76143bf714abade4a6d4068981c882e5cf0a2386\nauthor Harris <brakmic@gmail.com> 1587314318 +0200\ncommitter Harris <brakmic@gmail.com> 1587314318 +0200\n\ncli: show default values in config args log\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b2489d795247f64aa164c109e1b94657d79945c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b2489d795247f64aa164c109e1b94657d79945c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b2489d795247f64aa164c109e1b94657d79945c/comments",
    "author": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76143bf714abade4a6d4068981c882e5cf0a2386",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76143bf714abade4a6d4068981c882e5cf0a2386",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76143bf714abade4a6d4068981c882e5cf0a2386"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 26,
      "deletions": 1
    },
    "files": [
      {
        "sha": "edac3cfc1dcc5822175654a2f915f6172a51a9aa",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 1,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b2489d795247f64aa164c109e1b94657d79945c/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b2489d795247f64aa164c109e1b94657d79945c/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=3b2489d795247f64aa164c109e1b94657d79945c",
        "patch": "@@ -67,6 +67,8 @@\n #include <thread>\n #include <typeinfo>\n #include <univalue.h>\n+#include <map>\n+#include <regex>\n \n // Application startup time (used for uptime calculation)\n const int64_t nStartupTime = GetTime();\n@@ -426,6 +428,14 @@ void ArgsManager::AddArg(const std::string& name, const std::string& help, unsig\n     if (flags & ArgsManager::NETWORK_ONLY) {\n         m_network_only_args.emplace(arg_name);\n     }\n+\n+    // Add default setting value to defaults map\n+    // by extracting a substring from arg's description.\n+    std::regex re(\"default: (\\\\w+)\");\n+    std::smatch m;\n+    if (std::regex_search(help, m, re) && m.size() > 0) {\n+        settings_defaults.emplace(arg_name, m.str(1));\n+    }\n }\n \n void ArgsManager::AddHiddenArgs(const std::vector<std::string>& names)\n@@ -867,18 +877,27 @@ void ArgsManager::logArgsPrefix(\n     const std::string& section,\n     const std::map<std::string, std::vector<util::SettingsValue>>& args) const\n {\n+    LOCK(cs_args);\n     std::string section_str = section.empty() ? \"\" : \"[\" + section + \"] \";\n     for (const auto& arg : args) {\n+        auto search = settings_defaults.find('-' + arg.first);\n+        auto default_str = search != settings_defaults.end() ? \", default=\" + search->second : \"\";\n         for (const auto& value : arg.second) {\n             Optional<unsigned int> flags = GetArgFlags('-' + arg.first);\n             if (flags) {\n                 std::string value_str = (*flags & SENSITIVE) ? \"****\" : value.write();\n-                LogPrintf(\"%s %s%s=%s\\n\", prefix, section_str, arg.first, value_str);\n+                LogPrintf(\"%s %s%s=%s%s\\n\", prefix, section_str, arg.first, value_str, default_str);\n             }\n         }\n     }\n }\n \n+const std::map<std::string, std::string> ArgsManager::GetSettingsDefaults() const\n+{\n+    LOCK(cs_args);\n+    return settings_defaults;\n+}\n+\n void ArgsManager::LogArgs() const\n {\n     LOCK(cs_args);"
      },
      {
        "sha": "a21f7e3a2e97f665d8303690699df0011c27be94",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b2489d795247f64aa164c109e1b94657d79945c/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b2489d795247f64aa164c109e1b94657d79945c/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=3b2489d795247f64aa164c109e1b94657d79945c",
        "patch": "@@ -166,6 +166,7 @@ class ArgsManager\n     std::set<std::string> m_network_only_args GUARDED_BY(cs_args);\n     std::map<OptionsCategory, std::map<std::string, Arg>> m_available_args GUARDED_BY(cs_args);\n     std::list<SectionInfo> m_config_sections GUARDED_BY(cs_args);\n+    std::map<std::string, std::string> settings_defaults GUARDED_BY(cs_args);\n \n     NODISCARD bool ReadConfigStream(std::istream& stream, const std::string& filepath, std::string& error, bool ignore_invalid_keys = false);\n \n@@ -330,6 +331,11 @@ class ArgsManager\n      */\n     void LogArgs() const;\n \n+    /**\n+     * Map of default setting values\n+     */\n+    const std::map<std::string, std::string> GetSettingsDefaults() const;\n+\n private:\n     // Helper function for LogArgs().\n     void logArgsPrefix("
      }
    ]
  }
]