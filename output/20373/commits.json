[
  {
    "sha": "acebb79d3f45eb18f820ca5bbc1e16e80fac55f1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphY2ViYjc5ZDNmNDVlYjE4ZjgyMGNhNWJiYzFlMTZlODBmYWM1NWYx",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-09T09:06:56Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-10T10:00:44Z"
      },
      "message": "refactor, move-only: Relocate CNode private members",
      "tree": {
        "sha": "e22d5c49059e2f439dd2512a73096d0158e82bb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e22d5c49059e2f439dd2512a73096d0158e82bb0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/acebb79d3f45eb18f820ca5bbc1e16e80fac55f1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/60EwACgkQQQEIES5+\nqB/KIRAAuQmyLetfke+fZNHwrgMp0Jgt4WNP2xckTcaeaFZG8BZsvq0bptz5wo6d\n0Z210k1l2F56YJPSIKj4RkL/zBvPvC8P4BscCYofPdUqH14Zvqn1sP3Zr2No8rz+\nvVLKbak9bA1E7fBJe+RerJOt3EE/LDaO3IA6N56+IVdKEX4rMtlcR8xk+pig0cbL\nZOb/iqgTr/se7PklfuqmhdNL0X4i9utkGzmti+dLjLddX/LVJE/2J3q3bsgmPPen\nT0bJQk1/EIL2r/mfgRrNEW25qxUh1rxknf5jt00zS/pCFNdnb3Nq9hYSJUm0A5xs\nm0Au3A0ODI8ROECU4Ig5D9IUaGPUmp6elUW8vP20JSVN1ZN89+K+lYjzWhVxUPdM\nXwX3PEJ4iWzXnaMqIFRDhWxVR4Odf9QttdZdgEf4vMJT8UDtoB8WPQSSpx8T+CVA\nKiTyBNN9niceHOTsgw3js75RJyNCT/C5CHYaticYUYVCSV39e6bvBYBPvyS0gEbW\nELGe7NwXhap0bM5m/EBvODTRVS/OtViQZ1af2syz0RU9V0i0bbLyh1jjeUGb4WaD\nE7OGX+FL0U4sSMfNyEbd7mXZN0tWT4vKOw1MOh4j5eGF1vDsZ/W3i+Bik6P21FFL\nPStmH38IN9AKN7Pu5dnYC15TERcibazBbn91NbkbFkcfayMSfkY=\n=x8tv\n-----END PGP SIGNATURE-----",
        "payload": "tree e22d5c49059e2f439dd2512a73096d0158e82bb0\nparent 094402430925ec5aac6edbbf52d74f10c665da43\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610183216 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610272844 +0200\n\nrefactor, move-only: Relocate CNode private members\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/acebb79d3f45eb18f820ca5bbc1e16e80fac55f1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/acebb79d3f45eb18f820ca5bbc1e16e80fac55f1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/acebb79d3f45eb18f820ca5bbc1e16e80fac55f1/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "094402430925ec5aac6edbbf52d74f10c665da43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/094402430925ec5aac6edbbf52d74f10c665da43",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/094402430925ec5aac6edbbf52d74f10c665da43"
      }
    ],
    "stats": {
      "total": 70,
      "additions": 35,
      "deletions": 35
    },
    "files": [
      {
        "sha": "45edeb4884c3dbfcd7d1974df612431b36a74cb4",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 35,
        "deletions": 35,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/acebb79d3f45eb18f820ca5bbc1e16e80fac55f1/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/acebb79d3f45eb18f820ca5bbc1e16e80fac55f1/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=acebb79d3f45eb18f820ca5bbc1e16e80fac55f1",
        "patch": "@@ -605,41 +605,6 @@ class CNode\n     CNode(const CNode&) = delete;\n     CNode& operator=(const CNode&) = delete;\n \n-private:\n-    const NodeId id;\n-    const uint64_t nLocalHostNonce;\n-    const ConnectionType m_conn_type;\n-    std::atomic<int> m_greatest_common_version{INIT_PROTO_VERSION};\n-\n-    //! Services offered to this peer.\n-    //!\n-    //! This is supplied by the parent CConnman during peer connection\n-    //! (CConnman::ConnectNode()) from its attribute of the same name.\n-    //!\n-    //! This is const because there is no protocol defined for renegotiating\n-    //! services initially offered to a peer. The set of local services we\n-    //! offer should not change after initialization.\n-    //!\n-    //! An interesting example of this is NODE_NETWORK and initial block\n-    //! download: a node which starts up from scratch doesn't have any blocks\n-    //! to serve, but still advertises NODE_NETWORK because it will eventually\n-    //! fulfill this role after IBD completes. P2P code is written in such a\n-    //! way that it can gracefully handle peers who don't make good on their\n-    //! service advertisements.\n-    const ServiceFlags nLocalServices;\n-\n-    std::list<CNetMessage> vRecvMsg;  // Used only by SocketHandler thread\n-\n-    mutable RecursiveMutex cs_addrName;\n-    std::string addrName GUARDED_BY(cs_addrName);\n-\n-    // Our address, as reported by the peer\n-    CService addrLocal GUARDED_BY(cs_addrLocal);\n-    mutable RecursiveMutex cs_addrLocal;\n-\n-    //! Whether this peer is an inbound onion, e.g. connected via our Tor onion service.\n-    const bool m_inbound_onion{false};\n-\n public:\n \n     NodeId GetId() const {\n@@ -760,6 +725,41 @@ class CNode\n \n     /** Whether this peer is an inbound onion, e.g. connected via our Tor onion service. */\n     bool IsInboundOnion() const { return m_inbound_onion; }\n+\n+private:\n+    const NodeId id;\n+    const uint64_t nLocalHostNonce;\n+    const ConnectionType m_conn_type;\n+    std::atomic<int> m_greatest_common_version{INIT_PROTO_VERSION};\n+\n+    //! Services offered to this peer.\n+    //!\n+    //! This is supplied by the parent CConnman during peer connection\n+    //! (CConnman::ConnectNode()) from its attribute of the same name.\n+    //!\n+    //! This is const because there is no protocol defined for renegotiating\n+    //! services initially offered to a peer. The set of local services we\n+    //! offer should not change after initialization.\n+    //!\n+    //! An interesting example of this is NODE_NETWORK and initial block\n+    //! download: a node which starts up from scratch doesn't have any blocks\n+    //! to serve, but still advertises NODE_NETWORK because it will eventually\n+    //! fulfill this role after IBD completes. P2P code is written in such a\n+    //! way that it can gracefully handle peers who don't make good on their\n+    //! service advertisements.\n+    const ServiceFlags nLocalServices;\n+\n+    std::list<CNetMessage> vRecvMsg;  // Used only by SocketHandler thread\n+\n+    mutable RecursiveMutex cs_addrName;\n+    std::string addrName GUARDED_BY(cs_addrName);\n+\n+    // Our address, as reported by the peer\n+    CService addrLocal GUARDED_BY(cs_addrLocal);\n+    mutable RecursiveMutex cs_addrLocal;\n+\n+    //! Whether this peer is an inbound onion, e.g. connected via our Tor onion service.\n+    const bool m_inbound_onion{false};\n };\n \n /**"
      }
    ]
  },
  {
    "sha": "3642b2ed34e6609e8de558b352516daadb12cac1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjQyYjJlZDM0ZTY2MDllOGRlNTU4YjM1MjUxNmRhYWRiMTJjYWMx",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-09T09:10:12Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-10T10:00:46Z"
      },
      "message": "refactor, net: Increase CNode data member encapsulation\n\nAll protected CNode data members could be private.",
      "tree": {
        "sha": "2c6c2a7509778274630ba2dd3b72bfc2cb5671b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2c6c2a7509778274630ba2dd3b72bfc2cb5671b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3642b2ed34e6609e8de558b352516daadb12cac1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/60E4ACgkQQQEIES5+\nqB/uzg//QZFNV5PgMYSp6V10rD1xXKfn1uAk/MZhtGWzZhLqhBnofrzmTEADXxoM\nXqt11OlpS/pdAuDiebYgOb+EQQtO6fysrUeAOXnLQQQ3lqg++NjjqMDqgXnvx9lZ\noKMtRxdmkGrR7gZJGWDhGSw/JR3L+gqH7GgqUQAX4rA7vNKdZOfELLLalKFtLKgE\nQaWqiee4V1MVkL7VnDV1nws+XUu9aY4VaPXrVYlfaH5qMoYIcLeS0bTPa4PCMxVR\npEyVp3XSdYl9+3kSPyCqJ7ar1dxQE2LFx07fUWu/MivE1vw4HhCdjVkKeV2LcfJ2\nzSHpqe+37PJet7/8T2Ti9L0rfzgChp5cRu95nnlTtMxKSDHjqOZWaNXVWgte/xdi\nMxaEtrO2OQ3t9/neOt0sTEep2WBZKx9M7AuBA8t2gf332bfMubpuVpyLzoW25LWN\nz4ty4Cccn81XTn/7xtGbZj2nBm8tFjP4Zr5jYMxeERvmnNMNXxi+ipe6Piun5NBi\nHZbHuPZNFzRRcL6Bxrorpa7bWjeCQso5LGZiDM1kij317ze/QGQ4hwZRM9S+lYEP\npfKQUWocyNGaeont16kCnAl3YYo/eqXQD7+S/xG0Nw5w8GhmTnv6cBLaXwcNPcwK\nUgZx3tuxelJyvS+mZtbC1pr0v0lYSWPvZm0FXkEAltzD5uA67ts=\n=lHag\n-----END PGP SIGNATURE-----",
        "payload": "tree 2c6c2a7509778274630ba2dd3b72bfc2cb5671b3\nparent acebb79d3f45eb18f820ca5bbc1e16e80fac55f1\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610183412 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610272846 +0200\n\nrefactor, net: Increase CNode data member encapsulation\n\nAll protected CNode data members could be private.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3642b2ed34e6609e8de558b352516daadb12cac1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3642b2ed34e6609e8de558b352516daadb12cac1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3642b2ed34e6609e8de558b352516daadb12cac1/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "acebb79d3f45eb18f820ca5bbc1e16e80fac55f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/acebb79d3f45eb18f820ca5bbc1e16e80fac55f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/acebb79d3f45eb18f820ca5bbc1e16e80fac55f1"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 3,
      "deletions": 10
    },
    "files": [
      {
        "sha": "4e9f584b95183e58aa91f855ff4de27a3addced0",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 10,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3642b2ed34e6609e8de558b352516daadb12cac1/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3642b2ed34e6609e8de558b352516daadb12cac1/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=3642b2ed34e6609e8de558b352516daadb12cac1",
        "patch": "@@ -528,11 +528,6 @@ class CNode\n      */\n     Network ConnectedThroughNetwork() const;\n \n-protected:\n-    mapMsgCmdSize mapSendBytesPerMsgCmd GUARDED_BY(cs_vSend);\n-    mapMsgCmdSize mapRecvBytesPerMsgCmd GUARDED_BY(cs_vRecv);\n-\n-public:\n     // We selected peer as (compact blocks) high-bandwidth peer (BIP152)\n     std::atomic<bool> m_bip152_highbandwidth_to{false};\n     // Peer selected us as (compact blocks) high-bandwidth peer (BIP152)\n@@ -605,8 +600,6 @@ class CNode\n     CNode(const CNode&) = delete;\n     CNode& operator=(const CNode&) = delete;\n \n-public:\n-\n     NodeId GetId() const {\n         return id;\n     }\n@@ -657,8 +650,6 @@ class CNode\n         nRefCount--;\n     }\n \n-\n-\n     void AddAddressKnown(const CAddress& _addr)\n     {\n         assert(m_addr_known);\n@@ -690,7 +681,6 @@ class CNode\n         }\n     }\n \n-\n     void AddKnownTx(const uint256& hash)\n     {\n         if (m_tx_relay != nullptr) {\n@@ -760,6 +750,9 @@ class CNode\n \n     //! Whether this peer is an inbound onion, e.g. connected via our Tor onion service.\n     const bool m_inbound_onion{false};\n+\n+    mapMsgCmdSize mapSendBytesPerMsgCmd GUARDED_BY(cs_vSend);\n+    mapMsgCmdSize mapRecvBytesPerMsgCmd GUARDED_BY(cs_vRecv);\n };\n \n /**"
      }
    ]
  }
]