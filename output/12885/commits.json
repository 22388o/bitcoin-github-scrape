[
  {
    "sha": "2fb168b55d8e07a1df357040cd59c0a93d3ccb6a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZmIxNjhiNTVkOGUwN2ExZGYzNTcwNDBjZDU5YzBhOTNkM2NjYjZh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-04T15:26:07Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-13T16:06:35Z"
      },
      "message": "Make iterators in CScript::FindAndDelete const",
      "tree": {
        "sha": "97ee9ed2fc32a464e18d325083d01cbe037b0974",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/97ee9ed2fc32a464e18d325083d01cbe037b0974"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2fb168b55d8e07a1df357040cd59c0a93d3ccb6a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fb168b55d8e07a1df357040cd59c0a93d3ccb6a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2fb168b55d8e07a1df357040cd59c0a93d3ccb6a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fb168b55d8e07a1df357040cd59c0a93d3ccb6a/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e625548e7cae119ce555783a7a546f0039fc431b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e625548e7cae119ce555783a7a546f0039fc431b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e625548e7cae119ce555783a7a546f0039fc431b"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "224785d999928c9f0c65033b755b4076a2895ffe",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2fb168b55d8e07a1df357040cd59c0a93d3ccb6a/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2fb168b55d8e07a1df357040cd59c0a93d3ccb6a/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=2fb168b55d8e07a1df357040cd59c0a93d3ccb6a",
        "patch": "@@ -594,12 +594,12 @@ class CScript : public CScriptBase\n         if (b.empty())\n             return nFound;\n         CScript result;\n-        iterator pc = begin(), pc2 = begin();\n+        const_iterator pc = begin(), pc2 = begin(), end = this->end();\n         opcodetype opcode;\n         do\n         {\n             result.insert(result.end(), pc2, pc);\n-            while (static_cast<size_t>(end() - pc) >= b.size() && std::equal(b.begin(), b.end(), pc))\n+            while (static_cast<size_t>(end - pc) >= b.size() && std::equal(b.begin(), b.end(), pc))\n             {\n                 pc = pc + b.size();\n                 ++nFound;\n@@ -609,7 +609,7 @@ class CScript : public CScriptBase\n         while (GetOp(pc, opcode));\n \n         if (nFound > 0) {\n-            result.insert(result.end(), pc2, end());\n+            result.insert(result.end(), pc2, end);\n             *this = result;\n         }\n "
      }
    ]
  },
  {
    "sha": "33a8ecfbce9c108f0a945dcce479e87c8a2714dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozM2E4ZWNmYmNlOWMxMDhmMGE5NDVkY2NlNDc5ZTg3YzhhMjcxNGRj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-04T15:35:40Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-13T16:06:35Z"
      },
      "message": "Delete unused non-const-iterator CSCript::GetOp overloads",
      "tree": {
        "sha": "0d1e390665091dc96938bd5625db07048818a58b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d1e390665091dc96938bd5625db07048818a58b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33a8ecfbce9c108f0a945dcce479e87c8a2714dc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33a8ecfbce9c108f0a945dcce479e87c8a2714dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/33a8ecfbce9c108f0a945dcce479e87c8a2714dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33a8ecfbce9c108f0a945dcce479e87c8a2714dc/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2fb168b55d8e07a1df357040cd59c0a93d3ccb6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fb168b55d8e07a1df357040cd59c0a93d3ccb6a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2fb168b55d8e07a1df357040cd59c0a93d3ccb6a"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 0,
      "deletions": 17
    },
    "files": [
      {
        "sha": "00fd469fa1b3b3e022c8ef34144a1c7a5b53d4c8",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33a8ecfbce9c108f0a945dcce479e87c8a2714dc/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33a8ecfbce9c108f0a945dcce479e87c8a2714dc/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=33a8ecfbce9c108f0a945dcce479e87c8a2714dc",
        "patch": "@@ -493,23 +493,6 @@ class CScript : public CScriptBase\n     }\n \n \n-    bool GetOp(iterator& pc, opcodetype& opcodeRet, std::vector<unsigned char>& vchRet)\n-    {\n-         // Wrapper so it can be called with either iterator or const_iterator\n-         const_iterator pc2 = pc;\n-         bool fRet = GetOp2(pc2, opcodeRet, &vchRet);\n-         pc = begin() + (pc2 - begin());\n-         return fRet;\n-    }\n-\n-    bool GetOp(iterator& pc, opcodetype& opcodeRet)\n-    {\n-         const_iterator pc2 = pc;\n-         bool fRet = GetOp2(pc2, opcodeRet, nullptr);\n-         pc = begin() + (pc2 - begin());\n-         return fRet;\n-    }\n-\n     bool GetOp(const_iterator& pc, opcodetype& opcodeRet, std::vector<unsigned char>& vchRet) const\n     {\n         return GetOp2(pc, opcodeRet, &vchRet);"
      }
    ]
  },
  {
    "sha": "6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTc0NTZhZDYwNzJmNDA1ZThiMDJiZmZhMGZiNGU5ZjBjZmU3MWUw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-04T16:02:24Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-13T16:07:27Z"
      },
      "message": "[MOVEONLY] Move CSCript::FindAndDelete to interpreter",
      "tree": {
        "sha": "90162c46919ee3d6ce683f5ff575fec5f917e5ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90162c46919ee3d6ce683f5ff575fec5f917e5ae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "33a8ecfbce9c108f0a945dcce479e87c8a2714dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33a8ecfbce9c108f0a945dcce479e87c8a2714dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33a8ecfbce9c108f0a945dcce479e87c8a2714dc"
      }
    ],
    "stats": {
      "total": 96,
      "additions": 49,
      "deletions": 47
    },
    "files": [
      {
        "sha": "e0d193fa3801c80ffd19e0962abcf15fb81ff840",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 2,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0",
        "patch": "@@ -250,6 +250,34 @@ bool static CheckMinimalPush(const valtype& data, opcodetype opcode) {\n     return true;\n }\n \n+int FindAndDelete(CScript& script, const CScript& b)\n+{\n+    int nFound = 0;\n+    if (b.empty())\n+        return nFound;\n+    CScript result;\n+    CScript::const_iterator pc = script.begin(), pc2 = script.begin(), end = script.end();\n+    opcodetype opcode;\n+    do\n+    {\n+        result.insert(result.end(), pc2, pc);\n+        while (static_cast<size_t>(end - pc) >= b.size() && std::equal(b.begin(), b.end(), pc))\n+        {\n+            pc = pc + b.size();\n+            ++nFound;\n+        }\n+        pc2 = pc;\n+    }\n+    while (script.GetOp(pc, opcode));\n+\n+    if (nFound > 0) {\n+        result.insert(result.end(), pc2, end);\n+        script = std::move(result);\n+    }\n+\n+    return nFound;\n+}\n+\n bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror)\n {\n     static const CScriptNum bnZero(0);\n@@ -891,7 +919,7 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n \n                     // Drop the signature in pre-segwit scripts but not segwit scripts\n                     if (sigversion == SigVersion::BASE) {\n-                        scriptCode.FindAndDelete(CScript(vchSig));\n+                        FindAndDelete(scriptCode, CScript(vchSig));\n                     }\n \n                     if (!CheckSignatureEncoding(vchSig, flags, serror) || !CheckPubKeyEncoding(vchPubKey, flags, sigversion, serror)) {\n@@ -955,7 +983,7 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                     {\n                         valtype& vchSig = stacktop(-isig-k);\n                         if (sigversion == SigVersion::BASE) {\n-                            scriptCode.FindAndDelete(CScript(vchSig));\n+                            FindAndDelete(scriptCode, CScript(vchSig));\n                         }\n                     }\n "
      },
      {
        "sha": "50c747900a0ab9360f8f0c11f7c1cb9d5465ab02",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0",
        "patch": "@@ -189,4 +189,6 @@ bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, const C\n \n size_t CountWitnessSigOps(const CScript& scriptSig, const CScript& scriptPubKey, const CScriptWitness* witness, unsigned int flags);\n \n+int FindAndDelete(CScript& script, const CScript& b);\n+\n #endif // BITCOIN_SCRIPT_INTERPRETER_H"
      },
      {
        "sha": "c06e320a1a012780162f11685329ad18d8e00f2e",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0",
        "patch": "@@ -571,34 +571,6 @@ class CScript : public CScriptBase\n         return (opcodetype)(OP_1+n-1);\n     }\n \n-    int FindAndDelete(const CScript& b)\n-    {\n-        int nFound = 0;\n-        if (b.empty())\n-            return nFound;\n-        CScript result;\n-        const_iterator pc = begin(), pc2 = begin(), end = this->end();\n-        opcodetype opcode;\n-        do\n-        {\n-            result.insert(result.end(), pc2, pc);\n-            while (static_cast<size_t>(end - pc) >= b.size() && std::equal(b.begin(), b.end(), pc))\n-            {\n-                pc = pc + b.size();\n-                ++nFound;\n-            }\n-            pc2 = pc;\n-        }\n-        while (GetOp(pc, opcode));\n-\n-        if (nFound > 0) {\n-            result.insert(result.end(), pc2, end);\n-            *this = result;\n-        }\n-\n-        return nFound;\n-    }\n-\n     /**\n      * Pre-version-0.6, Bitcoin always counted CHECKMULTISIGs\n      * as 20 sigops. With pay-to-script-hash, that changed:"
      },
      {
        "sha": "c26a6a88e8b8cbdf29063b337391f3d1d7ab65ff",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0",
        "patch": "@@ -1349,102 +1349,102 @@ BOOST_AUTO_TEST_CASE(script_FindAndDelete)\n     s = CScript() << OP_1 << OP_2;\n     d = CScript(); // delete nothing should be a no-op\n     expect = s;\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0);\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 0);\n     BOOST_CHECK(s == expect);\n \n     s = CScript() << OP_1 << OP_2 << OP_3;\n     d = CScript() << OP_2;\n     expect = CScript() << OP_1 << OP_3;\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 1);\n     BOOST_CHECK(s == expect);\n \n     s = CScript() << OP_3 << OP_1 << OP_3 << OP_3 << OP_4 << OP_3;\n     d = CScript() << OP_3;\n     expect = CScript() << OP_1 << OP_4;\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 4);\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 4);\n     BOOST_CHECK(s == expect);\n \n     s = ScriptFromHex(\"0302ff03\"); // PUSH 0x02ff03 onto stack\n     d = ScriptFromHex(\"0302ff03\");\n     expect = CScript();\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 1);\n     BOOST_CHECK(s == expect);\n \n     s = ScriptFromHex(\"0302ff030302ff03\"); // PUSH 0x2ff03 PUSH 0x2ff03\n     d = ScriptFromHex(\"0302ff03\");\n     expect = CScript();\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 2);\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 2);\n     BOOST_CHECK(s == expect);\n \n     s = ScriptFromHex(\"0302ff030302ff03\");\n     d = ScriptFromHex(\"02\");\n     expect = s; // FindAndDelete matches entire opcodes\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0);\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 0);\n     BOOST_CHECK(s == expect);\n \n     s = ScriptFromHex(\"0302ff030302ff03\");\n     d = ScriptFromHex(\"ff\");\n     expect = s;\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0);\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 0);\n     BOOST_CHECK(s == expect);\n \n     // This is an odd edge case: strip of the push-three-bytes\n     // prefix, leaving 02ff03 which is push-two-bytes:\n     s = ScriptFromHex(\"0302ff030302ff03\");\n     d = ScriptFromHex(\"03\");\n     expect = CScript() << ParseHex(\"ff03\") << ParseHex(\"ff03\");\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 2);\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 2);\n     BOOST_CHECK(s == expect);\n \n     // Byte sequence that spans multiple opcodes:\n     s = ScriptFromHex(\"02feed5169\"); // PUSH(0xfeed) OP_1 OP_VERIFY\n     d = ScriptFromHex(\"feed51\");\n     expect = s;\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0); // doesn't match 'inside' opcodes\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 0); // doesn't match 'inside' opcodes\n     BOOST_CHECK(s == expect);\n \n     s = ScriptFromHex(\"02feed5169\"); // PUSH(0xfeed) OP_1 OP_VERIFY\n     d = ScriptFromHex(\"02feed51\");\n     expect = ScriptFromHex(\"69\");\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 1);\n     BOOST_CHECK(s == expect);\n \n     s = ScriptFromHex(\"516902feed5169\");\n     d = ScriptFromHex(\"feed51\");\n     expect = s;\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0);\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 0);\n     BOOST_CHECK(s == expect);\n \n     s = ScriptFromHex(\"516902feed5169\");\n     d = ScriptFromHex(\"02feed51\");\n     expect = ScriptFromHex(\"516969\");\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 1);\n     BOOST_CHECK(s == expect);\n \n     s = CScript() << OP_0 << OP_0 << OP_1 << OP_1;\n     d = CScript() << OP_0 << OP_1;\n     expect = CScript() << OP_0 << OP_1; // FindAndDelete is single-pass\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 1);\n     BOOST_CHECK(s == expect);\n \n     s = CScript() << OP_0 << OP_0 << OP_1 << OP_0 << OP_1 << OP_1;\n     d = CScript() << OP_0 << OP_1;\n     expect = CScript() << OP_0 << OP_1; // FindAndDelete is single-pass\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 2);\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 2);\n     BOOST_CHECK(s == expect);\n \n     // Another weird edge case:\n     // End with invalid push (not enough data)...\n     s = ScriptFromHex(\"0003feed\");\n     d = ScriptFromHex(\"03feed\"); // ... can remove the invalid push\n     expect = ScriptFromHex(\"00\");\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 1);\n     BOOST_CHECK(s == expect);\n \n     s = ScriptFromHex(\"0003feed\");\n     d = ScriptFromHex(\"00\");\n     expect = ScriptFromHex(\"03feed\");\n-    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK_EQUAL(FindAndDelete(s, d), 1);\n     BOOST_CHECK(s == expect);\n }\n "
      },
      {
        "sha": "6b8856ef47cb74d13ba88d69ffe48ca55986e546",
        "filename": "src/test/sighash_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0/src/test/sighash_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0/src/test/sighash_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sighash_tests.cpp?ref=6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0",
        "patch": "@@ -35,7 +35,7 @@ uint256 static SignatureHashOld(CScript scriptCode, const CTransaction& txTo, un\n \n     // In case concatenating two scripts ends up with two codeseparators,\n     // or an extra one at the end, this prevents all those possible incompatibilities.\n-    scriptCode.FindAndDelete(CScript(OP_CODESEPARATOR));\n+    FindAndDelete(scriptCode, CScript(OP_CODESEPARATOR));\n \n     // Blank out other inputs' signatures\n     for (unsigned int i = 0; i < txTmp.vin.size(); i++)"
      }
    ]
  },
  {
    "sha": "54a5a21158f740990048b1d43c641630744cf3ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NGE1YTIxMTU4Zjc0MDk5MDA0OGIxZDQzYzY0MTYzMDc0NGNmM2Vl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-04T16:14:13Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-04-13T16:07:29Z"
      },
      "message": "[MOVEONLY] Turn CScript::GetOp2 into a function and move to cpp",
      "tree": {
        "sha": "4d133b4c58fee0933019b05926c6df188bc313ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d133b4c58fee0933019b05926c6df188bc313ab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54a5a21158f740990048b1d43c641630744cf3ee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54a5a21158f740990048b1d43c641630744cf3ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54a5a21158f740990048b1d43c641630744cf3ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54a5a21158f740990048b1d43c641630744cf3ee/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a7456ad6072f405e8b02bffa0fb4e9f0cfe71e0"
      }
    ],
    "stats": {
      "total": 111,
      "additions": 57,
      "deletions": 54
    },
    "files": [
      {
        "sha": "58d3aad5bf8aa72ad746ba1b06541b12b87bd615",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54a5a21158f740990048b1d43c641630744cf3ee/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54a5a21158f740990048b1d43c641630744cf3ee/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=54a5a21158f740990048b1d43c641630744cf3ee",
        "patch": "@@ -34,7 +34,7 @@ std::string FormatScript(const CScript& script)\n     while (it != script.end()) {\n         CScript::const_iterator it2 = it;\n         std::vector<unsigned char> vch;\n-        if (script.GetOp2(it, op, &vch)) {\n+        if (script.GetOp(it, op, vch)) {\n             if (op == OP_0) {\n                 ret += \"0 \";\n                 continue;"
      },
      {
        "sha": "7f25d915a82c5fc793da75383697f3d602dee432",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54a5a21158f740990048b1d43c641630744cf3ee/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54a5a21158f740990048b1d43c641630744cf3ee/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=54a5a21158f740990048b1d43c641630744cf3ee",
        "patch": "@@ -280,3 +280,55 @@ bool CScript::HasValidOps() const\n     }\n     return true;\n }\n+\n+bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator end, opcodetype& opcodeRet, std::vector<unsigned char>* pvchRet)\n+{\n+    opcodeRet = OP_INVALIDOPCODE;\n+    if (pvchRet)\n+        pvchRet->clear();\n+    if (pc >= end)\n+        return false;\n+\n+    // Read instruction\n+    if (end - pc < 1)\n+        return false;\n+    unsigned int opcode = *pc++;\n+\n+    // Immediate operand\n+    if (opcode <= OP_PUSHDATA4)\n+    {\n+        unsigned int nSize = 0;\n+        if (opcode < OP_PUSHDATA1)\n+        {\n+            nSize = opcode;\n+        }\n+        else if (opcode == OP_PUSHDATA1)\n+        {\n+            if (end - pc < 1)\n+                return false;\n+            nSize = *pc++;\n+        }\n+        else if (opcode == OP_PUSHDATA2)\n+        {\n+            if (end - pc < 2)\n+                return false;\n+            nSize = ReadLE16(&pc[0]);\n+            pc += 2;\n+        }\n+        else if (opcode == OP_PUSHDATA4)\n+        {\n+            if (end - pc < 4)\n+                return false;\n+            nSize = ReadLE32(&pc[0]);\n+            pc += 4;\n+        }\n+        if (end - pc < 0 || (unsigned int)(end - pc) < nSize)\n+            return false;\n+        if (pvchRet)\n+            pvchRet->assign(pc, pc + nSize);\n+        pc += nSize;\n+    }\n+\n+    opcodeRet = static_cast<opcodetype>(opcode);\n+    return true;\n+}"
      },
      {
        "sha": "d8b7c06013192f892b3b37a84482de6ed385605f",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 4,
        "deletions": 53,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54a5a21158f740990048b1d43c641630744cf3ee/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54a5a21158f740990048b1d43c641630744cf3ee/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=54a5a21158f740990048b1d43c641630744cf3ee",
        "patch": "@@ -385,6 +385,8 @@ class CScriptNum\n  */\n typedef prevector<28, unsigned char> CScriptBase;\n \n+bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator end, opcodetype& opcodeRet, std::vector<unsigned char>* pvchRet);\n+\n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public CScriptBase\n {\n@@ -495,65 +497,14 @@ class CScript : public CScriptBase\n \n     bool GetOp(const_iterator& pc, opcodetype& opcodeRet, std::vector<unsigned char>& vchRet) const\n     {\n-        return GetOp2(pc, opcodeRet, &vchRet);\n+        return GetScriptOp(pc, end(), opcodeRet, &vchRet);\n     }\n \n     bool GetOp(const_iterator& pc, opcodetype& opcodeRet) const\n     {\n-        return GetOp2(pc, opcodeRet, nullptr);\n+        return GetScriptOp(pc, end(), opcodeRet, nullptr);\n     }\n \n-    bool GetOp2(const_iterator& pc, opcodetype& opcodeRet, std::vector<unsigned char>* pvchRet) const\n-    {\n-        opcodeRet = OP_INVALIDOPCODE;\n-        if (pvchRet)\n-            pvchRet->clear();\n-        if (pc >= end())\n-            return false;\n-\n-        // Read instruction\n-        if (end() - pc < 1)\n-            return false;\n-        unsigned int opcode = *pc++;\n-\n-        // Immediate operand\n-        if (opcode <= OP_PUSHDATA4)\n-        {\n-            unsigned int nSize = 0;\n-            if (opcode < OP_PUSHDATA1)\n-            {\n-                nSize = opcode;\n-            }\n-            else if (opcode == OP_PUSHDATA1)\n-            {\n-                if (end() - pc < 1)\n-                    return false;\n-                nSize = *pc++;\n-            }\n-            else if (opcode == OP_PUSHDATA2)\n-            {\n-                if (end() - pc < 2)\n-                    return false;\n-                nSize = ReadLE16(&pc[0]);\n-                pc += 2;\n-            }\n-            else if (opcode == OP_PUSHDATA4)\n-            {\n-                if (end() - pc < 4)\n-                    return false;\n-                nSize = ReadLE32(&pc[0]);\n-                pc += 4;\n-            }\n-            if (end() - pc < 0 || (unsigned int)(end() - pc) < nSize)\n-                return false;\n-            if (pvchRet)\n-                pvchRet->assign(pc, pc + nSize);\n-            pc += nSize;\n-        }\n-\n-        opcodeRet = static_cast<opcodetype>(opcode);\n-        return true;\n-    }\n \n     /** Encode/decode small integers: */\n     static int DecodeOP_N(opcodetype opcode)"
      }
    ]
  }
]