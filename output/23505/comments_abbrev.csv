DrahtBot,2021-11-14 03:12:44,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23508](https://github.com/bitcoin/bitcoin/pull/23508) (Add getdeploymentinfo RPC by ajtowns)\n\nIf you consider this pul",https://github.com/bitcoin/bitcoin/pull/23505#issuecomment-968197347,968197347,
JeremyRubin,2021-11-15 21:16:57,Is there an earlier block height we can use?,https://github.com/bitcoin/bitcoin/pull/23505#issuecomment-969329395,969329395,
achow101,2021-11-15 21:20:24,ACK 88884ae97dee3ea915a35612531f62d1468b911b,https://github.com/bitcoin/bitcoin/pull/23505#issuecomment-969331976,969331976,
achow101,2021-11-15 23:50:36,"> Is there an earlier block height we can use?\n\nIt seems that 692262 is the earliest block height.",https://github.com/bitcoin/bitcoin/pull/23505#issuecomment-969452058,969452058,
JeremyRubin,2021-11-16 00:13:54,if it's just that block with an invalid spend we could do BIP340Exception for that block hash and always on since genesis?,https://github.com/bitcoin/bitcoin/pull/23505#issuecomment-969480792,969480792,
MarcoFalke,2021-11-17 11:04:31,"> if it's just that block with an invalid spend we could do BIP340Exception for that block hash and always on since genesis?\n\nProposed in https://github.com/bitcoin/bitcoin/pull/23536",https://github.com/bitcoin/bitcoin/pull/23505#issuecomment-971468549,971468549,
Sjors,2021-11-18 13:47:42,"> if it's just that block with an invalid spend we could do BIP340Exception for that block hash and always on since genesis?\n\nThis would also have my preference.",https://github.com/bitcoin/bitcoin/pull/23505#issuecomment-972880891,972880891,
MarcoFalke,2021-11-18 14:00:18,"> This would also have my preference.\n\nI wouldn't call it ""preference"". https://github.com/bitcoin/bitcoin/pull/23536 and this pull request are doing two different things. One is setting the script verification flags starting from genesis, regardless of the activation status. This one is turning the activation into a height based one. If https://github.com/bitcoin/bitcoin/pull/23536 is merged ",https://github.com/bitcoin/bitcoin/pull/23505#issuecomment-972890910,972890910,
gruve-p,2021-11-30 15:50:34,ACK https://github.com/bitcoin/bitcoin/pull/23505/commits/88884ae97dee3ea915a35612531f62d1468b911b,https://github.com/bitcoin/bitcoin/pull/23505#issuecomment-982766190,982766190,
MarcoFalke,2021-11-30 16:08:52,"Force pushed with two changes:\n\n* Rebased to get rid of already removed references to `DEPLOYMENT_TAPROOT` in master (makes review easier, as the effects are smaller).\n* Added the block hash of the activation height in a comment, as the chain has passed the activation height since this pull was opened.\n\nShould be easy to re-review.",https://github.com/bitcoin/bitcoin/pull/23505#issuecomment-982783451,982783451,
luke-jr,2021-11-30 19:43:37,">the decision will be buried by ~10 months of POW at release time.\n\nPOW/miners do not decide protocol rules. It would be nice to see more nodes enforcing Taproot first. OTOH, this software will activate Taproot based on the POW regardless of user enforcement, so maybe a separate issue. *shrug*",https://github.com/bitcoin/bitcoin/pull/23505#issuecomment-982960730,982960730,
MarcoFalke,2021-11-30 19:48:19,"> OTOH, this software will activate Taproot based on the POW regardless of user enforcement, so maybe a separate issue. shrug\n\nIndeed, this is a separate discussion.",https://github.com/bitcoin/bitcoin/pull/23505#issuecomment-982964304,982964304,
katesalazar,2021-11-13 18:33:43,"This looks like unreachable code is being replaced with unreachable code.\n\nIf the switch statement is replaced with an if-elsif-else statement,\nthe unreachable code can be made go away.\n",https://github.com/bitcoin/bitcoin/pull/23505#discussion_r748751683,748751683,src/consensus/params.h
katesalazar,2021-11-13 18:53:40,"https://marcofalke.github.io/btc_cov/total.coverage/src/consensus/params.h.gcov.html\n\nMake the last case branch a default branch and flip the\nunreachable assertion sitting idle into a reachable assertion normally doing a job.\n\nOr do you prefer adding a test triggering the failure to assert?\n",https://github.com/bitcoin/bitcoin/pull/23505#discussion_r748753433,748753433,src/consensus/params.h
MarcoFalke,2021-11-15 10:16:31,"We can't use a default statement (or an `else` without condition), as explained in the comment one line above the one you commented on.",https://github.com/bitcoin/bitcoin/pull/23505#discussion_r749180720,749180720,src/consensus/params.h
achow101,2021-11-15 21:14:50,"In 88884ae97dee3ea915a35612531f62d1468b911b ""Bury taproot deployment""\n\nFor consistency with the other buried deployments, we should have the hash listed here as a comment. My node has `0000000000000000000687bca986194dc2c1f949318629b44bb54ec0a94d8244` as block 709632.",https://github.com/bitcoin/bitcoin/pull/23505#discussion_r749686483,749686483,src/chainparams.cpp
MarcoFalke,2021-11-17 11:03:58,"The block hash was not available when I opened the pull request, but I will include it on the next force push.",https://github.com/bitcoin/bitcoin/pull/23505#discussion_r751132615,751132615,src/chainparams.cpp
MarcoFalke,2021-11-30 16:05:57,"Thanks, fixed",https://github.com/bitcoin/bitcoin/pull/23505#discussion_r759431011,759431011,src/chainparams.cpp
