[
  {
    "sha": "c99ab3ca4b2363b721d6582cf22d5d41896d1037",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOTlhYjNjYTRiMjM2M2I3MjFkNjU4MmNmMjJkNWQ0MTg5NmQxMDM3",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-02-03T16:23:01Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2017-04-10T13:26:03Z"
      },
      "message": "RPC: Allow multiple names for parameters",
      "tree": {
        "sha": "1c6517bdd05e682f9382138b470c2bbff90b7a37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c6517bdd05e682f9382138b470c2bbff90b7a37"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c99ab3ca4b2363b721d6582cf22d5d41896d1037",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c99ab3ca4b2363b721d6582cf22d5d41896d1037",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c99ab3ca4b2363b721d6582cf22d5d41896d1037",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c99ab3ca4b2363b721d6582cf22d5d41896d1037/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e19586a8a95502ce0f9fb8319ca6456c2ce161b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e19586a8a95502ce0f9fb8319ca6456c2ce161b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e19586a8a95502ce0f9fb8319ca6456c2ce161b3"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 12,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ea93e8cc741c1fc2157863a00fa61cd34b95455e",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c99ab3ca4b2363b721d6582cf22d5d41896d1037/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c99ab3ca4b2363b721d6582cf22d5d41896d1037/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=c99ab3ca4b2363b721d6582cf22d5d41896d1037",
        "patch": "@@ -22,6 +22,8 @@\n #include <boost/signals2/signal.hpp>\n #include <boost/thread.hpp>\n #include <boost/algorithm/string/case_conv.hpp> // for to_upper()\n+#include <boost/algorithm/string/classification.hpp>\n+#include <boost/algorithm/string/split.hpp>\n \n #include <memory> // for unique_ptr\n #include <unordered_map>\n@@ -432,8 +434,16 @@ static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, c\n     }\n     // Process expected parameters.\n     int hole = 0;\n-    for (const std::string &argName: argNames) {\n-        auto fr = argsIn.find(argName);\n+    for (const std::string &argNamePattern: argNames) {\n+        std::vector<std::string> vargNames;\n+        boost::algorithm::split(vargNames, argNamePattern, boost::algorithm::is_any_of(\"|\"));\n+        auto fr = argsIn.end();\n+        for (const std::string & argName : vargNames) {\n+            fr = argsIn.find(argName);\n+            if (fr != argsIn.end()) {\n+                break;\n+            }\n+        }\n         if (fr != argsIn.end()) {\n             for (int i = 0; i < hole; ++i) {\n                 // Fill hole between specified parameters with JSON nulls,"
      }
    ]
  },
  {
    "sha": "e3c9f2ddb1e49f719cc1f3f7cc2a98626bee4364",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplM2M5ZjJkZGIxZTQ5ZjcxOWNjMWYzZjdjYzJhOTg2MjZiZWU0MzY0",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2017-04-10T13:28:56Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2017-05-12T15:58:42Z"
      },
      "message": "Use a verbosity instead of two verbose parameters\n\nVerbose is changed to an int. This can have values from 0-2 for each level of verbosity.\nVerbosity level 2 has transaction details displayed in the results.",
      "tree": {
        "sha": "c92124fca8f4072f8d436d11b69ef8fb33bdf15b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c92124fca8f4072f8d436d11b69ef8fb33bdf15b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3c9f2ddb1e49f719cc1f3f7cc2a98626bee4364",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3c9f2ddb1e49f719cc1f3f7cc2a98626bee4364",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3c9f2ddb1e49f719cc1f3f7cc2a98626bee4364",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3c9f2ddb1e49f719cc1f3f7cc2a98626bee4364/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c99ab3ca4b2363b721d6582cf22d5d41896d1037",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c99ab3ca4b2363b721d6582cf22d5d41896d1037",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c99ab3ca4b2363b721d6582cf22d5d41896d1037"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 27,
      "deletions": 14
    },
    "files": [
      {
        "sha": "421a52d51a58ceed8afc9e3c9029b6eba1dc16a7",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 13,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3c9f2ddb1e49f719cc1f3f7cc2a98626bee4364/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3c9f2ddb1e49f719cc1f3f7cc2a98626bee4364/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=e3c9f2ddb1e49f719cc1f3f7cc2a98626bee4364",
        "patch": "@@ -686,13 +686,16 @@ UniValue getblock(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getblock \\\"blockhash\\\" ( verbose )\\n\"\n-            \"\\nIf verbose is false, returns a string that is serialized, hex-encoded data for block 'hash'.\\n\"\n-            \"If verbose is true, returns an Object with information about block <hash>.\\n\"\n+            \"getblock \\\"blockhash\\\" ( verbosity ) \\n\"\n+            \"\\nIf verbosity is 0, returns a string that is serialized, hex-encoded data for block 'hash'.\\n\"\n+            \"If verbosity is 1, returns an Object with information about block <hash>.\\n\"\n+            \"If verbosity is 2, returns an Object with information about block <hash> and information about each transaction. \\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"blockhash\\\"          (string, required) The block hash\\n\"\n-            \"2. verbose                (boolean, optional, default=true) true for a json object, false for the hex encoded data\\n\"\n-            \"\\nResult (for verbose = true):\\n\"\n+            \"2. verbosity              (numeric, optional, default=1) 0 for hex encoded data, 1 for a json object, and 2 for json object with transaction data\\n\"\n+            \"\\nResult (for verbosity = 0):\\n\"\n+            \"\\\"data\\\"             (string) A string that is serialized, hex-encoded data for block 'hash'.\\n\"\n+            \"\\nResult (for verbosity = 1):\\n\"\n             \"{\\n\"\n             \"  \\\"hash\\\" : \\\"hash\\\",     (string) the block hash (same as provided)\\n\"\n             \"  \\\"confirmations\\\" : n,   (numeric) The number of confirmations, or -1 if the block is not on the main chain\\n\"\n@@ -716,8 +719,14 @@ UniValue getblock(const JSONRPCRequest& request)\n             \"  \\\"previousblockhash\\\" : \\\"hash\\\",  (string) The hash of the previous block\\n\"\n             \"  \\\"nextblockhash\\\" : \\\"hash\\\"       (string) The hash of the next block\\n\"\n             \"}\\n\"\n-            \"\\nResult (for verbose=false):\\n\"\n-            \"\\\"data\\\"             (string) A string that is serialized, hex-encoded data for block 'hash'.\\n\"\n+            \"\\nResult (for verbosity = 2):\\n\"\n+            \"{\\n\"\n+            \"  ...,                     Same output as verbosity = 1.\\n\"\n+            \"  \\\"tx\\\" : [               (array of Objects) The transactions in the format of the getrawtransaction RPC. Different from verbosity = 1 \\\"tx\\\" result.\\n\"\n+            \"         ,...\\n\"\n+            \"  ],\\n\"\n+            \"  ,...                     Same output as verbosity = 1.\\n\"\n+            \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getblock\", \"\\\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\\\"\")\n             + HelpExampleRpc(\"getblock\", \"\\\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\\\"\")\n@@ -728,9 +737,13 @@ UniValue getblock(const JSONRPCRequest& request)\n     std::string strHash = request.params[0].get_str();\n     uint256 hash(uint256S(strHash));\n \n-    bool fVerbose = true;\n-    if (request.params.size() > 1)\n-        fVerbose = request.params[1].get_bool();\n+    int verbosity = 1;\n+    if (request.params.size() > 1) {\n+        if(request.params[1].isNum())\n+            verbosity = request.params[1].get_int();\n+        else\n+            verbosity = request.params[1].get_bool() ? 1 : 0;\n+    }\n \n     if (mapBlockIndex.count(hash) == 0)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n@@ -749,15 +762,15 @@ UniValue getblock(const JSONRPCRequest& request)\n         // block).\n         throw JSONRPCError(RPC_MISC_ERROR, \"Block not found on disk\");\n \n-    if (!fVerbose)\n+    if (verbosity <= 0)\n     {\n         CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n         ssBlock << block;\n         std::string strHex = HexStr(ssBlock.begin(), ssBlock.end());\n         return strHex;\n     }\n \n-    return blockToJSON(block, pblockindex);\n+    return blockToJSON(block, pblockindex, verbosity >= 2);\n }\n \n struct CCoinsStats\n@@ -1421,7 +1434,7 @@ static const CRPCCommand commands[] =\n     { \"blockchain\",         \"getblockchaininfo\",      &getblockchaininfo,      true,  {} },\n     { \"blockchain\",         \"getbestblockhash\",       &getbestblockhash,       true,  {} },\n     { \"blockchain\",         \"getblockcount\",          &getblockcount,          true,  {} },\n-    { \"blockchain\",         \"getblock\",               &getblock,               true,  {\"blockhash\",\"verbose\"} },\n+    { \"blockchain\",         \"getblock\",               &getblock,               true,  {\"blockhash\",\"verbosity|verbose\"} },\n     { \"blockchain\",         \"getblockhash\",           &getblockhash,           true,  {\"height\"} },\n     { \"blockchain\",         \"getblockheader\",         &getblockheader,         true,  {\"blockhash\",\"verbose\"} },\n     { \"blockchain\",         \"getchaintips\",           &getchaintips,           true,  {} },"
      },
      {
        "sha": "9a43649d23d40dce7db19adfbfb14b1923ee26ac",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3c9f2ddb1e49f719cc1f3f7cc2a98626bee4364/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3c9f2ddb1e49f719cc1f3f7cc2a98626bee4364/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=e3c9f2ddb1e49f719cc1f3f7cc2a98626bee4364",
        "patch": "@@ -77,7 +77,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"listunspent\", 0, \"minconf\" },\n     { \"listunspent\", 1, \"maxconf\" },\n     { \"listunspent\", 2, \"addresses\" },\n-    { \"getblock\", 1, \"verbose\" },\n+    { \"getblock\", 1, \"verbosity\" },\n     { \"getblockheader\", 1, \"verbose\" },\n     { \"gettransaction\", 1, \"include_watchonly\" },\n     { \"getrawtransaction\", 1, \"verbose\" },"
      }
    ]
  }
]