dcousens,2016-09-12T03:10:27Z,"concept NACK,  is two RPC requests really so bad?\n\n**edit:** _weak_ concept NACK\n",https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-246233912,246233912,
achow101,2016-09-12T03:25:06Z,"@dcousens yes, two RPC calls is really bad, especially when you want the details of all the transactions in a block. Then you end up running getrawtransaction thousands of times. Also, AFAICT, this doesn't require the txindex in order to get the transactions, unlike getrawtransaction.\n",https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-246235290,246235290,
dcousens,2016-09-12T03:50:56Z,"> @dcousens yes, two RPC calls is really bad\n\nWhy?\nIf you're following best practices (RPC is over localhost only) in terms of access, the latency should be irrelevant.\n\nIn a batched RPC call,  the overhead is literally just 1RTT more.\nNot N (aka, thousands),  1.\n\n> AFAICT, this doesn't require the txindex in order to get the transactions, unlike getrawtransaction.\n\nPerhaps `getrawtransa",https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-246237627,246237627,
achow101,2016-09-12T04:05:06Z,"> In a batched RPC call, the overhead is literally just 1RTT more.\n> Not N (aka, thousands), 1.\n\nHow?\n\n> edit: In fact, adding that option would be significantly more useful than this RTT optimisation IMHO.\n\nWell the functionality to this was already in the code. The BlockToJson method took a parameter for txDetails which was by default false. This just lets you set that to true.\n",https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-246238855,246238855,
dcousens,2016-09-12T04:11:49Z,http://www.jsonrpc.org/specification#batch\n\nWhat language are you using? Your RPC library should be able to handle this quite easily.\n,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-246239406,246239406,
achow101,2016-09-12T04:27:01Z,Huh. Didn't know that. I've been using bash with either curl or bitcoin-cli and python.\n,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-246241245,246241245,
laanwj,2016-09-13T15:33:14Z,"Saving roundtrip time is not a valid reason to add a RPC API (see discussion in #8457).\n\n>  Also, AFAICT, this doesn't require the txindex in order to get the transactions, unlike getrawtransaction.\n\nThis is the only important fact here: you _cannot_ get this information any other way. getrawtransaction won't get you transactions in blocks, at least without tx index. \n\nThe only way to get th",https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-246721942,246721942,
dcousens,2016-09-13T21:54:13Z,@laanwj would it maybe be better to add functionality via getrawtransaction w/ a block id? (perhaps in addition to this)\n,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-246837676,246837676,
laanwj,2016-09-14T09:24:34Z,"> would it maybe be better to add functionality via getrawtransaction w/ a block id? (perhaps in addition to this)\n\nWell yes a ""gather transaction [X,...] from prespecified block Y"" RPC call could be useful in some rare cases. But on the other hand it'll still have to read the entire block from disk and deserialize it. It's terribly inefficient already.\nSo if it decoded the entire block why not",https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-246955769,246955769,
dcousens,2016-09-14T12:06:29Z,@laanwj indeed!  Forgot about the resulting deserialization.\n,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-246992130,246992130,
luke-jr,2016-09-22T04:14:22Z,Concept ACK for all the reasons @laanwj already discussed.\n,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-248806772,248806772,
laanwj,2016-10-26T11:33:56Z,I'm starting to realize that @luke-jr's idea to accept 0-2 isn't such a bad idea after all. Just rename the argument  'verbosityLevel'. It is easier to use and understand from a user perspective than two booleans (we regularly get confused there in the tests ourselves). Also it'd remove having to deal with the redundant and nonsensical combo `verbose=false extraVerbose=true`. \n\nIt should still a,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-256321542,256321542,
achow101,2016-10-26T15:03:50Z,How should it document in the help message that the old behavior is still accepted? \n,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-256375507,256375507,
achow101,2016-10-26T15:29:52Z,Rebased and made verbose an int from 0-2\n,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-256383251,256383251,
luke-jr,2016-11-24T05:32:04Z,"@achow101 The old behaviour should be considered deprecated, and therefore not documented.",https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-262693681,262693681,
achow101,2016-11-24T05:47:19Z,@luke-jr done,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-262695333,262695333,
achow101,2017-01-10T00:50:22Z,merge please?,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-271454604,271454604,
luke-jr,2017-02-03T16:00:19Z,(Needs rebase),https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-277286033,277286033,
achow101,2017-02-03T16:26:55Z,rebased,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-277293303,277293303,
pstratem,2017-02-15T00:06:25Z,Is this compatible with callers of getblock which send true instead of 0/1 ?,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-279876993,279876993,
achow101,2017-02-15T00:39:15Z,@pstratem Yes. The old style of calling is maintained for compatibility.,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-279882600,279882600,
sipa,2017-04-09T15:29:15Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-292792783,292792783,
achow101,2017-04-10T13:30:49Z,rebased. also added @jnewbery's suggestion with the help text.,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-292949681,292949681,
achow101,2017-05-12T15:59:45Z,@paveljanik I made the change.,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-301116579,301116579,
laanwj,2017-05-15T15:20:10Z,Tested ACK e3c9f2d,https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-301508171,301508171,
luke-jr,2016-10-18T08:42:34Z,Double boolean here seems ugly. Maybe allow verbose to be boolean or a number 0-2 (with 2 being extraVerbose)?\n,https://github.com/bitcoin/bitcoin/pull/8704#discussion_r83806732,83806732,src/rpc/blockchain.cpp
laanwj,2016-10-18T09:10:44Z,"It is ugly, but overloading on type in JSON which is essentially dynamically typed is also ugly.\n\nNamed parameters as implemented in #8811 would make this more bearable.\n",https://github.com/bitcoin/bitcoin/pull/8704#discussion_r83811619,83811619,src/rpc/blockchain.cpp
laanwj,2016-10-18T09:15:01Z,"I do agree that for a new interface, a scale for verbosity would have made more sense instead of a boolean.\nMaybe that's a better choice I'm just not sure. Changing the meaning of existing arguments is always annoying and means extra testing for backwards compatibility.\n",https://github.com/bitcoin/bitcoin/pull/8704#discussion_r83812332,83812332,src/rpc/blockchain.cpp
luke-jr,2016-11-24T05:33:36Z,Should be renamed to verbosity.,https://github.com/bitcoin/bitcoin/pull/8704#discussion_r89437672,89437672,src/rpc/blockchain.cpp
jnewbery,2017-02-15T23:04:26Z,"I'd suggest not including this in the help output, and just having something like:\n\n```c\n           ""  \""tx\"" : [               (array of Objects) The transactions. Format is the same as for getrawtransaction call\n""\n           ""         ,...\n""\n           ""  ],\n""\n```\n\nIf the output format of `TxToJSON()` ever changes, I'm sure that changing this help text will be forgotten!",https://github.com/bitcoin/bitcoin/pull/8704#discussion_r101406601,101406601,src/rpc/blockchain.cpp
paveljanik,2017-05-12T06:39:12Z,What about mentioning only the differences to verbosity=1 instead?,https://github.com/bitcoin/bitcoin/pull/8704#discussion_r116160900,116160900,src/rpc/blockchain.cpp
achow101,2017-05-12T15:47:29Z,"something like this?\n\n```\n{\n..., Same as for verbosity=1\n""tx"" : [           (array of Objects) The transactions in the format of the getrawtransaction RPC.\n         , ...\n],\n... Same as for verbosity=1\n}\n```",https://github.com/bitcoin/bitcoin/pull/8704#discussion_r116262639,116262639,src/rpc/blockchain.cpp
paveljanik,2017-05-12T15:50:07Z,"Yup, or maybe even better:\n\n```\nAdditional output (for verbosity=1):...\n```",https://github.com/bitcoin/bitcoin/pull/8704#discussion_r116263199,116263199,src/rpc/blockchain.cpp
