codeboost,2013-11-22T13:01:23Z,Tested on OSX 10.9 with homebrew:\nNo more 'No working boost sleep implementation found' error during ./configure\nBuilds fine.\n,https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-29070634,29070634,
theuni,2013-12-01T23:52:24Z,"Not internal files and build-targets. What's the benefit?\nEdit: Whoops, replied in the wrong place. I'm sure you'll find it :p\n",https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-29587188,29587188,
luke-jr,2013-12-02T01:05:31Z,Makes testing against an alternative LevelDB easier.\n,https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-29588915,29588915,
luke-jr,2013-12-03T13:46:23Z,Split out bitcoin-cli from bitcoind and rebased.\n,https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-29710244,29710244,
theuni,2013-12-03T18:36:22Z,"@luke-jr You missed my point. Please re-read cae63be6c95b19c236a2333c1f2456e016e13f0f. This is not theoretical, it was fixed because it was seen by devs. See here for another explanation: http://stackoverflow.com/questions/17216048/parallel-gnu-make-and-rules-that-create-several-targets-at-once\n\nI really don't like the leveldb changes, -1 to those. The helper libs are becoming a mess as well, I'",https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-29737722,29737722,
luke-jr,2013-12-03T19:23:03Z,"@theuni Ugh, that affects multi-target rules too? How annoying. What are your thoughts on the suggestions in that StackOverflow link (a dummy rule that does the real build and depended on by the real targets)?\n",https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-29742096,29742096,
theuni,2013-12-03T20:14:13Z,All you should need to do is to ensure that they're chained:\n\n```\n$(LIBLEVELDB): $(LIBMEMENV)\n$(LIBLEVELDB) $(LIBMEMENV):\n   @echo...\n```\n\nBut this is a good example of why these targets need to be handled in makefiles and not in configure. How 'bout we compromise by setting the path there instead?\n\n(untested)\n\n```\n# if x$enable_external_leveldb != xno; then\n#  AC_CHECK_LIB([leveldb],https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-29746717,29746717,
theuni,2013-12-04T01:05:04Z,"Once those two things are resolved, I retract my -1. I still don't think the leveldb work is useful/warranted, but afaics it's technically sound and I won't stand in the way of it.\n\n+1 to the rest.\n",https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-29768447,29768447,
theuni,2013-12-04T01:30:11Z,"thanks, -1 retracted.\n",https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-29769842,29769842,
gavinandresen,2013-12-04T02:10:25Z,Testing on my Mac with 'git test-sequence upstream/master.. 'make clean && make -j 8 check'  I got a weird failure on one of the commits:\n\n```\nrm -f libmemenv.a\nrm -f libmemenv.a\n/usr/bin/ar -rs libmemenv.a helpers/memenv/memenv.o\nar: creating archive libmemenv.a\n/usr/bin/ar -rs libmemenv.a helpers/memenv/memenv.o\nar: creating archive libmemenv.a\n/usr/bin/ranlib: archive member: libmemenv,https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-29771714,29771714,
theuni,2013-12-04T02:30:54Z,@gavinandresen that should've been fixed with the last round of changes. It appears to be the race that I referred to above.\n,https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-29772631,29772631,
jgarzik,2013-12-13T00:13:33Z,Looks good at untested first glance.  --enable-frontends=XXX seems annoyingly complex.  That's a taste issue; depends on whether others agree.\n,https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-30475569,30475569,
luke-jr,2013-12-13T04:25:48Z,"Given the recent name changes, I imagine --enable-frontends= will become a list of cli,daemon,gui - maybe that's more tasteful?\n",https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-30485643,30485643,
laanwj,2013-12-13T04:37:33Z,"Given that the frontends _are_ our code, and not some auxiliary setting that should be buried deeply, I'd still prefer\n\n```\n--enable-cli\n--enable-daemon\n--enable-gui\n```\n",https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-30486565,30486565,
luke-jr,2014-01-18T21:11:26Z,Rebased and refactored for --enable-gui/cli/daemon per @jgarzik and @laanwj request.\n,https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-32693251,32693251,
BitcoinPullTester,2014-01-18T21:30:04Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2041365c8c2d0f8e83715b2a643c3fd2cf6eb4cb for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-32693705,32693705,
laanwj,2014-01-19T10:26:40Z,"Code changes look good to me, going to test this with the various gitian builds.\n",https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-32705101,32705101,
laanwj,2014-01-19T11:44:19Z,Works for me (TM)\n,https://github.com/bitcoin/bitcoin/pull/3242#issuecomment-32706335,32706335,
