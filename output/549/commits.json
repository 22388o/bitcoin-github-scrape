[
  {
    "sha": "8ad100a55be07efd481641319efe70ba430e8d23",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YWQxMDBhNTViZTA3ZWZkNDgxNjQxMzE5ZWZlNzBiYTQzMGU4ZDIz",
    "commit": {
      "author": {
        "name": "David Perry",
        "email": "enmaku@gmail.com",
        "date": "2011-10-03T21:04:11Z"
      },
      "committer": {
        "name": "David Perry",
        "email": "enmaku@gmail.com",
        "date": "2011-10-03T21:04:11Z"
      },
      "message": "Added wallet tools\n\nSigned-off-by: David Perry <enmaku@gmail.com>",
      "tree": {
        "sha": "b29ec38f8190d9a649d44f3ea6efa2770630fd92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b29ec38f8190d9a649d44f3ea6efa2770630fd92"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ad100a55be07efd481641319efe70ba430e8d23",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ad100a55be07efd481641319efe70ba430e8d23",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8ad100a55be07efd481641319efe70ba430e8d23",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ad100a55be07efd481641319efe70ba430e8d23/comments",
    "author": {
      "login": "enmaku",
      "id": 852698,
      "node_id": "MDQ6VXNlcjg1MjY5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/852698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enmaku",
      "html_url": "https://github.com/enmaku",
      "followers_url": "https://api.github.com/users/enmaku/followers",
      "following_url": "https://api.github.com/users/enmaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/enmaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enmaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enmaku/subscriptions",
      "organizations_url": "https://api.github.com/users/enmaku/orgs",
      "repos_url": "https://api.github.com/users/enmaku/repos",
      "events_url": "https://api.github.com/users/enmaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enmaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "enmaku",
      "id": 852698,
      "node_id": "MDQ6VXNlcjg1MjY5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/852698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enmaku",
      "html_url": "https://github.com/enmaku",
      "followers_url": "https://api.github.com/users/enmaku/followers",
      "following_url": "https://api.github.com/users/enmaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/enmaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enmaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enmaku/subscriptions",
      "organizations_url": "https://api.github.com/users/enmaku/orgs",
      "repos_url": "https://api.github.com/users/enmaku/repos",
      "events_url": "https://api.github.com/users/enmaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enmaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35048017783fcd69fa4f77e4ca557e4f48472ef4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35048017783fcd69fa4f77e4ca557e4f48472ef4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35048017783fcd69fa4f77e4ca557e4f48472ef4"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "30f3f5b26a14a4bcee3ec79d958fd58d8ed00fff",
        "filename": "contrib/wallettools/walletchangepass.py",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ad100a55be07efd481641319efe70ba430e8d23/contrib/wallettools/walletchangepass.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ad100a55be07efd481641319efe70ba430e8d23/contrib/wallettools/walletchangepass.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletchangepass.py?ref=8ad100a55be07efd481641319efe70ba430e8d23",
        "patch": "@@ -0,0 +1,5 @@\n+from jsonrpc import ServiceProxy\n+access = ServiceProxy(\"http://127.0.0.1:8332\")\n+pwd = raw_input(\"Enter old wallet passphrase: \")\n+pwd2 = raw_input(\"Enter new wallet passphrase: \")\n+access.walletpassphrasechange(pwd, pwd2)\n\\ No newline at end of file"
      },
      {
        "sha": "f847c6fe61a931d6a3a1cf2c36d8a37080957317",
        "filename": "contrib/wallettools/walletunlock.py",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ad100a55be07efd481641319efe70ba430e8d23/contrib/wallettools/walletunlock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ad100a55be07efd481641319efe70ba430e8d23/contrib/wallettools/walletunlock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletunlock.py?ref=8ad100a55be07efd481641319efe70ba430e8d23",
        "patch": "@@ -0,0 +1,4 @@\n+from jsonrpc import ServiceProxy\n+access = ServiceProxy(\"http://127.0.0.1:8332\")\n+pwd = raw_input(\"Enter wallet passphrase: \")\n+access.walletpassphrase(pwd, 60)\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "5a105cdb7d79ce0a6ec8f68b6d88a9c3205de47d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTEwNWNkYjdkNzljZTBhNmVjOGY2OGI2ZDg4YTljMzIwNWRlNDdk",
    "commit": {
      "author": {
        "name": "David Perry",
        "email": "enmaku@gmail.com",
        "date": "2011-10-03T23:10:03Z"
      },
      "committer": {
        "name": "David Perry",
        "email": "enmaku@gmail.com",
        "date": "2011-10-03T23:10:03Z"
      },
      "message": "Added bitrpc.py which allows for sending of all standard Bitcoin commands via RPC rather than as command line args.\n\nSigned-off-by: David Perry <enmaku@gmail.com>",
      "tree": {
        "sha": "58df61f4d1574d3e15eb0f3a186e24a871ca4991",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/58df61f4d1574d3e15eb0f3a186e24a871ca4991"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a105cdb7d79ce0a6ec8f68b6d88a9c3205de47d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a105cdb7d79ce0a6ec8f68b6d88a9c3205de47d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a105cdb7d79ce0a6ec8f68b6d88a9c3205de47d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a105cdb7d79ce0a6ec8f68b6d88a9c3205de47d/comments",
    "author": {
      "login": "enmaku",
      "id": 852698,
      "node_id": "MDQ6VXNlcjg1MjY5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/852698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enmaku",
      "html_url": "https://github.com/enmaku",
      "followers_url": "https://api.github.com/users/enmaku/followers",
      "following_url": "https://api.github.com/users/enmaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/enmaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enmaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enmaku/subscriptions",
      "organizations_url": "https://api.github.com/users/enmaku/orgs",
      "repos_url": "https://api.github.com/users/enmaku/repos",
      "events_url": "https://api.github.com/users/enmaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enmaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "enmaku",
      "id": 852698,
      "node_id": "MDQ6VXNlcjg1MjY5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/852698?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enmaku",
      "html_url": "https://github.com/enmaku",
      "followers_url": "https://api.github.com/users/enmaku/followers",
      "following_url": "https://api.github.com/users/enmaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/enmaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enmaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enmaku/subscriptions",
      "organizations_url": "https://api.github.com/users/enmaku/orgs",
      "repos_url": "https://api.github.com/users/enmaku/repos",
      "events_url": "https://api.github.com/users/enmaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enmaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ad100a55be07efd481641319efe70ba430e8d23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ad100a55be07efd481641319efe70ba430e8d23",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ad100a55be07efd481641319efe70ba430e8d23"
      }
    ],
    "stats": {
      "total": 324,
      "additions": 324,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b02b2991772e6e6ca73e9767317ea69bc34dbf75",
        "filename": "contrib/bitrpc/bitrpc.py",
        "status": "added",
        "additions": 324,
        "deletions": 0,
        "changes": 324,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a105cdb7d79ce0a6ec8f68b6d88a9c3205de47d/contrib/bitrpc/bitrpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a105cdb7d79ce0a6ec8f68b6d88a9c3205de47d/contrib/bitrpc/bitrpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitrpc/bitrpc.py?ref=5a105cdb7d79ce0a6ec8f68b6d88a9c3205de47d",
        "patch": "@@ -0,0 +1,324 @@\n+from jsonrpc import ServiceProxy\n+import sys\n+import string\n+\n+# ===== BEGIN USER SETTINGS =====\n+# if you do not set these you will be prompted for a password for every command\n+rpcuser = \"\"\n+rpcpass = \"\"\n+# ====== END USER SETTINGS ======\n+\n+\n+if rpcpass == \"\":\n+\taccess = ServiceProxy(\"http://127.0.0.1:8332\")\n+else:\n+\taccess = ServiceProxy(\"http://\"+rpcuser+\":\"+rpcpass+\"@127.0.0.1:8332\")\n+cmd = sys.argv[1].lower()\n+\n+if cmd == \"backupwallet\":\n+\ttry:\n+\t\tpath = raw_input(\"Enter destination path/filename: \")\n+\t\tprint access.backupwallet(path)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getaccount\":\n+\ttry:\n+\t\taddr = raw_input(\"Enter a Bitcoin address: \")\n+\t\tprint access.getaccount(addr)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getaccountaddress\":\n+\ttry:\n+\t\tacct = raw_input(\"Enter an account name: \")\n+\t\tprint access.getaccountaddress(acct)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getaddressesbyaccount\":\n+\ttry:\n+\t\tacct = raw_input(\"Enter an account name: \")\n+\t\tprint access.getaddressesbyaccount(acct)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getbalance\":\n+\ttry:\n+\t\tacct = raw_input(\"Enter an account (optional): \")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\ttry:\n+\t\t\tprint access.getbalance(acct, mc)\n+\t\texcept:\n+\t\t\tprint access.getbalance()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getblockbycount\":\n+\ttry:\n+\t\theight = raw_input(\"Height: \")\n+\t\tprint access.getblockbycount(height)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getblockcount\":\n+\ttry:\n+\t\tprint access.getblockcount()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getblocknumber\":\n+\ttry:\n+\t\tprint access.getblocknumber()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getconnectioncount\":\n+\ttry:\n+\t\tprint access.getconnectioncount()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getdifficulty\":\n+\ttry:\n+\t\tprint access.getdifficulty()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getgenerate\":\n+\ttry:\n+\t\tprint access.getgenerate()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"gethashespersec\":\n+\ttry:\n+\t\tprint access.gethashespersec()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getinfo\":\n+\ttry:\n+\t\tprint access.getinfo()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getnewaddress\":\n+\ttry:\n+\t\tacct = raw_input(\"Enter an account name: \")\n+\t\ttry:\n+\t\t\tprint access.getnewaddress(acct)\n+\t\texcept:\n+\t\t\tprint access.getnewaddress()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getreceivedbyaccount\":\n+\ttry:\n+\t\tacct = raw_input(\"Enter an account (optional): \")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\ttry:\n+\t\t\tprint access.getreceivedbyaccount(acct, mc)\n+\t\texcept:\n+\t\t\tprint access.getreceivedbyaccount()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getreceivedbyaddress\":\n+\ttry:\n+\t\taddr = raw_input(\"Enter a Bitcoin address (optional): \")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\ttry:\n+\t\t\tprint access.getreceivedbyaddress(addr, mc)\n+\t\texcept:\n+\t\t\tprint access.getreceivedbyaddress()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"gettransaction\":\n+\ttry:\n+\t\ttxid = raw_input(\"Enter a transaction ID: \")\n+\t\tprint access.gettransaction(txid)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getwork\":\n+\ttry:\n+\t\tdata = raw_input(\"Data (optional): \")\n+\t\ttry:\n+\t\t\tprint access.gettransaction(data)\n+\t\texcept:\n+\t\t\tprint access.gettransaction()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"help\":\n+\ttry:\n+\t\tcmd = raw_input(\"Command (optional): \")\n+\t\ttry:\n+\t\t\tprint access.help(cmd)\n+\t\texcept:\n+\t\t\tprint access.help()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"listaccounts\":\n+\ttry:\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\ttry:\n+\t\t\tprint access.listaccounts(mc)\n+\t\texcept:\n+\t\t\tprint access.listaccounts()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"listreceivedbyaccount\":\n+\ttry:\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\tincemp = raw_input(\"Include empty? (true/false, optional): \")\n+\t\ttry:\n+\t\t\tprint access.listreceivedbyaccount(mc, incemp)\n+\t\texcept:\n+\t\t\tprint access.listreceivedbyaccount()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"listreceivedbyaddress\":\n+\ttry:\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\tincemp = raw_input(\"Include empty? (true/false, optional): \")\n+\t\ttry:\n+\t\t\tprint access.listreceivedbyaddress(mc, incemp)\n+\t\texcept:\n+\t\t\tprint access.listreceivedbyaddress()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"listtransactions\":\n+\ttry:\n+\t\tacct = raw_input(\"Account (optional): \")\n+\t\tcount = raw_input(\"Number of transactions (optional): \")\n+\t\tfrm = raw_input(\"Skip (optional):\")\n+\t\ttry:\n+\t\t\tprint access.listtransactions(acct, count, frm)\n+\t\texcept:\n+\t\t\tprint access.listtransactions()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"move\":\n+\ttry:\n+\t\tfrm = raw_input(\"From: \")\n+\t\tto = raw_input(\"To: \")\n+\t\tamt = raw_input(\"Amount:\")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\tcomment = raw_input(\"Comment (optional): \")\n+\t\ttry:\n+\t\t\tprint access.move(frm, to, amt, mc, comment)\n+\t\texcept:\n+\t\t\tprint access.move(frm, to, amt)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"sendfrom\":\n+\ttry:\n+\t\tfrm = raw_input(\"From: \")\n+\t\tto = raw_input(\"To: \")\n+\t\tamt = raw_input(\"Amount:\")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\tcomment = raw_input(\"Comment (optional): \")\n+\t\tcommentto = raw_input(\"Comment-to (optional): \")\n+\t\ttry:\n+\t\t\tprint access.sendfrom(frm, to, amt, mc, comment, commentto)\n+\t\texcept:\n+\t\t\tprint access.sendfrom(frm, to, amt)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"sendmany\":\n+\ttry:\n+\t\tfrm = raw_input(\"From: \")\n+\t\tto = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\tcomment = raw_input(\"Comment (optional): \")\n+\t\ttry:\n+\t\t\tprint access.sendmany(frm,to,mc,comment)\n+\t\texcept:\n+\t\t\tprint access.sendmany(frm,to)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"sendtoaddress\":\n+\ttry:\n+\t\tto = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n+\t\tamt = raw_input(\"Amount:\")\n+\t\tcomment = raw_input(\"Comment (optional): \")\n+\t\tcommentto = raw_input(\"Comment-to (optional): \")\n+\t\ttry:\n+\t\t\tprint access.sendtoaddress(to,amt,comment,commentto)\n+\t\texcept:\n+\t\t\tprint access.sendtoaddress(to,amt)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"setaccount\":\n+\ttry:\n+\t\taddr = raw_input(\"Address: \")\n+\t\tacct = raw_input(\"Account:\")\n+\t\tprint access.setaccount(addr,acct)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"setgenerate\":\n+\ttry:\n+\t\tgen= raw_input(\"Generate? (true/false): \")\n+\t\tcpus = raw_input(\"Max processors/cores (-1 for unlimited, optional):\")\n+\t\ttry:\n+\t\t\tprint access.setgenerate(gen, cpus)\n+\t\texcept:\n+\t\t\tprint access.setgenerate(gen)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"settxfee\":\n+\ttry:\n+\t\tamt = raw_input(\"Amount:\")\n+\t\tprint access.settxfee(amt)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"stop\":\n+\ttry:\n+\t\tprint access.stop()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"validateaddress\":\n+\ttry:\n+\t\taddr = raw_input(\"Address: \")\n+\t\tprint access.validateaddress(addr)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"walletpassphrase\":\n+\ttry:\n+\t\tpwd = raw_input(\"Enter wallet passphrase: \")\n+\t\taccess.walletpassphrase(pwd, 60)\n+\t\tprint \"\\n---Wallet unlocked---\\n\"\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"walletpassphrasechange\":\n+\ttry:\n+\t\tpwd = raw_input(\"Enter old wallet passphrase: \")\n+\t\tpwd2 = raw_input(\"Enter new wallet passphrase: \")\n+\t\taccess.walletpassphrasechange(pwd, pwd2)\n+\t\tprint\n+\t\tprint \"\\n---Passphrase changed---\\n\"\n+\texcept:\n+\t\tprint\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\t\tprint\n+\n+else:\n+\tprint \"Command not found or not supported\"\n\\ No newline at end of file"
      }
    ]
  }
]