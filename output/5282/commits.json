[
  {
    "sha": "a7af9839d688bee9b0b15add61259140b3c00014",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphN2FmOTgzOWQ2ODhiZWU5YjBiMTVhZGQ2MTI1OTE0MGIzYzAwMDE0",
    "commit": {
      "author": {
        "name": "Bryan Bishop",
        "email": "kanzure@gmail.com",
        "date": "2014-11-14T15:12:41Z"
      },
      "committer": {
        "name": "Bryan Bishop",
        "email": "kanzure@gmail.com",
        "date": "2014-11-14T15:12:41Z"
      },
      "message": "don't override dir() in qa rpc tests\n\nReplace \"dir\" with \"dirname\" in util.py in qa/rpc-tests/ because \"dir\"\nis the name of a function in python.",
      "tree": {
        "sha": "09bcb8049b689f1a044ed6f431a627fcdb8663d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/09bcb8049b689f1a044ed6f431a627fcdb8663d0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7af9839d688bee9b0b15add61259140b3c00014",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7af9839d688bee9b0b15add61259140b3c00014",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a7af9839d688bee9b0b15add61259140b3c00014",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7af9839d688bee9b0b15add61259140b3c00014/comments",
    "author": {
      "login": "kanzure",
      "id": 101238,
      "node_id": "MDQ6VXNlcjEwMTIzOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/101238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kanzure",
      "html_url": "https://github.com/kanzure",
      "followers_url": "https://api.github.com/users/kanzure/followers",
      "following_url": "https://api.github.com/users/kanzure/following{/other_user}",
      "gists_url": "https://api.github.com/users/kanzure/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kanzure/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kanzure/subscriptions",
      "organizations_url": "https://api.github.com/users/kanzure/orgs",
      "repos_url": "https://api.github.com/users/kanzure/repos",
      "events_url": "https://api.github.com/users/kanzure/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kanzure/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kanzure",
      "id": 101238,
      "node_id": "MDQ6VXNlcjEwMTIzOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/101238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kanzure",
      "html_url": "https://github.com/kanzure",
      "followers_url": "https://api.github.com/users/kanzure/followers",
      "following_url": "https://api.github.com/users/kanzure/following{/other_user}",
      "gists_url": "https://api.github.com/users/kanzure/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kanzure/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kanzure/subscriptions",
      "organizations_url": "https://api.github.com/users/kanzure/orgs",
      "repos_url": "https://api.github.com/users/kanzure/repos",
      "events_url": "https://api.github.com/users/kanzure/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kanzure/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3d3ce7421e11ed693840e04bee4d18fb9d396309",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d3ce7421e11ed693840e04bee4d18fb9d396309",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3d3ce7421e11ed693840e04bee4d18fb9d396309"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "0d5eeefa793ea9d00fa6ed710158e844ff49e15a",
        "filename": "qa/rpc-tests/util.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7af9839d688bee9b0b15add61259140b3c00014/qa/rpc-tests/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7af9839d688bee9b0b15add61259140b3c00014/qa/rpc-tests/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.py?ref=a7af9839d688bee9b0b15add61259140b3c00014",
        "patch": "@@ -61,8 +61,8 @@ def sync_mempools(rpc_connections):\n \n bitcoind_processes = {}\n \n-def initialize_datadir(dir, n):\n-    datadir = os.path.join(dir, \"node\"+str(n))\n+def initialize_datadir(dirname, n):\n+    datadir = os.path.join(dirname, \"node\"+str(n))\n     if not os.path.isdir(datadir):\n         os.makedirs(datadir)\n     with open(os.path.join(datadir, \"bitcoin.conf\"), 'w') as f:\n@@ -145,11 +145,11 @@ def _rpchost_to_args(rpchost):\n         rv += ['-rpcport=' + rpcport]\n     return rv\n \n-def start_node(i, dir, extra_args=None, rpchost=None):\n+def start_node(i, dirname, extra_args=None, rpchost=None):\n     \"\"\"\n     Start a bitcoind and return RPC connection to it\n     \"\"\"\n-    datadir = os.path.join(dir, \"node\"+str(i))\n+    datadir = os.path.join(dirname, \"node\"+str(i))\n     args = [ os.getenv(\"BITCOIND\", \"bitcoind\"), \"-datadir=\"+datadir, \"-keypool=1\", \"-discover=0\" ]\n     if extra_args is not None: args.extend(extra_args)\n     bitcoind_processes[i] = subprocess.Popen(args)\n@@ -163,15 +163,15 @@ def start_node(i, dir, extra_args=None, rpchost=None):\n     proxy.url = url # store URL on proxy for info\n     return proxy\n \n-def start_nodes(num_nodes, dir, extra_args=None, rpchost=None):\n+def start_nodes(num_nodes, dirname, extra_args=None, rpchost=None):\n     \"\"\"\n     Start multiple bitcoinds, return RPC connections to them\n     \"\"\"\n     if extra_args is None: extra_args = [ None for i in range(num_nodes) ]\n-    return [ start_node(i, dir, extra_args[i], rpchost) for i in range(num_nodes) ]\n+    return [ start_node(i, dirname, extra_args[i], rpchost) for i in range(num_nodes) ]\n \n-def log_filename(dir, n_node, logname):\n-    return os.path.join(dir, \"node\"+str(n_node), \"regtest\", logname)\n+def log_filename(dirname, n_node, logname):\n+    return os.path.join(dirname, \"node\"+str(n_node), \"regtest\", logname)\n \n def stop_node(node, i):\n     node.stop()"
      }
    ]
  }
]