[
  {
    "sha": "fe0401e66a06862ad8f9c4a84462dd5acd4d7738",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTA0MDFlNjZhMDY4NjJhZDhmOWM0YTg0NDYyZGQ1YWNkNGQ3NzM4",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-12-13T07:05:26Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-12-13T09:14:21Z"
      },
      "message": "Fix indentation and flow",
      "tree": {
        "sha": "01cc07594af426acf169f0c4ca845f8241da493b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01cc07594af426acf169f0c4ca845f8241da493b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe0401e66a06862ad8f9c4a84462dd5acd4d7738",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe0401e66a06862ad8f9c4a84462dd5acd4d7738",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe0401e66a06862ad8f9c4a84462dd5acd4d7738",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe0401e66a06862ad8f9c4a84462dd5acd4d7738/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76fcd9d5034143a5b041766552670d19f926097d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76fcd9d5034143a5b041766552670d19f926097d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76fcd9d5034143a5b041766552670d19f926097d"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 29,
      "deletions": 27
    },
    "files": [
      {
        "sha": "61e2d0071a456e23aae429a1ebfd86b96d6e3504",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 27,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe0401e66a06862ad8f9c4a84462dd5acd4d7738/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe0401e66a06862ad8f9c4a84462dd5acd4d7738/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=fe0401e66a06862ad8f9c4a84462dd5acd4d7738",
        "patch": "@@ -2069,6 +2069,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 }\n                 pindexWalk = pindexWalk->pprev;\n             }\n+\n             // If pindexWalk still isn't on our main chain, we're looking at a\n             // very large reorg at a time we think we're close to caught up to\n             // the main chain -- this shouldn't really happen.  Bail out on the\n@@ -2077,36 +2078,37 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 LogPrint(\"net\", \"Large reorg, won't direct fetch to %s (%d)\\n\",\n                         pindexLast->GetBlockHash().ToString(),\n                         pindexLast->nHeight);\n-            } else {\n-                vector<CInv> vGetData;\n-                // Download as much as possible, from earliest to latest.\n-                BOOST_REVERSE_FOREACH(CBlockIndex *pindex, vToFetch) {\n-                    if (nodestate->nBlocksInFlight >= MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n-                        // Can't download any more from this peer\n-                        break;\n-                    }\n-                    uint32_t nFetchFlags = GetFetchFlags(pfrom, pindex->pprev, chainparams.GetConsensus());\n-                    vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                    MarkBlockAsInFlight(pfrom->GetId(), pindex->GetBlockHash(), chainparams.GetConsensus(), pindex);\n-                    LogPrint(\"net\", \"Requesting block %s from  peer=%d\\n\",\n-                            pindex->GetBlockHash().ToString(), pfrom->id);\n-                }\n-                if (vGetData.size() > 1) {\n-                    LogPrint(\"net\", \"Downloading blocks toward %s (%d) via headers direct fetch\\n\",\n-                            pindexLast->GetBlockHash().ToString(), pindexLast->nHeight);\n+                return true;\n+            }\n+\n+            vector<CInv> vGetData;\n+            // Download as much as possible, from earliest to latest.\n+            BOOST_REVERSE_FOREACH(CBlockIndex *pindex, vToFetch) {\n+                if (nodestate->nBlocksInFlight >= MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n+                    // Can't download any more from this peer\n+                    break;\n                 }\n-                if (vGetData.size() > 0) {\n-                    if (nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\n-                        // We seem to be rather well-synced, so it appears pfrom was the first to provide us\n-                        // with this block! Let's get them to announce using compact blocks in the future.\n-                        MaybeSetPeerAsAnnouncingHeaderAndIDs(nodestate, pfrom, connman);\n-                        // In any case, we want to download using a compact block, not a regular one\n-                        vGetData[0] = CInv(MSG_CMPCT_BLOCK, vGetData[0].hash);\n-                    }\n-                    connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n+                uint32_t nFetchFlags = GetFetchFlags(pfrom, pindex->pprev, chainparams.GetConsensus());\n+                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n+                MarkBlockAsInFlight(pfrom->GetId(), pindex->GetBlockHash(), chainparams.GetConsensus(), pindex);\n+                LogPrint(\"net\", \"Requesting block %s from  peer=%d\\n\",\n+                        pindex->GetBlockHash().ToString(), pfrom->id);\n+            }\n+            if (vGetData.size() > 1) {\n+                LogPrint(\"net\", \"Downloading blocks toward %s (%d) via headers direct fetch\\n\",\n+                        pindexLast->GetBlockHash().ToString(), pindexLast->nHeight);\n+            }\n+            if (vGetData.size() > 0) {\n+                if (nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {\n+                    // We seem to be rather well-synced, so it appears pfrom was the first to provide us\n+                    // with this block! Let's get them to announce using compact blocks in the future.\n+                    MaybeSetPeerAsAnnouncingHeaderAndIDs(nodestate, pfrom, connman);\n+                    // In any case, we want to download using a compact block, not a regular one\n+                    vGetData[0] = CInv(MSG_CMPCT_BLOCK, vGetData[0].hash);\n                 }\n+                connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n             }\n-        }\n+        } // if fCanDirectFetch()\n         }\n     }\n "
      }
    ]
  },
  {
    "sha": "9416039ce90b51d5821d4a9cb0c835b2966ec2ac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NDE2MDM5Y2U5MGI1MWQ1ODIxZDRhOWNiMGM4MzViMjk2NmVjMmFj",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-12-13T07:23:30Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-12-13T09:14:21Z"
      },
      "message": "Disable direct-fetch (in order to go via striping logic)",
      "tree": {
        "sha": "75f232898195e41e15930d3a4e95379ac4ab9dcd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75f232898195e41e15930d3a4e95379ac4ab9dcd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9416039ce90b51d5821d4a9cb0c835b2966ec2ac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9416039ce90b51d5821d4a9cb0c835b2966ec2ac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9416039ce90b51d5821d4a9cb0c835b2966ec2ac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9416039ce90b51d5821d4a9cb0c835b2966ec2ac/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe0401e66a06862ad8f9c4a84462dd5acd4d7738",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe0401e66a06862ad8f9c4a84462dd5acd4d7738",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe0401e66a06862ad8f9c4a84462dd5acd4d7738"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "557fce431464a93f5a08c1f6ea500e3bcfe53c50",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9416039ce90b51d5821d4a9cb0c835b2966ec2ac/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9416039ce90b51d5821d4a9cb0c835b2966ec2ac/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=9416039ce90b51d5821d4a9cb0c835b2966ec2ac",
        "patch": "@@ -2090,13 +2090,13 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 }\n                 uint32_t nFetchFlags = GetFetchFlags(pfrom, pindex->pprev, chainparams.GetConsensus());\n                 vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                MarkBlockAsInFlight(pfrom->GetId(), pindex->GetBlockHash(), chainparams.GetConsensus(), pindex);\n-                LogPrint(\"net\", \"Requesting block %s from  peer=%d\\n\",\n-                        pindex->GetBlockHash().ToString(), pfrom->id);\n+                if (vToFetch.size() == 1)\n+                    MarkBlockAsInFlight(pfrom->GetId(), pindex->GetBlockHash(), chainparams.GetConsensus(), pindex);\n             }\n             if (vGetData.size() > 1) {\n-                LogPrint(\"net\", \"Downloading blocks toward %s (%d) via headers direct fetch\\n\",\n+                LogPrint(\"net\", \"NOT Downloading %d blocks toward %s (%d) via headers direct fetch\\n\", vGetData.size(),\n                         pindexLast->GetBlockHash().ToString(), pindexLast->nHeight);\n+                return true;\n             }\n             if (vGetData.size() > 0) {\n                 if (nodestate->fSupportsDesiredCmpctVersion && vGetData.size() == 1 && mapBlocksInFlight.size() == 1 && pindexLast->pprev->IsValid(BLOCK_VALID_CHAIN)) {"
      }
    ]
  },
  {
    "sha": "5a80993a1eb2820113434907d0f6a30ff624945a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTgwOTkzYTFlYjI4MjAxMTM0MzQ5MDdkMGY2YTMwZmY2MjQ5NDVh",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-12-13T04:36:10Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-12-13T09:26:16Z"
      },
      "message": "Stripe downloads to reduce stallers occuring\n\nMitigates #9213\n\nThis may also help reduce the unresponsiveness of peers during IBD as\noften they encounter a big chunk of contiguous blocks that need to be\nadded to the chain due to the current contiguous way they are\ndownloaded.",
      "tree": {
        "sha": "0c5f18b902884c87495291682509dd3ff11ea66e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c5f18b902884c87495291682509dd3ff11ea66e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a80993a1eb2820113434907d0f6a30ff624945a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a80993a1eb2820113434907d0f6a30ff624945a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a80993a1eb2820113434907d0f6a30ff624945a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a80993a1eb2820113434907d0f6a30ff624945a/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9416039ce90b51d5821d4a9cb0c835b2966ec2ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9416039ce90b51d5821d4a9cb0c835b2966ec2ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9416039ce90b51d5821d4a9cb0c835b2966ec2ac"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 11,
      "deletions": 2
    },
    "files": [
      {
        "sha": "aa6b4def1159b42f4a2f0d3c25348e86e3b18fce",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a80993a1eb2820113434907d0f6a30ff624945a/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a80993a1eb2820113434907d0f6a30ff624945a/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=5a80993a1eb2820113434907d0f6a30ff624945a",
        "patch": "@@ -172,6 +172,8 @@ struct CNodeState {\n     list<QueuedBlock> vBlocksInFlight;\n     //! When the first entry in vBlocksInFlight started downloading. Don't care when vBlocksInFlight is empty.\n     int64_t nDownloadingSince;\n+    //! The height of the last block requested from this peer\n+    int nHighestFlyer;\n     int nBlocksInFlight;\n     int nBlocksInFlightValidHeaders;\n     //! Whether we consider this a preferred download peer.\n@@ -208,6 +210,7 @@ struct CNodeState {\n         fSyncStarted = false;\n         nStallingSince = 0;\n         nDownloadingSince = 0;\n+        nHighestFlyer = 0;\n         nBlocksInFlight = 0;\n         nBlocksInFlightValidHeaders = 0;\n         fPreferredDownload = false;\n@@ -321,6 +324,8 @@ bool MarkBlockAsReceived(const uint256& hash) {\n         }\n         state->vBlocksInFlight.erase(itInFlight->second.second);\n         state->nBlocksInFlight--;\n+        if (!state->nBlocksInFlight)\n+            state->nHighestFlyer = 0;\n         state->nStallingSince = 0;\n         mapBlocksInFlight.erase(itInFlight);\n         return true;\n@@ -536,7 +541,10 @@ void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<CBl\n                     }\n                     return;\n                 }\n-                vBlocks.push_back(pindex);\n+                if (!state->nHighestFlyer || pindex->nHeight - state->nHighestFlyer >= 5) { // Stripe downloads to avoid stallers\n+                    vBlocks.push_back(pindex);\n+                    state->nHighestFlyer = pindex->nHeight;\n+                }\n                 if (vBlocks.size() == count) {\n                     return;\n                 }\n@@ -2094,7 +2102,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                     MarkBlockAsInFlight(pfrom->GetId(), pindex->GetBlockHash(), chainparams.GetConsensus(), pindex);\n             }\n             if (vGetData.size() > 1) {\n-                LogPrint(\"net\", \"NOT Downloading %d blocks toward %s (%d) via headers direct fetch\\n\", vGetData.size(),\n+                LogPrint(\"net\", \"To download: %d blocks toward %s (%d)\\n\", vGetData.size(),\n                         pindexLast->GetBlockHash().ToString(), pindexLast->nHeight);\n                 return true;\n             }\n@@ -2107,6 +2115,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                     vGetData[0] = CInv(MSG_CMPCT_BLOCK, vGetData[0].hash);\n                 }\n                 connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n+                LogPrint(\"net\", \"Requesting %s from  peer=%d\\n\", vGetData[0].ToString(), pfrom->id);\n             }\n         } // if fCanDirectFetch()\n         }"
      }
    ]
  }
]