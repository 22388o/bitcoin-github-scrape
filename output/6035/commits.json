[
  {
    "sha": "641c5dac21668953282ffa7033113b34b3450c0a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NDFjNWRhYzIxNjY4OTUzMjgyZmZhNzAzMzExM2IzNGIzNDUwYzBh",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-11T11:05:23Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-20T19:36:49Z"
      },
      "message": "Consensus: Refactor: Consensus version of CheckBlockHeader()",
      "tree": {
        "sha": "dfce298b40e2331496d4a214e7ab8460edd3fa5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfce298b40e2331496d4a214e7ab8460edd3fa5b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/641c5dac21668953282ffa7033113b34b3450c0a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/641c5dac21668953282ffa7033113b34b3450c0a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/641c5dac21668953282ffa7033113b34b3450c0a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/641c5dac21668953282ffa7033113b34b3450c0a/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6ea3bcede1cbbf89486b9d67329e0110c4624ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6ea3bcede1cbbf89486b9d67329e0110c4624ae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6ea3bcede1cbbf89486b9d67329e0110c4624ae"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 39,
      "deletions": 14
    },
    "files": [
      {
        "sha": "72d79619b246da4df43a52c31849336f7c17bd04",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/641c5dac21668953282ffa7033113b34b3450c0a/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/641c5dac21668953282ffa7033113b34b3450c0a/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=641c5dac21668953282ffa7033113b34b3450c0a",
        "patch": "@@ -87,6 +87,7 @@ BITCOIN_CORE_H = \\\n   coins.h \\\n   compat.h \\\n   compressor.h \\\n+  consensus/consensus.h \\\n   consensus/params.h \\\n   core_io.h \\\n   wallet/db.h \\"
      },
      {
        "sha": "096546f5ec1e5bf26037025ccf7be91a7d7a14f6",
        "filename": "src/consensus/consensus.h",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/641c5dac21668953282ffa7033113b34b3450c0a/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/641c5dac21668953282ffa7033113b34b3450c0a/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=641c5dac21668953282ffa7033113b34b3450c0a",
        "patch": "@@ -0,0 +1,27 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CONSENSUS_CONSENSUS_H\n+#define BITCOIN_CONSENSUS_CONSENSUS_H\n+\n+class CBlockHeader;\n+class CValidationState;\n+\n+/**\n+ * Consensus validations:\n+ * Check_ means checking everything possible with the data provided.\n+ * Verify_ means all data provided was enough for this level and its \"consensus-verified\".\n+ */\n+namespace Consensus {\n+\n+class Params;\n+\n+/** Block header validation functions */\n+\n+bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Params& consensusParams, int64_t nTime, bool fCheckPOW = true);\n+\n+} // namespace Consensus\n+\n+#endif // BITCOIN_CONSENSUS_CONSENSUS_H"
      },
      {
        "sha": "eb15d5b97629055410cc91e012c65b945d4bd720",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 13,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/641c5dac21668953282ffa7033113b34b3450c0a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/641c5dac21668953282ffa7033113b34b3450c0a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=641c5dac21668953282ffa7033113b34b3450c0a",
        "patch": "@@ -11,6 +11,7 @@\n #include \"chainparams.h\"\n #include \"checkpoints.h\"\n #include \"checkqueue.h\"\n+#include \"consensus/consensus.h\"\n #include \"init.h\"\n #include \"merkleblock.h\"\n #include \"net.h\"\n@@ -2465,29 +2466,26 @@ bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigne\n     return true;\n }\n \n-bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW)\n+bool Consensus::CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, int64_t nTime, bool fCheckPOW)\n {\n     // Check proof of work matches claimed amount\n-    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits, Params().GetConsensus()))\n-        return state.DoS(50, error(\"CheckBlockHeader(): proof of work failed\"),\n-                         REJECT_INVALID, \"high-hash\");\n+    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n+        return state.DoS(50, false, REJECT_INVALID, \"high-hash\");\n \n     // Check timestamp\n-    if (block.GetBlockTime() > GetAdjustedTime() + 2 * 60 * 60)\n-        return state.Invalid(error(\"CheckBlockHeader(): block timestamp too far in the future\"),\n-                             REJECT_INVALID, \"time-too-new\");\n+    if (block.GetBlockTime() > nTime + 2 * 60 * 60)\n+        return state.Invalid(false, REJECT_INVALID, \"time-too-new\");\n \n     return true;\n }\n \n bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW, bool fCheckMerkleRoot)\n {\n-    // These are checks that are independent of context.\n-\n+    const Consensus::Params& consensusParams = Params().GetConsensus();\n     // Check that the header is valid (particularly PoW).  This is mostly\n     // redundant with the call in AcceptBlockHeader.\n-    if (!CheckBlockHeader(block, state, fCheckPOW))\n-        return false;\n+    if (!Consensus::CheckBlockHeader(block, state, consensusParams, GetAdjustedTime(), fCheckPOW))\n+        return error(\"%s: Consensus::CheckBlockHeader(): \", __func__, state.GetRejectReason().c_str());\n \n     // Check the merkle root.\n     if (fCheckMerkleRoot) {\n@@ -2630,8 +2628,8 @@ bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, CBloc\n         return true;\n     }\n \n-    if (!CheckBlockHeader(block, state))\n-        return false;\n+    if (!Consensus::CheckBlockHeader(block, state, chainparams.GetConsensus(), GetAdjustedTime()))\n+        return error(\"%s: Consensus::CheckBlockHeader(): \", __func__, state.GetRejectReason().c_str());\n \n     // Get prev block index\n     CBlockIndex* pindexPrev = NULL;"
      },
      {
        "sha": "3294bf9fdd77f35024d89bf5fd7cc453ad7c4e29",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/641c5dac21668953282ffa7033113b34b3450c0a/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/641c5dac21668953282ffa7033113b34b3450c0a/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=641c5dac21668953282ffa7033113b34b3450c0a",
        "patch": "@@ -348,7 +348,6 @@ bool DisconnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex\n bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pindex, CCoinsViewCache& coins, bool fJustCheck = false);\n \n /** Context-independent validity checks */\n-bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW = true);\n bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW = true, bool fCheckMerkleRoot = true);\n \n /** Context-dependent validity checks */"
      }
    ]
  }
]