[
  {
    "sha": "1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzg2ZmY1ZGYyMmI4Y2M2OGVhMDNhYzgxYjVmNjhlOGNlMGUwOTM3",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-06-16T18:11:56Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-06-16T18:11:56Z"
      },
      "message": "Rename and comment priority calculation in TxMemPoolEntry to document its limitations.",
      "tree": {
        "sha": "55a8c1919ea5671574ec8f834cb4c8390a84dc96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/55a8c1919ea5671574ec8f834cb4c8390a84dc96"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "754aae51488c810f3a3cf6651c88849a209ca545",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/754aae51488c810f3a3cf6651c88849a209ca545",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/754aae51488c810f3a3cf6651c88849a209ca545"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 16,
      "deletions": 7
    },
    "files": [
      {
        "sha": "0948c044cf552d88f1c046fa147bd18c307fb289",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937",
        "patch": "@@ -375,7 +375,8 @@ void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, boo\n     // Want the priority of the tx at confirmation. However we don't know\n     // what that will be and its too hard to continue updating it\n     // so use starting priority as a proxy\n-    double curPri = entry.GetPriority(txHeight);\n+    // GetPriorityUpperBound returns the correct priority at tx height\n+    double curPri = entry.GetPriorityUpperBound(txHeight);\n     mapMemPoolTxs[hash].blockHeight = txHeight;\n \n     LogPrint(\"estimatefee\", \"Blockpolicy mempool tx %s \", hash.ToString().substr(0,10));\n@@ -419,7 +420,8 @@ void CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxM\n \n     // Want the priority of the tx at confirmation.  The priority when it\n     // entered the mempool could easily be very small and change quickly\n-    double curPri = entry.GetPriority(nBlockHeight);\n+    // GetPriorityUpperBound returns the correct priority when tx WasClearAtEntry\n+    double curPri = entry.GetPriorityUpperBound(nBlockHeight);\n \n     // Record this as a priority estimate\n     if (entry.GetFee() == 0 || isPriDataPoint(feeRate, curPri)) {"
      },
      {
        "sha": "d2d37b2c751df6be0f236b8e93bbfef181940fc7",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937",
        "patch": "@@ -166,7 +166,7 @@ UniValue getrawmempool(const UniValue& params, bool fHelp)\n             \"    \\\"time\\\" : n,             (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT\\n\"\n             \"    \\\"height\\\" : n,           (numeric) block height when transaction entered pool\\n\"\n             \"    \\\"startingpriority\\\" : n, (numeric) priority when transaction entered pool\\n\"\n-            \"    \\\"currentpriority\\\" : n,  (numeric) transaction priority now\\n\"\n+            \"    \\\"currentpriority\\\" : n,  (numeric) upper bound of transaction priority now\\n\"\n             \"    \\\"depends\\\" : [           (array) unconfirmed transactions used as inputs for this transaction\\n\"\n             \"        \\\"transactionid\\\",    (string) parent transaction id\\n\"\n             \"       ... ]\\n\"\n@@ -196,8 +196,8 @@ UniValue getrawmempool(const UniValue& params, bool fHelp)\n             info.push_back(Pair(\"fee\", ValueFromAmount(e.GetFee())));\n             info.push_back(Pair(\"time\", e.GetTime()));\n             info.push_back(Pair(\"height\", (int)e.GetHeight()));\n-            info.push_back(Pair(\"startingpriority\", e.GetPriority(e.GetHeight())));\n-            info.push_back(Pair(\"currentpriority\", e.GetPriority(chainActive.Height())));\n+            info.push_back(Pair(\"startingpriority\", e.GetPriorityUpperBound(e.GetHeight())));\n+            info.push_back(Pair(\"currentpriority\", e.GetPriorityUpperBound(chainActive.Height())));\n             const CTransaction& tx = e.GetTx();\n             set<string> setDepends;\n             BOOST_FOREACH(const CTxIn& txin, tx.vin)"
      },
      {
        "sha": "9c1ad30540b520c341c922aafe162b989a3ea907",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937",
        "patch": "@@ -39,7 +39,7 @@ CTxMemPoolEntry::CTxMemPoolEntry(const CTxMemPoolEntry& other)\n }\n \n double\n-CTxMemPoolEntry::GetPriority(unsigned int currentHeight) const\n+CTxMemPoolEntry::GetPriorityUpperBound(unsigned int currentHeight) const\n {\n     CAmount nValueIn = tx.GetValueOut()+nFee;\n     double deltaPriority = ((double)(currentHeight-nHeight)*nValueIn)/nModSize;"
      },
      {
        "sha": "6f17f9a51574b756f4d6ab2cf1efbf741110865e",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=1386ff5df22b8cc68ea03ac81b5f68e8ce0e0937",
        "patch": "@@ -52,7 +52,14 @@ class CTxMemPoolEntry\n     CTxMemPoolEntry(const CTxMemPoolEntry& other);\n \n     const CTransaction& GetTx() const { return this->tx; }\n-    double GetPriority(unsigned int currentHeight) const;\n+    /** This function will return the correct priority of the\n+     *  transaction if it's called on a transaction whose inputs were\n+     *  all in the blockchain at the time the transaction entered the\n+     *  mempool.  Otherwise if currentHeight is greater than the height\n+     *  of the transaction it will overestimate priority by assuming\n+     *  all inputs have aged.\n+     */\n+    double GetPriorityUpperBound(unsigned int currentHeight) const;\n     CAmount GetFee() const { return nFee; }\n     size_t GetTxSize() const { return nTxSize; }\n     int64_t GetTime() const { return nTime; }"
      }
    ]
  }
]