[
  {
    "sha": "604e2a997ff26202dd0fa1932d60dc14cc53ac6d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MDRlMmE5OTdmZjI2MjAyZGQwZmExOTMyZDYwZGMxNGNjNTNhYzZk",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-03T17:33:00Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-08T20:13:32Z"
      },
      "message": "test: rpc_users: Add function for auth'd requests.",
      "tree": {
        "sha": "ab3e4b9a067725b26a173c16564977c429d382f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab3e4b9a067725b26a173c16564977c429d382f0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/604e2a997ff26202dd0fa1932d60dc14cc53ac6d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl0jo+wACgkQDMUhUxl5\nkaVICw//YNg2ihcswss1licMC/0ugNEn69l4rQOrH9oHm33Z23Vnz7BAZm7lZoj7\nyM2JVZT0t2JtbQBbwB/NNY8wUyD9Ifo9niab2uUy7RA+IRuhUqAuifP/SvpjDiG/\nVC3w3OQ9CJtcXIjF1md7Hb1s178cwiRrZGQGpIyC0InQfy9yB+QuaryWxsOANXoN\nTMjgvRfmDu14ryhsg6MDYS0f56E9Nw83XkkBg98UZ27RXleHOXujEhSEsx8bqF5n\n5W3/9CBYiYp0UgaA67M+wol0oOx8XGhpi3I9GD04beQIHji/8DfagqZbBcygMFMI\nKUVEGAC4mBHgSq9TQheCZqkhyTOzLNhTumIV5GZQmv7+YXp6ZCgjNjuj6iN3wAU7\nc3Hx8N/mMdykqoppj6LDxq2hXUNXqRdLwsgYVdkNeQ6QlLITu1BttbFOtIE11yf+\nkSr7ATOeiw5uTDz6wTx/9/pYSPnz5TUhFYzSN5TOF8UIheOut8uTdt+n3Dytgi/B\nlH+2Aio31jUy/fd9KkQwSLU255b2tFZ32W/epSS5NCxKJpmkKkSeW+d6335H7jR3\n529GdCM0jBPR6Y4mvNsw4cY4mKy72QPrCAOcTxe5N+HwV8ziaAnJD/+jfW+PXX4f\nHZ0+QoNju8lOiQIKKmUOkc+Ke5C4sa7R7glOvgHn96f35h3UJGg=\n=seV9\n-----END PGP SIGNATURE-----",
        "payload": "tree ab3e4b9a067725b26a173c16564977c429d382f0\nparent c799976c86e2d65f129d106724fbefbf665d63d4\nauthor Carl Dong <contact@carldong.me> 1562175180 -0400\ncommitter Carl Dong <contact@carldong.me> 1562616812 -0400\n\ntest: rpc_users: Add function for auth'd requests.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/604e2a997ff26202dd0fa1932d60dc14cc53ac6d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/604e2a997ff26202dd0fa1932d60dc14cc53ac6d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/604e2a997ff26202dd0fa1932d60dc14cc53ac6d/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c799976c86e2d65f129d106724fbefbf665d63d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c799976c86e2d65f129d106724fbefbf665d63d4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c799976c86e2d65f129d106724fbefbf665d63d4"
      }
    ],
    "stats": {
      "total": 129,
      "additions": 23,
      "deletions": 106
    },
    "files": [
      {
        "sha": "8bb4676069121be49c1f4d73f0607c45261f4a0a",
        "filename": "test/functional/rpc_users.py",
        "status": "modified",
        "additions": 23,
        "deletions": 106,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/604e2a997ff26202dd0fa1932d60dc14cc53ac6d/test/functional/rpc_users.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/604e2a997ff26202dd0fa1932d60dc14cc53ac6d/test/functional/rpc_users.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_users.py?ref=604e2a997ff26202dd0fa1932d60dc14cc53ac6d",
        "patch": "@@ -20,6 +20,17 @@\n import configparser\n import sys\n \n+def call_with_auth(node, user, password):\n+    url = urllib.parse.urlparse(node.url)\n+    headers = {\"Authorization\": \"Basic \" + str_to_b64str('{}:{}'.format(user, password))}\n+\n+    conn = http.client.HTTPConnection(url.hostname, url.port)\n+    conn.connect()\n+    conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+    resp = conn.getresponse()\n+    conn.close()\n+    return resp\n+\n \n class HTTPBasicsTest(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -57,108 +68,39 @@ def run_test(self):\n         ##################################################\n         url = urllib.parse.urlparse(self.nodes[0].url)\n \n-        #Old authpair\n-        authpair = url.username + ':' + url.password\n-\n-        #New authpair generated via share/rpcauth tool\n         password = \"cA773lm788buwYe4g4WT+05pKyNruVKjQ25x3n0DQcM=\"\n-\n-        #Second authpair with different username\n         password2 = \"8/F3uMDw4KSEbw96U3CA1C4X05dkHDN2BPFjTgZW4KI=\"\n-        authpairnew = \"rt:\"+password\n \n         self.log.info('Correct...')\n-        headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpair)}\n-\n-        conn = http.client.HTTPConnection(url.hostname, url.port)\n-        conn.connect()\n-        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        resp = conn.getresponse()\n-        assert_equal(resp.status, 200)\n-        conn.close()\n+        assert_equal(200, call_with_auth(self.nodes[0], url.username, url.password).status)\n \n         #Use new authpair to confirm both work\n         self.log.info('Correct...')\n-        headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpairnew)}\n-\n-        conn = http.client.HTTPConnection(url.hostname, url.port)\n-        conn.connect()\n-        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        resp = conn.getresponse()\n-        assert_equal(resp.status, 200)\n-        conn.close()\n+        assert_equal(200, call_with_auth(self.nodes[0], 'rt', password).status)\n \n         #Wrong login name with rt's password\n         self.log.info('Wrong...')\n-        authpairnew = \"rtwrong:\"+password\n-        headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpairnew)}\n-\n-        conn = http.client.HTTPConnection(url.hostname, url.port)\n-        conn.connect()\n-        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        resp = conn.getresponse()\n-        assert_equal(resp.status, 401)\n-        conn.close()\n+        assert_equal(401, call_with_auth(self.nodes[0], 'rtwrong', password).status)\n \n         #Wrong password for rt\n         self.log.info('Wrong...')\n-        authpairnew = \"rt:\"+password+\"wrong\"\n-        headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpairnew)}\n-\n-        conn = http.client.HTTPConnection(url.hostname, url.port)\n-        conn.connect()\n-        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        resp = conn.getresponse()\n-        assert_equal(resp.status, 401)\n-        conn.close()\n+        assert_equal(401, call_with_auth(self.nodes[0], 'rt', password+'wrong').status)\n \n         #Correct for rt2\n         self.log.info('Correct...')\n-        authpairnew = \"rt2:\"+password2\n-        headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpairnew)}\n-\n-        conn = http.client.HTTPConnection(url.hostname, url.port)\n-        conn.connect()\n-        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        resp = conn.getresponse()\n-        assert_equal(resp.status, 200)\n-        conn.close()\n+        assert_equal(200, call_with_auth(self.nodes[0], 'rt2', password2).status)\n \n         #Wrong password for rt2\n         self.log.info('Wrong...')\n-        authpairnew = \"rt2:\"+password2+\"wrong\"\n-        headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpairnew)}\n-\n-        conn = http.client.HTTPConnection(url.hostname, url.port)\n-        conn.connect()\n-        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        resp = conn.getresponse()\n-        assert_equal(resp.status, 401)\n-        conn.close()\n+        assert_equal(401, call_with_auth(self.nodes[0], 'rt2', password2+'wrong').status)\n \n         #Correct for randomly generated user\n         self.log.info('Correct...')\n-        authpairnew = self.user+\":\"+self.password\n-        headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpairnew)}\n-\n-        conn = http.client.HTTPConnection(url.hostname, url.port)\n-        conn.connect()\n-        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        resp = conn.getresponse()\n-        assert_equal(resp.status, 200)\n-        conn.close()\n+        assert_equal(200, call_with_auth(self.nodes[0], self.user, self.password).status)\n \n         #Wrong password for randomly generated user\n         self.log.info('Wrong...')\n-        authpairnew = self.user+\":\"+self.password+\"Wrong\"\n-        headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpairnew)}\n-\n-        conn = http.client.HTTPConnection(url.hostname, url.port)\n-        conn.connect()\n-        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        resp = conn.getresponse()\n-        assert_equal(resp.status, 401)\n-        conn.close()\n+        assert_equal(401, call_with_auth(self.nodes[0], self.user, self.password+'Wrong').status)\n \n         ###############################################################\n         # Check correctness of the rpcuser/rpcpassword config options #\n@@ -167,40 +109,15 @@ def run_test(self):\n \n         # rpcuser and rpcpassword authpair\n         self.log.info('Correct...')\n-        rpcuserauthpair = \"rpcuser\ud83d\udcbb:rpcpassword\ud83d\udd11\"\n-\n-        headers = {\"Authorization\": \"Basic \" + str_to_b64str(rpcuserauthpair)}\n-\n-        conn = http.client.HTTPConnection(url.hostname, url.port)\n-        conn.connect()\n-        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        resp = conn.getresponse()\n-        assert_equal(resp.status, 200)\n-        conn.close()\n+        assert_equal(200, call_with_auth(self.nodes[1], \"rpcuser\ud83d\udcbb\", \"rpcpassword\ud83d\udd11\").status)\n \n         #Wrong login name with rpcuser's password\n-        rpcuserauthpair = \"rpcuserwrong:rpcpassword\"\n-        headers = {\"Authorization\": \"Basic \" + str_to_b64str(rpcuserauthpair)}\n-\n-        conn = http.client.HTTPConnection(url.hostname, url.port)\n-        conn.connect()\n-        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        resp = conn.getresponse()\n-        assert_equal(resp.status, 401)\n-        conn.close()\n+        self.log.info('Wrong...')\n+        assert_equal(401, call_with_auth(self.nodes[1], 'rpcuserwrong', 'rpcpassword').status)\n \n         #Wrong password for rpcuser\n         self.log.info('Wrong...')\n-        rpcuserauthpair = \"rpcuser:rpcpasswordwrong\"\n-        headers = {\"Authorization\": \"Basic \" + str_to_b64str(rpcuserauthpair)}\n-\n-        conn = http.client.HTTPConnection(url.hostname, url.port)\n-        conn.connect()\n-        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n-        resp = conn.getresponse()\n-        assert_equal(resp.status, 401)\n-        conn.close()\n-\n+        assert_equal(401, call_with_auth(self.nodes[1], 'rpcuser', 'rpcpasswordwrong').status)\n \n if __name__ == '__main__':\n     HTTPBasicsTest ().main ()"
      }
    ]
  },
  {
    "sha": "c73d871799982ca29c29cef90e1a78814cf34019",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzNkODcxNzk5OTgyY2EyOWMyOWNlZjkwZTFhNzg4MTRjZjM0MDE5",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-03T18:39:49Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-08T20:13:33Z"
      },
      "message": "test: rpc_users: Add function for testing auth params.",
      "tree": {
        "sha": "fe4b19666b326c0e51a1d3e83e90d98f8c160439",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fe4b19666b326c0e51a1d3e83e90d98f8c160439"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c73d871799982ca29c29cef90e1a78814cf34019",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl0jo+0ACgkQDMUhUxl5\nkaU/KA/+P8PbTz7WsplVycVkwANBkBRRfHy7jzrmZ5pQqJj1v5Qo4pgZ5rl3+9qS\n+sTyxuqIFa7jXzjrcLQWuXmOlFipTnmCtBRu8CC1EkhvonzUTQFrvYRQQ0vF9qWg\nI5aLAYBgWTMPZzGAva6oe+DTbia/0OjchoHRjSvKFPNpO+MWUv0zw+PjB05tjzBc\nWiwV7gUG9KsxPoA/Dhue2WLkny23RascGSZrif6l13vZvimMWoXHxvQTWrtqaEL9\nnOWcU/HBVndEt4juoXm3rVZVF2GFGePUoryNYX7UsQxyWtQVszQH3bw823JJ25En\nm+fhU65r4Qvsnd7OnWNLd2iljUQKUSPfjjxmSJ02G9nUFS+RjlBYbCg0xNgFp7iV\ntx7A2KbJFRFD+AzX0Xgk9MGlG6rqxqPZqCPO3OQV2W7Un7mo0FeleDogHT+C7WWI\nA/98o4U2ztupefyhKziC1/XJsS9Pq2h0Sdb8M4xB9QsNz+Htlc8CGgJ5dCQNWMWJ\ngyNtzDbX4bVs0hm7okuqg2MOf2ahOw7wBJEPm7XeQNgj+knyt1feCAcB8eTfQ/i0\njJq4eV6WgAYFfReSwwPbznh1PVxu7UNf6IcZ+UVGOlLsmicBwns28EVgqr0MnlH0\nEZ2XWQBV1dLQ64YaR3Ttu44MBEO8GDaPa83f3dw//hzb8aGQJSQ=\n=4mqL\n-----END PGP SIGNATURE-----",
        "payload": "tree fe4b19666b326c0e51a1d3e83e90d98f8c160439\nparent 604e2a997ff26202dd0fa1932d60dc14cc53ac6d\nauthor Carl Dong <contact@carldong.me> 1562179189 -0400\ncommitter Carl Dong <contact@carldong.me> 1562616813 -0400\n\ntest: rpc_users: Add function for testing auth params.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c73d871799982ca29c29cef90e1a78814cf34019",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c73d871799982ca29c29cef90e1a78814cf34019",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c73d871799982ca29c29cef90e1a78814cf34019/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "604e2a997ff26202dd0fa1932d60dc14cc53ac6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/604e2a997ff26202dd0fa1932d60dc14cc53ac6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/604e2a997ff26202dd0fa1932d60dc14cc53ac6d"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 18,
      "deletions": 41
    },
    "files": [
      {
        "sha": "be21c837f402cfa0d699ebd665dd3e138aa15e9b",
        "filename": "test/functional/rpc_users.py",
        "status": "modified",
        "additions": 18,
        "deletions": 41,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c73d871799982ca29c29cef90e1a78814cf34019/test/functional/rpc_users.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c73d871799982ca29c29cef90e1a78814cf34019/test/functional/rpc_users.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_users.py?ref=c73d871799982ca29c29cef90e1a78814cf34019",
        "patch": "@@ -61,63 +61,40 @@ def setup_chain(self):\n             f.write(rpcuser+\"\\n\")\n             f.write(rpcpassword+\"\\n\")\n \n-    def run_test(self):\n-\n-        ##################################################\n-        # Check correctness of the rpcauth config option #\n-        ##################################################\n-        url = urllib.parse.urlparse(self.nodes[0].url)\n-\n-        password = \"cA773lm788buwYe4g4WT+05pKyNruVKjQ25x3n0DQcM=\"\n-        password2 = \"8/F3uMDw4KSEbw96U3CA1C4X05dkHDN2BPFjTgZW4KI=\"\n-\n+    def test_auth(self, node, user, password):\n         self.log.info('Correct...')\n-        assert_equal(200, call_with_auth(self.nodes[0], url.username, url.password).status)\n+        assert_equal(200, call_with_auth(node, user, password).status)\n \n-        #Use new authpair to confirm both work\n-        self.log.info('Correct...')\n-        assert_equal(200, call_with_auth(self.nodes[0], 'rt', password).status)\n+        self.log.info('Wrong...')\n+        assert_equal(401, call_with_auth(node, user, password+'wrong').status)\n \n-        #Wrong login name with rt's password\n         self.log.info('Wrong...')\n-        assert_equal(401, call_with_auth(self.nodes[0], 'rtwrong', password).status)\n+        assert_equal(401, call_with_auth(node, user+'wrong', password).status)\n \n-        #Wrong password for rt\n         self.log.info('Wrong...')\n-        assert_equal(401, call_with_auth(self.nodes[0], 'rt', password+'wrong').status)\n+        assert_equal(401, call_with_auth(node, user+'wrong', password+'wrong').status)\n \n-        #Correct for rt2\n-        self.log.info('Correct...')\n-        assert_equal(200, call_with_auth(self.nodes[0], 'rt2', password2).status)\n+    def run_test(self):\n \n-        #Wrong password for rt2\n-        self.log.info('Wrong...')\n-        assert_equal(401, call_with_auth(self.nodes[0], 'rt2', password2+'wrong').status)\n+        ##################################################\n+        # Check correctness of the rpcauth config option #\n+        ##################################################\n+        url = urllib.parse.urlparse(self.nodes[0].url)\n \n-        #Correct for randomly generated user\n-        self.log.info('Correct...')\n-        assert_equal(200, call_with_auth(self.nodes[0], self.user, self.password).status)\n+        password = \"cA773lm788buwYe4g4WT+05pKyNruVKjQ25x3n0DQcM=\"\n+        password2 = \"8/F3uMDw4KSEbw96U3CA1C4X05dkHDN2BPFjTgZW4KI=\"\n \n-        #Wrong password for randomly generated user\n-        self.log.info('Wrong...')\n-        assert_equal(401, call_with_auth(self.nodes[0], self.user, self.password+'Wrong').status)\n+        self.test_auth(self.nodes[0], url.username, url.password)\n+        self.test_auth(self.nodes[0], 'rt', password)\n+        self.test_auth(self.nodes[0], 'rt2', password2)\n+        self.test_auth(self.nodes[0], self.user, self.password)\n \n         ###############################################################\n         # Check correctness of the rpcuser/rpcpassword config options #\n         ###############################################################\n         url = urllib.parse.urlparse(self.nodes[1].url)\n \n-        # rpcuser and rpcpassword authpair\n-        self.log.info('Correct...')\n-        assert_equal(200, call_with_auth(self.nodes[1], \"rpcuser\ud83d\udcbb\", \"rpcpassword\ud83d\udd11\").status)\n-\n-        #Wrong login name with rpcuser's password\n-        self.log.info('Wrong...')\n-        assert_equal(401, call_with_auth(self.nodes[1], 'rpcuserwrong', 'rpcpassword').status)\n-\n-        #Wrong password for rpcuser\n-        self.log.info('Wrong...')\n-        assert_equal(401, call_with_auth(self.nodes[1], 'rpcuser', 'rpcpasswordwrong').status)\n+        self.test_auth(self.nodes[1], \"rpcuser\ud83d\udcbb\", \"rpcpassword\ud83d\udd11\")\n \n if __name__ == '__main__':\n     HTTPBasicsTest ().main ()"
      }
    ]
  },
  {
    "sha": "830dc2dd0fccb7f3ec49ff7233a188d92c541e7e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MzBkYzJkZDBmY2NiN2YzZWM0OWZmNzIzM2ExODhkOTJjNTQxZTdl",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-03T18:56:28Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-08T20:13:34Z"
      },
      "message": "test: rpc_users: Also test rpcauth.py with specified password.",
      "tree": {
        "sha": "c53422d54408ac46f790c3c2c32f886f1c452d09",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c53422d54408ac46f790c3c2c32f886f1c452d09"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/830dc2dd0fccb7f3ec49ff7233a188d92c541e7e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl0jo+4ACgkQDMUhUxl5\nkaUKbhAAoDeHHAdpomvpH4jZ+EwjbLp4Dj3t6Vn3WDMT4qi7hXSEIrr6eE2CqPmh\n038oWfOLMBw78QGaTE1i8xL0DrR1j770T1Zf5PeJyFtGjTNvQApKrrA4c5w2wVwn\nrPMPbvVqr7sgNtBuOVDFhehVSJdNFnDsJUY9VLIMtO5KOwsSp5Sy0XTdw4Q75NyB\nt0HKaD2CNSVe7fuH5gk6B5ljUkGKxynBefiAoa+mSrdYgJzumDFSAeed6AD2ycQj\nL7mrubXgoDlCjt7D6AlS98f3b997JJzyMs9PvvjpLT09aBnwsdU3mmEMkF05lu6N\nWAxVPZd2NKH/3QJq4NziXXjzsnoPW9Yt2fKqNMjEuWp1mgr45zarRQIg1LF8OnV0\noSTNWXB2/Fm2nx+W7vTowOmV1qzmj6yMy0Kpp00DTQR93fr2MyNaZRzaJZWus1Su\nX8nFA0OawFZlkyHHYIuYNrH6b18B6fhQvm7hcv0GDvDnMlbil76/0Fr7YRpFL/6C\ni2KfCWTfG6g3DYfOvn/hQZz03frnaxeKslFzOsEyz6V7cNDO6dTYxetIU7ASYckb\nwRNh/2NKEv/Dpxej4mxDwqHERyl9xDq0oAx7oQOhmpKhtx8xh4KhiaA06/Pcwog5\ncCZse0sToAdfhWDekIVnui6CUlJCDbwaX2IrBreexspxTtSzfbk=\n=Mc8l\n-----END PGP SIGNATURE-----",
        "payload": "tree c53422d54408ac46f790c3c2c32f886f1c452d09\nparent c73d871799982ca29c29cef90e1a78814cf34019\nauthor Carl Dong <contact@carldong.me> 1562180188 -0400\ncommitter Carl Dong <contact@carldong.me> 1562616814 -0400\n\ntest: rpc_users: Also test rpcauth.py with specified password.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/830dc2dd0fccb7f3ec49ff7233a188d92c541e7e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/830dc2dd0fccb7f3ec49ff7233a188d92c541e7e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/830dc2dd0fccb7f3ec49ff7233a188d92c541e7e/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c73d871799982ca29c29cef90e1a78814cf34019",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c73d871799982ca29c29cef90e1a78814cf34019",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c73d871799982ca29c29cef90e1a78814cf34019"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 10,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2d06c954970c211971bc63f7610db002a37b067b",
        "filename": "test/functional/rpc_users.py",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/830dc2dd0fccb7f3ec49ff7233a188d92c541e7e/test/functional/rpc_users.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/830dc2dd0fccb7f3ec49ff7233a188d92c541e7e/test/functional/rpc_users.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_users.py?ref=830dc2dd0fccb7f3ec49ff7233a188d92c541e7e",
        "patch": "@@ -40,14 +40,21 @@ def setup_chain(self):\n         super().setup_chain()\n         #Append rpcauth to bitcoin.conf before initialization\n         rpcauth = \"rpcauth=rt:93648e835a54c573682c2eb19f882535$7681e9c5b74bdd85e78166031d2058e1069b3ed7ed967c93fc63abba06f31144\"\n-        rpcauth2 = \"rpcauth=rt2:f8607b1a88861fac29dfccf9b52ff9f$ff36a0c23c8c62b4846112e50fa888416e94c17bfd4c42f88fd8f55ec6a3137e\"\n         rpcuser = \"rpcuser=rpcuser\ud83d\udcbb\"\n         rpcpassword = \"rpcpassword=rpcpassword\ud83d\udd11\"\n \n-        self.user = ''.join(SystemRandom().choice(string.ascii_letters + string.digits) for _ in range(10))\n         config = configparser.ConfigParser()\n         config.read_file(open(self.options.configfile))\n         gen_rpcauth = config['environment']['RPCAUTH']\n+\n+        # Generate RPCAUTH with specified password\n+        self.rt2password = \"8/F3uMDw4KSEbw96U3CA1C4X05dkHDN2BPFjTgZW4KI=\"\n+        p = subprocess.Popen([sys.executable, gen_rpcauth, 'rt2', self.rt2password], stdout=subprocess.PIPE, universal_newlines=True)\n+        lines = p.stdout.read().splitlines()\n+        rpcauth2 = lines[1]\n+\n+        # Generate RPCAUTH without specifying password\n+        self.user = ''.join(SystemRandom().choice(string.ascii_letters + string.digits) for _ in range(10))\n         p = subprocess.Popen([sys.executable, gen_rpcauth, self.user], stdout=subprocess.PIPE, universal_newlines=True)\n         lines = p.stdout.read().splitlines()\n         rpcauth3 = lines[1]\n@@ -82,11 +89,10 @@ def run_test(self):\n         url = urllib.parse.urlparse(self.nodes[0].url)\n \n         password = \"cA773lm788buwYe4g4WT+05pKyNruVKjQ25x3n0DQcM=\"\n-        password2 = \"8/F3uMDw4KSEbw96U3CA1C4X05dkHDN2BPFjTgZW4KI=\"\n \n         self.test_auth(self.nodes[0], url.username, url.password)\n         self.test_auth(self.nodes[0], 'rt', password)\n-        self.test_auth(self.nodes[0], 'rt2', password2)\n+        self.test_auth(self.nodes[0], 'rt2', self.rt2password)\n         self.test_auth(self.nodes[0], self.user, self.password)\n \n         ###############################################################"
      }
    ]
  },
  {
    "sha": "e263a343d4b6a2622df6bb734cd9d51a0d20a663",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMjYzYTM0M2Q0YjZhMjYyMmRmNmJiNzM0Y2Q5ZDUxYTBkMjBhNjYz",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-04T16:41:34Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-07-08T20:13:35Z"
      },
      "message": "test: rpc_users: Make variable names more clear.",
      "tree": {
        "sha": "42bb1d040f087c374044ddb8a997927b6f031830",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/42bb1d040f087c374044ddb8a997927b6f031830"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e263a343d4b6a2622df6bb734cd9d51a0d20a663",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl0jo+8ACgkQDMUhUxl5\nkaVHVxAAgyzZ4Ijlt/SnVXCieimA5y2c+kdD+xhHVhLlFL+fRwMT2+UG79U8lZ1y\ngvtZkq0xUR2BcPG0EcMdCjblNhoHz+5NIaLQ98qHM7fKPyLoreUM+dW0VqwW7M1h\n3wNofCHyHvrjHvsWQ93Sl+jeNu5AktLb1LAVuXOvJtRjgnjhuEQ3Hj8EhSyNfC7o\nHip7qbAdkvBJdMdBrmEqsyocZNn9WJmZwLR5rJFuhNi/xoJf5Mc0JCEDlvNX6NRR\nn8VlkywGN5OjZ4kT/Sa1uO36/ILjHacQVDYxv6WIsjcNnnNgS11Nb5S3lPrO99Le\nlS6tDlL/ylu5Nhw6QQMR323ATR4kpH6Uq6e/5DSjzvOXDFOil2jF/O08t9pi2TTF\noVfD3ZvytrOsQE10vf6CfRdngr1zP0chcEBnF+RXGDnz868EMczQPH7JaI6awiQC\niE+RMx2MoVFYTr9vv4IGNEFWsnq3vrJUHIj1Vw8uvpNrt8L9+ioBAorAgkXmxmZu\nLaZFHQmotSeDF9VOQWKiz3/RAhex0kn9Y07gfmmGiu+woRfPY9E8L4KrrkWSmvbv\nQI9wh2hOMGAfwBothzPgy+1xyts2Q8bgk8WzfRwm7uoBr61cYyRUwlbfUbmFa/kj\nHlp/vqTNXaPK13WPxmiGRsFIKGNOfxIS6/RxDoEazy4i1iaKYDc=\n=iHYx\n-----END PGP SIGNATURE-----",
        "payload": "tree 42bb1d040f087c374044ddb8a997927b6f031830\nparent 830dc2dd0fccb7f3ec49ff7233a188d92c541e7e\nauthor Carl Dong <contact@carldong.me> 1562258494 -0400\ncommitter Carl Dong <contact@carldong.me> 1562616815 -0400\n\ntest: rpc_users: Make variable names more clear.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e263a343d4b6a2622df6bb734cd9d51a0d20a663",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e263a343d4b6a2622df6bb734cd9d51a0d20a663",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e263a343d4b6a2622df6bb734cd9d51a0d20a663/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "830dc2dd0fccb7f3ec49ff7233a188d92c541e7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/830dc2dd0fccb7f3ec49ff7233a188d92c541e7e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/830dc2dd0fccb7f3ec49ff7233a188d92c541e7e"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "8bbb3c04fa6db4397c852e3e2b5b7f46e3685149",
        "filename": "test/functional/rpc_users.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e263a343d4b6a2622df6bb734cd9d51a0d20a663/test/functional/rpc_users.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e263a343d4b6a2622df6bb734cd9d51a0d20a663/test/functional/rpc_users.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_users.py?ref=e263a343d4b6a2622df6bb734cd9d51a0d20a663",
        "patch": "@@ -39,9 +39,11 @@ def set_test_params(self):\n     def setup_chain(self):\n         super().setup_chain()\n         #Append rpcauth to bitcoin.conf before initialization\n+        self.rtpassword = \"cA773lm788buwYe4g4WT+05pKyNruVKjQ25x3n0DQcM=\"\n         rpcauth = \"rpcauth=rt:93648e835a54c573682c2eb19f882535$7681e9c5b74bdd85e78166031d2058e1069b3ed7ed967c93fc63abba06f31144\"\n-        rpcuser = \"rpcuser=rpcuser\ud83d\udcbb\"\n-        rpcpassword = \"rpcpassword=rpcpassword\ud83d\udd11\"\n+\n+        self.rpcuser = \"rpcuser\ud83d\udcbb\"\n+        self.rpcpassword = \"rpcpassword\ud83d\udd11\"\n \n         config = configparser.ConfigParser()\n         config.read_file(open(self.options.configfile))\n@@ -65,8 +67,8 @@ def setup_chain(self):\n             f.write(rpcauth2+\"\\n\")\n             f.write(rpcauth3+\"\\n\")\n         with open(os.path.join(get_datadir_path(self.options.tmpdir, 1), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n-            f.write(rpcuser+\"\\n\")\n-            f.write(rpcpassword+\"\\n\")\n+            f.write(\"rpcuser={}\\n\".format(self.rpcuser))\n+            f.write(\"rpcpassword={}\\n\".format(self.rpcpassword))\n \n     def test_auth(self, node, user, password):\n         self.log.info('Correct...')\n@@ -88,10 +90,8 @@ def run_test(self):\n         ##################################################\n         url = urllib.parse.urlparse(self.nodes[0].url)\n \n-        password = \"cA773lm788buwYe4g4WT+05pKyNruVKjQ25x3n0DQcM=\"\n-\n         self.test_auth(self.nodes[0], url.username, url.password)\n-        self.test_auth(self.nodes[0], 'rt', password)\n+        self.test_auth(self.nodes[0], 'rt', self.rtpassword)\n         self.test_auth(self.nodes[0], 'rt2', self.rt2password)\n         self.test_auth(self.nodes[0], self.user, self.password)\n \n@@ -100,7 +100,7 @@ def run_test(self):\n         ###############################################################\n         url = urllib.parse.urlparse(self.nodes[1].url)\n \n-        self.test_auth(self.nodes[1], \"rpcuser\ud83d\udcbb\", \"rpcpassword\ud83d\udd11\")\n+        self.test_auth(self.nodes[1], self.rpcuser, self.rpcpassword)\n \n if __name__ == '__main__':\n     HTTPBasicsTest ().main ()"
      }
    ]
  }
]