[
  {
    "sha": "fa910b47656d0e69cccb1f31804f2b11aa45d053",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTkxMGI0NzY1NmQwZTY5Y2NjYjFmMzE4MDRmMmIxMWFhNDVkMDUz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-06-03T10:14:33Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-06-04T09:08:00Z"
      },
      "message": "util: Properly handle -noincludeconf on command line\n\nThis bug was introduced in commit\nfad0867d6ab9430070aa7d60bf7617a6508e0586.\n\nUnit test\nCo-Authored-By: Russell Yanofsky <russ@yanofsky.org>",
      "tree": {
        "sha": "5d2084e49b3408554a4cdf5c856b9c3330170705",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d2084e49b3408554a4cdf5c856b9c3330170705"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa910b47656d0e69cccb1f31804f2b11aa45d053",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjrbQwAsdrMNtQEFRjcHfaQTTWbw+R540dUsECzTP32bHHROsG3kfClQl6Oey3T\nkJItwlr6Pb72vcxxnYyshsT0DuKzYsf7mFLATFpmWgXiTPYblwsZG3wYqK4jQydw\nZCS+MSgKC29Ri1LWYfTW0SVGhBha9+jO+2JXcSAkLuymPcCJYnPdf4ukMS4c9ezg\nVj3pO7XU1mq0jEt2miPXnERO2NLa21KwEPAoZ9Pe1aTqZpYvGmZ+lWX1xZbpgbb7\nHrEfZUUQd7BtpJADa//VJo38x7HuKk5nPEPAA2xAr2cGrdywNazDRL8G2DFOtCbW\nkM26OKWMhiHSbUZ+gMCL0HSK/FV3+mCefaP/nhbCKEuL3+NnYNkvz5c9eYiqJ0M4\nKCHNAyi9ycIK2lIv/cVljyz+zLxDgrWT6i+l07AeMiSEmY+CcbqhRl9gKSelK2Pj\nW7g0bXtLeKkOCHNrBX/cortm0a4pRzNazzrx3/KKNvc0VG15RHVbHmVIFJcFDPuY\n7YmMEu9P\n=9SoD\n-----END PGP SIGNATURE-----",
        "payload": "tree 5d2084e49b3408554a4cdf5c856b9c3330170705\nparent a9435e34457e0bfebd22e574fe63428537948aeb\nauthor MarcoFalke <falke.marco@gmail.com> 1622715273 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1622797680 +0200\n\nutil: Properly handle -noincludeconf on command line\n\nThis bug was introduced in commit\nfad0867d6ab9430070aa7d60bf7617a6508e0586.\n\nUnit test\nCo-Authored-By: Russell Yanofsky <russ@yanofsky.org>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa910b47656d0e69cccb1f31804f2b11aa45d053",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa910b47656d0e69cccb1f31804f2b11aa45d053",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa910b47656d0e69cccb1f31804f2b11aa45d053/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9435e34457e0bfebd22e574fe63428537948aeb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9435e34457e0bfebd22e574fe63428537948aeb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9435e34457e0bfebd22e574fe63428537948aeb"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 26,
      "deletions": 4
    },
    "files": [
      {
        "sha": "7ce38519cfd4bcac7c322c1850612a5cd0c266d5",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa910b47656d0e69cccb1f31804f2b11aa45d053/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa910b47656d0e69cccb1f31804f2b11aa45d053/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=fa910b47656d0e69cccb1f31804f2b11aa45d053",
        "patch": "@@ -329,6 +329,25 @@ BOOST_FIXTURE_TEST_CASE(util_CheckValue, CheckValueTest)\n     CheckValue(M::ALLOW_ANY, \"-value=abc\", Expect{\"abc\"}.String(\"abc\").Int(0).Bool(false).List({\"abc\"}));\n }\n \n+struct NoIncludeConfTest {\n+    std::string Parse(const char* arg)\n+    {\n+        TestArgsManager test;\n+        test.SetupArgs({{\"-includeconf\", ArgsManager::ALLOW_ANY}});\n+        std::array argv{\"ignored\", arg};\n+        std::string error;\n+        (void)test.ParseParameters(argv.size(), argv.data(), error);\n+        return error;\n+    }\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(util_NoIncludeConf, NoIncludeConfTest)\n+{\n+    BOOST_CHECK_EQUAL(Parse(\"-noincludeconf\"), \"\");\n+    BOOST_CHECK_EQUAL(Parse(\"-includeconf\"), \"-includeconf cannot be used from commandline; -includeconf=\\\"\\\"\");\n+    BOOST_CHECK_EQUAL(Parse(\"-includeconf=file\"), \"-includeconf cannot be used from commandline; -includeconf=\\\"file\\\"\");\n+}\n+\n BOOST_AUTO_TEST_CASE(util_ParseParameters)\n {\n     TestArgsManager testArgs;"
      },
      {
        "sha": "13ccf7463ee6f25c1afbfd6971394003d2a05799",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa910b47656d0e69cccb1f31804f2b11aa45d053/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa910b47656d0e69cccb1f31804f2b11aa45d053/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=fa910b47656d0e69cccb1f31804f2b11aa45d053",
        "patch": "@@ -365,11 +365,14 @@ bool ArgsManager::ParseParameters(int argc, const char* const argv[], std::strin\n         m_settings.command_line_options[key].push_back(value);\n     }\n \n-    // we do not allow -includeconf from command line\n+    // we do not allow -includeconf from command line, only -noincludeconf\n     if (auto* includes = util::FindKey(m_settings.command_line_options, \"includeconf\")) {\n-        const auto& include{*util::SettingsSpan(*includes).begin()}; // pick first value as example\n-        error = \"-includeconf cannot be used from commandline; -includeconf=\" + include.write();\n-        return false;\n+        const util::SettingsSpan values{*includes};\n+        // Range may be empty if -noincludeconf was passed\n+        if (!values.empty()) {\n+            error = \"-includeconf cannot be used from commandline; -includeconf=\" + values.begin()->write();\n+            return false; // pick first value as example\n+        }\n     }\n     return true;\n }"
      }
    ]
  }
]