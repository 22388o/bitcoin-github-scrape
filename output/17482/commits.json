[
  {
    "sha": "900d8f6f70859f528e84c5c38d0332f81d19df55",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MDBkOGY2ZjcwODU5ZjUyOGU4NGM1YzM4ZDAzMzJmODFkMTlkZjU1",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2019-12-19T21:27:15Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2019-12-19T21:27:15Z"
      },
      "message": "util: Disallow network-qualified command line options\n\nPreviously these were allowed but ignored.",
      "tree": {
        "sha": "77a9236d14f792e881aee790e4cebd7425f1a7cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77a9236d14f792e881aee790e4cebd7425f1a7cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/900d8f6f70859f528e84c5c38d0332f81d19df55",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/900d8f6f70859f528e84c5c38d0332f81d19df55",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/900d8f6f70859f528e84c5c38d0332f81d19df55",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/900d8f6f70859f528e84c5c38d0332f81d19df55/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6677be64f69b3d6f60f5a675ff9746def27a2de8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6677be64f69b3d6f60f5a675ff9746def27a2de8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6677be64f69b3d6f60f5a675ff9746def27a2de8"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 42,
      "deletions": 16
    },
    "files": [
      {
        "sha": "99ca53c5973555ef3b250712367725126bc77bf4",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/900d8f6f70859f528e84c5c38d0332f81d19df55/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/900d8f6f70859f528e84c5c38d0332f81d19df55/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=900d8f6f70859f528e84c5c38d0332f81d19df55",
        "patch": "@@ -104,6 +104,13 @@ Wallet\n Low-level changes\n =================\n \n+Command line\n+------------\n+\n+Command line options prefixed with main/test/regtest network names like\n+`-main.port=8333` `-test.server=1` previously were allowed but ignored. Now\n+they trigger \"Invalid parameter\" errors on startup.\n+\n Tests\n -----\n "
      },
      {
        "sha": "7b024ba75f0b39267b7620f19b9d90b0b430d66b",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 2,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/900d8f6f70859f528e84c5c38d0332f81d19df55/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/900d8f6f70859f528e84c5c38d0332f81d19df55/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=900d8f6f70859f528e84c5c38d0332f81d19df55",
        "patch": "@@ -340,6 +340,27 @@ BOOST_AUTO_TEST_CASE(util_ParseParameters)\n     BOOST_CHECK(testArgs.GetArgs(\"-ccc\").size() == 2);\n }\n \n+BOOST_AUTO_TEST_CASE(util_ParseInvalidParameters)\n+{\n+    TestArgsManager test;\n+    test.SetupArgs({{\"-registered\", ArgsManager::ALLOW_ANY}});\n+\n+    const char* argv[] = {\"ignored\", \"-registered\"};\n+    std::string error;\n+    BOOST_CHECK(test.ParseParameters(2, (char**)argv, error));\n+    BOOST_CHECK_EQUAL(error, \"\");\n+\n+    argv[1] = \"-unregistered\";\n+    BOOST_CHECK(!test.ParseParameters(2, (char**)argv, error));\n+    BOOST_CHECK_EQUAL(error, \"Invalid parameter -unregistered\");\n+\n+    // Make sure registered parameters prefixed with a chain name trigger errors.\n+    // (Previously, they were accepted and ignored.)\n+    argv[1] = \"-test.registered\";\n+    BOOST_CHECK(!test.ParseParameters(2, (char**)argv, error));\n+    BOOST_CHECK_EQUAL(error, \"Invalid parameter -test.registered\");\n+}\n+\n static void TestParse(const std::string& str, bool expected_bool, int64_t expected_int)\n {\n     TestArgsManager test;\n@@ -835,7 +856,8 @@ struct ArgsMergeTestingSetup : public BasicTestingSetup {\n     void ForEachMergeSetup(Fn&& fn)\n     {\n         ActionList arg_actions = {};\n-        ForEachNoDup(arg_actions, SET, SECTION_NEGATE, [&] {\n+        // command_line_options do not have sections. Only iterate over SET and NEGATE\n+        ForEachNoDup(arg_actions, SET, NEGATE, [&] {\n             ActionList conf_actions = {};\n             ForEachNoDup(conf_actions, SET, SECTION_NEGATE, [&] {\n                 for (bool soft_set : {false, true}) {\n@@ -995,7 +1017,7 @@ BOOST_FIXTURE_TEST_CASE(util_ArgsMerge, ArgsMergeTestingSetup)\n     // Results file is formatted like:\n     //\n     //   <input> || <IsArgSet/IsArgNegated/GetArg output> | <GetArgs output> | <GetUnsuitable output>\n-    BOOST_CHECK_EQUAL(out_sha_hex, \"b835eef5977d69114eb039a976201f8c7121f34fe2b7ea2b73cafb516e5c9dc8\");\n+    BOOST_CHECK_EQUAL(out_sha_hex, \"8fd4877bb8bf337badca950ede6c917441901962f160e52514e06a60dea46cde\");\n }\n \n // Similar test as above, but for ArgsManager::GetChainName function."
      },
      {
        "sha": "5587764c588888179b869d689118da01d06b8801",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 13,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/900d8f6f70859f528e84c5c38d0332f81d19df55/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/900d8f6f70859f528e84c5c38d0332f81d19df55/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=900d8f6f70859f528e84c5c38d0332f81d19df55",
        "patch": "@@ -311,21 +311,18 @@ bool ArgsManager::ParseParameters(int argc, const char* const argv[], std::strin\n         std::string section;\n         util::SettingsValue value = InterpretOption(section, key, val);\n         Optional<unsigned int> flags = GetArgFlags('-' + key);\n-        if (flags) {\n-            if (!CheckValid(key, value, *flags, error)) {\n-                return false;\n-            }\n-            // Weird behavior preserved for backwards compatibility: command\n-            // line options with section prefixes are allowed but ignored. It\n-            // would be better if these options triggered the Invalid parameter\n-            // error below.\n-            if (section.empty()) {\n-                m_settings.command_line_options[key].push_back(value);\n-            }\n-        } else {\n-            error = strprintf(\"Invalid parameter -%s\", key);\n+\n+        // Unknown command line options and command line options with dot\n+        // characters (which are returned from InterpretOption with nonempty\n+        // section strings) are not valid.\n+        if (!flags || !section.empty()) {\n+            error = strprintf(\"Invalid parameter %s\", argv[i]);\n             return false;\n         }\n+\n+        if (!CheckValid(key, value, *flags, error)) return false;\n+\n+        m_settings.command_line_options[key].push_back(value);\n     }\n \n     // we do not allow -includeconf from command line"
      },
      {
        "sha": "8397eb9f593c415af294f2d859df82d54f8bd94a",
        "filename": "test/functional/feature_config_args.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/900d8f6f70859f528e84c5c38d0332f81d19df55/test/functional/feature_config_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/900d8f6f70859f528e84c5c38d0332f81d19df55/test/functional/feature_config_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_config_args.py?ref=900d8f6f70859f528e84c5c38d0332f81d19df55",
        "patch": "@@ -23,7 +23,7 @@ def test_config_file_parser(self):\n             conf.write('includeconf={}\\n'.format(inc_conf_file_path))\n \n         self.nodes[0].assert_start_raises_init_error(\n-            expected_msg='Error: Error parsing command line arguments: Invalid parameter -dash_cli',\n+            expected_msg='Error: Error parsing command line arguments: Invalid parameter -dash_cli=1',\n             extra_args=['-dash_cli=1'],\n         )\n         with open(inc_conf_file_path, 'w', encoding='utf-8') as conf:"
      }
    ]
  }
]