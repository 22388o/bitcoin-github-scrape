[
  {
    "sha": "77d51c74985061653dc96641a852f34622f37db6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3N2Q1MWM3NDk4NTA2MTY1M2RjOTY2NDFhODUyZjM0NjIyZjM3ZGI2",
    "commit": {
      "author": {
        "name": "Aaron Clauson",
        "email": "aaron@sipsorcery.com",
        "date": "2017-11-17T13:16:35Z"
      },
      "committer": {
        "name": "Aaron Clauson",
        "email": "aaron@sipsorcery.com",
        "date": "2017-11-17T13:16:35Z"
      },
      "message": "Added steps to specify required source location for Windows WSL builds. Attempted to make the introduction and options for building on Windows clearer.",
      "tree": {
        "sha": "64327ff650181338d8f195a12816511293d64f51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64327ff650181338d8f195a12816511293d64f51"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77d51c74985061653dc96641a852f34622f37db6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77d51c74985061653dc96641a852f34622f37db6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/77d51c74985061653dc96641a852f34622f37db6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77d51c74985061653dc96641a852f34622f37db6/comments",
    "author": {
      "login": "sipsorcery",
      "id": 197660,
      "node_id": "MDQ6VXNlcjE5NzY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipsorcery",
      "html_url": "https://github.com/sipsorcery",
      "followers_url": "https://api.github.com/users/sipsorcery/followers",
      "following_url": "https://api.github.com/users/sipsorcery/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipsorcery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
      "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
      "repos_url": "https://api.github.com/users/sipsorcery/repos",
      "events_url": "https://api.github.com/users/sipsorcery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipsorcery",
      "id": 197660,
      "node_id": "MDQ6VXNlcjE5NzY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipsorcery",
      "html_url": "https://github.com/sipsorcery",
      "followers_url": "https://api.github.com/users/sipsorcery/followers",
      "following_url": "https://api.github.com/users/sipsorcery/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipsorcery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
      "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
      "repos_url": "https://api.github.com/users/sipsorcery/repos",
      "events_url": "https://api.github.com/users/sipsorcery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "99bc0b428b03b571afbc311b7f18fd3a707ac5af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99bc0b428b03b571afbc311b7f18fd3a707ac5af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/99bc0b428b03b571afbc311b7f18fd3a707ac5af"
      }
    ],
    "stats": {
      "total": 72,
      "additions": 49,
      "deletions": 23
    },
    "files": [
      {
        "sha": "9e0e66e522e49aaa8874499f38644d4337ad45c4",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 49,
        "deletions": 23,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77d51c74985061653dc96641a852f34622f37db6/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77d51c74985061653dc96641a852f34622f37db6/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=77d51c74985061653dc96641a852f34622f37db6",
        "patch": "@@ -3,29 +3,28 @@ WINDOWS BUILD NOTES\n \n Below are some notes on how to build Bitcoin Core for Windows.\n \n-Most developers use cross-compilation from Ubuntu to build executables for\n-Windows. This is also used to build the release binaries.\n-\n-Building on Ubuntu Trusty 14.04 is recommended.\n-At the time of writing the Windows Subsystem for Linux installs Ubuntu Xenial 16.04. The default cross\n-compiler package for Ubuntu Xenial does not produce working executables for some of the bitcoin applications.\n-It is possible to build on Ubuntu Xenial by installing the cross compiler packages from\n-Ubuntu Zesty, see the steps below.\n-Building on Ubuntu Zesty 17.04 up to 17.10 has been verified to work.\n+The options known to work for building Bitcoin Core on Windows are:\n+\n+* On Linux using the [Mingw-w64](https://mingw-w64.org/doku.php) cross compiler tool chain. Ubuntu Trusty 14.04 is recommended\n+and is the platform used to build the Bitcoin Core Windows release binaries.\n+* On Windows using [Windows\n+Subsystem for Linux (WSL)](https://msdn.microsoft.com/commandline/wsl/about) and the Mingw-w64 cross compiler tool chain.\n+\n+Other options which may work but which have not been extensively tested are (please contribute instructions):\n \n-While there are potentially a number of ways to build on Windows (for example using msys / mingw-w64),\n-using the Windows Subsystem For Linux is the most straightforward. If you are building with\n-another method, please contribute the instructions here for others who are running versions\n-of Windows that are not compatible with the Windows Subsystem for Linux.\n+* On Windows using a POSIX compatibility layer application such as [cygwin](http://www.cygwin.com/) or [msys2](http://www.msys2.org/).\n+* On Windows using a native compiler tool chain such as [Visual Studio](https://www.visualstudio.com).\n \n-Compiling with Windows Subsystem For Linux\n--------------------------------------------\n+Installing Windows Subsystem for Linux\n+---------------------------------------\n \n With Windows 10, Microsoft has released a new feature named the [Windows\n Subsystem for Linux (WSL)](https://msdn.microsoft.com/commandline/wsl/about). This\n feature allows you to run a bash shell directly on Windows in an Ubuntu-based\n environment. Within this environment you can cross compile for Windows without\n-the need for a separate Linux VM or server.\n+the need for a separate Linux VM or server. Note that while WSL can be installed with\n+other Linux variants, such as OpenSUSE, the following instructions have only been\n+tested with Ubuntu.\n \n This feature is not supported in versions of Windows prior to Windows 10 or on\n Windows Server SKUs. In addition, it is available [only for 64-bit versions of\n@@ -50,10 +49,15 @@ After the bash shell is active, you can follow the instructions below, starting\n with the \"Cross-compilation\" section. Compiling the 64-bit version is\n recommended but it is possible to compile the 32-bit version.\n \n-Cross-compilation\n--------------------\n+Cross-compilation for Ubuntu and Windows Subsystem for Linux\n+------------------------------------------------------------\n \n-These steps can be performed on, for example, an Ubuntu VM. The depends system\n+At the time of writing the Windows Subsystem for Linux installs Ubuntu Xenial 16.04. The Mingw-w64 package\n+for Ubuntu Xenial does not produce working executables for some of the Bitcoin Core applications.\n+It is possible to build on Ubuntu Xenial by installing the cross compiler packages from Ubuntu Zesty, see the steps below.\n+Building on Ubuntu Zesty 17.04 up to 17.10 has been verified to work.\n+\n+The steps below can be performed on Ubuntu (including in a VM) or WSL. The depends system\n will also work on other Linux distributions, however the commands for\n installing the toolchain will be different.\n \n@@ -94,6 +98,18 @@ Ubuntu Zesty 17.04 <sup>[2](#footnote2)</sup>:\n \n Once the tool chain is installed the build steps are common:\n \n+Note that for WSL the Bitcoin Core source path MUST be somewhere in the default mount file system, for\n+example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n+This means you cannot use a directory that located directly on the host Windows file system to perform the build.\n+\n+The next three steps are an example of how to acquire the source in an appropriate way.\n+\n+    cd /usr/src\n+    sudo git clone https://github.com/bitcoin/bitcoin.git\n+    sudo chmod -R a+rw bitcoin\n+\n+Once the source code is ready the build steps are below.\n+\n     PATH=$(echo \"$PATH\" | sed -e 's/:\\/mnt.*//g') # strip out problematic Windows %PATH% imported var\n     cd depends\n     make HOST=x86_64-w64-mingw32\n@@ -112,6 +128,16 @@ For Ubuntu Xenial 16.04, Ubuntu Zesty 17.04 and Windows Subsystem for Linux <sup\n \n     sudo update-alternatives --config i686-w64-mingw32-g++  # Set the default mingw32 g++ compiler option to posix.\n \n+Note that for WSL the Bitcoin Core source path MUST be somewhere in the default mount file system, for\n+example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n+This means you cannot use a directory that located directly on the host Windows file system to perform the build.\n+\n+The next three steps are an example of how to acquire the source in an appropriate way.\n+\n+    cd /usr/src\n+    sudo git clone https://github.com/bitcoin/bitcoin.git\n+    sudo chmod -R a+rw bitcoin\n+\n Then build using:\n \n     PATH=$(echo \"$PATH\" | sed -e 's/:\\/mnt.*//g') # strip out problematic Windows %PATH% imported var\n@@ -139,16 +165,16 @@ way. This will install to `c:\\workspace\\bitcoin`, for example:\n Footnotes\n ---------\n \n-<a name=\"footnote1\">1</a>: There is currently a bug in the 64 bit mingw-w64 cross compiler packaged for WSL/Ubuntu Xenial 16.04 that\n+<a name=\"footnote1\">1</a>: There is currently a bug in the 64 bit Mingw-w64 cross compiler packaged for WSL/Ubuntu Xenial 16.04 that\n causes two of the bitcoin executables to crash shortly after start up. The bug is related to the\n -fstack-protector-all g++ compiler flag which is used to mitigate buffer overflows.\n-Installing the mingw-w64 packages from the Ubuntu 17 distribution solves the issue, however, this is not\n+Installing the Mingw-w64 packages from the Ubuntu 17 distribution solves the issue, however, this is not\n an officially supported approach and it's only recommended if you are prepared to reinstall WSL/Ubuntu should\n something break.\n \n-<a name=\"footnote2\">2</a>: Starting from Ubuntu Xenial 16.04 both the 32 and 64 bit mingw-w64 packages install two different\n+<a name=\"footnote2\">2</a>: Starting from Ubuntu Xenial 16.04 both the 32 and 64 bit Mingw-w64 packages install two different\n compiler options to allow a choice between either posix or win32 threads. The default option is win32 threads which is the more\n efficient since it will result in binary code that links directly with the Windows kernel32.lib. Unfortunately, the headers\n required to support win32 threads conflict with some of the classes in the C++11 standard library in particular std::mutex.\n-It's not possible to build the bitcoin code using the win32 version of the mingw-w64 cross compilers (at least not without\n+It's not possible to build the bitcoin code using the win32 version of the Mingw-w64 cross compilers (at least not without\n modifying headers in the bitcoin source code)."
      }
    ]
  }
]