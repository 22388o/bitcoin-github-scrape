DrahtBot,2020-10-05 21:07:41,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19381 (Fix UBSan warnings triggered when loading corrupt mempool.dat files by rajarshimaitra)\n\nIf you consider this pul",https://github.com/bitcoin/bitcoin/pull/20089#issuecomment-703889492,703889492,
MarcoFalke,2020-10-09 07:07:08,review ACK 5693d5ad4a1ea862b82b25a3194569bfb66bc67d,https://github.com/bitcoin/bitcoin/pull/20089#issuecomment-706011655,706011655,
practicalswift,2020-10-12 06:35:13,@theStack Now printing a log message. Please re-review :),https://github.com/bitcoin/bitcoin/pull/20089#issuecomment-706902182,706902182,
MarcoFalke,2020-10-13 13:19:55,review ACK 875a2c3149f6f94b198c7c24230375d27410f422,https://github.com/bitcoin/bitcoin/pull/20089#issuecomment-707732785,707732785,
practicalswift,2020-10-19 20:15:02,Could someone restart Cirrus please? :),https://github.com/bitcoin/bitcoin/pull/20089#issuecomment-712416470,712416470,
promag,2020-10-07 07:59:39,"nit, `MoneyRange(abs(fee_delta))`?",https://github.com/bitcoin/bitcoin/pull/20089#discussion_r500812519,500812519,src/validation.cpp
practicalswift,2020-10-07 08:52:28,"No that would be very dangerous! :)\n\nI'm intentionally avoiding `abs` here.\n\n`FeeDeltaRange(fee_delta)` is not equivalent to `MoneyRange(abs(fee_delta))` :)\n\nLive demo:\n\nAt first sight they might _appear_ to be equivalent:\n\n```\n$ cling\n[cling]$ #include <cstdint>\n[cling]$ using CAmount = int64_t;\n[cling]$ static const CAmount COIN = 100000000;\n[cling]$ static const CA",https://github.com/bitcoin/bitcoin/pull/20089#discussion_r500846086,500846086,src/validation.cpp
MarcoFalke,2020-10-08 12:29:46,This helper could be moved to the amount module?,https://github.com/bitcoin/bitcoin/pull/20089#discussion_r501681148,501681148,src/validation.cpp
practicalswift,2020-10-08 19:51:31,Good idea! Done! :),https://github.com/bitcoin/bitcoin/pull/20089#discussion_r501974214,501974214,src/validation.cpp
theStack,2020-10-12 17:31:59,"This condition is always true, isn't it? 0 is a valid fee delta, hence the else-branch wouldn't be taken in the case that i.second is zero.",https://github.com/bitcoin/bitcoin/pull/20089#discussion_r503437961,503437961,src/validation.cpp
practicalswift,2020-10-12 20:36:29,"You're absolutely right: the conditional is redundant. Thanks for noticing! Redundancy removed :)\n\nPlease re-review! :)",https://github.com/bitcoin/bitcoin/pull/20089#discussion_r503519957,503519957,src/validation.cpp
luke-jr,2020-10-24 18:16:57,Fee deltas outside `MAX_MONEY` are valid and have at least a conceptual use case (consider that fee rate is divided by transaction size: a larger transaction would need `>MAX_MONEY` feerate to go before a `MAX_MONEY` smaller tx).,https://github.com/bitcoin/bitcoin/pull/20089#discussion_r511499384,511499384,src/amount.h
practicalswift,2020-10-24 22:13:42,@luke-jr What is the valid fee delta range in your opinion?,https://github.com/bitcoin/bitcoin/pull/20089#discussion_r511519957,511519957,src/amount.h
practicalswift,2020-11-07 19:54:57,I'm not sure this is actionable unless we can establish what the valid range should be.,https://github.com/bitcoin/bitcoin/pull/20089#discussion_r519212383,519212383,src/amount.h
MarcoFalke,2021-01-14 09:21:20,"This is not a feerate, but an absolute amount in satoshis",https://github.com/bitcoin/bitcoin/pull/20089#discussion_r557249710,557249710,src/amount.h
