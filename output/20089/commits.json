[
  {
    "sha": "3f30ab8a7714a9c1d341624739d0a161108c479e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjMwYWI4YTc3MTRhOWMxZDM0MTYyNDczOWQwYTE2MTEwOGM0Nzll",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-10-05T18:19:08Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-11T21:24:52Z"
      },
      "message": "validation: Increase robustness when loading malformed mempool.dat files",
      "tree": {
        "sha": "bb2e6ce401ed8e1518dd0c8997e4d45dd908f348",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb2e6ce401ed8e1518dd0c8997e4d45dd908f348"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f30ab8a7714a9c1d341624739d0a161108c479e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f30ab8a7714a9c1d341624739d0a161108c479e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f30ab8a7714a9c1d341624739d0a161108c479e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f30ab8a7714a9c1d341624739d0a161108c479e/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d9f5132736f34f31f6e7d009015f917c9dcfec00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9f5132736f34f31f6e7d009015f917c9dcfec00",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d9f5132736f34f31f6e7d009015f917c9dcfec00"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 13,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d08cc1661c74f9126b094ce576b1cae218aed89b",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f30ab8a7714a9c1d341624739d0a161108c479e/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f30ab8a7714a9c1d341624739d0a161108c479e/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=3f30ab8a7714a9c1d341624739d0a161108c479e",
        "patch": "@@ -25,4 +25,12 @@ static const CAmount COIN = 100000000;\n static const CAmount MAX_MONEY = 21000000 * COIN;\n inline bool MoneyRange(const CAmount& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n \n+/** Check if an amount is a valid fee delta.\n+ *\n+ * Like MoneyRange(...), but allows for negative money amounts.\n+ */\n+inline bool FeeDeltaRange(const CAmount fee_delta) {\n+    return fee_delta >= -MAX_MONEY && fee_delta <= MAX_MONEY;\n+}\n+\n #endif //  BITCOIN_AMOUNT_H"
      },
      {
        "sha": "beee6f2cf822ba7d11dc3332c4677740e91950ba",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f30ab8a7714a9c1d341624739d0a161108c479e/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f30ab8a7714a9c1d341624739d0a161108c479e/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3f30ab8a7714a9c1d341624739d0a161108c479e",
        "patch": "@@ -5080,11 +5080,11 @@ bool LoadMempool(CTxMemPool& pool)\n             file >> nFeeDelta;\n \n             CAmount amountdelta = nFeeDelta;\n-            if (amountdelta) {\n+            if (amountdelta && FeeDeltaRange(amountdelta)) {\n                 pool.PrioritiseTransaction(tx->GetHash(), amountdelta);\n             }\n             TxValidationState state;\n-            if (nTime + nExpiryTimeout > nNow) {\n+            if (nTime > nNow - nExpiryTimeout) {\n                 LOCK(cs_main);\n                 AcceptToMemoryPoolWithTime(chainparams, pool, state, tx, nTime,\n                                            nullptr /* plTxnReplaced */, false /* bypass_limits */,\n@@ -5112,7 +5112,9 @@ bool LoadMempool(CTxMemPool& pool)\n         file >> mapDeltas;\n \n         for (const auto& i : mapDeltas) {\n-            pool.PrioritiseTransaction(i.first, i.second);\n+            if (FeeDeltaRange(i.second)) {\n+                pool.PrioritiseTransaction(i.first, i.second);\n+            }\n         }\n \n         // TODO: remove this try except in v0.22"
      }
    ]
  },
  {
    "sha": "8953ff96581d51a1e05c467f39c68f06e40a4c89",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTUzZmY5NjU4MWQ1MWExZTA1YzQ2N2YzOWM2OGYwNmU0MGE0Yzg5",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-10-12T06:28:51Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-11T21:24:52Z"
      },
      "message": "Print log message in case of a corrupt mempool.dat file",
      "tree": {
        "sha": "30c671ebc843ef0486cb6fea253a2f26823610d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/30c671ebc843ef0486cb6fea253a2f26823610d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8953ff96581d51a1e05c467f39c68f06e40a4c89",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8953ff96581d51a1e05c467f39c68f06e40a4c89",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8953ff96581d51a1e05c467f39c68f06e40a4c89",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8953ff96581d51a1e05c467f39c68f06e40a4c89/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3f30ab8a7714a9c1d341624739d0a161108c479e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f30ab8a7714a9c1d341624739d0a161108c479e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3f30ab8a7714a9c1d341624739d0a161108c479e"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "03c21a7e84f61c8e23b15640c77c926e075fc3e8",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8953ff96581d51a1e05c467f39c68f06e40a4c89/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8953ff96581d51a1e05c467f39c68f06e40a4c89/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=8953ff96581d51a1e05c467f39c68f06e40a4c89",
        "patch": "@@ -5080,8 +5080,12 @@ bool LoadMempool(CTxMemPool& pool)\n             file >> nFeeDelta;\n \n             CAmount amountdelta = nFeeDelta;\n-            if (amountdelta && FeeDeltaRange(amountdelta)) {\n-                pool.PrioritiseTransaction(tx->GetHash(), amountdelta);\n+            if (amountdelta) {\n+                if (FeeDeltaRange(amountdelta)) {\n+                    pool.PrioritiseTransaction(tx->GetHash(), amountdelta);\n+                } else {\n+                    LogPrintf(\"Invalid fee delta encountered (corrupt mempool.dat file?). Skipping PrioritiseTransaction(...).\\n\");\n+                }\n             }\n             TxValidationState state;\n             if (nTime > nNow - nExpiryTimeout) {\n@@ -5114,6 +5118,8 @@ bool LoadMempool(CTxMemPool& pool)\n         for (const auto& i : mapDeltas) {\n             if (FeeDeltaRange(i.second)) {\n                 pool.PrioritiseTransaction(i.first, i.second);\n+            } else {\n+                LogPrintf(\"Invalid fee delta encountered (corrupt mempool.dat file?). Skipping PrioritiseTransaction(...).\\n\");\n             }\n         }\n "
      }
    ]
  }
]