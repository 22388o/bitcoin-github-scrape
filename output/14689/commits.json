[
  {
    "sha": "6b8d86ddb803d50d8608d95f7e8f791511dec8b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YjhkODZkZGI4MDNkNTBkODYwOGQ5NWY3ZThmNzkxNTExZGVjOGI5",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-11-08T15:08:46Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-11-08T15:38:43Z"
      },
      "message": "Require a public key to be retrieved when signing a P2PKH input\n\nIf we do not have the public key for a P2PKH input, we should not\ncontinue to attempt to sign for it.",
      "tree": {
        "sha": "33a41f992ee78992960871af6b010dda8345cc10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33a41f992ee78992960871af6b010dda8345cc10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b8d86ddb803d50d8608d95f7e8f791511dec8b9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b8d86ddb803d50d8608d95f7e8f791511dec8b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6b8d86ddb803d50d8608d95f7e8f791511dec8b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b8d86ddb803d50d8608d95f7e8f791511dec8b9/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "11e1ac3ae08535cefbd8235a8deb6cd100bcb2b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11e1ac3ae08535cefbd8235a8deb6cd100bcb2b1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/11e1ac3ae08535cefbd8235a8deb6cd100bcb2b1"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "68ceea7e6f287fd69b35481d6b183ac10b5a4fb0",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b8d86ddb803d50d8608d95f7e8f791511dec8b9/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b8d86ddb803d50d8608d95f7e8f791511dec8b9/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=6b8d86ddb803d50d8608d95f7e8f791511dec8b9",
        "patch": "@@ -123,7 +123,7 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n     case TX_PUBKEYHASH: {\n         CKeyID keyID = CKeyID(uint160(vSolutions[0]));\n         CPubKey pubkey;\n-        GetPubKey(provider, sigdata, keyID, pubkey);\n+        if (!GetPubKey(provider, sigdata, keyID, pubkey)) return false;\n         if (!CreateSig(creator, sigdata, provider, sig, pubkey, scriptPubKey, sigversion)) return false;\n         ret.push_back(std::move(sig));\n         ret.push_back(ToByteVector(pubkey));"
      },
      {
        "sha": "30f84cff3c150ff33e31fa044058860a062e5896",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b8d86ddb803d50d8608d95f7e8f791511dec8b9/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b8d86ddb803d50d8608d95f7e8f791511dec8b9/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=6b8d86ddb803d50d8608d95f7e8f791511dec8b9",
        "patch": "@@ -269,6 +269,10 @@ def run_test(self):\n \n         self.test_utxo_conversion()\n \n+        # Test that psbts with p2pkh outputs are created properly\n+        p2pkh = self.nodes[0].getnewaddress(address_type='legacy')\n+        psbt = self.nodes[1].walletcreatefundedpsbt([], [{p2pkh : 1}], 0, {\"includeWatching\" : True}, True)\n+        self.nodes[0].decodepsbt(psbt['psbt'])\n \n if __name__ == '__main__':\n     PSBTTest().main()"
      }
    ]
  }
]