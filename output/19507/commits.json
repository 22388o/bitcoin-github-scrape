[
  {
    "sha": "e70512a83c69bc85e96b08ade725594eda3e230f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNzA1MTJhODNjNjliYzg1ZTk2YjA4YWRlNzI1NTk0ZWRhM2UyMzBm",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-13T17:38:44Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-13T18:18:01Z"
      },
      "message": "Make ordering of zmq consumption irrelevant to functional test",
      "tree": {
        "sha": "56624fb8da2a2a299eb9127829747eceff8ce272",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56624fb8da2a2a299eb9127829747eceff8ce272"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e70512a83c69bc85e96b08ade725594eda3e230f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e70512a83c69bc85e96b08ade725594eda3e230f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e70512a83c69bc85e96b08ade725594eda3e230f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e70512a83c69bc85e96b08ade725594eda3e230f/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "37485baa275147470aa605e30654a8e42b3f9532",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37485baa275147470aa605e30654a8e42b3f9532",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/37485baa275147470aa605e30654a8e42b3f9532"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 18,
      "deletions": 14
    },
    "files": [
      {
        "sha": "863173b0a49644ca8c3023930a76341a204f16a8",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 18,
        "deletions": 14,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e70512a83c69bc85e96b08ade725594eda3e230f/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e70512a83c69bc85e96b08ade725594eda3e230f/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=e70512a83c69bc85e96b08ade725594eda3e230f",
        "patch": "@@ -54,28 +54,31 @@ def run_test(self):\n             self.ctx.destroy(linger=None)\n \n     def test_basic(self):\n-        # All messages are received in the same socket which means\n-        # that this test fails if the publishing order changes.\n-        # Note that the publishing order is not defined in the documentation and\n-        # is subject to change.\n         import zmq\n \n         # Invalid zmq arguments don't take down the node, see #17185.\n         self.restart_node(0, [\"-zmqpubrawtx=foo\", \"-zmqpubhashtx=bar\"])\n \n         address = 'tcp://127.0.0.1:28332'\n-        socket = self.ctx.socket(zmq.SUB)\n-        socket.set(zmq.RCVTIMEO, 60000)\n+        sockets = []\n+        subs = []\n+        services = [b\"hashblock\", b\"hashtx\", b\"rawblock\", b\"rawtx\"]\n+        for service in services:\n+            sockets.append(self.ctx.socket(zmq.SUB))\n+            sockets[-1].set(zmq.RCVTIMEO, 60000)\n+            subs.append(ZMQSubscriber(sockets[-1], service))\n \n         # Subscribe to all available topics.\n-        hashblock = ZMQSubscriber(socket, b\"hashblock\")\n-        hashtx = ZMQSubscriber(socket, b\"hashtx\")\n-        rawblock = ZMQSubscriber(socket, b\"rawblock\")\n-        rawtx = ZMQSubscriber(socket, b\"rawtx\")\n+        hashblock = subs[0]\n+        hashtx = subs[1]\n+        rawblock = subs[2]\n+        rawtx = subs[3]\n \n         self.restart_node(0, [\"-zmqpub%s=%s\" % (sub.topic.decode(), address) for sub in [hashblock, hashtx, rawblock, rawtx]])\n         connect_nodes(self.nodes[0], 1)\n-        socket.connect(address)\n+        for socket in sockets:\n+            socket.connect(address)\n+\n         # Relax so that the subscriber is ready before publishing zmq messages\n         sleep(0.2)\n \n@@ -96,15 +99,16 @@ def test_basic(self):\n             tx.calc_sha256()\n             assert_equal(tx.hash, txid.hex())\n \n+            # Should receive the generated raw block.\n+            block = rawblock.receive()\n+            assert_equal(genhashes[x], hash256_reversed(block[:80]).hex())\n+\n             # Should receive the generated block hash.\n             hash = hashblock.receive().hex()\n             assert_equal(genhashes[x], hash)\n             # The block should only have the coinbase txid.\n             assert_equal([txid.hex()], self.nodes[1].getblock(hash)[\"tx\"])\n \n-            # Should receive the generated raw block.\n-            block = rawblock.receive()\n-            assert_equal(genhashes[x], hash256_reversed(block[:80]).hex())\n \n         if self.is_wallet_compiled():\n             self.log.info(\"Wait for tx from second node\")"
      }
    ]
  },
  {
    "sha": "2399a0600ca9c4b676fa2f97520b8ecc44642246",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzk5YTA2MDBjYTljNGI2NzZmYTJmOTc1MjBiOGVjYzQ0NjQyMjQ2",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-13T17:43:13Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-13T18:18:01Z"
      },
      "message": "Add test case for mempool->block zmq notification",
      "tree": {
        "sha": "e4f155e628c8acb9981541c3d4c92e869c46120f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4f155e628c8acb9981541c3d4c92e869c46120f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2399a0600ca9c4b676fa2f97520b8ecc44642246",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2399a0600ca9c4b676fa2f97520b8ecc44642246",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2399a0600ca9c4b676fa2f97520b8ecc44642246",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2399a0600ca9c4b676fa2f97520b8ecc44642246/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e70512a83c69bc85e96b08ade725594eda3e230f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e70512a83c69bc85e96b08ade725594eda3e230f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e70512a83c69bc85e96b08ade725594eda3e230f"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "872a1bb718ba4dab10d862e438c682bba8deaae7",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2399a0600ca9c4b676fa2f97520b8ecc44642246/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2399a0600ca9c4b676fa2f97520b8ecc44642246/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=2399a0600ca9c4b676fa2f97520b8ecc44642246",
        "patch": "@@ -123,6 +123,13 @@ def test_basic(self):\n             hex = rawtx.receive()\n             assert_equal(payment_txid, hash256_reversed(hex).hex())\n \n+            # Mining the block with this tx should result in second notification\n+            # after coinbase tx notification\n+            self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+            hashtx.receive()\n+            txid = hashtx.receive()\n+            assert_equal(payment_txid, txid.hex())\n+\n \n         self.log.info(\"Test the getzmqnotifications RPC\")\n         assert_equal(self.nodes[0].getzmqnotifications(), ["
      }
    ]
  },
  {
    "sha": "a0f4f9c983e57cc97ecbc56d0177eaf1854c842c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMGY0ZjljOTgzZTU3Y2M5N2VjYmM1NmQwMTc3ZWFmMTg1NGM4NDJj",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-13T17:59:34Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-13T18:18:01Z"
      },
      "message": "Add zmq test for transaction pub during reorg",
      "tree": {
        "sha": "ae8ff1f6e774bd0108ec3111336b5098b4f3df1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae8ff1f6e774bd0108ec3111336b5098b4f3df1f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2399a0600ca9c4b676fa2f97520b8ecc44642246",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2399a0600ca9c4b676fa2f97520b8ecc44642246",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2399a0600ca9c4b676fa2f97520b8ecc44642246"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 34,
      "deletions": 7
    },
    "files": [
      {
        "sha": "82ed1d731db859c86c682c8f6cb9fdfa1c085c87",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 34,
        "deletions": 7,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=a0f4f9c983e57cc97ecbc56d0177eaf1854c842c",
        "patch": "@@ -144,28 +144,55 @@ def test_basic(self):\n     def test_reorg(self):\n         import zmq\n         address = 'tcp://127.0.0.1:28333'\n-        socket = self.ctx.socket(zmq.SUB)\n-        socket.set(zmq.RCVTIMEO, 60000)\n-        hashblock = ZMQSubscriber(socket, b'hashblock')\n+\n+        services = [b\"hashblock\", b\"hashtx\"]\n+        sockets = []\n+        subs = []\n+        for service in services:\n+            sockets.append(self.ctx.socket(zmq.SUB))\n+            # 2 second timeout to check end of notifications\n+            sockets[-1].set(zmq.RCVTIMEO, 2000)\n+            subs.append(ZMQSubscriber(sockets[-1], service))\n+\n+        # Subscribe to all available topics.\n+        hashblock = subs[0]\n+        hashtx = subs[1]\n \n         # Should only notify the tip if a reorg occurs\n-        self.restart_node(0, ['-zmqpub%s=%s' % (hashblock.topic.decode(), address)])\n-        socket.connect(address)\n+        self.restart_node(0, [\"-zmqpub%s=%s\" % (sub.topic.decode(), address) for sub in [hashblock, hashtx]])\n+        for socket in sockets:\n+            socket.connect(address)\n         # Relax so that the subscriber is ready before publishing zmq messages\n         sleep(0.2)\n \n         # Generate 1 block in nodes[0] and receive all notifications\n-        self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+        disconnect_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n+        disconnect_cb = self.nodes[0].getblock(disconnect_block)[\"tx\"][0]\n         assert_equal(self.nodes[0].getbestblockhash(), hashblock.receive().hex())\n+        hashtx.receive() # consume, already tested\n \n         # Generate 2 blocks in nodes[1]\n-        self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_UNSPENDABLE)\n+        connect_blocks = self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_UNSPENDABLE)\n \n         # nodes[0] will reorg chain after connecting back nodes[1]\n         connect_nodes(self.nodes[0], 1)\n+        self.sync_all()\n \n         # Should receive nodes[1] tip\n         assert_equal(self.nodes[1].getbestblockhash(), hashblock.receive().hex())\n \n+        # During reorg, should only receive the last coinbase tx from tip\n+        assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[1])[\"tx\"][0])\n+\n+        # But if we do a simple invalidate we announce the disconnected coinbase\n+        self.nodes[0].invalidateblock(connect_blocks[1])\n+        assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[1])[\"tx\"][0])\n+        # And not the current tip\n+        try:\n+            hashtx.receive()\n+            raise Exception(\"Should have failed\")\n+        except zmq.error.Again:\n+            pass\n+\n if __name__ == '__main__':\n     ZMQTest().main()"
      }
    ]
  },
  {
    "sha": "7356292e1d7a44da8a2bd31c02c58d550bf38009",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MzU2MjkyZTFkN2E0NGRhOGEyYmQzMWMwMmM1OGQ1NTBiZjM4MDA5",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-13T18:43:54Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2020-07-14T14:14:11Z"
      },
      "message": "Have zmq reorg test cover mempool txns",
      "tree": {
        "sha": "0671de5964c2732a5a83dc1972fe01f06e42b250",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0671de5964c2732a5a83dc1972fe01f06e42b250"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7356292e1d7a44da8a2bd31c02c58d550bf38009",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7356292e1d7a44da8a2bd31c02c58d550bf38009",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7356292e1d7a44da8a2bd31c02c58d550bf38009",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7356292e1d7a44da8a2bd31c02c58d550bf38009/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a0f4f9c983e57cc97ecbc56d0177eaf1854c842c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a0f4f9c983e57cc97ecbc56d0177eaf1854c842c"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 23,
      "deletions": 13
    },
    "files": [
      {
        "sha": "ef4780cacb40c2aeb0584fd224584a564be1db42",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 23,
        "deletions": 13,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7356292e1d7a44da8a2bd31c02c58d550bf38009/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7356292e1d7a44da8a2bd31c02c58d550bf38009/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=7356292e1d7a44da8a2bd31c02c58d550bf38009",
        "patch": "@@ -142,6 +142,10 @@ def test_basic(self):\n         assert_equal(self.nodes[1].getzmqnotifications(), [])\n \n     def test_reorg(self):\n+        if not self.is_wallet_compiled():\n+            self.log.info(\"Skipping reorg test because wallet is disabled\")\n+            return\n+\n         import zmq\n         address = 'tcp://127.0.0.1:28333'\n \n@@ -165,34 +169,40 @@ def test_reorg(self):\n         # Relax so that the subscriber is ready before publishing zmq messages\n         sleep(0.2)\n \n-        # Generate 1 block in nodes[0] and receive all notifications\n+        # Generate 1 block in nodes[0] with 1 mempool tx and receive all notifications\n+        payment_txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 1.0)\n         disconnect_block = self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n         disconnect_cb = self.nodes[0].getblock(disconnect_block)[\"tx\"][0]\n         assert_equal(self.nodes[0].getbestblockhash(), hashblock.receive().hex())\n-        hashtx.receive() # consume, already tested\n+        assert_equal(hashtx.receive().hex(), payment_txid)\n+        assert_equal(hashtx.receive().hex(), disconnect_cb)\n \n         # Generate 2 blocks in nodes[1]\n         connect_blocks = self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_UNSPENDABLE)\n \n         # nodes[0] will reorg chain after connecting back nodes[1]\n         connect_nodes(self.nodes[0], 1)\n-        self.sync_all()\n+        self.sync_blocks() # tx in mempool valid but not advertised\n \n         # Should receive nodes[1] tip\n         assert_equal(self.nodes[1].getbestblockhash(), hashblock.receive().hex())\n \n-        # During reorg, should only receive the last coinbase tx from tip\n-        assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[1])[\"tx\"][0])\n-\n-        # But if we do a simple invalidate we announce the disconnected coinbase\n+        # During reorg:\n+        # Get old payment transaction notification from disconnect and disconnected cb\n+        assert_equal(hashtx.receive().hex(), payment_txid)\n+        assert_equal(hashtx.receive().hex(), disconnect_cb)\n+        # And the payment transaction again due to mempool entry\n+        assert_equal(hashtx.receive().hex(), payment_txid)\n+        assert_equal(hashtx.receive().hex(), payment_txid)\n+        # And the new connected coinbases\n+        for i in [0, 1]:\n+            assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[i])[\"tx\"][0])\n+\n+        # If we do a simple invalidate we announce the disconnected coinbase\n         self.nodes[0].invalidateblock(connect_blocks[1])\n         assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[1])[\"tx\"][0])\n-        # And not the current tip\n-        try:\n-            hashtx.receive()\n-            raise Exception(\"Should have failed\")\n-        except zmq.error.Again:\n-            pass\n+        # And the current tip\n+        assert_equal(hashtx.receive().hex(), self.nodes[1].getblock(connect_blocks[0])[\"tx\"][0])\n \n if __name__ == '__main__':\n     ZMQTest().main()"
      }
    ]
  }
]