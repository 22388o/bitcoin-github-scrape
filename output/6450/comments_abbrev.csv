petertodd,2015-07-17T06:56:43Z,"I've noticed this issue too on my full-RBF nodes, doubly so on the full-RBF nodes that have a higher min-relay fee set. In some cases that resulted in huge amounts of bandwidth being wasted, as those nodes are otherwise well connected with nearly the full number of peers. So strong ACK on the intent.\n\nI think we could make the table quite a bit bigger though. Each entry is about 40 bytes, so 200",https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122198540,122198540,
petertodd,2015-07-17T07:30:27Z,One more idea:  How about discarding the entire recent rejects map every time the best block hash changes? I suspect the most likely scenario where a previously rejected transaction is now again valid will probably be validity changes due to new/reorged blocks. For instance the main reason why my #6216 pull-req causes no issues w/ relaying is that if a node receives a transaction that it rejects d,https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122202348,122202348,
petertodd,2015-07-17T07:32:47Z,"(or for that matter, a simple bloom filter with a bit randomly cleared on each insertion to keep the fp rate steady)\n",https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122203015,122203015,
petertodd,2015-07-17T10:56:30Z,Created #6452 with a bloom filter instead of limitedmap. Thoughts?\n,https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122244811,122244811,
morcos,2015-07-17T12:09:00Z,"@ajweiss had suggested a bloom filter when I created this, but I was concerned about false positives.  I hadn't thought it through that much.  I'm not tied to a specific approach.  I was looking at this less as a DoS attack prevention and more as a response to the unfortunate p2p feedback loop of different acceptance policies, but I guess you're right its important to make sure it still works unde",https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122257556,122257556,
petertodd,2015-07-17T12:15:15Z,"Yeah, it's quite cheap to get extremely low fp rates - my bloom filter approach has a one in a million FP rate. The (bloom filter) code also already exists and is well tested, as the netaddr stuff uses it.\n",https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122258331,122258331,
laanwj,2015-07-18T08:08:48Z,"Concept ACK. \nUsing a bloom filter is slightly more risky, but if we make sure that at least every node uses an (unpredictable) tweak the impact of false positives should be minimized.\n",https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122510832,122510832,
morcos,2015-07-19T21:25:32Z,Closing in favor of #6452 \n,https://github.com/bitcoin/bitcoin/pull/6450#issuecomment-122707915,122707915,
petertodd,2015-07-17T09:08:14Z,"Actually, this will relay invalid transactions from whitelisted peers as well.\n",https://github.com/bitcoin/bitcoin/pull/6450#discussion_r34873327,34873327,src/main.cpp
