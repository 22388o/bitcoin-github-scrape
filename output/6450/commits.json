[
  {
    "sha": "d7b2800e0dc3399c2d4e62a94793f3afd67e6da9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkN2IyODAwZTBkYzMzOTljMmQ0ZTYyYTk0NzkzZjNhZmQ2N2U2ZGE5",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-07-15T19:12:48Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-07-15T19:12:48Z"
      },
      "message": "Keep track of recently rejected transactions\n\nNodes can have divergent policies on which transactions they will accept and relay.  This can cause you to repeatedly request and reject the same tx after its inved to you from various peers which have accepted it.  This commit puts a 15 min timer on rerequesting the same tx hash if you just rejected it.",
      "tree": {
        "sha": "598c18c79cd63f5523991c2a423424c623915402",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/598c18c79cd63f5523991c2a423424c623915402"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7b2800e0dc3399c2d4e62a94793f3afd67e6da9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7b2800e0dc3399c2d4e62a94793f3afd67e6da9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d7b2800e0dc3399c2d4e62a94793f3afd67e6da9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7b2800e0dc3399c2d4e62a94793f3afd67e6da9/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed789ceade71f19f04340a4041d7d3ef43c44086",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed789ceade71f19f04340a4041d7d3ef43c44086",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed789ceade71f19f04340a4041d7d3ef43c44086"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 29,
      "deletions": 7
    },
    "files": [
      {
        "sha": "5da52d54170bbfea81dcbdfcb50269258faf7cb1",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 7,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7b2800e0dc3399c2d4e62a94793f3afd67e6da9/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7b2800e0dc3399c2d4e62a94793f3afd67e6da9/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=d7b2800e0dc3399c2d4e62a94793f3afd67e6da9",
        "patch": "@@ -154,6 +154,12 @@ namespace {\n      */\n     map<uint256, NodeId> mapBlockSource;\n \n+    /**\n+     * Transactions that were recently rejected by AcceptToMemoryPool. These are not rerequested\n+     * if they are inv'ed to us again in the next 15 mins. Proteced by cs_main.\n+     */\n+    limitedmap<uint256, int64_t> mapRecentRejects(MAX_RECENT_REJECTS);\n+\n     /** Blocks that are in flight, and that are in the queue to be downloaded. Protected by cs_main. */\n     struct QueuedBlock {\n         uint256 hash;\n@@ -3658,8 +3664,17 @@ bool static AlreadyHave(const CInv& inv)\n         {\n             bool txInMap = false;\n             txInMap = mempool.exists(inv.hash);\n-            return txInMap || mapOrphanTransactions.count(inv.hash) ||\n-                pcoinsTip->HaveCoins(inv.hash);\n+\n+            bool txRecentlyRejected = false;\n+            limitedmap<uint256, int64_t>::const_iterator it = mapRecentRejects.find(inv.hash);\n+            if (it != mapRecentRejects.end()) {\n+                // If rejected in last 15 mins, don't need again\n+                if (it->second + 15*60 > GetTime())\n+                    txRecentlyRejected = true;\n+            }\n+\n+            return txInMap || txRecentlyRejected ||\n+                mapOrphanTransactions.count(inv.hash) || pcoinsTip->HaveCoins(inv.hash);\n         }\n     case MSG_BLOCK:\n         return mapBlockIndex.count(inv.hash);\n@@ -4259,6 +4274,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                         // Probably non-standard or insufficient fee/priority\n                         LogPrint(\"mempool\", \"   removed orphan tx %s\\n\", orphanHash.ToString());\n                         vEraseQueue.push_back(orphanHash);\n+                        mapRecentRejects.insert(make_pair(orphanHash, GetTime()));\n                     }\n                     mempool.check(pcoinsTip);\n                 }\n@@ -4276,11 +4292,15 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             unsigned int nEvicted = LimitOrphanTxSize(nMaxOrphanTx);\n             if (nEvicted > 0)\n                 LogPrint(\"mempool\", \"mapOrphan overflow, removed %u tx\\n\", nEvicted);\n-        } else if (pfrom->fWhitelisted) {\n-            // Always relay transactions received from whitelisted peers, even\n-            // if they are already in the mempool (allowing the node to function\n-            // as a gateway for nodes hidden behind it).\n-            RelayTransaction(tx);\n+        } else {\n+            if (!mempool.exists(tx.GetHash()))\n+                mapRecentRejects.insert(make_pair(tx.GetHash(), GetTime()));\n+            if (pfrom->fWhitelisted) {\n+                // Always relay transactions received from whitelisted peers, even\n+                // if they are already in the mempool (allowing the node to function\n+                // as a gateway for nodes hidden behind it).\n+                RelayTransaction(tx);\n+            }\n         }\n         int nDoS = 0;\n         if (state.IsInvalid(nDoS))"
      },
      {
        "sha": "9d4d4bc99f899ab3f0679f57dda86dad3946dd1a",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7b2800e0dc3399c2d4e62a94793f3afd67e6da9/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7b2800e0dc3399c2d4e62a94793f3afd67e6da9/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=d7b2800e0dc3399c2d4e62a94793f3afd67e6da9",
        "patch": "@@ -50,6 +50,8 @@ struct CNodeStateStats;\n static const bool DEFAULT_ALERTS = true;\n /** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n+/** The maximum number of recently rejected hashes kept in memory */\n+static const unsigned int MAX_RECENT_REJECTS = 2000;\n /** The maximum size of a blk?????.dat file (since 0.8) */\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n /** The pre-allocation chunk size for blk?????.dat files (since 0.8) */"
      }
    ]
  }
]