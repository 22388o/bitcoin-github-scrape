[
  {
    "sha": "fa7435d5d649cb9fa6d61f4674c6ec1583e0c6a7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTc0MzVkNWQ2NDljYjlmYTZkNjFmNDY3NGM2ZWMxNTgzZTBjNmE3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-08-27T15:54:12Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-08-27T16:13:33Z"
      },
      "message": "bench: Fix thread sanitizer issue in AssembleBlock benchmark",
      "tree": {
        "sha": "ca3e50eddf55682c5185b18422376639382c93a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca3e50eddf55682c5185b18422376639382c93a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa7435d5d649cb9fa6d61f4674c6ec1583e0c6a7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJbhCMtAAoJEM4rdWl+aaVIOcQMAK8MpClc0A/XClgbWXj/Thzw\n2cZW0Rl2B5zZcCVJ5CbhSsROKFCGDA2U4GPZPAuQmp9Qcos+6UGDjqjpei13cVsC\nEcA8dRx45fAWmpr6x0Ba6YUJKE5VGgN0q134ucl+ImmXztcdYA8Gc6yROKqlssex\n0lL4neR+DIqwvnN9Xj18cxTyAJ7noaAO0RbwUfvVfR59KA9/q24gBxqjFHEuTarU\niKjn/SnFEcNnMyKSWVFPKkOPkUkt9s5XbTm1vwYA8IUbYV/5+72EdqJWzIxwu7dS\nTsM7RIJ/3crsA6yvigKffMowe68muctexpxTG/LSVPfmwDQ1MU2M38GN7Ots4NWx\ng41K5LLAclJHAyhXk12D++dfBjJxrM9YwPvaYfRCrR26+a4sEYWQnfyrdoQJRF3S\nDDQt14KDF4COSxHqkKAAzPfwimGvbAWE4VlocftP0Fqecxtc1Z82Uv2P3ff5dwu0\nOHbD7tY6w/b7VsLSd+VAueg+zDmH5WUmWUG3myV+lA==\n=C9V+\n-----END PGP SIGNATURE-----",
        "payload": "tree ca3e50eddf55682c5185b18422376639382c93a5\nparent 427253cf7e19ed9ef86b45457de41e345676c88e\nauthor MarcoFalke <falke.marco@gmail.com> 1535385252 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1535386413 -0400\n\nbench: Fix thread sanitizer issue in AssembleBlock benchmark\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7435d5d649cb9fa6d61f4674c6ec1583e0c6a7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7435d5d649cb9fa6d61f4674c6ec1583e0c6a7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7435d5d649cb9fa6d61f4674c6ec1583e0c6a7/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "427253cf7e19ed9ef86b45457de41e345676c88e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/427253cf7e19ed9ef86b45457de41e345676c88e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/427253cf7e19ed9ef86b45457de41e345676c88e"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "36a6965fb937603613cd432a16b0fe50038f8e0b",
        "filename": "src/bench/block_assemble.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7435d5d649cb9fa6d61f4674c6ec1583e0c6a7/src/bench/block_assemble.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7435d5d649cb9fa6d61f4674c6ec1583e0c6a7/src/bench/block_assemble.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/block_assemble.cpp?ref=fa7435d5d649cb9fa6d61f4674c6ec1583e0c6a7",
        "patch": "@@ -36,7 +36,7 @@ static std::shared_ptr<CBlock> PrepareBlock(const CScript& coinbase_scriptPubKey\n }\n \n \n-static CTxIn MineBlock(const CScript& coinbase_scriptPubKey)\n+static std::shared_ptr<CBlock> MineBlock(const CScript& coinbase_scriptPubKey)\n {\n     auto block = PrepareBlock(coinbase_scriptPubKey);\n \n@@ -48,7 +48,7 @@ static CTxIn MineBlock(const CScript& coinbase_scriptPubKey)\n     bool processed{ProcessNewBlock(Params(), block, true, nullptr)};\n     assert(processed);\n \n-    return CTxIn{block->vtx[0]->GetHash(), 0};\n+    return block;\n }\n \n \n@@ -72,10 +72,12 @@ static void AssembleBlock(benchmark::State& state)\n     boost::thread_group thread_group;\n     CScheduler scheduler;\n     {\n+        LOCK(cs_main);\n         ::pblocktree.reset(new CBlockTreeDB(1 << 20, true));\n         ::pcoinsdbview.reset(new CCoinsViewDB(1 << 23, true));\n         ::pcoinsTip.reset(new CCoinsViewCache(pcoinsdbview.get()));\n-\n+    }\n+    {\n         const CChainParams& chainparams = Params();\n         thread_group.create_thread(boost::bind(&CScheduler::serviceQueue, &scheduler));\n         GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n@@ -89,10 +91,12 @@ static void AssembleBlock(benchmark::State& state)\n \n     // Collect some loose transactions that spend the coinbases of our mined blocks\n     constexpr size_t NUM_BLOCKS{200};\n+    std::array<std::shared_ptr<CBlock>, NUM_BLOCKS> blocks;\n     std::array<CTransactionRef, NUM_BLOCKS - COINBASE_MATURITY + 1> txs;\n     for (size_t b{0}; b < NUM_BLOCKS; ++b) {\n         CMutableTransaction tx;\n-        tx.vin.push_back(MineBlock(SCRIPT_PUB));\n+        blocks.at(b) = MineBlock(SCRIPT_PUB);\n+        tx.vin.emplace_back(blocks.at(b)->vtx[0]->GetHash(), 0);\n         tx.vin.back().scriptWitness = witness;\n         tx.vout.emplace_back(1337, SCRIPT_PUB);\n         if (NUM_BLOCKS - b >= COINBASE_MATURITY)"
      }
    ]
  }
]