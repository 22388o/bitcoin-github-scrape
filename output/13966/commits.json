[
  {
    "sha": "fe1ff5026bace9b43ac01c14a26ed0dd75ccc6f7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTFmZjUwMjZiYWNlOWI0M2FjMDFjMTRhMjZlZDBkZDc1Y2NjNmY3",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-08-14T10:50:39Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-08-27T19:56:07Z"
      },
      "message": "Hide spendable label if priveate key is disabled",
      "tree": {
        "sha": "73f26bebcc1be7299edb086b1e8019c2b00b6a0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/73f26bebcc1be7299edb086b1e8019c2b00b6a0b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe1ff5026bace9b43ac01c14a26ed0dd75ccc6f7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe1ff5026bace9b43ac01c14a26ed0dd75ccc6f7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe1ff5026bace9b43ac01c14a26ed0dd75ccc6f7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe1ff5026bace9b43ac01c14a26ed0dd75ccc6f7/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0df9b0aed23127acd12d9ed6a008c12be47b1cd9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0df9b0aed23127acd12d9ed6a008c12be47b1cd9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0df9b0aed23127acd12d9ed6a008c12be47b1cd9"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 20,
      "deletions": 12
    },
    "files": [
      {
        "sha": "bec79335e787b49fadc8fa733e4d6ef7de102501",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 12,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe1ff5026bace9b43ac01c14a26ed0dd75ccc6f7/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe1ff5026bace9b43ac01c14a26ed0dd75ccc6f7/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=fe1ff5026bace9b43ac01c14a26ed0dd75ccc6f7",
        "patch": "@@ -161,15 +161,21 @@ void OverviewPage::setBalance(const interfaces::WalletBalances& balances)\n {\n     int unit = walletModel->getOptionsModel()->getDisplayUnit();\n     m_balances = balances;\n-    ui->labelBalance->setText(BitcoinUnits::formatWithUnit(unit, balances.balance, false, BitcoinUnits::separatorAlways));\n-    ui->labelUnconfirmed->setText(BitcoinUnits::formatWithUnit(unit, balances.unconfirmed_balance, false, BitcoinUnits::separatorAlways));\n-    ui->labelImmature->setText(BitcoinUnits::formatWithUnit(unit, balances.immature_balance, false, BitcoinUnits::separatorAlways));\n-    ui->labelTotal->setText(BitcoinUnits::formatWithUnit(unit, balances.balance + balances.unconfirmed_balance + balances.immature_balance, false, BitcoinUnits::separatorAlways));\n-    ui->labelWatchAvailable->setText(BitcoinUnits::formatWithUnit(unit, balances.watch_only_balance, false, BitcoinUnits::separatorAlways));\n-    ui->labelWatchPending->setText(BitcoinUnits::formatWithUnit(unit, balances.unconfirmed_watch_only_balance, false, BitcoinUnits::separatorAlways));\n-    ui->labelWatchImmature->setText(BitcoinUnits::formatWithUnit(unit, balances.immature_watch_only_balance, false, BitcoinUnits::separatorAlways));\n-    ui->labelWatchTotal->setText(BitcoinUnits::formatWithUnit(unit, balances.watch_only_balance + balances.unconfirmed_watch_only_balance + balances.immature_watch_only_balance, false, BitcoinUnits::separatorAlways));\n-\n+    if (walletModel->privateKeysDisabled()) {\n+        ui->labelBalance->setText(BitcoinUnits::formatWithUnit(unit, balances.watch_only_balance, false, BitcoinUnits::separatorAlways));\n+        ui->labelUnconfirmed->setText(BitcoinUnits::formatWithUnit(unit, balances.unconfirmed_watch_only_balance, false, BitcoinUnits::separatorAlways));\n+        ui->labelImmature->setText(BitcoinUnits::formatWithUnit(unit, balances.immature_watch_only_balance, false, BitcoinUnits::separatorAlways));\n+        ui->labelTotal->setText(BitcoinUnits::formatWithUnit(unit, balances.watch_only_balance + balances.unconfirmed_watch_only_balance + balances.immature_watch_only_balance, false, BitcoinUnits::separatorAlways));\n+    } else {\n+        ui->labelBalance->setText(BitcoinUnits::formatWithUnit(unit, balances.balance, false, BitcoinUnits::separatorAlways));\n+        ui->labelUnconfirmed->setText(BitcoinUnits::formatWithUnit(unit, balances.unconfirmed_balance, false, BitcoinUnits::separatorAlways));\n+        ui->labelImmature->setText(BitcoinUnits::formatWithUnit(unit, balances.immature_balance, false, BitcoinUnits::separatorAlways));\n+        ui->labelTotal->setText(BitcoinUnits::formatWithUnit(unit, balances.balance + balances.unconfirmed_balance + balances.immature_balance, false, BitcoinUnits::separatorAlways));\n+        ui->labelWatchAvailable->setText(BitcoinUnits::formatWithUnit(unit, balances.watch_only_balance, false, BitcoinUnits::separatorAlways));\n+        ui->labelWatchPending->setText(BitcoinUnits::formatWithUnit(unit, balances.unconfirmed_watch_only_balance, false, BitcoinUnits::separatorAlways));\n+        ui->labelWatchImmature->setText(BitcoinUnits::formatWithUnit(unit, balances.immature_watch_only_balance, false, BitcoinUnits::separatorAlways));\n+        ui->labelWatchTotal->setText(BitcoinUnits::formatWithUnit(unit, balances.watch_only_balance + balances.unconfirmed_watch_only_balance + balances.immature_watch_only_balance, false, BitcoinUnits::separatorAlways));\n+    }\n     // only show immature (newly mined) balance if it's non-zero, so as not to complicate things\n     // for the non-mining users\n     bool showImmature = balances.immature_balance != 0;\n@@ -178,7 +184,7 @@ void OverviewPage::setBalance(const interfaces::WalletBalances& balances)\n     // for symmetry reasons also show immature label when the watch-only one is shown\n     ui->labelImmature->setVisible(showImmature || showWatchOnlyImmature);\n     ui->labelImmatureText->setVisible(showImmature || showWatchOnlyImmature);\n-    ui->labelWatchImmature->setVisible(showWatchOnlyImmature); // show watch-only immature balance\n+    ui->labelWatchImmature->setVisible(!walletModel->privateKeysDisabled() && showWatchOnlyImmature); // show watch-only immature balance\n }\n \n // show/hide watch-only labels\n@@ -231,8 +237,10 @@ void OverviewPage::setWalletModel(WalletModel *model)\n \n         connect(model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &OverviewPage::updateDisplayUnit);\n \n-        updateWatchOnlyLabels(wallet.haveWatchOnly());\n-        connect(model, &WalletModel::notifyWatchonlyChanged, this, &OverviewPage::updateWatchOnlyLabels);\n+        updateWatchOnlyLabels(wallet.haveWatchOnly() && !model->privateKeysDisabled());\n+        connect(model, &WalletModel::notifyWatchonlyChanged, [this](bool showWatchOnly) {\n+            updateWatchOnlyLabels(showWatchOnly && !walletModel->privateKeysDisabled());\n+        });\n     }\n \n     // update the display unit, to not use the default (\"BTC\")"
      }
    ]
  },
  {
    "sha": "82d6c5aad330bb06d0c918b4e9304c25ff2bdcc8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MmQ2YzVhYWQzMzBiYjA2ZDBjOTE4YjRlOTMwNGMyNWZmMmJkY2M4",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-09-18T02:39:26Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-09-18T03:12:05Z"
      },
      "message": "gui: Show watch-only eye instead of HD disabled",
      "tree": {
        "sha": "64562423a023c21488eee27ee48943e104dce373",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64562423a023c21488eee27ee48943e104dce373"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82d6c5aad330bb06d0c918b4e9304c25ff2bdcc8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82d6c5aad330bb06d0c918b4e9304c25ff2bdcc8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/82d6c5aad330bb06d0c918b4e9304c25ff2bdcc8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82d6c5aad330bb06d0c918b4e9304c25ff2bdcc8/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe1ff5026bace9b43ac01c14a26ed0dd75ccc6f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe1ff5026bace9b43ac01c14a26ed0dd75ccc6f7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe1ff5026bace9b43ac01c14a26ed0dd75ccc6f7"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "cd2ca2179cf0ecd6b4bcc73d983826fe3933a434",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/82d6c5aad330bb06d0c918b4e9304c25ff2bdcc8/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/82d6c5aad330bb06d0c918b4e9304c25ff2bdcc8/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=82d6c5aad330bb06d0c918b4e9304c25ff2bdcc8",
        "patch": "@@ -1066,10 +1066,10 @@ bool BitcoinGUI::handlePaymentRequest(const SendCoinsRecipient& recipient)\n     return false;\n }\n \n-void BitcoinGUI::setHDStatus(int hdEnabled)\n+void BitcoinGUI::setHDStatus(bool privkeyDisabled, int hdEnabled)\n {\n-    labelWalletHDStatusIcon->setPixmap(platformStyle->SingleColorIcon(hdEnabled ? \":/icons/hd_enabled\" : \":/icons/hd_disabled\").pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n-    labelWalletHDStatusIcon->setToolTip(hdEnabled ? tr(\"HD key generation is <b>enabled</b>\") : tr(\"HD key generation is <b>disabled</b>\"));\n+    labelWalletHDStatusIcon->setPixmap(platformStyle->SingleColorIcon(privkeyDisabled ? \":/icons/eye\" : hdEnabled ? \":/icons/hd_enabled\" : \":/icons/hd_disabled\").pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n+    labelWalletHDStatusIcon->setToolTip(privkeyDisabled ? tr(\"Private key <b>disabled</b>\") : hdEnabled ? tr(\"HD key generation is <b>enabled</b>\") : tr(\"HD key generation is <b>disabled</b>\"));\n \n     // eventually disable the QLabel to set its opacity to 50%\n     labelWalletHDStatusIcon->setEnabled(hdEnabled);\n@@ -1115,7 +1115,7 @@ void BitcoinGUI::updateWalletStatus()\n     }\n     WalletModel * const walletModel = walletView->getWalletModel();\n     setEncryptionStatus(walletModel->getEncryptionStatus());\n-    setHDStatus(walletModel->wallet().hdEnabled());\n+    setHDStatus(walletModel->privateKeysDisabled(), walletModel->wallet().hdEnabled());\n }\n #endif // ENABLE_WALLET\n "
      },
      {
        "sha": "2770f2e11a42faf20abdbbfcd4394030c6579676",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/82d6c5aad330bb06d0c918b4e9304c25ff2bdcc8/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/82d6c5aad330bb06d0c918b4e9304c25ff2bdcc8/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=82d6c5aad330bb06d0c918b4e9304c25ff2bdcc8",
        "patch": "@@ -215,7 +215,7 @@ public Q_SLOTS:\n      @param[in] status            current hd enabled status\n      @see WalletModel::EncryptionStatus\n      */\n-    void setHDStatus(int hdEnabled);\n+    void setHDStatus(bool privkeyDisabled, int hdEnabled);\n \n public Q_SLOTS:\n     bool handlePaymentRequest(const SendCoinsRecipient& recipient);"
      }
    ]
  }
]