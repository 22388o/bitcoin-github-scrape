DrahtBot,2018-10-20T09:57:37Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#12677](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/12677.html) (RPC: Add ancestor{count,size,fees} to listu",https://github.com/bitcoin/bitcoin/pull/14481#issuecomment-431566686,431566686,
sipa,2018-11-14T23:48:31Z,I wonder if it isn't just easier to support passing in a descriptor in `signrawtransactionwithkey` and using #14477 to get to get descriptors from listunspent etc? The various ways of passing around scripts in different RPCs looks like hard to solve mess.,https://github.com/bitcoin/bitcoin/pull/14481#issuecomment-438861892,438861892,
ryanofsky,2018-12-04T20:32:21Z,"@MeshCollider is there an update on the status of this PR?\n\nc789fef8ca4739e2fb3c930bacad77543650b781 seems like an improvement to me, and has my ACK. But I do think it would be an easy win to replace ""redeemScript"" with ""witnessScript"" there, and tweak `signrawtransaction` to accept ""witnessScript"", so all RPCs could use these terms consistently.\n\nOr if we want to abandon this approach and",https://github.com/bitcoin/bitcoin/pull/14481#issuecomment-444247384,444247384,
meshcollider,2018-12-06T20:01:23Z,"@ryanofsky I plan on modifying this for terminology as above for now, and then I think we should look at RPC descriptor support as a whole after that. But I will come back to this PR in the next few days",https://github.com/bitcoin/bitcoin/pull/14481#issuecomment-445010253,445010253,
meshcollider,2019-02-05T20:35:21Z,"I've rebased this and addressed the terminology comments above, moving to a new witnessScript field with backwards compatibility",https://github.com/bitcoin/bitcoin/pull/14481#issuecomment-460793279,460793279,
meshcollider,2019-02-11T19:48:28Z,"Forgot to update the release notes, listunspent doesn't overload redeemScript anymore\n\nAgree about addmultisigaddress, and about squashing :+1:",https://github.com/bitcoin/bitcoin/pull/14481#issuecomment-462468413,462468413,
meshcollider,2019-02-11T23:09:26Z,"I've squashed and updated the release notes, but modifying `addmultisigaddress` to return a witnessScript as well as redeemScript would be a breaking change, because currently the witnessScript is returned as ""redeemScript"". It would be more confusing to use different terminology so unless a breaking change is worth it here, which I don't think it is, I'll leave it as is",https://github.com/bitcoin/bitcoin/pull/14481#issuecomment-462532115,462532115,
MarcoFalke,2019-02-12T23:54:55Z,Needs rebase (blame me),https://github.com/bitcoin/bitcoin/pull/14481#issuecomment-462992939,462992939,
meshcollider,2019-02-13T01:27:09Z,"Rebased and addressed comments above. @MarcoFalke I expect a review from you then ;)\n\n`addmultisigaddress` change can be done in a followup PR to avoid adding extra review burden here so close to merge-readiness",https://github.com/bitcoin/bitcoin/pull/14481#issuecomment-463015956,463015956,
MarcoFalke,2019-02-14T20:36:29Z,utACK 6ca836ab3abef5a90df0c3c4e4983f328b1afe00,https://github.com/bitcoin/bitcoin/pull/14481#issuecomment-463785004,463785004,
Sjors,2018-10-17T08:40:16Z,Why not a separate `witnessScript` field like in #14454? ,https://github.com/bitcoin/bitcoin/pull/14481#discussion_r225830355,225830355,src/wallet/rpcwallet.cpp
meshcollider,2018-10-17T12:05:16Z,"@Sjors because this has to be compatible with how signrawtransaction works, so it can be passed directly in. signrawtransaction only accepts the witness script as ""redeemScript"" and automatically wraps it",https://github.com/bitcoin/bitcoin/pull/14481#discussion_r225895974,225895974,src/wallet/rpcwallet.cpp
Sjors,2018-10-17T12:42:47Z,"Would it be super involved to add support for witnessScript to `signrawtransactionwithkey` and `signrawtransactionwithwallet`? The terminology is already quite confusing, so consistency can really help.",https://github.com/bitcoin/bitcoin/pull/14481#discussion_r225910374,225910374,src/wallet/rpcwallet.cpp
instagibbs,2018-10-17T14:32:11Z,Agreed with @Sjors I'd much rather we fix terminology instead of compounding confusion.,https://github.com/bitcoin/bitcoin/pull/14481#discussion_r225955502,225955502,src/wallet/rpcwallet.cpp
ryanofsky,2018-11-14T16:03:24Z,"re: https://github.com/bitcoin/bitcoin/pull/14481#discussion_r225830355\n\nBeing consistent with terminology from https://bitcoincore.org/en/segwit_wallet_dev/#creation-of-p2sh-p2wsh-address and `importmulti` seems good. Making it possible to call `signrawtransaction` directly also seems good. Can't we do both by updating `signrawtransaction` to accept a `witnessScript` field?\n\nIf we did thi",https://github.com/bitcoin/bitcoin/pull/14481#discussion_r233509783,233509783,src/wallet/rpcwallet.cpp
ryanofsky,2018-11-14T16:56:43Z,"IsPayToWitnessScriptHash succeeding and ExtractDestination failing should never happen, right? I think it would be better to trigger an actual error in this case than to silently fall back to the non-witness case.",https://github.com/bitcoin/bitcoin/pull/14481#discussion_r233533063,233533063,src/wallet/rpcwallet.cpp
laanwj,2019-02-12T09:20:09Z,maybe `optionally` instead of `also`,https://github.com/bitcoin/bitcoin/pull/14481#discussion_r255864423,255864423,doc/release-notes-14481.md
laanwj,2019-02-12T09:24:51Z,Please pass fractional amounts as a `Decimal`,https://github.com/bitcoin/bitcoin/pull/14481#discussion_r255866210,255866210,test/functional/rpc_signrawtransaction.py
Sjors,2019-02-12T10:08:10Z,I was also referring to this overloading.,https://github.com/bitcoin/bitcoin/pull/14481#discussion_r255883148,255883148,src/rpc/rawtransaction.cpp
ryanofsky,2019-02-12T22:01:28Z,"In commit ""Make listunspent return witness script for P2WSH or P2SH-P2WSH"" (0b665ab577ab41e3b7b12d9b7d83c151cf90fdaf)\n\nCould update commit message to mention change to signrawtransactionwithkey",https://github.com/bitcoin/bitcoin/pull/14481#discussion_r256165484,256165484,src/rpc/rawtransaction.cpp
ryanofsky,2019-02-12T22:11:42Z,"In commit ""Make listunspent return witness script for P2WSH or P2SH-P2WSH"" (0b665ab577ab41e3b7b12d9b7d83c151cf90fdaf)\n\nThis would be broken if compiled with NDEBUG, which even though we don't support it, isn't really great for readability because you don't expect to see code with side effects inside an assert. Would be a little better to write something like:\n\n```c++\nbool extracted = Ext",https://github.com/bitcoin/bitcoin/pull/14481#discussion_r256168795,256168795,src/wallet/rpcwallet.cpp
