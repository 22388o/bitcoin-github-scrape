practicalswift,2018-03-25T18:10:26Z,"Strong concept ACK\n\nVery nice work!",https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-375990875,375990875,
randolf,2018-03-25T20:05:46Z,"@Christewart I noticed that ``depends/packages/rapidcheck.mk`` references MarcoFalke:\n\n``$(package)_download_path=https://github.com/MarcoFalke/rapidcheck/archive``\n\nDo you think it might be better to reference directly from ""bitcoin"" instead?  If so, should MarcoFalke's ""rapidcheck"" project be added to the ""bitcoin"" project to facilitate this?",https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-375999152,375999152,
randolf,2018-03-25T20:08:52Z,"@Christewart In ``src/test/key_properties.cpp`` there are new references to the BOOST libraries.  As I understand it, one of the goals is to move away from BOOST, so I'm curious:  Is it possible to accomplish the same goals in this code without the additional reliance on BOOST?",https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-375999390,375999390,
MarcoFalke,2018-03-25T20:24:18Z,We don't plan to get rid of the boost unit test framework any time soon.,https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-376000512,376000512,
Christewart,2018-03-26T11:24:47Z,@randolf I'm not sure if it is too much of a concern right now who hosts the package. If we want to move it under the bitcoin project in the future i have no problem with that. Marco was kind enough to help me out with the setup which is why his repo is currently referenced. ,https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-376133325,376133325,
MarcoFalke,2018-03-26T12:39:47Z,"@randolf Ideally it should reference the proper upstream, but since they don't have any releases that might not work.",https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-376151471,376151471,
laanwj,2018-03-27T19:53:08Z,"> We don't plan to get rid of the boost unit test framework any time soon.\n\nIndeed. @randolf In general: please don't comment on boost usage of PRs in reviews if it concerns libraries that are already used in other parts of our code (such as boost test), only if it concerns using new boost libaries (such as lexical cast and whatnot.)",https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-376653217,376653217,
fanquake,2018-04-19T08:27:09Z,"Testing https://github.com/bitcoin/bitcoin/pull/12775/commits/900a441eeacd9f936a2495e878174f9aeead66d2 on macOS 10.13.4:\n\nAfter installing ```cmake``` I could successfully build rapidcheck in depends:\n```\nbash-3.2$ make NO_QT=1 RAPIDCHECK=1\nConfiguring rapidcheck...\n-- The C compiler identification is AppleClang 9.1.0.9020039\n-- The CXX compiler identification is AppleClang 9.1.0.902",https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-382653329,382653329,
MarcoFalke,2018-07-14T11:55:05Z,"Could you set `RAPIDCHECK` for the depends build and `--with-rapidcheck` for the configure, such that travis runs it?",https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-405018317,405018317,
Christewart,2018-07-15T00:20:17Z,@fanquake I fixed the issue with `make check`. I was accidentally classifying generator files as actual unit test files,https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-405058360,405058360,
Christewart,2018-07-15T13:23:09Z,one build is still failing from a timeout issue it appears? I don't think it is related to this pr?,https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-405091821,405091821,
laanwj,2018-08-27T10:50:12Z,"Probably a good time to move this forward and finally get it in now that 0.17 is branched off.\n",https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-416188712,416188712,
Christewart,2018-08-27T14:17:30Z,@laanwj Rebased ,https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-416241810,416241810,
laanwj,2018-08-31T10:09:27Z,"I'm surprised that debian/ubuntu doesn't package `rapidcheck`, the only way to get it is to build it from source.",https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-417618765,417618765,
laanwj,2018-08-31T10:14:25Z,"> This PR contains all of the build instructions needed for travis to pass. \n\nit is not enabled in travis.yml though, is that intentional?\n",https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-417619946,417619946,
laanwj,2018-08-31T10:23:06Z,"ACK\n\ntested both without and with rapidcheck, and can confirm that the tests run in the latter case:\n```\n.../bitcoin/src/test/key_properties.cpp(22): Entering test suite ""key_properties""\n.../bitcoin/src/test/key_properties.cpp(25): Entering test case ""key_uniqueness""\nUsing configuration: seed=9557370667331148370\n.../bitcoin/src/test/key_properties.cpp(25): Leaving test case ""key_uniq",https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-417621852,417621852,
Christewart,2018-08-31T11:57:26Z,">it is not enabled in travis.yml though, is that intentional?\n\nFrankly I haven't got that far. It's not intentional, just extra work that I don't have time to do ATM :-). \n\n",https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-417642035,417642035,
fanquake,2018-08-31T12:32:53Z,"@Christewart If you’re currently short on time, I can take this over.\n\nOn Fri, 31 Aug 2018 at 19:57, Chris Stewart <notifications@github.com>\nwrote:\n\n> it is not enabled in travis.yml though, is that intentional?\n>\n> Frankly I haven't got that far. It's not intentional, just extra work that\n> I don't have time to do ATM :-).\n>\n> —\n> You are receiving this because you were men",https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-417649706,417649706,
laanwj,2018-08-31T12:36:08Z,"> Frankly I haven't got that far. It's not intentional, just extra work that I don't have time to do ATM :-).\n\nIt's fine, doesn't have to be done in this PR.\nIt's just that your opening post mentions ""This PR contains all of the build instructions needed for travis to pass.""",https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-417650412,417650412,
MarcoFalke,2018-08-31T15:04:54Z,"Enabling this on travis should just be setting RAPIDCHECK=1 in `DEP_OPTS` (and also installing `cmake`, i.e. add it to `PACKAGES`)",https://github.com/bitcoin/bitcoin/pull/12775#issuecomment-417693054,417693054,
fanquake,2018-04-19T08:14:47Z,"This and the .h are missing a copyright header:\n```\n// Copyright (c) 2018 The Bitcoin Core developers\n// Distributed under the MIT software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n```",https://github.com/bitcoin/bitcoin/pull/12775#discussion_r182665698,182665698,src/test/gen/crypto_gen.cpp
fanquake,2018-04-19T08:15:45Z,"This can just be:\n```\n// Copyright (c) 2018 The Bitcoin Core developers\n// Distributed under the MIT software license, see the accompanying\n// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n```\n",https://github.com/bitcoin/bitcoin/pull/12775#discussion_r182665927,182665927,src/test/key_properties.cpp
fanquake,2018-04-19T08:16:37Z,"Looks like we'll need some documentation about installing/having cmake available\n```\nExtracting rapidcheck...\n/Users/xxx/GitHub/bitcoin/depends/sources/rapidcheck-10fc0cb.tar.gz: OK\nPreprocessing rapidcheck...\nConfiguring rapidcheck...\n/bin/sh: cmake: command not found\n```",https://github.com/bitcoin/bitcoin/pull/12775#discussion_r182666138,182666138,depends/packages/rapidcheck.mk
laanwj,2018-08-31T09:55:09Z,"I think something should be logged to the output depending on whether rapidcheck is used or not, currently there is nothing in configure output that suggests this\n\noh, just noticed in travis that without specifying explicit `--with-rapidcheck` there is:\n```\nchecking rapidcheck.h usability... no\nchecking rapidcheck.h presence... no\nchecking for rapidcheck.h... no\n```",https://github.com/bitcoin/bitcoin/pull/12775#discussion_r214302841,214302841,configure.ac
laanwj,2018-08-31T10:07:45Z,"indeed, this is necessary because rapidcheck has no `make install`",https://github.com/bitcoin/bitcoin/pull/12775#discussion_r214306027,214306027,depends/packages/rapidcheck.mk
Christewart,2018-08-31T11:55:07Z,"This is an open PR on the repo\n\nhttps://github.com/emil-e/rapidcheck/pull/152",https://github.com/bitcoin/bitcoin/pull/12775#discussion_r214329666,214329666,depends/packages/rapidcheck.mk
practicalswift,2018-09-06T07:43:28Z,`MultisigKeys()` seems unused? Is that intentional?,https://github.com/bitcoin/bitcoin/pull/12775#discussion_r215524837,215524837,src/test/gen/crypto_gen.cpp
Christewart,2018-09-06T15:57:22Z,"I don't think it is used on this PR, but I believe it is used with the remaining test cases in #8469. Basically this PR splits #8469 in half -- there is still a lot of test cases in that PR. Basically once this PR is merged i'm going to open another one with those test cases",https://github.com/bitcoin/bitcoin/pull/12775#discussion_r215682191,215682191,src/test/gen/crypto_gen.cpp
MarcoFalke,2018-09-09T14:03:28Z,Why is this change required?,https://github.com/bitcoin/bitcoin/pull/12775#discussion_r216158186,216158186,src/Makefile.test.include
MarcoFalke,2018-09-09T18:02:07Z,Might want to update to the latest rapidcheck and use the make install target?,https://github.com/bitcoin/bitcoin/pull/12775#discussion_r216164298,216164298,depends/packages/rapidcheck.mk
Empact,2018-10-09T00:44:06Z,"Now that the PR is merged, should this be switched over?",https://github.com/bitcoin/bitcoin/pull/12775#discussion_r223533791,223533791,depends/packages/rapidcheck.mk
Empact,2018-10-09T00:47:40Z,I think we should be more careful about adding unused code like this under the expectation that it will be used in the future. YAGNI + concerns about maintaining an informative record in the code history.,https://github.com/bitcoin/bitcoin/pull/12775#discussion_r223534166,223534166,src/test/gen/crypto_gen.cpp
