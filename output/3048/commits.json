[
  {
    "sha": "208e1802bd79741444cb70fb16b0328d7303d9da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMDhlMTgwMmJkNzk3NDE0NDRjYjcwZmIxNmIwMzI4ZDczMDNkOWRh",
    "commit": {
      "author": {
        "name": "Ale\u0161 Janda",
        "email": "ales.janda@kyblsoft.cz",
        "date": "2013-10-01T07:05:36Z"
      },
      "committer": {
        "name": "Ale\u0161 Janda",
        "email": "ales@mazel.(none)",
        "date": "2013-10-01T07:07:30Z"
      },
      "message": "Outputs of listunspent command are sorted by amount",
      "tree": {
        "sha": "fb4c2572903cebe479a7d46e2959169687270371",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb4c2572903cebe479a7d46e2959169687270371"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/208e1802bd79741444cb70fb16b0328d7303d9da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/208e1802bd79741444cb70fb16b0328d7303d9da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/208e1802bd79741444cb70fb16b0328d7303d9da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/208e1802bd79741444cb70fb16b0328d7303d9da/comments",
    "author": {
      "login": "kybl",
      "id": 246587,
      "node_id": "MDQ6VXNlcjI0NjU4Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/246587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kybl",
      "html_url": "https://github.com/kybl",
      "followers_url": "https://api.github.com/users/kybl/followers",
      "following_url": "https://api.github.com/users/kybl/following{/other_user}",
      "gists_url": "https://api.github.com/users/kybl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kybl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kybl/subscriptions",
      "organizations_url": "https://api.github.com/users/kybl/orgs",
      "repos_url": "https://api.github.com/users/kybl/repos",
      "events_url": "https://api.github.com/users/kybl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kybl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": null,
    "parents": [
      {
        "sha": "68651275513c6d49a1a50ed2a1f7ef5d5f0e760e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68651275513c6d49a1a50ed2a1f7ef5d5f0e760e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/68651275513c6d49a1a50ed2a1f7ef5d5f0e760e"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "af0053f6e44240e51cb1f533b2d5a286f905f098",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/208e1802bd79741444cb70fb16b0328d7303d9da/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/208e1802bd79741444cb70fb16b0328d7303d9da/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=208e1802bd79741444cb70fb16b0328d7303d9da",
        "patch": "@@ -17,6 +17,14 @@ using namespace boost;\n using namespace boost::assign;\n using namespace json_spirit;\n \n+struct CompareCOutputByAmount\n+{\n+    bool operator()(const COutput& t1, const COutput& t2) const\n+    {\n+        return (t1.tx->vout[t1.i].nValue < t2.tx->vout[t2.i].nValue);\n+    }\n+};\n+\n void ScriptPubKeyToJSON(const CScript& scriptPubKey, Object& out, bool fIncludeHex)\n {\n     txnouttype type;\n@@ -172,6 +180,8 @@ Value listunspent(const Array& params, bool fHelp)\n     Array results;\n     vector<COutput> vecOutputs;\n     pwalletMain->AvailableCoins(vecOutputs, false);\n+    sort(vecOutputs.begin(), vecOutputs.end(), CompareCOutputByAmount());\n+\n     BOOST_FOREACH(const COutput& out, vecOutputs)\n     {\n         if (out.nDepth < nMinDepth || out.nDepth > nMaxDepth)"
      }
    ]
  }
]