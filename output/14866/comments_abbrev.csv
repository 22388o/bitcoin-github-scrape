promag,2018-12-04T14:39:04Z,This can break existing configurations correct?,https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-444122125,444122125,
AkioNak,2018-12-05T03:04:25Z,"@promag Thanks for your comment.\nYes. Sometimes this may be different from previous results when interpreting existing configurations.\nEspecially the possibility of interpretation unmatch increases if using ""includeconf"" and sections are specified with square brackets in the ""included"" configuration file.\nIs it necessary for this change to add a flag to specify how to read the configuration ",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-444341899,444341899,
promag,2018-12-05T08:02:43Z,"You should not break existing configurations, especially if there is no strong reason to do it.",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-444393966,444393966,
AkioNak,2018-12-05T11:26:29Z,"@promag My motivation of this PR is that I think it is very difficult to effectively use sections explicitly specified using prefix or use ""includeconf"".\n\nFor example, If using following 4 config file, bitcoind (build from master 86ff0413b) never read port.conf and user.conf. Furthermore, it warns these files as nested.\nThis cause is that the chain may be specipied in the course of processin",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-444452942,444452942,
kallewoof,2018-12-11T11:24:14Z,"@promag The `includeconf` and sections features are both relatively recent. I think this is a bug-fix that should be back-ported, in fact, as the current behavior is completely nonsensical.\n",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-446168688,446168688,
laanwj,2018-12-13T11:48:04Z,"> @promag The includeconf and sections features are both relatively recent\n\nI think that's a good point, does this *only* affect use of `-includeconf`?",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-446940824,446940824,
kallewoof,2018-12-13T13:34:03Z,"@laanwj I believe so, yes, except for maybe the minor detail (item 4 in the OP list). @AkioNak?",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-446969716,446969716,
DrahtBot,2018-12-13T22:15:07Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20499 (Remove obsolete NODISCARD ifdef forest. Use [[nodiscard]] (C++17). by practicalswift)\n* #17556 (test: Change feat",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-447139886,447139886,
AkioNak,2019-01-10T06:29:49Z,"@kallewoof @laanwj I'm so sorry for my late reply.\n\n> I believe so, yes, except for maybe the minor detail (item 4 in the OP list).\n\nI think so too.",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-452985630,452985630,
AkioNak,2019-01-11T06:31:03Z,"Rebased but travis failed. Hmm,,, I will check what's going on.",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-453393104,453393104,
AkioNak,2019-01-15T10:02:51Z,"The direct cause of failing travis was potential deadlock detection. \nThe investigation will continue ...\n\npotential_deadlock_detected() reports following message:\n```\nPOTENTIAL DEADLOCK DETECTED\nPrevious lock order was:\n (1) cs_args  util/system.cpp:921\n (2) csPathCached  util/system.cpp:790\nCurrent lock order is:\n (2) csPathCached  util/system.cpp:790\n (1) cs_args  util/sys",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-454334865,454334865,
AkioNak,2019-01-16T15:06:18Z,Addressed to the potential deadlock by narrowing the range of LOCK(cs_args).,https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-454811939,454811939,
kallewoof,2019-01-17T04:51:45Z,utACK cca8a9196f491aa8e99d18846578307cd7004c45,https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-455041786,455041786,
AkioNak,2019-01-21T06:30:35Z,squashed and rebased.,https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-455962243,455962243,
Sjors,2019-02-21T17:27:12Z,"Concept ACK, except I think the following example (from the description) should just fail:\n\n```ini\n[main]\nincludeconf=inc1.conf\ntest.includeconf=inc2.conf\n```\n\nOnce a network is specified with square brackets like `[main]`, the only way to configure another network should be to use square brackets again, e.g. `[testsnet]`. That rule should also apply to anything included by `includ",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-466089356,466089356,
AkioNak,2019-02-22T11:19:55Z,"@Sjors Thank you for your surggestions.\n\n> Once a network is specified with square brackets like `[main]`, the only way to configure another network should be to use square brackets again, e.g. `[testsnet]`. That rule should also apply to anything included by `includeconf`.\n\nGood idea. I agree.\n\n> Or, slightly less strict, that square brackets may not exist in `includeconf` files if th",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-466364072,466364072,
Sjors,2019-02-22T13:10:30Z,"Ok, looking forward to the new version. I think it would be very useful to add a lot more tests to [feature_config_args.py](https://github.com/bitcoin/bitcoin/blob/master/test/functional/feature_config_args.py), given that you were able to make these changes without breaking any existing test.",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-466391285,466391285,
AkioNak,2019-03-04T11:43:23Z,rebased. (no functional change yet),https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-469223222,469223222,
AkioNak,2019-03-04T16:54:59Z,"> Once a network is specified with square brackets like [main], the only way to configure another network should be to use square brackets again, e.g. [testsnet]. That rule should also apply to anything included by includeconf.\n\nAdded rules for how to use square brackets & preriods.\nAlso added some tests.\n\n@Sjors Could you review this?",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-469328379,469328379,
AkioNak,2019-03-14T05:30:48Z,"Squashed.\n(Also updated commit log and pull request description.)",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-472710012,472710012,
AkioNak,2019-06-20T08:34:07Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-503932805,503932805,
AkioNak,2019-08-13T05:19:46Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-520692347,520692347,
jtimon,2019-10-10T22:49:47Z,"I don't like that in the example port=8441 in bitcoin.conf is applied only to regtest just because inc2.conf ended with [regtest].\nI feel like I could get crazy for a few hours just by forgetting inc2.conf ends with [regtest] if, let's say, it previously ended with [main] but I moved chain sections around in inc.conf or something.\n\nLooking at the example, I just can't avoid wondering why the",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-540830317,540830317,
AkioNak,2019-10-11T05:27:50Z,"@jtimon Thank you  for the comment!\n\n> after includeconf, you should go back to whatever section you were in bitcoin.conf, not remain in the last one set by the included file.\n\nIt makes sense. That behavior is natural so I will address.\n",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-540912702,540912702,
AkioNak,2019-10-18T09:01:57Z,"@jtimon I have addressed.\n(Changing section in the included file never affect to the including file.) ",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-543614646,543614646,
AkioNak,2019-10-29T10:01:27Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-547344310,547344310,
Sjors,2019-11-15T13:26:28Z,"Concept re-ACK. The latest set of 5 criteria in the PR description look very reasonable _(update: as ryanofsky points out, some of this is already the case, which we should document, and maybe test)_ .\n\nNeeds rebase after @ryanofsky's settings merge refactor in #15934 (which also added lots of useful tests). I think the increased sanity warrants (if needed) breaking backwards compatibility.",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-554357671,554357671,
ryanofsky,2019-11-15T14:20:28Z,"Concept ACK, I think. But I am having a trouble understanding the description, because it seems to be describing a lot of current behavior (like points 2 and 4) that the PR doesn't actually affect, and not be clear about what is changing.\n\nWould the following be an accurate description of what the PR does?\n\n> Included configurations from `includeconf` lines in `[main]` `[test]` and `[regte",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-554376706,554376706,
AkioNak,2019-11-18T01:14:10Z,"@Sjors @ryanofsky Thank you for your comments/suggestions.\nI will rebase and also address the suggestions above.",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-554811480,554811480,
adamjonas,2020-05-01T00:54:21Z,@AkioNak pinging for a rebase and addressing the comments by ryanofsky and Sjors.,https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-622196066,622196066,
AkioNak,2020-05-01T02:38:12Z,@adamjonas I will do.,https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-622220811,622220811,
AkioNak,2020-05-11T09:19:30Z,"Rebased.\nI am still working on addressing the comments by ryanofsky and Sjors.",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-626581357,626581357,
adamjonas,2020-06-16T13:33:51Z,Hi @AkioNak - friendly monthly ping.,https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-644768946,644768946,
AkioNak,2020-06-18T00:22:42Z,@adamjonas Thanks. I will do again.,https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-645695164,645695164,
DrahtBot,2020-11-30T14:52:53Z,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/14866#issuecomment-735833525,735833525,
practicalswift,2018-12-05T07:57:37Z,Nit: The `else` here is redundant due to the `continue` above.,https://github.com/bitcoin/bitcoin/pull/14866#discussion_r238960894,238960894,src/util/system.cpp
AkioNak,2018-12-05T11:28:05Z,@practicalswift Thanks. Indeed!,https://github.com/bitcoin/bitcoin/pull/14866#discussion_r239028484,239028484,src/util/system.cpp
AkioNak,2018-12-06T07:44:09Z,Done.,https://github.com/bitcoin/bitcoin/pull/14866#discussion_r239352688,239352688,src/util/system.cpp
