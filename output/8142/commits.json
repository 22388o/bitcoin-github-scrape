[
  {
    "sha": "152ab236ea1c1106340196f45918fd84f57a0b63",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTJhYjIzNmVhMWMxMTA2MzQwMTk2ZjQ1OTE4ZmQ4NGY1N2EwYjYz",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-06-03T06:16:42Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-06-06T14:02:05Z"
      },
      "message": "Improve CWallet API  with new GetAccountPubkey function.\n\nRemove one more caller that is passing CWalletDB.",
      "tree": {
        "sha": "ec99b28f0b317d83a6828efe3e39538b17633966",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec99b28f0b317d83a6828efe3e39538b17633966"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/152ab236ea1c1106340196f45918fd84f57a0b63",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/152ab236ea1c1106340196f45918fd84f57a0b63",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/152ab236ea1c1106340196f45918fd84f57a0b63",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/152ab236ea1c1106340196f45918fd84f57a0b63/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "243ac0c75b1b2a9b6ed4eaa0e430c0d5d6c472f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/243ac0c75b1b2a9b6ed4eaa0e430c0d5d6c472f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/243ac0c75b1b2a9b6ed4eaa0e430c0d5d6c472f0"
      }
    ],
    "stats": {
      "total": 73,
      "additions": 43,
      "deletions": 30
    },
    "files": [
      {
        "sha": "5e6afcd7cb124c0f238aae077e7b2f7a76cc9707",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 30,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152ab236ea1c1106340196f45918fd84f57a0b63/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152ab236ea1c1106340196f45918fd84f57a0b63/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=152ab236ea1c1106340196f45918fd84f57a0b63",
        "patch": "@@ -146,38 +146,12 @@ UniValue getnewaddress(const UniValue& params, bool fHelp)\n \n CBitcoinAddress GetAccountAddress(string strAccount, bool bForceNew=false)\n {\n-    CWalletDB walletdb(pwalletMain->strWalletFile);\n-\n-    CAccount account;\n-    walletdb.ReadAccount(strAccount, account);\n-\n-    if (!bForceNew) {\n-        if (!account.vchPubKey.IsValid())\n-            bForceNew = true;\n-        else {\n-            // Check if the current key has been used\n-            CScript scriptPubKey = GetScriptForDestination(account.vchPubKey.GetID());\n-            for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin();\n-                 it != pwalletMain->mapWallet.end() && account.vchPubKey.IsValid();\n-                 ++it)\n-                BOOST_FOREACH(const CTxOut& txout, (*it).second.vout)\n-                    if (txout.scriptPubKey == scriptPubKey) {\n-                        bForceNew = true;\n-                        break;\n-                    }\n-        }\n-    }\n-\n-    // Generate a new key\n-    if (bForceNew) {\n-        if (!pwalletMain->GetKeyFromPool(account.vchPubKey))\n-            throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n-\n-        pwalletMain->SetAddressBook(account.vchPubKey.GetID(), strAccount, \"receive\");\n-        walletdb.WriteAccount(strAccount, account);\n+    CPubKey pubKey;\n+    if (!pwalletMain->GetAccountPubkey(pubKey, strAccount, bForceNew)) {\n+        throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n     }\n \n-    return CBitcoinAddress(account.vchPubKey.GetID());\n+    return CBitcoinAddress(pubKey.GetID());\n }\n \n UniValue getaccountaddress(const UniValue& params, bool fHelp)"
      },
      {
        "sha": "f3d165472aec2a70ac6418b42485830019cd5d7b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152ab236ea1c1106340196f45918fd84f57a0b63/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152ab236ea1c1106340196f45918fd84f57a0b63/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=152ab236ea1c1106340196f45918fd84f57a0b63",
        "patch": "@@ -640,6 +640,44 @@ bool CWallet::AccountMove(std::string strFrom, std::string strTo, CAmount nAmoun\n     return true;\n }\n \n+bool CWallet::GetAccountPubkey(CPubKey &pubKey, std::string strAccount, bool bForceNew)\n+{\n+    CWalletDB walletdb(strWalletFile);\n+\n+    CAccount account;\n+    walletdb.ReadAccount(strAccount, account);\n+\n+    if (!bForceNew) {\n+        if (!account.vchPubKey.IsValid())\n+            bForceNew = true;\n+        else {\n+            // Check if the current key has been used\n+            CScript scriptPubKey = GetScriptForDestination(account.vchPubKey.GetID());\n+            for (map<uint256, CWalletTx>::iterator it = mapWallet.begin();\n+                 it != mapWallet.end() && account.vchPubKey.IsValid();\n+                 ++it)\n+                BOOST_FOREACH(const CTxOut& txout, (*it).second.vout)\n+                    if (txout.scriptPubKey == scriptPubKey) {\n+                        bForceNew = true;\n+                        break;\n+                    }\n+        }\n+    }\n+\n+    // Generate a new key\n+    if (bForceNew) {\n+        if (!GetKeyFromPool(account.vchPubKey))\n+            return false;\n+\n+        SetAddressBook(account.vchPubKey.GetID(), strAccount, \"receive\");\n+        walletdb.WriteAccount(strAccount, account);\n+    }\n+\n+    pubKey = account.vchPubKey;\n+\n+    return true;\n+}\n+\n void CWallet::MarkDirty()\n {\n     {"
      },
      {
        "sha": "683c901444c1bde0fc7e0590eb987ddafde85d35",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152ab236ea1c1106340196f45918fd84f57a0b63/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152ab236ea1c1106340196f45918fd84f57a0b63/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=152ab236ea1c1106340196f45918fd84f57a0b63",
        "patch": "@@ -719,6 +719,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      */\n     int64_t IncOrderPosNext(CWalletDB *pwalletdb = NULL);\n     bool AccountMove(std::string strFrom, std::string strTo, CAmount nAmount, std::string strComment = \"\");\n+    bool GetAccountPubkey(CPubKey &pubKey, std::string strAccount, bool bForceNew = false);\n \n     void MarkDirty();\n     bool AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletDB* pwalletdb);"
      }
    ]
  }
]