laanwj,2020-04-30 13:40:44,"Agree with making this list a separate RPC call (it could potentially be long), but what about putting `user` on the normal `getrpcinfo`? It seems general enough.",https://github.com/bitcoin/bitcoin/pull/18827#issuecomment-621856627,621856627,
brakmic,2020-04-30 13:43:53,"> Agree with making this list a separate RPC call (it could potentially be long), but what about putting `user` on the normal `getrpcinfo`? It seems general enough.\n\nOk. Should I open a new PR or change it *en passant*?",https://github.com/bitcoin/bitcoin/pull/18827#issuecomment-621861557,621861557,
MarcoFalke,2020-04-30 13:45:40,"`getrpcinfo` leaks other information, so it might not be whitelisted, see https://github.com/bitcoin/bitcoin/issues/12248#issuecomment-620273346 . I agree with the suggestion, but it should be done separate form introducing this new call.",https://github.com/bitcoin/bitcoin/pull/18827#issuecomment-621862551,621862551,
brakmic,2020-04-30 13:49:19,"> `getrpcinfo` leaks other information, so it might not be whitelisted, see [#12248 (comment)](https://github.com/bitcoin/bitcoin/issues/12248#issuecomment-620273346) . I agree with the suggestion, but it should be done separate form introducing this new call.\n\nOk, will remove `user` from this rpc and add it to `getrpcinfo` in a separate PR.",https://github.com/bitcoin/bitcoin/pull/18827#issuecomment-621864643,621864643,
promag,2020-04-30 13:49:25,"So `help` and `getrpcwhitelist` are always available, or are there more ""public"" calls?",https://github.com/bitcoin/bitcoin/pull/18827#issuecomment-621864698,621864698,
brakmic,2020-04-30 13:50:04,"> So `help` and `getrpcwhitelist` are always available, or are there more ""public"" calls?\n\nI did not make `getrpcwhitelist` always available. But I can make it, if this should be the case. \n\n--EDIT: Sorry, I was a bit misleading: getrpcwhitelist *is* available by default, but when user is setting a whitelist in the config, then getrpcwhitelist must be added there as well.",https://github.com/bitcoin/bitcoin/pull/18827#issuecomment-621865126,621865126,
DrahtBot,2020-04-30 17:57:09,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18871 (rpc: prevent circular deps by extracting into separate include by brakmic)\n* #17805 (test: Add test for rpcwhitel",https://github.com/bitcoin/bitcoin/pull/18827#issuecomment-622009257,622009257,
JeremyRubin,2020-05-01 05:58:54,getrpcinfo should not be made public by default. Concept ACK on the new RPC though.,https://github.com/bitcoin/bitcoin/pull/18827#issuecomment-622262093,622262093,
JeremyRubin,2020-05-01 05:59:55,"~The new RPC should return the permissions for the current user only; returning the permissions for other users should not be allowed.~\nnvm",https://github.com/bitcoin/bitcoin/pull/18827#issuecomment-622262287,622262287,
MarcoFalke,2020-05-10 20:12:05,I liked this and I am looking forward to seeing this reopened.,https://github.com/bitcoin/bitcoin/pull/18827#issuecomment-626382706,626382706,
JeremyRubin,2020-05-11 04:51:04,"@brakmic any context on why you closed it out? Do you want someone to pick it up or are you planning on restarting it? \n\nHappy to help you move it along (review process in Bitcoin Core can be slow!)",https://github.com/bitcoin/bitcoin/pull/18827#issuecomment-626467697,626467697,
MarcoFalke,2020-05-01 10:55:06,"```suggestion\n    return g_rpc_whitelist.at(userName);\n```\n\nOtherwise there is no guarantee that the whitelist will not get corrupted",https://github.com/bitcoin/bitcoin/pull/18827#discussion_r418499019,418499019,src/httprpc.cpp
brakmic,2020-05-01 11:08:07,Thanks!,https://github.com/bitcoin/bitcoin/pull/18827#discussion_r418502126,418502126,src/httprpc.cpp
promag,2020-05-01 11:15:49,Didn't include `src/httprpc.h` because would add a circular dependency?,https://github.com/bitcoin/bitcoin/pull/18827#discussion_r418504071,418504071,src/rpc/server.cpp
brakmic,2020-05-01 11:17:07,"Yes, because travis failed on two builds with such an error.",https://github.com/bitcoin/bitcoin/pull/18827#discussion_r418504409,418504409,src/rpc/server.cpp
promag,2020-05-03 23:50:03,I think it's probably better to add the #include and update test/lint/lint-circular-dependencies.sh.,https://github.com/bitcoin/bitcoin/pull/18827#discussion_r419176481,419176481,src/rpc/server.cpp
luke-jr,2020-05-04 17:15:28,Nit: `user_name`,https://github.com/bitcoin/bitcoin/pull/18827#discussion_r419594574,419594574,src/httprpc.cpp
luke-jr,2020-05-04 17:16:14,"Probably can use `unordered_set`, but maybe that's a refactor for `g_rpc_whitelist`...",https://github.com/bitcoin/bitcoin/pull/18827#discussion_r419595069,419595069,src/httprpc.cpp
luke-jr,2020-05-04 17:17:53,Is there a case for making it an Object with possible details of more fine-grained calls? Or is it safe to assume we won't go beyond the method level for permissions?,https://github.com/bitcoin/bitcoin/pull/18827#discussion_r419596057,419596057,src/rpc/server.cpp
JeremyRubin,2020-05-04 18:03:09,"@luke-jr I think unordered_set will be slower in most cases & use more memory, hence choosing set.",https://github.com/bitcoin/bitcoin/pull/18827#discussion_r419624208,419624208,src/httprpc.cpp
JeremyRubin,2020-05-04 18:04:31,"I think that's a decent idea for future-proofing the return type, but there is some disagreement of the level of permission control we want to allow in core v.s. a layer on top.",https://github.com/bitcoin/bitcoin/pull/18827#discussion_r419625005,419625005,src/rpc/server.cpp
brakmic,2020-05-04 18:35:43,Thanks. Adapted.,https://github.com/bitcoin/bitcoin/pull/18827#discussion_r419643762,419643762,src/httprpc.cpp
promag,2020-05-04 20:38:35,Was this resolved by mistake?,https://github.com/bitcoin/bitcoin/pull/18827#discussion_r419713481,419713481,src/rpc/server.cpp
brakmic,2020-05-04 20:43:47,I don't think I should simply change the linter-checks because of a single function. Maybe someone more qualified should be asked for advice.,https://github.com/bitcoin/bitcoin/pull/18827#discussion_r419716235,419716235,src/rpc/server.cpp
sipa,2020-05-04 20:46:52,"Even nicer would be to solve the circular dependency in the first place. Using a forward declare here instead of an include isn't a solution - it's just hiding it from the linter.\n\nIf it's too much work to resolve that in this PR, my suggestion is being explicit about it and adding an exception to the linter.",https://github.com/bitcoin/bitcoin/pull/18827#discussion_r419717886,419717886,src/rpc/server.cpp
brakmic,2020-05-04 21:02:14,I'll try to extract the circular structures into another include and then recombine everything. Maybe better in a separate PR?,https://github.com/bitcoin/bitcoin/pull/18827#discussion_r419726292,419726292,src/rpc/server.cpp
brakmic,2020-05-04 21:32:46,"So, I have extracted the following classes and functions into a new include **rpc/interfaces.h**\n\n```cpp\nclass RPCTimerBase\nclass RPCTimerInterface\nclass CRPCCommand\nclass CRPCTable\nstd::string JSONRPCExecBatch(const JSONRPCRequest& jreq, const UniValue& vReq);\nvoid RPCSetTimerInterface(RPCTimerInterface *iface);\nvoid RPCSetTimerInterfaceIfUnset(RPCTimerInterface *iface);\nvoid ",https://github.com/bitcoin/bitcoin/pull/18827#discussion_r419742054,419742054,src/rpc/server.cpp
brakmic,2020-05-06 15:39:47,I have *outsourced* this task into this PR (draft): https://github.com/bitcoin/bitcoin/pull/18871,https://github.com/bitcoin/bitcoin/pull/18827#discussion_r420891859,420891859,src/rpc/server.cpp
brakmic,2020-05-06 15:40:59,Will resolve this conversation if you don't mind. In case my other PR gets merged we can continue from there (with rebase etc.).,https://github.com/bitcoin/bitcoin/pull/18827#discussion_r420892671,420892671,src/rpc/server.cpp
