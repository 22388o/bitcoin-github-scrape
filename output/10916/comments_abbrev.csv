jonasschnelli,2017-07-24T07:28:19Z,"I guess the `setAddress` pass by reference was a humble try to keep the memory control on the caller side and have it properly cleaned. But seems not to be done well.\n\nThe lock in `GetKeys` is definitively missing. Also, the `IsCrypted()` method is sometimes called without the `cs_KeyStore` so, `fUseCrypto` should be turned into an atomic.\n\nIt was never a problem because – at the moment – ",https://github.com/bitcoin/bitcoin/pull/10916#issuecomment-317340990,317340990,
TheBlueMatt,2017-09-04T21:36:50Z,utACK fe09b0197c20dc3c0a614c1a94dac708ef206743. As @jonasschnelli points out we need to also fix fUseCrypto to either be atomic or under the lock.,https://github.com/bitcoin/bitcoin/pull/10916#issuecomment-327030904,327030904,
jonasschnelli,2017-09-07T19:59:46Z,"Tested ACK fe09b0197c20dc3c0a614c1a94dac708ef206743\nReady for merge. Another pair of eyes would be good.",https://github.com/bitcoin/bitcoin/pull/10916#issuecomment-327911686,327911686,
benma,2017-07-23T21:43:17Z,"Could this scope level be removed alongside with the `return false` in the end, or am I missing something about how `LOCK` works?",https://github.com/bitcoin/bitcoin/pull/10916#discussion_r128930664,128930664,src/wallet/crypter.h
bytting,2017-07-23T23:23:02Z,"It certainly looks like it. The lock goes out of scope either way, and that last return is unreachable as it stands now",https://github.com/bitcoin/bitcoin/pull/10916#discussion_r128932643,128932643,src/wallet/crypter.h
