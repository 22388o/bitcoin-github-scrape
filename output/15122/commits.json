[
  {
    "sha": "b745e149c26507e31cdaed0412dcd9963647568d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNzQ1ZTE0OWMyNjUwN2UzMWNkYWVkMDQxMmRjZDk5NjM2NDc1Njhk",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-01-07T17:06:39Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-01-15T22:24:46Z"
      },
      "message": "[docs] Expand help text for importmulti changes",
      "tree": {
        "sha": "aa81375516c266665d1d6ddd7ae1794b28fc4ef7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa81375516c266665d1d6ddd7ae1794b28fc4ef7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b745e149c26507e31cdaed0412dcd9963647568d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b745e149c26507e31cdaed0412dcd9963647568d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b745e149c26507e31cdaed0412dcd9963647568d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b745e149c26507e31cdaed0412dcd9963647568d/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1973257da0501169f9d1e1eb5c0896ac25b471f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1973257da0501169f9d1e1eb5c0896ac25b471f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1973257da0501169f9d1e1eb5c0896ac25b471f9"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "295dfcc63f68073c66be94f466592ce78a1a1032",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b745e149c26507e31cdaed0412dcd9963647568d/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b745e149c26507e31cdaed0412dcd9963647568d/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=b745e149c26507e31cdaed0412dcd9963647568d",
        "patch": "@@ -1148,7 +1148,9 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n     if (mainRequest.fHelp || mainRequest.params.size() < 1 || mainRequest.params.size() > 2)\n         throw std::runtime_error(\n             RPCHelpMan{\"importmulti\",\n-                \"\\nImport addresses/scripts (with private or public keys, redeem script (P2SH)), rescanning all addresses in one-shot-only (rescan can be disabled via options). Requires a new wallet backup.\\n\",\n+                \"\\nImport addresses/scripts (with private or public keys, redeem script (P2SH)), optionally rescanning the blockchain from the earliest creation time of the imported scripts. Requires a new wallet backup.\\n\"\n+                \"If an address/script is imported without all of the private keys required to spend from that address, it will be watchonly. The 'watchonly' option must be set to true in this case or a warning will be returned.\\n\"\n+                \"Conversely, if all the private keys are provided and the address/script is spendable, the watchonly option must be set to false, or a warning will be returned.\\n\",\n                 {\n                     {\"requests\", RPCArg::Type::ARR, /* opt */ false, /* default_val */ \"\", \"Data to be imported\",\n                         {\n@@ -1178,7 +1180,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n                                         }\n                                     },\n                                     {\"internal\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"false\", \"Stating whether matching outputs should be treated as not incoming payments (also known as change)\"},\n-                                    {\"watchonly\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"false\", \"Stating whether matching outputs should be considered watched even when not all private keys are provided.\"},\n+                                    {\"watchonly\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"false\", \"Stating whether matching outputs should be considered watchonly.\"},\n                                     {\"label\", RPCArg::Type::STR, /* opt */ true, /* default_val */ \"''\", \"Label to assign to the address, only allowed with internal=false\"},\n                                 },\n                             },"
      }
    ]
  }
]