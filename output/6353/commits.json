[
  {
    "sha": "5ed10793c2df970d07cecd760c42205e68779e83",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZWQxMDc5M2MyZGY5NzBkMDdjZWNkNzYwYzQyMjA1ZTY4Nzc5ZTgz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-06-27T06:03:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-07-01T17:36:17Z"
      },
      "message": "Show softfork status in getblockchaininfo",
      "tree": {
        "sha": "05e71f7946ffdd644a296260279fe926183849a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05e71f7946ffdd644a296260279fe926183849a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ed10793c2df970d07cecd760c42205e68779e83",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ed10793c2df970d07cecd760c42205e68779e83",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ed10793c2df970d07cecd760c42205e68779e83",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ed10793c2df970d07cecd760c42205e68779e83/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "24f24896d602bef3323c5ff66bbccc92448e89d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24f24896d602bef3323c5ff66bbccc92448e89d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/24f24896d602bef3323c5ff66bbccc92448e89d5"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 51,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0b34225d8f6a0cd7a39a237589e94f10b9bff9e5",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ed10793c2df970d07cecd760c42205e68779e83/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ed10793c2df970d07cecd760c42205e68779e83/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=5ed10793c2df970d07cecd760c42205e68779e83",
        "patch": "@@ -469,6 +469,36 @@ UniValue verifychain(const UniValue& params, bool fHelp)\n     return CVerifyDB().VerifyDB(pcoinsTip, nCheckLevel, nCheckDepth);\n }\n \n+/** Implementation of IsSuperMajority with better feedback */\n+static UniValue SoftForkMajorityDesc(int minVersion, CBlockIndex* pindex, int nRequired, const Consensus::Params& consensusParams)\n+{\n+    int nFound = 0;\n+    CBlockIndex* pstart = pindex;\n+    for (int i = 0; i < consensusParams.nMajorityWindow && pstart != NULL; i++)\n+    {\n+        if (pstart->nVersion >= minVersion)\n+            ++nFound;\n+        pstart = pstart->pprev;\n+    }\n+\n+    UniValue rv(UniValue::VOBJ);\n+    rv.push_back(Pair(\"status\", nFound >= nRequired));\n+    rv.push_back(Pair(\"found\", nFound));\n+    rv.push_back(Pair(\"required\", nRequired));\n+    rv.push_back(Pair(\"window\", consensusParams.nMajorityWindow));\n+    return rv;\n+}\n+\n+static UniValue SoftForkDesc(const std::string &name, int version, CBlockIndex* pindex, const Consensus::Params& consensusParams)\n+{\n+    UniValue rv(UniValue::VOBJ);\n+    rv.push_back(Pair(\"id\", name));\n+    rv.push_back(Pair(\"version\", version));\n+    rv.push_back(Pair(\"enforce\", SoftForkMajorityDesc(version, pindex, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams)));\n+    rv.push_back(Pair(\"reject\", SoftForkMajorityDesc(version, pindex, consensusParams.nMajorityRejectBlockOutdated, consensusParams)));\n+    return rv;\n+}\n+\n UniValue getblockchaininfo(const UniValue& params, bool fHelp)\n {\n     if (fHelp || params.size() != 0)\n@@ -484,6 +514,19 @@ UniValue getblockchaininfo(const UniValue& params, bool fHelp)\n             \"  \\\"difficulty\\\": xxxxxx,     (numeric) the current difficulty\\n\"\n             \"  \\\"verificationprogress\\\": xxxx, (numeric) estimate of verification progress [0..1]\\n\"\n             \"  \\\"chainwork\\\": \\\"xxxx\\\"     (string) total amount of work in active chain, in hexadecimal\\n\"\n+            \"  \\\"softforks\\\": [            (array) status of softforks in progress\\n\"\n+            \"     {\\n\"\n+            \"        \\\"id\\\": \\\"xxxx\\\",        (string) name of softfork\\n\"\n+            \"        \\\"version\\\": xx,         (numeric) block version\\n\"\n+            \"        \\\"enforce\\\": {           (object) progress toward enforcing the softfork rules for new-version blocks\\n\"\n+            \"           \\\"status\\\": xx,       (boolean) true if threshold reached\\n\"\n+            \"           \\\"found\\\": xx,        (numeric) number of blocks with the new version found\\n\"\n+            \"           \\\"required\\\": xx,     (numeric) number of blocks required to trigger\\n\"\n+            \"           \\\"window\\\": xx,       (numeric) maximum size of examined window of recent blocks\\n\"\n+            \"        },\\n\"\n+            \"        \\\"reject\\\": { ... }      (object) progress toward rejecting pre-softfork blocks (same fields as \\\"enforce\\\")\\n\"\n+            \"     }, ...\\n\"\n+            \"  ]\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getblockchaininfo\", \"\")\n@@ -501,6 +544,14 @@ UniValue getblockchaininfo(const UniValue& params, bool fHelp)\n     obj.push_back(Pair(\"verificationprogress\",  Checkpoints::GuessVerificationProgress(Params().Checkpoints(), chainActive.Tip())));\n     obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     obj.push_back(Pair(\"pruned\",                fPruneMode));\n+\n+    const Consensus::Params& consensusParams = Params().GetConsensus();\n+    CBlockIndex* tip = chainActive.Tip();\n+    UniValue softforks(UniValue::VARR);\n+    softforks.push_back(SoftForkDesc(\"bip34\", 2, tip, consensusParams));\n+    softforks.push_back(SoftForkDesc(\"bip66\", 3, tip, consensusParams));\n+    obj.push_back(Pair(\"softforks\",             softforks));\n+\n     if (fPruneMode)\n     {\n         CBlockIndex *block = chainActive.Tip();"
      }
    ]
  }
]