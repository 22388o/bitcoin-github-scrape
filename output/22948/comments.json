[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917420245",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#issuecomment-917420245",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22948",
    "id": 917420245,
    "node_id": "IC_kwDOABII5842rrjV",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-11T14:53:11Z",
    "updated_at": "2021-09-11T14:53:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "If anyone doesn't like the submask code, I could swap it for this algorithm (which is more efficient but not-obvious)  https://cp-algorithms.com/algebra/all-submasks.html#toc-tgt-0",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917420245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917659491",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#issuecomment-917659491",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22948",
    "id": 917659491,
    "node_id": "IC_kwDOABII5842sl9j",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-12T15:40:06Z",
    "updated_at": "2021-09-12T15:40:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22954](https://github.com/bitcoin/bitcoin/pull/22954) ([TESTS] Allow tx_invalid.json tests to include flag rules for if_unset: [A,B,C] then_unset: [D] by JeremyRubin)\n* [#22876](https://github.com/bitcoin/bitcoin/pull/22876) ([TESTS] Update Transaction Tests to permit setting a flag as always on and disabling the exhaustive failure test by JeremyRubin)\n* [#21702](https://github.com/bitcoin/bitcoin/pull/21702) (Implement BIP-119 Validation (CheckTemplateVerify) by JeremyRubin)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917659491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917692386",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#issuecomment-917692386",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22948",
    "id": 917692386,
    "node_id": "IC_kwDOABII5842st_i",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-12T19:06:20Z",
    "updated_at": "2021-09-12T19:06:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added the textbook algorithm for this: feel free to test that the output is the same then I can squash.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917692386/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/918126894",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#issuecomment-918126894",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22948",
    "id": 918126894,
    "node_id": "IC_kwDOABII5842uYEu",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-13T12:08:43Z",
    "updated_at": "2021-09-13T12:17:22Z",
    "author_association": "MEMBER",
    "body": "@JeremyRubin Nice. The textbook algorithm produces the same values in the tx_invalid test but fewer values in the tx_valid test. Among the values that it does not return compared to your algo, only 2 or 3 of them are unique. WDYT?\r\n\r\n\r\n<details><summary>FancyPants version</summary><p>\r\n\r\n```\r\ntest/transaction_tests.cpp(194): Entering test case \"tx_valid\"\r\n0\r\n2\r\n4\r\n6\r\n8\r\n10\r\n12\r\n0\r\n2\r\n4\r\n6\r\n8\r\n10\r\n12\r\n0\r\n2\r\n4\r\n6\r\n8\r\n10\r\n12\r\n14\r\n16\r\n18\r\n20\r\n22\r\n24\r\n26\r\n28\r\n0\r\n2\r\n4\r\n6\r\n8\r\n10\r\n12\r\n14\r\n16\r\n18\r\n20\r\n22\r\n24\r\n26\r\n28\r\n0\r\n2\r\n4\r\n6\r\n8\r\n10\r\n12\r\n14\r\n16\r\n18\r\n20\r\n22\r\n24\r\n26\r\n28\r\n0\r\n2\r\n8\r\n0\r\n0\r\n2\r\n4\r\n6\r\n8\r\n10\r\n12\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n2\r\n16384\r\n0\r\n0\r\n0\r\n0\r\n8\r\n65536\r\n0\r\n8\r\n65536\r\n0\r\n8\r\n65536\r\n0\r\n8\r\n65536\r\n0\r\n8\r\n65536\r\n0\r\n0\r\n8\r\n32\r\n40\r\n65536\r\n65544\r\n65568\r\n0\r\n8\r\n32\r\n40\r\n65536\r\n65544\r\n65568\r\n0\r\n32\r\n65536\r\n0\r\n8\r\n32\r\n40\r\n65536\r\n65544\r\n65568\r\n0\r\n8\r\n65536\r\n0\r\n8\r\n65536\r\n0\r\n0\r\n0\r\n2\r\n4\r\n6\r\n8\r\n10\r\n12\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n8\r\n65536\r\n0\r\n0\r\n8\r\n65536\r\n0\r\ntest/transaction_tests.cpp(194): Leaving test case \"tx_valid\"; testing time: 597522us\r\ntest/transaction_tests.cpp(284): Entering test case \"tx_invalid\"\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n512\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n1024\r\n0\r\n0\r\n0\r\n1\r\n2049\r\n4096\r\n4097\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n2049\r\n4096\r\n4097\r\n0\r\n0\r\n1\r\n0\r\n0\r\n1\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n65536\r\n0\r\ntest/transaction_tests.cpp(284): Leaving test case \"tx_invalid\"; testing time: 170187us\r\n```\r\n</p></details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/918126894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/949881158",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#issuecomment-949881158",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22948",
    "id": 949881158,
    "node_id": "IC_kwDOABII5844nglG",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-22T18:45:45Z",
    "updated_at": "2021-10-22T18:45:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing this for now -- needs more research/discussion on how to accomplish actually using the powerset properly, see https://github.com/bitcoin/bitcoin/pull/22948#discussion_r708517078",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/949881158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706516144",
    "pull_request_review_id": 751852066,
    "id": 706516144,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjUxNjE0NA==",
    "diff_hunk": "@@ -174,9 +174,29 @@ unsigned int FillFlags(unsigned int flags)\n // Assumes that mapFlagNames contains all script verify flags.\n std::set<unsigned int> ExcludeIndividualFlags(unsigned int flags)\n {\n+    std::vector<unsigned int> set_flags;\n+    const size_t n_flags = sizeof(unsigned int);\n+    set_flags.reserve(n_flags);\n+    for (size_t i = 0; i < n_flags; ++i) {\n+        auto flag = flags & (1 << i);\n+        if (flag) {\n+            set_flags.push_back(flag);\n+        }\n+    }\n+    const auto combos = 1 << set_flags.size();\n+    // skip last all set flags\n+    std::vector<unsigned int> all_flag_combos(combos-1);\n+    for (size_t i = 0; i < combos-1; ++i){\n+        for(size_t j = 0; j < set_flags.size(); ++j) {\n+            if (i & (1<<j)) {\n+                all_flag_combos[i] |= set_flags[j];\n+            }\n+        }\n+    }\n+\n     std::set<unsigned int> flags_combos;\n-    for (const auto& pair : mapFlagNames) {\n-        const unsigned int flags_excluding_one = TrimFlags(flags & ~(pair.second));\n+    for (const auto& excluded_flags : all_flag_combos) {\n+        const unsigned int flags_excluding_one = TrimFlags(excluded_flags);\n         if (flags != flags_excluding_one) {",
    "path": "src/test/transaction_tests.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "125fb1c8dce51b1992cee6aa2c5b6faa6bd97b1d",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "this check is actually probably superfluous with the iteration not including combos -1 (the all bits set).",
    "created_at": "2021-09-10T23:21:03Z",
    "updated_at": "2021-09-10T23:21:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706516144",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706516144"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706516144"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706516144/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 200,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706518296",
    "pull_request_review_id": 751854312,
    "id": 706518296,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjUxODI5Ng==",
    "diff_hunk": "@@ -174,9 +174,29 @@ unsigned int FillFlags(unsigned int flags)\n // Assumes that mapFlagNames contains all script verify flags.\n std::set<unsigned int> ExcludeIndividualFlags(unsigned int flags)\n {\n+    std::vector<unsigned int> set_flags;\n+    const size_t n_flags = sizeof(unsigned int);\n+    set_flags.reserve(n_flags);\n+    for (size_t i = 0; i < n_flags; ++i) {\n+        auto flag = flags & (1 << i);\n+        if (flag) {\n+            set_flags.push_back(flag);\n+        }\n+    }\n+    const auto combos = 1 << set_flags.size();\n+    // skip last all set flags\n+    std::vector<unsigned int> all_flag_combos(combos-1);\n+    for (size_t i = 0; i < combos-1; ++i){\n+        for(size_t j = 0; j < set_flags.size(); ++j) {\n+            if (i & (1<<j)) {\n+                all_flag_combos[i] |= set_flags[j];\n+            }\n+        }\n+    }\n+\n     std::set<unsigned int> flags_combos;\n-    for (const auto& pair : mapFlagNames) {\n-        const unsigned int flags_excluding_one = TrimFlags(flags & ~(pair.second));\n+    for (const auto& excluded_flags : all_flag_combos) {\n+        const unsigned int flags_excluding_one = TrimFlags(excluded_flags);\n         if (flags != flags_excluding_one) {",
    "path": "src/test/transaction_tests.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "125fb1c8dce51b1992cee6aa2c5b6faa6bd97b1d",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "update: it's not, because of the TrimFlags",
    "created_at": "2021-09-10T23:30:25Z",
    "updated_at": "2021-09-10T23:30:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706518296",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706518296"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706518296"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706518296/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 200,
    "side": "RIGHT",
    "in_reply_to_id": 706516144
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706728574",
    "pull_request_review_id": 752061278,
    "id": 706728574,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjcyODU3NA==",
    "diff_hunk": "@@ -174,9 +174,29 @@ unsigned int FillFlags(unsigned int flags)\n // Assumes that mapFlagNames contains all script verify flags.\n std::set<unsigned int> ExcludeIndividualFlags(unsigned int flags)\n {\n+    std::vector<unsigned int> set_flags;\n+    const size_t n_flags = sizeof(unsigned int);",
    "path": "src/test/transaction_tests.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "7812cff7c3cd90235c4d8d7a74901d81ac239128",
    "user": {
      "login": "esneider",
      "id": 667132,
      "node_id": "MDQ6VXNlcjY2NzEzMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/667132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esneider",
      "html_url": "https://github.com/esneider",
      "followers_url": "https://api.github.com/users/esneider/followers",
      "following_url": "https://api.github.com/users/esneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/esneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esneider/subscriptions",
      "organizations_url": "https://api.github.com/users/esneider/orgs",
      "repos_url": "https://api.github.com/users/esneider/repos",
      "events_url": "https://api.github.com/users/esneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think you might be missing a `* 8` here",
    "created_at": "2021-09-12T01:59:39Z",
    "updated_at": "2021-09-12T02:41:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706728574",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706728574"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706728574"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706728574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 178,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706729262",
    "pull_request_review_id": 752061278,
    "id": 706729262,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjcyOTI2Mg==",
    "diff_hunk": "@@ -174,9 +174,29 @@ unsigned int FillFlags(unsigned int flags)\n // Assumes that mapFlagNames contains all script verify flags.",
    "path": "src/test/transaction_tests.cpp",
    "position": 9,
    "original_position": 1,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "7812cff7c3cd90235c4d8d7a74901d81ac239128",
    "user": {
      "login": "esneider",
      "id": 667132,
      "node_id": "MDQ6VXNlcjY2NzEzMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/667132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esneider",
      "html_url": "https://github.com/esneider",
      "followers_url": "https://api.github.com/users/esneider/followers",
      "following_url": "https://api.github.com/users/esneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/esneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esneider/subscriptions",
      "organizations_url": "https://api.github.com/users/esneider/orgs",
      "repos_url": "https://api.github.com/users/esneider/repos",
      "events_url": "https://api.github.com/users/esneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The doc is out of date now",
    "created_at": "2021-09-12T02:08:10Z",
    "updated_at": "2021-09-12T02:41:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706729262",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706729262"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706729262"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706729262/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 173,
    "original_line": 173,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706730907",
    "pull_request_review_id": 752061278,
    "id": 706730907,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjczMDkwNw==",
    "diff_hunk": "@@ -174,9 +174,29 @@ unsigned int FillFlags(unsigned int flags)\n // Assumes that mapFlagNames contains all script verify flags.\n std::set<unsigned int> ExcludeIndividualFlags(unsigned int flags)\n {\n+    std::vector<unsigned int> set_flags;\n+    const size_t n_flags = sizeof(unsigned int);\n+    set_flags.reserve(n_flags);\n+    for (size_t i = 0; i < n_flags; ++i) {\n+        auto flag = flags & (1 << i);\n+        if (flag) {\n+            set_flags.push_back(flag);\n+        }\n+    }\n+    const auto combos = 1 << set_flags.size();\n+    // skip last all set flags\n+    std::vector<unsigned int> all_flag_combos(combos-1);\n+    for (size_t i = 0; i < combos-1; ++i){\n+        for(size_t j = 0; j < set_flags.size(); ++j) {\n+            if (i & (1<<j)) {\n+                all_flag_combos[i] |= set_flags[j];\n+            }\n+        }\n+    }\n+\n     std::set<unsigned int> flags_combos;\n-    for (const auto& pair : mapFlagNames) {\n-        const unsigned int flags_excluding_one = TrimFlags(flags & ~(pair.second));\n+    for (const auto& excluded_flags : all_flag_combos) {\n+        const unsigned int flags_excluding_one = TrimFlags(excluded_flags);\n         if (flags != flags_excluding_one) {",
    "path": "src/test/transaction_tests.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "125fb1c8dce51b1992cee6aa2c5b6faa6bd97b1d",
    "user": {
      "login": "esneider",
      "id": 667132,
      "node_id": "MDQ6VXNlcjY2NzEzMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/667132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esneider",
      "html_url": "https://github.com/esneider",
      "followers_url": "https://api.github.com/users/esneider/followers",
      "following_url": "https://api.github.com/users/esneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/esneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esneider/subscriptions",
      "organizations_url": "https://api.github.com/users/esneider/orgs",
      "repos_url": "https://api.github.com/users/esneider/repos",
      "events_url": "https://api.github.com/users/esneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Notice that `TrimFlags` only removes flags, so it is, indeed, superfluous:\r\n`flags_excluding_one \u2286 excluded_flags \u2282 flags`\r\n\r\nHaving said that, there's no harm in leaving it here.",
    "created_at": "2021-09-12T02:28:46Z",
    "updated_at": "2021-09-12T02:41:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706730907",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706730907"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706730907"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706730907/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 200,
    "side": "RIGHT",
    "in_reply_to_id": 706516144
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706731875",
    "pull_request_review_id": 752061278,
    "id": 706731875,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjczMTg3NQ==",
    "diff_hunk": "@@ -174,9 +174,29 @@ unsigned int FillFlags(unsigned int flags)\n // Assumes that mapFlagNames contains all script verify flags.\n std::set<unsigned int> ExcludeIndividualFlags(unsigned int flags)\n {\n+    std::vector<unsigned int> set_flags;\n+    const size_t n_flags = sizeof(unsigned int);\n+    set_flags.reserve(n_flags);\n+    for (size_t i = 0; i < n_flags; ++i) {\n+        const unsigned int flag = flags & (1 << i);\n+        if (flag) {\n+            set_flags.push_back(flag);\n+        }\n+    }\n+    const size_t combos = 1 << set_flags.size();\n+    // skip last all set flags\n+    std::vector<unsigned int> all_flag_combos(combos-1);\n+    for (size_t i = 0; i < combos-1; ++i){\n+        for(size_t j = 0; j < set_flags.size(); ++j) {\n+            if (i & (1<<j)) {\n+                all_flag_combos[i] |= set_flags[j];\n+            }\n+        }\n+    }\n+\n     std::set<unsigned int> flags_combos;\n-    for (const auto& pair : mapFlagNames) {\n-        const unsigned int flags_excluding_one = TrimFlags(flags & ~(pair.second));\n+    for (const unsigned int excluded_flags : all_flag_combos) {\n+        const unsigned int flags_excluding_one = TrimFlags(excluded_flags);\n         if (flags != flags_excluding_one) {\n             flags_combos.insert(flags_excluding_one);\n         }",
    "path": "src/test/transaction_tests.cpp",
    "position": null,
    "original_position": 31,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "7812cff7c3cd90235c4d8d7a74901d81ac239128",
    "user": {
      "login": "esneider",
      "id": 667132,
      "node_id": "MDQ6VXNlcjY2NzEzMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/667132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esneider",
      "html_url": "https://github.com/esneider",
      "followers_url": "https://api.github.com/users/esneider/followers",
      "following_url": "https://api.github.com/users/esneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/esneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esneider/subscriptions",
      "organizations_url": "https://api.github.com/users/esneider/orgs",
      "repos_url": "https://api.github.com/users/esneider/repos",
      "events_url": "https://api.github.com/users/esneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not sure if this is a problem, but notice that `TrimFlags` might cause the resulting `flag_combos` to have duplicate elements.\r\n\r\nEg, if `SCRIPT_VERIFY_P2SH` and `SCRIPT_VERIFY_WITNESS` are set in `flags`, the mapping done by `TrimFlags` will make 25% of the resulting elements duplicates.",
    "created_at": "2021-09-12T02:40:41Z",
    "updated_at": "2021-09-12T02:41:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706731875",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706731875"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706731875"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706731875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 202,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706767923",
    "pull_request_review_id": 752095910,
    "id": 706767923,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjc2NzkyMw==",
    "diff_hunk": "@@ -174,9 +174,29 @@ unsigned int FillFlags(unsigned int flags)\n // Assumes that mapFlagNames contains all script verify flags.\n std::set<unsigned int> ExcludeIndividualFlags(unsigned int flags)\n {\n+    std::vector<unsigned int> set_flags;\n+    const size_t n_flags = sizeof(unsigned int);",
    "path": "src/test/transaction_tests.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "7812cff7c3cd90235c4d8d7a74901d81ac239128",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\ud83e\udd26 --> will fix",
    "created_at": "2021-09-12T06:06:59Z",
    "updated_at": "2021-09-12T06:06:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706767923",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706767923"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706767923"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706767923/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 178,
    "side": "RIGHT",
    "in_reply_to_id": 706728574
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706768096",
    "pull_request_review_id": 752096007,
    "id": 706768096,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjc2ODA5Ng==",
    "diff_hunk": "@@ -174,9 +174,29 @@ unsigned int FillFlags(unsigned int flags)\n // Assumes that mapFlagNames contains all script verify flags.\n std::set<unsigned int> ExcludeIndividualFlags(unsigned int flags)\n {\n+    std::vector<unsigned int> set_flags;\n+    const size_t n_flags = sizeof(unsigned int);\n+    set_flags.reserve(n_flags);\n+    for (size_t i = 0; i < n_flags; ++i) {\n+        const unsigned int flag = flags & (1 << i);\n+        if (flag) {\n+            set_flags.push_back(flag);\n+        }\n+    }\n+    const size_t combos = 1 << set_flags.size();\n+    // skip last all set flags\n+    std::vector<unsigned int> all_flag_combos(combos-1);\n+    for (size_t i = 0; i < combos-1; ++i){\n+        for(size_t j = 0; j < set_flags.size(); ++j) {\n+            if (i & (1<<j)) {\n+                all_flag_combos[i] |= set_flags[j];\n+            }\n+        }\n+    }\n+\n     std::set<unsigned int> flags_combos;\n-    for (const auto& pair : mapFlagNames) {\n-        const unsigned int flags_excluding_one = TrimFlags(flags & ~(pair.second));\n+    for (const unsigned int excluded_flags : all_flag_combos) {\n+        const unsigned int flags_excluding_one = TrimFlags(excluded_flags);\n         if (flags != flags_excluding_one) {\n             flags_combos.insert(flags_excluding_one);\n         }",
    "path": "src/test/transaction_tests.cpp",
    "position": null,
    "original_position": 31,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "7812cff7c3cd90235c4d8d7a74901d81ac239128",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "yeah I could do a de-dup pass with TrimFlags. It makes more sense IMO to keep TrimFlags even if superfluos with the above as TrimFlags is a separate validity of flag combo check v.s. the dumb subset generator.",
    "created_at": "2021-09-12T06:08:35Z",
    "updated_at": "2021-09-12T06:08:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706768096",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706768096"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706768096"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706768096/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 202,
    "side": "RIGHT",
    "in_reply_to_id": 706731875
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706768676",
    "pull_request_review_id": 752096376,
    "id": 706768676,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjc2ODY3Ng==",
    "diff_hunk": "@@ -174,9 +174,29 @@ unsigned int FillFlags(unsigned int flags)\n // Assumes that mapFlagNames contains all script verify flags.",
    "path": "src/test/transaction_tests.cpp",
    "position": 9,
    "original_position": 1,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "7812cff7c3cd90235c4d8d7a74901d81ac239128",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "i can't tell what line you are commenting on",
    "created_at": "2021-09-12T06:13:53Z",
    "updated_at": "2021-09-12T06:13:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706768676",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706768676"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706768676"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706768676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 173,
    "original_line": 173,
    "side": "RIGHT",
    "in_reply_to_id": 706729262
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706770414",
    "pull_request_review_id": 752097399,
    "id": 706770414,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjc3MDQxNA==",
    "diff_hunk": "@@ -174,9 +174,29 @@ unsigned int FillFlags(unsigned int flags)\n // Assumes that mapFlagNames contains all script verify flags.",
    "path": "src/test/transaction_tests.cpp",
    "position": 9,
    "original_position": 1,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "7812cff7c3cd90235c4d8d7a74901d81ac239128",
    "user": {
      "login": "esneider",
      "id": 667132,
      "node_id": "MDQ6VXNlcjY2NzEzMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/667132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esneider",
      "html_url": "https://github.com/esneider",
      "followers_url": "https://api.github.com/users/esneider/followers",
      "following_url": "https://api.github.com/users/esneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/esneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esneider/subscriptions",
      "organizations_url": "https://api.github.com/users/esneider/orgs",
      "repos_url": "https://api.github.com/users/esneider/repos",
      "events_url": "https://api.github.com/users/esneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right, sorry about that.\r\n```c\r\n// Exclude each possible script verify flag from flags. Returns a set of these flag combinations\r\n// that are valid and without duplicates. For example: if flags=1111 and the 4 possible flags are\r\n// 0001, 0010, 0100, and 1000, this should return the set {0111, 1011, 1101, 1110}.\r\n```",
    "created_at": "2021-09-12T06:30:55Z",
    "updated_at": "2021-09-12T06:30:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706770414",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706770414"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706770414"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706770414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 173,
    "original_line": 173,
    "side": "RIGHT",
    "in_reply_to_id": 706729262
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706849538",
    "pull_request_review_id": 752167645,
    "id": 706849538,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjg0OTUzOA==",
    "diff_hunk": "@@ -168,19 +168,36 @@ unsigned int FillFlags(unsigned int flags)\n     return flags;\n }\n \n-// Exclude each possible script verify flag from flags. Returns a set of these flag combinations\n-// that are valid and without duplicates. For example: if flags=1111 and the 4 possible flags are\n-// 0001, 0010, 0100, and 1000, this should return the set {0111, 1011, 1101, 1110}.\n+// Exclude each possible script verify flag from flags. Returns a set of all\n+// submasks.\n // Assumes that mapFlagNames contains all script verify flags.\n-std::set<unsigned int> ExcludeIndividualFlags(unsigned int flags)\n+std::set<unsigned int> GenerateAllSubMasks(unsigned int flags)\n {\n-    std::set<unsigned int> flags_combos;\n-    for (const auto& pair : mapFlagNames) {\n-        const unsigned int flags_excluding_one = TrimFlags(flags & ~(pair.second));\n-        if (flags != flags_excluding_one) {\n-            flags_combos.insert(flags_excluding_one);\n+    std::vector<unsigned int> set_flags;\n+    const size_t n_flags = sizeof(unsigned int)*8;\n+    set_flags.reserve(n_flags);\n+    for (size_t i = 0; i < n_flags; ++i) {\n+        const unsigned int flag = flags & (1 << i);\n+        if (flag) {\n+            set_flags.push_back(flag);\n+        }\n+    }\n+    const size_t combos = 1 << set_flags.size();\n+    // skip last all set flags\n+    std::vector<unsigned int> all_flag_combos(combos-1);\n+    for (size_t i = 0; i < combos-1; ++i){\n+        for(size_t j = 0; j < set_flags.size(); ++j) {\n+            if (i & (1<<j)) {\n+                all_flag_combos[i] |= set_flags[j];\n+            }\n         }\n     }\n+\n+    std::set<unsigned int> flags_combos;\n+    for (const unsigned int submask : all_flag_combos) {\n+        flags_combos.insert(TrimFlags(submask));\n+    }\n+    flags_combos.erase(flags);",
    "path": "src/test/transaction_tests.cpp",
    "position": null,
    "original_position": 42,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "885bf41580c7a7043cc3445179c76aec3dca38c6",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, clang-format\r\n```diff\r\n@@ -174,7 +174,7 @@ unsigned int FillFlags(unsigned int flags)\r\n std::set<unsigned int> GenerateAllSubMasks(unsigned int flags)\r\n {\r\n     std::vector<unsigned int> set_flags;\r\n-    const size_t n_flags = sizeof(unsigned int)*8;\r\n+    const size_t n_flags = sizeof(unsigned int) * 8;\r\n     set_flags.reserve(n_flags);\r\n@@ -184,10 +184,10 @@ std::set<unsigned int> GenerateAllSubMasks(unsigned int flags)\r\n     }\r\n     const size_t combos = 1 << set_flags.size();\r\n     // skip last all set flags\r\n-    std::vector<unsigned int> all_flag_combos(combos-1);\r\n-    for (size_t i = 0; i < combos-1; ++i){\r\n-        for(size_t j = 0; j < set_flags.size(); ++j) {\r\n-            if (i & (1<<j)) {\r\n+    std::vector<unsigned int> all_flag_combos(combos - 1);\r\n+    for (size_t i = 0; i < combos - 1; ++i) {\r\n+        for (size_t j = 0; j < set_flags.size(); ++j) {\r\n+            if (i & (1 << j)) {\r\n                 all_flag_combos[i] |= set_flags[j];\r\n```\r\n",
    "created_at": "2021-09-12T14:53:17Z",
    "updated_at": "2021-09-12T15:32:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706849538",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706849538"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706849538"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706849538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 200,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706850182",
    "pull_request_review_id": 752167645,
    "id": 706850182,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjg1MDE4Mg==",
    "diff_hunk": "@@ -168,19 +168,36 @@ unsigned int FillFlags(unsigned int flags)\n     return flags;\n }\n \n-// Exclude each possible script verify flag from flags. Returns a set of these flag combinations\n-// that are valid and without duplicates. For example: if flags=1111 and the 4 possible flags are\n-// 0001, 0010, 0100, and 1000, this should return the set {0111, 1011, 1101, 1110}.\n+// Exclude each possible script verify flag from flags. Returns a set of all\n+// submasks.\n // Assumes that mapFlagNames contains all script verify flags.\n-std::set<unsigned int> ExcludeIndividualFlags(unsigned int flags)\n+std::set<unsigned int> GenerateAllSubMasks(unsigned int flags)\n {\n-    std::set<unsigned int> flags_combos;\n-    for (const auto& pair : mapFlagNames) {\n-        const unsigned int flags_excluding_one = TrimFlags(flags & ~(pair.second));\n-        if (flags != flags_excluding_one) {\n-            flags_combos.insert(flags_excluding_one);\n+    std::vector<unsigned int> set_flags;\n+    const size_t n_flags = sizeof(unsigned int)*8;\n+    set_flags.reserve(n_flags);\n+    for (size_t i = 0; i < n_flags; ++i) {\n+        const unsigned int flag = flags & (1 << i);",
    "path": "src/test/transaction_tests.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "885bf41580c7a7043cc3445179c76aec3dca38c6",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, can use braced initialization on these for type safety\r\n```diff\r\n-    const size_t n_flags = sizeof(unsigned int)*8;\r\n+    const size_t n_flags{sizeof(unsigned int) * 8};\r\n     set_flags.reserve(n_flags);\r\n     for (size_t i = 0; i < n_flags; ++i) {\r\n-        const unsigned int flag = flags & (1 << i);\r\n+        const unsigned int flag{flags & (1 << i)};\r\n```\r\n",
    "created_at": "2021-09-12T14:58:26Z",
    "updated_at": "2021-09-12T15:32:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706850182",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706850182"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706850182"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706850182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 180,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706850718",
    "pull_request_review_id": 752167645,
    "id": 706850718,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjg1MDcxOA==",
    "diff_hunk": "@@ -168,19 +168,36 @@ unsigned int FillFlags(unsigned int flags)\n     return flags;\n }\n \n-// Exclude each possible script verify flag from flags. Returns a set of these flag combinations\n-// that are valid and without duplicates. For example: if flags=1111 and the 4 possible flags are\n-// 0001, 0010, 0100, and 1000, this should return the set {0111, 1011, 1101, 1110}.\n+// Exclude each possible script verify flag from flags. Returns a set of all\n+// submasks.\n // Assumes that mapFlagNames contains all script verify flags.\n-std::set<unsigned int> ExcludeIndividualFlags(unsigned int flags)\n+std::set<unsigned int> GenerateAllSubMasks(unsigned int flags)\n {\n-    std::set<unsigned int> flags_combos;\n-    for (const auto& pair : mapFlagNames) {\n-        const unsigned int flags_excluding_one = TrimFlags(flags & ~(pair.second));\n-        if (flags != flags_excluding_one) {\n-            flags_combos.insert(flags_excluding_one);\n+    std::vector<unsigned int> set_flags;\n+    const size_t n_flags = sizeof(unsigned int)*8;\n+    set_flags.reserve(n_flags);\n+    for (size_t i = 0; i < n_flags; ++i) {\n+        const unsigned int flag = flags & (1 << i);\n+        if (flag) {\n+            set_flags.push_back(flag);\n+        }\n+    }\n+    const size_t combos = 1 << set_flags.size();\n+    // skip last all set flags\n+    std::vector<unsigned int> all_flag_combos(combos-1);\n+    for (size_t i = 0; i < combos-1; ++i){",
    "path": "src/test/transaction_tests.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "885bf41580c7a7043cc3445179c76aec3dca38c6",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "maybe hoist subtracting one to the declaration of `combos`\r\n```diff\r\n-    const size_t combos = 1 << set_flags.size();\r\n+    const size_t combos = (1 << set_flags.size()) - 1;\r\n     // skip last all set flags\r\n-    std::vector<unsigned int> all_flag_combos(combos-1);\r\n-    for (size_t i = 0; i < combos-1; ++i){\r\n+    std::vector<unsigned int> all_flag_combos(combos);\r\n+    for (size_t i = 0; i < combos; ++i) {\r\n```\r\n",
    "created_at": "2021-09-12T15:02:30Z",
    "updated_at": "2021-09-12T15:32:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706850718",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706850718"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r706850718"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/706850718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 188,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707906373",
    "pull_request_review_id": 753468165,
    "id": 707906373,
    "node_id": "PRRC_kwDOABII584qMctF",
    "diff_hunk": "@@ -266,8 +271,8 @@ BOOST_AUTO_TEST_CASE(tx_valid)\n             }\n \n             // Check that flags are maximal: transaction should fail if any unset flags are set.\n-            for (auto flags_excluding_one : ExcludeIndividualFlags(verify_flags)) {\n-                if (!CheckTxScripts(tx, mapprevOutScriptPubKeys, mapprevOutValues, ~flags_excluding_one, txdata, strTest, /* expect_valid */ false)) {\n+            for (auto submask_flags : GenerateAllSubMasks(verify_flags)) {\n+                if (!CheckTxScripts(tx, mapprevOutScriptPubKeys, mapprevOutValues, ~submask_flags, txdata, strTest, /* expect_valid */ false)) {\n                     BOOST_ERROR(\"Too many flags unset: \" << strTest);\n                 }\n             }",
    "path": "src/test/transaction_tests.cpp",
    "position": 45,
    "original_position": 45,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "user": {
      "login": "esneider",
      "id": 667132,
      "node_id": "MDQ6VXNlcjY2NzEzMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/667132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esneider",
      "html_url": "https://github.com/esneider",
      "followers_url": "https://api.github.com/users/esneider/followers",
      "following_url": "https://api.github.com/users/esneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/esneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esneider/subscriptions",
      "organizations_url": "https://api.github.com/users/esneider/orgs",
      "repos_url": "https://api.github.com/users/esneider/repos",
      "events_url": "https://api.github.com/users/esneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If I understand the intent of this code correctly, the idea is that given a set of chosen flags, we want to check that every possible superset of flags doesn't succeed. If that's so, I believe there's a problem with the current `FlipAll( GenerateAllSubMasks( flags ) )` logic for computing all possible supersets.\r\n\r\nEg, assuming 3-bit words, for `flags = 100`, we'll generate all `flags` sub masks `{000}`, and then flip them `{111}`. However, what we really want is to generate all the `~flags = 011` sub masks `{010, 001, 000}`, and then flip them `{101, 110, 111}`.\r\n\r\nIn short, there's a missing bit flip before computing all the sub masks. Ie. it should be\r\n```\r\nFlipAll( GenerateAllSubMasks( ~flags ) )\r\n```\r\n\r\nWith that said, there's still the issue that flipping flag bits doesn't interact well with the `TrimFlags` operation done inside `GenerateAllSubMasks`.\r\n\r\nEg. if the only flag bits were`VERIFY_P2SH` and `VERIFY_WITNESS` (in that order), for `flags = 00` we'd generate all the `~flags = 11` sub masks `{10, 01, 00}`, trim them `{10, 00, 00}` (`01` is mapped to `00`), remove duplicates `{10, 00}`, and finally flip them `{01, 11}`. However, we ended up with an invalid combination (`01`) when the correct result would have been `{10, 11}`.\r\n\r\nMore generally, after fixing the initial missing flip, the code would look something like\r\n```\r\nFlipAll( Unique( TrimFlags( GenerateAllSubMasksWithoutTrimming( ~flags ) ) ) )\r\n```\r\nwhen what we really want is something like:\r\n```\r\nfor flag_superset in FlipAll( GenerateAllSubMasksWithoutTrimming( ~flags ) ) ) ):\r\n    if flag_superset == TrimFlags( flag_superset ):\r\n        # use flag_superset\r\n```",
    "created_at": "2021-09-14T04:48:09Z",
    "updated_at": "2021-09-14T04:48:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r707906373",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707906373"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r707906373"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/707906373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 273,
    "original_start_line": 273,
    "start_side": "RIGHT",
    "line": 278,
    "original_line": 278,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708517078",
    "pull_request_review_id": 754277242,
    "id": 708517078,
    "node_id": "PRRC_kwDOABII584qOxzW",
    "diff_hunk": "@@ -266,8 +271,8 @@ BOOST_AUTO_TEST_CASE(tx_valid)\n             }\n \n             // Check that flags are maximal: transaction should fail if any unset flags are set.\n-            for (auto flags_excluding_one : ExcludeIndividualFlags(verify_flags)) {\n-                if (!CheckTxScripts(tx, mapprevOutScriptPubKeys, mapprevOutValues, ~flags_excluding_one, txdata, strTest, /* expect_valid */ false)) {\n+            for (auto submask_flags : GenerateAllSubMasks(verify_flags)) {\n+                if (!CheckTxScripts(tx, mapprevOutScriptPubKeys, mapprevOutValues, ~submask_flags, txdata, strTest, /* expect_valid */ false)) {\n                     BOOST_ERROR(\"Too many flags unset: \" << strTest);\n                 }\n             }",
    "path": "src/test/transaction_tests.cpp",
    "position": 45,
    "original_position": 45,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "yeah you're totally right; i've been playing with it a bit as well and noticed that it seems to not be quite right (thanks @jonatack for pointing it out).\r\n\r\nThe logic is definitely off, and I think it may be intractible in this case since GenerateAllSubMasksWithoutTrimming(~flags) ends up being pretty big... with 20 it might be ok, but eventually there would be too many flags.",
    "created_at": "2021-09-14T18:13:51Z",
    "updated_at": "2021-09-14T18:13:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r708517078",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708517078"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r708517078"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708517078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 273,
    "original_start_line": 273,
    "start_side": "RIGHT",
    "line": 278,
    "original_line": 278,
    "side": "RIGHT",
    "in_reply_to_id": 707906373
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708841974",
    "pull_request_review_id": 754667579,
    "id": 708841974,
    "node_id": "PRRC_kwDOABII584qQBH2",
    "diff_hunk": "@@ -266,8 +271,8 @@ BOOST_AUTO_TEST_CASE(tx_valid)\n             }\n \n             // Check that flags are maximal: transaction should fail if any unset flags are set.\n-            for (auto flags_excluding_one : ExcludeIndividualFlags(verify_flags)) {\n-                if (!CheckTxScripts(tx, mapprevOutScriptPubKeys, mapprevOutValues, ~flags_excluding_one, txdata, strTest, /* expect_valid */ false)) {\n+            for (auto submask_flags : GenerateAllSubMasks(verify_flags)) {\n+                if (!CheckTxScripts(tx, mapprevOutScriptPubKeys, mapprevOutValues, ~submask_flags, txdata, strTest, /* expect_valid */ false)) {\n                     BOOST_ERROR(\"Too many flags unset: \" << strTest);\n                 }\n             }",
    "path": "src/test/transaction_tests.cpp",
    "position": 45,
    "original_position": 45,
    "commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "original_commit_id": "d185f36ede51723edf63eb7ae72add70dfd1e4ae",
    "user": {
      "login": "esneider",
      "id": 667132,
      "node_id": "MDQ6VXNlcjY2NzEzMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/667132?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esneider",
      "html_url": "https://github.com/esneider",
      "followers_url": "https://api.github.com/users/esneider/followers",
      "following_url": "https://api.github.com/users/esneider/following{/other_user}",
      "gists_url": "https://api.github.com/users/esneider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esneider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esneider/subscriptions",
      "organizations_url": "https://api.github.com/users/esneider/orgs",
      "repos_url": "https://api.github.com/users/esneider/repos",
      "events_url": "https://api.github.com/users/esneider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esneider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Makes sense. Maybe bound the amount of flipped bits? That way you can test some flag interactions, but bound the exponential growth. The bounding capability would also help to put a safeguard against exponential explosion in the tx_invalid test if there are too many set bits in the initial mask.",
    "created_at": "2021-09-15T05:08:59Z",
    "updated_at": "2021-09-15T05:12:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r708841974",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708841974"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22948#discussion_r708841974"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22948"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/708841974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 273,
    "original_start_line": 273,
    "start_side": "RIGHT",
    "line": 278,
    "original_line": 278,
    "side": "RIGHT",
    "in_reply_to_id": 707906373
  }
]