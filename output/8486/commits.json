[
  {
    "sha": "faef293cf311a1063b31f90b645cb491d0140930",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWVmMjkzY2YzMTFhMTA2M2IzMWY5MGI2NDVjYjQ5MWQwMTQwOTMw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-01-08T00:14:09Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-09-25T23:11:27Z"
      },
      "message": "[wallet] Add high transaction fee warnings",
      "tree": {
        "sha": "bd67b895fce33411eb8a99cb18311ed3a39033ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd67b895fce33411eb8a99cb18311ed3a39033ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faef293cf311a1063b31f90b645cb491d0140930",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faef293cf311a1063b31f90b645cb491d0140930",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faef293cf311a1063b31f90b645cb491d0140930",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faef293cf311a1063b31f90b645cb491d0140930/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "24f72e9f3fd0ce64b944c2a474786f06ed5fa0fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24f72e9f3fd0ce64b944c2a474786f06ed5fa0fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/24f72e9f3fd0ce64b944c2a474786f06ed5fa0fd"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 24,
      "deletions": 8
    },
    "files": [
      {
        "sha": "b20675dd9e98100228c45a034d56dfc74cfd95f3",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faef293cf311a1063b31f90b645cb491d0140930/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faef293cf311a1063b31f90b645cb491d0140930/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=faef293cf311a1063b31f90b645cb491d0140930",
        "patch": "@@ -951,10 +951,10 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     if (mapArgs.count(\"-minrelaytxfee\"))\n     {\n         CAmount n = 0;\n-        if (ParseMoney(mapArgs[\"-minrelaytxfee\"], n) && n > 0)\n-            ::minRelayTxFee = CFeeRate(n);\n-        else\n+        if (!ParseMoney(mapArgs[\"-minrelaytxfee\"], n))\n             return InitError(AmountErrMsg(\"minrelaytxfee\", mapArgs[\"-minrelaytxfee\"]));\n+        // High fee check is done afterward in CWallet::ParameterInteraction()\n+        ::minRelayTxFee = CFeeRate(n);\n     }\n \n     fRequireStandard = !GetBoolArg(\"-acceptnonstdtxn\", !Params().RequireStandard());"
      },
      {
        "sha": "74a13e0e052bcb23a87d7a56b75a058e13ce22c9",
        "filename": "src/ui_interface.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faef293cf311a1063b31f90b645cb491d0140930/src/ui_interface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faef293cf311a1063b31f90b645cb491d0140930/src/ui_interface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.cpp?ref=faef293cf311a1063b31f90b645cb491d0140930",
        "patch": "@@ -18,6 +18,11 @@ void InitWarning(const std::string& str)\n     uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_WARNING);\n }\n \n+std::string AmountHighWarn(const std::string& optname)\n+{\n+    return strprintf(_(\"%s is set very high!\"), optname);\n+}\n+\n std::string AmountErrMsg(const char* const optname, const std::string& strValue)\n {\n     return strprintf(_(\"Invalid amount for -%s=<amount>: '%s'\"), optname, strValue);"
      },
      {
        "sha": "177ff238db8b37cf61e4d695b253e06ceeccc9fe",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faef293cf311a1063b31f90b645cb491d0140930/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faef293cf311a1063b31f90b645cb491d0140930/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=faef293cf311a1063b31f90b645cb491d0140930",
        "patch": "@@ -112,6 +112,8 @@ void InitWarning(const std::string& str);\n /** Show error message **/\n bool InitError(const std::string& str);\n \n+std::string AmountHighWarn(const std::string& optname);\n+\n std::string AmountErrMsg(const char* const optname, const std::string& strValue);\n \n extern CClientUIInterface uiInterface;"
      },
      {
        "sha": "50d63182ae181c971cff22a84b00a69775d2bcbc",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 5,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faef293cf311a1063b31f90b645cb491d0140930/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faef293cf311a1063b31f90b645cb491d0140930/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=faef293cf311a1063b31f90b645cb491d0140930",
        "patch": "@@ -3485,21 +3485,28 @@ bool CWallet::ParameterInteraction()\n     if (GetArg(\"-prune\", 0) && GetBoolArg(\"-rescan\", false))\n         return InitError(_(\"Rescans are not possible in pruned mode. You will need to use -reindex which will download the whole blockchain again.\"));\n \n+    if (::minRelayTxFee.GetFeePerK() > HIGH_TX_FEE_PER_KB)\n+        InitWarning(AmountHighWarn(\"-minrelaytxfee\") + \" \" +\n+                    _(\"The wallet will avoid paying less than the minimum relay fee.\"));\n+\n     if (mapArgs.count(\"-mintxfee\"))\n     {\n         CAmount n = 0;\n-        if (ParseMoney(mapArgs[\"-mintxfee\"], n) && n > 0)\n-            CWallet::minTxFee = CFeeRate(n);\n-        else\n+        if (!ParseMoney(mapArgs[\"-mintxfee\"], n))\n             return InitError(AmountErrMsg(\"mintxfee\", mapArgs[\"-mintxfee\"]));\n+        if (n > HIGH_TX_FEE_PER_KB)\n+            InitWarning(AmountHighWarn(\"-mintxfee\") + \" \" +\n+                        _(\"This is the minimum transaction fee you pay on every transaction.\"));\n+        CWallet::minTxFee = CFeeRate(n);\n     }\n     if (mapArgs.count(\"-fallbackfee\"))\n     {\n         CAmount nFeePerK = 0;\n         if (!ParseMoney(mapArgs[\"-fallbackfee\"], nFeePerK))\n             return InitError(strprintf(_(\"Invalid amount for -fallbackfee=<amount>: '%s'\"), mapArgs[\"-fallbackfee\"]));\n         if (nFeePerK > HIGH_TX_FEE_PER_KB)\n-            InitWarning(_(\"-fallbackfee is set very high! This is the transaction fee you may pay when fee estimates are not available.\"));\n+            InitWarning(AmountHighWarn(\"-fallbackfee\") + \" \" +\n+                        _(\"This is the transaction fee you may pay when fee estimates are not available.\"));\n         CWallet::fallbackFee = CFeeRate(nFeePerK);\n     }\n     if (mapArgs.count(\"-paytxfee\"))\n@@ -3508,7 +3515,9 @@ bool CWallet::ParameterInteraction()\n         if (!ParseMoney(mapArgs[\"-paytxfee\"], nFeePerK))\n             return InitError(AmountErrMsg(\"paytxfee\", mapArgs[\"-paytxfee\"]));\n         if (nFeePerK > HIGH_TX_FEE_PER_KB)\n-            InitWarning(_(\"-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n+            InitWarning(AmountHighWarn(\"-paytxfee\") + \" \" +\n+                        _(\"This is the transaction fee you will pay if you send a transaction.\"));\n+\n         payTxFee = CFeeRate(nFeePerK, 1000);\n         if (payTxFee < ::minRelayTxFee)\n         {"
      }
    ]
  }
]