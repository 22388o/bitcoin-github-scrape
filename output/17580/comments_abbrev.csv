hebasto,2019-11-24 20:14:02,Concept ACK,https://github.com/bitcoin/bitcoin/pull/17580#issuecomment-557923507,557923507,
DrahtBot,2019-11-24 23:52:57,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22766](https://github.com/bitcoin/bitcoin/pull/22766) (refactor: Clarify and disable unused ArgsManager flags by ryanofs",https://github.com/bitcoin/bitcoin/pull/17580#issuecomment-557942582,557942582,
promag,2019-12-22 22:10:11,"~~Wrong commit bcbbc48a1fe7273494738200d508affef40cb47b?~~ nevermind.\n\nConcept ACK.",https://github.com/bitcoin/bitcoin/pull/17580#issuecomment-568306905,568306905,
DrahtBot,2021-08-22 01:58:53,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/17580#issuecomment-903201190,903201190,
ajtowns,2020-01-09 04:04:09,"I don't think it makes sense to ever include any of the `ALLOW_ANY` types in `forbid` (if you don't want a string, then in reality you probably `require` a boolean eg), so having:\n\n```\n  constexpr unsigned int ALLOW_ANY_EQUIV = ALLOW_BOOL | ALLOW_INT | ALLOW_STRING;\n  \n  assert((forbid & ALLOW_ANY_EQUIV) == 0);\n  if (*flags & ALLOW_ANY) require &= ~ALLOW_ANY_EQUIV;\n\n  ..\n\n  ret",https://github.com/bitcoin/bitcoin/pull/17580#discussion_r364551281,364551281,src/util/system.cpp
ajtowns,2020-01-09 04:18:46,"I think it might be better to restructure the tests than have these special functions that tweak the flags. Maybe something like:\n\n```\nstr_config =\n   ""a=\n""\n   ""b=1\n""\n   ""c=foo\n""\n   ""noaaa=1\n""\n   ""r=0\n""\n   ""r=1\n""\n```\n\n(with a section as well to check overrides/repeats etc work correctly) and then try setting up all the args as `ALLOW_ANY` and check for appropriate err",https://github.com/bitcoin/bitcoin/pull/17580#discussion_r364553512,364553512,src/test/util_tests.cpp
ajtowns,2020-01-09 04:57:40,"`gArgs.IsArgSet(""-rpcauth"")` ?",https://github.com/bitcoin/bitcoin/pull/17580#discussion_r364559553,364559553,src/httprpc.cpp
ryanofsky,2020-01-09 20:23:27,"In commit ""refactor: Fix more ALLOW_LIST arguments"" (4bd1c3b1606021dff2b39a1927781b3c53428bbe)\n\n> `gArgs.IsArgSet(""-rpcauth"")` ?\n\nThat would do the wrong thing if the argument is negated. `IsArgSet` is generally broken and misused for list settings (and a lot of non-list settings), see #17783",https://github.com/bitcoin/bitcoin/pull/17580#discussion_r364943182,364943182,src/httprpc.cpp
ryanofsky,2020-01-09 20:23:37,"In commit ""refactor: Always enforce ALLOW_LIST in CheckArgFlags"" (4f3e5e9988280ac96b7979c352da218bbf939ed0)\n\n> I think it might be better to restructure the tests than have these special functions that tweak the flags.\n\nI'm not too inclined to want to restructure the tests, though I'd be happy to review a PR that did. I also wouldn't want to do it in this PR because I'd like the test chang",https://github.com/bitcoin/bitcoin/pull/17580#discussion_r364943251,364943251,src/test/util_tests.cpp
ryanofsky,2020-01-09 20:23:44,"In commit ""refactor: Always enforce ALLOW_LIST in CheckArgFlags"" (4f3e5e9988280ac96b7979c352da218bbf939ed0):\n\nI see your point that CheckArgFlags is never called forbidding bool/int/string flags, so no need to update `forbid` and probably no reason to even want to, so I could make a simplification along those lines. I think I will at least drop the `forbid &= ~ignore_types` line.",https://github.com/bitcoin/bitcoin/pull/17580#discussion_r364943290,364943290,src/util/system.cpp
