[
  {
    "sha": "78f4c8b98eada337346ffb206339c3ebae4ff43b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OGY0YzhiOThlYWRhMzM3MzQ2ZmZiMjA2MzM5YzNlYmFlNGZmNDNi",
    "commit": {
      "author": {
        "name": "Jameson Lopp",
        "email": "jameson@team.casa",
        "date": "2021-07-01T14:17:28Z"
      },
      "committer": {
        "name": "Jameson Lopp",
        "email": "jameson.lopp@gmail.com",
        "date": "2021-07-03T11:31:27Z"
      },
      "message": "prefer to use txindex if available for GetTransaction\n\nFixes #22382",
      "tree": {
        "sha": "5f08795aaacdf50ee7cf7d5481d5f0173fbaab20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5f08795aaacdf50ee7cf7d5481d5f0173fbaab20"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78f4c8b98eada337346ffb206339c3ebae4ff43b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEZ78xQc7ThCTV4LTpfhUiLXHG2f0FAmDgSpAACgkQfhUiLXHG\n2f0Rnw//QdQaOgDeEEKFGW6hANCJHoXDMU5SF91e/nJ2Fdk4O0sXBAZTYZfVEl8n\n61+culmYfVIT0ThRAmGDsoOOXIAVV8kedxghcEm29lYMP8PXA50VQOWAIh6MMKS0\nyT9yylzXOC6VM6qwzqCUPDjEzxhJGGxULbahH5Laawq33fc41rkDwceyRg1XArMt\nb3CrshdIcpp06MGgjxD5XjJoGkOLD/hZY2+xjRoA05cmRyZEJByU+2hp2UkuSseD\neec5iKThZGsdTr3Qo+GB1uqFI0Pgfd/Z3nU93Ej9Z97NuAmiQ9xTl69R5DiZIQxN\nwHWPXKersZIkTC6QU7hmXhcwRTzM/zx1CbmoZ5NqzrECfK+9CXssUFGq9roY/Y0G\npPbfWwFzFKvaKSAt6ZFYjR36y5oQfqY0MkVFgctsdr+eL0euiejVIfleJMHPZq4S\nFL6ak8LhYBEbSw31h7/scaIs/4kkgjfu/A+ZL3svkDu2zfpTJov64cEWl7NWg4yO\n5I4gEINXW4T++4R7TSI3BY2thhfbgJsV8UnipFkgfzGHQXtg+IOX05RwBukRlRgm\nHc5p1Sie7MGmtFEEPsuQtaQ1YC+tNzs8GonrQd/vb/f4YW8FtNKI6+7jqc/fuIfw\nYoOrTfzQ4meWgfjRHgRBr/vtKV707tS9P0uYRsTxgSOzw/EJYu4=\n=8mDL\n-----END PGP SIGNATURE-----",
        "payload": "tree 5f08795aaacdf50ee7cf7d5481d5f0173fbaab20\nparent 2749613020ed96a4e9204f8b98c44524b0a62d0d\nauthor Jameson Lopp <jameson@team.casa> 1625149048 -0400\ncommitter Jameson Lopp <jameson.lopp@gmail.com> 1625311887 -0400\n\nprefer to use txindex if available for GetTransaction\n\nFixes #22382\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78f4c8b98eada337346ffb206339c3ebae4ff43b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78f4c8b98eada337346ffb206339c3ebae4ff43b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78f4c8b98eada337346ffb206339c3ebae4ff43b/comments",
    "author": {
      "login": "jlopp",
      "id": 288011,
      "node_id": "MDQ6VXNlcjI4ODAxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/288011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlopp",
      "html_url": "https://github.com/jlopp",
      "followers_url": "https://api.github.com/users/jlopp/followers",
      "following_url": "https://api.github.com/users/jlopp/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlopp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlopp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlopp/subscriptions",
      "organizations_url": "https://api.github.com/users/jlopp/orgs",
      "repos_url": "https://api.github.com/users/jlopp/repos",
      "events_url": "https://api.github.com/users/jlopp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlopp/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jlopp",
      "id": 288011,
      "node_id": "MDQ6VXNlcjI4ODAxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/288011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlopp",
      "html_url": "https://github.com/jlopp",
      "followers_url": "https://api.github.com/users/jlopp/followers",
      "following_url": "https://api.github.com/users/jlopp/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlopp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlopp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlopp/subscriptions",
      "organizations_url": "https://api.github.com/users/jlopp/orgs",
      "repos_url": "https://api.github.com/users/jlopp/repos",
      "events_url": "https://api.github.com/users/jlopp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlopp/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2749613020ed96a4e9204f8b98c44524b0a62d0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2749613020ed96a4e9204f8b98c44524b0a62d0d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2749613020ed96a4e9204f8b98c44524b0a62d0d"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 24,
      "deletions": 20
    },
    "files": [
      {
        "sha": "30addf8af6da49f45286b942aceac2de4c4b31bb",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78f4c8b98eada337346ffb206339c3ebae4ff43b/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78f4c8b98eada337346ffb206339c3ebae4ff43b/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=78f4c8b98eada337346ffb206339c3ebae4ff43b",
        "patch": "@@ -74,12 +74,10 @@ static RPCHelpMan getrawtransaction()\n                 \"getrawtransaction\",\n                 \"\\nReturn the raw transaction data.\\n\"\n \n-                \"\\nBy default this function only works for mempool transactions. When called with a blockhash\\n\"\n-                \"argument, getrawtransaction will return the transaction if the specified block is available and\\n\"\n-                \"the transaction is found in that block. When called without a blockhash argument, getrawtransaction\\n\"\n-                \"will return the transaction if it is in the mempool, or if -txindex is enabled and the transaction\\n\"\n-                \"is in a block in the blockchain.\\n\"\n-\n+                \"\\nBy default, this call only returns a transaction if it is in the mempool. If -txindex is enabled\\n\"\n+                \"and no blockhash argument is passed, it will return the transaction if it is in the mempool or any block.\\n\"\n+                \"If -txindex is not enabled and a blockhash argument is passed, it will return the transaction if\\n\"\n+                \"the specified block is available and the transaction is found in that block.\\n\"\n                 \"\\nHint: Use gettransaction for wallet transactions.\\n\"\n \n                 \"\\nIf verbose is 'true', returns an Object with information about 'txid'.\\n\""
      },
      {
        "sha": "6a145a088ac5294dfbd0ddfcc53852a885fc2857",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 9,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78f4c8b98eada337346ffb206339c3ebae4ff43b/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78f4c8b98eada337346ffb206339c3ebae4ff43b/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=78f4c8b98eada337346ffb206339c3ebae4ff43b",
        "patch": "@@ -1159,6 +1159,20 @@ CTransactionRef GetTransaction(const CBlockIndex* const block_index, const CTxMe\n {\n     LOCK(cs_main);\n \n+    if (mempool && !block_index) {\n+        CTransactionRef ptx = mempool->get(hash);\n+        if (ptx) return ptx;\n+    }\n+    if (g_txindex) {\n+        CTransactionRef tx;\n+        uint256 block_hash;\n+        if (g_txindex->FindTx(hash, block_hash, tx)) {\n+            if (!block_index || block_index->GetBlockHash() == block_hash) {\n+                hashBlock = block_hash;\n+                return tx;\n+            }\n+        }\n+    }\n     if (block_index) {\n         CBlock block;\n         if (ReadBlockFromDisk(block, block_index, consensusParams)) {\n@@ -1169,15 +1183,6 @@ CTransactionRef GetTransaction(const CBlockIndex* const block_index, const CTxMe\n                 }\n             }\n         }\n-        return nullptr;\n-    }\n-    if (mempool) {\n-        CTransactionRef ptx = mempool->get(hash);\n-        if (ptx) return ptx;\n-    }\n-    if (g_txindex) {\n-        CTransactionRef tx;\n-        if (g_txindex->FindTx(hash, hashBlock, tx)) return tx;\n     }\n     return nullptr;\n }"
      },
      {
        "sha": "0cebf3967d533fdbcd487586f412b6b6b37590da",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78f4c8b98eada337346ffb206339c3ebae4ff43b/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78f4c8b98eada337346ffb206339c3ebae4ff43b/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=78f4c8b98eada337346ffb206339c3ebae4ff43b",
        "patch": "@@ -142,15 +142,16 @@ void StartScriptCheckWorkerThreads(int threads_num);\n /** Stop all of the script checking worker threads */\n void StopScriptCheckWorkerThreads();\n /**\n- * Return transaction from the block at block_index.\n- * If block_index is not provided, fall back to mempool.\n- * If mempool is not provided or the tx couldn't be found in mempool, fall back to g_txindex.\n+ * Return transaction with a given hash.\n+ * If mempool is provided and block_index is not provided, check it first for the tx.\n+ * If -txindex is available, check it next for the tx.\n+ * Finally, if block_index is provided, check for tx by reading entire block from disk.\n  *\n  * @param[in]  block_index     The block to read from disk, or nullptr\n- * @param[in]  mempool         If block_index is not provided, look in the mempool, if provided\n+ * @param[in]  mempool         If provided, check mempool for tx\n  * @param[in]  hash            The txid\n  * @param[in]  consensusParams The params\n- * @param[out] hashBlock       The hash of block_index, if the tx was found via block_index\n+ * @param[out] hashBlock       The block hash, if the tx was found via -txindex or block_index\n  * @returns                    The tx if found, otherwise nullptr\n  */\n CTransactionRef GetTransaction(const CBlockIndex* const block_index, const CTxMemPool* const mempool, const uint256& hash, const Consensus::Params& consensusParams, uint256& hashBlock);"
      }
    ]
  }
]