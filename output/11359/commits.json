[
  {
    "sha": "ace88465f81930662c75401849e0cfdf49df3aad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphY2U4ODQ2NWY4MTkzMDY2MmM3NTQwMTg0OWUwY2ZkZjQ5ZGYzYWFk",
    "commit": {
      "author": {
        "name": "Daniel Edgecumbe",
        "email": "esotericnonsense@danedgecumbe.com",
        "date": "2017-09-17T22:09:00Z"
      },
      "committer": {
        "name": "Daniel Edgecumbe",
        "email": "esotericnonsense@danedgecumbe.com",
        "date": "2017-09-17T22:09:00Z"
      },
      "message": "Add a pruning 'high water mark' to reduce the frequency of pruning events",
      "tree": {
        "sha": "be9502ba5a31ad2bc0c251ce1b7ccad422a95045",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/be9502ba5a31ad2bc0c251ce1b7ccad422a95045"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ace88465f81930662c75401849e0cfdf49df3aad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ace88465f81930662c75401849e0cfdf49df3aad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ace88465f81930662c75401849e0cfdf49df3aad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ace88465f81930662c75401849e0cfdf49df3aad/comments",
    "author": {
      "login": "esotericnonsense",
      "id": 7999704,
      "node_id": "MDQ6VXNlcjc5OTk3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7999704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esotericnonsense",
      "html_url": "https://github.com/esotericnonsense",
      "followers_url": "https://api.github.com/users/esotericnonsense/followers",
      "following_url": "https://api.github.com/users/esotericnonsense/following{/other_user}",
      "gists_url": "https://api.github.com/users/esotericnonsense/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esotericnonsense/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esotericnonsense/subscriptions",
      "organizations_url": "https://api.github.com/users/esotericnonsense/orgs",
      "repos_url": "https://api.github.com/users/esotericnonsense/repos",
      "events_url": "https://api.github.com/users/esotericnonsense/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esotericnonsense/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "esotericnonsense",
      "id": 7999704,
      "node_id": "MDQ6VXNlcjc5OTk3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7999704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esotericnonsense",
      "html_url": "https://github.com/esotericnonsense",
      "followers_url": "https://api.github.com/users/esotericnonsense/followers",
      "following_url": "https://api.github.com/users/esotericnonsense/following{/other_user}",
      "gists_url": "https://api.github.com/users/esotericnonsense/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esotericnonsense/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esotericnonsense/subscriptions",
      "organizations_url": "https://api.github.com/users/esotericnonsense/orgs",
      "repos_url": "https://api.github.com/users/esotericnonsense/repos",
      "events_url": "https://api.github.com/users/esotericnonsense/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esotericnonsense/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e278f86c536921032e8288625dc5f3af610f2ec8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e278f86c536921032e8288625dc5f3af610f2ec8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e278f86c536921032e8288625dc5f3af610f2ec8"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 9,
      "deletions": 3
    },
    "files": [
      {
        "sha": "e0d2b7f1af8dca3c532fcb45c3c7834686bc07f3",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ace88465f81930662c75401849e0cfdf49df3aad/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ace88465f81930662c75401849e0cfdf49df3aad/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ace88465f81930662c75401849e0cfdf49df3aad",
        "patch": "@@ -3346,7 +3346,12 @@ static void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfte\n     uint64_t nBytesToPrune;\n     int count=0;\n \n-    if (nCurrentUsage + nBuffer >= nPruneTarget) {\n+    // On a prune event, the chainstate DB is flushed.\n+    // To avoid excessive prune events negating the benefit of high dbcache\n+    // values, we should not prune too rapidly.\n+    // Here we use dbcache as an arbitrary high water mark.\n+    uint64_t nPruneHWM = nPruneTarget + nCoinCacheUsage;\n+    if (nCurrentUsage + nBuffer >= nPruneHWM) {\n         for (int fileNumber = 0; fileNumber < nLastBlockFile; fileNumber++) {\n             nBytesToPrune = vinfoBlockFile[fileNumber].nSize + vinfoBlockFile[fileNumber].nUndoSize;\n \n@@ -3368,8 +3373,9 @@ static void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfte\n         }\n     }\n \n-    LogPrint(BCLog::PRUNE, \"Prune: target=%dMiB actual=%dMiB diff=%dMiB max_prune_height=%d removed %d blk/rev pairs\\n\",\n-           nPruneTarget/1024/1024, nCurrentUsage/1024/1024,\n+    LogPrint(BCLog::PRUNE, \"Prune: target=%dMiB hwm=%dMiB actual=%dMiB diff=%dMiB max_prune_height=%d removed %d blk/rev pairs\\n\",\n+           nPruneTarget/1024/1024, nPruneHWM/1024/1024,\n+           nCurrentUsage/1024/1024,\n            ((int64_t)nPruneTarget - (int64_t)nCurrentUsage)/1024/1024,\n            nLastBlockWeCanPrune, count);\n }"
      }
    ]
  }
]