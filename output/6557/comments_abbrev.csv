sipa,2015-08-17T16:13:48Z,Concept ACK. It'll take me more time to go through the code.\n,https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-131875983,131875983,
ABISprotocol,2015-09-03T06:14:16Z,"First #6201\nthen #6455 \nand now #6470 \nall closed out and leading here\n- will this one be closed also and lead to yet another one?  \n  At any rate, please recall [a resolution](https://github.com/bitcoin/bitcoin/pull/6201#issuecomment-122512074) from the original one (6201) which stated,\n  ""Mempool limiting and dynamic fee determination are superior to a static parameter change""\n  Thank you",https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-137346508,137346508,
laanwj,2015-09-03T15:59:55Z,"@ABISprotocol please be constructive and help reviewing/testing this pull instead of criticizing, this isn't helping.\n",https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-137494770,137494770,
TheBlueMatt,2015-09-06T04:36:17Z,"As an alternative, https://github.com/TheBlueMatt/bitcoin/commit/88a3b8d52432f437a3d194748e446461f721cf9b is much, much simpler (based on the first two commits from here). It is mostly untested, but should work well and doesnt have any obviously exploitable flaws as far as I know. Decendant package tracking and limiting should also be limited on top of it, but I really dont think mempool limiting ",https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-138040333,138040333,
jtimon,2015-09-06T17:00:07Z,"I really prefer to merge something simple first and work on more complex solution later on top of those initial changes, utACK to @TheBlueMatt 's alternative. That seems a path that is less conflicting with other related changes like simplifying free transaction's management or making the min relay fee dynamic, than blocking all the other changes while the more complex solution is not fully ready ",https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-138100292,138100292,
morcos,2015-09-08T20:34:30Z,NACK on TheBlueMatt@88a3b8d. \n-Amount of work done trying to fine a transaction to evict is not reasonably bounded.\n-Relay fee can (and likely will) be effectively set very high when a high fee transaction happens to evict a high fee package.  This will render relay impossible for most normal transactions.\n\nI do however agree that mempool limiting doesn't have to be this complicated as long as,https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-138691474,138691474,
TheBlueMatt,2015-09-08T21:38:29Z,"Yea, turns out I was naive and didn't spend time to think about how sipa's removal code actually worked :/. I don't agree it's not trivial to appropriately limit it's runtime, but that's not so relevant since it doesn't with to begin with. In any case, my point was more that, yes, let's do descendant package tracking separately first, and then discuss how to do mempool limiting.\n\nOn September 8,",https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-138710746,138710746,
ABISprotocol,2015-09-15T09:29:04Z,Why not this one also: https://github.com/sipa/bitcoin/commit/6498673f99da9976df170052648ff2f0026210d2\n,https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-140336241,140336241,
dcousens,2015-09-16T07:08:27Z,"concept ACK, will review\n",https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-140650700,140650700,
ABISprotocol,2015-09-16T23:25:11Z,@dcousens TY\n,https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-140924763,140924763,
dcousens,2015-09-19T03:13:06Z,@sdaftuar should this be rebased on https://github.com/bitcoin/bitcoin/pull/6654?\n,https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-141616133,141616133,
sdaftuar,2015-09-25T20:43:02Z,"@morcos and I have reworked this pull, now that #6654 has been merged, to try to simplify the code.\n\nThe overall approach is as follows:\n- Limit the mempool to some hard cap (default: 500MB).\n- Set a ""soft cap"" equal to 1/2 the maximum.  Space above the soft cap is ""reserve"" space, which can be used for transactions that have some multiple of the relay fee.\n  - When a new tx arrives, if we're",https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-143348700,143348700,
TheBlueMatt,2015-09-25T22:25:52Z,"There are a few basic things that we should probably unify across mempool limiting pulls - how wallet is handled (calling a transaction ""conflicted"" (or rewording that a bit) if it gets dropped from mempool because it has too little fee is probably not a bad thing, IMO, especially when the obvious alternative is a deanonymization attack).\nAlso, and I don't think this is a hard patch, we should pr",https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-143367283,143367283,
ABISprotocol,2015-09-25T23:00:33Z,"I'm generally pleased to see where this has gone, however ~ these remarks intended for @sdaftuar and @morcos ~ I am interested in seeing the concerns inherent [in my remarks here](https://github.com/bitcoin/bitcoin/pull/6201#issuecomment-122438594) addressed as well as the [statement clarifying that ""mempool limiting and dynamic fee determination are superior to a static parameter change""](https:/",https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-143372030,143372030,
sipa,2015-09-25T23:05:11Z,"@ABISprotocol This PR effectively results in a floating relay fee, by not accepting lower fee transactions anymore as the mempool grows fuller, but without explicitly changing the ""nMinRelayFee"" variable.\n",https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-143372608,143372608,
sipa,2015-09-25T23:06:24Z,"@ABISprotocol For the rest of your comments, the mailing list is probably better suited.\n",https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-143372733,143372733,
ABISprotocol,2015-09-25T23:07:15Z,@sipa TY\n,https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-143372838,143372838,
sdaftuar,2015-09-26T01:17:55Z,"@TheBlueMatt  Agreed, the right wallet behavior should likely be the same regardless of which mempool limiting approach we take.  I think this pull is now in good enough shape to try to digest, so that people who are interested can look at this, #6673, #6722, or any other suggestions that are proposed so that we we can pick an approach to focus on, which we can then try to refine.  \n\nI am defini",https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-143388342,143388342,
morcos,2015-09-28T22:34:12Z,"Unfortunately this needs a bit more work, so please don't do extensive code review yet.  But in terms of strategy direction, still looking for input on this vs #6722 (and possibly vs #6673).\n\nUpcoming changes.  \n- When considering a new tx and the mempool is over the soft cap, use the minimum of its feerate and its ancestor package feerate for eviction code and the reserve space check.\n- Use e",https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-143892896,143892896,
ABISprotocol,2015-09-29T00:26:44Z,"-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nKeep / focus on #6557.\n\nAlex Morcos:\n\n> Unfortunately this needs a bit more work, so please don't do\n> extensive code review yet.  But in terms of strategy direction,\n> still looking for input on this vs #6722 (and possibly vs #6673).\n> \n> Upcoming changes. - When considering a new tx and the mempool is\n> over the soft cap, use the minim",https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-143909984,143909984,
sdaftuar,2015-09-30T14:27:01Z,Added two commits that address the points @morcos mentioned above.\n,https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-144429245,144429245,
morcos,2015-09-30T17:52:10Z,"I think this pull works and accomplishes the job.\nHowever #6722 seems to also achieve the same goals and may be a better solution due to its simpler design.  I'll leave this open for now, but will close if consensus appears to converge on #6722.\n",https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-144489739,144489739,
sdaftuar,2015-10-20T16:18:26Z,Closing in favor of #6722.\n,https://github.com/bitcoin/bitcoin/pull/6557#issuecomment-149620543,149620543,
