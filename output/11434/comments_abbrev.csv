benma,2017-10-02T14:28:16Z,Pinging @theuni ,https://github.com/bitcoin/bitcoin/pull/11434#issuecomment-333551230,333551230,
theuni,2017-10-02T23:49:33Z,"mmm, this is another like #11387, but keeping it in CConnman is really not the right place for it :(\n\nI'd really like to move the bandb out of CConnman. But for now, let's just force this value to be passed in by the caller rather than providing a default.",https://github.com/bitcoin/bitcoin/pull/11434#issuecomment-333697547,333697547,
benma,2017-10-03T08:29:10Z,"The plan to move the ban db out of connman is a good one. I assume an instance of it would be passed to connman (or a callback or similar) so check for bans, which is easy to replace for mocking in tests.\n\nWherever the ban db code ends up, the PR that moves it is simpler after this PR. After all, the bandb class also shouldn't have globals and the bantime should be initialized in init.cpp.\n",https://github.com/bitcoin/bitcoin/pull/11434#issuecomment-333775063,333775063,
theuni,2017-10-05T23:24:42Z,"> The plan to move the ban db out of connman is a good one. I assume an instance of it would be passed to connman (or a callback or similar) so check for bans, which is easy to replace for mocking in tests.\n\nYep.\n\n> If you don't mind, I'll take a stab at factoring out the ban code after (can coordinate on IRC beforehand).\n\nSorry, I had already been working on that before I saw your res",https://github.com/bitcoin/bitcoin/pull/11434#issuecomment-334618918,334618918,
benma,2017-10-06T06:57:56Z,"The description of your PR alone won me over ðŸ˜† Closing this.\n\nThanks for the offer.",https://github.com/bitcoin/bitcoin/pull/11434#issuecomment-334674539,334674539,
promag,2017-10-01T13:53:31Z,Add test?,https://github.com/bitcoin/bitcoin/pull/11434#discussion_r142030075,142030075,src/init.cpp
promag,2017-10-01T13:58:22Z,"Unrelated. IMO remove change, otherwise fix others.",https://github.com/bitcoin/bitcoin/pull/11434#discussion_r142030191,142030191,src/rpc/net.cpp
benma,2017-10-02T07:25:40Z,Could you point me to where bitcoind/cli args are tested? Can't seem to find any example.,https://github.com/bitcoin/bitcoin/pull/11434#discussion_r142068884,142068884,src/init.cpp
benma,2017-10-02T07:27:39Z,"I put it into a separate commit so `git blame` doesn't show an unrelated commit description in those lines.\n\nI kept them however. Formatting changes adhere to the dev guide and so far we've been fixing up parts as we work touch during the work.",https://github.com/bitcoin/bitcoin/pull/11434#discussion_r142069093,142069093,src/rpc/net.cpp
promag,2017-10-02T13:45:43Z,Search for `assert_raises_process_error`.,https://github.com/bitcoin/bitcoin/pull/11434#discussion_r142142567,142142567,src/init.cpp
benma,2017-10-02T14:28:07Z,"It is only used in `TestBitcoinCli`, which doesn't look like the right place. It looks like bitcoind command line args are not tested at all.\n\nShall we keep the check, but untested, like all the others?",https://github.com/bitcoin/bitcoin/pull/11434#discussion_r142154227,142154227,src/init.cpp
promag,2017-10-02T14:44:11Z,"No, it's not the right place. I was suggesting to add a right place :) IMO they should be tested but I may be alone here.",https://github.com/bitcoin/bitcoin/pull/11434#discussion_r142159000,142159000,src/init.cpp
benma,2017-10-02T16:50:42Z,"I don't disagree, but I think it's out of scope for this PR. Adding the test suite for this is needs to be prepared separately.",https://github.com/bitcoin/bitcoin/pull/11434#discussion_r142194012,142194012,src/init.cpp
jnewbery,2017-10-02T18:56:21Z,You need `assert_start_raises_init_error()`. See https://github.com/bitcoin/bitcoin/blob/90926db2381d87c68858659873230a3811ebdce5/test/functional/multiwallet.py#L26 for example,https://github.com/bitcoin/bitcoin/pull/11434#discussion_r142225162,142225162,src/init.cpp
promag,2017-10-02T19:03:16Z,That's right! Sorry for the misleading `assert_raises_process_error`.,https://github.com/bitcoin/bitcoin/pull/11434#discussion_r142226807,142226807,src/init.cpp
