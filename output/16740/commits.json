[
  {
    "sha": "403e372407db1d020eedede4d322ee79d4a85dfc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MDNlMzcyNDA3ZGIxZDAyMGVlZGVkZTRkMzIyZWU3OWQ0YTg1ZGZj",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-08-27T21:58:21Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-08-27T23:42:29Z"
      },
      "message": "qa: Relax so that the subscriber is ready before publishing zmq messages",
      "tree": {
        "sha": "84dc431a5b4382244d51980c3ea43f201a9c52ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84dc431a5b4382244d51980c3ea43f201a9c52ff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/403e372407db1d020eedede4d322ee79d4a85dfc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/403e372407db1d020eedede4d322ee79d4a85dfc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/403e372407db1d020eedede4d322ee79d4a85dfc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/403e372407db1d020eedede4d322ee79d4a85dfc/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7be1cc92be4946c4f042bccd3a1b007657f3241",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7be1cc92be4946c4f042bccd3a1b007657f3241",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7be1cc92be4946c4f042bccd3a1b007657f3241"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5aea10fbce53d0278e15979819a6f56e2042b4d3",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/403e372407db1d020eedede4d322ee79d4a85dfc/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/403e372407db1d020eedede4d322ee79d4a85dfc/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=403e372407db1d020eedede4d322ee79d4a85dfc",
        "patch": "@@ -10,6 +10,7 @@\n from test_framework.messages import CTransaction, hash256\n from test_framework.util import assert_equal, connect_nodes\n from io import BytesIO\n+from time import sleep\n \n def hash256_reversed(byte_str):\n     return hash256(byte_str)[::-1]\n@@ -61,7 +62,6 @@ def test_basic(self):\n         address = 'tcp://127.0.0.1:28332'\n         socket = self.ctx.socket(zmq.SUB)\n         socket.set(zmq.RCVTIMEO, 60000)\n-        socket.connect(address)\n \n         # Subscribe to all available topics.\n         hashblock = ZMQSubscriber(socket, b\"hashblock\")\n@@ -71,6 +71,9 @@ def test_basic(self):\n \n         self.restart_node(0, [\"-zmqpub%s=%s\" % (sub.topic.decode(), address) for sub in [hashblock, hashtx, rawblock, rawtx]])\n         connect_nodes(self.nodes[0], 1)\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n \n         num_blocks = 5\n         self.log.info(\"Generate %(n)d blocks (and %(n)d coinbase txes)\" % {\"n\": num_blocks})\n@@ -128,11 +131,13 @@ def test_reorg(self):\n         address = 'tcp://127.0.0.1:28333'\n         socket = self.ctx.socket(zmq.SUB)\n         socket.set(zmq.RCVTIMEO, 60000)\n-        socket.connect(address)\n         hashblock = ZMQSubscriber(socket, b'hashblock')\n \n         # Should only notify the tip if a reorg occurs\n         self.restart_node(0, ['-zmqpub%s=%s' % (hashblock.topic.decode(), address)])\n+        socket.connect(address)\n+        # Relax so that the subscriber is ready before publishing zmq messages\n+        sleep(0.2)\n \n         # Generate 1 block in nodes[0] and receive all notifications\n         self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)"
      }
    ]
  }
]