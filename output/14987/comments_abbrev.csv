MarcoFalke,2018-12-17T21:48:24Z,"<details><summary>Resulting diff for faa1522e5ec5ec53b2b2b1ed36c11e84939bbb13</summary>\n\n```diff\ndiff --git a/abandontransaction b/abandontransaction\nindex 4ce0ab0..4727471 100644\n--- a/abandontransaction\n+++ b/abandontransaction\n@@ -9,8 +9,6 @@ It has no effect on transactions which are already abandoned.\n Arguments:\n 1. txid    (string, required) The transaction id\n \n-Resul",https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-448011112,448011112,
DrahtBot,2018-12-18T00:47:58Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15279](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15279.html) (wallet: Clarify rescanblockchain doc by Mar",https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-448054422,448054422,
laanwj,2019-01-16T11:52:29Z,utACK faa90fe9d5e688fdd311a819721f6e911cc441a5,https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-454752235,454752235,
ajtowns,2019-01-25T15:24:50Z,"A bunch of the changes add redundant ""Result:"" headers when there were conditional results, eg for `getblockheader`:\n\n    +Result:\n    +\n     Result (for verbose = true):\n\nCould be worth doing:\n\n    struct RPCResult {\n         std::string m_cond;\n         std::string m_result;\n         explicit RPCResult(std::string result) : m_result{result} { }\n         explicit RPCResult",https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-457608435,457608435,
MarcoFalke,2019-01-25T19:21:33Z,Thanks. I stole your changes and squashed them with some minor fixups. Hope you don't mind.,https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-457692968,457692968,
ajtowns,2019-01-29T07:21:43Z,"ACK faa1522e5ec5ec53b2b2b1ed36c11e84939bbb13\n\nHelp differences checked with:\n\n    mkdir BEFORE AFTER\n    git checkout faa1522e^ && make && make check && ./bitcoind -regtest\n    for a in $(./bitcoin-cli -regtest help | grep '^[^=]' | sed 's/ .*//') estimaterawfee setmocktime echo echojson signrawtransaction invalidateblock reconsiderblock waitfornewblock waitforblock waitforblockheight ",https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-458433653,458433653,
MarcoFalke,2019-01-29T14:57:02Z,"@ajtowns I modified `CRPCTable::help` to print even hidden ones to get the diff in https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-448011112\n\nAnyway, this has two ACKs, three upvotes (which I count as Concept ACK) and only conflicts with prs that have review and are mine, so I am going to merge this.\n\nSorry for the merge conflicts :(",https://github.com/bitcoin/bitcoin/pull/14987#issuecomment-458570305,458570305,
promag,2018-12-18T15:01:47Z,Drop `RPCResult`?,https://github.com/bitcoin/bitcoin/pull/14987#discussion_r242571174,242571174,src/rpc/mining.cpp
practicalswift,2018-12-18T15:55:37Z,"Should be `explicit`? :-)\n\nAll reviewers of this PR: please review PR #14505 and make the `explicit` checking an automatic Travis check :-)",https://github.com/bitcoin/bitcoin/pull/14987#discussion_r242594136,242594136,src/rpc/util.h
promag,2018-12-18T16:00:34Z,"IMO we could ignore explicit here, this is utility code, nothing to worry about..",https://github.com/bitcoin/bitcoin/pull/14987#discussion_r242596254,242596254,src/rpc/util.h
MarcoFalke,2018-12-18T17:05:09Z,I think it is better to label the sections instead of having a jungle of `{}`,https://github.com/bitcoin/bitcoin/pull/14987#discussion_r242623753,242623753,src/rpc/mining.cpp
promag,2018-12-18T17:50:47Z,It's pretty obviously what always comes after args but ok.,https://github.com/bitcoin/bitcoin/pull/14987#discussion_r242639410,242639410,src/rpc/mining.cpp
practicalswift,2018-12-21T07:08:31Z,"IMO we should follow the explicit recommendation in our developer notes:\n\n> - By default, declare single-argument constructors `explicit`.\n>   - *Rationale*: This is a precaution to avoid unintended conversions that might\n>   arise when single-argument constructors are used as implicit conversion\n>   functions.\n\n:-)",https://github.com/bitcoin/bitcoin/pull/14987#discussion_r243502928,243502928,src/rpc/util.h
