[
  {
    "sha": "4a6b1f36b773001f6c5a8e1d3d196833e4fb872d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YTZiMWYzNmI3NzMwMDFmNmM1YThlMWQzZDE5NjgzM2U0ZmI4NzJk",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-10-02T16:22:05Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-11-24T00:29:38Z"
      },
      "message": "Expose AcceptBlockHeader through main.h",
      "tree": {
        "sha": "ad3335f52ef392ee170fbefb8829158c3ce943a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ad3335f52ef392ee170fbefb8829158c3ce943a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a6b1f36b773001f6c5a8e1d3d196833e4fb872d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a6b1f36b773001f6c5a8e1d3d196833e4fb872d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4a6b1f36b773001f6c5a8e1d3d196833e4fb872d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a6b1f36b773001f6c5a8e1d3d196833e4fb872d/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "93566e0c37c5ae104095474fea89f00dcb40f551",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93566e0c37c5ae104095474fea89f00dcb40f551",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93566e0c37c5ae104095474fea89f00dcb40f551"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 27,
      "deletions": 1
    },
    "files": [
      {
        "sha": "4a2682bc7838f7ff38e80407cc8a1e8ff584a25c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a6b1f36b773001f6c5a8e1d3d196833e4fb872d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a6b1f36b773001f6c5a8e1d3d196833e4fb872d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=4a6b1f36b773001f6c5a8e1d3d196833e4fb872d",
        "patch": "@@ -3649,7 +3649,7 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, const Co\n     return true;\n }\n \n-static bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, const CChainParams& chainparams, CBlockIndex** ppindex=NULL)\n+static bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, const CChainParams& chainparams, CBlockIndex** ppindex)\n {\n     AssertLockHeld(cs_main);\n     // Check for duplicate\n@@ -3698,6 +3698,21 @@ static bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state\n     return true;\n }\n \n+// Exposed wrapper for AcceptBlockHeader\n+bool ProcessNewBlockHeaders(const std::vector<CBlockHeader>& headers, CValidationState& state, const CChainParams& chainparams, CBlockIndex** ppindex)\n+{\n+    {\n+        LOCK(cs_main);\n+        for (const CBlockHeader& header : headers) {\n+            if (!AcceptBlockHeader(header, state, chainparams, ppindex)) {\n+                return false;\n+            }\n+        }\n+    }\n+    NotifyHeaderTip();\n+    return true;\n+}\n+\n /** Store block on disk. If dbp is non-NULL, the file is known to already reside on disk */\n static bool AcceptBlock(const CBlock& block, CValidationState& state, const CChainParams& chainparams, CBlockIndex** ppindex, bool fRequested, const CDiskBlockPos* dbp, bool* fNewBlock)\n {"
      },
      {
        "sha": "9fb6b298c4cec70e980233a582fb7f1ba85062b2",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a6b1f36b773001f6c5a8e1d3d196833e4fb872d/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a6b1f36b773001f6c5a8e1d3d196833e4fb872d/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=4a6b1f36b773001f6c5a8e1d3d196833e4fb872d",
        "patch": "@@ -230,6 +230,17 @@ static const uint64_t MIN_DISK_SPACE_FOR_BLOCK_FILES = 550 * 1024 * 1024;\n  * @return True if state.IsValid()\n  */\n bool ProcessNewBlock(const CChainParams& chainparams, const CBlock* pblock, bool fForceProcessing, const CDiskBlockPos* dbp, bool* fNewBlock);\n+\n+/**\n+ * Process incoming block headers.\n+ *\n+ * @param[in]  block The block headers themselves\n+ * @param[out] state This may be set to an Error state if any error occurred processing them\n+ * @param[in]  chainparams The params for the chain we want to connect to\n+ * @param[out] ppindex If set, the pointer will be set to point to the last new block index object for the given headers\n+ */\n+bool ProcessNewBlockHeaders(const std::vector<CBlockHeader>& block, CValidationState& state, const CChainParams& chainparams, CBlockIndex** ppindex=NULL);\n+\n /** Check whether enough disk space is available for an incoming block */\n bool CheckDiskSpace(uint64_t nAdditionalBytes = 0);\n /** Open a block file (blk?????.dat) */"
      }
    ]
  },
  {
    "sha": "63fd101c529cf6e2bc5ecab244fd56e2c5be521f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2M2ZkMTAxYzUyOWNmNmUyYmM1ZWNhYjI0NGZkNTZlMmM1YmU1MjFm",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-11-03T20:34:31Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-11-24T00:29:38Z"
      },
      "message": "Split ::HEADERS processing into two separate cs_main locks\n\nThis will allow NotifyHeaderTip to be called from an\nAcceptBlockHeader wrapper function without holding cs_main.",
      "tree": {
        "sha": "80ee584fb960fcc26435dab0b247243adfa21145",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80ee584fb960fcc26435dab0b247243adfa21145"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63fd101c529cf6e2bc5ecab244fd56e2c5be521f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63fd101c529cf6e2bc5ecab244fd56e2c5be521f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/63fd101c529cf6e2bc5ecab244fd56e2c5be521f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63fd101c529cf6e2bc5ecab244fd56e2c5be521f/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4a6b1f36b773001f6c5a8e1d3d196833e4fb872d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a6b1f36b773001f6c5a8e1d3d196833e4fb872d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4a6b1f36b773001f6c5a8e1d3d196833e4fb872d"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 7,
      "deletions": 4
    },
    "files": [
      {
        "sha": "4cd5bebb7ccf3febb30252e8afdedc864f9d2a25",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63fd101c529cf6e2bc5ecab244fd56e2c5be521f/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63fd101c529cf6e2bc5ecab244fd56e2c5be521f/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=63fd101c529cf6e2bc5ecab244fd56e2c5be521f",
        "patch": "@@ -5982,14 +5982,14 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             ReadCompactSize(vRecv); // ignore tx count; assume it is 0.\n         }\n \n-        {\n-        LOCK(cs_main);\n-\n         if (nCount == 0) {\n             // Nothing interesting. Stop asking this peers for more headers.\n             return true;\n         }\n \n+        CBlockIndex *pindexLast = NULL;\n+        {\n+        LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom->GetId());\n \n         // If this looks like it could be a block announcement (nCount <\n@@ -6019,7 +6019,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             return true;\n         }\n \n-        CBlockIndex *pindexLast = NULL;\n         BOOST_FOREACH(const CBlockHeader& header, headers) {\n             CValidationState state;\n             if (pindexLast != NULL && header.hashPrevBlock != pindexLast->GetBlockHash()) {\n@@ -6035,7 +6034,11 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 }\n             }\n         }\n+        }\n \n+        {\n+        LOCK(cs_main);\n+        CNodeState *nodestate = State(pfrom->GetId());\n         if (nodestate->nUnconnectingHeaders > 0) {\n             LogPrint(\"net\", \"peer=%d: resetting nUnconnectingHeaders (%d -> 0)\\n\", pfrom->id, nodestate->nUnconnectingHeaders);\n         }"
      }
    ]
  },
  {
    "sha": "a8b936df2053e68208d106cddec06227ef563e41",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOGI5MzZkZjIwNTNlNjgyMDhkMTA2Y2RkZWMwNjIyN2VmNTYzZTQx",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-11-03T20:56:33Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-12-01T19:03:31Z"
      },
      "message": "Use exposed ProcessNewBlockHeaders from ProcessMessages",
      "tree": {
        "sha": "3fd8983ba0edaf814e23752fa4d737f966401802",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3fd8983ba0edaf814e23752fa4d737f966401802"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8b936df2053e68208d106cddec06227ef563e41",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8b936df2053e68208d106cddec06227ef563e41",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a8b936df2053e68208d106cddec06227ef563e41",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8b936df2053e68208d106cddec06227ef563e41/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "63fd101c529cf6e2bc5ecab244fd56e2c5be521f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63fd101c529cf6e2bc5ecab244fd56e2c5be521f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/63fd101c529cf6e2bc5ecab244fd56e2c5be521f"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 15,
      "deletions": 12
    },
    "files": [
      {
        "sha": "f88efe7b50008561fabd3e9b85c1550b5dc6ad36",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 12,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8b936df2053e68208d106cddec06227ef563e41/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8b936df2053e68208d106cddec06227ef563e41/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a8b936df2053e68208d106cddec06227ef563e41",
        "patch": "@@ -6019,22 +6019,27 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             return true;\n         }\n \n-        BOOST_FOREACH(const CBlockHeader& header, headers) {\n-            CValidationState state;\n-            if (pindexLast != NULL && header.hashPrevBlock != pindexLast->GetBlockHash()) {\n+        uint256 hashLastBlock;\n+        for (const CBlockHeader& header : headers) {\n+            if (!hashLastBlock.IsNull() && header.hashPrevBlock != hashLastBlock) {\n                 Misbehaving(pfrom->GetId(), 20);\n                 return error(\"non-continuous headers sequence\");\n             }\n-            if (!AcceptBlockHeader(header, state, chainparams, &pindexLast)) {\n-                int nDoS;\n-                if (state.IsInvalid(nDoS)) {\n-                    if (nDoS > 0)\n-                        Misbehaving(pfrom->GetId(), nDoS);\n-                    return error(\"invalid header received\");\n+            hashLastBlock = header.GetHash();\n+        }\n+        }\n+\n+        CValidationState state;\n+        if (!ProcessNewBlockHeaders(headers, state, chainparams, &pindexLast)) {\n+            int nDoS;\n+            if (state.IsInvalid(nDoS)) {\n+                if (nDoS > 0) {\n+                    LOCK(cs_main);\n+                    Misbehaving(pfrom->GetId(), nDoS);\n                 }\n+                return error(\"invalid header received\");\n             }\n         }\n-        }\n \n         {\n         LOCK(cs_main);\n@@ -6110,8 +6115,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             }\n         }\n         }\n-\n-        NotifyHeaderTip();\n     }\n \n     else if (strCommand == NetMsgType::BLOCK && !fImporting && !fReindex) // Ignore blocks received while importing"
      }
    ]
  },
  {
    "sha": "58a215ce8c13b900cf982c39f8ee4879290d1a95",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OGEyMTVjZThjMTNiOTAwY2Y5ODJjMzlmOGVlNDg3OTI5MGQxYTk1",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-11-03T21:01:39Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-12-01T19:03:31Z"
      },
      "message": "Use ProcessNewBlockHeaders in CMPCTBLOCK processing",
      "tree": {
        "sha": "a11879a1c67be6cc8238c4ff8a1f225c136dba9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a11879a1c67be6cc8238c4ff8a1f225c136dba9b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58a215ce8c13b900cf982c39f8ee4879290d1a95",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58a215ce8c13b900cf982c39f8ee4879290d1a95",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/58a215ce8c13b900cf982c39f8ee4879290d1a95",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58a215ce8c13b900cf982c39f8ee4879290d1a95/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a8b936df2053e68208d106cddec06227ef563e41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8b936df2053e68208d106cddec06227ef563e41",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a8b936df2053e68208d106cddec06227ef563e41"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "04a55b3dcc51f86a02f856e794dac1eafb4339b2",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58a215ce8c13b900cf982c39f8ee4879290d1a95/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58a215ce8c13b900cf982c39f8ee4879290d1a95/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=58a215ce8c13b900cf982c39f8ee4879290d1a95",
        "patch": "@@ -5768,6 +5768,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         CBlockHeaderAndShortTxIDs cmpctblock;\n         vRecv >> cmpctblock;\n \n+        {\n         LOCK(cs_main);\n \n         if (mapBlockIndex.find(cmpctblock.header.hashPrevBlock) == mapBlockIndex.end()) {\n@@ -5776,19 +5777,23 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                 connman.PushMessage(pfrom, NetMsgType::GETHEADERS, chainActive.GetLocator(pindexBestHeader), uint256());\n             return true;\n         }\n+        }\n \n         CBlockIndex *pindex = NULL;\n         CValidationState state;\n-        if (!AcceptBlockHeader(cmpctblock.header, state, chainparams, &pindex)) {\n+        if (!ProcessNewBlockHeaders({cmpctblock.header}, state, chainparams, &pindex)) {\n             int nDoS;\n             if (state.IsInvalid(nDoS)) {\n-                if (nDoS > 0)\n+                if (nDoS > 0) {\n+                    LOCK(cs_main);\n                     Misbehaving(pfrom->GetId(), nDoS);\n+                }\n                 LogPrintf(\"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->id);\n                 return true;\n             }\n         }\n \n+        LOCK(cs_main);\n         // If AcceptBlockHeader returned true, it set pindex\n         assert(pindex);\n         UpdateBlockAvailability(pfrom->GetId(), pindex->GetBlockHash());"
      }
    ]
  },
  {
    "sha": "2c8c57e72fe32cac909278312955145632da6d82",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYzhjNTdlNzJmZTMyY2FjOTA5Mjc4MzEyOTU1MTQ1NjMyZGE2ZDgy",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-12-01T19:02:23Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-12-01T19:03:32Z"
      },
      "message": "Document cs_main status when calling into PNB or PNBH",
      "tree": {
        "sha": "b482c3537059010db2ca585887a37f656cd642c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b482c3537059010db2ca585887a37f656cd642c9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c8c57e72fe32cac909278312955145632da6d82",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c8c57e72fe32cac909278312955145632da6d82",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2c8c57e72fe32cac909278312955145632da6d82",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c8c57e72fe32cac909278312955145632da6d82/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "58a215ce8c13b900cf982c39f8ee4879290d1a95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58a215ce8c13b900cf982c39f8ee4879290d1a95",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/58a215ce8c13b900cf982c39f8ee4879290d1a95"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8f51e33242edfa5221ccf29f25a62b9189eca4c1",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c8c57e72fe32cac909278312955145632da6d82/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c8c57e72fe32cac909278312955145632da6d82/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=2c8c57e72fe32cac909278312955145632da6d82",
        "patch": "@@ -223,6 +223,8 @@ static const uint64_t MIN_DISK_SPACE_FOR_BLOCK_FILES = 550 * 1024 * 1024;\n  * Note that we guarantee that either the proof-of-work is valid on pblock, or\n  * (and possibly also) BlockChecked will have been called.\n  * \n+ * Call without cs_main held.\n+ *\n  * @param[in]   pblock  The block we want to process.\n  * @param[in]   fForceProcessing Process this block even if unrequested; used for non-network block sources and whitelisted peers.\n  * @param[out]  dbp     The already known disk position of pblock, or NULL if not yet stored.\n@@ -234,6 +236,8 @@ bool ProcessNewBlock(const CChainParams& chainparams, const CBlock* pblock, bool\n /**\n  * Process incoming block headers.\n  *\n+ * Call without cs_main held.\n+ *\n  * @param[in]  block The block headers themselves\n  * @param[out] state This may be set to an Error state if any error occurred processing them\n  * @param[in]  chainparams The params for the chain we want to connect to"
      }
    ]
  }
]