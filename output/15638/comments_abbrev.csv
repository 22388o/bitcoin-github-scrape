DrahtBot,2019-03-22T07:25:59Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15294](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15294.html) ([moveonly] wallet: Extract RipeMd160 by Emp",https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-475519439,475519439,
Empact,2019-03-22T09:08:11Z,"I split this out for review here: https://github.com/Empact/bitcoin/commits/pr/link-split (you can diff https://github.com/Empact/bitcoin/commit/9d9ad3800da09575a7a058160d1ed0604df9ccc9 for consistency) and came away with 2 proposed changes:\n\n~https://github.com/Empact/bitcoin/commit/3d5f9e943ae5e0da0edc55a7ba6e7d32689563f8 - `TransactionErrorString` is not used outside `rpc/util.cpp`, which i",https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-475544424,475544424,
ryanofsky,2019-03-22T11:51:41Z,"@Empact, I can use your branch with split up commits if other people think that is easier to review. But I'm not sure that they will. Personally I would rather scan a single commit with `--color-moved=dimmed_zebra`, verify that it is move-only, and be able to see the whole picture than to have to verify fragmentary commits.\n\nThe two changes you propose are not good, though. They have some prob",https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-475592061,475592061,
jnewbery,2019-03-22T14:14:50Z,"Very strong concept ACK to this and #15639. This is the natural follow-up to #10973. That PR defined a node<->wallet interface and made it so wallet code _shouldn't_ directly access node functions. This PR with #15639 ensures that wallet code _can't_ directly access node functions.\n\nMy only question is when these should be merged. This conflicts with a lot of PRs (including high-priority #1514",https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-475636982,475636982,
jnewbery,2019-03-25T13:30:24Z,">  if other people think that is easier to review\n\nI think it would be slightly easier to review if this was split into multiple commits, each moving a function with with justification for the move.",https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-476197220,476197220,
sipsorcery,2019-03-28T18:32:05Z,@Sjors this PR builds correctly for me with VS 2017 x64 Debug and Release. Did you re-run the `msvc-autogen.py` script after pulling the changes? There have been modifications to the makefiles so the VS project files need to be re-generated.,https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-477719425,477719425,
Sjors,2019-03-29T07:48:16Z,"@sipsorcery I did not. Can't test it at the moment, but that seems like a plausible explanation.",https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-477901990,477901990,
ryanofsky,2019-04-02T17:14:15Z,"John was asking questions about why different functions were moving to various libraries. I'll describe how I was thinking about this below, but I don't consider the question to be extremely important, because the libraries are already pretty scrambled up, and I'm not trying to unscramble them here. All I am trying to do is split up .cpp files that have functions called by the wallet, so wallet co",https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-479101494,479101494,
jnewbery,2019-04-02T21:36:43Z,"I split this PR into smaller commits to help my review: https://github.com/jnewbery/bitcoin/tree/pr15638_8 . I pushed each commit as a separate branch on my fork to be built by travis: https://travis-ci.org/jnewbery/bitcoin/builds.\n\nI personally find this easier to review as each move is justified by its commit log.\n\n> I'll describe how I was thinking about this below [...] here is how I a",https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-479214201,479214201,
jnewbery,2019-04-02T21:39:12Z,"@laanwj has also expressed a desire to reorganize the source code (https://github.com/bitcoin/bitcoin/issues/15465#issuecomment-475850089):\n\n> What kind of frustrates me, personally, is that we didn't manage to clearly separate out the consensus parts. Not to a library (which would be useful for rust-bitcoin et al), but also not even to a separate directory. ",https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-479215147,479215147,
Empact,2019-04-03T05:40:46Z,"Here are 2 revised proposals, related to the earlier work:\n\nhttps://github.com/Empact/bitcoin/commit/c72764eccd5d769f2574bcdc39a992cab11d4048 - Moves TransactionError to its own file, `src/transaction_error.h`, revises includes to require the more narrow `transaction_error` rather than `node/transaction` where appropriate.\n\nhttps://github.com/Empact/bitcoin/commit/90293e6c25f691bdf2218b1c3",https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-479347635,479347635,
practicalswift,2019-04-03T07:42:24Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-479376833,479376833,
ryanofsky,2019-04-03T17:36:51Z,"Updated 9742ff8d79402607159488eed362b7eb08580114 -> fee746f72ba53642bfd1000b6cd215048ad06920 ([pr/link.6](https://github.com/ryanofsky/bitcoin/commits/pr/link.6) -> [pr/link.7](https://github.com/ryanofsky/bitcoin/commits/pr/link.7),  [compare](https://github.com/ryanofsky/bitcoin/compare/pr/link.6..pr/link.7)) to John's branch [pr15638_8](https://github.com/jnewbery/bitcoin/commits/pr15638_8), ad",https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-479587366,479587366,
ryanofsky,2019-04-08T21:41:05Z,"Rebased fee746f72ba53642bfd1000b6cd215048ad06920 -> b0ba5d943100857daeb0904a01f096aad0cda697 ([pr/link.7](https://github.com/ryanofsky/bitcoin/commits/pr/link.7) -> [pr/link.8](https://github.com/ryanofsky/bitcoin/commits/pr/link.8)) due to conflict with #15508. Text merge conflict was limited to `src/Makefile.am`, but #15508 also required adding a new commit: ""[build] Move AnalyzePSBT from psbt.c",https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-481018913,481018913,
jnewbery,2019-04-09T16:10:22Z,tested ACK b0ba5d943100857daeb0904a01f096aad0cda697,https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-481318056,481318056,
laanwj,2019-04-09T17:50:17Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-481361583,481361583,
ryanofsky,2019-04-10T12:15:47Z,"Rebased b0ba5d943100857daeb0904a01f096aad0cda697 -> 4d074e84a2cf419510e2920417799f62747f4b07 ([pr/link.8](https://github.com/ryanofsky/bitcoin/commits/pr/link.8) -> [pr/link.9](https://github.com/ryanofsky/bitcoin/commits/pr/link.9)) due to conflict with #15632\n",https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-481665829,481665829,
jnewbery,2019-04-10T13:18:14Z,utACK 4d074e84a2cf419510e2920417799f62747f4b07 (checked by doing the rebase myself and verifying no difference between my branch and 4d074e84a2cf419510e2920417799f62747f4b07),https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-481686861,481686861,
jnewbery,2019-04-10T13:18:54Z,"@laanwj - do you mind moving discussion of source code organization to #15732?\n\nEdit: done\n\nEdit: Thanks :slightly_smiling_face: ",https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-481687096,481687096,
laanwj,2019-04-10T13:52:17Z,utACK 4d074e84a2cf419510e2920417799f62747f4b07,https://github.com/bitcoin/bitcoin/pull/15638#issuecomment-481699877,481699877,
l2a5b1,2019-03-25T12:33:22Z,"Is there a strong argument that justifies moving helper function `FormatStateMessage(const CValidationState &state)` to its own translation unit, whilst it depends on the translation unit it was moved from? \n\nI would prefer not to introduce new circular dependencies if they can be prevented.\n",https://github.com/bitcoin/bitcoin/pull/15638#discussion_r268617532,268617532,test/lint/lint-circular-dependencies.sh
l2a5b1,2019-03-25T12:38:15Z,Let's try not to introduce new circular dependencies. I had a quick look at #15639 and it seems that we can keep all the moved code in the `policy` translation unit and prevent the circular dependency?,https://github.com/bitcoin/bitcoin/pull/15638#discussion_r268619160,268619160,test/lint/lint-circular-dependencies.sh
ryanofsky,2019-03-25T16:00:05Z,"re: https://github.com/bitcoin/bitcoin/pull/15638#discussion_r268619160\n\n> I had a quick look at #15639 and it seems that we can keep all the moved code in the policy translation unit and prevent the circular dependency?\n\nWill fix in #15639. To keep moves in one PR and actual code changes in the other, so both PRs are easier to review, I am adding a circular dependency here. But with the c",https://github.com/bitcoin/bitcoin/pull/15638#discussion_r268718912,268718912,test/lint/lint-circular-dependencies.sh
ryanofsky,2019-03-25T16:00:11Z,"re: https://github.com/bitcoin/bitcoin/pull/15638#discussion_r268617532\n\n> Is there a strong argument that justifies moving helper function FormatStateMessage(const CValidationState &state) to its own translation unit, whilst it depends on the translation unit it was moved from?\n\nWill fix. This is just due to a spurious include. There's no dependency between the object files.",https://github.com/bitcoin/bitcoin/pull/15638#discussion_r268718955,268718955,test/lint/lint-circular-dependencies.sh
Sjors,2019-03-26T11:57:33Z,`tx_check.h` and `tx_verify.h` could use more documentation about what should go where.,https://github.com/bitcoin/bitcoin/pull/15638#discussion_r269065903,269065903,src/consensus/tx_check.h
ryanofsky,2019-03-29T22:15:21Z,"re: https://github.com/bitcoin/bitcoin/pull/15638#discussion_r269065903\n\n> tx_check.h and tx_verify.h could use more documentation about what should go where.\n\nAdded longer comment to the header. There was something about ""Context-independent validity checks"" already, but that was probably too opaque.\n ",https://github.com/bitcoin/bitcoin/pull/15638#discussion_r270588438,270588438,src/consensus/tx_check.h
ryanofsky,2019-03-29T23:59:22Z,"re: https://github.com/bitcoin/bitcoin/pull/15638#discussion_r268617532\n\nRemoved new circular dependency",https://github.com/bitcoin/bitcoin/pull/15638#discussion_r270602684,270602684,test/lint/lint-circular-dependencies.sh
ryanofsky,2019-03-29T23:59:30Z,"re: https://github.com/bitcoin/bitcoin/pull/15638#discussion_r268619160\n\nRemoved new circular dependency",https://github.com/bitcoin/bitcoin/pull/15638#discussion_r270602694,270602694,test/lint/lint-circular-dependencies.sh
