[
  {
    "sha": "b42a003e77537fa855f7096005256248c70deeed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDJhMDAzZTc3NTM3ZmE4NTVmNzA5NjAwNTI1NjI0OGM3MGRlZWVk",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2014-02-15T17:35:36Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2014-02-21T02:22:04Z"
      },
      "message": "Pull out base32 coding tables so that they can be used by other functions.",
      "tree": {
        "sha": "928cb67a612d50fc0425de22c61f3ef6d7ffe105",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/928cb67a612d50fc0425de22c61f3ef6d7ffe105"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b42a003e77537fa855f7096005256248c70deeed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b42a003e77537fa855f7096005256248c70deeed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b42a003e77537fa855f7096005256248c70deeed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b42a003e77537fa855f7096005256248c70deeed/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76a77059f361f3c700a550c11adf567bafebbd00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76a77059f361f3c700a550c11adf567bafebbd00",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76a77059f361f3c700a550c11adf567bafebbd00"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 21,
      "deletions": 19
    },
    "files": [
      {
        "sha": "47893a4fdcf321eb812f85cdffd7dff362d253d6",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 19,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b42a003e77537fa855f7096005256248c70deeed/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b42a003e77537fa855f7096005256248c70deeed/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=b42a003e77537fa855f7096005256248c70deeed",
        "patch": "@@ -702,10 +702,27 @@ string DecodeBase64(const string& str)\n     return string((const char*)&vchRet[0], vchRet.size());\n }\n \n+const char *pbase32 = \"abcdefghijklmnopqrstuvwxyz234567\";\n+const int decode32_table[256] =\n+    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, 26, 27, 28, 29, 30, 31, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14,\n+      15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,\n+      -1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14,\n+      15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };\n+\n string EncodeBase32(const unsigned char* pch, size_t len)\n {\n-    static const char *pbase32 = \"abcdefghijklmnopqrstuvwxyz234567\";\n-\n     string strRet=\"\";\n     strRet.reserve((len+4)/5*8);\n \n@@ -768,23 +785,6 @@ string EncodeBase32(const string& str)\n \n vector<unsigned char> DecodeBase32(const char* p, bool* pfInvalid)\n {\n-    static const int decode32_table[256] =\n-    {\n-        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, -1, -1, -1, -1,\n-        -1, -1, -1, -1, -1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14,\n-        15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1,  0,  1,  2,\n-         3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\n-        23, 24, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n-        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1\n-    };\n-\n     if (pfInvalid)\n         *pfInvalid = false;\n "
      },
      {
        "sha": "ef445b525865bb90bd1963ebe357a9a7118825d1",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b42a003e77537fa855f7096005256248c70deeed/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b42a003e77537fa855f7096005256248c70deeed/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=b42a003e77537fa855f7096005256248c70deeed",
        "patch": "@@ -175,6 +175,8 @@ std::vector<unsigned char> DecodeBase64(const char* p, bool* pfInvalid = NULL);\n std::string DecodeBase64(const std::string& str);\n std::string EncodeBase64(const unsigned char* pch, size_t len);\n std::string EncodeBase64(const std::string& str);\n+extern const char *pbase32;\n+extern const int decode32_table[256];\n std::vector<unsigned char> DecodeBase32(const char* p, bool* pfInvalid = NULL);\n std::string DecodeBase32(const std::string& str);\n std::string EncodeBase32(const unsigned char* pch, size_t len);"
      }
    ]
  },
  {
    "sha": "69c59f8d328dd339ba7a7ba9a11676ae07711ac7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OWM1OWY4ZDMyOGRkMzM5YmE3YTdiYTlhMTE2NzZhZTA3NzExYWM3",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2014-02-15T17:38:36Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2014-02-21T02:22:04Z"
      },
      "message": "Add z-base-32 encoding tables and inline helper methods, in addition to the already supported rfc-3548.",
      "tree": {
        "sha": "4d16d2207ea9dd080d1f0a0fb5e346dd853d239d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d16d2207ea9dd080d1f0a0fb5e346dd853d239d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69c59f8d328dd339ba7a7ba9a11676ae07711ac7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69c59f8d328dd339ba7a7ba9a11676ae07711ac7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/69c59f8d328dd339ba7a7ba9a11676ae07711ac7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69c59f8d328dd339ba7a7ba9a11676ae07711ac7/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b42a003e77537fa855f7096005256248c70deeed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b42a003e77537fa855f7096005256248c70deeed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b42a003e77537fa855f7096005256248c70deeed"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 30,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0c3278513babdcddb076db90e3aa2183ba5ebf87",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69c59f8d328dd339ba7a7ba9a11676ae07711ac7/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69c59f8d328dd339ba7a7ba9a11676ae07711ac7/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=69c59f8d328dd339ba7a7ba9a11676ae07711ac7",
        "patch": "@@ -890,6 +890,25 @@ string DecodeBase32(const string& str)\n }\n \n \n+const char *pzbase32 = \"ybndrfg8ejkmcpqxot1uwisza345h769\";\n+const int decode_zbase32_table[256] =\n+    { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, 18, -1, 25, 26, 27, 30, 29,  7, 31, -1, -1, -1, -1, -1, -1,\n+      -1, 24,  1, 12,  3,  8,  5,  6, 28, 21,  9, 10, -1, 11,  2, 16,\n+      13, 14,  4, 22, 17, 19, -1, 20, 15,  0, 23, -1, -1, -1, -1, -1,\n+      -1, 24,  1, 12,  3,  8,  5,  6, 28, 21,  9, 10, -1, 11,  2, 16,\n+      13, 14,  4, 22, 17, 19, -1, 20, 15,  0, 23, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+      -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };\n+\n bool WildcardMatch(const char* psz, const char* mask)\n {\n     while (true)"
      },
      {
        "sha": "077baeec4cb309fc44fe6f71e52a3c9081a15860",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69c59f8d328dd339ba7a7ba9a11676ae07711ac7/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69c59f8d328dd339ba7a7ba9a11676ae07711ac7/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=69c59f8d328dd339ba7a7ba9a11676ae07711ac7",
        "patch": "@@ -31,6 +31,7 @@\n #endif\n \n #include <boost/filesystem/path.hpp>\n+#include <boost/integer.hpp>\n #include <boost/thread.hpp>\n \n class CNetAddr;\n@@ -177,10 +178,20 @@ std::string EncodeBase64(const unsigned char* pch, size_t len);\n std::string EncodeBase64(const std::string& str);\n extern const char *pbase32;\n extern const int decode32_table[256];\n+inline char Rfc3548Code(boost::uint_t<5>::fast digit)\n+    { return pbase32[digit]; }\n+inline boost::uint_t<5>::fast Rfc3548Digit(char c)\n+    { return decode32_table[(unsigned char)c]; }\n std::vector<unsigned char> DecodeBase32(const char* p, bool* pfInvalid = NULL);\n std::string DecodeBase32(const std::string& str);\n std::string EncodeBase32(const unsigned char* pch, size_t len);\n std::string EncodeBase32(const std::string& str);\n+extern const char *pzbase32;\n+extern const int decode_zbase32_table[256];\n+inline char ZBase32Code(boost::uint_t<5>::fast digit)\n+    { return pzbase32[digit]; }\n+inline boost::uint_t<5>::fast ZBase32Digit(char c)\n+    { return decode_zbase32_table[(unsigned char)c]; }\n void ParseParameters(int argc, const char*const argv[]);\n bool WildcardMatch(const char* psz, const char* mask);\n bool WildcardMatch(const std::string& str, const std::string& mask);"
      }
    ]
  },
  {
    "sha": "7a0317f35248c320b0a234d657cae1a23644f2d3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YTAzMTdmMzUyNDhjMzIwYjBhMjM0ZDY1N2NhZTFhMjM2NDRmMmQz",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2014-02-15T17:42:37Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2014-02-21T22:00:40Z"
      },
      "message": "Implement error correction codes for base32 strings, using the CRC-5-USB polynomial. The encoder transforms 26-digit rfc-3548 strings into 31-digit z-base-32 strings, which are capable of recovering from any single-digit mutation, are visually distinctive, and protected against a wide variety of human-factor errors in the coding alphabet.",
      "tree": {
        "sha": "17f91bb0f7425632cdbaebef303f02029647b558",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/17f91bb0f7425632cdbaebef303f02029647b558"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a0317f35248c320b0a234d657cae1a23644f2d3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a0317f35248c320b0a234d657cae1a23644f2d3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7a0317f35248c320b0a234d657cae1a23644f2d3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a0317f35248c320b0a234d657cae1a23644f2d3/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "69c59f8d328dd339ba7a7ba9a11676ae07711ac7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69c59f8d328dd339ba7a7ba9a11676ae07711ac7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69c59f8d328dd339ba7a7ba9a11676ae07711ac7"
      }
    ],
    "stats": {
      "total": 447,
      "additions": 441,
      "deletions": 6
    },
    "files": [
      {
        "sha": "b32918ac1ccf59b23164d9635493df3778d99dd8",
        "filename": "src/uint256.h",
        "status": "modified",
        "additions": 160,
        "deletions": 6,
        "changes": 166,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a0317f35248c320b0a234d657cae1a23644f2d3/src/uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a0317f35248c320b0a234d657cae1a23644f2d3/src/uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.h?ref=7a0317f35248c320b0a234d657cae1a23644f2d3",
        "patch": "@@ -8,17 +8,24 @@\n \n #include <stdint.h>\n #include <stdio.h>\n+#include <sstream>\n #include <string>\n #include <string.h>\n+#include <stdexcept> // for runtime_error\n+#include <algorithm> // for std::copy\n+#include <map>\n #include <vector>\n \n-extern const signed char p_util_hexdigit[256]; // defined in util.cpp\n-\n+// defined in util.cpp\n+extern int ilog2(int value);\n+extern const signed char p_util_hexdigit[256];\n inline signed char HexDigit(char c)\n-{\n-    return p_util_hexdigit[(unsigned char)c];\n-}\n-\n+    { return p_util_hexdigit[(unsigned char)c]; }\n+extern const char *pbase32;\n+std::string EncodeBase32(const unsigned char* pch, size_t len);\n+std::vector<unsigned char> DecodeBase32(const char* p, bool* pfInvalid);\n+std::string AddErrorCorrectionCode32(const std::string& str);\n+std::string RemoveErrorCorrectionCode32(const std::string& str, bool* pfInvalid, std::map<size_t, char> *pMapErrors);\n /** Base class without constructors for uint256 and uint160.\n  * This makes the compiler let you use it in a union.\n  */\n@@ -342,6 +349,153 @@ class base_uint\n         return (GetHex());\n     }\n \n+    std::string GetCodedBase32(int nExtra=0) const\n+    {\n+        // The length of the decoded payload is always a power-of-2 multiple of 128.\n+        // The parameter e is the solution to the equations size=128*n and n=2^e.\n+        // Most or all of the following bit-twiddling should be optimized away by any decent compiler.\n+        // See: <http://graphics.stanford.edu/~seander/bithacks.html#RoundUpPowerOf2>\n+        int n, e, i;\n+        e = (BITS+127) / 128 - 1;\n+        e = (e >> 1)  | e;\n+        e = (e >> 2)  | e;\n+        e = (e >> 4)  | e;\n+        e = (e >> 8)  | e;\n+        e = (e >> 16) | e;\n+        e = ilog2(e + 1);\n+        n = 1 << e;\n+\n+        std::vector<unsigned char> payload(\n+            reinterpret_cast<const unsigned char*>(pn),\n+            reinterpret_cast<const unsigned char*>(pn)+BITS/8);\n+        payload.resize((130*n+7)/8); // 130 bits per 128 bits input\n+\n+        std::vector<unsigned char>::iterator begin = payload.begin();\n+        std::vector<unsigned char>::iterator end   = payload.begin()+16*n;\n+        std::vector<unsigned char>::iterator itr;\n+\n+        // Shift in 2*n zeroed padding bits to form the payload prefix.\n+        div_t d = div(2*n, 8);\n+        if (d.rem)\n+        {\n+            for (itr = end++; itr != begin; --itr)\n+                *itr = *itr >> d.rem | (*(itr-1) & (1<<d.rem)-1) << 8-d.rem;\n+            *begin >>= d.rem;\n+        }\n+        if (d.quot)\n+        {\n+            std::copy_backward(begin, end, payload.end());\n+            std::fill(begin, begin + d.quot, 0);\n+        }\n+\n+        // Add prefix bits encoding the length of the payload.\n+        for (i=0; i<e; ++i)\n+            *(begin + i/8) |= 1 << (7 - (i&7));\n+\n+        // Add the nExtra field, which is 2*n-e-1 bits in length\n+        for (i=0; i<2*n-e-1; ++i, nExtra>>=1)\n+        {\n+            d = div(2*n - i - 1, 8);\n+            *(begin + d.quot) |= (nExtra&1) << (7 - d.rem);\n+        }\n+\n+        std::string b32 = EncodeBase32(&payload[0], payload.size());\n+        b32.resize((BITS+2*n+4)/5); // strip redundant padding\n+\n+        // Add error correction encoding, and return.\n+        return AddErrorCorrectionCode32(b32);\n+    }\n+\n+    void SetCodedBase32(const char* psz, int *pnExtra=NULL)\n+    {\n+        // The length of the decoded payload is always a power-of-2 multiple of 128.\n+        // The parameter e is the solution to the equations size=128*n and n=2^e.\n+        // Most or all of the following bit-twiddling should be optimized away by any decent compiler.\n+        // See: <http://graphics.stanford.edu/~seander/bithacks.html#RoundUpPowerOf2>\n+        int n, e, i;\n+        e = (BITS+127) / 128 - 1;\n+        e = (e >> 1)  | e;\n+        e = (e >> 2)  | e;\n+        e = (e >> 4)  | e;\n+        e = (e >> 8)  | e;\n+        e = (e >> 16) | e;\n+        e = ilog2(e + 1);\n+        n = 1 << e;\n+\n+        std::string b32(psz);\n+\n+        // Drop prefix characters (e.g. \"tx\") if present\n+        div_t d = div(BITS+2*n, 130);\n+        size_t len = static_cast<size_t>(\n+            31*d.quot + (d.rem+4)/5 + 5*((d.rem+129)/130));\n+        if (b32.size() < len)\n+        {\n+            std::ostringstream ss;\n+            ss << \"improper length: expected \" << len\n+               << \" z-base-32 digits, received \" << b32.size()\n+               << \" quot=\" << d.quot << \",rem=\" << d.rem;\n+            throw std::runtime_error(ss.str());\n+        }\n+        if (b32.size() > len)\n+            b32 = b32.substr(b32.size()-len, std::string::npos);\n+\n+        std::map<size_t, char> mapErrors;\n+        b32 = RemoveErrorCorrectionCode32(b32, NULL, &mapErrors);\n+\n+        // Add zero-valued padding to achieve 8-bit alignment\n+        b32.resize((b32.size()+7)&~7, pbase32[0]);\n+        std::vector<unsigned char> payload = DecodeBase32(b32.c_str(), NULL);\n+\n+        std::vector<unsigned char>::iterator begin = payload.begin();\n+        std::vector<unsigned char>::iterator itr;\n+\n+        // Check prefix bits encoding the length of the payload.\n+        for (i=0; i<e; ++i)\n+        {\n+            if (!(*(begin + i/8) & 1 << (7 - (i&7))))\n+            {\n+                std::ostringstream ss;\n+                ss << \"invalid padding: prefix[\" << i << \"] bit is 0, instead of 1\";\n+                throw std::runtime_error(ss.str());\n+            }\n+        }\n+        if (*(begin + i/8) & 1 << (7 - (i&7)))\n+        {\n+            std::ostringstream ss;\n+            ss << \"invalid padding: prefix[\" << i << \"] bit is 1, instead of 0\";\n+            throw std::runtime_error(ss.str());\n+        }\n+\n+        // Extract nExtra field, which is 2*n-e-1 bits in length.\n+        if (pnExtra) {\n+            *pnExtra = 0;\n+            for (++i; i < 2*n; ++i) {\n+                *pnExtra <<= 1;\n+                if (*(begin + i/8) & (1 << (7 - (i&7))))\n+                    *pnExtra |= 1;\n+            }\n+        }\n+\n+        // Shift out the 2*n padding bits from the payload prefix.\n+        d = div(2*n, 8);\n+        if (d.quot)\n+            std::copy(payload.begin()+d.quot,\n+                      payload.end(),\n+                      payload.begin());\n+        if (d.rem)\n+            for (itr=begin; itr != begin+16*n; ++itr)\n+                *itr = *itr << d.rem | (*(itr+1) >> 8-d.rem) & (1<<d.rem)-1;\n+\n+        std::copy(&payload[0],\n+                  &payload[BITS/8],\n+                  reinterpret_cast<unsigned char*>(pn));\n+    }\n+\n+    void SetCodedBase32(const std::string& str, int *pnExtra=NULL)\n+    {\n+        SetCodedBase32(str.c_str(), pnExtra);\n+    }\n+\n     unsigned char* begin()\n     {\n         return (unsigned char*)&pn[0];"
      },
      {
        "sha": "3f28b795de6959c1a13d48c43695d38644b8605a",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 276,
        "deletions": 0,
        "changes": 276,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a0317f35248c320b0a234d657cae1a23644f2d3/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a0317f35248c320b0a234d657cae1a23644f2d3/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=7a0317f35248c320b0a234d657cae1a23644f2d3",
        "patch": "@@ -13,6 +13,7 @@\n #include \"version.h\"\n \n #include <stdarg.h>\n+#include <stdexcept> // for runtime_error\n \n #ifndef WIN32\n // for posix_fallocate\n@@ -63,6 +64,7 @@\n #include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n #include <boost/algorithm/string/join.hpp>\n #include <boost/algorithm/string/predicate.hpp> // for startswith() and endswith()\n+#include <boost/crc.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n #include <boost/foreach.hpp>\n@@ -890,6 +892,14 @@ string DecodeBase32(const string& str)\n }\n \n \n+int ilog2(int value)\n+{\n+    int l = 0;\n+    while ((value >> l) > 1)\n+        ++l;\n+    return l;\n+}\n+\n const char *pzbase32 = \"ybndrfg8ejkmcpqxot1uwisza345h769\";\n const int decode_zbase32_table[256] =\n     { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n@@ -909,6 +919,272 @@ const int decode_zbase32_table[256] =\n       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 };\n \n+const unsigned char EC[31] =\n+    {  4,  3, 17,  2, 30, 16, 24,  1,\n+       6, 29,  8, 15, 27, 23, 12,  0,\n+      25,  5, 18, 28, 13,  7,  9, 14,\n+      10, 26, 19, 22, 21, 11, 20 };\n+\n+// Transpose the input, creating 5 integer values each 31 bits long.\n+// The first integer contains the 1st bits of each input code point.\n+// The second integer contains the 2nd bits of each input code point.\n+// Etc. This allows for correctable burst errors of up to 5 bits on\n+// a code point boundary (e.g. an incorrect base32 digit).\n+inline void _transpose_pkt_to_msg(\n+    const vector<boost::uint_t<5>::fast> &pkt,\n+    boost::uint_t<31>::fast* msg)\n+{\n+    fill_n(msg, 5, 0);\n+\n+    int r, c;\n+    for (r=0; r < 31; ++r)\n+        for (c=0; c < 5; ++c)\n+            msg[c] |= ((pkt[r] >> (4-c)) & 1) << r;\n+}\n+\n+inline void _transpose_msg_to_pkt(\n+    const boost::uint_t<31>::fast* msg,\n+    vector<boost::uint_t<5>::fast> &pkt)\n+{\n+    fill(pkt.begin(), pkt.end(), 0);\n+\n+    int r, c;\n+    for (c=0; c < 5; ++c)\n+        for (r=0; r < 31; ++r)\n+            if (msg[c] & 1<<r)\n+                pkt[r] |= 1 << (4-c);\n+}\n+\n+string AddErrorCorrectionCode32(const char *pch, size_t len)\n+{\n+    int gp = (0x12<<1) + 1; // CRC-5-USB\n+    boost::crc_basic<5> code(gp & 0x1f);\n+    int n = (len+25)/26;\n+\n+    // The error correcting encoder take input in batches of 26 digits.\n+    // We zero-extend the input if necessary to be a multiple of 26.\n+    string input(pch, len);\n+    input.resize(26*n, pbase32[0]);\n+\n+    // We will build the output string one batch at a time, appending\n+    // the 26 input digits + 5 digit checksum.\n+    string strRet;\n+    strRet.resize(31*n);\n+\n+    int i, r, c;\n+    for (i=0; i < n; ++i) {\n+        // The packet will be where the 26 digits of input +\n+        // 5 checksum digits are stored\n+        vector<boost::uint_t<5>::fast> pkt(31);\n+\n+        // Copy over the 26 input digits, converting from rfc-3548\n+        transform(input.begin()+26*i,\n+                  input.begin()+26*(i+1),\n+                  pkt.begin(),\n+                  Rfc3548Digit);\n+\n+        // Transpose the input such that each CRC will\n+        // cover exactly one bit from each input digit.\n+        boost::uint_t<31>::fast msg[5] = {};\n+        _transpose_pkt_to_msg(pkt, msg);\n+\n+        // Calculate the checksum of the first 26 bits.\n+        boost::uint_t<5>::fast cs[5];\n+        for (c=0; c < 5; ++c) {\n+            code.reset();\n+            for (r=0; r < 26; ++r)\n+                code.process_bit(msg[c] & (1<<r));\n+            cs[c] = code.checksum();\n+        }\n+\n+        // Transpose the checksum and insert back into the\n+        // last five digits of the packet structure, MSB-first.\n+        // Loop is unrolled for clarity and speed.\n+        pkt[26]   = (cs[0]&0x10)\n+                  | (cs[1]&0x10)>>1\n+                  | (cs[2]&0x10)>>2\n+                  | (cs[3]&0x10)>>3\n+                  | (cs[4]&0x10)>>4;\n+        pkt[26+1] = (cs[0]&0x08)<<1\n+                  | (cs[1]&0x08)\n+                  | (cs[2]&0x08)>>1\n+                  | (cs[3]&0x08)>>2\n+                  | (cs[4]&0x08)>>3;\n+        pkt[26+2] = (cs[0]&0x04)<<2\n+                  | (cs[1]&0x04)<<1\n+                  | (cs[2]&0x04)\n+                  | (cs[3]&0x04)>>1\n+                  | (cs[4]&0x04)>>2;\n+        pkt[26+3] = (cs[0]&0x02)<<3\n+                  | (cs[1]&0x02)<<2\n+                  | (cs[2]&0x02)<<1\n+                  | (cs[3]&0x02)\n+                  | (cs[4]&0x02)>>1;\n+        pkt[26+4] = (cs[0]&0x01)<<4\n+                  | (cs[1]&0x01)<<3\n+                  | (cs[2]&0x01)<<2\n+                  | (cs[3]&0x01)<<1\n+                  | (cs[4]&0x01);\n+\n+        // Transform into z-base-32 encoding.\n+        transform(pkt.begin(), pkt.end(),\n+                  strRet.begin()+31*i,\n+                  ZBase32Code);\n+    }\n+\n+    // Remove padded zero bytes\n+    if (len%26) {\n+        copy(strRet.begin() + 31*(n-1) + 26,\n+             strRet.begin() + 31*(n-1) + 31,\n+             strRet.begin() + 31*(n-1) + len%26);\n+        strRet.resize(31*(n-1) + len%26 + 5);\n+    }\n+\n+    return strRet;\n+}\n+\n+string AddErrorCorrectionCode32(const string& str)\n+{\n+    return AddErrorCorrectionCode32(str.c_str(), str.size());\n+}\n+\n+bool _is_ecc32_separator_char(char c)\n+{\n+    if (c=='-' || c=='_' || isspace(c))\n+        return true;\n+    else\n+        return false;\n+}\n+\n+string RemoveErrorCorrectionCode32(\n+    const char *pch, size_t len,\n+    bool* pfInvalid, map<size_t, char> *pMapErrors)\n+{\n+    int gp = (0x12<<1) + 1; // CRC-5-USB\n+    boost::crc_basic<5> code(gp & 0x1f);\n+\n+    // Remove group separators from the input\n+    string input(pch, len);\n+    input.erase(remove_if(input.begin(),\n+                          input.end(),\n+                          &_is_ecc32_separator_char),\n+                input.end());\n+    len = input.size();\n+    int n = (len+30)/31;\n+\n+    // The error correcting decoder takes input in batches of 31 codes,\n+    // although implicit padding allows zeroes to be inserted when the\n+    // original input string is not a multiple of 26 codes in length.\n+    // However there must always be 5 error correction codes per group.\n+    assert(len%31 == 0 || len%31 > 5);\n+    if (len%31) {\n+        input.resize(31*n);\n+        copy_backward(input.begin() + 31*(n-1) + len%31 - 5,\n+                      input.begin() + 31*(n-1) + len%31,\n+                      input.end());\n+        fill(input.begin() + 31*(n-1) + len%31 - 5,\n+             input.end() - 5,\n+             pzbase32[0]);\n+    }\n+\n+    // We will reconstruct the output string one batch at a time,\n+    // appending the 26 decoded digits from each 31 digit input.\n+    string strRet;\n+    strRet.resize(26*n);\n+\n+    // pMapErrors will be filled with pairings of error\n+    // locations and the corrected z-base-32 digits.\n+    if (pMapErrors)\n+        pMapErrors->clear();\n+\n+    int i, b, f, r, c;\n+    for (i=0; i < n; ++i) {\n+        // The packet is the 26 digits of payload + 5 checksum digits.\n+        vector<boost::uint_t<5>::fast> pkt(31);\n+\n+        // Copy over the 31 input digits, converting from z-base-32\n+        transform(input.begin()+31*i,\n+                  input.begin()+31*(i+1),\n+                  pkt.begin(),\n+                  ZBase32Digit);\n+\n+        // Transpose the input so that each CRC will cover\n+        // exactly one digit from each input code point.\n+        boost::uint_t<31>::fast msg[5] = {};\n+        _transpose_pkt_to_msg(pkt, msg);\n+\n+        // Calculate checksums\n+        boost::uint_t<5>::fast cs[5];\n+        for (c=0; c < 5; ++c) {\n+            code.reset();\n+            for (r=0; r < 31; ++r)\n+                code.process_bit(msg[c] & (1<<r));\n+            cs[c] = code.checksum();\n+        }\n+\n+        // Detect errors in input and perform single-digit\n+        // correction (if possible, otherwise terminate).\n+        for (f=0, c=0; c < 5; ++c)\n+            if (cs[c])\n+                f |= 1 << EC[cs[c]-1];\n+        // f now contains the digit position(s) indicated as erroneous by the CRC checksums.\n+        // If it is zero, then the message is correct.\n+        // If one bit is set, then that digit can be corrected.\n+        // If more than one bit is set, an unrecoverable error occured.\n+        if (f) {\n+            // position of the (first) invalid digit\n+            b = ilog2(f);\n+\n+            // check if there is more than one invalid digit\n+            if (f != 1<<ilog2(f)) {\n+                if (pfInvalid) {\n+                    *pfInvalid = true;\n+                    strRet.resize(i*26);\n+                    return strRet;\n+                } else {\n+                    throw runtime_error(\"multiple uncorrectable errors encountered\");\n+                }\n+            }\n+\n+            // perform message reconstruction\n+            for (c=0; c < 5; ++c)\n+                if (cs[c])\n+                    msg[c] ^= f;\n+\n+            // record the error\n+            if (pMapErrors)\n+                pMapErrors->insert(pair<size_t, char>(31*i+b,\n+                    ZBase32Code((msg[0]&f) >> b << 4 |\n+                                (msg[1]&f) >> b << 3 |\n+                                (msg[2]&f) >> b << 2 |\n+                                (msg[3]&f) >> b << 1 |\n+                                (msg[4]&f) >> b)));\n+        }\n+\n+        // Transpose back to a sequence of 5-bit digits.\n+        _transpose_msg_to_pkt(msg, pkt);\n+\n+        // Transform into rfc-3548 encoding.\n+        transform(pkt.begin(), pkt.begin()+26,\n+                  strRet.begin()+26*i,\n+                  Rfc3548Code);\n+    }\n+\n+    // Remove padding bytes\n+    if (len%31)\n+        strRet.resize(26*(n-1) + len%31 - 5);\n+\n+    return strRet;\n+}\n+\n+string RemoveErrorCorrectionCode32(\n+    const string& str,\n+    bool* pfInvalid, map<size_t, char> *pMapErrors)\n+{\n+    return RemoveErrorCorrectionCode32(str.c_str(), str.size(), pfInvalid, pMapErrors);\n+}\n+\n+\n bool WildcardMatch(const char* psz, const char* mask)\n {\n     while (true)"
      },
      {
        "sha": "189fd4cea3bc45ff638b099027d7c56a6fcf9a1b",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a0317f35248c320b0a234d657cae1a23644f2d3/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a0317f35248c320b0a234d657cae1a23644f2d3/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=7a0317f35248c320b0a234d657cae1a23644f2d3",
        "patch": "@@ -192,6 +192,11 @@ inline char ZBase32Code(boost::uint_t<5>::fast digit)\n     { return pzbase32[digit]; }\n inline boost::uint_t<5>::fast ZBase32Digit(char c)\n     { return decode_zbase32_table[(unsigned char)c]; }\n+extern const unsigned char EC[31];\n+std::string RemoveErrorCorrectionCode32(const char *pch, size_t len, bool* pfInvalid=NULL, std::map<size_t, char> *pMapErrors=NULL);\n+std::string RemoveErrorCorrectionCode32(const std::string& str, bool* pfInvalid=NULL, std::map<size_t, char> *pMapErrors=NULL);\n+std::string AddErrorCorrectionCode32(const char *pch, size_t len);\n+std::string AddErrorCorrectionCode32(const std::string& str);\n void ParseParameters(int argc, const char*const argv[]);\n bool WildcardMatch(const char* psz, const char* mask);\n bool WildcardMatch(const std::string& str, const std::string& mask);"
      }
    ]
  },
  {
    "sha": "f3ac563ce0469f52c6fcc8d8311ea8b28984bc59",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmM2FjNTYzY2UwNDY5ZjUyYzZmY2M4ZDgzMTFlYThiMjg5ODRiYzU5",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2014-02-18T02:49:03Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2014-02-21T22:00:40Z"
      },
      "message": "Add unit tests for base32 error correction codes.",
      "tree": {
        "sha": "8378ff352a1abfee54565255f0d0edb7214ae136",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8378ff352a1abfee54565255f0d0edb7214ae136"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3ac563ce0469f52c6fcc8d8311ea8b28984bc59",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3ac563ce0469f52c6fcc8d8311ea8b28984bc59",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f3ac563ce0469f52c6fcc8d8311ea8b28984bc59",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3ac563ce0469f52c6fcc8d8311ea8b28984bc59/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7a0317f35248c320b0a234d657cae1a23644f2d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a0317f35248c320b0a234d657cae1a23644f2d3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7a0317f35248c320b0a234d657cae1a23644f2d3"
      }
    ],
    "stats": {
      "total": 103,
      "additions": 103,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fc475a961fcc7ed92f3b721a657f22aab10c9006",
        "filename": "src/test/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3ac563ce0469f52c6fcc8d8311ea8b28984bc59/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3ac563ce0469f52c6fcc8d8311ea8b28984bc59/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=f3ac563ce0469f52c6fcc8d8311ea8b28984bc59",
        "patch": "@@ -13,6 +13,7 @@ JSON_TEST_FILES = \\\n   data/sig_noncanonical.json \\\n   data/base58_encode_decode.json \\\n   data/base58_keys_invalid.json \\\n+  data/ecc32_encode_decode.json \\\n   data/script_invalid.json \\\n   data/tx_invalid.json \\\n   data/tx_valid.json\n@@ -43,6 +44,7 @@ test_bitcoin_SOURCES = \\\n   Checkpoints_tests.cpp \\\n   compress_tests.cpp \\\n   DoS_tests.cpp \\\n+  ecc32_tests.cpp \\\n   getarg_tests.cpp \\\n   key_tests.cpp \\\n   miner_tests.cpp \\"
      },
      {
        "sha": "b5991f15500877267e4d5625fa33a546fb324645",
        "filename": "src/test/data/ecc32_encode_decode.json",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3ac563ce0469f52c6fcc8d8311ea8b28984bc59/src/test/data/ecc32_encode_decode.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3ac563ce0469f52c6fcc8d8311ea8b28984bc59/src/test/data/ecc32_encode_decode.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/ecc32_encode_decode.json?ref=f3ac563ce0469f52c6fcc8d8311ea8b28984bc59",
        "patch": "@@ -0,0 +1,35 @@\n+[\n+[\"\", \"\"],\n+[\"a\", \"yyyyyy\"],\n+[\"ab\", \"ybybyyb\"],\n+[\"abc\", \"ybnnbnnb\"],\n+[\"abcd\", \"ybndnnnbn\"],\n+[\"abcde\", \"ybndrgngfg\"],\n+[\"abcdef\", \"ybndrfd8gfd\"],\n+[\"abcdefg\", \"ybndrfgfbydd\"],\n+[\"abcdefgh\", \"ybndrfg8fg8rr\"],\n+[\"abcdefghi\", \"ybndrfg8epgxrc\"],\n+[\"abcdefghij\", \"ybndrfg8ejrxxrc\"],\n+[\"abcdefghijk\", \"ybndrfg8ejkrffrc\"],\n+[\"abcdefghijkl\", \"ybndrfg8ejkmrfqxc\"],\n+[\"abcdefghijklm\", \"ybndrfg8ejkmcrfqdy\"],\n+[\"abcdefghijklmn\", \"ybndrfg8ejkmcpjfqqp\"],\n+[\"abcdefghijklmno\", \"ybndrfg8ejkmcpq8mqyd\"],\n+[\"abcdefghijklmnop\", \"ybndrfg8ejkmcpqxerbxc\"],\n+[\"abcdefghijklmnopq\", \"ybndrfg8ejkmcpqxoawtxh\"],\n+[\"abcdefghijklmnopqr\", \"ybndrfg8ejkmcpqxotjfyxh\"],\n+[\"abcdefghijklmnopqrs\", \"ybndrfg8ejkmcpqxot1jz17h\"],\n+[\"abcdefghijklmnopqrst\", \"ybndrfg8ejkmcpqxot1ujzbqx\"],\n+[\"abcdefghijklmnopqrstu\", \"ybndrfg8ejkmcpqxot1uw7zbq5\"],\n+[\"abcdefghijklmnopqrstuv\", \"ybndrfg8ejkmcpqxot1uwienb55\"],\n+[\"abcdefghijklmnopqrstuvw\", \"ybndrfg8ejkmcpqxot1uwisewz5p\"],\n+[\"abcdefghijklmnopqrstuvwx\", \"ybndrfg8ejkmcpqxot1uwisz9wy5p\"],\n+[\"abcdefghijklmnopqrstuvwxy\", \"ybndrfg8ejkmcpqxot1uwisza9cydp\"],\n+[\"abcdefghijklmnopqrstuvwxyz\", \"ybndrfg8ejkmcpqxot1uwisza39c3dw\"],\n+[\"abcdefghijklmnopqrstuvwxyz2\", \"ybndrfg8ejkmcpqxot1uwisza39c3dw44yy4y\"],\n+[\"abcdefghijklmnopqrstuvwxyz23\", \"ybndrfg8ejkmcpqxot1uwisza39c3dw4545y45\"],\n+[\"abcdefghijklmnopqrstuvwxyz234\", \"ybndrfg8ejkmcpqxot1uwisza39c3dw45hg5hg5\"],\n+[\"abcdefghijklmnopqrstuvwxyz2345\", \"ybndrfg8ejkmcpqxot1uwisza39c3dw45h7ggh5g\"],\n+[\"abcdefghijklmnopqrstuvwxyz23456\", \"ybndrfg8ejkmcpqxot1uwisza39c3dw45h76agnfa\"],\n+[\"abcdefghijklmnopqrstuvwxyz234567\", \"ybndrfg8ejkmcpqxot1uwisza39c3dw45h76983nf8\"]\n+]\n\\ No newline at end of file"
      },
      {
        "sha": "62d6160df503fec3a2c5c126eec85051681589dd",
        "filename": "src/test/ecc32_tests.cpp",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3ac563ce0469f52c6fcc8d8311ea8b28984bc59/src/test/ecc32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3ac563ce0469f52c6fcc8d8311ea8b28984bc59/src/test/ecc32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/ecc32_tests.cpp?ref=f3ac563ce0469f52c6fcc8d8311ea8b28984bc59",
        "patch": "@@ -0,0 +1,66 @@\n+#include \"util.h\"\n+\n+#include \"data/ecc32_encode_decode.json.h\"\n+\n+#include <boost/foreach.hpp>\n+#include <boost/test/unit_test.hpp>\n+#include \"json/json_spirit_reader_template.h\"\n+#include \"json/json_spirit_utils.h\"\n+#include \"json/json_spirit_writer_template.h\"\n+\n+using namespace json_spirit;\n+extern Array read_json(const std::string& jsondata);\n+\n+BOOST_AUTO_TEST_SUITE(ecc32_tests)\n+\n+BOOST_AUTO_TEST_CASE(ecc32_AddErrorCorrectionCode32)\n+{\n+    Array tests = read_json(std::string(\n+        json_tests::ecc32_encode_decode,\n+        json_tests::ecc32_encode_decode +\n+            sizeof(json_tests::ecc32_encode_decode)));\n+    BOOST_FOREACH(Value& tv, tests)\n+    {\n+        Array test = tv.get_array();\n+        std::string strTest = write_string(tv, false);\n+        if (test.size() < 2) // Allow for extra stuff (useful for comments)\n+        {\n+            BOOST_ERROR(\"Bad test: \" << strTest);\n+            continue;\n+        }\n+        std::string base32string = test[0].get_str();\n+        std::string  ecc32string = test[1].get_str();\n+        std::string result = AddErrorCorrectionCode32(base32string);\n+        BOOST_CHECK_MESSAGE(result == ecc32string, strTest);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(ecc32_RemoveErrorCorrectionCode32)\n+{\n+    Array tests = read_json(std::string(\n+        json_tests::ecc32_encode_decode,\n+        json_tests::ecc32_encode_decode +\n+            sizeof(json_tests::ecc32_encode_decode)));\n+    BOOST_FOREACH(Value& tv, tests)\n+    {\n+        Array test = tv.get_array();\n+        std::string strTest = write_string(tv, false);\n+        if (test.size() < 2) // Allow for extra stuff (useful for comments)\n+        {\n+            BOOST_ERROR(\"Bad test: \" << strTest);\n+            continue;\n+        }\n+        std::string base32string = test[0].get_str();\n+        std::string  ecc32string = test[1].get_str();\n+        bool fInvalid; std::map<size_t, char> pMapErrors;\n+        std::string result = RemoveErrorCorrectionCode32(\n+            ecc32string, &fInvalid, &pMapErrors);\n+        BOOST_CHECK_MESSAGE(fInvalid == false,\n+            strTest + \" - fInvalid=true\");\n+        BOOST_CHECK_MESSAGE(result == base32string,\n+            strTest + \" - \\\"\" + result + \"\\\"\" );\n+        // FIXME: check pMapErrors\n+    }\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "33f9532ec59e4977bf710f88a5bfa40659637be2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozM2Y5NTMyZWM1OWU0OTc3YmY3MTBmODhhNWJmYTQwNjU5NjM3YmUy",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2014-02-19T02:40:20Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2014-02-21T22:00:40Z"
      },
      "message": "Add unit tests demonstrating recovery from transcription errors.",
      "tree": {
        "sha": "beabceea5c2e9cbbe9a05c7333e884e3a9480ad1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/beabceea5c2e9cbbe9a05c7333e884e3a9480ad1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33f9532ec59e4977bf710f88a5bfa40659637be2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33f9532ec59e4977bf710f88a5bfa40659637be2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/33f9532ec59e4977bf710f88a5bfa40659637be2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33f9532ec59e4977bf710f88a5bfa40659637be2/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f3ac563ce0469f52c6fcc8d8311ea8b28984bc59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3ac563ce0469f52c6fcc8d8311ea8b28984bc59",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f3ac563ce0469f52c6fcc8d8311ea8b28984bc59"
      }
    ],
    "stats": {
      "total": 1036,
      "additions": 1032,
      "deletions": 4
    },
    "files": [
      {
        "sha": "ce7280d445388cf4abece6c3d02fe767356c2510",
        "filename": "src/test/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33f9532ec59e4977bf710f88a5bfa40659637be2/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33f9532ec59e4977bf710f88a5bfa40659637be2/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=33f9532ec59e4977bf710f88a5bfa40659637be2",
        "patch": "@@ -14,6 +14,7 @@ JSON_TEST_FILES = \\\n   data/base58_encode_decode.json \\\n   data/base58_keys_invalid.json \\\n   data/ecc32_encode_decode.json \\\n+  data/ecc32_recover.json \\\n   data/script_invalid.json \\\n   data/tx_invalid.json \\\n   data/tx_valid.json"
      },
      {
        "sha": "3b207e7300323809ea9893fe09bc6cee6a9570fa",
        "filename": "src/test/data/ecc32_recover.json",
        "status": "added",
        "additions": 965,
        "deletions": 0,
        "changes": 965,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33f9532ec59e4977bf710f88a5bfa40659637be2/src/test/data/ecc32_recover.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33f9532ec59e4977bf710f88a5bfa40659637be2/src/test/data/ecc32_recover.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/ecc32_recover.json?ref=33f9532ec59e4977bf710f88a5bfa40659637be2",
        "patch": "@@ -0,0 +1,965 @@\n+[\n+[\"tqsesd7jr9yk33twfb9d8txzjww849ahpgirnba18k4szb8mo8x6f6cxoiydbm\", \"rowiwd5je7akzarufb7dhrpxju4ngvecbyshk2wxbhlqhd6f6mpq\", {\"13\":\"y\",\"50\":\"d\"}],\n+\n+[\"yqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"bqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"nqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"dqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"rqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"fqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"gqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"8qsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"eqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"jqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"kqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"mqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"cqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"pqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"qqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"xqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"oqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"1qsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"uqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"wqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"iqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"sqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"zqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"aqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"3qsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"4qsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"5qsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"hqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"7qsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"6qsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"0\":\"t\"}],\n+[\"tysesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tbsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tnsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tdsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"trsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tfsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tgsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"t8sesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tesesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tjsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tksesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tmsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tcsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tpsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"txsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tosesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"ttsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"t1sesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tusesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"twsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tisesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tssesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tzsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tasesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"t3sesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"t4sesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"t5sesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"thsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"t7sesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"t6sesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"1\":\"q\"}],\n+[\"tqyesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqbesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqnesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqdesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqresd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqfesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqgesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tq8esd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqeesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqjesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqkesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqmesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqcesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqpesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqqesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqxesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqoesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqtesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tq1esd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tquesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqwesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqiesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqzesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqaesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tq3esd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tq4esd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tq5esd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqhesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tq7esd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tq6esd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"2\":\"s\"}],\n+[\"tqsysd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsbsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsnsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsdsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsrsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsfsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsgsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqs8sd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsjsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsksd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsmsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqscsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqspsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsqsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsxsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsosd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqstsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqs1sd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsusd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqswsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsisd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsssd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqszsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqsasd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqs3sd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqs4sd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqs5sd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqshsd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqs7sd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqs6sd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"3\":\"e\"}],\n+[\"tqseyd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsebd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsend7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsedd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqserd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsefd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsegd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqse8d7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqseed7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsejd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsekd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsemd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsecd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsepd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqseqd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsexd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqseod7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsetd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqse1d7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqseud7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsewd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqseid7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsezd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsead7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqse3d7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqse4d7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqse5d7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsehd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqse7d7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqse6d7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"4\":\"s\"}],\n+[\"tqsesy7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesb7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesn7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesr7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesf7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesg7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqses87jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsese7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesj7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesk7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesm7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesc7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesp7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesq7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesx7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqseso7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsest7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqses17jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesu7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesw7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesi7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsess7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesz7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesa7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqses37jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqses47jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqses57jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesh7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqses77jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqses67jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"5\":\"d\"}],\n+[\"tqsesdyjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdbjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdnjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesddjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdrjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdfjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdgjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesd8jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdejr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdjjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdkjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdmjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdcjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdpjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdqjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdxjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdojr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdtjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesd1jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdujr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdwjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdijr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdsjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdzjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdajr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesd3jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesd4jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesd5jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesdhjr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd6jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"6\":\"7\"}],\n+[\"tqsesd7yr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7br9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7nr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7dr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7rr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7fr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7gr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd78r9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7er9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7kr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7mr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7cr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7pr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7qr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7xr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7or9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7tr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd71r9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7ur9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7wr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7ir9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7sr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7zr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7ar9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd73r9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd74r9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd75r9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7hr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd77r9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd76r9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"7\":\"j\"}],\n+[\"tqsesd7jy9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jb9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jn9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jd9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jf9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jg9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7j89yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7je9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jj9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jk9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jm9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jc9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jp9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jq9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jx9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jo9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jt9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7j19yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7ju9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jw9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7ji9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7js9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jz9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7ja9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7j39yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7j49yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7j59yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jh9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7j79yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7j69yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"8\":\"r\"}],\n+[\"tqsesd7jryyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrbyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrnyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrdyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrryk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrfyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrgyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jr8yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jreyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrjyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrkyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrmyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrcyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrpyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrqyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrxyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jroyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrtyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jr1yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jruyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrwyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jriyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrsyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrzyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrayk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jr3yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jr4yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jr5yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jrhyk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jr7yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jr6yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"9\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9bk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9nk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9dk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9rk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9fk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9gk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr98k3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9ek3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9jk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9kk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9mk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9ck3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9pk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9qk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9xk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9ok3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9tk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr91k3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9uk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9wk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9ik3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9sk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9zk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9ak3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr93k3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr94k3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr95k3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9hk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr97k3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr96k3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"10\":\"y\"}],\n+[\"tqsesd7jr9yy3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yb3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yn3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yd3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yr3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yf3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yg3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9y83ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9ye3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yj3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9ym3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yc3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yp3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yq3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yx3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yo3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yt3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9y13ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yu3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yw3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yi3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9ys3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yz3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9ya3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9y33ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9y43ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9y53ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9yh3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9y73ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9y63ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"11\":\"k\"}],\n+[\"tqsesd7jr9ykyytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykbytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9yknytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykdytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykrytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykfytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykgytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9yk8ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykeytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykjytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykkytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykmytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykcytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykpytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykqytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykxytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykoytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9yktytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9yk1ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykuytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykwytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykiytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9yksytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykzytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykaytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk4ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9yk5ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9ykhytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9yk7ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9yk6ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"12\":\"3\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3btwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3ntwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3dtwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3rtwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3ftwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3gtwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk38twfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3etwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3jtwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3ktwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3mtwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3ctwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3ptwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3qtwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3xtwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3otwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3ttwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk31twfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3utwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3wtwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3itwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3stwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3ztwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3atwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk33twfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk34twfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk35twfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3htwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk37twfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk36twfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"13\":\"y\"}],\n+[\"tqsesd7jr9yk3yywfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3ybwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3ynwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3ydwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3yrwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3yfwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3ygwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3y8wfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3yewfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3yjwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3ykwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3ymwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3ycwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3ypwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3yqwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3yxwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3yowfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3y1wfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3yuwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3ywwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3yiwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3yswfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3yzwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3yawfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3y3wfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3y4wfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3y5wfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3yhwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3y7wfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3y6wfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"14\":\"t\"}],\n+[\"tqsesd7jr9yk3ytyfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytbfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytnfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytdfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytrfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytffb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytgfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3yt8fb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytefb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytjfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytkfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytmfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytcfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytpfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytqfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytxfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytofb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3yttfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3yt1fb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytufb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3ytifb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytsfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytzfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytafb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3yt3fb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3yt4fb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3yt5fb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ythfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3yt7fb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3yt6fb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"15\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwyb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwbb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwnb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwdb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwrb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3ytwgb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytw8b9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytweb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwjb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwkb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwmb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwcb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwpb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwqb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwxb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwob9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwtb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytw1b9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwub9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwwb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwib9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwsb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwzb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwab9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytw3b9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytw4b9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytw5b9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwhb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytw7b9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytw6b9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"16\":\"f\"}],\n+[\"tqsesd7jr9yk3ytwfy9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3ytwfn9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfd9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfr9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwff9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfg9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwf89d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfe9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfj9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfk9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfm9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfc9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfp9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfq9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfx9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfo9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwft9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwf19d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfu9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfw9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfi9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfs9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfz9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfa9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwf39d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwf49d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwf59d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfh9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwf79d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwf69d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"17\":\"b\"}],\n+[\"tqsesd7jr9yk3ytwfbyd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbbd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbnd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbdd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbrd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbfd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbgd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb8d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbed8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbjd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbkd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbmd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbcd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbpd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbqd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbxd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbod8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbtd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb1d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbud8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbwd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbid8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbsd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbzd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbad8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb3d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb4d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb5d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfbhd8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb7d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb6d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"18\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9y8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9b8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9n8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3ytwfb9r8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9f8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9g8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb988txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9e8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9j8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9k8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9m8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9c8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9p8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9q8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9x8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9o8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9t8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb918txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9u8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9w8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9i8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9s8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9z8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9a8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb938txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb948txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb958txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9h8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb978txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb968txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"19\":\"d\"}],\n+[\"tqsesd7jr9yk3ytwfb9dytxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dbtxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dntxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9ddtxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9drtxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dftxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dgtxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3ytwfb9detxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9djtxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dktxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dmtxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dctxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dptxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dqtxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dxtxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dotxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dttxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d1txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dutxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dwtxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9ditxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dstxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dztxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9datxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d3txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d4txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d5txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9dhtxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d7txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d6txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"20\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8yxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8bxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8nxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8dxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8rxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8fxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8gxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d88xzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8exzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8jxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8kxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8mxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8cxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8pxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8qxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8xxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8oxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3ytwfb9d81xzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8uxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8wxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8ixzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8sxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8zxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8axzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d83xzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d84xzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d85xzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8hxzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d87xzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d86xzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"21\":\"t\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tyzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tbzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tnzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tdzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8trzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tfzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tgzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8t8zjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tezjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tjzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tkzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tmzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tczjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tpzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tqzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3ytwfb9d8tozjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8ttzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8t1zjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tuzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8twzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tizjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tszjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tzzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tazjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8t3zjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8t4zjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8t5zjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8thzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8t7zjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8t6zjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"22\":\"x\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txyjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txbjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txnjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txdjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txrjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txfjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txgjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tx8jww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txejww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txjjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txkjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txmjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txcjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txpjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txqjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txxjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txojww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txtjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tx1jww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txujww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txwjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txijww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txsjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3ytwfb9d8txajww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tx3jww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tx4jww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tx5jww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txhjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tx7jww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8tx6jww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"23\":\"z\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzyww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzbww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txznww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzdww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzrww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzfww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzgww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txz8ww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzeww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzkww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzmww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzcww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzpww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzqww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzxww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzoww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txztww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txz1ww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzuww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzwww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txziww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzsww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzzww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzaww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txz3ww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txz4ww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txz5ww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzhww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txz7ww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txz6ww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"24\":\"j\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjyw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjbw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjnw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjdw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjrw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjfw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjgw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzj8w849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjew849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjjw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjkw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjmw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjcw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjpw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjqw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjxw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjow849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjtw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzj1w849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjuw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjiw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjsw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjzw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjaw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzj3w849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzj4w849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzj5w849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjhw849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzj7w849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzj6w849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"25\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwy849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwb849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwn849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwd849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwr849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwf849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwg849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjw8849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwe849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwj849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwk849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwm849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwc849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwp849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwq849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwx849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwo849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwt849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjw1849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwu849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwi849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjws849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwz849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwa849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjw3849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjw4849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjw5849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwh849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjw7849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjw6849a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"26\":\"w\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwy49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwb49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwn49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwd49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwr49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwf49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwg49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwe49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwj49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwk49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwm49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwc49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwp49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwq49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwx49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwo49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwt49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww149a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwu49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwww49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwi49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwws49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwz49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwa49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww349a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww449a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww549a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjwwh49a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww749a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww649a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"27\":\"8\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8y9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8b9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8n9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8d9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8r9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8f9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8g9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww889a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8e9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8j9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8k9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8m9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8c9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8p9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8q9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8x9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8o9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8t9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww819a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8u9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8w9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8i9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8s9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8z9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8a9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww839a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww859a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8h9a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww879a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww869a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"28\":\"4\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84ya\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84ba\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84na\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84da\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84ra\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84fa\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84ga\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww848a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84ea\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84ja\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84ka\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84ma\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84ca\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84pa\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84qa\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84xa\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84oa\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84ta\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww841a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84ua\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84wa\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84ia\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84sa\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84za\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84aa\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww843a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww844a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww845a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww84ha\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww847a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww846a\", \"rowiwd5je7akzarufb7dhrpxju\", {\"29\":\"9\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849y\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849b\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849n\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849d\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849r\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849f\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849g\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8498\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849e\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849j\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849k\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849m\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849c\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849p\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849q\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849x\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849o\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849t\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8491\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849u\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849w\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849i\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849s\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849z\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849a\", \"rowiwd5je7akzarufb7dhrpxju\", {}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8493\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8494\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8495\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww849h\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8497\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}],\n+[\"tqsesd7jr9yk3ytwfb9d8txzjww8496\", \"rowiwd5je7akzarufb7dhrpxju\", {\"30\":\"a\"}]\n+]\n\\ No newline at end of file"
      },
      {
        "sha": "93b5a72365d05c82f404aa9435ba4b9e3fcb566d",
        "filename": "src/test/ecc32_tests.cpp",
        "status": "modified",
        "additions": 66,
        "deletions": 4,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33f9532ec59e4977bf710f88a5bfa40659637be2/src/test/ecc32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33f9532ec59e4977bf710f88a5bfa40659637be2/src/test/ecc32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/ecc32_tests.cpp?ref=33f9532ec59e4977bf710f88a5bfa40659637be2",
        "patch": "@@ -1,6 +1,9 @@\n #include \"util.h\"\n \n #include \"data/ecc32_encode_decode.json.h\"\n+#include \"data/ecc32_recover.json.h\"\n+\n+#include <cstdlib>\n \n #include <boost/foreach.hpp>\n #include <boost/test/unit_test.hpp>\n@@ -11,6 +14,20 @@\n using namespace json_spirit;\n extern Array read_json(const std::string& jsondata);\n \n+std::string ErrorMapString(const std::map<size_t, char> &mapErrors)\n+{\n+    std::ostringstream ss;\n+    ss << '{';\n+    std::map<size_t, char>::const_iterator itr;\n+    for (itr = mapErrors.begin(); itr != mapErrors.end(); ++itr) {\n+        if (itr != mapErrors.begin())\n+            ss << \",\";\n+        ss << '\"' << itr->first << \"\\\":\\\"\" << itr->second << '\\\"';\n+    }\n+    ss << '}';\n+    return ss.str();\n+}\n+\n BOOST_AUTO_TEST_SUITE(ecc32_tests)\n \n BOOST_AUTO_TEST_CASE(ecc32_AddErrorCorrectionCode32)\n@@ -35,7 +52,7 @@ BOOST_AUTO_TEST_CASE(ecc32_AddErrorCorrectionCode32)\n     }\n }\n \n-BOOST_AUTO_TEST_CASE(ecc32_RemoveErrorCorrectionCode32)\n+BOOST_AUTO_TEST_CASE(ecc32_RemoveErrorCorrectionCode32_basic)\n {\n     Array tests = read_json(std::string(\n         json_tests::ecc32_encode_decode,\n@@ -52,15 +69,60 @@ BOOST_AUTO_TEST_CASE(ecc32_RemoveErrorCorrectionCode32)\n         }\n         std::string base32string = test[0].get_str();\n         std::string  ecc32string = test[1].get_str();\n-        bool fInvalid; std::map<size_t, char> pMapErrors;\n+        bool fInvalid; std::map<size_t, char> mapErrors;\n+        std::string result = RemoveErrorCorrectionCode32(\n+            ecc32string, &fInvalid, &mapErrors);\n+        BOOST_CHECK_MESSAGE(fInvalid == false,\n+            strTest + \" - fInvalid=true\");\n+        BOOST_CHECK_MESSAGE(result == base32string,\n+            strTest + \" - \\\"\" + result + \"\\\"\" );\n+        BOOST_CHECK_MESSAGE(mapErrors.size() == 0,\n+            strTest + \" - mapErrors not empty\");\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(ecc32_RemoveErrorCorrectionCode32_recover)\n+{\n+    Array tests = read_json(std::string(\n+        json_tests::ecc32_recover,\n+        json_tests::ecc32_recover +\n+            sizeof(json_tests::ecc32_recover)));\n+    BOOST_FOREACH(Value& tv, tests)\n+    {\n+        Array test = tv.get_array();\n+        std::string strTest = write_string(tv, false);\n+        if (test.size() < 3) // Allow for extra stuff (useful for comments)\n+        {\n+            BOOST_ERROR(\"Bad test: \" << strTest);\n+            continue;\n+        }\n+        std::string  ecc32string = test[0].get_str();\n+        std::string base32string = test[1].get_str();\n+        Object         errordict = test[2].get_obj();\n+        bool fInvalid; std::map<size_t, char> mapErrors;\n         std::string result = RemoveErrorCorrectionCode32(\n-            ecc32string, &fInvalid, &pMapErrors);\n+            ecc32string, &fInvalid, &mapErrors);\n         BOOST_CHECK_MESSAGE(fInvalid == false,\n             strTest + \" - fInvalid=true\");\n         BOOST_CHECK_MESSAGE(result == base32string,\n             strTest + \" - \\\"\" + result + \"\\\"\" );\n-        // FIXME: check pMapErrors\n+        size_t nErrors=0;\n+        BOOST_FOREACH(const Pair& e, errordict)\n+        {\n+            ++nErrors;\n+            int  key   = std::atoi(e.name_.c_str());\n+            char value = mapErrors[key];\n+            BOOST_CHECK_MESSAGE(e.value_.get_str() == std::string(1, value),\n+                strTest + \" - \" + \"mapErrors=\" + ErrorMapString(mapErrors));\n+        }\n+        BOOST_CHECK_MESSAGE(nErrors == mapErrors.size(),\n+            strTest + \" - \" + \"mapErrors=\" + ErrorMapString(mapErrors));\n     }\n+\n+    bool fInvalid;\n+    RemoveErrorCorrectionCode32(\"invalid\", &fInvalid);\n+    BOOST_CHECK_MESSAGE(fInvalid,\n+        \"decoding of invalid ecc32 message thinks it was successful\");\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "865264f3d785fb954261e5453707cf706f3de5e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NjUyNjRmM2Q3ODVmYjk1NDI2MWU1NDUzNzA3Y2Y3MDZmM2RlNWU4",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2014-02-20T10:10:02Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2014-02-21T22:00:41Z"
      },
      "message": "Add unit tests for converting to/from base_uint<BITS> and ecc32 values.",
      "tree": {
        "sha": "ec4cad294283d6ef4350bbc7c77a2588358259c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec4cad294283d6ef4350bbc7c77a2588358259c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/865264f3d785fb954261e5453707cf706f3de5e8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/865264f3d785fb954261e5453707cf706f3de5e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/865264f3d785fb954261e5453707cf706f3de5e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/865264f3d785fb954261e5453707cf706f3de5e8/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "33f9532ec59e4977bf710f88a5bfa40659637be2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33f9532ec59e4977bf710f88a5bfa40659637be2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33f9532ec59e4977bf710f88a5bfa40659637be2"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 41,
      "deletions": 0
    },
    "files": [
      {
        "sha": "87023e06159bdc8af4f60070abbd8bdd6826cd89",
        "filename": "src/test/uint256_tests.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/865264f3d785fb954261e5453707cf706f3de5e8/src/test/uint256_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/865264f3d785fb954261e5453707cf706f3de5e8/src/test/uint256_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/uint256_tests.cpp?ref=865264f3d785fb954261e5453707cf706f3de5e8",
        "patch": "@@ -8,6 +8,8 @@\n #include <string>\n #include \"version.h\"\n \n+#include <boost/lexical_cast.hpp>\n+\n BOOST_AUTO_TEST_SUITE(uint256_tests)\n  \n const unsigned char R1Array[] = \n@@ -629,5 +631,44 @@ BOOST_AUTO_TEST_CASE( getmaxcoverage ) // some more tests just to get 100% cover\n     CHECKBITWISEOPERATOR(R1,~R2,&)\n }\n \n+template<unsigned int BITS>\n+void _check_ecc32(\n+    const std::string& hex,\n+    const std::string& ecc32,\n+          int          extra)\n+{\n+    std::ostringstream ss;\n+    ss << \"hex=0x\" << hex\n+       << \", ecc32=\" << ecc32\n+       << \", extra=\" << extra;\n+    int nExtra=0;\n+    base_uint<BITS> a, b;\n+    a.SetHex(hex);\n+    b.SetCodedBase32(ecc32, &nExtra);\n+    BOOST_CHECK_MESSAGE(nExtra == extra,\n+        ss.str() + \" - nExtra=\" + boost::lexical_cast<std::string>(nExtra));\n+    BOOST_CHECK_MESSAGE(a == b,\n+        ss.str() + \" - a=0x\" + a.ToString() + \", b=0x\" + b.ToString());\n+    BOOST_CHECK_MESSAGE(a.GetCodedBase32(extra) == ecc32,\n+        ss.str() + \" - a.GetCodedBase32(extra)=\" + a.GetCodedBase32(extra));\n+    BOOST_CHECK_MESSAGE(b.GetHex() == hex,\n+        ss.str() + \" - b.GetHex()=\" + b.GetHex());\n+}\n+\n+BOOST_AUTO_TEST_CASE( ecc32 )\n+{\n+    _check_ecc32<32>(\"be05fbf1\", \"8t9cn5h74bkr\", 0);\n+    _check_ecc32<64>(\"c7b15e22faa0f80a\", \"ek9noxwe16s8doyuop6\", 1);\n+    _check_ecc32<96>(\"0f43f55ca630a6ff7dadcc5f\", \"k931sz597ggnuf37kdbh4156k\", 1);\n+    _check_ecc32<128>(\"48039c14264a44358674458aa00829c1\", \"gbfrrkbn1fq1ddktnkrakjay4ee53gy\", 0);\n+    _check_ecc32<160>(\"f0389ca121dbeb09a47dbe32fc45a238c2f7e305\", \"1bxd69bdte1f9o3mh9prb8i7se67wnepbuohxyp6x1n\", 1);\n+    _check_ecc32<256>(\"f0628ce6f9c42e8afbf52f4d1e8f9dde2a725fcb00f72bfa20b6ccea8af28d35\", \"spcp6kfqiufsrd7nz7ay3pxzrkah77hs6us8thujx6z7awmsr98ueaazo91ktw\", 3);\n+    _check_ecc32<320>(\"9d7612b648cc4f1c3a4c1bf46384d6effd5e2274f225198c48686470185124637f574098ec68be40\", \"4jymh48cubyfq95drtetohdrpbufenireagjf6j4nrzz779meea9wdpgdcnq3iw8nx3trmcrusuwgb76y\", 18);\n+    _check_ecc32<512>(\"4da998e0baa31f9d761fc8dd3c948edc8c99969869815b0c3a159bf6822f4593bbc9b682a07fa65c2920ab4386ac6338dc929e6d508da158ef6f144e165dfcd0\", \"amexazesjakg954awggiy5c61mecmdwqdoa7co3b4sebjm1u89erns5r57oh4tzr4ff6bxpgai8egfzymjunmjudakyjtght4kd3zqed75j487dzmojtkkpagsrd\", 2);\n+    _check_ecc32<768>(\"aafe6b89d4da7287a2eac4a84cc9bcfdaa366d4129166b862ca253cf96668413988e736b44fc574ee6a6c745062f07673e46b8e41102ff9cbd5f02bf1971fdeeccec7e176cd79a8d31025810441fb0e3cdc3c85de170763920ad11247128a120\", \"7rf1bejeqr1bdmjy8f58bak73ds11zobh5a7od7nbysynggg3ii5cn79qyorgo3u8q9iatuxanm66339ann81motbki57t6chd16b1fa6uqcu1z9tngshhqj5ai5uyjae3ws37j4rmrgpcmn1ompg4hn5y8ix5xgjj1wcj4ino73piirjpx9kjyykhwwyywy\", 2315);\n+    _check_ecc32<1024>(\"b5e9ede02d4375a2b586455b65150c2346e291a0c4cd4a9dadb54ca2e66c2e03d4667b668d98f83ff1b54baf2f1909aaf29bcb186851cf505af9ca1daea27143d24a3e8bed608543cb608dd668a116bd8b6f269bf7ec1dd0ca0a1a6441b6fc3ad89f77f819fa4f2c4ab15406e2cf4e6a3a49f14a97e2efbe58d3c8487f2709d4\", \"hg7penj8x7rctw4az5z6ff4k6fygwu7ruw41q39tyciftjesr96o39b53qhw7o9sb4915rn3y4bmfpy8xc66p1c5f8wpbhmzwmkn4gstiocsohfcdsasx1kkfugp4jbzdeiqdzfx1s1o37esoggmuxhnase3kwne3f6zwzpxt89hjtdmgxpupgx7oyey3qpuukrufiisqwiuqrwne6rtjqgm5tdboksks4fo444r7kdfzoq54pizbir3\", 442);\n+    _check_ecc32<16384>(\"a9eccb2857caca5ee114121ba7b809d0d2a4ca7fe6c024e0b2c54846ba0de15f968549bf2c187848a0b7eb63234a5b250035a3867d1e6e9e6472103c07349cba2225abeecf0ece7beaf516a003e7ac91b37212054bfea3ff578edc0c9305caa10322b90b75effcf4167f992b1902ef8c5969dfb77670b7f0dbf448cdf78e7085d6510bfd871132388e6e182443e2e2c1cb9f302c73dd582606ccb598afab504e5aaa04c5637885015b99f0d1bbd480c07dbf158f1e0d7c6d29df899f81888ccc0a755b81c46703f846c31155ddd3823dffaa7abbc41703467256d8168cd7f16d132f49c798172679dff4d6aef164948ebc48e2136f60ebe7b4f04231a819334c51a1328291130fc84f225e59efc4d11d9f7eb98bfe591fe4eda5a47720b3e6ff584060ca2d6e155e2ba82567154cdaf49db6ba050661a81a0f45f2262d908df121f45a4d93de5f6ef6ec788c126aefb4ded91f47c901e7391b183b07114da1fca606d38072e22f490488833c0d18373e25fb550ac327f2bcf7e951c4cdf9c1f8bfcad3caadc1062625496ff52251e7c2336c227cccc680fc24062ed547e4e68e7cc115595ba6d39e11df2cb0bca1468f4c9fcbd076c124b8a817751eecb9db764d9a0fd292feb8400c5b2bea8850df9732b1c84742b3df450d786fa549902817f2b0b6c3d0855575c1383bd6adc6325a6ccbd41774dc999a36dc215e4c535ed18acb382a2ad84a17a9b63e6e326a693928b26c6ead95e72d2e1cb3f80b5f1c8f93defa6c0bde96f3b48a147f223683870bf95ce29fbf963dc3bad3eaed27dfc76d57f82319fbcbdcc6216d359c10867cdd073aa71c21ffa46dafad055656a3ac8dff291918640f805f40b12d5ef6880ee31fc9d882716862ae0bcad78b935c92feea910f79e13a3f286e90e1ae28d1657d45ad34d98267f5163e1ba5e0b5d7d546cee8c065754937bda32ddd6e2212b0c689409acd258001e79a9479438459260879c2da2c0a0ad473f3b5f3d2a2abe8885c0700f9cd9f8ecec6f737fe14c6ec22807ca85d45d812adc480872fb156d4dcb45a7f06a611759a542a12ba70ccab84e8caa2cb51f61275e62e6963110c6e598adc698c92bf979c5b5cf4cc3fa733faeddf818eba0400e6d251b995ff2741eb35079191b8918b0e0b12ac41cc22eef2a9b3ab160cdc644fc0321cf31ea3cc61cf1c96b0a684aed4e08c3749479ff06ec51636b1198e34041b2ef9efb2bce7d8f42bc993ab2b8a64e86259e6ffb9f893b42a74f8a7bd1e3b4667ffb1539829201049ad90003dd3b10063387db58bdab050fa56e6c0b40740d7dffc12a7de227fa35542cc31638e1b29820b62844a7383b0baa6d5bd186de294820ab647206e09a1d3ecef3362768641ee707bfe99571aa021193406b52d2fb297d444a875d055ddeddefc57cdd5852b081371817825d17953b336b804e4a044ea4b2b99f0c48425f09ae996b4a79d250e396d7a7907583cac65ecb2beb7754602952df5f1f6a15a71de065e47b8f7b6b8bef758b57bd444023b9420fa2aa12e753833623f41f149d624a708e6531a492bbd75186a0357a557ba4aa64ee294a3ec9bdf46eac2ba50d7a99be37538eeaa4af8bb9e6264e123d495f2a58dee82cee0d3f0db247768fc91bd6b899dee5f44e284293060d81ee9841b3e0415a45770e57b10402d9f3ca1a7aa512f03607a458a9c8c5c6bfe9ba35efb1218d0d3254f72c411d524f6eb28116772ffe7cd70b83e09a2295d31ddc0a4581cfe729e7f38b229a9557cc164aaad267f2551ea850cbaa3b29017667b3f1280de037f64f1d9c386846b9d7ac6ce60a0744636a09848d535ac5f10c0be595744c70af12a0eb3331351c493d35e16954ed2c4ea17cd8050968c6c354e4566f1b9fe30b86622ae181b590ed87dde77431809a64b73a1518f46e2ca104ed5ef748be1c477587de825bf617b66ae7d3b4ecf56802811622d0125787ae680f3ff5d96e42dd8520c5ac3c8bcce837a4dff99255cdc21f6da04d107dd4ec489619025b777dffba1a48976c55d2115fc41d9e6d83dff2e1d7d588b182fc3800f4e4966503f0951204b7445d1e575f97309cf76a755bb20d70e09e405dea0b91e8a0f7ee1a3f709931315ec8f951fdf22c54933cfc116fba8ff82e06cf01a06314777c48bcef474affbd1b1c7ac260b02abf316bb31dc9ea0a7f7c8e4aabd82c2148d8a3d392d071954467c332dd6f9ed75d8d5f00c78b2a7287111ceafdc38485bd861abb94784e2781aaa168cd52db6efa29c74b91da46af3d6255e3a09c869b76c1fdbd839e05afc1561515318940fb571a31532378d65b5b5acbf382311dfd615891d1780b9eb31fadaa8667cbf5791d024fc8b0261aa8b54f07f10b3e02d0e487bc3deab1005bc22420b3add9897f4c4eec33f2be1a4365acf62f6bdd211d7c1dd5775291d00aad29d33326f8314dc738d635c6101e09e5f9e42180b206a6201cc4eba32aa306f5cb06248fa3da22286024f97b86a56ccafc5a2732164a115e4b2a07486467c291b727d87387c8c0163f9b889bfe12146aaa2a4c949c1b5a6da44607e6eb57cde43cc94702fae81c5dc6da78be52bd82f624933f3194c6dc9986c4a7e0ec8a627b37c646119bce36a4ec259035717afc02ee22c62e3e688e14dff7a1958ffc12790fd2e8f032299b098f0b2b2af99c39691ff84733c17790d1afcc94b820a7d8bb5f39d1fab045b2b8e97b90171959ee5010a48e0849797e24b6f6e242f82c5fe42ebe303c908fe2bcbd9cabf4740d61aa39fb36a6444a0bd839ff687b4c618a0317011e8561b403905bb87497c9d4a4d9e263d22b47b69766914f68a1bee781c5604c19c9135153d0add3c6799e14046b4d98e7e1c7190\", \"9ayyyyyyyyyyyyyyyyyyyyyyyy9ay9ayyyyyyyyyyyyyyyyyyy6aq18d3t91upyhehx48pupngedo3133h5wfd4fjxq6hji1gqcnbnsdthqhghk6akg17ujhh94xxq4nrxjgu3gwi8mhjgd5sbj3eycemh4pip4ytqya4ygggs1d9p8hdzsork5hxje3dksqx4ggssebd591s33ci9hnn6z4qgjyxt6soz6asbn6jdqp7f6ffhzoepquouoronobhsxjkhebzgmahk45y1b65khit98xussfz4nwnjxr9agopxrmuwr9e8ahhr96e3poh3i63mfhrasnc1ryd6kwuhxf563yj6b97cb16z9jzoat3zdijpa8cesqrmsyihmiqy43aj8gia7hdfj9nrnose9fur6ucodu6jjsjt1mpjoc9n4rwggc4jcez7ok9ftqus5zgfogzn6hg1gzurw3tb7h9fip39gytg4w44hn1qj1kodgw1tkwttbhg9auq83ccyaa9bao7rom8u6zrg3jxtdec7fysm1bmemrrf34k6tyrftpx3tmgiqrzjhbecein8z7roaikfeiiomtzubkt1zj8caymnpeoysgnnuwgqku3x37aybcfqg8dmu5okeg531gqxxehsq7fkoydwwzki67a8mtdwi763tc1jewd6stswuo1sx6d75nxjfha5w7ysowngbxtnzontbk66ap7wodtphn3ty99oau5aik1f4waentx6njwrtk69za3ie5mjnpmr7dd473oymt5nei45xtne3az6smf6tuempmftw5urfpdqg4o9fyakpesnfamtkaxhmmodusg5d7smq4qebr7fhjqstphyy6pike8p3q1qkf57sfzkaafikdjyedsuhqfbn8zgisdsn5jyhp3m6qnfa163yjotj71xygxbiqaqzs9uitpgp6rcigegp3y3yhsu1xcktwkcfyi7im1ct778ue9x4wnxpacp5n534syomr4scxcqt9qc36gezzj7gqtxn8qt3tyapxy58yom94fgc6rt6asa88ug1qfrmxt9fcx7okt8rs1quoaj66t6n9oxtexmueg6yz1y1dszpp4nqrn7imj5s3hrz86mihzewk7nmrb1p59heo1x4oc3rwhdhyaczttn4axwq1eesw179375dup1oxhnwoi5tmstg1kd6mu3mg69q651mrdbt8nr7ze84rnpi7tbd4yu35tqnmgx9ji7e8uih3dbiwdn15yqfmixs6jf17993ab3u4xy1onmmnnrwewr9ecyisxja7z5mugxpo56jxexic8xtgikek8btp4q9ikqndfqrtwxkgozg17gcc6o5brcrg766xzcyhse5dnznr3iagdtjehy9muhmgei8dk5rc13eebuez7mnp68d3eruwin3xp8r6rkrju8caqfmaoitce67g4rk7c57oyom6sdmikeunodctuwz8taiwboc7tu4uiiajbsd58ase9ad54baku1ybrx55cam3bcidzegem41tri916j36cpmpkcuyzaipjfg3do9h6qm9basfacobfradqunzjjweru7qdo3zu96hu8bzym6nrwqz7tr4weheh1xrzj7ygy19pfyxndxk8g96ppqe38rkei7gyy3xkgik6iy93xejhuhswyrd5hiafxjyiyo9bzbrqjs98jd5cgycbjoutrez9qusrszxctttm3w9tw8qjg56dj6buwn74g4mhwi4ozpg9at6n3dnu479o1ik7ah8mah5i8mizuymdbqsn7jdp9g9cwqkqruigjk7fxjnc1nmkzypibo7p7fprtww9gbnu1ji1jn9grf6fyu6atu8b417ejk9eojeqaneuzp6k8k8zpka669mtpzzzbdihbs6qfpk9jix9d7zt6ws3ky1gqs557czccssdash5k9oy8xf7g4qeqrsq4xprs7gpxyjcrjwi5nauaj1k4m7jnkb3yrzy5mgw534rzzmnp1ztymtncrnzbqi3im93zzp5ik79y439y7peeukjxctxfs4ocpy3rgobwibt5ufh3937zb51bo35grc9x7uj4nnmqwk9q9rbd5cnwn1utg4gf74sumicrdqpwp96pfeeaomoewtzdudg8grripdxhtpt9kc47ja19ux7qoy8suyqciz4knapin3ftcj7ixwhggyft4c6obrfpjrenykca8yiarkqa9634g8cxm5j9aqoimjr9az8bzbhs96csmn7b1ewk7m1xr1z7gah66m7cp9tf593fapoeprqdgaucfsfp5aj6tw8cpr4jg6gqbifqo1umbfoh37oh3ea639t6j6cqdfonxcuqyafimsqw9f5tn3t8q6tsy4aromb4f3dqrt1rdum44br993pdhi8mqkt4muyybf4t4y795x4gquu9u4zdt58wmtp33f791kgguzrkmfzyarmdh9z8yprzqc7e163ehzesk7nnkzudoze54pt9jnwir4qwe4cbu9mk4p3inssrzag3wz5xygriwjpotk7ib6eyezcaakxhpoedhj9za58e786p9ryyqzre7ni4fwzuecgqgsz3z8iykbespiou3byufubndxg6i8xfkji3aboy1h5g1yt8dmyrtnp5q1q37rs5e77g7rzk3qy7d8rpiqzszokkg3wizw36n54sxys3g1swk9mf4rwk7aco63xe6pawd6qzbxr83d4z61jqj8n6z3ex3q89f4haueqgbpt1e9hc8et716fsaw4upfyyzhyb71bogjj96g43e4skan45m9ykim5pwu91n8f88ed749rgnnqdk5jbqcj9ja5qcz6a3rxhfq5q85hu654suzmm7gihbu5fi9u9tf36emo6buceu9n1fm6t8mcjhhs5afs36s61q8tazam9n3tamxmms1tph6k445ucsewd14mkgjzd7pijmszsin7fpoktk8dfaiwk6kpgfheqhg481gbipjuzdwn9kcs5n4gmdk5it58dyz4qic6kicf4db5pc81nhwjy1pfp7hy4th5k73q9spbrx1ftgkm76wre7eiisdny6g57uzd9jfwoxujgzps737ox8kf7ezym8qji1cn7so3qxw3d4gwg6mymg9ngxpkq84r8j15mrkhn9rqh51rxijqya1x3yppdkbgg3t6nr5buamuinezip7r1kjogzci49agshiw6kz9hcd6qpate6u77h6e9fmwauhgn1i9c1uhpaabw6e8nyrjrz6zjoa3rhwy4cdkp9fbjweoqqaadch6qyk7hfbqjehx7uziw77ibfdda7u5ghz66obie61pgii7bb6gg3ymjg6jno6giecrgyetkdymqisuz4pwuyich14ok46niznugh1851uyebcx93iurb54jjxphoxiu916hi8wmzf9j68qtauzi1ztnj9ry6rhtzkp6uoe3knwkcgcc4ockn6n4qx45yph11yk1j6r1fht4kgjhpq454p66jgn6ccywjfrq1jxnps9dihcn5cfch1gycmhjq4ijqt54im9u5ysu5iktdo4g9ybsxtrbrhftsmp4oiurctny39nq9ffszade6ths354wk569qyodkmzwxoufpodbmacxnocidutjk14j3ekzmhaszgycj1a5i31acz3n1yr93xy6fa1drocg7dtageeax9emj47ifk8mekhrq69gwt7g56n5zy7iz57rjug3wiud8xyec1zgm9n54x355ibqh1njom6ry7b3en3gdght3m99e96jcntrhbbfufiu1gsqqy7yn546w66qb5867k3f5setrrk7japy88oe8r3r6pax85bidgwwdmybynks4krpt6zp7yjbhbomf9jgn3axdtxcz9bbs7rc1gfsmonjo8gx9fkjw71jzzsobghkqga1nuoi71skkhwcz5fjydbdw\", 2064552391);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()\n "
      }
    ]
  }
]