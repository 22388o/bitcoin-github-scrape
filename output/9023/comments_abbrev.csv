btcdrak,2016-10-26T11:37:34Z,"Very nice, I was just struggling with some failing tests and thinking about adding logging. Concept ACK, testing.\n",https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-256322221,256322221,
btcdrak,2016-10-26T15:18:01Z,Tested ACK d7df43b202f2bbeba3d94e2bbc9a301141bfa62f\n,https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-256379743,256379743,
laanwj,2016-10-27T12:16:45Z,"Concept ACK, but I think this makes the test too noisy in the passing case. Ideally tests are silent if nothing is wrong and noisy if they break.\n\nWhy not just print a diff when the comparison fails, and leave it at that? (in non-verbose mode)\n",https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-256624789,256624789,
btcdrak,2016-10-27T12:26:13Z,After some chat with @laanwj can you make this silently pass tests unless `--verbose` is selected? But output failure cases by default without `--verbose`?\n,https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-256626677,256626677,
laanwj,2016-10-27T12:39:26Z,"Easiest way would be to move PASSED messages to the debug level:\n\n``` patch\ndiff --git a/src/test/bctest.py b/src/test/bctest.py\nindex e575b22..0e83284 100644\n--- a/src/test/bctest.py\n+++ b/src/test/bctest.py\n@@ -67,7 +67,7 @@ def bctester(testDir, input_basename, buildenv):\n        for testObj in input_data:\n                try:\n                        bctest(testDir, testObj, buildenv.",https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-256629357,256629357,
laanwj,2016-10-27T12:42:13Z,"This helps, you're setting the log level twice.\n\n``` patch\ndiff --git a/src/test/bitcoin-util-test.py b/src/test/bitcoin-util-test.py\nindex 3bae55d..c72dc9f 100755\n--- a/src/test/bitcoin-util-test.py\n+++ b/src/test/bitcoin-util-test.py\n@@ -35,12 +35,12 @@ if __name__ == '__main__':\n     # Create logging handler\n     ch = logging.StreamHandler(sys.stdout)\n     if verbose:\n-        ch.set",https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-256629925,256629925,
jnewbery,2016-10-27T14:11:12Z,"@laanwj - I believe the log level needs to be set once for the logger and once for the handler. See https://docs.python.org/3/howto/logging.html#logging-flow for how log levels are set in logging.\n\nThe intent was certainly that without verbose the behaviour would be:\n- failures are logged\n- successes are silent\n- a summary of failed testcases is printed at the end.\n\nWith verbose, both failu",https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-256652535,256652535,
laanwj,2016-10-27T14:39:58Z,"Ah I'm apparently testing with python, the default interpreter in the `#!` line (which is python2, not python3 on Ubuntu 16.04). In any case the `-v` flag didn't do anything, until applying the second patch.\n\nThe first patch doesn't seem to be necessary. Indeed the log level for non-verbose is set to ERROR so the INFO messages should already not get logged.\n\nWithout that, I always get verbose ",https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-256660729,256660729,
jnewbery,2016-10-27T15:09:33Z,"Oh, that makes sense. Are you happy for me to bump bitcoin-util-test.py and bctest.py to python3 as part of this PR?\n",https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-256669572,256669572,
laanwj,2016-10-27T15:32:34Z,"Right now, all the scripts that are called by the build system work in python 2 and python 3. It seems it is quite easy to keep Python2 compatibility here (I even suggested a fix). But I don't care deeply.\n",https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-256676692,256676692,
jnewbery,2016-10-28T14:55:57Z,"The qa python scripts were changed to use python3 in https://github.com/bitcoin/bitcoin/pull/7737 , so it seems reasonable to me to also move bitcoin-test-util to python3.\n",https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-256942991,256942991,
laanwj,2016-10-28T16:10:00Z,"The python scripts that are _not invoked_ by the build system were changed to be Python 3 only. For example `qa/rpctests`, and `contrib/devtools`. This one is used by `make check` which would ideally keep working with python 2.\nI don't understand why you don't just apply the small patch I gave above to make it work with python 2 again.\n",https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-256961769,256961769,
jnewbery,2016-10-31T15:21:24Z,"@laanwj - I went ahead with changing this to Python3 because your last comment was that you didn't care deeply :)\n\nI can edit bitcoin-util-test.py again to make it compatible with Python 2 again, but I don't like your patch. The reason that the -v flag wasn't working with Python 2 is that the stream handler `ch` is being ignored. On line 44:\n\n`logging.basicConfig(level=logging.INFO, handlers=[",https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-257323312,257323312,
laanwj,2016-10-31T15:53:09Z,"I don't care deeply, that doesn't mean no one else does. To be clear: breaking python 2 compatibility will possibly result in long discussions (as it means deprecating Python 2 support for ""make check""), which have to be done on a higher level than in this PR only, whereas maintaining it means this can be merged fairly quickly.\n",https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-257332788,257332788,
btcdrak,2016-11-02T10:49:23Z,needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-257831474,257831474,
jnewbery,2016-11-02T18:19:58Z,New squashed commit does the following:\n- rebased\n- Python3 compatibility restored\n- made logging compatible with Python2. Execution should be the same when running under Python2 and Python3\n,https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-257954180,257954180,
laanwj,2016-11-02T19:52:46Z,Tested ACK 32c0d6e\n,https://github.com/bitcoin/bitcoin/pull/9023#issuecomment-257979416,257979416,
MarcoFalke,2016-10-26T11:39:48Z,Any reason to use `raise Exception` instead of `raise`?\n,https://github.com/bitcoin/bitcoin/pull/9023#discussion_r85103060,85103060,src/test/bctest.py
jnewbery,2016-10-26T13:53:15Z,You're right - `raise` is better. I've updated it.\n,https://github.com/bitcoin/bitcoin/pull/9023#discussion_r85126757,85126757,src/test/bctest.py
