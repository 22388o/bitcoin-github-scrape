[
  {
    "sha": "c409b1adac59329b78b8c48f131f8ca032988412",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDA5YjFhZGFjNTkzMjliNzhiOGM0OGYxMzFmOGNhMDMyOTg4NDEy",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-02-02T01:57:29Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-02-02T01:58:24Z"
      },
      "message": "[rpc] Reduce scope of cs_main and cs_wallet locks in listtransactions",
      "tree": {
        "sha": "c971a045e0c28a2e62d04576f358550666d0fe6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c971a045e0c28a2e62d04576f358550666d0fe6a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c409b1adac59329b78b8c48f131f8ca032988412",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c409b1adac59329b78b8c48f131f8ca032988412",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c409b1adac59329b78b8c48f131f8ca032988412",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c409b1adac59329b78b8c48f131f8ca032988412/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "41363fe11df529556c2d44132caa86fe8b08cbbf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41363fe11df529556c2d44132caa86fe8b08cbbf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/41363fe11df529556c2d44132caa86fe8b08cbbf"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 16,
      "deletions": 13
    },
    "files": [
      {
        "sha": "33790d3490313b74a79d5182e6e9b84e4f388e94",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 13,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c409b1adac59329b78b8c48f131f8ca032988412/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c409b1adac59329b78b8c48f131f8ca032988412/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=c409b1adac59329b78b8c48f131f8ca032988412",
        "patch": "@@ -1794,8 +1794,6 @@ UniValue listtransactions(const JSONRPCRequest& request)\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n \n-    LOCK2(cs_main, pwallet->cs_wallet);\n-\n     std::string strAccount = \"*\";\n     if (!request.params[0].isNull())\n         strAccount = request.params[0].get_str();\n@@ -1817,20 +1815,25 @@ UniValue listtransactions(const JSONRPCRequest& request)\n \n     UniValue ret(UniValue::VARR);\n \n-    const CWallet::TxItems & txOrdered = pwallet->wtxOrdered;\n-\n-    // iterate backwards until we have nCount items to return:\n-    for (CWallet::TxItems::const_reverse_iterator it = txOrdered.rbegin(); it != txOrdered.rend(); ++it)\n     {\n-        CWalletTx *const pwtx = (*it).second.first;\n-        if (pwtx != nullptr)\n-            ListTransactions(pwallet, *pwtx, strAccount, 0, true, ret, filter);\n-        CAccountingEntry *const pacentry = (*it).second.second;\n-        if (pacentry != nullptr)\n-            AcentryToJSON(*pacentry, strAccount, ret);\n+        LOCK2(cs_main, pwallet->cs_wallet);\n+\n+        const CWallet::TxItems & txOrdered = pwallet->wtxOrdered;\n \n-        if ((int)ret.size() >= (nCount+nFrom)) break;\n+        // iterate backwards until we have nCount items to return:\n+        for (CWallet::TxItems::const_reverse_iterator it = txOrdered.rbegin(); it != txOrdered.rend(); ++it)\n+        {\n+            CWalletTx *const pwtx = (*it).second.first;\n+            if (pwtx != nullptr)\n+                ListTransactions(pwallet, *pwtx, strAccount, 0, true, ret, filter);\n+            CAccountingEntry *const pacentry = (*it).second.second;\n+            if (pacentry != nullptr)\n+                AcentryToJSON(*pacentry, strAccount, ret);\n+\n+            if ((int)ret.size() >= (nCount+nFrom)) break;\n+        }\n     }\n+\n     // ret is newest to oldest\n \n     if (nFrom > (int)ret.size())"
      }
    ]
  }
]