[
  {
    "sha": "bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjc3ZmUyOTk5ZmZkZDVkNDEzNGJkNzA1YjZjYTM3ZTg4OGNiMGUz",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-02-16T23:59:16Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-02-17T02:02:14Z"
      },
      "message": "Add signals for network local address added/removed",
      "tree": {
        "sha": "fea839c5a8692445506b8f85623045c530b60aa6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fea839c5a8692445506b8f85623045c530b60aa6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "65435701efdafc6b91db542327c57c69386f02eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65435701efdafc6b91db542327c57c69386f02eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/65435701efdafc6b91db542327c57c69386f02eb"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 41,
      "deletions": 4
    },
    "files": [
      {
        "sha": "497556432db4e4ff24eb1d657406b8c836ec64bc",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3",
        "patch": "@@ -280,6 +280,10 @@ class NodeImpl : public Node\n     {\n         return MakeHandler(::uiInterface.NotifyNetworkActiveChanged_connect(fn));\n     }\n+    std::unique_ptr<Handler> handleNotifyNetworkLocalChanged(NotifyNetworkLocalChangedFn fn) override\n+    {\n+        return MakeHandler(::uiInterface.NotifyNetworkLocalChanged_connect(fn));\n+    }\n     std::unique_ptr<Handler> handleNotifyAlertChanged(NotifyAlertChangedFn fn) override\n     {\n         return MakeHandler(::uiInterface.NotifyAlertChanged_connect(fn));"
      },
      {
        "sha": "21d67be7346f8b1c2a0f79ada49ebfeb4dc7e5b6",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3",
        "patch": "@@ -224,6 +224,10 @@ class Node\n     using NotifyNetworkActiveChangedFn = std::function<void(bool network_active)>;\n     virtual std::unique_ptr<Handler> handleNotifyNetworkActiveChanged(NotifyNetworkActiveChangedFn fn) = 0;\n \n+    //! Register handler for network local changed messages.\n+    using NotifyNetworkLocalChangedFn = std::function<void()>;\n+    virtual std::unique_ptr<Handler> handleNotifyNetworkLocalChanged(NotifyNetworkLocalChangedFn fn) = 0;\n+\n     //! Register handler for notify alert messages.\n     using NotifyAlertChangedFn = std::function<void()>;\n     virtual std::unique_ptr<Handler> handleNotifyAlertChanged(NotifyAlertChangedFn fn) = 0;"
      },
      {
        "sha": "8923414bdd214ca01b2b9b11d45d785c82207f19",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3",
        "patch": "@@ -214,16 +214,21 @@ bool AddLocal(const CService& addr, int nScore)\n \n     LogPrintf(\"AddLocal(%s,%i)\\n\", addr.ToString(), nScore);\n \n+    bool fAlready;\n     {\n         LOCK(cs_mapLocalHost);\n-        bool fAlready = mapLocalHost.count(addr) > 0;\n+        fAlready = mapLocalHost.count(addr) > 0;\n         LocalServiceInfo &info = mapLocalHost[addr];\n         if (!fAlready || nScore >= info.nScore) {\n             info.nScore = nScore + (fAlready ? 1 : 0);\n             info.nPort = addr.GetPort();\n         }\n     }\n \n+    if (!fAlready) {\n+        uiInterface.NotifyNetworkLocalChanged();\n+    }\n+\n     return true;\n }\n \n@@ -234,9 +239,12 @@ bool AddLocal(const CNetAddr &addr, int nScore)\n \n void RemoveLocal(const CService& addr)\n {\n-    LOCK(cs_mapLocalHost);\n-    LogPrintf(\"RemoveLocal(%s)\\n\", addr.ToString());\n-    mapLocalHost.erase(addr);\n+    {\n+        LOCK(cs_mapLocalHost);\n+        LogPrintf(\"RemoveLocal(%s)\\n\", addr.ToString());\n+        mapLocalHost.erase(addr);\n+    }\n+    uiInterface.NotifyNetworkLocalChanged();\n }\n \n void SetReachable(enum Network net, bool reachable)"
      },
      {
        "sha": "fdf4cd708a43ae9eaacf7c28847c6f6bc71042e4",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3",
        "patch": "@@ -115,6 +115,11 @@ void ClientModel::updateNetworkActive(bool networkActive)\n     Q_EMIT networkActiveChanged(networkActive);\n }\n \n+void ClientModel::updateNetworkLocal()\n+{\n+    Q_EMIT networkLocalChanged();\n+}\n+\n void ClientModel::updateAlert()\n {\n     Q_EMIT alertsChanged(getStatusBarWarnings());\n@@ -209,6 +214,11 @@ static void NotifyNetworkActiveChanged(ClientModel *clientmodel, bool networkAct\n                               Q_ARG(bool, networkActive));\n }\n \n+static void NotifyNetworkLocalChanged(ClientModel *clientmodel)\n+{\n+    QMetaObject::invokeMethod(clientmodel, \"updateNetworkLocal\", Qt::QueuedConnection);\n+}\n+\n static void NotifyAlertChanged(ClientModel *clientmodel)\n {\n     qDebug() << \"NotifyAlertChanged\";\n@@ -255,6 +265,7 @@ void ClientModel::subscribeToCoreSignals()\n     m_handler_show_progress = m_node.handleShowProgress(std::bind(ShowProgress, this, std::placeholders::_1, std::placeholders::_2));\n     m_handler_notify_num_connections_changed = m_node.handleNotifyNumConnectionsChanged(std::bind(NotifyNumConnectionsChanged, this, std::placeholders::_1));\n     m_handler_notify_network_active_changed = m_node.handleNotifyNetworkActiveChanged(std::bind(NotifyNetworkActiveChanged, this, std::placeholders::_1));\n+    m_handler_notify_network_local_changed = m_node.handleNotifyNetworkLocalChanged(std::bind(NotifyNetworkLocalChanged, this));\n     m_handler_notify_alert_changed = m_node.handleNotifyAlertChanged(std::bind(NotifyAlertChanged, this));\n     m_handler_banned_list_changed = m_node.handleBannedListChanged(std::bind(BannedListChanged, this));\n     m_handler_notify_block_tip = m_node.handleNotifyBlockTip(std::bind(BlockTipChanged, this, std::placeholders::_1, std::placeholders::_2, std::placeholders::_3, std::placeholders::_4, false));\n@@ -267,6 +278,7 @@ void ClientModel::unsubscribeFromCoreSignals()\n     m_handler_show_progress->disconnect();\n     m_handler_notify_num_connections_changed->disconnect();\n     m_handler_notify_network_active_changed->disconnect();\n+    m_handler_notify_network_local_changed->disconnect();\n     m_handler_notify_alert_changed->disconnect();\n     m_handler_banned_list_changed->disconnect();\n     m_handler_notify_block_tip->disconnect();"
      },
      {
        "sha": "8fb687e1b5dadd74e2d8ca22c46c4c0a3ff8184d",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3",
        "patch": "@@ -82,6 +82,7 @@ class ClientModel : public QObject\n     std::unique_ptr<interfaces::Handler> m_handler_show_progress;\n     std::unique_ptr<interfaces::Handler> m_handler_notify_num_connections_changed;\n     std::unique_ptr<interfaces::Handler> m_handler_notify_network_active_changed;\n+    std::unique_ptr<interfaces::Handler> m_handler_notify_network_local_changed;\n     std::unique_ptr<interfaces::Handler> m_handler_notify_alert_changed;\n     std::unique_ptr<interfaces::Handler> m_handler_banned_list_changed;\n     std::unique_ptr<interfaces::Handler> m_handler_notify_block_tip;\n@@ -100,6 +101,7 @@ class ClientModel : public QObject\n     void numBlocksChanged(int count, const QDateTime& blockDate, double nVerificationProgress, bool header);\n     void mempoolSizeChanged(long count, size_t mempoolSizeInBytes);\n     void networkActiveChanged(bool networkActive);\n+    void networkLocalChanged();\n     void alertsChanged(const QString &warnings);\n     void bytesChanged(quint64 totalBytesIn, quint64 totalBytesOut);\n \n@@ -113,6 +115,7 @@ public Q_SLOTS:\n     void updateTimer();\n     void updateNumConnections(int numConnections);\n     void updateNetworkActive(bool networkActive);\n+    void updateNetworkLocal();\n     void updateAlert();\n     void updateBanlist();\n };"
      },
      {
        "sha": "1c7c3e8bd6956e4ed81447f5e291fda5af50ada0",
        "filename": "src/ui_interface.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3/src/ui_interface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3/src/ui_interface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.cpp?ref=bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3",
        "patch": "@@ -16,6 +16,7 @@ struct UISignals {\n     boost::signals2::signal<CClientUIInterface::InitMessageSig> InitMessage;\n     boost::signals2::signal<CClientUIInterface::NotifyNumConnectionsChangedSig> NotifyNumConnectionsChanged;\n     boost::signals2::signal<CClientUIInterface::NotifyNetworkActiveChangedSig> NotifyNetworkActiveChanged;\n+    boost::signals2::signal<CClientUIInterface::NotifyNetworkLocalChangedSig> NotifyNetworkLocalChanged;\n     boost::signals2::signal<CClientUIInterface::NotifyAlertChangedSig> NotifyAlertChanged;\n     boost::signals2::signal<CClientUIInterface::LoadWalletSig> LoadWallet;\n     boost::signals2::signal<CClientUIInterface::ShowProgressSig> ShowProgress;\n@@ -39,6 +40,7 @@ ADD_SIGNALS_IMPL_WRAPPER(ThreadSafeQuestion);\n ADD_SIGNALS_IMPL_WRAPPER(InitMessage);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyNumConnectionsChanged);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyNetworkActiveChanged);\n+ADD_SIGNALS_IMPL_WRAPPER(NotifyNetworkLocalChanged);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyAlertChanged);\n ADD_SIGNALS_IMPL_WRAPPER(LoadWallet);\n ADD_SIGNALS_IMPL_WRAPPER(ShowProgress);\n@@ -51,6 +53,7 @@ bool CClientUIInterface::ThreadSafeQuestion(const std::string& message, const st\n void CClientUIInterface::InitMessage(const std::string& message) { return g_ui_signals.InitMessage(message); }\n void CClientUIInterface::NotifyNumConnectionsChanged(int newNumConnections) { return g_ui_signals.NotifyNumConnectionsChanged(newNumConnections); }\n void CClientUIInterface::NotifyNetworkActiveChanged(bool networkActive) { return g_ui_signals.NotifyNetworkActiveChanged(networkActive); }\n+void CClientUIInterface::NotifyNetworkLocalChanged() { return g_ui_signals.NotifyNetworkLocalChanged(); }\n void CClientUIInterface::NotifyAlertChanged() { return g_ui_signals.NotifyAlertChanged(); }\n void CClientUIInterface::LoadWallet(std::shared_ptr<CWallet> wallet) { return g_ui_signals.LoadWallet(wallet); }\n void CClientUIInterface::ShowProgress(const std::string& title, int nProgress, bool resume_possible) { return g_ui_signals.ShowProgress(title, nProgress, resume_possible); }"
      },
      {
        "sha": "1cd81781343382763adad741cc7d2120d0e83dab",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3",
        "patch": "@@ -96,6 +96,9 @@ class CClientUIInterface\n     /** Network activity state changed. */\n     ADD_SIGNALS_DECL_WRAPPER(NotifyNetworkActiveChanged, void, bool networkActive);\n \n+    /** Network local addresses changed. */\n+    ADD_SIGNALS_DECL_WRAPPER(NotifyNetworkLocalChanged, void, );\n+\n     /**\n      * Status bar alerts changed.\n      */"
      }
    ]
  },
  {
    "sha": "d307e3c4037adb60b8c273c050b0d35c2b6596e4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzA3ZTNjNDAzN2FkYjYwYjhjMjczYzA1MGIwZDM1YzJiNjU5NmU0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-02-17T00:19:22Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-02-17T02:02:14Z"
      },
      "message": "GUI: Add getTorInfo to ClientModel",
      "tree": {
        "sha": "159dfca421b9226e357dff0bf5e7a07a287df93b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/159dfca421b9226e357dff0bf5e7a07a287df93b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d307e3c4037adb60b8c273c050b0d35c2b6596e4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d307e3c4037adb60b8c273c050b0d35c2b6596e4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d307e3c4037adb60b8c273c050b0d35c2b6596e4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d307e3c4037adb60b8c273c050b0d35c2b6596e4/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb77fe2999ffdd5d4134bd705b6ca37e888cb0e3"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 25,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e333537364fc46959f469528dedeebafaaedc126",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d307e3c4037adb60b8c273c050b0d35c2b6596e4/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d307e3c4037adb60b8c273c050b0d35c2b6596e4/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=d307e3c4037adb60b8c273c050b0d35c2b6596e4",
        "patch": "@@ -92,6 +92,15 @@ class NodeImpl : public Node\n     }\n     void setupServerArgs() override { return SetupServerArgs(); }\n     bool getProxy(Network net, proxyType& proxy_info) override { return GetProxy(net, proxy_info); }\n+    std::vector<CNetAddr> getNetLocalAddresses() override\n+    {\n+        std::vector<CNetAddr> ret;\n+        LOCK(cs_mapLocalHost);\n+        for (const std::pair<const CNetAddr, LocalServiceInfo> &item : mapLocalHost) {\n+            ret.emplace_back(item.first);\n+        }\n+        return ret;\n+    }\n     size_t getNodeCount(CConnman::NumConnections flags) override\n     {\n         return g_connman ? g_connman->GetNodeCount(flags) : 0;"
      },
      {
        "sha": "c9d1fddc8b85732f1e87ec1e8bf9f002e23009d8",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d307e3c4037adb60b8c273c050b0d35c2b6596e4/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d307e3c4037adb60b8c273c050b0d35c2b6596e4/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=d307e3c4037adb60b8c273c050b0d35c2b6596e4",
        "patch": "@@ -21,6 +21,7 @@\n class BanMan;\n class CCoinControl;\n class CFeeRate;\n+class CNetAddr;\n class CNodeStats;\n class Coin;\n class RPCTimerInterface;\n@@ -98,6 +99,9 @@ class Node\n     //! Get proxy.\n     virtual bool getProxy(Network net, proxyType& proxy_info) = 0;\n \n+    //! Get local network addresses.\n+    virtual std::vector<CNetAddr> getNetLocalAddresses() = 0;\n+\n     //! Get number of connections.\n     virtual size_t getNodeCount(CConnman::NumConnections flags) = 0;\n "
      },
      {
        "sha": "8ea640bd08929376acc61725439c508da9f6fa23",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d307e3c4037adb60b8c273c050b0d35c2b6596e4/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d307e3c4037adb60b8c273c050b0d35c2b6596e4/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=d307e3c4037adb60b8c273c050b0d35c2b6596e4",
        "patch": "@@ -294,3 +294,14 @@ bool ClientModel::getProxyInfo(std::string& ip_port) const\n     }\n     return false;\n }\n+\n+bool ClientModel::getTorInfo(QString& out_onion) const\n+{\n+    for (const auto& addr : m_node.getNetLocalAddresses()) {\n+        if (addr.IsTor()) {\n+            out_onion = QString::fromStdString(addr.ToStringIP());\n+            return true;\n+        }\n+    }\n+    return false;\n+}"
      },
      {
        "sha": "67f6590d42d9a7ab325d314c4981d379b38ee26f",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d307e3c4037adb60b8c273c050b0d35c2b6596e4/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d307e3c4037adb60b8c273c050b0d35c2b6596e4/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=d307e3c4037adb60b8c273c050b0d35c2b6596e4",
        "patch": "@@ -72,6 +72,7 @@ class ClientModel : public QObject\n     QString blocksDir() const;\n \n     bool getProxyInfo(std::string& ip_port) const;\n+    bool getTorInfo(QString& out_onion) const;\n \n     // caches for the best header\n     mutable std::atomic<int> cachedBestHeaderHeight;"
      }
    ]
  },
  {
    "sha": "316e3c1b83b1c127d10acd5a030d289815886d18",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMTZlM2MxYjgzYjFjMTI3ZDEwYWNkNWEwMzBkMjg5ODE1ODg2ZDE4",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-02-16T23:19:49Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-02-17T02:02:14Z"
      },
      "message": "GUI: Refactor actual QR code rendering into new QRImageWidget::setQR",
      "tree": {
        "sha": "f4478a15e83c18480c4a5be158919d1753edf72c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4478a15e83c18480c4a5be158919d1753edf72c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/316e3c1b83b1c127d10acd5a030d289815886d18",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/316e3c1b83b1c127d10acd5a030d289815886d18",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/316e3c1b83b1c127d10acd5a030d289815886d18",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/316e3c1b83b1c127d10acd5a030d289815886d18/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d307e3c4037adb60b8c273c050b0d35c2b6596e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d307e3c4037adb60b8c273c050b0d35c2b6596e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d307e3c4037adb60b8c273c050b0d35c2b6596e4"
      }
    ],
    "stats": {
      "total": 109,
      "additions": 61,
      "deletions": 48
    },
    "files": [
      {
        "sha": "6eb2171f1b3f26fac13feed7c7d6dad4c02fc6c1",
        "filename": "src/qt/receiverequestdialog.cpp",
        "status": "modified",
        "additions": 60,
        "deletions": 48,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/316e3c1b83b1c127d10acd5a030d289815886d18/src/qt/receiverequestdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/316e3c1b83b1c127d10acd5a030d289815886d18/src/qt/receiverequestdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.cpp?ref=316e3c1b83b1c127d10acd5a030d289815886d18",
        "patch": "@@ -37,6 +37,64 @@ QRImageWidget::QRImageWidget(QWidget *parent):\n     contextMenu->addAction(copyImageAction);\n }\n \n+bool QRImageWidget::setQR(const QString& data, const QString& text)\n+{\n+#ifdef USE_QRCODE\n+    setText(\"\");\n+    if (data.isEmpty()) return false;\n+\n+    // limit length\n+    if (data.length() > MAX_URI_LENGTH) {\n+        setText(tr(\"Resulting URI too long, try to reduce the text for label / message.\"));\n+        return false;\n+    }\n+\n+    QRcode *code = QRcode_encodeString(data.toUtf8().constData(), 0, QR_ECLEVEL_L, QR_MODE_8, 1);\n+\n+    if (!code) {\n+        setText(tr(\"Error encoding URI into QR Code.\"));\n+        return false;\n+    }\n+\n+    QImage qrImage = QImage(code->width + 8, code->width + 8, QImage::Format_RGB32);\n+    qrImage.fill(0xffffff);\n+    unsigned char *p = code->data;\n+    for (int y = 0; y < code->width; ++y) {\n+        for (int x = 0; x < code->width; ++x) {\n+            qrImage.setPixel(x + 4, y + 4, ((*p & 1) ? 0x0 : 0xffffff));\n+            ++p;\n+        }\n+    }\n+    QRcode_free(code);\n+\n+    QImage qrAddrImage = QImage(QR_IMAGE_SIZE, QR_IMAGE_SIZE + (text.isEmpty() ? 0 : 20), QImage::Format_RGB32);\n+    qrAddrImage.fill(0xffffff);\n+    QPainter painter(&qrAddrImage);\n+    painter.drawImage(0, 0, qrImage.scaled(QR_IMAGE_SIZE, QR_IMAGE_SIZE));\n+\n+    if (!text.isEmpty()) {\n+        QFont font = GUIUtil::fixedPitchFont();\n+        QRect paddedRect = qrAddrImage.rect();\n+\n+        // calculate ideal font size\n+        qreal font_size = GUIUtil::calculateIdealFontSize(paddedRect.width() - 20, text, font);\n+        font.setPointSizeF(font_size);\n+\n+        painter.setFont(font);\n+        paddedRect.setHeight(QR_IMAGE_SIZE+12);\n+        painter.drawText(paddedRect, Qt::AlignBottom|Qt::AlignCenter, text);\n+    }\n+\n+    painter.end();\n+    setPixmap(QPixmap::fromImage(qrAddrImage));\n+\n+    return true;\n+#else\n+    setText(tr(\"QR code support not available.\"));\n+    return false;\n+#endif\n+}\n+\n QImage QRImageWidget::exportImage()\n {\n     if(!pixmap())\n@@ -150,55 +208,9 @@ void ReceiveRequestDialog::update()\n     }\n     ui->outUri->setText(html);\n \n-#ifdef USE_QRCODE\n-    ui->lblQRCode->setText(\"\");\n-    if(!uri.isEmpty())\n-    {\n-        // limit URI length\n-        if (uri.length() > MAX_URI_LENGTH)\n-        {\n-            ui->lblQRCode->setText(tr(\"Resulting URI too long, try to reduce the text for label / message.\"));\n-        } else {\n-            QRcode *code = QRcode_encodeString(uri.toUtf8().constData(), 0, QR_ECLEVEL_L, QR_MODE_8, 1);\n-            if (!code)\n-            {\n-                ui->lblQRCode->setText(tr(\"Error encoding URI into QR Code.\"));\n-                return;\n-            }\n-            QImage qrImage = QImage(code->width + 8, code->width + 8, QImage::Format_RGB32);\n-            qrImage.fill(0xffffff);\n-            unsigned char *p = code->data;\n-            for (int y = 0; y < code->width; y++)\n-            {\n-                for (int x = 0; x < code->width; x++)\n-                {\n-                    qrImage.setPixel(x + 4, y + 4, ((*p & 1) ? 0x0 : 0xffffff));\n-                    p++;\n-                }\n-            }\n-            QRcode_free(code);\n-\n-            QImage qrAddrImage = QImage(QR_IMAGE_SIZE, QR_IMAGE_SIZE+20, QImage::Format_RGB32);\n-            qrAddrImage.fill(0xffffff);\n-            QPainter painter(&qrAddrImage);\n-            painter.drawImage(0, 0, qrImage.scaled(QR_IMAGE_SIZE, QR_IMAGE_SIZE));\n-            QFont font = GUIUtil::fixedPitchFont();\n-            QRect paddedRect = qrAddrImage.rect();\n-\n-            // calculate ideal font size\n-            qreal font_size = GUIUtil::calculateIdealFontSize(paddedRect.width() - 20, info.address, font);\n-            font.setPointSizeF(font_size);\n-\n-            painter.setFont(font);\n-            paddedRect.setHeight(QR_IMAGE_SIZE+12);\n-            painter.drawText(paddedRect, Qt::AlignBottom|Qt::AlignCenter, info.address);\n-            painter.end();\n-\n-            ui->lblQRCode->setPixmap(QPixmap::fromImage(qrAddrImage));\n-            ui->btnSaveAs->setEnabled(true);\n-        }\n+    if (ui->lblQRCode->setQR(uri, info.address)) {\n+        ui->btnSaveAs->setEnabled(true);\n     }\n-#endif\n }\n \n void ReceiveRequestDialog::on_btnCopyURI_clicked()"
      },
      {
        "sha": "0e62c26fd35ae390a43c41e31f2e6d8c35f1cab6",
        "filename": "src/qt/receiverequestdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/316e3c1b83b1c127d10acd5a030d289815886d18/src/qt/receiverequestdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/316e3c1b83b1c127d10acd5a030d289815886d18/src/qt/receiverequestdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.h?ref=316e3c1b83b1c127d10acd5a030d289815886d18",
        "patch": "@@ -29,6 +29,7 @@ class QRImageWidget : public QLabel\n \n public:\n     explicit QRImageWidget(QWidget *parent = nullptr);\n+    bool setQR(const QString& data, const QString& text = \"\");\n     QImage exportImage();\n \n public Q_SLOTS:"
      }
    ]
  },
  {
    "sha": "ac60b12b62dafe8c20e5bac7628921159d1592cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzYwYjEyYjYyZGFmZThjMjBlNWJhYzc2Mjg5MjExNTlkMTU5MmNj",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-02-16T18:30:36Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-02-17T02:02:14Z"
      },
      "message": "GUI: Add an extra stack to WalletFrame so non-wallet tabs are possible",
      "tree": {
        "sha": "26c2b408162b16f5682f5a31a7814758d7732f43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26c2b408162b16f5682f5a31a7814758d7732f43"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac60b12b62dafe8c20e5bac7628921159d1592cc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac60b12b62dafe8c20e5bac7628921159d1592cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ac60b12b62dafe8c20e5bac7628921159d1592cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac60b12b62dafe8c20e5bac7628921159d1592cc/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "316e3c1b83b1c127d10acd5a030d289815886d18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/316e3c1b83b1c127d10acd5a030d289815886d18",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/316e3c1b83b1c127d10acd5a030d289815886d18"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 8,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6505cc848925b0469a466c4e56755771b40c077d",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac60b12b62dafe8c20e5bac7628921159d1592cc/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac60b12b62dafe8c20e5bac7628921159d1592cc/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=ac60b12b62dafe8c20e5bac7628921159d1592cc",
        "patch": "@@ -23,8 +23,10 @@ WalletFrame::WalletFrame(const PlatformStyle *_platformStyle, BitcoinGUI *_gui)\n     QHBoxLayout *walletFrameLayout = new QHBoxLayout(this);\n     setContentsMargins(0,0,0,0);\n     walletStack = new QStackedWidget(this);\n+    m_global_stack = new QStackedWidget(this);\n+    m_global_stack->addWidget(walletStack);\n     walletFrameLayout->setContentsMargins(0,0,0,0);\n-    walletFrameLayout->addWidget(walletStack);\n+    walletFrameLayout->addWidget(m_global_stack);\n \n     QLabel *noWallet = new QLabel(tr(\"No wallet has been loaded.\"));\n     noWallet->setAlignment(Qt::AlignCenter);\n@@ -129,27 +131,31 @@ void WalletFrame::gotoOverviewPage()\n     QMap<WalletModel*, WalletView*>::const_iterator i;\n     for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n         i.value()->gotoOverviewPage();\n+    m_global_stack->setCurrentWidget(walletStack);\n }\n \n void WalletFrame::gotoHistoryPage()\n {\n     QMap<WalletModel*, WalletView*>::const_iterator i;\n     for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n         i.value()->gotoHistoryPage();\n+    m_global_stack->setCurrentWidget(walletStack);\n }\n \n void WalletFrame::gotoReceiveCoinsPage()\n {\n     QMap<WalletModel*, WalletView*>::const_iterator i;\n     for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n         i.value()->gotoReceiveCoinsPage();\n+    m_global_stack->setCurrentWidget(walletStack);\n }\n \n void WalletFrame::gotoSendCoinsPage(QString addr)\n {\n     QMap<WalletModel*, WalletView*>::const_iterator i;\n     for (i = mapWalletViews.constBegin(); i != mapWalletViews.constEnd(); ++i)\n         i.value()->gotoSendCoinsPage(addr);\n+    m_global_stack->setCurrentWidget(walletStack);\n }\n \n void WalletFrame::gotoSignMessageTab(QString addr)"
      },
      {
        "sha": "0a4e67963f91b0125835c237c634d8479cde084a",
        "filename": "src/qt/walletframe.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac60b12b62dafe8c20e5bac7628921159d1592cc/src/qt/walletframe.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac60b12b62dafe8c20e5bac7628921159d1592cc/src/qt/walletframe.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.h?ref=ac60b12b62dafe8c20e5bac7628921159d1592cc",
        "patch": "@@ -50,6 +50,7 @@ class WalletFrame : public QFrame\n     void requestedSyncWarningInfo();\n \n private:\n+    QStackedWidget *m_global_stack;\n     QStackedWidget *walletStack;\n     BitcoinGUI *gui;\n     ClientModel *clientModel;"
      }
    ]
  },
  {
    "sha": "fd116c1e3e3357f410ecd6068a243a43cb04eaf1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDExNmMxZTNlMzM1N2Y0MTBlY2Q2MDY4YTI0M2E0M2NiMDRlYWYx",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-02-16T18:46:55Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-02-17T05:43:29Z"
      },
      "message": "GUI: Add a new tab for pairing",
      "tree": {
        "sha": "0f734a29708a31dbb81c421eff9d72454d00832d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f734a29708a31dbb81c421eff9d72454d00832d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd116c1e3e3357f410ecd6068a243a43cb04eaf1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd116c1e3e3357f410ecd6068a243a43cb04eaf1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd116c1e3e3357f410ecd6068a243a43cb04eaf1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd116c1e3e3357f410ecd6068a243a43cb04eaf1/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac60b12b62dafe8c20e5bac7628921159d1592cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac60b12b62dafe8c20e5bac7628921159d1592cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac60b12b62dafe8c20e5bac7628921159d1592cc"
      }
    ],
    "stats": {
      "total": 70,
      "additions": 68,
      "deletions": 2
    },
    "files": [
      {
        "sha": "879ebd995b24e912f415b4347f8f38771732bb20",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd116c1e3e3357f410ecd6068a243a43cb04eaf1/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd116c1e3e3357f410ecd6068a243a43cb04eaf1/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=fd116c1e3e3357f410ecd6068a243a43cb04eaf1",
        "patch": "@@ -138,6 +138,7 @@ QT_MOC_CPP = \\\n   qt/moc_optionsdialog.cpp \\\n   qt/moc_optionsmodel.cpp \\\n   qt/moc_overviewpage.cpp \\\n+  qt/moc_pairingpage.cpp \\\n   qt/moc_peertablemodel.cpp \\\n   qt/moc_paymentserver.cpp \\\n   qt/moc_qvalidatedlineedit.cpp \\\n@@ -216,6 +217,7 @@ BITCOIN_QT_H = \\\n   qt/optionsdialog.h \\\n   qt/optionsmodel.h \\\n   qt/overviewpage.h \\\n+  qt/pairingpage.h \\\n   qt/paymentrequestplus.h \\\n   qt/paymentserver.h \\\n   qt/peertablemodel.h \\\n@@ -339,6 +341,7 @@ BITCOIN_QT_WALLET_CPP = \\\n   qt/editaddressdialog.cpp \\\n   qt/openuridialog.cpp \\\n   qt/overviewpage.cpp \\\n+  qt/pairingpage.cpp \\\n   qt/paymentserver.cpp \\\n   qt/receivecoinsdialog.cpp \\\n   qt/receiverequestdialog.cpp \\"
      },
      {
        "sha": "ff5ac2ef1f5faa79834f7d587390858043a6b3bc",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 1,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd116c1e3e3357f410ecd6068a243a43cb04eaf1/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd116c1e3e3357f410ecd6068a243a43cb04eaf1/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=fd116c1e3e3357f410ecd6068a243a43cb04eaf1",
        "patch": "@@ -273,6 +273,15 @@ void BitcoinGUI::createActions()\n     historyAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_4));\n     tabGroup->addAction(historyAction);\n \n+    m_action_pairing = new QAction(platformStyle->SingleColorIcon(\":/icons/connect_1\"), tr(\"&Pairing\"), this);\n+    m_action_pairing->setStatusTip(tr(\"Pair other software or devices with your node\"));\n+    m_action_pairing->setToolTip(m_action_pairing->statusTip());\n+    m_action_pairing->setCheckable(true);\n+    m_action_pairing->setShortcut(QKeySequence(Qt::ALT + Qt::Key_5));\n+    connect(m_action_pairing, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n+    connect(m_action_pairing, &QAction::triggered, this, &BitcoinGUI::gotoPairingPage);\n+    tabGroup->addAction(m_action_pairing);\n+\n #ifdef ENABLE_WALLET\n     // These showNormalIfMinimized are needed because Send Coins and Receive Coins\n     // can be triggered from the tray menu, and need to show the GUI to be useful.\n@@ -476,6 +485,7 @@ void BitcoinGUI::createToolBars()\n         toolbar->addAction(sendCoinsAction);\n         toolbar->addAction(receiveCoinsAction);\n         toolbar->addAction(historyAction);\n+        toolbar->addAction(m_action_pairing);\n         overviewAction->setChecked(true);\n \n #ifdef ENABLE_WALLET\n@@ -642,7 +652,6 @@ void BitcoinGUI::removeAllWallets()\n \n void BitcoinGUI::setWalletActionsEnabled(bool enabled)\n {\n-    overviewAction->setEnabled(enabled);\n     sendCoinsAction->setEnabled(enabled);\n     sendCoinsMenuAction->setEnabled(enabled);\n     receiveCoinsAction->setEnabled(enabled);\n@@ -766,13 +775,21 @@ void BitcoinGUI::openClicked()\n         Q_EMIT receivedURI(dlg.getURI());\n     }\n }\n+#endif\n \n void BitcoinGUI::gotoOverviewPage()\n {\n     overviewAction->setChecked(true);\n     if (walletFrame) walletFrame->gotoOverviewPage();\n }\n \n+void BitcoinGUI::gotoPairingPage()\n+{\n+    m_action_pairing->setChecked(true);\n+    if (walletFrame) walletFrame->gotoPairingPage();\n+}\n+\n+#ifdef ENABLE_WALLET\n void BitcoinGUI::gotoHistoryPage()\n {\n     historyAction->setChecked(true);"
      },
      {
        "sha": "c7eb78a76934aedafe922f154639895b17e98f70",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd116c1e3e3357f410ecd6068a243a43cb04eaf1/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd116c1e3e3357f410ecd6068a243a43cb04eaf1/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=fd116c1e3e3357f410ecd6068a243a43cb04eaf1",
        "patch": "@@ -127,6 +127,7 @@ class BitcoinGUI : public QMainWindow\n     QMenuBar* appMenuBar = nullptr;\n     QToolBar* appToolBar = nullptr;\n     QAction* overviewAction = nullptr;\n+    QAction* m_action_pairing = nullptr;\n     QAction* historyAction = nullptr;\n     QAction* quitAction = nullptr;\n     QAction* sendCoinsAction = nullptr;\n@@ -252,9 +253,11 @@ public Q_SLOTS:\n     void updateWindowTitle();\n \n public Q_SLOTS:\n-#ifdef ENABLE_WALLET\n     /** Switch to overview (home) page */\n     void gotoOverviewPage();\n+    /** Switch to pairing page */\n+    void gotoPairingPage();\n+#ifdef ENABLE_WALLET\n     /** Switch to history (transactions) page */\n     void gotoHistoryPage();\n     /** Switch to receive coins page */"
      },
      {
        "sha": "bedc5d32e52f6e395717bfffae842dae67f1c4ef",
        "filename": "src/qt/pairingpage.cpp",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd116c1e3e3357f410ecd6068a243a43cb04eaf1/src/qt/pairingpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd116c1e3e3357f410ecd6068a243a43cb04eaf1/src/qt/pairingpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/pairingpage.cpp?ref=fd116c1e3e3357f410ecd6068a243a43cb04eaf1",
        "patch": "@@ -0,0 +1,10 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/pairingpage.h>\n+\n+PairingPage::PairingPage(QWidget *parent) :\n+    QWidget(parent)\n+{\n+}"
      },
      {
        "sha": "f151f1dff089651abf720166fd5ca93674136ef1",
        "filename": "src/qt/pairingpage.h",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd116c1e3e3357f410ecd6068a243a43cb04eaf1/src/qt/pairingpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd116c1e3e3357f410ecd6068a243a43cb04eaf1/src/qt/pairingpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/pairingpage.h?ref=fd116c1e3e3357f410ecd6068a243a43cb04eaf1",
        "patch": "@@ -0,0 +1,19 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_QT_PAIRINGPAGE_H\n+#define BITCOIN_QT_PAIRINGPAGE_H\n+\n+#include <QWidget>\n+\n+class PairingPage : public QWidget\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PairingPage(QWidget *parent = nullptr);\n+    ~PairingPage() {};\n+};\n+\n+#endif // BITCOIN_QT_PAIRINGPAGE_H"
      },
      {
        "sha": "abecde311960b63dc86acdc1c70d7e24c99cb5b2",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd116c1e3e3357f410ecd6068a243a43cb04eaf1/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd116c1e3e3357f410ecd6068a243a43cb04eaf1/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=fd116c1e3e3357f410ecd6068a243a43cb04eaf1",
        "patch": "@@ -2,6 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <qt/pairingpage.h>\n #include <qt/walletframe.h>\n #include <qt/walletmodel.h>\n \n@@ -31,6 +32,9 @@ WalletFrame::WalletFrame(const PlatformStyle *_platformStyle, BitcoinGUI *_gui)\n     QLabel *noWallet = new QLabel(tr(\"No wallet has been loaded.\"));\n     noWallet->setAlignment(Qt::AlignCenter);\n     walletStack->addWidget(noWallet);\n+\n+    m_page_pairing = new PairingPage(this);\n+    m_global_stack->addWidget(m_page_pairing);\n }\n \n WalletFrame::~WalletFrame()\n@@ -134,6 +138,11 @@ void WalletFrame::gotoOverviewPage()\n     m_global_stack->setCurrentWidget(walletStack);\n }\n \n+void WalletFrame::gotoPairingPage()\n+{\n+    m_global_stack->setCurrentWidget(m_page_pairing);\n+}\n+\n void WalletFrame::gotoHistoryPage()\n {\n     QMap<WalletModel*, WalletView*>::const_iterator i;"
      },
      {
        "sha": "756476db8980326a998753c37f6cfa0475582154",
        "filename": "src/qt/walletframe.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd116c1e3e3357f410ecd6068a243a43cb04eaf1/src/qt/walletframe.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd116c1e3e3357f410ecd6068a243a43cb04eaf1/src/qt/walletframe.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.h?ref=fd116c1e3e3357f410ecd6068a243a43cb04eaf1",
        "patch": "@@ -10,6 +10,7 @@\n \n class BitcoinGUI;\n class ClientModel;\n+class PairingPage;\n class PlatformStyle;\n class SendCoinsRecipient;\n class WalletModel;\n@@ -56,6 +57,8 @@ class WalletFrame : public QFrame\n     ClientModel *clientModel;\n     QMap<WalletModel*, WalletView*> mapWalletViews;\n \n+    PairingPage *m_page_pairing;\n+\n     bool bOutOfSync;\n \n     const PlatformStyle *platformStyle;\n@@ -67,6 +70,8 @@ class WalletFrame : public QFrame\n public Q_SLOTS:\n     /** Switch to overview (home) page */\n     void gotoOverviewPage();\n+    /** Switch to pairing page */\n+    void gotoPairingPage();\n     /** Switch to history (transactions) page */\n     void gotoHistoryPage();\n     /** Switch to receive coins page */"
      }
    ]
  },
  {
    "sha": "9a3d8526c9795af6253d7044cf36df6777969c63",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTNkODUyNmM5Nzk1YWY2MjUzZDcwNDRjZjM2ZGY2Nzc3OTY5YzYz",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-02-17T01:49:20Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2019-02-17T05:43:29Z"
      },
      "message": "GUI: Show onion address as text & QR code in Pairing tab",
      "tree": {
        "sha": "dc2e2633529d3e0c61db6c9876f7a1a5abb1df70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dc2e2633529d3e0c61db6c9876f7a1a5abb1df70"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a3d8526c9795af6253d7044cf36df6777969c63",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a3d8526c9795af6253d7044cf36df6777969c63",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a3d8526c9795af6253d7044cf36df6777969c63",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a3d8526c9795af6253d7044cf36df6777969c63/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd116c1e3e3357f410ecd6068a243a43cb04eaf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd116c1e3e3357f410ecd6068a243a43cb04eaf1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd116c1e3e3357f410ecd6068a243a43cb04eaf1"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 71,
      "deletions": 0
    },
    "files": [
      {
        "sha": "216a378768c84a3f41da34f97cf7093635f752f7",
        "filename": "src/qt/pairingpage.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a3d8526c9795af6253d7044cf36df6777969c63/src/qt/pairingpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a3d8526c9795af6253d7044cf36df6777969c63/src/qt/pairingpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/pairingpage.cpp?ref=9a3d8526c9795af6253d7044cf36df6777969c63",
        "patch": "@@ -2,9 +2,60 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <qt/clientmodel.h>\n #include <qt/pairingpage.h>\n+#include <qt/receiverequestdialog.h>\n+\n+#include <QFormLayout>\n+#include <QLabel>\n+#include <QLayout>\n+#include <QLineEdit>\n \n PairingPage::PairingPage(QWidget *parent) :\n     QWidget(parent)\n {\n+    QVBoxLayout *layout = new QVBoxLayout(this);\n+\n+    QLabel *label_summary = new QLabel(this);\n+    label_summary->setText(tr(\"Below you will find information to pair other software or devices with this node:\"));\n+    layout->addWidget(label_summary);\n+\n+    QFormLayout *form_layout = new QFormLayout(this);\n+    m_onion_address = new QLineEdit(this);\n+    m_onion_address->setReadOnly(true);\n+    form_layout->addRow(tr(\"Onion address: \"), m_onion_address);\n+\n+    layout->addLayout(form_layout);\n+\n+    m_qrcode = new QRImageWidget(this);\n+#ifdef USE_QRCODE\n+    layout->addWidget(m_qrcode);\n+#endif\n+\n+    layout->addStretch();\n+\n+    refresh();\n+}\n+\n+void PairingPage::setClientModel(ClientModel *client_model)\n+{\n+    m_client_model = client_model;\n+    connect(client_model, &ClientModel::networkLocalChanged, this, &PairingPage::refresh);\n+    refresh();\n+}\n+\n+void PairingPage::refresh()\n+{\n+    QString onion;\n+    if (m_client_model && m_client_model->getTorInfo(onion)) {\n+        m_onion_address->setText(onion);\n+        m_onion_address->setEnabled(true);\n+        QString uri = QString(\"bitcoin-p2p://\") + onion;\n+        m_qrcode->setQR(uri);\n+        m_qrcode->setVisible(true);\n+    } else {\n+        m_onion_address->setText(tr(\"(not connected)\"));\n+        m_onion_address->setEnabled(false);\n+        m_qrcode->setVisible(false);\n+    }\n }"
      },
      {
        "sha": "cd168c6cc2355a91d60661ba2e53c1fa1aaf3e22",
        "filename": "src/qt/pairingpage.h",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a3d8526c9795af6253d7044cf36df6777969c63/src/qt/pairingpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a3d8526c9795af6253d7044cf36df6777969c63/src/qt/pairingpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/pairingpage.h?ref=9a3d8526c9795af6253d7044cf36df6777969c63",
        "patch": "@@ -7,13 +7,30 @@\n \n #include <QWidget>\n \n+class ClientModel;\n+class QRImageWidget;\n+\n+QT_BEGIN_NAMESPACE\n+class QLineEdit;\n+QT_END_NAMESPACE\n+\n class PairingPage : public QWidget\n {\n     Q_OBJECT\n \n public:\n     explicit PairingPage(QWidget *parent = nullptr);\n     ~PairingPage() {};\n+\n+    void setClientModel(ClientModel *);\n+\n+public Q_SLOTS:\n+    void refresh();\n+\n+private:\n+    ClientModel *m_client_model{nullptr};\n+    QLineEdit *m_onion_address{nullptr};\n+    QRImageWidget *m_qrcode{nullptr};\n };\n \n #endif // BITCOIN_QT_PAIRINGPAGE_H"
      },
      {
        "sha": "a9841b3696c7d8fef35c901aa643e52f1c7111c8",
        "filename": "src/qt/receiverequestdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a3d8526c9795af6253d7044cf36df6777969c63/src/qt/receiverequestdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a3d8526c9795af6253d7044cf36df6777969c63/src/qt/receiverequestdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.cpp?ref=9a3d8526c9795af6253d7044cf36df6777969c63",
        "patch": "@@ -28,6 +28,8 @@\n QRImageWidget::QRImageWidget(QWidget *parent):\n     QLabel(parent), contextMenu(nullptr)\n {\n+    setAlignment(Qt::AlignCenter);\n+\n     contextMenu = new QMenu(this);\n     QAction *saveImageAction = new QAction(tr(\"&Save Image...\"), this);\n     connect(saveImageAction, &QAction::triggered, this, &QRImageWidget::saveImage);"
      },
      {
        "sha": "2c2b8767782026cdb8f0bd0ec06d5ae6a6bf8ca1",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a3d8526c9795af6253d7044cf36df6777969c63/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a3d8526c9795af6253d7044cf36df6777969c63/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=9a3d8526c9795af6253d7044cf36df6777969c63",
        "patch": "@@ -44,6 +44,7 @@ WalletFrame::~WalletFrame()\n void WalletFrame::setClientModel(ClientModel *_clientModel)\n {\n     this->clientModel = _clientModel;\n+    m_page_pairing->setClientModel(_clientModel);\n }\n \n bool WalletFrame::addWallet(WalletModel *walletModel)"
      }
    ]
  }
]