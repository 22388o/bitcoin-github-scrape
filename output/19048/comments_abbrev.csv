fanquake,2020-05-22 07:51:20,You have committed your vscode settings as part of af83312ac57e6dfe2c7202db81ef54b7efd31170.,https://github.com/bitcoin/bitcoin/pull/19048#issuecomment-632551687,632551687,
jonatack,2020-05-22 08:19:19,"Also, you can see that a maintainer changed your PR description. It's best to not put GitHub @-prefixed usernames in commits and PR descriptions; the latter because usernames in the description are copied into the merge commit by the merge script. This can cause annoying notifications for those concerned. An update to the merge script now warns maintainers if a merge message contains a @username, ",https://github.com/bitcoin/bitcoin/pull/19048#issuecomment-632564356,632564356,
rajarshimaitra,2020-05-22 10:53:11,Sorry for all those silly mistakes. Fixed them and rebased. All changes are put into single commit for easier review.,https://github.com/bitcoin/bitcoin/pull/19048#issuecomment-632629636,632629636,
rajarshimaitra,2020-05-22 14:21:07,"There is a Travis failure happening due to `feature_backwards_compatibility.py`. This test is skipping with the following warning (probably why I missed it). \n```\n$ test/functional/feature_backwards_compatibility.py\n2020-05-22T14:15:55.381000Z TestFramework (WARNING): Test Skipped: previous releases not available or disabled\n2020-05-22T14:15:55.431000Z TestFramework (INFO): Stopping nodes",https://github.com/bitcoin/bitcoin/pull/19048#issuecomment-632718186,632718186,
rajarshimaitra,2020-05-28 18:06:01,"Thank you all for the reviews. Updated as per the suggestions, rebased, and retested. This is ready for a second look.",https://github.com/bitcoin/bitcoin/pull/19048#issuecomment-635508369,635508369,
rajarshimaitra,2020-05-31 13:47:27,"> I also have a conceptual question that hopefully doesn't sound offensive/dumb: I don't really see many examples of `timeout_factor` being used - what are the use cases for it?\n\nI also have the same question. Almost all of the places `timeout` has been explicitly passed into `wait_until` and it was using the default factor of 1. Thus the change became so small and didn't require modification ",https://github.com/bitcoin/bitcoin/pull/19048#issuecomment-636473840,636473840,
DrahtBot,2020-06-10 03:48:56,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19208 (test: move sync_blocks and sync_mempool functions to test_framework.py by ycshao)\n\nIf you consider this pull req",https://github.com/bitcoin/bitcoin/pull/19048#issuecomment-641703298,641703298,
DrahtBot,2020-06-16 21:30:23,<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/19048#issuecomment-645022315,645022315,
fanquake,2021-04-08 06:29:18,@MarcoFalke can you concept ack / nack here? @jnewbery can you comment re https://github.com/bitcoin/bitcoin/pull/19048#issuecomment-636473840? ,https://github.com/bitcoin/bitcoin/pull/19048#issuecomment-815487086,815487086,
jnewbery,2021-04-08 07:56:00,"> @jnewbery can you comment\n\nI think this can just be closed. It's required rebase for several months.",https://github.com/bitcoin/bitcoin/pull/19048#issuecomment-815541629,815541629,
jonatack,2020-05-22 08:09:17,"This isn't a typo; belongs in the other commit?\n\n(Also, generally one typo isn't worth a separate commit. As you spend more time reviewing PRs, you'll see these practices.)",https://github.com/bitcoin/bitcoin/pull/19048#discussion_r429104446,429104446,test/functional/test_framework/mininode.py
rajarshimaitra,2020-05-22 10:52:39,"Right, it's all mixed up. Fixed now. ",https://github.com/bitcoin/bitcoin/pull/19048#discussion_r429178710,429178710,test/functional/test_framework/mininode.py
jnewbery,2020-05-22 13:59:24,"nit: prefer using the `""{}"".format()` style",https://github.com/bitcoin/bitcoin/pull/19048#discussion_r429263100,429263100,test/functional/test_framework/mininode.py
jnewbery,2020-05-22 14:24:46,Do you need to multiply `timeout` by `timeout_factor` here?,https://github.com/bitcoin/bitcoin/pull/19048#discussion_r429278063,429278063,test/functional/test_framework/test_node.py
rajarshimaitra,2020-05-22 15:56:36,"Timeout here is set to `BITCOIND_PROC_WAIT_TIMEOUT` which is hardcode as 60 secs. This is the only time this value is being called. As it has been specifically separated from `self.options.timeout`, would it make sense to multiply it with `timeout_factor` here? Thinking that I skipped it. ",https://github.com/bitcoin/bitcoin/pull/19048#discussion_r429329094,429329094,test/functional/test_framework/test_node.py
jnewbery,2020-05-22 16:40:40,"Actually, why is this even being changed in this PR? It seems completely unrelated to the other changes.",https://github.com/bitcoin/bitcoin/pull/19048#discussion_r429347499,429347499,test/functional/test_framework/mininode.py
jnewbery,2020-05-22 16:42:04,This breaks the factor argument. You need to call `wait_until()` with `timeout = timeout * self.timeout_factor`.,https://github.com/bitcoin/bitcoin/pull/19048#discussion_r429348165,429348165,test/functional/test_framework/mininode.py
rajarshimaitra,2020-05-22 17:07:03,"Yes, this line was giving error. So I changed it as a nit.  ",https://github.com/bitcoin/bitcoin/pull/19048#discussion_r429360682,429360682,test/functional/test_framework/mininode.py
rajarshimaitra,2020-05-27 18:11:24,"Polite reminder. :) \nDoes the above rationale make sense or should I change it?",https://github.com/bitcoin/bitcoin/pull/19048#discussion_r431345852,431345852,test/functional/test_framework/test_node.py
jnewbery,2020-05-27 20:00:49,"> Timeout here is set to BITCOIND_PROC_WAIT_TIMEOUT which is hardcode as 60 secs.\n\nThat's the default value. `wait_until_stopped()` can be called with any timeout.",https://github.com/bitcoin/bitcoin/pull/19048#discussion_r431408937,431408937,test/functional/test_framework/test_node.py
laanwj,2020-05-28 10:51:15,"The previous formulation was wrong, so it makes sense to change this. I also prefer `{}`.format() syntax though, and it's what the code base has been moving towards for a while.",https://github.com/bitcoin/bitcoin/pull/19048#discussion_r431747935,431747935,test/functional/test_framework/mininode.py
rajarshimaitra,2020-05-28 18:00:40,Fixed.,https://github.com/bitcoin/bitcoin/pull/19048#discussion_r432022074,432022074,test/functional/test_framework/mininode.py
rajarshimaitra,2020-05-28 18:01:34,"Agreed, fixed. ",https://github.com/bitcoin/bitcoin/pull/19048#discussion_r432022586,432022586,test/functional/test_framework/mininode.py
rajarshimaitra,2020-05-28 18:02:00,Right that was just a default. agreed and fixed. ,https://github.com/bitcoin/bitcoin/pull/19048#discussion_r432022797,432022797,test/functional/test_framework/test_node.py
glozow,2020-05-30 17:22:47,"Mininode has its own `wait_until` function which automatically grabs the `mininode_lock` (in addition to including the mininode's `timeout_factor`) so I think it’s probably better to use that function if synchronization is needed.\nWould it be worth adding a comment about this? I’ve seen multiple reviews with reminders to pass in the `mininode_lock` or use another function that does it automatica",https://github.com/bitcoin/bitcoin/pull/19048#discussion_r432871780,432871780,test/functional/test_framework/util.py
rajarshimaitra,2020-05-31 14:03:18,"Thank @gzhao408 for the review and testing. While I agree with the cautionary message of using the mininode `wait_until`, I am not sure whether this is the correct place to add that comment. This seems like a generalized function for `wait_until` that can be used in many places and not all of them might require the lock. \nIt seems that comment can be placed in the mininode's definition itself as",https://github.com/bitcoin/bitcoin/pull/19048#discussion_r432950482,432950482,test/functional/test_framework/util.py
glozow,2020-06-08 19:19:47,"Well, no, my suggestion for the comment is more of a ""don't use this."" \nI don't think `util.wait_until` should ever be used except to define object-specific `wait_until` since they should be responsible for including the `timeout_factor` (that's the point of this PR right?). In functional tests, I think it's more appropriate to use mininode, test_node, or test_framework `wait_until`. See #19134 ",https://github.com/bitcoin/bitcoin/pull/19048#discussion_r436945128,436945128,test/functional/test_framework/util.py
rajarshimaitra,2020-06-09 09:48:24,"Hmm I see your point now, a comment here saying ""Dont Use it"" can help as per #19134 modifications. I am also now confused about why there are so many wait_untils to begin with. Anyway, I am not very sure if this PR is adding any value. `timeout_factor` is not being used anywhere with wait_until anyway. I think I will wait for more ACKs before further working on this.  ",https://github.com/bitcoin/bitcoin/pull/19048#discussion_r437284027,437284027,test/functional/test_framework/util.py
