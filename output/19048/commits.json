[
  {
    "sha": "a0826793683c5891d7bc152dc78b5858742dff71",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMDgyNjc5MzY4M2M1ODkxZDdiYzE1MmRjNzhiNTg1ODc0MmRmZjcx",
    "commit": {
      "author": {
        "name": "codeShark149",
        "email": "rajarshi149@gmail.com",
        "date": "2020-05-22T10:42:39Z"
      },
      "committer": {
        "name": "codeShark149",
        "email": "rajarshi149@gmail.com",
        "date": "2020-05-28T17:59:55Z"
      },
      "message": "test: change signature of wait_until()\n\nwait_until() does not take timeout_factor as an arguement anymore.\nClients should pass in the correct timeout value at the time of calling.",
      "tree": {
        "sha": "65a27006f01c1406d725978871a9a067ca55d37c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/65a27006f01c1406d725978871a9a067ca55d37c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0826793683c5891d7bc152dc78b5858742dff71",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0826793683c5891d7bc152dc78b5858742dff71",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a0826793683c5891d7bc152dc78b5858742dff71",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0826793683c5891d7bc152dc78b5858742dff71/comments",
    "author": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "082a417abcce6a2d6e0a52ccad5cca9657cec64b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/082a417abcce6a2d6e0a52ccad5cca9657cec64b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/082a417abcce6a2d6e0a52ccad5cca9657cec64b"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 5,
      "deletions": 6
    },
    "files": [
      {
        "sha": "d55033efc203f8e4790fefba748de26bab15b949",
        "filename": "test/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0826793683c5891d7bc152dc78b5858742dff71/test/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0826793683c5891d7bc152dc78b5858742dff71/test/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/README.md?ref=a0826793683c5891d7bc152dc78b5858742dff71",
        "patch": "@@ -226,7 +226,7 @@ Note: gdb attach step may require ptrace_scope to be modified, or `sudo` precedi\n See this link for considerations: https://www.kernel.org/doc/Documentation/security/Yama.txt\n \n Often while debugging rpc calls from functional tests, the test might reach timeout before\n-process can return a response. Use `--timeout-factor 0` to disable all rpc timeouts for that partcular\n+process can return a response. Use `--timeout-factor 0` to disable all rpc timeouts for that particular\n functional test. Ex: `test/functional/wallet_hd.py --timeout-factor 0`.\n \n ##### Profiling"
      },
      {
        "sha": "d5fc69c49bb990ac550a4f6277836b480c350d6f",
        "filename": "test/functional/test_framework/mininode.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0826793683c5891d7bc152dc78b5858742dff71/test/functional/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0826793683c5891d7bc152dc78b5858742dff71/test/functional/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/mininode.py?ref=a0826793683c5891d7bc152dc78b5858742dff71",
        "patch": "@@ -207,7 +207,7 @@ def _on_data(self):\n                 self._log_message(\"receive\", t)\n                 self.on_message(t)\n         except Exception as e:\n-            logger.exception('Error reading message:', repr(e))\n+            logger.exception('Error reading message: {}'.format(repr(e)))\n             raise\n \n     def on_message(self, message):\n@@ -375,7 +375,7 @@ def on_version(self, message):\n     # Connection helper methods\n \n     def wait_until(self, test_function, timeout=60):\n-        wait_until(test_function, timeout=timeout, lock=mininode_lock, timeout_factor=self.timeout_factor)\n+        wait_until(test_function, timeout=timeout * self.timeout_factor, lock=mininode_lock)\n \n     def wait_for_disconnect(self, timeout=60):\n         test_function = lambda: not self.is_connected"
      },
      {
        "sha": "50c7dadeff4ad9c370be5a6f67f001ea56de17f0",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0826793683c5891d7bc152dc78b5858742dff71/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0826793683c5891d7bc152dc78b5858742dff71/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=a0826793683c5891d7bc152dc78b5858742dff71",
        "patch": "@@ -358,7 +358,7 @@ def is_node_stopped(self):\n         return True\n \n     def wait_until_stopped(self, timeout=BITCOIND_PROC_WAIT_TIMEOUT):\n-        wait_until(self.is_node_stopped, timeout=timeout, timeout_factor=self.timeout_factor)\n+        wait_until(self.is_node_stopped, timeout=timeout * self.timeout_factor)\n \n     @contextlib.contextmanager\n     def assert_debug_log(self, expected_msgs, unexpected_msgs=None, timeout=2):"
      },
      {
        "sha": "d1ae474fa86845bcda1b42e4de363b5c385ae408",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0826793683c5891d7bc152dc78b5858742dff71/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0826793683c5891d7bc152dc78b5858742dff71/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=a0826793683c5891d7bc152dc78b5858742dff71",
        "patch": "@@ -208,10 +208,9 @@ def str_to_b64str(string):\n def satoshi_round(amount):\n     return Decimal(amount).quantize(Decimal('0.00000001'), rounding=ROUND_DOWN)\n \n-def wait_until(predicate, *, attempts=float('inf'), timeout=float('inf'), lock=None, timeout_factor=1.0):\n+def wait_until(predicate, *, attempts=float('inf'), timeout=float('inf'), lock=None):\n     if attempts == float('inf') and timeout == float('inf'):\n         timeout = 60\n-    timeout = timeout * timeout_factor\n     attempt = 0\n     time_end = time.time() + timeout\n "
      }
    ]
  }
]