ryanofsky,2018-03-16T18:57:29Z,"> since caller cannot control\n\nIt's not really true that the caller can't control this. But maybe we don't want to allow them to. Whether the caller can control the order just depends on how they are generating their request, and what JSON library they are using if any. The python json library and our c++ UniValue library do allow control over ordering.",https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-373812651,373812651,
instagibbs,2018-03-16T19:01:45Z,"@ryanofsky ok, I was operating under the same assumption as https://github.com/bitcoin/bitcoin/pull/11872\n\nI believe the arguments to change the behavior is still strong.",https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-373813854,373813854,
jonasschnelli,2018-03-18T05:15:16Z,"IMO the `sendmany` API has no order (per JSON specs) due to the use of an associated array (object) ( `{\""address\"":amount,...}`).\n\nMaybe we should mention this in the release notes?\n\nutACK fdc2e316ddea8454cc329ff8f0694c0a1740f508",https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-373973720,373973720,
MarcoFalke,2018-03-18T10:57:01Z,"Yes this definitely needs mention in the release notes, since the caller *can* control the order as explained by @ryanofsky ",https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-373988862,373988862,
MarcoFalke,2018-03-18T11:08:28Z,"Also, I think for API clarity we should accept a list that allows duplicates regardless of json implementation. Similar to #11872",https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-373989546,373989546,
promag,2018-03-20T23:28:43Z,"> But maybe we don't want to allow them to\n\n@ryanofsky why not? The same could be said in #11872?",https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-374792006,374792006,
instagibbs,2018-03-20T23:32:46Z,"@promag raw transaction APIs are a completely different beast, where caller expects more control, and can do their own shuffling if required",https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-374792783,374792783,
instagibbs,2018-03-20T23:33:03Z,I will add release notes.,https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-374792854,374792854,
promag,2018-03-21T00:15:15Z,"@instagibbs got it. Agree with @MarcoFalke though in doing something similar to #11872 in a different PR.\n\n> the caller can control the order\n\nIt can be a pain in some cases, so I don't think we should focus on that before doing the same as #11872.",https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-374800463,374800463,
sipa,2018-03-21T01:41:33Z,"utACK fdc2e316ddea8454cc329ff8f0694c0a1740f508. This merits a release notes update, though.",https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-374812727,374812727,
sipa,2018-03-21T02:13:29Z,@instagibbs Have a look at #12742; that should permit a faster implementation that doesn't need a call to OpenSSL for every output in the list.,https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-374816399,374816399,
instagibbs,2018-03-21T18:51:35Z,rebased onto #12742 and added release note.,https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-375056555,375056555,
sipa,2018-03-22T00:07:00Z,utACK 76cc7f9bfe530cce24800cd317e0c36b5610a1cd,https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-375136027,375136027,
MarcoFalke,2018-03-22T17:27:30Z,utACK 76cc7f9,https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-375390792,375390792,
promag,2018-03-22T17:56:34Z,utACK 76cc7f9.,https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-375401222,375401222,
instagibbs,2018-03-23T12:57:42Z,had to rebase due to release notes conflict :(,https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-375656739,375656739,
MarcoFalke,2018-03-23T14:44:28Z,re-utACK 6acb02d635da68c0506b49a8dd27c2c3ded4addf,https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-375687951,375687951,
promag,2018-03-23T15:36:32Z,utACK 6acb02d.,https://github.com/bitcoin/bitcoin/pull/12709#issuecomment-375705903,375705903,
MarcoFalke,2018-03-21T12:17:16Z,Please rebase on top of #12742 and use `std::shuffle` from cpp11 to avoid future code churn.,https://github.com/bitcoin/bitcoin/pull/12709#discussion_r176061520,176061520,src/wallet/rpcwallet.cpp
