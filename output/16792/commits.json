[
  {
    "sha": "2457aea83c1f9fba708e2335bb197950bf0b6244",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNDU3YWVhODNjMWY5ZmJhNzA4ZTIzMzViYjE5Nzk1MGJmMGI2MjQ0",
    "commit": {
      "author": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-09-03T00:44:11Z"
      },
      "committer": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-09-05T01:25:11Z"
      },
      "message": "Assert that the HRP is lowercase in Bech32::Encode",
      "tree": {
        "sha": "e35b2ff36c2f92c9f18d051711c292651c828188",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e35b2ff36c2f92c9f18d051711c292651c828188"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2457aea83c1f9fba708e2335bb197950bf0b6244",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2457aea83c1f9fba708e2335bb197950bf0b6244",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2457aea83c1f9fba708e2335bb197950bf0b6244",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2457aea83c1f9fba708e2335bb197950bf0b6244/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "33f9750b1b86a705d092b0e1314ed15287c45239",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33f9750b1b86a705d092b0e1314ed15287c45239",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33f9750b1b86a705d092b0e1314ed15287c45239"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "4c966350b4ce31f1bae267fb1e58a64dc95cd3fe",
        "filename": "src/bech32.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2457aea83c1f9fba708e2335bb197950bf0b6244/src/bech32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2457aea83c1f9fba708e2335bb197950bf0b6244/src/bech32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.cpp?ref=2457aea83c1f9fba708e2335bb197950bf0b6244",
        "patch": "@@ -4,6 +4,8 @@\n \n #include <bech32.h>\n \n+#include <assert.h>\n+\n namespace\n {\n \n@@ -58,7 +60,7 @@ uint32_t PolyMod(const data& v)\n \n     // During the course of the loop below, `c` contains the bitpacked coefficients of the\n     // polynomial constructed from just the values of v that were processed so far, mod g(x). In\n-    // the above example, `c` initially corresponds to 1 mod (x), and after processing 2 inputs of\n+    // the above example, `c` initially corresponds to 1 mod g(x), and after processing 2 inputs of\n     // v, it corresponds to x^2 + v0*x + v1 mod g(x). As 1 mod g(x) = 1, that is the starting value\n     // for `c`.\n     uint32_t c = 1;\n@@ -145,6 +147,10 @@ namespace bech32\n \n /** Encode a Bech32 string. */\n std::string Encode(const std::string& hrp, const data& values) {\n+    // First ensure that the HRP is all lowercase. BIP-173 requires an encoder\n+    // to return a lowercase Bech32 string, but if given an uppercase HRP, the\n+    // result will always be invalid.\n+    for (const char& c : hrp) assert(c < 'A' || c > 'Z');\n     data checksum = CreateChecksum(hrp, values);\n     data combined = Cat(values, checksum);\n     std::string ret = hrp + '1';"
      },
      {
        "sha": "fb39cd352b405549a0ccb9744a8283e484768d58",
        "filename": "src/bech32.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2457aea83c1f9fba708e2335bb197950bf0b6244/src/bech32.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2457aea83c1f9fba708e2335bb197950bf0b6244/src/bech32.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.h?ref=2457aea83c1f9fba708e2335bb197950bf0b6244",
        "patch": "@@ -19,7 +19,7 @@\n namespace bech32\n {\n \n-/** Encode a Bech32 string. Returns the empty string in case of failure. */\n+/** Encode a Bech32 string. If hrp contains uppercase characters, this will cause an assertion error. */\n std::string Encode(const std::string& hrp, const std::vector<uint8_t>& values);\n \n /** Decode a Bech32 string. Returns (hrp, data). Empty hrp means failure. */"
      }
    ]
  }
]