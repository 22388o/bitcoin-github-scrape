[
  {
    "sha": "24e44c354d5b9174cb9cb7d157a985e197aa7886",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNGU0NGMzNTRkNWI5MTc0Y2I5Y2I3ZDE1N2E5ODVlMTk3YWE3ODg2",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-06-07T17:00:11Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-06-07T17:00:11Z"
      },
      "message": "Don't return stale data from CCoinsViewCache::Cursor()\n\nCCoinsViewCache doesn't actually support cursor iteration returning the\ncurrent contents of the cache, so raise an error when the cursor method is\ncalled instead of returning a cursor that iterates over stale data.\n\nAlso update the gettxoutsetinfo RPC which was relying on the old behavior to be\nexplicit about which view it is returning data about.",
      "tree": {
        "sha": "d48625d1dd888a11f8f73050daabc6a156802eff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d48625d1dd888a11f8f73050daabc6a156802eff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24e44c354d5b9174cb9cb7d157a985e197aa7886",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24e44c354d5b9174cb9cb7d157a985e197aa7886",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/24e44c354d5b9174cb9cb7d157a985e197aa7886",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24e44c354d5b9174cb9cb7d157a985e197aa7886/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bea5b00cfe95cd37832305c0f93c339a22a7d79d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bea5b00cfe95cd37832305c0f93c339a22a7d79d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bea5b00cfe95cd37832305c0f93c339a22a7d79d"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 10,
      "deletions": 2
    },
    "files": [
      {
        "sha": "b10c7ea9a0e474c1c426bd7e2343aa9a0119ab87",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24e44c354d5b9174cb9cb7d157a985e197aa7886/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24e44c354d5b9174cb9cb7d157a985e197aa7886/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=24e44c354d5b9174cb9cb7d157a985e197aa7886",
        "patch": "@@ -212,6 +212,9 @@ class CCoinsViewCache : public CCoinsViewBacked\n     uint256 GetBestBlock() const;\n     void SetBestBlock(const uint256 &hashBlock);\n     bool BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock);\n+    CCoinsViewCursor* Cursor() const {\n+        throw std::logic_error(\"CCoinsViewCache cursor iteration not supported.\");\n+    }\n \n     /**\n      * Check if we have the given utxo already loaded in this cache."
      },
      {
        "sha": "8d161004b05823b7c6e187fd43bd3255e3bced0b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24e44c354d5b9174cb9cb7d157a985e197aa7886/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24e44c354d5b9174cb9cb7d157a985e197aa7886/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=24e44c354d5b9174cb9cb7d157a985e197aa7886",
        "patch": "@@ -162,7 +162,6 @@ class CCoinsViewErrorCatcher : public CCoinsViewBacked\n     // Writes do not need similar protection, as failure to write is handled by the caller.\n };\n \n-static CCoinsViewDB *pcoinsdbview = NULL;\n static CCoinsViewErrorCatcher *pcoinscatcher = NULL;\n static std::unique_ptr<ECCVerifyHandle> globalVerifyHandle;\n "
      },
      {
        "sha": "c9adfefa7f7fe357bf04100cff73b01ce214eb1b",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24e44c354d5b9174cb9cb7d157a985e197aa7886/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24e44c354d5b9174cb9cb7d157a985e197aa7886/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=24e44c354d5b9174cb9cb7d157a985e197aa7886",
        "patch": "@@ -19,6 +19,7 @@\n #include \"rpc/server.h\"\n #include \"streams.h\"\n #include \"sync.h\"\n+#include \"txdb.h\"\n #include \"txmempool.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n@@ -917,7 +918,7 @@ UniValue gettxoutsetinfo(const JSONRPCRequest& request)\n \n     CCoinsStats stats;\n     FlushStateToDisk();\n-    if (GetUTXOStats(pcoinsTip, stats)) {\n+    if (GetUTXOStats(pcoinsdbview, stats)) {\n         ret.push_back(Pair(\"height\", (int64_t)stats.nHeight));\n         ret.push_back(Pair(\"bestblock\", stats.hashBlock.GetHex()));\n         ret.push_back(Pair(\"transactions\", (int64_t)stats.nTransactions));"
      },
      {
        "sha": "b83c677cf42989b88705da1727a80aa7d2fdf24e",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24e44c354d5b9174cb9cb7d157a985e197aa7886/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24e44c354d5b9174cb9cb7d157a985e197aa7886/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=24e44c354d5b9174cb9cb7d157a985e197aa7886",
        "patch": "@@ -175,6 +175,7 @@ CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& loc\n     return chain.Genesis();\n }\n \n+CCoinsViewDB *pcoinsdbview = NULL;\n CCoinsViewCache *pcoinsTip = NULL;\n CBlockTreeDB *pblocktree = NULL;\n "
      },
      {
        "sha": "219faf0b6783513ddaa87c83857d58cb3759acfc",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24e44c354d5b9174cb9cb7d157a985e197aa7886/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24e44c354d5b9174cb9cb7d157a985e197aa7886/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=24e44c354d5b9174cb9cb7d157a985e197aa7886",
        "patch": "@@ -36,6 +36,7 @@ class CBlockIndex;\n class CBlockTreeDB;\n class CBloomFilter;\n class CChainParams;\n+class CCoinsViewDB;\n class CInv;\n class CConnman;\n class CScriptCheck;\n@@ -482,6 +483,9 @@ bool ResetBlockFailureFlags(CBlockIndex *pindex);\n /** The currently-connected chain of blocks (protected by cs_main). */\n extern CChain chainActive;\n \n+/** Global variable that points to the coins database (protected by cs_main) */\n+extern CCoinsViewDB *pcoinsdbview;\n+\n /** Global variable that points to the active CCoinsView (protected by cs_main) */\n extern CCoinsViewCache *pcoinsTip;\n "
      }
    ]
  },
  {
    "sha": "3ff1fa8c4a6198ebc277bbf814b4e07bf78eb98a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZmYxZmE4YzRhNjE5OGViYzI3N2JiZjgxNGI0ZTA3YmY3OGViOThh",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-06-08T13:28:28Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-06-08T13:28:28Z"
      },
      "message": "Use override keyword on CCoinsView overrides",
      "tree": {
        "sha": "0732d46406903e6a80714d5172f9dcc6c964b2dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0732d46406903e6a80714d5172f9dcc6c964b2dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ff1fa8c4a6198ebc277bbf814b4e07bf78eb98a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ff1fa8c4a6198ebc277bbf814b4e07bf78eb98a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3ff1fa8c4a6198ebc277bbf814b4e07bf78eb98a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ff1fa8c4a6198ebc277bbf814b4e07bf78eb98a/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "24e44c354d5b9174cb9cb7d157a985e197aa7886",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24e44c354d5b9174cb9cb7d157a985e197aa7886",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/24e44c354d5b9174cb9cb7d157a985e197aa7886"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "833e066c388d20d01f169e0b36f494519b0e2943",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ff1fa8c4a6198ebc277bbf814b4e07bf78eb98a/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ff1fa8c4a6198ebc277bbf814b4e07bf78eb98a/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=3ff1fa8c4a6198ebc277bbf814b4e07bf78eb98a",
        "patch": "@@ -207,12 +207,12 @@ class CCoinsViewCache : public CCoinsViewBacked\n     CCoinsViewCache(CCoinsView *baseIn);\n \n     // Standard CCoinsView methods\n-    bool GetCoin(const COutPoint &outpoint, Coin &coin) const;\n-    bool HaveCoin(const COutPoint &outpoint) const;\n-    uint256 GetBestBlock() const;\n+    bool GetCoin(const COutPoint &outpoint, Coin &coin) const override;\n+    bool HaveCoin(const COutPoint &outpoint) const override;\n+    uint256 GetBestBlock() const override;\n     void SetBestBlock(const uint256 &hashBlock);\n-    bool BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock);\n-    CCoinsViewCursor* Cursor() const {\n+    bool BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) override;\n+    CCoinsViewCursor* Cursor() const override {\n         throw std::logic_error(\"CCoinsViewCache cursor iteration not supported.\");\n     }\n "
      },
      {
        "sha": "40801ab16c467c84ab8ef86286f14f8da95a36b7",
        "filename": "src/test/coins_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ff1fa8c4a6198ebc277bbf814b4e07bf78eb98a/src/test/coins_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ff1fa8c4a6198ebc277bbf814b4e07bf78eb98a/src/test/coins_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/coins_tests.cpp?ref=3ff1fa8c4a6198ebc277bbf814b4e07bf78eb98a",
        "patch": "@@ -37,7 +37,7 @@ class CCoinsViewTest : public CCoinsView\n     std::map<COutPoint, Coin> map_;\n \n public:\n-    bool GetCoin(const COutPoint& outpoint, Coin& coin) const\n+    bool GetCoin(const COutPoint& outpoint, Coin& coin) const override\n     {\n         std::map<COutPoint, Coin>::const_iterator it = map_.find(outpoint);\n         if (it == map_.end()) {\n@@ -51,15 +51,15 @@ class CCoinsViewTest : public CCoinsView\n         return true;\n     }\n \n-    bool HaveCoin(const COutPoint& outpoint) const\n+    bool HaveCoin(const COutPoint& outpoint) const override\n     {\n         Coin coin;\n         return GetCoin(outpoint, coin);\n     }\n \n-    uint256 GetBestBlock() const { return hashBestBlock_; }\n+    uint256 GetBestBlock() const override { return hashBestBlock_; }\n \n-    bool BatchWrite(CCoinsMap& mapCoins, const uint256& hashBlock)\n+    bool BatchWrite(CCoinsMap& mapCoins, const uint256& hashBlock) override\n     {\n         for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end(); ) {\n             if (it->second.flags & CCoinsCacheEntry::DIRTY) {"
      }
    ]
  }
]