laanwj,2013-04-19T05:55:33Z,"Nice, I'll do some testing with it over the weekend.\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-16637262,16637262,
gavinandresen,2013-04-19T14:54:31Z,Pull-tester failure is because I didn't update the unit test data when I changed the PaymentRequest protocol buffer format...\n,https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-16657706,16657706,
gavinandresen,2013-04-19T17:35:18Z,"Unit tests fixed, but I bet the mingw-Windows build will not work because we'll need a mingw-compiled -lprotobuf\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-16668106,16668106,
laanwj,2013-04-21T14:22:32Z,I'm had some issues building in qt creator (qt creator builds to a different directory than the source directory). I get the following error:\n\n```\n.../bitcoin/src/qt/paymentrequest.proto: -1: error: File does not reside within any path specified \nusing --proto_path (or -I).  You must specify a --proto_path which encompasses this file.  Note that \nthe proto_path must be an exact prefix of the ,https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-16726211,16726211,
mikehearn,2013-04-24T12:38:22Z,"OK, I finally made a payment. Even though I have a fresh wallet that contains only a single output, I was told my tx was over the size limit and I'd have to pay a fee. But it was only 227 bytes. Not sure what's going on there.\n\nMy address book has a new address in it, ""Refund from bitcoincore.org"". Nice! Perhaps those addresses should be treated like change addresses and hidden unless you actual",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-16923587,16923587,
SergioDemianLerner,2013-04-26T22:43:42Z,"Check my proposal ""Merchant-pays-fee proposal for Bitcoin Payment Messages"" in https://bitcointalk.org/index.php?topic=188695.0\n\nIt could be scheduled for the next hard-fork.\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-17104112,17104112,
mikehearn,2013-06-05T10:04:19Z,"What's the next step for this - another review pass? It seems my previous commit comments vanished, not sure if they were addressed or not.\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-18966374,18966374,
gavinandresen,2013-06-05T13:59:21Z,"@mikehearn : I fixed the bug you found (handling multiple pay-to addresses).\n\nNext steps are:\n- Do the bitcoin-qt-handles-payment-request-mime-type thing on Linux\n- Finish writing a test plan\n- Bribe some people to test on windows/linux/osx\n- Assuming successful testing, merge into master\n- Turn the gist document into BIPs\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-18977137,18977137,
mikehearn,2013-06-13T12:12:01Z,"BTW Gavin, shouldn't you create a separate address+cert for your test server? Otherwise you might find people  signing payment requests as yourself or bitcoincore.org ....\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-19387663,19387663,
gavinandresen,2013-06-29T14:09:52Z,"Status update:\n\nWorks for me on Mac, Linux (fixed bitcoin: URI handling for gnome) and Windows (figured out how to compile a static Qt that does not expect to dynamically load openssl).\n\nThere is a showstopper bug on Windows-- I'm seeing crashes on exit (looks like another global destructor being called after exit() issue).\n\nStill needs doing:\n- Install the static-openssl-Qt libraries in th",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-20230443,20230443,
mikehearn,2013-06-29T16:15:39Z,"Couple of other things:\n- Needs a rebase, at least fTestNet -> TestNet(), but better, a new CChainParams field with the payment request protocol code that is expected.\n- Tor users will be surprised that payment submissions don't go via Tor due to the missing net manager proxy code.\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-20232551,20232551,
gavinandresen,2013-07-18T07:52:42Z,"Loose ends tied up:\n\n-proxy settings are used for payment requests, so Tor users don't reveal their IP addresses. Tested by running over Tor and watching the IP addresses in the ssl_access.log on the server.\n\nRefund addresses are not shown in the GUI (unless you receive a refund, in which case they will be properly labelled). I added a backwards-compatible change to the wallet; ""purpose&lt;add",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21167938,21167938,
luke-jr,2013-07-22T18:17:19Z,Gitian build error with protobuf:\n\n```\n+ ./configure --enable-shared=no --disable-dependency-tracking --with-protoc=/home/ubuntu/build/protobuf-2.5.0/host/protoc CXX=i586-mingw32msvc-g++ CC=i586-mingw32msvc-gcc CXXFLAGS=-frandom-seed=11 AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld\nchecking whether to ,https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21364170,21364170,
luke-jr,2013-07-22T18:37:32Z,http://codepad.org/z5wTOeGZ gets protobuf building.\n,https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21365655,21365655,
gavinandresen,2013-07-22T23:05:08Z,"Thanks, Luke.\n\nStatus: I've been setting up a debug environment on a Windows 7 machine to figure out why jenkins binaries aren't working properly (signed payment requests are being treated as unsigned).\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21382478,21382478,
mikehearn,2013-07-23T18:35:53Z,"I don't think it's important for v1, but here are some notes on how to do EV cert matching (so the user sees ""MtGox Co Ltd. [JP]"" as with Chrome instead of mtgox.com).\n\nAn EV cert is identified by the contents of the ""Certificate Policies"" field in the X.509 cert. Each issuer sets the value to be different, unfortunately. The values are OIDs. I _think_ just checking against a hard coded list is ",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21435999,21435999,
gavinandresen,2013-07-27T05:12:31Z,"Note to self: secure requests showing as insecure on Windows7 is this Qt bug, I believe:\n  https://bugreports.qt-project.org/browse/QTBUG-24827\n\nSee QWindowsCaRootFetcher class in qtbase/src/network/ssl/qsslsocket_openssl.cpp in the Qt5 source code for the fix; if we're going to move to Qt5 soon then I would rather not add an #if QT_VERSION < 0x050000 variant on that code.\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21659797,21659797,
mikehearn,2013-07-29T09:56:02Z,I think a better fix would be to go with the original suggestion of shipping a set of trusted root CAs with the app. Otherwise this kind of random platform inconsistency risks undermining the whole initiative. Upgrading to Qt5 simply in order to work with just-in-time root cert downloads sounds like a big effort.\n,https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21709781,21709781,
Diapolo,2013-07-29T10:16:45Z,"@mikehearn Our Qt code is Qt5.1 compatible, should be no problem to upgrade to Qt5 code-wise, but ""only"" Gitian wise IMHO.\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21710762,21710762,
mikehearn,2013-07-29T10:36:42Z,"If Qt5 didn't have any API breaks, then sure, why not do the upgrade. But it doesn't change my view that we should be shipping a set of root certs. It's crazy not to - otherwise the first thing that will happen is people who try and use this will discover that some random subset of wallet apps can't verify their payment requests, and someone else will have to do a long and painful process of manua",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21711640,21711640,
gavinandresen,2013-07-30T03:45:25Z,"I _really_ don't want to take responsibility for keeping an up-to-date list of root certificates that all bitcoin wallet implementations are encouraged to support.\n\nAnd having a different set of root certificates supported in the user's web browser and bitcoin wallet seems like a really bad idea, too-- ""what do you mean the payment request from foo.com is insecure, I GOT IT DIRECTLY FROM THE WEB",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21767835,21767835,
luke-jr,2013-07-30T04:43:41Z,"@gavinandresen Well, in this case, as long as the browser and wallet are using the OS's cert store (even with the Microsoft-downloaded root certs), we can be sure that if the user went to https://foo.com, he also has the cert for it. I agree that software (including browsers, sorry @mikehearn) has no business overriding/ignoring the OS's cert store and using their own.\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21769398,21769398,
mikehearn,2013-07-30T08:32:18Z,"I already spelled out the alternative - merchants will just have to do the same work instead, and you'll get the same situation with browsers where people rely on apocryphal and unverifiable claims like ""our certs have a 94% acceptance rate"". Also, in the absence of guidance hardware devices like the Trezor will still have to make up their own lists, and those may or may not usefully overlap with ",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21776614,21776614,
gavinandresen,2013-07-31T06:03:23Z,Merged with @laanwj 's changes so it compiles with Qt 5.\n\nI think this is ready to be pulled; gitian changes to compile releases with Qt5 can happen after merge.\n,https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21841939,21841939,
luke-jr,2013-08-02T07:05:50Z,Suggestions from testplan:\n- Make Bitcoin-Qt visible when a URI is opened (it just remains hidden or in the background at present; this bug is in master already)\n- Allow user to add a label to signed payments.\n- Allow cancelling/removing signed payment requests individually (without Clear All).\n- Italicise or otherwise make the merchant name stand out in send confirmation dialog.\n- Store and ,https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21989748,21989748,
Diapolo,2013-08-02T07:44:13Z,"@luke-jr \n- Make Bitcoin-Qt visible when a URI is opened (it just remains hidden or in the background at present; this bug is in master already)\n\nThat is a bug, which seems to be introduced by the GUI refactoring and was not spotted. I'm looking into this.\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21991062,21991062,
gavinandresen,2013-08-02T09:42:54Z,"Expired payment requests: agreed, user should ALWAYS get some result when clicking on a URI link.\nEscaping PaymentACK messages: nice catch, I'll fix.\nMultiple addresses is a regression I'll fix again.\n\nAll the rest:  improvements that I think should happen after pulling. Some of them (like where/how to story PaymetnRequests) should probably wait until after other high priorities like reimpleme",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-21996012,21996012,
Diapolo,2013-08-02T12:16:57Z,"#2872 contains the fix, which currently prevents the main window to showup after clicking a valid bitcoin: URI.\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-22002077,22002077,
gavinandresen,2013-08-03T06:15:35Z,Expired payment requests now show an error. PaymentACK messages are properly HTML-escaped. Sending to multiple addresses works properly. And I verified that it communicates through Tor if you're running proxied through Tor.\n,https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-22050475,22050475,
gavinandresen,2013-08-08T01:25:11Z,"@Diapolo : I'd guess there is an operator+(char*, QString) that produces a QString, and the QString serializer adds the double-quotes.\n\nCouple more bug reports from a tester:\n\n1) PaymentACK dialog box should say ""Payment Acknowledged"", since ""Received"" might imply that the payment is confirmed already.\n2) Payment requests asking the user to create dust TxOuts should be rejected right away wit",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-22296575,22296575,
luke-jr,2013-08-08T02:03:44Z,"IMO ""acknowledged"" implies confirmation more than ""received"" does O.o\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-22297759,22297759,
sipa,2013-08-15T01:34:51Z,"I haven't had the time to look through this in detail, but it seems that when processing a payment request, a normal transaction is created and sent, and when this completes, the paymentACK is fetched, without even retrying if the connection failed?\n\nIMHO, the makes the entire second step (notifying the merchant of the transaction, with metadata, refund, memo, ...) useless, as it becomes entirel",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-22680043,22680043,
gmaxwell,2013-08-15T01:41:58Z,"The obvious way to make sure the the back-channel had atomic reliability would be a flag in the request to only submit a transaction inside the response, not via the network.  Then you could be confident that either it would be successful or the transaction would fail. (Or the client did something wrong, but a client could send funds into a black hole without the payment protocol's help)\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-22680275,22680275,
sipa,2013-08-15T01:45:56Z,"My idea would be to store the payment request in a wallet transaction field, and give it a flag not to broadcast. Seeing the transaction on the network would remove the flag, as would receiving a paymentACK. I don't think there is any use case for wanting the transaction broadcast before the receiver confirms receiving it (and him broadcasting it, is a form of confirming).\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-22680382,22680382,
gavinandresen,2013-08-15T04:26:40Z,"@sipa : ""... makes the entire second step useless, as it becomes entirely unreliable"" ?\n\nIn the normal course of events, the user clicks on link, their wallet fetches a payment request from the merchant's server, and then a minute or two later (after user inspect transaction details and unlocks wallet) the Payment message is sent to the merchant's server.\n\nSo it will only be unreliable if the ",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-22684536,22684536,
luke-jr,2013-08-15T05:35:32Z,Probably easier to implement @sipa's suggestion after we're able to replace transactions generally.\n,https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-22686102,22686102,
sipa,2013-08-15T08:26:58Z,"@gavinandresen What if as a gambling site, your server goes down for a minute. If you have high traffic, you'll have many users making bets for which they were still able to fetch the payment request. You have no way of paying them without knowing a refund address, and you have no way to contact them. Of course you can wait for them to contact you, but if that is necessary for every minute of down",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-22690858,22690858,
gavinandresen,2013-08-15T22:50:19Z,"@sipa : You're right, that use case works much better if it is ""merchant broadcasts first"".\n\nI'll look into rebroadcasting. I suspect it will be easier to just lock the inputs for the estimated worst-case Payment-->PaymentACK round trip, and broadcast the transaction when the PaymentACK is received. If Payment->PaymentACK succeeds, then broadcast the transaction; if it fails, then just unlock th",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-22736592,22736592,
gavinandresen,2013-08-22T03:55:14Z,"Rebased (needed to fix conflict in bitcoin-qt.pro).\n\nAnd made a functionality tweak: PaymentRequests are now written to wallet.dat, using the (formerly unused and always empty) vector&lt;pair&lt;string,string&gt;&gt; vOrderForm field in CWalletTx.  Each PaymentRequest satisfied by the transaction has key=""PaymentRequest"" value=...serialized PaymentRequest protocol buffer message.\n\nThe transact",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-23066915,23066915,
BitcoinPullTester,2013-08-22T06:55:38Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/a41d5fe01947f2f878c055670986a165af800f9a for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-23071843,23071843,
mikehearn,2013-08-22T11:10:58Z,Congrats everyone. This is a big step forward for the Bitcoin world!\n,https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-23082651,23082651,
rebroad,2016-08-28T04:51:08Z,Compiler is giving this:\n\n```\nqt/test/paymentservertests.cpp: In member function ‘void PaymentServerTests::paymentServerTests()’:\nqt/test/paymentservertests.cpp:65:6: warning: stack protector not protecting local variables: variable length buffer [-Wstack-protector]\n void PaymentServerTests::paymentServerTests()\n      ^\n```\n\nI suspect it's not related to this pull...\n,https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-242956201,242956201,
luke-jr,2016-08-28T05:09:59Z,"@rebroad As a rule, whenever you feel inclined to leave a comment on a closed issue/PR that hasn't been touched in months, just don't. It's almost never the right place for discussion. Instead, if you wish to discuss a warning/error/bug, open a new issue (or better yet, fix it and open a PR).\n",https://github.com/bitcoin/bitcoin/pull/2539#issuecomment-242956673,242956673,
Diapolo,2013-06-03T09:09:33Z,"You can move away from using `CClientUIInterface::MODAL`, by picking one of these (if they fit your needs):\n\n<pre>\nCClientUIInterface::MSG_INFORMATION is ICON_INFORMATION,\nCClientUIInterface::MSG_WARNING is (ICON_WARNING | BTN_OK | MODAL),\nCClientUIInterface::MSG_ERROR is (ICON_ERROR | BTN_OK | MODAL)\n</pre>\n",https://github.com/bitcoin/bitcoin/pull/2539#discussion_r4496116,4496116,src/qt/bitcoingui.cpp
Diapolo,2013-07-22T08:50:10Z,ping :)\n,https://github.com/bitcoin/bitcoin/pull/2539#discussion_r5314039,5314039,src/qt/bitcoingui.cpp
fanquake,2013-07-26T02:15:05Z,You could also add the new HomeBrew dependancy here. It's [protobuf](https://github.com/mxcl/homebrew/blob/master/Library/Formula/protobuf.rb)\n,https://github.com/bitcoin/bitcoin/pull/2539#discussion_r5414804,5414804,doc/readme-qt.md
luke-jr,2013-08-02T06:42:07Z,This mixes space-delimited and comma-delimited.\n,https://github.com/bitcoin/bitcoin/pull/2539#discussion_r5547428,5547428,bitcoin-qt.pro
luke-jr,2013-08-02T06:44:42Z,Will Ubuntu's protobuf 2.2 packages not work?\n,https://github.com/bitcoin/bitcoin/pull/2539#discussion_r5547459,5547459,contrib/gitian-descriptors/gitian.yml
