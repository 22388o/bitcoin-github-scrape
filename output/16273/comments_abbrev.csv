DrahtBot,2019-06-23 22:18:50,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16440](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16440.html) (BIP-322: Generic signed message format by k",https://github.com/bitcoin/bitcoin/pull/16273#issuecomment-504792546,504792546,
hebasto,2019-06-24 10:43:16,Just wondering what is a proper way to test such PRs?,https://github.com/bitcoin/bitcoin/pull/16273#issuecomment-504957430,504957430,
MarcoFalke,2019-06-24 13:59:59,Could create a separate pull for all changes in  `src/bench/ src/test src/wallet/test/`?,https://github.com/bitcoin/bitcoin/pull/16273#issuecomment-505022643,505022643,
practicalswift,2019-06-24 15:35:38,@MarcoFalke Good idea! Submitted as #16278 :-),https://github.com/bitcoin/bitcoin/pull/16273#issuecomment-505063365,505063365,
Sjors,2019-06-27 13:08:10,"Good idea to move the tests to #16027. The commit `splitting core_io.h into the ex…\n…pected core_read.h/core_write.h` could also be a separate PR if this ends up taking longer.\n\nThis touches quite a few other PRs, but I suspect most won't trigger a rebase. Otherwise it would be best to merge this right after a major release (@MarcoFalke would be cool if @DrahtBot could tell). So concept ACK.",https://github.com/bitcoin/bitcoin/pull/16273#issuecomment-506338318,506338318,
practicalswift,2019-06-27 16:05:09,"@Sjors Thanks for taking the time to review and test!\n\nGood point about the commit messages! I've now changed that. I guess I was eager to explain the *why* to also reach those who form their judgement based on PR metadata alone: the GitHub equivalent of having an opinion about the content of a news article after only reading the title :-)",https://github.com/bitcoin/bitcoin/pull/16273#issuecomment-506409547,506409547,
practicalswift,2019-07-02 10:11:44,"> Just wondering what is a proper way to test such PRs?\n\nMaking sure we compile and pass the test suite (both functional and unit tests) on supported platforms would be the obvious starting point for testing I guess? :-)",https://github.com/bitcoin/bitcoin/pull/16273#issuecomment-507612425,507612425,
practicalswift,2019-07-03 21:30:14,Rebased! :-),https://github.com/bitcoin/bitcoin/pull/16273#issuecomment-508261813,508261813,
practicalswift,2019-07-10 15:53:14,Rebased! :-),https://github.com/bitcoin/bitcoin/pull/16273#issuecomment-510120626,510120626,
practicalswift,2019-07-21 20:56:37,Rebased! :-),https://github.com/bitcoin/bitcoin/pull/16273#issuecomment-513586954,513586954,
MarcoFalke,2019-08-14 17:03:38,"@practicalswift While this is probably nothing to be merged as-is, I still liked having the pull request open. You might have noticed that I fixed the includes in files that I touched based on the diff in this pull. Would you mind re-opening and/or sharing the steps you took to generate this list?\n\nI tried to run iwyu once, but I wasn't really successful. So if your solution works better, why ",https://github.com/bitcoin/bitcoin/pull/16273#issuecomment-521332089,521332089,
MarcoFalke,2019-06-27 15:42:11,Why don't you keep the header and make this core_io.cpp?,https://github.com/bitcoin/bitcoin/pull/16273#discussion_r298244191,298244191,src/Makefile.am
practicalswift,2019-06-27 16:02:57,"That is an option but it would introduce 18 (9 * 2) additional unused includes. Is it worth that cost?\n\nReasoning:\n\n`core_write.h` includes `string`, `amount.h` and `stdint.h` (via `amount.h`).\n\n`core_read.h` includes `string`, `vector` and `attributes.h`.\n\nThe following files include only one of `core_read.h` and `core_write.h`:\n\n```\n$ git grep -E '^#include <(core_read|core",https://github.com/bitcoin/bitcoin/pull/16273#discussion_r298253850,298253850,src/Makefile.am
Sjors,2019-06-27 18:09:26,These seem like 18 very small includes. I'm fine with either splitting in `read`/`write` or having one `io`.,https://github.com/bitcoin/bitcoin/pull/16273#discussion_r298304041,298304041,src/Makefile.am
MarcoFalke,2019-06-27 18:53:59,"Agree that they are not worth the effort, also you can avoid them by putting `using CAmount=...` instead of the full header.",https://github.com/bitcoin/bitcoin/pull/16273#discussion_r298321901,298321901,src/Makefile.am
practicalswift,2019-06-27 19:03:49,"I don't feel strongly about this. I'll let others chime in and update according to the consensus opinion.\n\n@MarcoFalke I take it I have your Concept ACK? Mind making it explicit in a standalone comment?",https://github.com/bitcoin/bitcoin/pull/16273#discussion_r298325499,298325499,src/Makefile.am
