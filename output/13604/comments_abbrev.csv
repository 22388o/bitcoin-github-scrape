TheCharlatan,2018-07-06T15:32:08Z,The Travis job times out with this change. Not sure how to get it to run through. ,https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-403068370,403068370,
Sjors,2018-07-06T17:55:55Z,"I restarted the Travis job, but that doesn't seem to help much.",https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-403105165,403105165,
Sjors,2018-07-07T12:37:26Z,"I'm able to build a binary using Armbian: https://github.com/Sjors/armbian-bitcoin-core/pull/1\n\nHowever, when I launch QT on an Orange Pi I get:\n\n```\nbitcoin-qt: /lib/arm-linux-gnueabihf/libm.so.6: version `GLIB_2.27` not found (required by bitcoin-qt)\n```\n\nThis might be because I compiled on Bionic and the target machine uses Xenial*, with libc6 version 2.23\n\nI'll try again wi",https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-403212707,403212707,
TheCharlatan,2018-07-07T12:58:43Z,Alternatively you could also apply #13177 and test if it also works for arm. ,https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-403214069,403214069,
Sjors,2018-07-07T13:29:08Z,"Cherry-picking that branch did the trick, nice!",https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-403215704,403215704,
Sjors,2018-07-07T15:06:01Z,"I'm also trying a gitian build, but that gets stuck at something that seems pretty unrelated (not even the same architecture):\n```\n  CXX      crypto/crypto_libbitcoin_crypto_sse41_a-sha256_sse41.o\n  CXX      crypto/crypto_libbitcoin_crypto_avx2_a-sha256_avx2.o\ncrypto/sha256.cpp: In function ‘std::string SHA256AutoDetect()’:\ncrypto/sha256.cpp:537:83: error: inconsistent operand constraint",https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-403221954,403221954,
ken2812221,2018-07-07T15:13:37Z,@Sjors See #13538,https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-403222406,403222406,
Sjors,2018-07-07T15:41:30Z,"@ken2812221 thanks. I just deleted those architectures from the gitian descriptor and tried again.\n\n```\n9c0a172871a27bb727ed27fcdf2f5fd3c6e6b5bc82ea6d7b5745916887a450cb  bitcoin-0.16.99-arm-linux-gnueabihf.tar.gz\n```\n\nBinary works on device as well.\n\ntACK 8ef00e8, assuming Travis gives its blessing\n",https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-403224169,403224169,
laanwj,2018-07-09T15:49:35Z,"my first question when seeing this is: why only 32-bit?—is this already supported for 64-bit, or does 64-bit ARM provide additional challenges?",https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-403526445,403526445,
TheCharlatan,2018-07-09T16:37:29Z,@laanwj see my comment in #13495 on the difficulties I am having with 64bit arm. ,https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-403541507,403541507,
laanwj,2018-07-10T13:51:21Z,"> @laanwj see my comment in #13495 on the difficulties I am having with 64bit arm.\n\nFair enough. It's fine, we can do that in a later PR.\n\nLooks like the travis issue is simply a timeout running into the maximum time limit for jobs.",https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-403829551,403829551,
Sjors,2018-07-10T14:05:57Z,"A particularly stubborn Travis timeout. Maybe the ccache needs to be bigger?\n\nOr perhaps cache `/home/travis/build/bitcoin/bitcoin/depends/work/build/arm-linux-gnueabihf` as an exception to the general rule of not caching build stuff.",https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-403834818,403834818,
TheCharlatan,2018-07-10T16:35:17Z,I'm not sure if your suggestion @Sjors may have unwanted side effects to the Travis jobs. It seems like the linux qt builds are disabled for this reason in the Travis build matrix. Otherwise I'll remove the Travis change from the pr and hope that enough people run it through gitian to verify?,https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-403887049,403887049,
TheCharlatan,2018-07-10T22:39:16Z,"Removed the Travis patch. To test this pull request, build it locally. ",https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-403988407,403988407,
Sjors,2018-07-11T07:44:41Z,I restarted the Apple Darwin instance,https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-404076275,404076275,
TheCharlatan,2018-07-11T23:08:40Z,Force-pushed to respond to @theuni's review.,https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-404338210,404338210,
Fuzzbawls,2018-07-12T08:08:48Z,"Concept ACK\n\naarch64 support can be added later, after the issue with xextproto are dealt with and migration to Bionic for gitian builds is complete.",https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-404427325,404427325,
Sjors,2018-07-12T10:59:58Z,"re-tACK 4b69984 (I retested cross-compile and running on a device, not Gitian)",https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-404474492,404474492,
Sjors,2018-07-13T09:28:08Z,"For some reason `make` in `/depends` won't build Qt if you run it on an ARM device (`armv7l-unknown-linux-gnueabihf`).\n\nAdding `qt_armv7l_linux_packages:=$(qt_x86_64_linux_packages)` fixes that and it builds a bunch of things, but then I get:\n\n```\nProject ERROR: Unknown module(s) in QT: xml\nfuncs.mk:242: recipe for target '/home/bitcoin/bitcoin/depends/work/build/armv7l-unknown-linux-g",https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-404779581,404779581,
TheCharlatan,2018-07-13T21:59:02Z,I get the same xml error when I try to apply @Fuzzbawls patch for aarch64 support. ,https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-404964557,404964557,
sipa,2018-07-14T20:30:26Z,"@theuni Does your ""changes requested"" still apply?",https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-405048027,405048027,
Sjors,2018-07-17T07:17:30Z,"Maybe add ""for cross-compilation"" to the commit message?",https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-405484167,405484167,
ken2812221,2018-07-17T07:36:16Z,utACK 4b69984,https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-405488906,405488906,
Sjors,2018-07-18T08:03:29Z,Gitian builds for master are now broken: #13700 ,https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-405845564,405845564,
hebasto,2020-08-17T08:25:30Z,Please see #18536.,https://github.com/bitcoin/bitcoin/pull/13604#issuecomment-674738284,674738284,
Sjors,2018-07-06T15:20:11Z,"What's the role of `$(qt_packages)`, especially given that `qt_i686_linux_packages` doesn't have it?",https://github.com/bitcoin/bitcoin/pull/13604#discussion_r200686564,200686564,depends/packages/packages.mk
Sjors,2018-07-06T15:20:33Z,For future reference: what's wrong with `system-zlib`?,https://github.com/bitcoin/bitcoin/pull/13604#discussion_r200686662,200686662,depends/packages/qt.mk
Sjors,2018-07-06T15:20:51Z,Should this go away?,https://github.com/bitcoin/bitcoin/pull/13604#discussion_r200686744,200686744,depends/packages/qt.mk
TheCharlatan,2018-07-08T14:01:07Z,Good findings. I could remove all these changes (I had them in while I was debugging things) and it still seems to run fine. Can you re-run a gitian with b86d49f  ?,https://github.com/bitcoin/bitcoin/pull/13604#discussion_r200841601,200841601,depends/packages/packages.mk
theuni,2018-07-11T19:54:41Z,"Let's make this ```$(host)-g++```.  Then below, we can copy to ```qtbase/mkspecs/$(host)-g++```, and use sed to replace ```arm-linux-gnueabi-``` with ```$(host)-```.\n\nThat way subarches (armv6, for example) just work as intended.",https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201819802,201819802,depends/packages/qt.mk
theuni,2018-07-11T20:03:31Z,"Since there's no point in making the distinction here, let's just get rid of it.\n\n```qt_x86_64_linux_packages``` can just become ```qt_linux_packages```, then ``` qt_i686_linux_packages``` and ```qt_arm_linux_package``` are no longer needed.\n",https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201822245,201822245,depends/packages/packages.mk
TheCharlatan,2018-07-11T20:18:36Z,"The patch does not work yet for aarch64, so I think we should keep it like this until that it is fixed.",https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201826124,201826124,depends/packages/packages.mk
TheCharlatan,2018-07-11T20:52:10Z,The sed patch is only intended for adding hard float support. I don't think this should be done for aarch64 as well (which seems to be the only other mkspec that matches the $(host) triplet). ,https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201834765,201834765,depends/packages/qt.mk
theuni,2018-07-11T20:55:49Z,Making the suggested change above will make it so that no change is needed here for aarch64.,https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201835884,201835884,depends/packages/packages.mk
theuni,2018-07-11T20:58:41Z,"Yes, but then we can reuse it for aarch64. All that would be necessary to add it (assuming everything else is working) would be:\n```\n$(package)_config_opts_aarch64_linux = -platform linux-g++ -xplatform $(host)-g++\n```",https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201836959,201836959,depends/packages/qt.mk
TheCharlatan,2018-07-11T21:07:35Z,I get `Invalid target platform 'arm-linux-gnueabihf-g++'` when I replace it with `$(host)-g++`.,https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201839473,201839473,depends/packages/qt.mk
TheCharlatan,2018-07-11T21:16:20Z,"Substituting `qt_x86_64_linux_packages` with `qt_linux_packages` means that qt will be built for all Linux architectures. When I do that and remove the two lines below, a `aarch64-linux-gnu` depends build will also try to build qt, but will fail as I mentioned in #13495 . ",https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201841898,201841898,depends/packages/packages.mk
theuni,2018-07-11T21:42:26Z,"Yes, ok, I forgot we purposefully limited that way.",https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201849044,201849044,depends/packages/packages.mk
theuni,2018-07-11T21:47:35Z,"This works for me:\n\n```patch\ndiff --git a/depends/packages/qt.mk b/depends/packages/qt.mk\nindex b4d7756..c09c02d 100644\n--- a/depends/packages/qt.mk\n+++ b/depends/packages/qt.mk\n@@ -89,7 +89,7 @@ $(package)_config_opts_linux += -system-freetype\n $(package)_config_opts_linux += -no-feature-sessionmanager\n $(package)_config_opts_linux += -fontconfig\n $(package)_config_opts_linux ",https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201850398,201850398,depends/packages/qt.mk
TheCharlatan,2018-07-11T21:56:00Z,"Just noticed that the mkspecs is not `arm-linux-gnu` (like $(host)), but rather linux-arm-gnu. :p ",https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201852450,201852450,depends/packages/qt.mk
TheCharlatan,2018-07-11T21:58:40Z,"The second chunk could result in undesired behaviour, because you end up copying the arm mkspecs over whatever the $(host)'s mkspecs are supposed to be. ",https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201853100,201853100,depends/packages/qt.mk
theuni,2018-07-11T22:19:10Z,Good point. Using ```bitcoin-$(host)-g++``` would guarantee that can't happen.,https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201857606,201857606,depends/packages/qt.mk
TheCharlatan,2018-07-11T22:30:36Z,I do not understand how that would work. Can you post another patch for it?,https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201859883,201859883,depends/packages/qt.mk
theuni,2018-07-11T22:43:59Z,"I guess the spec name doesn't need to change, all that matters is the sed. Simplified:\n```patch\ndiff --git a/depends/packages/qt.mk b/depends/packages/qt.mk\nindex b4d7756..22cf4f5 100644\n--- a/depends/packages/qt.mk\n+++ b/depends/packages/qt.mk\n@@ -89,7 +89,7 @@ $(package)_config_opts_linux += -system-freetype\n $(package)_config_opts_linux += -no-feature-sessionmanager\n $(package)_",https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201862330,201862330,depends/packages/qt.mk
TheCharlatan,2018-07-11T23:07:25Z,ACK.,https://github.com/bitcoin/bitcoin/pull/13604#discussion_r201866748,201866748,depends/packages/qt.mk
Sjors,2018-07-24T10:48:25Z,"macOS doesn't like this, see #13750 ",https://github.com/bitcoin/bitcoin/pull/13604#discussion_r204708822,204708822,depends/packages/qt.mk
