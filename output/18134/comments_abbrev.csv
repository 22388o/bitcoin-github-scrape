Empact,2020-02-13 04:32:44,~Limited to integral types to avoid inconsistencies noted in the examples here: https://en.cppreference.com/w/cpp/string/basic_string/to_string~,https://github.com/bitcoin/bitcoin/pull/18134#issuecomment-585545347,585545347,
DrahtBot,2020-02-13 08:46:42,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18147 (qt: Kill the locale dependency bug class by not allowing Qt to mess with LC_NUMERIC by practicalswift)\n* #18130 (",https://github.com/bitcoin/bitcoin/pull/18134#issuecomment-585616048,585616048,
practicalswift,2020-02-13 14:17:49,"Concept ACK: simple and robust (locale independent) is better than gotcha-filled and fragile (locale dependent).\n\nThanks for working on reducing the usage of locale dependent functions. Hope to see more PR's of this type from you :)\n\nWill review.",https://github.com/bitcoin/bitcoin/pull/18134#issuecomment-585776173,585776173,
promag,2020-02-21 07:54:34,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/18134#issuecomment-589540425,589540425,
practicalswift,2020-03-06 12:54:14,"@Empact Are you still working on this PR? :)\n\nI think it would be really good to have `ToString(…)` in our code base since `std::to_string(…)` usage keeps popping up in new code. Latest case in #18261 (see https://github.com/bitcoin/bitcoin/pull/18261#discussion_r387925726).",https://github.com/bitcoin/bitcoin/pull/18134#issuecomment-595755124,595755124,
Empact,2020-03-09 17:49:50,"Rebased and incorporated your feedback, @practicalswift ",https://github.com/bitcoin/bitcoin/pull/18134#issuecomment-596680733,596680733,
practicalswift,2020-03-09 18:46:04,ACK 97eefd7c25f03e898071171eacc45ac5fb5ada6b,https://github.com/bitcoin/bitcoin/pull/18134#issuecomment-596716102,596716102,
Empact,2020-03-13 01:24:40,Rebased,https://github.com/bitcoin/bitcoin/pull/18134#issuecomment-598503738,598503738,
practicalswift,2020-03-13 08:07:47,ACK 0add74b0b5e11124612e6d07b3f68266a4ace66e,https://github.com/bitcoin/bitcoin/pull/18134#issuecomment-598600222,598600222,
Empact,2020-03-14 19:24:40,Addressed nits.,https://github.com/bitcoin/bitcoin/pull/18134#issuecomment-599124423,599124423,
practicalswift,2020-03-14 22:36:54,"ACK d056df033a1e88554f7cc39dd709a87b17cb49df\n\nVery pleased to see the removal of no less than 16(!) instances of calls to locale dependent functions. Thanks! :)",https://github.com/bitcoin/bitcoin/pull/18134#issuecomment-599143415,599143415,
laanwj,2020-03-25 19:11:06,"ACK d056df033a1e88554f7cc39dd709a87b17cb49df\n\nSo for tinyformat, do we want to do this as well?\n```patch\n // Added for Bitcoin Core\n template<typename... Args>\n std::string format(const std::string &fmt, const Args&... args)\n {\n     std::ostringstream oss;\n+    oss.imbue(std::locale::classic());\n     format(oss, fmt.c_str(), args...);\n     return oss.str();\n }\n```",https://github.com/bitcoin/bitcoin/pull/18134#issuecomment-604031929,604031929,
practicalswift,2020-03-25 22:16:17,@laanwj Technically we don't technically that in the `tfm::format` case since we're already implicitly assuming that the _C++_ locale is always the classic locale. If that was not the case a lot of things would break as demonstrated in #18281. However I think we should make that implicit assumption explicit - PR coming up! :),https://github.com/bitcoin/bitcoin/pull/18134#issuecomment-604116129,604116129,
practicalswift,2020-02-13 14:43:29,I think this is the only one where `::ToString(…)` . Please change the others to simply `ToString(…)` :),https://github.com/bitcoin/bitcoin/pull/18134#discussion_r378903259,378903259,src/rpc/util.cpp
practicalswift,2020-02-13 14:44:23,Put this in `util/string.h` instead. No need to introduce a new file.,https://github.com/bitcoin/bitcoin/pull/18134#discussion_r378903815,378903815,src/Makefile.am
practicalswift,2020-02-13 14:44:51,Please run `clang-format -i src/util/string_stream.h` to get the correct indentation and formatting.,https://github.com/bitcoin/bitcoin/pull/18134#discussion_r378904108,378904108,src/util/string_stream.h
practicalswift,2020-02-13 14:48:59,"Remove the `enable_if`: we need to enable this for all types supported (the floating points in particular).\n\nThat `ToString` doesn't print a lot of trailing zeroes is a feature and not a bug. You can note the difference in the comment though :)\n\nSince `std::to_string` is locale dependent there should be no assumption regarding formatting regardless, so no harm done by not printing trailing",https://github.com/bitcoin/bitcoin/pull/18134#discussion_r378906863,378906863,src/util/string_stream.h
practicalswift,2020-02-13 14:49:49,Please replace all `std::to_string` with `ToString`. No need to do this partially. All call sites are safe.,https://github.com/bitcoin/bitcoin/pull/18134#discussion_r378907417,378907417,test/lint/lint-locale-dependence.sh
emilengler,2020-02-19 17:35:58,Maybe I got it wrong but is the RPC interface locale independent anyways?,https://github.com/bitcoin/bitcoin/pull/18134#discussion_r381432754,381432754,src/rpc/util.cpp
practicalswift,2020-02-19 19:04:18,The intention is that the RPC interface should be 100% locale independent :),https://github.com/bitcoin/bitcoin/pull/18134#discussion_r381481985,381481985,src/rpc/util.cpp
emilengler,2020-02-20 17:01:56,Ok then never mind.,https://github.com/bitcoin/bitcoin/pull/18134#discussion_r382133384,382133384,src/rpc/util.cpp
sipa,2020-03-13 02:06:49,"```suggestion\n * Locale-independent version of std::to_string\n```",https://github.com/bitcoin/bitcoin/pull/18134#discussion_r391993538,391993538,src/util/string.h
sipa,2020-03-13 02:08:03,"Not really necessary for the simple types in all current call sites, but for future-proofing, `const T& t` is better to avoid copying expensive types.",https://github.com/bitcoin/bitcoin/pull/18134#discussion_r391993843,391993843,src/util/string.h
ajtowns,2020-03-13 08:16:33,"And should be inlined anyway, so the extra reference for simple types should get optimised out",https://github.com/bitcoin/bitcoin/pull/18134#discussion_r392083430,392083430,src/util/string.h
Empact,2020-03-14 19:24:29,"Yeah did not originally due to the definition of `std::to_string`, but I agree it makes sense for future-proofing.",https://github.com/bitcoin/bitcoin/pull/18134#discussion_r392612679,392612679,src/util/string.h
