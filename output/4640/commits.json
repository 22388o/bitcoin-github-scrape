[
  {
    "sha": "e17151ad2a45599e8cad90552ffcd979730b7a32",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTcxNTFhZDJhNDU1OTllOGNhZDkwNTUyZmZjZDk3OTczMGI3YTMy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-08-06T11:01:49Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-08-06T11:01:49Z"
      },
      "message": "Avoid a copy in RPC output\n\nSplit up HTTPReply into HTTPReply and HTTPReplyHeader, so that\nthe message data can be streamed directly.\n\nAlso removes a c_str(), which would have prevented binary\noutput with NUL characters in it.",
      "tree": {
        "sha": "feccddd99d652a0dce8f4c054af2d8451a81f9ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/feccddd99d652a0dce8f4c054af2d8451a81f9ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e17151ad2a45599e8cad90552ffcd979730b7a32",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e17151ad2a45599e8cad90552ffcd979730b7a32",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e17151ad2a45599e8cad90552ffcd979730b7a32",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e17151ad2a45599e8cad90552ffcd979730b7a32/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e94d0036a76ea9d63e4ed17b12554caef7f55da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e94d0036a76ea9d63e4ed17b12554caef7f55da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e94d0036a76ea9d63e4ed17b12554caef7f55da"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 18,
      "deletions": 9
    },
    "files": [
      {
        "sha": "48c6c68eb18c43b68ae177ddf021e47cd0a14af8",
        "filename": "src/rpcprotocol.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 8,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e17151ad2a45599e8cad90552ffcd979730b7a32/src/rpcprotocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e17151ad2a45599e8cad90552ffcd979730b7a32/src/rpcprotocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.cpp?ref=e17151ad2a45599e8cad90552ffcd979730b7a32",
        "patch": "@@ -93,8 +93,7 @@ string HTTPError(int nStatus, bool keepalive, bool headersOnly)\n                      headersOnly, \"text/plain\");\n }\n \n-string HTTPReply(int nStatus, const string& strMsg, bool keepalive,\n-                 bool headersOnly, const char *contentType)\n+string HTTPReplyHeader(int nStatus, bool keepalive, size_t contentLength, const char *contentType)\n {\n     return strprintf(\n             \"HTTP/1.1 %d %s\\r\\n\"\n@@ -103,17 +102,25 @@ string HTTPReply(int nStatus, const string& strMsg, bool keepalive,\n             \"Content-Length: %u\\r\\n\"\n             \"Content-Type: %s\\r\\n\"\n             \"Server: bitcoin-json-rpc/%s\\r\\n\"\n-            \"\\r\\n\"\n-            \"%s\",\n+            \"\\r\\n\",\n         nStatus,\n         httpStatusDescription(nStatus),\n         rfc1123Time(),\n         keepalive ? \"keep-alive\" : \"close\",\n-        (headersOnly ? 0 : strMsg.size()),\n+        contentLength,\n         contentType,\n-        FormatFullVersion(),\n-        (headersOnly ? \"\" : strMsg.c_str())\n-        );\n+        FormatFullVersion());\n+}\n+\n+string HTTPReply(int nStatus, const string& strMsg, bool keepalive,\n+                 bool headersOnly, const char *contentType)\n+{\n+    if (headersOnly)\n+    {\n+        return HTTPReplyHeader(nStatus, keepalive, 0, contentType);\n+    } else {\n+        return HTTPReplyHeader(nStatus, keepalive, strMsg.size(), contentType) + strMsg;\n+    }\n }\n \n bool ReadHTTPRequestLine(std::basic_istream<char>& stream, int &proto,"
      },
      {
        "sha": "a088c379d346f1503294f05d63ee9ead4ca0936a",
        "filename": "src/rpcprotocol.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e17151ad2a45599e8cad90552ffcd979730b7a32/src/rpcprotocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e17151ad2a45599e8cad90552ffcd979730b7a32/src/rpcprotocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.h?ref=e17151ad2a45599e8cad90552ffcd979730b7a32",
        "patch": "@@ -143,6 +143,8 @@ class SSLIOStreamDevice : public boost::iostreams::device<boost::iostreams::bidi\n std::string HTTPPost(const std::string& strMsg, const std::map<std::string,std::string>& mapRequestHeaders);\n std::string HTTPError(int nStatus, bool keepalive,\n                       bool headerOnly = false);\n+std::string HTTPReplyHeader(int nStatus, bool keepalive, size_t contentLength,\n+                      const char *contentType = \"application/json\");\n std::string HTTPReply(int nStatus, const std::string& strMsg, bool keepalive,\n                       bool headerOnly = false,\n                       const char *contentType = \"application/json\");"
      },
      {
        "sha": "d9a664dc54d07f060fee30e4d281fcff437d5087",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e17151ad2a45599e8cad90552ffcd979730b7a32/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e17151ad2a45599e8cad90552ffcd979730b7a32/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=e17151ad2a45599e8cad90552ffcd979730b7a32",
        "patch": "@@ -862,7 +862,7 @@ static bool HTTPReq_JSONRPC(AcceptedConnection *conn,\n         else\n             throw JSONRPCError(RPC_PARSE_ERROR, \"Top-level object parse error\");\n \n-        conn->stream() << HTTPReply(HTTP_OK, strReply, fRun) << std::flush;\n+        conn->stream() << HTTPReplyHeader(HTTP_OK, fRun, strReply.size()) << strReply << std::flush;\n     }\n     catch (Object& objError)\n     {"
      }
    ]
  },
  {
    "sha": "733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MzMxNzdlYmQzZWNmM2EwM2MyYWNiNmIyNDRjOGIzZDFiNGEzOTgx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-08-06T11:03:58Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-08-06T11:03:58Z"
      },
      "message": "Remove size limit in RPC client, keep it in server\n\nThe size limit makes a lot of sense for the server, as it never has to\naccept very large data.\n\nThe client, however, can request arbitrary amounts of data with\n`listtransactions` on a large wallet.\n\nFixes #4604.",
      "tree": {
        "sha": "16cc0d40264dbfec961392fc79dd5520a368a6fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16cc0d40264dbfec961392fc79dd5520a368a6fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e17151ad2a45599e8cad90552ffcd979730b7a32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e17151ad2a45599e8cad90552ffcd979730b7a32",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e17151ad2a45599e8cad90552ffcd979730b7a32"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "0609adcab3cb5ea10f1060014c02ad0c203db3e5",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981",
        "patch": "@@ -126,7 +126,7 @@ Object CallRPC(const string& strMethod, const Array& params)\n     // Receive HTTP reply message headers and body\n     map<string, string> mapHeaders;\n     string strReply;\n-    ReadHTTPMessage(stream, mapHeaders, strReply, nProto);\n+    ReadHTTPMessage(stream, mapHeaders, strReply, nProto, std::numeric_limits<size_t>::max());\n \n     if (nStatus == HTTP_UNAUTHORIZED)\n         throw runtime_error(\"incorrect rpcuser or rpcpassword (authorization failed)\");"
      },
      {
        "sha": "643208b3b674c12e33bf45092ee6e8254bf903b1",
        "filename": "src/rpcprotocol.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981/src/rpcprotocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981/src/rpcprotocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.cpp?ref=733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981",
        "patch": "@@ -201,14 +201,14 @@ int ReadHTTPHeaders(std::basic_istream<char>& stream, map<string, string>& mapHe\n \n int ReadHTTPMessage(std::basic_istream<char>& stream, map<string,\n                     string>& mapHeadersRet, string& strMessageRet,\n-                    int nProto)\n+                    int nProto, size_t max_size)\n {\n     mapHeadersRet.clear();\n     strMessageRet = \"\";\n \n     // Read header\n     int nLen = ReadHTTPHeaders(stream, mapHeadersRet);\n-    if (nLen < 0 || nLen > (int)MAX_SIZE)\n+    if (nLen < 0 || (size_t)nLen > max_size)\n         return HTTP_INTERNAL_SERVER_ERROR;\n \n     // Read message"
      },
      {
        "sha": "8f05c08482f0769d21dc402fd7d7141f3a9c9c1c",
        "filename": "src/rpcprotocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981/src/rpcprotocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981/src/rpcprotocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.h?ref=733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981",
        "patch": "@@ -153,7 +153,7 @@ bool ReadHTTPRequestLine(std::basic_istream<char>& stream, int &proto,\n int ReadHTTPStatus(std::basic_istream<char>& stream, int &proto);\n int ReadHTTPHeaders(std::basic_istream<char>& stream, std::map<std::string, std::string>& mapHeadersRet);\n int ReadHTTPMessage(std::basic_istream<char>& stream, std::map<std::string, std::string>& mapHeadersRet,\n-                    std::string& strMessageRet, int nProto);\n+                    std::string& strMessageRet, int nProto, size_t max_size);\n std::string JSONRPCRequest(const std::string& strMethod, const json_spirit::Array& params, const json_spirit::Value& id);\n json_spirit::Object JSONRPCReplyObj(const json_spirit::Value& result, const json_spirit::Value& error, const json_spirit::Value& id);\n std::string JSONRPCReply(const json_spirit::Value& result, const json_spirit::Value& error, const json_spirit::Value& id);"
      },
      {
        "sha": "e7ed73310c36abe0d1b08415fe606088e3813a04",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=733177ebd3ecf3a03c2acb6b244c8b3d1b4a3981",
        "patch": "@@ -891,7 +891,7 @@ void ServiceConnection(AcceptedConnection *conn)\n             break;\n \n         // Read HTTP message headers and body\n-        ReadHTTPMessage(conn->stream(), mapHeaders, strRequest, nProto);\n+        ReadHTTPMessage(conn->stream(), mapHeaders, strRequest, nProto, MAX_SIZE);\n \n         // HTTP Keep-Alive is false; close connection immediately\n         if (mapHeaders[\"connection\"] == \"close\")"
      }
    ]
  }
]