laanwj,2020-03-10 15:07:48,"@fanquake and me had some discussion about this on IRC. The conclusion was that it's probably better to ignore the `MH_BINDATLOAD` flag like MacOS' static linker does. Instead, to adopt the security check for the change(s) that `-Wl,-bind_at_load` actually makes and is used.\n\nAlso, it would make sense to get Apple to clarify the documentation on this. It happens more often that header bits sim",https://github.com/bitcoin/bitcoin/pull/18295#issuecomment-597138013,597138013,
fanquake,2020-03-10 23:25:04,"> Also, it would make sense to get Apple to clarify the documentation on this\n\nI've reached out to a few people at Apple. So hopefully we'll get some clarification.",https://github.com/bitcoin/bitcoin/pull/18295#issuecomment-597368370,597368370,
laanwj,2020-03-11 15:16:42,Great!,https://github.com/bitcoin/bitcoin/pull/18295#issuecomment-597693541,597693541,
fanquake,2020-03-12 12:38:07,"Received this reply from [Nick Kledzik](https://opensource.apple.com/source/ld64/ld64-450.3/doc/design/linker.html.auto.html) (ld / dyld at Apple):\n> Michael,\n\n> Traditionally, there is two kinds of binding.  Binds which must be done at load time before any code is run, and binds which can be done lazily.  Lazy binds are only used for procedural interfaces.  That is, the symbol is an externa",https://github.com/bitcoin/bitcoin/pull/18295#issuecomment-598162568,598162568,
laanwj,2020-03-25 14:07:09,"Thanks for asking for clarification.\n\nSo from what I understand essentially this means that there is no point in forcing `MH_BINDATLOAD` because it's no longer necessary?\n\nI think this means we don't need this and can close it?",https://github.com/bitcoin/bitcoin/pull/18295#issuecomment-603859180,603859180,
DrahtBot,2020-03-26 08:36:59,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18295#issuecomment-604299646,604299646,
DrahtBot,2020-03-28 12:27:08,<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/18295#issuecomment-605440680,605440680,
fanquake,2020-03-29 01:35:09,"> I think this means we don't need this and can close it?\n\nI've asked Cory to follow up here now that we have some more information. I think even if we didn't want to use `MH_BINDATLOAD` we can at least add a related check to `security-check.py`.",https://github.com/bitcoin/bitcoin/pull/18295#issuecomment-605543828,605543828,
theuni,2020-04-03 15:58:13,"@fanquake Thanks for pinging someone at Apple!\n\nI think I understand now, and that makes sense. I wasn't aware of the old faux-static linkage, but the flag makes sense in that context. Sounds like it produced the same behavior that a normal link and DYLD_BIND_AT_LAUNCH at runtime would now.\n\nThat confirms (to me, anyway) that we're doing the right (extra paranoid) thing by turning on bind_",https://github.com/bitcoin/bitcoin/pull/18295#issuecomment-608521834,608521834,
fanquake,2020-04-04 01:55:02,"> So, let's go for that instead,\n\nThanks for following up. I've added a different test to security-check.py, which checks the `otool -l` output, and dropped the other changes.",https://github.com/bitcoin/bitcoin/pull/18295#issuecomment-608953963,608953963,
theuni,2020-04-08 21:32:13,ACK 5ca90f8b598978437340bb8467f527b9edfb2bbf,https://github.com/bitcoin/bitcoin/pull/18295#issuecomment-611205948,611205948,
DrahtBot,2020-04-09 14:59:32,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 2392566284d84ad905d03617b07a906386f8769c<br>(master) | commit 4fe1a3c9d04b46f08f70b74a8567b728f31927fc<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.19.99-aarch64-linux-gnu-debug.tar.gz | [`828cc7165fcda6d7...`](https://drahtbot.space/gitian/bitcoin/bitcoin/2392566284d84ad905d03617b07a906386f8769c/bitcoin-0.19.99-,https://github.com/bitcoin/bitcoin/pull/18295#issuecomment-611575392,611575392,
