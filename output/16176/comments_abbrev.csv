jnewbery,2019-06-09 13:04:03,"This was attempted previously in #8587\n\nI think this comment: https://github.com/bitcoin/bitcoin/pull/8587#issuecomment-242312308 still stands. We should try to reduce the overloading of `-whitelist` rather than increase it.",https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-500210454,500210454,
NicolasDorier,2019-06-09 13:13:25,So what about `--peerbloomfilters=whitelisted-only` ?,https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-500211194,500211194,
laanwj,2019-06-09 15:08:11,"> I think this comment: #8587 (comment) still stands. We should try to reduce the overloading of -whitelist rather than increase it.\n\nI tend to agree.\n\nDo you have a specific use-case for this @NicolasDorier ?\nIf so, I guess it makes sense to be able to whitelist nodes for this functionality. There has been discussion in the past of specific whitelist flags instead of a blanket 'whitelis",https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-500219527,500219527,
NicolasDorier,2019-06-09 15:22:21,"@laanwj yes I have. BTCPay Server is exposing a the full node via a whitebound connection behind a Torv3 hidden service, so the whitebind interface can't be discovered.\n\nI want to make a simple light wallet connecting to this hosted full node (or just slightly modifying Breadwallet to support Tor).\n\nBIP157/full blocks are bad because it consumes lot's of bandwidth. However, I don't want to",https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-500220656,500220656,
MarcoFalke,2019-06-10 06:34:13,What is wrong with a new option `-whitelistbloomfilter=168.0.0.3`? Everything else seems to have drawbacks.,https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-500307887,500307887,
MarcoFalke,2019-06-10 06:34:48,"See also:\n\n*  Remove global whitelist flags and replace them with per-peer flags #16058 \n*  Disable bloom filtering by default. #16152 ",https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-500308008,500308008,
NicolasDorier,2019-06-10 06:38:47,@MarcoFalke I am using whitebind...,https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-500308857,500308857,
NicolasDorier,2019-06-10 06:39:38,We could duplicate both whitebind/whitelist but I think this is not really useful.,https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-500309012,500309012,
MarcoFalke,2019-06-10 06:45:02,"I do think there is a usecase to offer a peer bloom filter, but not re-relay their consensus invalid transactions.",https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-500310183,500310183,
laanwj,2019-06-10 10:41:21,"> We could duplicate both whitebind/whitelist but I think this is not really useful.\n\nI think adding a [flags] per whitelist range (both per bind and per IP range) would be more general, and less cluttering than duplicating the option. It's also much more flexible than changing the meaning of whitelist throughout the entire daemon.",https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-500372226,500372226,
MarcoFalke,2019-06-10 19:47:21,So yeah. Concept ACK. Approach NACK.,https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-500567449,500567449,
NicolasDorier,2019-06-11 06:04:51,"> I do think there is a usecase to offer a peer bloom filter, but not re-relay their consensus invalid transactions.\n\nI agree.\n\nSo basically you would Concept ACK for a `--whitebindbloomfilter`, `--whitelistbloomfilter`?\nI think it makes sense to have it, but at the same time if my peer is in `--whitebind` `--whitelist`, I would expect it to be able to use BloomFilter, but not to relay i",https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-500699771,500699771,
MarcoFalke,2019-06-11 09:27:26,"> So basically you would Concept ACK for a --whitebindbloomfilter, --whitelistbloomfilter?\n\nI think @laanwj suggested to use `-white{bind,list}=bloomfilter${SEPARATOR}${ADDR_PORT}`, so that the options are not duplicated in the command line help.",https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-500762907,500762907,
laanwj,2019-06-11 10:55:29,"> I think @laanwj suggested to use -white{bind,list}=bloomfilter${SEPARATOR}${ADDR_PORT}, so that the options are not duplicated in the command line help.\n\nYes, ideally I'd like a extensible, flexible mechanism for whitelisting (a set of) peers for special things, instead of a single amorphous ""whitelist"".\nAdding, say, ""bloomfilter"" into the option name causes a blowup in number of options i",https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-500791074,500791074,
NicolasDorier,2019-06-12 06:38:59,"@laanwj I think this is a good idea. \n\nBut still, ""the amorphous whitelist"" is very useful, please do not remove it, its consequence are very clear: Consider what is whitelisted as friendly (ie, does not want to deanonymise us, or DDoS us)\n\nThe fine grained options should be reserved for more specific use case.\n\nIf we keep amorphous whitelist/whitebind, then it makes sense to allow Blo",https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-501141254,501141254,
ajtowns,2019-06-12 09:48:30,"Concept ACK. Could consider ""whitelisting"" to take a pair of information: the node(s) to whitelist and what to whitelist them for, with the latter having some default value. Writing `-whitebind=bloom,forcerelay@127.0.0.1:9999` or similar to say ""whitelist anyone who connects to blah for bloom filters and forced relaying"" seems plausible to me.",https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-501201354,501201354,
NicolasDorier,2019-06-12 12:45:12,"@ajtowns I like your format `whitebind=bloom,forcerelay@127.0.0.1:9999`. If people seems OK with it, I will work on that.\n\nSyntax being: `white{bind,list}=({bloom,forcerelay},@)*IP(:Port)?`. This would have the nice benefit of not breaking existing stuff.",https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-501256527,501256527,
laanwj,2019-06-18 08:10:29,"> @ajtowns I like your format whitebind=bloom,forcerelay@127.0.0.1:9999. If people seems OK with it, I will work on that.\n\nSounds good to me! Nice to fit it into something compatible with the current format.",https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-502996598,502996598,
NicolasDorier,2019-06-20 09:45:40,Closing in favor of https://github.com/bitcoin/bitcoin/pull/16248,https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-503958548,503958548,
NicolasDorier,2019-06-21 17:00:00,The PR there is finally ready to be reviewed for those interested.,https://github.com/bitcoin/bitcoin/pull/16176#issuecomment-504497620,504497620,
