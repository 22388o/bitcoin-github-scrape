[
  {
    "sha": "618ea1161bd5ae6dbaf72811188e23bfdf62ade2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MThlYTExNjFiZDVhZTZkYmFmNzI4MTExODhlMjNiZmRmNjJhZGUy",
    "commit": {
      "author": {
        "name": "nicolas.dorier",
        "email": "nicolas.dorier@gmail.com",
        "date": "2019-06-09T12:40:16Z"
      },
      "committer": {
        "name": "nicolas.dorier",
        "email": "nicolas.dorier@gmail.com",
        "date": "2019-06-09T12:46:33Z"
      },
      "message": "Allow NODE_BLOOM services for whitelisted peers",
      "tree": {
        "sha": "173dffb27d6064651ff1b04a71d570af33ca90d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/173dffb27d6064651ff1b04a71d570af33ca90d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/618ea1161bd5ae6dbaf72811188e23bfdf62ade2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEq0z6mJWsoNvif2s0Zhh2PvCRhv4FAlz8/6kACgkQZhh2PvCR\nhv5DAA/+KYf1GnQblXLsIcadZQjHXPg0NP2WSh1HmBeLmefU8dzNh0rD1McJ49U2\nbE6B9JFiCgMYggjJ7IMHbx8xy6bI2oEN3Lexmbr0MLV/FgxFA9dlrCuGRUOW6cHP\npkl6joEycYhufBMcH3X9V/3BifypIEsBIkyZEkTfOiV5jtKM1sGKlYt79q2hfWNr\nOQRxQ/Vdw281no6wuxBwxx1XZ2rOgMABySfOPeSaqT21G0FZ8GBK/kwgvcxFFlyj\nUAszMV6MWPHFlmQJEyx/MgJOlBrGxdhJCxUn892erzrE16+y2DDSTsqUtS8Vv2cL\nolqUX+1+CvHqxnSW4OuIELXOuhyoEJjyhLW3gk+yUMPYHRhK6U46B1S0k388I77H\n5pxWs16PtUlPW+qX22ahdaYtbZhCKRTlorx+d+4BChU0a3xzQohsd6ymyAlRaCq+\nfUYXmnOzjzmakLt6F+GobCqu6nmv4I8RmUZ1rHRijIuNnxU0ImQdzqLfi+BLDD/t\n6Oa43im+jEIUukm0oOQ6bp6nb5Pg+PYx4y8z8YALFeOxxZmGQMKyc4im+/mHXgki\nCgxvDP27wmTmMt0T1jvz3Q3esWV/q74weEhpAxby/ylRFnEmFeBbe67kInfWiyda\nHUARgAyfNWOjUT0mEZvV4LiM2x7HutkX6mXtE57uRKxi2CbuCqs=\n=k8Ap\n-----END PGP SIGNATURE-----",
        "payload": "tree 173dffb27d6064651ff1b04a71d570af33ca90d4\nparent 8a503a6c6dd419921373f45d7aa6f1787c9b8884\nauthor nicolas.dorier <nicolas.dorier@gmail.com> 1560084016 +0900\ncommitter nicolas.dorier <nicolas.dorier@gmail.com> 1560084393 +0900\n\nAllow NODE_BLOOM services for whitelisted peers\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/618ea1161bd5ae6dbaf72811188e23bfdf62ade2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/618ea1161bd5ae6dbaf72811188e23bfdf62ade2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/618ea1161bd5ae6dbaf72811188e23bfdf62ade2/comments",
    "author": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a503a6c6dd419921373f45d7aa6f1787c9b8884",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a503a6c6dd419921373f45d7aa6f1787c9b8884",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a503a6c6dd419921373f45d7aa6f1787c9b8884"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "cfd606d99937d23f555754210f86c9999b3e7460",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/618ea1161bd5ae6dbaf72811188e23bfdf62ade2/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/618ea1161bd5ae6dbaf72811188e23bfdf62ade2/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=618ea1161bd5ae6dbaf72811188e23bfdf62ade2",
        "patch": "@@ -958,7 +958,12 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     uint64_t nonce = GetDeterministicRandomizer(RANDOMIZER_ID_LOCALHOSTNONCE).Write(id).Finalize();\n     CAddress addr_bind = GetBindAddress(hSocket);\n \n-    CNode* pnode = new CNode(id, nLocalServices, GetBestHeight(), hSocket, addr, CalculateKeyedNetGroup(addr), nonce, addr_bind, \"\", true);\n+    ServiceFlags nodeLocalServices = nLocalServices;\n+    if (whitelisted) \n+    {\n+        nodeLocalServices = ServiceFlags(nodeLocalServices | NODE_BLOOM);\n+    }\n+    CNode* pnode = new CNode(id, nodeLocalServices, GetBestHeight(), hSocket, addr, CalculateKeyedNetGroup(addr), nonce, addr_bind, \"\", true);\n     pnode->AddRef();\n     pnode->fWhitelisted = whitelisted;\n     pnode->m_prefer_evict = bannedlevel > 0;"
      }
    ]
  }
]