[
  {
    "sha": "110683df0b9192480a5f89bdee259ac43987b490",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMTA2ODNkZjBiOTE5MjQ4MGE1Zjg5YmRlZTI1OWFjNDM5ODdiNDkw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-12-24T16:39:53Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-12-25T19:29:52Z"
      },
      "message": "Release notes: formatting, headers-first, rest",
      "tree": {
        "sha": "3f3f61cf29a48dc8adadcc83f348ac960a6985ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f3f61cf29a48dc8adadcc83f348ac960a6985ea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/110683df0b9192480a5f89bdee259ac43987b490",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/110683df0b9192480a5f89bdee259ac43987b490",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/110683df0b9192480a5f89bdee259ac43987b490",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/110683df0b9192480a5f89bdee259ac43987b490/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4e0bfa581438a662147fe4459522b308406d7f57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e0bfa581438a662147fe4459522b308406d7f57",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4e0bfa581438a662147fe4459522b308406d7f57"
      }
    ],
    "stats": {
      "total": 85,
      "additions": 64,
      "deletions": 21
    },
    "files": [
      {
        "sha": "3df7b3a8e069a7b49dfb26f3aff7ce79f282df8f",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 64,
        "deletions": 21,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/110683df0b9192480a5f89bdee259ac43987b490/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/110683df0b9192480a5f89bdee259ac43987b490/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=110683df0b9192480a5f89bdee259ac43987b490",
        "patch": "@@ -10,7 +10,7 @@ Please report bugs using the issue tracker at github:\n   https://github.com/bitcoin/bitcoin/issues\n \n Upgrading and downgrading\n-==========================\n+=========================\n \n How to Upgrade\n --------------\n@@ -28,8 +28,8 @@ Downgrading warning\n ---------------------\n \n Because release 0.10.0 makes use of headers-first synchronization and parallel\n-block download, the block files and databases are not backwards-compatible\n-with older versions of Bitcoin Core:\n+block download (see further), the block files and databases are not\n+backwards-compatible with older versions of Bitcoin Core:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -45,8 +45,37 @@ bootstrap.dat) anew afterwards.\n \n This does not affect wallet forward or backward compatibility.\n \n+\n+Notable changes\n+===============\n+\n+Faster synchronization\n+----------------------\n+\n+Bitcoin Core now uses 'headers-first synchronization'. This means that we first\n+ask peers for block headers (a total of 27 megabytes, as of December 2014) and\n+validate those. In a second stage, when the headers have been discovered, we\n+download the blocks. However, as we already know about the whole chain in\n+advance, the blocks can be downloaded in parallel from all available peers.\n+\n+In practice, this means a much faster and more robust synchronization. On\n+recent hardware with a decent network link, it can be as little as 3 hours\n+for an initial full synchronization. You may notice a slower progress in the\n+very first few minutes, when headers are still being fetched and verified, but\n+it should gain speed afterwards.\n+\n+A few RPCs were added/updated as a result of this:\n+- `getblockchaininfo` now returns the number of validated headers in addition to\n+the number of validated blocks.\n+- `getpeerinfo` lists both the number of blocks and headers we know we have in\n+common with each peer. While synchronizing, the heights of the blocks that we\n+have requested from peers (but haven't received yet) are also listed as\n+'inflight'.\n+- A new RPC `getchaintips` lists all known branches of the block chain,\n+including those we only have headers for.\n+\n Transaction fee changes\n-=======================\n+-----------------------\n \n This release automatically estimates how high a transaction fee (or how\n high a priority) transactions require to be confirmed quickly. The default\n@@ -61,27 +90,22 @@ Statistics used to estimate fees and priorities are saved in the\n data directory in the `fee_estimates.dat` file just before\n program shutdown, and are read in at startup.\n \n-New Command Line Options\n----------------------------\n-\n+New command line options for fee estimation:\n - `-txconfirmtarget=n` : create transactions that have enough fees (or priority)\n so they are likely to confirm within n blocks (default: 1). This setting\n is over-ridden by the -paytxfee option.\n \n-New RPC methods\n-----------------\n-\n+New RPC commands for fee estimation:\n - `estimatefee nblocks` : Returns approximate fee-per-1,000-bytes needed for\n a transaction to be confirmed within nblocks. Returns -1 if not enough\n transactions have been observed to compute a good estimate.\n-\n - `estimatepriority nblocks` : Returns approximate priority needed for\n a zero-fee transaction to confirm within nblocks. Returns -1 if not\n enough free transactions have been observed to compute a good\n estimate.\n \n RPC access control changes\n-==========================================\n+--------------------------\n \n Subnet matching for the purpose of access control is now done\n by matching the binary network address, instead of with string wildcard matching.\n@@ -107,8 +131,27 @@ Using wildcards will result in the rule being rejected with the following error\n \n     Error: Invalid -rpcallowip subnet specification: *. Valid are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).\n \n+\n+REST interface\n+--------------\n+\n+A new HTTP API is exposed when running with the `-rest` flag, which allows\n+unauthenticated access to public node data.\n+\n+It is served on the same port as RPC, but does not need a password, and uses\n+plain HTTP instead of JSON-RPC.\n+\n+Assuming a local RPC server running on port 8332, it is possible to request:\n+- Blocks: http://localhost:8332/rest/block/*HASH*.*EXT*\n+- Blocks without transactions: http://localhost:8332/block/notxdetails/*HASH*.*EXT*\n+- Transactions (requires `-txindex`): http://localhost:8332/tx/*HASH*.*EXT*\n+\n+In every case, *EXT* can be `bin` (for raw binary data), `hex` (for hex-encoded binary) or `json`.\n+\n+For more details, see the `doc/REST-interface.md` document in the repository.\n+\n RPC Server \"Warm-Up\" Mode\n-=========================\n+-------------------------\n \n The RPC server is started earlier now, before most of the expensive\n intialisations like loading the block index.  It is available now almost\n@@ -120,7 +163,7 @@ started and will be available soon (for instance, so that they do not\n have to start it themselves).\n \n Improved signing security\n-=========================\n+-------------------------\n \n For 0.10 the security of signing against unusual attacks has been\n improved by making the signatures constant time and deterministic.\n@@ -149,7 +192,7 @@ than the implementation in OpenSSL.\n [1] https://eprint.iacr.org/2014/161.pdf\n \n Watch-only addresses in the wallet\n-==================================\n+----------------------------------\n \n The wallet can now track transactions to addresses (or scripts) for which you\n do not have the private keys.\n@@ -174,7 +217,7 @@ with future block chain pruning functionality. It does mean the address needs\n to added to the wallet before the payment, though.\n \n Consensus library\n-=================\n+-----------------\n \n Starting from 0.10.0, the Bitcoin Core distribution includes a consensus library.\n \n@@ -196,7 +239,7 @@ The functionality is planned to be extended to e.g. UTXO management in upcoming\n for existing methods should remain stable.\n \n Standard script rules relaxed for P2SH addresses\n-================================================\n+------------------------------------------------\n \n The IsStandard() rules have been almost completely removed for P2SH\n redemption scripts, allowing applications to make use of any valid\n@@ -207,7 +250,7 @@ standard Bitcoin Core nodes wouldn't relay them to miners, nor would\n most miners include them in blocks they mined.\n \n bitcoin-tx\n-=============\n+----------\n \n It has been observed that many of the RPC functions offered by bitcoind are\n \"pure functions\", and operate independently of the bitcoind wallet. This\n@@ -230,8 +273,8 @@ server round-trip to execute.\n Other utilities \"bitcoin-key\" and \"bitcoin-script\" have been proposed, making\n key and script operations easily accessible via command line.\n \n-0.10.0 Release notes\n-=======================\n+0.10.0 Change log\n+=================\n \n Detailed release notes follow. This overview includes changes that affect external\n behavior, not code moves, refactors or string updates.\n@@ -534,7 +577,7 @@ Miscellaneous:\n - `6e6a36c` contrib: show pull # in prompt for github-merge script\n \n Credits\n---------\n+=======\n \n Thanks to everyone who contributed to this release:\n "
      }
    ]
  }
]