[
  {
    "sha": "a8db31c83d6a43e07f741f7f61b1bf0df87621c7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOGRiMzFjODNkNmE0M2UwN2Y3NDFmN2Y2MWIxYmYwZGY4NzYyMWM3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-17T15:32:35Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-17T15:55:20Z"
      },
      "message": "qt: allow `walletpassphrase` in debug console without -server\n\nCurrently it is only possible to use `walletpassphrase` to unlock the\nwallet when bitcoin is started in server mode.\n\nAlmost everything that manipulates the wallet in the RPC console\nneeds the wallet to be unlocked and is thus unusable without -server.\n\nThis is pretty unintuitive to me, and I'm sure it's even more confusing\nto users.\n\nSolve this with a very minimal change: by making the GUI start a\ndummy RPC thread just to handle timeouts.",
      "tree": {
        "sha": "696736b13dd4e6bce111c92c93037dd3d747135d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/696736b13dd4e6bce111c92c93037dd3d747135d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8db31c83d6a43e07f741f7f61b1bf0df87621c7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8db31c83d6a43e07f741f7f61b1bf0df87621c7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a8db31c83d6a43e07f741f7f61b1bf0df87621c7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8db31c83d6a43e07f741f7f61b1bf0df87621c7/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08ede8ef5edd8bfe6b80d0900bd9bd65b2d45cbf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08ede8ef5edd8bfe6b80d0900bd9bd65b2d45cbf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08ede8ef5edd8bfe6b80d0900bd9bd65b2d45cbf"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 30,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9b0b1d6e436896ca0a50fa1d19b58fc7e9ffc580",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8db31c83d6a43e07f741f7f61b1bf0df87621c7/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8db31c83d6a43e07f741f7f61b1bf0df87621c7/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=a8db31c83d6a43e07f741f7f61b1bf0df87621c7",
        "patch": "@@ -21,6 +21,7 @@\n \n #include \"init.h\"\n #include \"main.h\"\n+#include \"rpcserver.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n #include \"wallet.h\"\n@@ -227,6 +228,13 @@ void BitcoinCore::initialize()\n     {\n         LogPrintf(\"Running AppInit2 in thread\\n\");\n         int rv = AppInit2(threadGroup);\n+        if(rv)\n+        {\n+            /* Start a dummy RPC thread if no RPC thread is active yet\n+             * to handle timeouts.\n+             */\n+            StartDummyRPCThread();\n+        }\n         emit initializeResult(rv);\n     } catch (std::exception& e) {\n         handleRunawayException(&e);"
      },
      {
        "sha": "d3ed48525f53079420236aec006714ee554e012e",
        "filename": "src/rpcprotocol.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8db31c83d6a43e07f741f7f61b1bf0df87621c7/src/rpcprotocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8db31c83d6a43e07f741f7f61b1bf0df87621c7/src/rpcprotocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.h?ref=a8db31c83d6a43e07f741f7f61b1bf0df87621c7",
        "patch": "@@ -49,7 +49,6 @@ enum RPCErrorCode\n     RPC_INVALID_PARAMETER           = -8,  // Invalid, missing or duplicate parameter\n     RPC_DATABASE_ERROR              = -20, // Database error\n     RPC_DESERIALIZATION_ERROR       = -22, // Error parsing or validating structure in raw format\n-    RPC_SERVER_NOT_STARTED          = -18, // RPC server was not started (StartRPCThreads() not called)\n \n     // P2P client errors\n     RPC_CLIENT_NOT_CONNECTED        = -9,  // Bitcoin is not connected"
      },
      {
        "sha": "0d9e95402b3edc68f343ba88cab91f8cde4465bb",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8db31c83d6a43e07f741f7f61b1bf0df87621c7/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8db31c83d6a43e07f741f7f61b1bf0df87621c7/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=a8db31c83d6a43e07f741f7f61b1bf0df87621c7",
        "patch": "@@ -38,6 +38,7 @@ static asio::io_service* rpc_io_service = NULL;\n static map<string, boost::shared_ptr<deadline_timer> > deadlineTimers;\n static ssl::context* rpc_ssl_context = NULL;\n static boost::thread_group* rpc_worker_group = NULL;\n+static boost::asio::io_service::work *rpc_dummy_work = NULL;\n \n void RPCTypeCheck(const Array& params,\n                   const list<Value_type>& typesExpected,\n@@ -607,6 +608,19 @@ void StartRPCThreads()\n         rpc_worker_group->create_thread(boost::bind(&asio::io_service::run, rpc_io_service));\n }\n \n+void StartDummyRPCThread()\n+{\n+    if(rpc_io_service == NULL)\n+    {\n+        rpc_io_service = new asio::io_service();\n+        /* Create dummy \"work\" to keep the thread from exiting when no timeouts active,\n+         * see http://www.boost.org/doc/libs/1_51_0/doc/html/boost_asio/reference/io_service.html#boost_asio.reference.io_service.stopping_the_io_service_from_running_out_of_work */\n+        rpc_dummy_work = new asio::io_service::work(*rpc_io_service);\n+        rpc_worker_group = new boost::thread_group();\n+        rpc_worker_group->create_thread(boost::bind(&asio::io_service::run, rpc_io_service));\n+    }\n+}\n+\n void StopRPCThreads()\n {\n     if (rpc_io_service == NULL) return;\n@@ -615,6 +629,7 @@ void StopRPCThreads()\n     rpc_io_service->stop();\n     if (rpc_worker_group != NULL)\n         rpc_worker_group->join_all();\n+    delete rpc_dummy_work; rpc_dummy_work = NULL;\n     delete rpc_worker_group; rpc_worker_group = NULL;\n     delete rpc_ssl_context; rpc_ssl_context = NULL;\n     delete rpc_io_service; rpc_io_service = NULL;"
      },
      {
        "sha": "9008c32810b823a847a2aedede2eafb78eace6dc",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8db31c83d6a43e07f741f7f61b1bf0df87621c7/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8db31c83d6a43e07f741f7f61b1bf0df87621c7/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=a8db31c83d6a43e07f741f7f61b1bf0df87621c7",
        "patch": "@@ -20,7 +20,14 @@\n \n class CBlockIndex;\n \n+/* Start RPC threads */\n void StartRPCThreads();\n+/* Alternative to StartRPCThreads for the GUI, when no server is\n+ * used. The RPC thread in this case is only used to handle timeouts.\n+ * If real RPC threads have already been started this is a no-op.\n+ */\n+void StartDummyRPCThread();\n+/* Stop RPC threads */\n void StopRPCThreads();\n \n /*"
      },
      {
        "sha": "68f5fe525ab932f46c16db5f92c781926136e7ff",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8db31c83d6a43e07f741f7f61b1bf0df87621c7/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8db31c83d6a43e07f741f7f61b1bf0df87621c7/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=a8db31c83d6a43e07f741f7f61b1bf0df87621c7",
        "patch": "@@ -1562,8 +1562,6 @@ Value walletpassphrase(const Array& params, bool fHelp)\n \n     if (fHelp)\n         return true;\n-    if (!fServer)\n-        throw JSONRPCError(RPC_SERVER_NOT_STARTED, \"Error: RPC server was not started, use server=1 to change this.\");\n     if (!pwalletMain->IsCrypted())\n         throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n "
      }
    ]
  }
]