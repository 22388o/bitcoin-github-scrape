[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249606511",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-249606511",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 249606511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTYwNjUxMQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-26T15:35:28Z",
    "updated_at": "2016-09-26T15:36:05Z",
    "author_association": "MEMBER",
    "body": "This is useful because a lot of features add new arguments to an existing call. For example #8751.\n\nCurrently the user of the API has to explicitly specify defaults for the intermediate arguments. With named arguments this would no longer be necessary.\n\nIt could also help clean up the API for calls that already have a lot of optional arguments such as `sendtoaddress`, or at least make it easier to use them.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249606511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250966251",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-250966251",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 250966251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDk2NjI1MQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-02T11:16:48Z",
    "updated_at": "2016-10-02T11:16:48Z",
    "author_association": "MEMBER",
    "body": "The only alternative I see would be to only accept one object as first positional argument for all methods, but this will likely never happen, so Concept ACK.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/250966251/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252582482",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-252582482",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 252582482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjU4MjQ4Mg==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-10T10:32:44Z",
    "updated_at": "2016-10-10T10:32:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK. I think this is very useful.\nACK to extend it to `bitcoin-cli`, to the other rpc tables and to the RPC value conversions table.\n\nAfter this, we should update the documents (and RPC help examples) to slowly move away from recommending fixed position arguments.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252582482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252630068",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-252630068",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 252630068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjYzMDA2OA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-10T14:02:58Z",
    "updated_at": "2016-10-10T14:02:58Z",
    "author_association": "MEMBER",
    "body": "Rebased to get rid of the univalue change\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/252630068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/256060105",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-256060105",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 256060105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjA2MDEwNQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T14:58:54Z",
    "updated_at": "2016-10-25T14:58:54Z",
    "author_association": "MEMBER",
    "body": "Needed rebase, rebased\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/256060105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/259137932",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-259137932",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 259137932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTEzNzkzMg==",
    "user": {
      "login": "afk11",
      "id": 5617245,
      "node_id": "MDQ6VXNlcjU2MTcyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5617245?u=d80eead1afbb70ddce35053cfb1db7502d9ca3c9&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afk11",
      "html_url": "https://github.com/afk11",
      "followers_url": "https://api.github.com/users/afk11/followers",
      "following_url": "https://api.github.com/users/afk11/following{/other_user}",
      "gists_url": "https://api.github.com/users/afk11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afk11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afk11/subscriptions",
      "organizations_url": "https://api.github.com/users/afk11/orgs",
      "repos_url": "https://api.github.com/users/afk11/repos",
      "events_url": "https://api.github.com/users/afk11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afk11/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-08T13:37:40Z",
    "updated_at": "2016-11-08T13:37:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK, needs rebase\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/259137932/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260591308",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-260591308",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 260591308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDU5MTMwOA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T09:31:16Z",
    "updated_at": "2016-11-15T09:31:16Z",
    "author_association": "MEMBER",
    "body": "Rebased, added @instagibbs' test and fix.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260591308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260649057",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-260649057",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 260649057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDY0OTA1Nw==",
    "user": {
      "login": "mrbandrews",
      "id": 7504522,
      "node_id": "MDQ6VXNlcjc1MDQ1MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7504522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrbandrews",
      "html_url": "https://github.com/mrbandrews",
      "followers_url": "https://api.github.com/users/mrbandrews/followers",
      "following_url": "https://api.github.com/users/mrbandrews/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrbandrews/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrbandrews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrbandrews/subscriptions",
      "organizations_url": "https://api.github.com/users/mrbandrews/orgs",
      "repos_url": "https://api.github.com/users/mrbandrews/repos",
      "events_url": "https://api.github.com/users/mrbandrews/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrbandrews/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T14:03:21Z",
    "updated_at": "2016-11-15T14:03:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260649057/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260720295",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-260720295",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 260720295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDcyMDI5NQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T18:12:37Z",
    "updated_at": "2016-11-15T18:12:37Z",
    "author_association": "MEMBER",
    "body": "Concept ACK!\n\nDo you intend to include the echo command in the final merge?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260720295/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260868584",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-260868584",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 260868584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDg2ODU4NA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-16T06:54:03Z",
    "updated_at": "2016-11-16T06:54:03Z",
    "author_association": "MEMBER",
    "body": "@sipa I've had use for it two times in testing - here and in #7783. Also I fathom it's somewhat useful for users when testing JSON RPC libraries. So my preference would be to keep it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/260868584/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261409874",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-261409874",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 261409874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTQwOTg3NA==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-18T00:06:41Z",
    "updated_at": "2016-11-18T00:06:41Z",
    "author_association": "MEMBER",
    "body": "utACK https://github.com/bitcoin/bitcoin/pull/8811/commits/3c7647ea7814f7d3f0304bb4b39274c748a88900\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261409874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261943609",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-261943609",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 261943609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTk0MzYwOQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-21T13:52:03Z",
    "updated_at": "2016-11-21T13:54:48Z",
    "author_association": "MEMBER",
    "body": "As there is interest in this I'm continuing work on the issues that are still open in the OP. \r\nI've pushed argument naming for `mining`, `net`, `rawtransaction` and `wallet`, which completes it for all calls. I'll also make it possible to use named arguments with `bitcoin-cli`.\r\nI'll leave the GUI change for another time though.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261943609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262252906",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-262252906",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 262252906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjI1MjkwNg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T14:22:18Z",
    "updated_at": "2016-12-08T10:58:24Z",
    "author_association": "MEMBER",
    "body": "Added support to bitcoin-cli. This should complete the feature set for this pull. I'd appreciate testing and review.\r\n\r\nEspecially important to review are the parameter names in the RPC tables, as they will become part of the API:\r\n\r\n- https://github.com/laanwj/bitcoin/blob/2016_09_rpc_named_arguments/src/rpc/server.cpp#L275\r\n- https://github.com/laanwj/bitcoin/blob/2016_09_rpc_named_arguments/src/rpc/blockchain.cpp#L1372\r\n- https://github.com/laanwj/bitcoin/blob/2016_09_rpc_named_arguments/src/rpc/mining.cpp#L905\r\n- https://github.com/laanwj/bitcoin/blob/2016_09_rpc_named_arguments/src/rpc/misc.cpp#L511\r\n- https://github.com/laanwj/bitcoin/blob/2016_09_rpc_named_arguments/src/rpc/net.cpp#L600\r\n- https://github.com/laanwj/bitcoin/blob/2016_09_rpc_named_arguments/src/rpc/rawtransaction.cpp#L917\r\n- https://github.com/laanwj/bitcoin/blob/2016_09_rpc_named_arguments/src/wallet/rpcwallet.cpp#L2598\r\n\r\n### More examples\r\n\r\n    $ src/bitcoin-cli -testnet -named getbalance account=\"*\" minconf=\"1\" include-watchonly=false\r\n    413.44052133\r\n\r\nNote right now, `getbalance` doesn't allow leaving intermediate arguments out right now, so this won't work yet.\r\n\r\n    $ src/bitcoin-cli -testnet -named getbalance minconf=\"1\" include-watchonly=false\r\n    error code: -1\r\n    error message:\r\n    JSON value is not a string as expected\r\n\r\nIt doesn't know how to handle the univalue null for the account parameter. It should interpret it as the default, `\"*\"`. This should be addressed in later changes for specific methods.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262252906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263045298",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263045298",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 263045298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA0NTI5OA==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T05:28:38Z",
    "updated_at": "2016-11-26T05:28:38Z",
    "author_association": "MEMBER",
    "body": "Why is there a \"wtxid\" ever needed as a param? \"txhash\" and \"txid\" are all I see existing at all (hash != txid).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263045298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263045394",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263045394",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 263045394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA0NTM5NA==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T05:32:08Z",
    "updated_at": "2016-11-26T05:32:08Z",
    "author_association": "MEMBER",
    "body": "I think a lot of the options params ought to be flattened?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263045394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263045571",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263045571",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 263045571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA0NTU3MQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T05:38:09Z",
    "updated_at": "2016-11-26T05:41:48Z",
    "author_association": "MEMBER",
    "body": "> I think a lot of the options params ought to be flattened?\r\n\r\nPossibly. Not in this pull, though. JSON can perfectly deal with nested structures. Also this would break backwards compatibility, unlike anything in this pull.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263045571/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263047904",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263047904",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 263047904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA0NzkwNA==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T06:49:17Z",
    "updated_at": "2016-11-26T06:49:17Z",
    "author_association": "MEMBER",
    "body": "@luke-jr Sure, txhash/txid. I was only making the point that going forward there will be a distinction between those, so it'd be good to make sure that all \"txid\" params here really mean txid.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263047904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263048750",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263048750",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 263048750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA0ODc1MA==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T07:14:44Z",
    "updated_at": "2016-11-26T07:14:44Z",
    "author_association": "MEMBER",
    "body": "@laanwj If this pull is merged as-is, then flattening the options will involve breaking backward compatibility with this, no? ie, it may be better to just not allow for already-named options at all right now.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263048750/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263052377",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263052377",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 263052377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA1MjM3Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T08:57:03Z",
    "updated_at": "2016-12-12T12:22:38Z",
    "author_association": "MEMBER",
    "body": "I pushed cfields' rename suggestions, and compiled statistics on what argument names are used in which calls. This could be helpful in determining further unifications:\r\n```\r\n\"absolute\",          // setban\r\n\"account\",           // addmultisigaddress getaccountaddress getaddressesbyaccount getbalance getnewaddress getreceivedbyaccount listtransactions setaccount\r\n\"address\",           // generatetoaddress validateaddress verifymessage addwitnessaddress dumpprivkey getaccount getreceivedbyaddress importaddress sendtoaddress setaccount signmessage\r\n\"addresses\",         // listunspent\r\n\"allowhighfees\",     // sendrawtransaction\r\n\"amount\",            // move sendfrom sendtoaddress settxfee\r\n\"amounts\",           // sendmany\r\n\"arg0\",              // echo echojson\r\n\"arg1\",              // echo echojson\r\n\"arg2\",              // echo echojson\r\n\"arg3\",              // echo echojson\r\n\"arg4\",              // echo echojson\r\n\"arg5\",              // echo echojson\r\n\"arg6\",              // echo echojson\r\n\"arg7\",              // echo echojson\r\n\"arg8\",              // echo echojson\r\n\"arg9\",              // echo echojson\r\n\"bantime\",           // setban\r\n\"blockhash\",         // getblock getblockheader preciousblock invalidateblock reconsiderblock waitforblock gettxoutproof listsinceblock\r\n\"checklevel\",        // verifychain\r\n\"command\",           // help addnode setban\r\n\"comment\",           // move sendfrom sendmany sendtoaddress\r\n\"comment_to\",        // sendfrom sendtoaddress\r\n\"count\",             // listtransactions\r\n\"destination\",       // backupwallet\r\n\"fee_delta\",         // prioritisetransaction\r\n\"filename\",          // dumpwallet importwallet\r\n\"fromaccount\",       // move sendfrom sendmany\r\n\"height\",            // getblockhash waitforblockheight getnetworkhashps\r\n\"hexdata\",           // submitblock\r\n\"hexstring\",         // decoderawtransaction decodescript sendrawtransaction signrawtransaction fundrawtransaction\r\n\"include_empty\",     // listreceivedbyaccount listreceivedbyaddress\r\n\"include_mempool\",   // gettxout\r\n\"include_watchonly\", // getbalance gettransaction listaccounts listreceivedbyaccount listreceivedbyaddress listsinceblock listtransactions\r\n\"keys\",              // createmultisig addmultisigaddress\r\n\"label\",             // importprivkey importaddress importpubkey\r\n\"locktime\",          // createrawtransaction\r\n\"maxconf\",           // listunspent\r\n\"maxtries\",          // generate generatetoaddress\r\n\"message\",           // verifymessage signmessagewithprivkey signmessage\r\n\"minconf\",           // getbalance getreceivedbyaccount getreceivedbyaddress listaccounts listreceivedbyaccount listreceivedbyaddress listunspent move sendfrom sendmany\r\n\"n\",                 // gettxout\r\n\"nblocks\",           // verifychain getnetworkhashps generate generatetoaddress estimatefee estimatepriority estimatesmartfee estimatesmartpriority\r\n\"newpassphrase\",     // walletpassphrasechange\r\n\"newsize\",           // keypoolrefill\r\n\"node\",              // addnode disconnectnode getaddednodeinfo\r\n\"nrequired\",         // createmultisig addmultisigaddress\r\n\"oldpassphrase\",     // walletpassphrasechange\r\n\"options\",           // fundrawtransaction importmulti\r\n\"outputs\",           // createrawtransaction\r\n\"p2sh\",              // importaddress\r\n\"parameters\",        // submitblock\r\n\"passphrase\",        // encryptwallet walletpassphrase\r\n\"prevtxs\",           // signrawtransaction\r\n\"priority_delta\",    // prioritisetransaction\r\n\"privkey\",           // signmessagewithprivkey importprivkey\r\n\"privkeys\",          // signrawtransaction\r\n\"proof\",             // verifytxoutproof\r\n\"pubkey\",            // importpubkey\r\n\"rawtransaction\",    // importprunedfunds\r\n\"requests\",          // importmulti\r\n\"rescan\",            // importprivkey importaddress importpubkey\r\n\"sighashtype\",       // signrawtransaction\r\n\"signature\",         // verifymessage\r\n\"skip\",              // listtransactions\r\n\"state\",             // setnetworkactive\r\n\"subnet\",            // setban\r\n\"subtractfeefrom\",   // sendmany\r\n\"subtractfeefromamount\", // sendtoaddress\r\n\"target_confirmations\", // listsinceblock\r\n\"template_request\",  // getblocktemplate\r\n\"timeout\",           // waitfornewblock waitforblock waitforblockheight walletpassphrase\r\n\"timestamp\",         // setmocktime\r\n\"toaccount\",         // move\r\n\"toaddress\",         // sendfrom\r\n\"transactions\",      // createrawtransaction lockunspent\r\n\"txid\",              // getmempoolancestors getmempooldescendants getmempoolentry gettxout prioritisetransaction getrawtransaction abandontransaction gettransaction removeprunedfunds\r\n\"txids\",             // gettxoutproof\r\n\"txoutproof\",        // importprunedfunds\r\n\"unlock\",            // lockunspent\r\n\"verbose\",           // getblock getblockheader getmempoolancestors getmempooldescendants getrawmempool getrawtransaction\r\n```\r\n> @laanwj If this pull is merged as-is, then flattening the options will involve breaking backward compatibility with this, no? ie, it may be better to just not allow for already-named options at all right now.\r\n\r\nIf a RPC call has a designated options argument now, then a future pull - that has functionality to pass the object down to the RPC call as-is - could allow specifying those options on the top level instead. **If** we decide that flattening is desirable at all.\r\nI don't want to handle any RPC-call-specific changes here. Mind that I don't add any \"null\" argument handling in RPC calls here either. This just lays the ground work.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263052377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263057588",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263057588",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 263057588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA1NzU4OA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T11:08:39Z",
    "updated_at": "2016-11-26T11:21:36Z",
    "author_association": "MEMBER",
    "body": "This looks like a good candidate for unification. Any opinions on \"hexdata\" versus \"hexstring\"?\r\n```\r\n\"hexdata\",           // submitblock\r\n\"hexstring\",         // decoderawtransaction decodescript sendrawtransaction signrawtransaction fundrawtransaction\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263057588/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263058828",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263058828",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 263058828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA1ODgyOA==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T11:40:10Z",
    "updated_at": "2016-11-26T11:40:10Z",
    "author_association": "MEMBER",
    "body": "@laanwj GBT/submitblock probably shouldn't accept named parameters at all, since they are according to BIPs...?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263058828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263060055",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-263060055",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 263060055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA2MDA1NQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T12:10:19Z",
    "updated_at": "2016-11-26T12:10:19Z",
    "author_association": "MEMBER",
    "body": "You don't *have* to use named arguments. For consistency I prefer all calls\nto have the possibility to have their arguments named, though.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/263060055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264370417",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-264370417",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 264370417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDM3MDQxNw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-02T04:24:50Z",
    "updated_at": "2016-12-02T04:25:02Z",
    "author_association": "MEMBER",
    "body": "Rebased for #9144, squashed (into logically separate commits)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264370417/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264513851",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-264513851",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 264513851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDUxMzg1MQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-02T17:38:38Z",
    "updated_at": "2016-12-02T17:38:38Z",
    "author_association": "MEMBER",
    "body": "I think travis wants you to include stdexcept",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264513851/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264935466",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-264935466",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 264935466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDkzNTQ2Ng==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-05T18:29:53Z",
    "updated_at": "2016-12-06T06:22:51Z",
    "author_association": "MEMBER",
    "body": "Good point about the negative values. Hadn't thought about that. Same will\r\nhold for string values that start with '-', such as labels. Any argument\r\ncould have been meant as literal value.\r\n\r\nThinking of it this could even be a security issue. Say someone controls\r\nthe first argument to a call, they could now instead provide the second by\r\nusing, say --amount=123.\r\n\r\n It should be made explicit instead of auto-detected. E.g.\r\n\r\n    bitcoin-cli {method} val1 val2. ..\r\n    bitcoin-cli -named {method} -arg1=val1 -arg2=val2 ...\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/264935466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265069262",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265069262",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 265069262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA2OTI2Mg==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T06:09:10Z",
    "updated_at": "2016-12-06T06:09:10Z",
    "author_association": "MEMBER",
    "body": "@laanwj +1 for explicit",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265069262/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265072599",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265072599",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 265072599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA3MjU5OQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T06:34:05Z",
    "updated_at": "2016-12-06T06:34:05Z",
    "author_association": "MEMBER",
    "body": "The issue only exists for string arguments, as anything else would be invalid JSON anyway.\r\n\r\nAlso, I have a slight preference for `bitcoin-cli getblock hash=X` over `bitcoin-cli getblock -hash=X`... it feels like the latter is an option to `bitcoin-cli` rather than `getblock` (but feel free to ignore this if I'm alone with that opinion).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265072599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265073423",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265073423",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 265073423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA3MzQyMw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T06:40:00Z",
    "updated_at": "2016-12-06T06:40:00Z",
    "author_association": "MEMBER",
    "body": "> The issue only exists for string arguments, as anything else would be invalid JSON anyway.\r\n\r\nYes, only a problem for string arguments and negative numbers. But unfortunately that's enough to make it irresponsible to 'guess'.\r\n\r\n> Also, I have a slight preference for bitcoin-cli getblock hash=X over bitcoin-cli getblock -hash=X... it feels like the latter is an option to bitcoin-cli rather than getblock (but feel free to ignore this if I'm alone with that opinion).\r\n\r\nI have thought about that, but didn't propose it because I think some shells interpret A=B tuples after the command as environment settings - or if not - that is a convention people assume to be so because of autoconf/make.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265073423/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265074094",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265074094",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 265074094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA3NDA5NA==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T06:45:02Z",
    "updated_at": "2016-12-06T06:45:02Z",
    "author_association": "MEMBER",
    "body": "Worth mentioning how subarg syntax is handled by other familiar progs:\r\n\r\ngit:```./bitcoin-cli -testnet -- --hash=X```\r\nor\r\ngdb: ```./bitcoin-cli -testnet --args --hash=X```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265074094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265075847",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265075847",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 265075847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA3NTg0Nw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T06:57:36Z",
    "updated_at": "2016-12-06T06:57:36Z",
    "author_association": "MEMBER",
    "body": "Another idea: named arguments have to precede the command (so `bitcoin-cli -hash=X getblock`), that's never ambiguous.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265075847/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265083688",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265083688",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 265083688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA4MzY4OA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T07:51:22Z",
    "updated_at": "2016-12-06T07:51:22Z",
    "author_association": "MEMBER",
    "body": "> ./bitcoin-cli -testnet -- --hash=X\r\n> ./bitcoin-cli -testnet --args --hash=X\r\n\r\nI like supporting at least one of those. Mind that the `--`/`--args` delimiter has to be *before* the command for it to be nonambigious, otherwise it may be a legitimate string argument.\r\n\r\n> Another idea: named arguments have to precede the command (so bitcoin-cli -hash=X getblock), that's never ambiguous.\r\n\r\nSure, but then they can collide with bitcoin-cli's own arguments, which we were trying to avoid at the same time. It will be tricky to figure out what arguments to send to the server and which ones to keep for ourselves, and may change per version.\r\n\r\nBut even if we manage to get that sorted out, it looks like \"putting the cart before the horse\" syntax-wise.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265083688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265084145",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265084145",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 265084145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTA4NDE0NQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T07:54:09Z",
    "updated_at": "2016-12-06T07:54:09Z",
    "author_association": "MEMBER",
    "body": "> Sure, but then they can collide with bitcoin-cli's own arguments, which we were trying to avoid at the same time. It will be tricky to figure out what arguments to send to the server and which ones to keep for ourselves, and may change per version.\r\n\r\nThat can be avoided by using `hash=X` style naming ;)\r\n\r\n> But even if we manage to get that sorted out, it looks like \"putting the cart before the horse\" syntax-wise.\r\n\r\nYes, I agree there. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265084145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265111615",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265111615",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 265111615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTExMTYxNQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T10:13:19Z",
    "updated_at": "2016-12-06T10:13:19Z",
    "author_association": "MEMBER",
    "body": "I agree with the explicit `bitcoin-cli -named {method} -arg1=val1 -arg2=val2 ...` syntax. It guarantees backwards compatibility for any applications that are calling into bitcoin-cli with the current positional argument syntax.\r\n\r\nIf we're explicitly specifying that the arguments are named, then we could even drop the dashes before the argument names, ie `bitcoin-cli -named {method} arg1=val1 arg2=val2 ...`",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265111615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265127449",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265127449",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 265127449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTEyNzQ0OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T11:30:37Z",
    "updated_at": "2016-12-06T11:30:37Z",
    "author_association": "MEMBER",
    "body": "> If we're explicitly specifying that the arguments are named, then we could even drop the dashes before the argument names, ie bitcoin-cli -named {method} arg1=val1 arg2=val2 ...\r\n\r\nThat's what @sipa is suggesting too. Seems fine to me *if* we can be sure that there are no shells that eat these. I've only seen the syntax used for passing arguments to make/configure  and always assumed it was setting environment variables .",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265127449/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265137513",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265137513",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 265137513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTEzNzUxMw==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T12:24:44Z",
    "updated_at": "2016-12-06T12:54:36Z",
    "author_association": "MEMBER",
    "body": "@laanwj Not sure if you were just using configure/make as an example, but in those cases anyway, those assignments are separate from environment vars.\r\n\r\nThat's why, for ex, ```CC=clang ./configure``` != ```./configure CC=clang```. The first sets env vars that aren't necessarily persistent to the resulting builds unless the user persists them explicitly in the shell. The second allows configure to forward the vars without polluting the env. If you pass a var using the 2nd syntax, and it's not understood (\"precious\" in autotools-speak), it will not be forwarded. afaik, the same goes for make.\r\n\r\nEdit: Just to be explicit, it's configure/make swallowing the args in those cases, not the shell itself.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265137513/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265240089",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265240089",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 265240089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTI0MDA4OQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T19:01:20Z",
    "updated_at": "2016-12-06T19:01:20Z",
    "author_association": "MEMBER",
    "body": "@laanwj `dd` and `bitcoin-tx` also use key=value.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265240089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265269055",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265269055",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 265269055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTI2OTA1NQ==",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?u=b7dd63827227d69794b5fe28797b1bd107b930dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T20:54:28Z",
    "updated_at": "2016-12-06T20:54:28Z",
    "author_association": "MEMBER",
    "body": "concept ACK\r\nI will review more thoroughly after update\r\n\r\nI think I have a slight preference for eliminating the dashes\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265269055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265714367",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-265714367",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 265714367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTcxNDM2Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-08T11:04:23Z",
    "updated_at": "2016-12-08T11:05:09Z",
    "author_association": "MEMBER",
    "body": "- Dashes have been successfully eliminated. New syntax:\r\n\r\n```\r\n     $ src/bitcoin-cli -testnet -named echo arg0=\"dfdf\"\r\n     [\r\n     \"dfdf\"\r\n     ]\r\n```\r\n\r\nArgument conversion also works, for arguments thus flagged in the table in\r\n`src/rpc/client.cpp`.\r\n\r\n```\r\n    $ src/bitcoin-cli -testnet -named echojson arg0=\"[1,2,3]\"\r\n    [\r\n      [\r\n        1,\r\n        2,\r\n        3\r\n      ]\r\n    ]\r\n```\r\n\r\nUnknown parameter (detected server-side):\r\n\r\n```\r\n    $ src/bitcoin-cli -testnet -named getinfo arg0=\"dfdf\"\r\n    error code: -8\r\n    error message:\r\n    Unknown named parameter arg0\r\n```\r\n\r\nAlso updated \"more examples\" above.\r\n\r\n- Renamed the remaining instances of `nblocks` and made sure the naming is consistent between `client.cpp` and the appropriate dispatch table (I have a script for this, which we could make part of the travis checks at some point).\r\n- Rebased and squashed\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/265714367/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266067278",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-266067278",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 266067278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjA2NzI3OA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-09T17:08:44Z",
    "updated_at": "2016-12-09T17:08:44Z",
    "author_association": "MEMBER",
    "body": "I've spent some time looking through the RPC arguments, and my view is that the following argument names should be changed to be more descriptive:\r\n\r\n- `getblock/index` becomes `getblock/height` to conform with `waitforblockheight` and `getnetworkhashps`\r\n- `createrawtransaction/transactions` becomes `createrawtransaction/inputs` to conform with `createrawtransaction/outputs`\r\n- `listtransactions/from` becomes `listtransactions/skip` to avoid confusion with 'from' as in 'from address...'\r\n- `getblock/hash` becomes `getblock/blockhash` ...\r\n- `getblockheader/hash` becomes `getblockheader/blockhash` ..\r\n- `preciousblock/hash` becomes `preciousblock/blockhash` ...\r\n- `invalidateblock/hash` becomes `invalidateblock/blockhash` ...\r\n- `reconsiderblock/hash` becomes `reconsiderblock/blockhash` ...\r\n- ... and `waitforblock/hash` becomes `reconsiderblock/blockhash` to confirm with `gettxoutproof` `listsinceblock` and to avoid confusion with other hash types\r\n\r\nThere's a patch set which makes these changes (as well as generally cleaning up RPC comments) at https://github.com/jnewbery/bitcoin/commit/f08b91c21b9e715ec273cf431d2ec2bb8916def7",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266067278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266417306",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-266417306",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 266417306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjQxNzMwNg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-12T12:15:22Z",
    "updated_at": "2016-12-12T12:15:22Z",
    "author_association": "MEMBER",
    "body": "@jnewbery Sounds good to me, thanks, will cherry-pick that.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266417306/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266452071",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-266452071",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 266452071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjQ1MjA3MQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-12T14:59:14Z",
    "updated_at": "2016-12-12T14:59:14Z",
    "author_association": "MEMBER",
    "body": "Oops - I didn't change the named arguments in rpcnamedargs.py to match the new argument names.\r\n\r\nFix is here: https://github.com/jnewbery/bitcoin/commit/d45ef7c02cf682f59f129b2af5df064270b20e03",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266452071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266982891",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-266982891",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 266982891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njk4Mjg5MQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-14T09:16:13Z",
    "updated_at": "2016-12-14T09:16:13Z",
    "author_association": "MEMBER",
    "body": "@jnewbery Thanks - cherry-picked and squashed into the last commit.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266982891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267916494",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-267916494",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 267916494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzkxNjQ5NA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-19T09:15:27Z",
    "updated_at": "2016-12-19T09:15:27Z",
    "author_association": "MEMBER",
    "body": "Rebased for a small add/add conflict in `rpc-tests.py`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267916494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/270613693",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-270613693",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 270613693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDYxMzY5Mw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-05T10:34:07Z",
    "updated_at": "2017-01-05T10:34:07Z",
    "author_association": "MEMBER",
    "body": "Rebased for minor argument documentation conflict.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/270613693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271117540",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-271117540",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 271117540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTExNzU0MA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-07T23:28:23Z",
    "updated_at": "2017-01-07T23:28:23Z",
    "author_association": "MEMBER",
    "body": "utACK 65bf5d27c578e7560128a28af08fef57135ec841.\r\n\r\nI have not read through the test code in detail, nor verified whether the RPC help names match the named arguments in the server and client tables. I have also not checked the consistency of the chosen names (but I don't care strongly). I have played around briefly with the new `echo` and `echojson` commands and they seem to work as expected.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271117540/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271548050",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-271548050",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 271548050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTU0ODA1MA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T11:06:02Z",
    "updated_at": "2017-01-10T11:07:08Z",
    "author_association": "MEMBER",
    "body": "Fixed @bluematt's documentation nit and removed the `_`/`-` interchangeability for option names, and squashed. Should be ready for merge now if travis passes.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271548050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271645459",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#issuecomment-271645459",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/8811",
    "id": 271645459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTY0NTQ1OQ==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T17:46:41Z",
    "updated_at": "2017-01-10T17:46:41Z",
    "author_association": "MEMBER",
    "body": "Concept ACK (I'm surprised I didn't do it before).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/271645459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81468409",
    "pull_request_review_id": 2447580,
    "id": 81468409,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxNDY4NDA5",
    "diff_hunk": "@@ -132,14 +136,16 @@ def _request(self, method, path, postdata):\n             self.__conn.request(method, path, postdata, headers)\n             return self._get_response()\n \n-    def __call__(self, *args):\n+    def __call__(self, *args, **argsn):\n         AuthServiceProxy.__id_count += 1\n \n         log.debug(\"-%s-> %s %s\"%(AuthServiceProxy.__id_count, self._service_name,\n                                  json.dumps(args, default=EncodeDecimal, ensure_ascii=self.ensure_ascii)))\n+        if args and argsn:\n+            raise ValueError('Cannot handle both named and positional arguments')\n         postdata = json.dumps({'version': '1.1',",
    "path": "qa/rpc-tests/test_framework/authproxy.py",
    "position": 12,
    "original_position": 25,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "a6b42764588492b8510838acf45470c467532c7d",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In the OP you are linking to the \"JSON-RPC 2.0 Specification\", which states\n\n> jsonrpc\n>     A String specifying the version of the JSON-RPC protocol. MUST be exactly \"2.0\".\n\nCan you explain why you keep this at 1.1?\n",
    "created_at": "2016-10-02T11:06:48Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r81468409",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81468409"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r81468409"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81468409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 148,
    "original_line": 146,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81468561",
    "pull_request_review_id": 2447712,
    "id": 81468561,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgxNDY4NTYx",
    "diff_hunk": "@@ -132,14 +136,16 @@ def _request(self, method, path, postdata):\n             self.__conn.request(method, path, postdata, headers)\n             return self._get_response()\n \n-    def __call__(self, *args):\n+    def __call__(self, *args, **argsn):\n         AuthServiceProxy.__id_count += 1\n \n         log.debug(\"-%s-> %s %s\"%(AuthServiceProxy.__id_count, self._service_name,\n                                  json.dumps(args, default=EncodeDecimal, ensure_ascii=self.ensure_ascii)))\n+        if args and argsn:\n+            raise ValueError('Cannot handle both named and positional arguments')\n         postdata = json.dumps({'version': '1.1',",
    "path": "qa/rpc-tests/test_framework/authproxy.py",
    "position": 12,
    "original_position": 25,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "a6b42764588492b8510838acf45470c467532c7d",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "May make sense to change it to that (even irrespective of this pull) however I'm not sure that we support the entire 2.0 standard, so that may involve other changes too.\n",
    "created_at": "2016-10-02T11:20:40Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r81468561",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81468561"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r81468561"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/81468561/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 148,
    "original_line": 146,
    "side": "RIGHT",
    "in_reply_to_id": 81468409
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85943516",
    "pull_request_review_id": 6627633,
    "id": 85943516,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1OTQzNTE2",
    "diff_hunk": "@@ -418,6 +419,47 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];\n+    }\n+    // Process expected parameters.\n+    int hole = 0;\n+    for (const std::string &argName: argNames) {\n+        auto fr = argsIn.find(argName);\n+        if (fr != argsIn.end()) {\n+            for (int i = 0; i < hole; ++i) {",
    "path": "src/rpc/server.cpp",
    "position": 65,
    "original_position": 65,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "0e2825c3779883b2d20d689575cbe4c061d7a92c",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "after this loop `hole` should be reset to 0, otherwise holes will be repeated for every subsequent entry?\n",
    "created_at": "2016-11-01T14:50:17Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r85943516",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85943516"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r85943516"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85943516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 445,
    "original_line": 443,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85943871",
    "pull_request_review_id": 6627633,
    "id": 85943871,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1OTQzODcx",
    "diff_hunk": "@@ -418,6 +419,47 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];\n+    }\n+    // Process expected parameters.\n+    int hole = 0;\n+    for (const std::string &argName: argNames) {\n+        auto fr = argsIn.find(argName);",
    "path": "src/rpc/server.cpp",
    "position": 63,
    "original_position": 63,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "0e2825c3779883b2d20d689575cbe4c061d7a92c",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "what does fr stand for?\n",
    "created_at": "2016-11-01T14:52:09Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r85943871",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85943871"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r85943871"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85943871/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 443,
    "original_line": 441,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85944558",
    "pull_request_review_id": 6627633,
    "id": 85944558,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1OTQ0NTU4",
    "diff_hunk": "@@ -0,0 +1,53 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_jsonrpc,\n+    assert_is_hex_string,\n+    assert_is_hash_string,\n+    start_nodes,\n+    connect_nodes_bi,\n+)\n+\n+\n+class NamedArgumentTest(BitcoinTestFramework):\n+    \"\"\"\n+    Test named arguments on RPC calls.\n+    \"\"\"\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n+        self.is_network_split = False\n+        self.sync_all()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        h = node.help(command='getinfo')\n+        assert(h.startswith('getinfo\\n'))\n+\n+        assert_raises_jsonrpc(-8, node.help, random='getinfo')\n+\n+        h = node.getblockhash(index=0)\n+        node.getblock(hash=h)\n+\n+        assert_equal(node.echo(), [])\n+        assert_equal(node.echo(arg0=0,arg9=9), [0] + [None]*8 + [9])",
    "path": "qa/rpc-tests/rpcnamedargs.py",
    "position": null,
    "original_position": 46,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "e4aa9b3bf140d95e4abcf002a5c703340f390a82",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "may want to add test of [exist, hole, exist, exist] to catch gap repeat error\n",
    "created_at": "2016-11-01T14:55:37Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r85944558",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85944558"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r85944558"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/85944558/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 46,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87845118",
    "pull_request_review_id": 8439765,
    "id": 87845118,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3ODQ1MTE4",
    "diff_hunk": "@@ -418,6 +419,47 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];\n+    }\n+    // Process expected parameters.\n+    int hole = 0;\n+    for (const std::string &argName: argNames) {\n+        auto fr = argsIn.find(argName);",
    "path": "src/rpc/server.cpp",
    "position": 63,
    "original_position": 63,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "0e2825c3779883b2d20d689575cbe4c061d7a92c",
    "user": {
      "login": "mrbandrews",
      "id": 7504522,
      "node_id": "MDQ6VXNlcjc1MDQ1MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7504522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrbandrews",
      "html_url": "https://github.com/mrbandrews",
      "followers_url": "https://api.github.com/users/mrbandrews/followers",
      "following_url": "https://api.github.com/users/mrbandrews/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrbandrews/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrbandrews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrbandrews/subscriptions",
      "organizations_url": "https://api.github.com/users/mrbandrews/orgs",
      "repos_url": "https://api.github.com/users/mrbandrews/repos",
      "events_url": "https://api.github.com/users/mrbandrews/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrbandrews/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "find returnvalue?  Just a guess.\n",
    "created_at": "2016-11-14T17:05:31Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r87845118",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87845118"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r87845118"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87845118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 443,
    "original_line": 441,
    "side": "RIGHT",
    "in_reply_to_id": 85943871
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87845478",
    "pull_request_review_id": 8440121,
    "id": 87845478,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3ODQ1NDc4",
    "diff_hunk": "@@ -0,0 +1,53 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.authproxy import JSONRPCException\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_jsonrpc,\n+    assert_is_hex_string,\n+    assert_is_hash_string,\n+    start_nodes,\n+    connect_nodes_bi,\n+)\n+\n+\n+class NamedArgumentTest(BitcoinTestFramework):\n+    \"\"\"\n+    Test named arguments on RPC calls.\n+    \"\"\"\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def setup_network(self, split=False):\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n+        self.is_network_split = False\n+        self.sync_all()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        h = node.help(command='getinfo')\n+        assert(h.startswith('getinfo\\n'))\n+\n+        assert_raises_jsonrpc(-8, node.help, random='getinfo')\n+\n+        h = node.getblockhash(index=0)\n+        node.getblock(hash=h)\n+\n+        assert_equal(node.echo(), [])\n+        assert_equal(node.echo(arg0=0,arg9=9), [0] + [None]*8 + [9])",
    "path": "qa/rpc-tests/rpcnamedargs.py",
    "position": null,
    "original_position": 46,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "e4aa9b3bf140d95e4abcf002a5c703340f390a82",
    "user": {
      "login": "mrbandrews",
      "id": 7504522,
      "node_id": "MDQ6VXNlcjc1MDQ1MjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7504522?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrbandrews",
      "html_url": "https://github.com/mrbandrews",
      "followers_url": "https://api.github.com/users/mrbandrews/followers",
      "following_url": "https://api.github.com/users/mrbandrews/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrbandrews/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrbandrews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrbandrews/subscriptions",
      "organizations_url": "https://api.github.com/users/mrbandrews/orgs",
      "repos_url": "https://api.github.com/users/mrbandrews/repos",
      "events_url": "https://api.github.com/users/mrbandrews/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrbandrews/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I added the test: \nassert_equal(node.echo(arg0=0,arg3=3,arg9=9), [0] + [None]_2 + [3] + [None]_5 + [9])\nVerified that with the code as is it fails, but with instagibbs fix of hole=0 it succeeds. \n",
    "created_at": "2016-11-14T17:07:18Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r87845478",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87845478"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r87845478"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87845478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 46,
    "side": "RIGHT",
    "in_reply_to_id": 85944558
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87977216",
    "pull_request_review_id": 8564754,
    "id": 87977216,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3OTc3MjE2",
    "diff_hunk": "@@ -418,6 +419,47 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];\n+    }\n+    // Process expected parameters.\n+    int hole = 0;\n+    for (const std::string &argName: argNames) {\n+        auto fr = argsIn.find(argName);\n+        if (fr != argsIn.end()) {\n+            for (int i = 0; i < hole; ++i) {",
    "path": "src/rpc/server.cpp",
    "position": 65,
    "original_position": 65,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "0e2825c3779883b2d20d689575cbe4c061d7a92c",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, good catch, thanks!\n",
    "created_at": "2016-11-15T09:31:00Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r87977216",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87977216"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r87977216"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/87977216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 445,
    "original_line": 443,
    "side": "RIGHT",
    "in_reply_to_id": 85943516
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657352",
    "pull_request_review_id": 10202405,
    "id": 89657352,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NjU3MzUy",
    "diff_hunk": "@@ -506,16 +506,16 @@ UniValue echo(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"control\",            \"getinfo\",                &getinfo,                true  }, /* uses wallet if enabled */\n-    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true  },\n-    { \"util\",               \"validateaddress\",        &validateaddress,        true  }, /* uses wallet if enabled */\n-    { \"util\",               \"createmultisig\",         &createmultisig,         true  },\n-    { \"util\",               \"verifymessage\",          &verifymessage,          true  },\n-    { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, true  },\n+    { \"control\",            \"getinfo\",                &getinfo,                true,  {} }, /* uses wallet if enabled */\n+    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true,  {} },\n+    { \"util\",               \"validateaddress\",        &validateaddress,        true,  {\"bitcoinaddress\"} }, /* uses wallet if enabled */",
    "path": "src/rpc/misc.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "966d33c9c8380de5f4fdf02c16d3dc62bacce7cf",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is referred to as \"address\" in the help",
    "created_at": "2016-11-25T21:12:04Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657352",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657352"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657352"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 511,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657359",
    "pull_request_review_id": 10202405,
    "id": 89657359,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NjU3MzU5",
    "diff_hunk": "@@ -506,16 +506,16 @@ UniValue echo(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"control\",            \"getinfo\",                &getinfo,                true  }, /* uses wallet if enabled */\n-    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true  },\n-    { \"util\",               \"validateaddress\",        &validateaddress,        true  }, /* uses wallet if enabled */\n-    { \"util\",               \"createmultisig\",         &createmultisig,         true  },\n-    { \"util\",               \"verifymessage\",          &verifymessage,          true  },\n-    { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, true  },\n+    { \"control\",            \"getinfo\",                &getinfo,                true,  {} }, /* uses wallet if enabled */\n+    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true,  {} },\n+    { \"util\",               \"validateaddress\",        &validateaddress,        true,  {\"bitcoinaddress\"} }, /* uses wallet if enabled */\n+    { \"util\",               \"createmultisig\",         &createmultisig,         true,  {\"nrequired\",\"keys\"} },\n+    { \"util\",               \"verifymessage\",          &verifymessage,          true,  {\"bitcoinaddress\",\"signature\",\"message\"} },",
    "path": "src/rpc/misc.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "966d33c9c8380de5f4fdf02c16d3dc62bacce7cf",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "same",
    "created_at": "2016-11-25T21:12:16Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657359",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657359"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657359"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 513,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657634",
    "pull_request_review_id": 10202405,
    "id": 89657634,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NjU3NjM0",
    "diff_hunk": "@@ -595,18 +597,18 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true  },\n-    { \"network\",            \"ping\",                   &ping,                   true  },\n-    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true  },\n-    { \"network\",            \"addnode\",                &addnode,                true  },\n-    { \"network\",            \"disconnectnode\",         &disconnectnode,         true  },\n-    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true  },\n-    { \"network\",            \"getnettotals\",           &getnettotals,           true  },\n-    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true  },\n-    { \"network\",            \"setban\",                 &setban,                 true  },\n-    { \"network\",            \"listbanned\",             &listbanned,             true  },\n-    { \"network\",            \"clearbanned\",            &clearbanned,            true  },\n-    { \"network\",            \"setnetworkactive\",       &setnetworkactive,       true, },\n+    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true,  {} },\n+    { \"network\",            \"ping\",                   &ping,                   true,  {} },\n+    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true,  {} },\n+    { \"network\",            \"addnode\",                &addnode,                true,  {\"node\",\"command\"} },",
    "path": "src/rpc/net.cpp",
    "position": 43,
    "original_position": 30,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "9e73f62fe32aefab75b8c227028bb9c51020320a",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "maybe these should be \"address\" rather than \"node\", so that in the future we can differentiate? (nodeid, subnet, etc)",
    "created_at": "2016-11-25T21:18:13Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657634",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657634"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657634"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657634/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 604,
    "original_line": 603,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657946",
    "pull_request_review_id": 10202405,
    "id": 89657946,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NjU3OTQ2",
    "diff_hunk": "@@ -595,18 +597,18 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true  },\n-    { \"network\",            \"ping\",                   &ping,                   true  },\n-    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true  },\n-    { \"network\",            \"addnode\",                &addnode,                true  },\n-    { \"network\",            \"disconnectnode\",         &disconnectnode,         true  },\n-    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true  },\n-    { \"network\",            \"getnettotals\",           &getnettotals,           true  },\n-    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true  },\n-    { \"network\",            \"setban\",                 &setban,                 true  },\n-    { \"network\",            \"listbanned\",             &listbanned,             true  },\n-    { \"network\",            \"clearbanned\",            &clearbanned,            true  },\n-    { \"network\",            \"setnetworkactive\",       &setnetworkactive,       true, },\n+    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true,  {} },\n+    { \"network\",            \"ping\",                   &ping,                   true,  {} },\n+    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true,  {} },\n+    { \"network\",            \"addnode\",                &addnode,                true,  {\"node\",\"command\"} },\n+    { \"network\",            \"disconnectnode\",         &disconnectnode,         true,  {\"node\"} },\n+    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true,  {\"node\"} },\n+    { \"network\",            \"getnettotals\",           &getnettotals,           true,  {} },\n+    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true,  {} },\n+    { \"network\",            \"setban\",                 &setban,                 true,  {\"ip\", \"command\", \"bantime\", \"absolute\"} },",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "9e73f62fe32aefab75b8c227028bb9c51020320a",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "probably better to call this subnet",
    "created_at": "2016-11-25T21:25:04Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657946",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657946"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89657946"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89657946/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 608,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89658355",
    "pull_request_review_id": 10202405,
    "id": 89658355,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NjU4MzU1",
    "diff_hunk": "@@ -902,19 +902,19 @@ UniValue estimatesmartpriority(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"mining\",             \"getnetworkhashps\",       &getnetworkhashps,       true  },\n-    { \"mining\",             \"getmininginfo\",          &getmininginfo,          true  },\n-    { \"mining\",             \"prioritisetransaction\",  &prioritisetransaction,  true  },\n-    { \"mining\",             \"getblocktemplate\",       &getblocktemplate,       true  },\n-    { \"mining\",             \"submitblock\",            &submitblock,            true  },\n-\n-    { \"generating\",         \"generate\",               &generate,               true  },\n-    { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      true  },\n-\n-    { \"util\",               \"estimatefee\",            &estimatefee,            true  },\n-    { \"util\",               \"estimatepriority\",       &estimatepriority,       true  },\n-    { \"util\",               \"estimatesmartfee\",       &estimatesmartfee,       true  },\n-    { \"util\",               \"estimatesmartpriority\",  &estimatesmartpriority,  true  },\n+    { \"mining\",             \"getnetworkhashps\",       &getnetworkhashps,       true,  {\"blocks\",\"height\"} },\n+    { \"mining\",             \"getmininginfo\",          &getmininginfo,          true,  {} },\n+    { \"mining\",             \"prioritisetransaction\",  &prioritisetransaction,  true,  {\"txid\",\"priority_delta\",\"fee_delta\"} },\n+    { \"mining\",             \"getblocktemplate\",       &getblocktemplate,       true,  {\"template_request\"} },\n+    { \"mining\",             \"submitblock\",            &submitblock,            true,  {\"hexdata\",\"parameters\"} },\n+\n+    { \"generating\",         \"generate\",               &generate,               true,  {\"numblocks\",\"maxtries\"} },\n+    { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      true,  {\"numblocks\",\"address\",\"maxtries\"} },\n+",
    "path": "src/rpc/mining.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "67fee407a82bcf4365e5c710398f54ead764dc30",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "unify nblocks/numblocks?",
    "created_at": "2016-11-25T21:36:23Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89658355",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89658355"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89658355"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89658355/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 913,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89659796",
    "pull_request_review_id": 10202405,
    "id": 89659796,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NjU5Nzk2",
    "diff_hunk": "@@ -171,3 +191,33 @@ UniValue RPCConvertValues(const std::string &strMethod, const std::vector<std::s\n \n     return params;\n }\n+\n+UniValue RPCConvertNamedValues(const std::string &strMethod, const std::vector<std::string> &strParams)\n+{\n+    UniValue params(UniValue::VOBJ);\n+\n+    for (const std::string &s: strParams) {\n+        unsigned ptr = 0;\n+        if (s.size() <= ptr || s[ptr] != '-') {\n+            throw(std::runtime_error(\"Non-named or empty argument found\"));\n+        }\n+        ptr += 1;\n+        if (s.size() > ptr && s[ptr] == '-') // Allow \"--opt\" as well as \"-opt\"\n+            ptr += 1;\n+        size_t pos = s.find(\"=\", ptr);\n+        if (pos == std::string::npos) {\n+            throw(std::runtime_error(\"No '=' in named argument, a value needs to be provided for every argument\"));\n+        }\n+        std::string name = s.substr(ptr, pos-ptr);\n+        std::string value = s.substr(pos+1);",
    "path": "src/rpc/client.cpp",
    "position": null,
    "original_position": 259,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "76973f42f8bc377cede1f279d39cc9d50693a1c9",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "should probably make sure that ```!name.empty() && !value.empty()``` for good measure.",
    "created_at": "2016-11-25T22:18:34Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89659796",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89659796"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89659796"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89659796/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 212,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89660995",
    "pull_request_review_id": 10202405,
    "id": 89660995,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NjYwOTk1",
    "diff_hunk": "@@ -288,7 +288,26 @@ int CommandLineRPC(int argc, char *argv[])\n         if (args.size() < 1)\n             throw runtime_error(\"too few parameters (need at least command)\");\n         std::string strMethod = args[0];\n-        UniValue params = RPCConvertValues(strMethod, std::vector<std::string>(args.begin()+1, args.end()));\n+        args.erase(args.begin());\n+\n+        // Check for named arguments\n+        bool haveNamed = false;\n+        bool havePositional = false;\n+        for (const std::string &s: args) {\n+            if (s.size() >= 1 && s[0] == '-')\n+                haveNamed = true; // Have named arguments\n+            else\n+                havePositional = true; // Have positional arguments\n+        }\n+\n+        UniValue params;\n+        if (haveNamed && havePositional) {\n+            throw runtime_error(\"cannot have both named and positional arguments, did you mean to pass arguments before the command?\");\n+        } else if(haveNamed) {\n+            params = RPCConvertNamedValues(strMethod, args);",
    "path": "src/bitcoin-cli.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "76973f42f8bc377cede1f279d39cc9d50693a1c9",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Mixing args here with GetBoolArg/GetArg is a little scary. If some command took a (for example) \"-version=foo\" argument, I believe it would be swallowed by line 81 instead?",
    "created_at": "2016-11-25T22:58:16Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89660995",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89660995"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89660995"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89660995/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 307,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666033",
    "pull_request_review_id": 10210251,
    "id": 89666033,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NjY2MDMz",
    "diff_hunk": "@@ -288,7 +288,26 @@ int CommandLineRPC(int argc, char *argv[])\n         if (args.size() < 1)\n             throw runtime_error(\"too few parameters (need at least command)\");\n         std::string strMethod = args[0];\n-        UniValue params = RPCConvertValues(strMethod, std::vector<std::string>(args.begin()+1, args.end()));\n+        args.erase(args.begin());\n+\n+        // Check for named arguments\n+        bool haveNamed = false;\n+        bool havePositional = false;\n+        for (const std::string &s: args) {\n+            if (s.size() >= 1 && s[0] == '-')\n+                haveNamed = true; // Have named arguments\n+            else\n+                havePositional = true; // Have positional arguments\n+        }\n+\n+        UniValue params;\n+        if (haveNamed && havePositional) {\n+            throw runtime_error(\"cannot have both named and positional arguments, did you mean to pass arguments before the command?\");\n+        } else if(haveNamed) {\n+            params = RPCConvertNamedValues(strMethod, args);",
    "path": "src/bitcoin-cli.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "76973f42f8bc377cede1f279d39cc9d50693a1c9",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ParseParameters stops at the first argument that doesn't start with `-`, which happens to be the command. This starts after the command. So unless I miss something they will never interfere.",
    "created_at": "2016-11-26T05:32:41Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666033",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666033"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666033"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 307,
    "side": "RIGHT",
    "in_reply_to_id": 89660995
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666056",
    "pull_request_review_id": 10210270,
    "id": 89666056,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NjY2MDU2",
    "diff_hunk": "@@ -171,3 +191,33 @@ UniValue RPCConvertValues(const std::string &strMethod, const std::vector<std::s\n \n     return params;\n }\n+\n+UniValue RPCConvertNamedValues(const std::string &strMethod, const std::vector<std::string> &strParams)\n+{\n+    UniValue params(UniValue::VOBJ);\n+\n+    for (const std::string &s: strParams) {\n+        unsigned ptr = 0;\n+        if (s.size() <= ptr || s[ptr] != '-') {\n+            throw(std::runtime_error(\"Non-named or empty argument found\"));\n+        }\n+        ptr += 1;\n+        if (s.size() > ptr && s[ptr] == '-') // Allow \"--opt\" as well as \"-opt\"\n+            ptr += 1;\n+        size_t pos = s.find(\"=\", ptr);\n+        if (pos == std::string::npos) {\n+            throw(std::runtime_error(\"No '=' in named argument, a value needs to be provided for every argument\"));\n+        }\n+        std::string name = s.substr(ptr, pos-ptr);\n+        std::string value = s.substr(pos+1);",
    "path": "src/rpc/client.cpp",
    "position": null,
    "original_position": 259,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "76973f42f8bc377cede1f279d39cc9d50693a1c9",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In that case it should do the expected thing: send an empty name or value.\r\nAn empty value is perfectly acceptable if you want to send an empty string.\r\nAn empty name is a bit strange, agreed, but it gets caught server-side as an unknown argument.",
    "created_at": "2016-11-26T05:34:46Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666056",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666056"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666056"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666056/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 212,
    "side": "RIGHT",
    "in_reply_to_id": 89659796
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666083",
    "pull_request_review_id": 10210296,
    "id": 89666083,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NjY2MDgz",
    "diff_hunk": "@@ -595,18 +597,18 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true  },\n-    { \"network\",            \"ping\",                   &ping,                   true  },\n-    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true  },\n-    { \"network\",            \"addnode\",                &addnode,                true  },\n-    { \"network\",            \"disconnectnode\",         &disconnectnode,         true  },\n-    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true  },\n-    { \"network\",            \"getnettotals\",           &getnettotals,           true  },\n-    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true  },\n-    { \"network\",            \"setban\",                 &setban,                 true  },\n-    { \"network\",            \"listbanned\",             &listbanned,             true  },\n-    { \"network\",            \"clearbanned\",            &clearbanned,            true  },\n-    { \"network\",            \"setnetworkactive\",       &setnetworkactive,       true, },\n+    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true,  {} },\n+    { \"network\",            \"ping\",                   &ping,                   true,  {} },\n+    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true,  {} },\n+    { \"network\",            \"addnode\",                &addnode,                true,  {\"node\",\"command\"} },",
    "path": "src/rpc/net.cpp",
    "position": 43,
    "original_position": 30,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "9e73f62fe32aefab75b8c227028bb9c51020320a",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "'address' is already used for bitcoin addresses, so I'd prefer not overloading that for network addresses. Other suggestions are welcome, though",
    "created_at": "2016-11-26T05:37:18Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666083",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666083"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666083"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 604,
    "original_line": 603,
    "side": "RIGHT",
    "in_reply_to_id": 89657634
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666110",
    "pull_request_review_id": 10210324,
    "id": 89666110,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NjY2MTEw",
    "diff_hunk": "@@ -506,16 +506,16 @@ UniValue echo(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"control\",            \"getinfo\",                &getinfo,                true  }, /* uses wallet if enabled */\n-    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true  },\n-    { \"util\",               \"validateaddress\",        &validateaddress,        true  }, /* uses wallet if enabled */\n-    { \"util\",               \"createmultisig\",         &createmultisig,         true  },\n-    { \"util\",               \"verifymessage\",          &verifymessage,          true  },\n-    { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, true  },\n+    { \"control\",            \"getinfo\",                &getinfo,                true,  {} }, /* uses wallet if enabled */\n+    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true,  {} },\n+    { \"util\",               \"validateaddress\",        &validateaddress,        true,  {\"bitcoinaddress\"} }, /* uses wallet if enabled */",
    "path": "src/rpc/misc.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "966d33c9c8380de5f4fdf02c16d3dc62bacce7cf",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "address/privkey/pubkey usage is made consistent in a later commit:\r\nhttps://github.com/bitcoin/bitcoin/pull/8811/commits/8b6fd17692b0a402858ef313d6b15e0d086db2c2",
    "created_at": "2016-11-26T05:39:33Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666110",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666110"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666110"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666110/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 511,
    "side": "RIGHT",
    "in_reply_to_id": 89657352
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666112",
    "pull_request_review_id": 10210327,
    "id": 89666112,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NjY2MTEy",
    "diff_hunk": "@@ -595,18 +597,18 @@ UniValue setnetworkactive(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true  },\n-    { \"network\",            \"ping\",                   &ping,                   true  },\n-    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true  },\n-    { \"network\",            \"addnode\",                &addnode,                true  },\n-    { \"network\",            \"disconnectnode\",         &disconnectnode,         true  },\n-    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true  },\n-    { \"network\",            \"getnettotals\",           &getnettotals,           true  },\n-    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true  },\n-    { \"network\",            \"setban\",                 &setban,                 true  },\n-    { \"network\",            \"listbanned\",             &listbanned,             true  },\n-    { \"network\",            \"clearbanned\",            &clearbanned,            true  },\n-    { \"network\",            \"setnetworkactive\",       &setnetworkactive,       true, },\n+    { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true,  {} },\n+    { \"network\",            \"ping\",                   &ping,                   true,  {} },\n+    { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true,  {} },\n+    { \"network\",            \"addnode\",                &addnode,                true,  {\"node\",\"command\"} },\n+    { \"network\",            \"disconnectnode\",         &disconnectnode,         true,  {\"node\"} },\n+    { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true,  {\"node\"} },\n+    { \"network\",            \"getnettotals\",           &getnettotals,           true,  {} },\n+    { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true,  {} },\n+    { \"network\",            \"setban\",                 &setban,                 true,  {\"ip\", \"command\", \"bantime\", \"absolute\"} },",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "9e73f62fe32aefab75b8c227028bb9c51020320a",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Will do",
    "created_at": "2016-11-26T05:39:45Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666112",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666112"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666112"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666112/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 608,
    "side": "RIGHT",
    "in_reply_to_id": 89657946
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666114",
    "pull_request_review_id": 10210329,
    "id": 89666114,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NjY2MTE0",
    "diff_hunk": "@@ -902,19 +902,19 @@ UniValue estimatesmartpriority(const JSONRPCRequest& request)\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n-    { \"mining\",             \"getnetworkhashps\",       &getnetworkhashps,       true  },\n-    { \"mining\",             \"getmininginfo\",          &getmininginfo,          true  },\n-    { \"mining\",             \"prioritisetransaction\",  &prioritisetransaction,  true  },\n-    { \"mining\",             \"getblocktemplate\",       &getblocktemplate,       true  },\n-    { \"mining\",             \"submitblock\",            &submitblock,            true  },\n-\n-    { \"generating\",         \"generate\",               &generate,               true  },\n-    { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      true  },\n-\n-    { \"util\",               \"estimatefee\",            &estimatefee,            true  },\n-    { \"util\",               \"estimatepriority\",       &estimatepriority,       true  },\n-    { \"util\",               \"estimatesmartfee\",       &estimatesmartfee,       true  },\n-    { \"util\",               \"estimatesmartpriority\",  &estimatesmartpriority,  true  },\n+    { \"mining\",             \"getnetworkhashps\",       &getnetworkhashps,       true,  {\"blocks\",\"height\"} },\n+    { \"mining\",             \"getmininginfo\",          &getmininginfo,          true,  {} },\n+    { \"mining\",             \"prioritisetransaction\",  &prioritisetransaction,  true,  {\"txid\",\"priority_delta\",\"fee_delta\"} },\n+    { \"mining\",             \"getblocktemplate\",       &getblocktemplate,       true,  {\"template_request\"} },\n+    { \"mining\",             \"submitblock\",            &submitblock,            true,  {\"hexdata\",\"parameters\"} },\n+\n+    { \"generating\",         \"generate\",               &generate,               true,  {\"numblocks\",\"maxtries\"} },\n+    { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      true,  {\"numblocks\",\"address\",\"maxtries\"} },\n+",
    "path": "src/rpc/mining.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "67fee407a82bcf4365e5c710398f54ead764dc30",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Will do",
    "created_at": "2016-11-26T05:39:51Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666114",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666114"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666114"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 913,
    "side": "RIGHT",
    "in_reply_to_id": 89658355
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666834",
    "pull_request_review_id": 10210907,
    "id": 89666834,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NjY2ODM0",
    "diff_hunk": "@@ -288,7 +288,26 @@ int CommandLineRPC(int argc, char *argv[])\n         if (args.size() < 1)\n             throw runtime_error(\"too few parameters (need at least command)\");\n         std::string strMethod = args[0];\n-        UniValue params = RPCConvertValues(strMethod, std::vector<std::string>(args.begin()+1, args.end()));\n+        args.erase(args.begin());\n+\n+        // Check for named arguments\n+        bool haveNamed = false;\n+        bool havePositional = false;\n+        for (const std::string &s: args) {\n+            if (s.size() >= 1 && s[0] == '-')\n+                haveNamed = true; // Have named arguments\n+            else\n+                havePositional = true; // Have positional arguments\n+        }\n+\n+        UniValue params;\n+        if (haveNamed && havePositional) {\n+            throw runtime_error(\"cannot have both named and positional arguments, did you mean to pass arguments before the command?\");\n+        } else if(haveNamed) {\n+            params = RPCConvertNamedValues(strMethod, args);",
    "path": "src/bitcoin-cli.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "76973f42f8bc377cede1f279d39cc9d50693a1c9",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah, that's the part I was missing, thanks. Maybe a comment to that effect to remind me next time I have to ask? :)",
    "created_at": "2016-11-26T06:45:21Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666834",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666834"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89666834"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89666834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 307,
    "side": "RIGHT",
    "in_reply_to_id": 89660995
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89668397",
    "pull_request_review_id": 10212415,
    "id": 89668397,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NjY4Mzk3",
    "diff_hunk": "@@ -288,7 +288,26 @@ int CommandLineRPC(int argc, char *argv[])\n         if (args.size() < 1)\n             throw runtime_error(\"too few parameters (need at least command)\");\n         std::string strMethod = args[0];\n-        UniValue params = RPCConvertValues(strMethod, std::vector<std::string>(args.begin()+1, args.end()));\n+        args.erase(args.begin());\n+\n+        // Check for named arguments\n+        bool haveNamed = false;\n+        bool havePositional = false;\n+        for (const std::string &s: args) {\n+            if (s.size() >= 1 && s[0] == '-')\n+                haveNamed = true; // Have named arguments\n+            else\n+                havePositional = true; // Have positional arguments\n+        }\n+\n+        UniValue params;\n+        if (haveNamed && havePositional) {\n+            throw runtime_error(\"cannot have both named and positional arguments, did you mean to pass arguments before the command?\");\n+        } else if(haveNamed) {\n+            params = RPCConvertNamedValues(strMethod, args);",
    "path": "src/bitcoin-cli.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "76973f42f8bc377cede1f279d39cc9d50693a1c9",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added a comment :)",
    "created_at": "2016-11-26T09:09:28Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89668397",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89668397"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r89668397"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/89668397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 307,
    "side": "RIGHT",
    "in_reply_to_id": 89660995
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90891244",
    "pull_request_review_id": 11404565,
    "id": 90891244,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwODkxMjQ0",
    "diff_hunk": "@@ -286,7 +286,30 @@ int CommandLineRPC(int argc, char *argv[])\n         if (args.size() < 1)\n             throw std::runtime_error(\"too few parameters (need at least command)\");\n         std::string strMethod = args[0];\n-        UniValue params = RPCConvertValues(strMethod, std::vector<std::string>(args.begin()+1, args.end()));\n+        args.erase(args.begin()); // Remove trailing method name from arguments vector\n+\n+        // Check for named arguments.\n+        // Note that ParseParameters stops at the first argument that doesn't\n+        // start with a switch character, which happens to be the method. This\n+        // starts scanning after the method, so arguments before and after the\n+        // command will never interfere.\n+        bool haveNamed = false;\n+        bool havePositional = false;\n+        for (const std::string &s: args) {\n+            if (s.size() >= 1 && IsSwitchChar(s[0]))\n+                haveNamed = true; // Have named arguments\n+            else\n+                havePositional = true; // Have positional arguments\n+        }\n+\n+        UniValue params;\n+        if (haveNamed && havePositional) {\n+            throw runtime_error(\"cannot have both named and positional arguments, did you mean to pass arguments before the command?\");",
    "path": "src/bitcoin-cli.cpp",
    "position": null,
    "original_position": 23,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "dd9b157f0369760788a5a6ec7bdea829470346a8",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "needs to be `std::runtime_error` since we're not using namespace std",
    "created_at": "2016-12-05T15:48:13Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r90891244",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90891244"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r90891244"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90891244/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 307,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90894145",
    "pull_request_review_id": 11407412,
    "id": 90894145,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwODk0MTQ1",
    "diff_hunk": "@@ -286,7 +286,30 @@ int CommandLineRPC(int argc, char *argv[])\n         if (args.size() < 1)\n             throw std::runtime_error(\"too few parameters (need at least command)\");\n         std::string strMethod = args[0];\n-        UniValue params = RPCConvertValues(strMethod, std::vector<std::string>(args.begin()+1, args.end()));\n+        args.erase(args.begin()); // Remove trailing method name from arguments vector\n+\n+        // Check for named arguments.\n+        // Note that ParseParameters stops at the first argument that doesn't\n+        // start with a switch character, which happens to be the method. This\n+        // starts scanning after the method, so arguments before and after the\n+        // command will never interfere.\n+        bool haveNamed = false;\n+        bool havePositional = false;\n+        for (const std::string &s: args) {\n+            if (s.size() >= 1 && IsSwitchChar(s[0]))",
    "path": "src/bitcoin-cli.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "dd9b157f0369760788a5a6ec7bdea829470346a8",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I believe this breaks passing in negative numbers as a positional argument. For example, the following cli command is valid prior to this commit:\r\n\r\n`bitcoin-cli getnetworkhashps -1`\r\n\r\nand returns the estimated network hashes per second in the current difficulty window. After this commit, the method fails:\r\n\r\n```\r\nvagrant@vagrant-ubuntu-trusty-64:~$ bitcoin-cli getnetworkhashps -1\r\nerror: No '=' in named argument, a value needs to be provided for every argument\r\n```\r\n\r\nI haven't checked whether there are arguments that accept negative numbers in other RPC methods.",
    "created_at": "2016-12-05T16:00:23Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r90894145",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90894145"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r90894145"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90894145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 299,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90980630",
    "pull_request_review_id": 11493524,
    "id": 90980630,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwOTgwNjMw",
    "diff_hunk": "@@ -20,111 +20,130 @@ class CRPCConvertParam\n public:\n     std::string methodName; //!< method whose params want conversion\n     int paramIdx;           //!< 0-based idx of param to convert\n+    std::string paramName;  //!< parameter name\n };\n \n+/**\n+ * Specifiy a (method, idx, name) here if the argument is a non-string RPC\n+ * argument and needs to be converted from JSON.\n+ *\n+ * @note Parameter indexes start from 0.\n+ */\n static const CRPCConvertParam vRPCConvertParams[] =\n {\n-    { \"stop\", 0 },\n-    { \"setmocktime\", 0 },\n-    { \"generate\", 0 },\n-    { \"generate\", 1 },\n-    { \"generatetoaddress\", 0 },\n-    { \"generatetoaddress\", 2 },\n-    { \"getnetworkhashps\", 0 },\n-    { \"getnetworkhashps\", 1 },\n-    { \"sendtoaddress\", 1 },\n-    { \"sendtoaddress\", 4 },\n-    { \"settxfee\", 0 },\n-    { \"getreceivedbyaddress\", 1 },\n-    { \"getreceivedbyaccount\", 1 },\n-    { \"listreceivedbyaddress\", 0 },\n-    { \"listreceivedbyaddress\", 1 },\n-    { \"listreceivedbyaddress\", 2 },\n-    { \"listreceivedbyaccount\", 0 },\n-    { \"listreceivedbyaccount\", 1 },\n-    { \"listreceivedbyaccount\", 2 },\n-    { \"getbalance\", 1 },\n-    { \"getbalance\", 2 },\n-    { \"getblockhash\", 0 },\n-    { \"waitforblockheight\", 0 },\n-    { \"waitforblockheight\", 1 },\n-    { \"waitforblock\", 1 },\n-    { \"waitforblock\", 2 },\n-    { \"waitfornewblock\", 0 },\n-    { \"waitfornewblock\", 1 },\n-    { \"move\", 2 },\n-    { \"move\", 3 },\n-    { \"sendfrom\", 2 },\n-    { \"sendfrom\", 3 },\n-    { \"listtransactions\", 1 },\n-    { \"listtransactions\", 2 },\n-    { \"listtransactions\", 3 },\n-    { \"listaccounts\", 0 },\n-    { \"listaccounts\", 1 },\n-    { \"walletpassphrase\", 1 },\n-    { \"getblocktemplate\", 0 },\n-    { \"listsinceblock\", 1 },\n-    { \"listsinceblock\", 2 },\n-    { \"sendmany\", 1 },\n-    { \"sendmany\", 2 },\n-    { \"sendmany\", 4 },\n-    { \"addmultisigaddress\", 0 },\n-    { \"addmultisigaddress\", 1 },\n-    { \"createmultisig\", 0 },\n-    { \"createmultisig\", 1 },\n-    { \"listunspent\", 0 },\n-    { \"listunspent\", 1 },\n-    { \"listunspent\", 2 },\n-    { \"getblock\", 1 },\n-    { \"getblockheader\", 1 },\n-    { \"gettransaction\", 1 },\n-    { \"getrawtransaction\", 1 },\n-    { \"createrawtransaction\", 0 },\n-    { \"createrawtransaction\", 1 },\n-    { \"createrawtransaction\", 2 },\n-    { \"signrawtransaction\", 1 },\n-    { \"signrawtransaction\", 2 },\n-    { \"sendrawtransaction\", 1 },\n-    { \"fundrawtransaction\", 1 },\n-    { \"gettxout\", 1 },\n-    { \"gettxout\", 2 },\n-    { \"gettxoutproof\", 0 },\n-    { \"lockunspent\", 0 },\n-    { \"lockunspent\", 1 },\n-    { \"importprivkey\", 2 },\n-    { \"importaddress\", 2 },\n-    { \"importaddress\", 3 },\n-    { \"importpubkey\", 2 },\n-    { \"importmulti\", 0 },\n-    { \"importmulti\", 1 },\n-    { \"verifychain\", 0 },\n-    { \"verifychain\", 1 },\n-    { \"keypoolrefill\", 0 },\n-    { \"getrawmempool\", 0 },\n-    { \"estimatefee\", 0 },\n-    { \"estimatepriority\", 0 },\n-    { \"estimatesmartfee\", 0 },\n-    { \"estimatesmartpriority\", 0 },\n-    { \"prioritisetransaction\", 1 },\n-    { \"prioritisetransaction\", 2 },\n-    { \"setban\", 2 },\n-    { \"setban\", 3 },\n-    { \"setnetworkactive\", 0 },\n-    { \"getmempoolancestors\", 1 },\n-    { \"getmempooldescendants\", 1 },\n+    { \"setmocktime\", 0, \"timestamp\" },\n+    { \"generate\", 0, \"blocks\" },\n+    { \"generate\", 1, \"maxtries\" },\n+    { \"generatetoaddress\", 0, \"blocks\" },\n+    { \"generatetoaddress\", 2, \"maxtries\" },\n+    { \"getnetworkhashps\", 0, \"blocks\" },\n+    { \"getnetworkhashps\", 1, \"height\" },\n+    { \"sendtoaddress\", 1, \"amount\" },\n+    { \"sendtoaddress\", 4, \"subtractfeefromamount\" },\n+    { \"settxfee\", 0, \"amount\" },\n+    { \"getreceivedbyaddress\", 1, \"minconf\" },\n+    { \"getreceivedbyaccount\", 1, \"minconf\" },\n+    { \"listreceivedbyaddress\", 0, \"minconf\" },\n+    { \"listreceivedbyaddress\", 1, \"include_empty\" },\n+    { \"listreceivedbyaddress\", 2, \"include_watchonly\" },\n+    { \"listreceivedbyaccount\", 0, \"minconf\" },\n+    { \"listreceivedbyaccount\", 1, \"include_empty\" },\n+    { \"listreceivedbyaccount\", 2, \"include_watchonly\" },\n+    { \"getbalance\", 1, \"minconf\" },\n+    { \"getbalance\", 2, \"include_watchonly\" },\n+    { \"getblockhash\", 0, \"index\" },\n+    { \"waitforblockheight\", 0, \"height\" },\n+    { \"waitforblockheight\", 1, \"timeout\" },\n+    { \"waitforblock\", 1, \"timeout\" },\n+    { \"waitfornewblock\", 0, \"timeout\" },\n+    { \"move\", 2, \"amount\" },\n+    { \"move\", 3, \"minconf\" },\n+    { \"sendfrom\", 2, \"amount\" },\n+    { \"sendfrom\", 3, \"minconf\" },\n+    { \"listtransactions\", 1, \"count\" },\n+    { \"listtransactions\", 2, \"from\" },\n+    { \"listtransactions\", 3, \"include_watchonly\" },\n+    { \"listaccounts\", 0, \"minconf\" },\n+    { \"listaccounts\", 1, \"include_watchonly\" },\n+    { \"walletpassphrase\", 1, \"timeout\" },\n+    { \"getblocktemplate\", 0, \"template_request\" },\n+    { \"listsinceblock\", 1, \"target_confirmations\" },\n+    { \"listsinceblock\", 2, \"include_watchonly\" },\n+    { \"sendmany\", 1, \"amounts\" },\n+    { \"sendmany\", 2, \"minconf\" },\n+    { \"sendmany\", 4, \"subtractfeefrom\" },\n+    { \"addmultisigaddress\", 0, \"nrequired\" },\n+    { \"addmultisigaddress\", 1, \"keys\" },\n+    { \"createmultisig\", 0, \"nrequired\" },\n+    { \"createmultisig\", 1, \"keys\" },\n+    { \"listunspent\", 0, \"minconf\" },\n+    { \"listunspent\", 1, \"maxconf\" },\n+    { \"listunspent\", 2, \"addresses\" },\n+    { \"getblock\", 1, \"verbose\" },\n+    { \"getblockheader\", 1, \"verbose\" },\n+    { \"gettransaction\", 1, \"include_watchonly\" },\n+    { \"getrawtransaction\", 1, \"verbose\" },\n+    { \"createrawtransaction\", 0, \"transactions\" },\n+    { \"createrawtransaction\", 1, \"outputs\" },\n+    { \"createrawtransaction\", 2, \"locktime\" },\n+    { \"signrawtransaction\", 1, \"prevtxs\" },\n+    { \"signrawtransaction\", 2, \"privkeys\" },\n+    { \"sendrawtransaction\", 1, \"allowhighfees\" },\n+    { \"fundrawtransaction\", 1, \"options\" },\n+    { \"gettxout\", 1, \"n\" },\n+    { \"gettxout\", 2, \"include_mempool\" },\n+    { \"gettxoutproof\", 0, \"txids\" },\n+    { \"lockunspent\", 0, \"unlock\" },\n+    { \"lockunspent\", 1, \"transactions\" },\n+    { \"importprivkey\", 2, \"rescan\" },\n+    { \"importaddress\", 2, \"rescan\" },\n+    { \"importaddress\", 3, \"p2sh\" },\n+    { \"importpubkey\", 2, \"rescan\" },\n+    { \"importmulti\", 0, \"requests\" },\n+    { \"importmulti\", 1, \"options\" },\n+    { \"verifychain\", 0, \"checklevel\" },\n+    { \"verifychain\", 1, \"blocks\" },",
    "path": "src/rpc/client.cpp",
    "position": null,
    "original_position": 174,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "dd9b157f0369760788a5a6ec7bdea829470346a8",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "should be nblocks",
    "created_at": "2016-12-05T23:29:47Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r90980630",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90980630"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r90980630"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/90980630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 105,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91019924",
    "pull_request_review_id": 11530437,
    "id": 91019924,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxMDE5OTI0",
    "diff_hunk": "@@ -20,111 +20,130 @@ class CRPCConvertParam\n public:\n     std::string methodName; //!< method whose params want conversion\n     int paramIdx;           //!< 0-based idx of param to convert\n+    std::string paramName;  //!< parameter name\n };\n \n+/**\n+ * Specifiy a (method, idx, name) here if the argument is a non-string RPC\n+ * argument and needs to be converted from JSON.\n+ *\n+ * @note Parameter indexes start from 0.\n+ */\n static const CRPCConvertParam vRPCConvertParams[] =\n {\n-    { \"stop\", 0 },\n-    { \"setmocktime\", 0 },\n-    { \"generate\", 0 },\n-    { \"generate\", 1 },\n-    { \"generatetoaddress\", 0 },\n-    { \"generatetoaddress\", 2 },\n-    { \"getnetworkhashps\", 0 },\n-    { \"getnetworkhashps\", 1 },\n-    { \"sendtoaddress\", 1 },\n-    { \"sendtoaddress\", 4 },\n-    { \"settxfee\", 0 },\n-    { \"getreceivedbyaddress\", 1 },\n-    { \"getreceivedbyaccount\", 1 },\n-    { \"listreceivedbyaddress\", 0 },\n-    { \"listreceivedbyaddress\", 1 },\n-    { \"listreceivedbyaddress\", 2 },\n-    { \"listreceivedbyaccount\", 0 },\n-    { \"listreceivedbyaccount\", 1 },\n-    { \"listreceivedbyaccount\", 2 },\n-    { \"getbalance\", 1 },\n-    { \"getbalance\", 2 },\n-    { \"getblockhash\", 0 },\n-    { \"waitforblockheight\", 0 },\n-    { \"waitforblockheight\", 1 },\n-    { \"waitforblock\", 1 },\n-    { \"waitforblock\", 2 },\n-    { \"waitfornewblock\", 0 },\n-    { \"waitfornewblock\", 1 },\n-    { \"move\", 2 },\n-    { \"move\", 3 },\n-    { \"sendfrom\", 2 },\n-    { \"sendfrom\", 3 },\n-    { \"listtransactions\", 1 },\n-    { \"listtransactions\", 2 },\n-    { \"listtransactions\", 3 },\n-    { \"listaccounts\", 0 },\n-    { \"listaccounts\", 1 },\n-    { \"walletpassphrase\", 1 },\n-    { \"getblocktemplate\", 0 },\n-    { \"listsinceblock\", 1 },\n-    { \"listsinceblock\", 2 },\n-    { \"sendmany\", 1 },\n-    { \"sendmany\", 2 },\n-    { \"sendmany\", 4 },\n-    { \"addmultisigaddress\", 0 },\n-    { \"addmultisigaddress\", 1 },\n-    { \"createmultisig\", 0 },\n-    { \"createmultisig\", 1 },\n-    { \"listunspent\", 0 },\n-    { \"listunspent\", 1 },\n-    { \"listunspent\", 2 },\n-    { \"getblock\", 1 },\n-    { \"getblockheader\", 1 },\n-    { \"gettransaction\", 1 },\n-    { \"getrawtransaction\", 1 },\n-    { \"createrawtransaction\", 0 },\n-    { \"createrawtransaction\", 1 },\n-    { \"createrawtransaction\", 2 },\n-    { \"signrawtransaction\", 1 },\n-    { \"signrawtransaction\", 2 },\n-    { \"sendrawtransaction\", 1 },\n-    { \"fundrawtransaction\", 1 },\n-    { \"gettxout\", 1 },\n-    { \"gettxout\", 2 },\n-    { \"gettxoutproof\", 0 },\n-    { \"lockunspent\", 0 },\n-    { \"lockunspent\", 1 },\n-    { \"importprivkey\", 2 },\n-    { \"importaddress\", 2 },\n-    { \"importaddress\", 3 },\n-    { \"importpubkey\", 2 },\n-    { \"importmulti\", 0 },\n-    { \"importmulti\", 1 },\n-    { \"verifychain\", 0 },\n-    { \"verifychain\", 1 },\n-    { \"keypoolrefill\", 0 },\n-    { \"getrawmempool\", 0 },\n-    { \"estimatefee\", 0 },\n-    { \"estimatepriority\", 0 },\n-    { \"estimatesmartfee\", 0 },\n-    { \"estimatesmartpriority\", 0 },\n-    { \"prioritisetransaction\", 1 },\n-    { \"prioritisetransaction\", 2 },\n-    { \"setban\", 2 },\n-    { \"setban\", 3 },\n-    { \"setnetworkactive\", 0 },\n-    { \"getmempoolancestors\", 1 },\n-    { \"getmempooldescendants\", 1 },\n+    { \"setmocktime\", 0, \"timestamp\" },\n+    { \"generate\", 0, \"blocks\" },\n+    { \"generate\", 1, \"maxtries\" },\n+    { \"generatetoaddress\", 0, \"blocks\" },\n+    { \"generatetoaddress\", 2, \"maxtries\" },\n+    { \"getnetworkhashps\", 0, \"blocks\" },\n+    { \"getnetworkhashps\", 1, \"height\" },\n+    { \"sendtoaddress\", 1, \"amount\" },\n+    { \"sendtoaddress\", 4, \"subtractfeefromamount\" },\n+    { \"settxfee\", 0, \"amount\" },\n+    { \"getreceivedbyaddress\", 1, \"minconf\" },\n+    { \"getreceivedbyaccount\", 1, \"minconf\" },\n+    { \"listreceivedbyaddress\", 0, \"minconf\" },\n+    { \"listreceivedbyaddress\", 1, \"include_empty\" },\n+    { \"listreceivedbyaddress\", 2, \"include_watchonly\" },\n+    { \"listreceivedbyaccount\", 0, \"minconf\" },\n+    { \"listreceivedbyaccount\", 1, \"include_empty\" },\n+    { \"listreceivedbyaccount\", 2, \"include_watchonly\" },\n+    { \"getbalance\", 1, \"minconf\" },\n+    { \"getbalance\", 2, \"include_watchonly\" },\n+    { \"getblockhash\", 0, \"index\" },\n+    { \"waitforblockheight\", 0, \"height\" },\n+    { \"waitforblockheight\", 1, \"timeout\" },\n+    { \"waitforblock\", 1, \"timeout\" },\n+    { \"waitfornewblock\", 0, \"timeout\" },\n+    { \"move\", 2, \"amount\" },\n+    { \"move\", 3, \"minconf\" },\n+    { \"sendfrom\", 2, \"amount\" },\n+    { \"sendfrom\", 3, \"minconf\" },\n+    { \"listtransactions\", 1, \"count\" },\n+    { \"listtransactions\", 2, \"from\" },\n+    { \"listtransactions\", 3, \"include_watchonly\" },\n+    { \"listaccounts\", 0, \"minconf\" },\n+    { \"listaccounts\", 1, \"include_watchonly\" },\n+    { \"walletpassphrase\", 1, \"timeout\" },\n+    { \"getblocktemplate\", 0, \"template_request\" },\n+    { \"listsinceblock\", 1, \"target_confirmations\" },\n+    { \"listsinceblock\", 2, \"include_watchonly\" },\n+    { \"sendmany\", 1, \"amounts\" },\n+    { \"sendmany\", 2, \"minconf\" },\n+    { \"sendmany\", 4, \"subtractfeefrom\" },\n+    { \"addmultisigaddress\", 0, \"nrequired\" },\n+    { \"addmultisigaddress\", 1, \"keys\" },\n+    { \"createmultisig\", 0, \"nrequired\" },\n+    { \"createmultisig\", 1, \"keys\" },\n+    { \"listunspent\", 0, \"minconf\" },\n+    { \"listunspent\", 1, \"maxconf\" },\n+    { \"listunspent\", 2, \"addresses\" },\n+    { \"getblock\", 1, \"verbose\" },\n+    { \"getblockheader\", 1, \"verbose\" },\n+    { \"gettransaction\", 1, \"include_watchonly\" },\n+    { \"getrawtransaction\", 1, \"verbose\" },\n+    { \"createrawtransaction\", 0, \"transactions\" },\n+    { \"createrawtransaction\", 1, \"outputs\" },\n+    { \"createrawtransaction\", 2, \"locktime\" },\n+    { \"signrawtransaction\", 1, \"prevtxs\" },\n+    { \"signrawtransaction\", 2, \"privkeys\" },\n+    { \"sendrawtransaction\", 1, \"allowhighfees\" },\n+    { \"fundrawtransaction\", 1, \"options\" },\n+    { \"gettxout\", 1, \"n\" },\n+    { \"gettxout\", 2, \"include_mempool\" },\n+    { \"gettxoutproof\", 0, \"txids\" },\n+    { \"lockunspent\", 0, \"unlock\" },\n+    { \"lockunspent\", 1, \"transactions\" },\n+    { \"importprivkey\", 2, \"rescan\" },\n+    { \"importaddress\", 2, \"rescan\" },\n+    { \"importaddress\", 3, \"p2sh\" },\n+    { \"importpubkey\", 2, \"rescan\" },\n+    { \"importmulti\", 0, \"requests\" },\n+    { \"importmulti\", 1, \"options\" },\n+    { \"verifychain\", 0, \"checklevel\" },\n+    { \"verifychain\", 1, \"blocks\" },",
    "path": "src/rpc/client.cpp",
    "position": null,
    "original_position": 174,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "dd9b157f0369760788a5a6ec7bdea829470346a8",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "will rename it",
    "created_at": "2016-12-06T06:40:54Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r91019924",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91019924"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r91019924"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91019924/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 105,
    "side": "RIGHT",
    "in_reply_to_id": 90980630
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91019951",
    "pull_request_review_id": 11530459,
    "id": 91019951,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxMDE5OTUx",
    "diff_hunk": "@@ -286,7 +286,30 @@ int CommandLineRPC(int argc, char *argv[])\n         if (args.size() < 1)\n             throw std::runtime_error(\"too few parameters (need at least command)\");\n         std::string strMethod = args[0];\n-        UniValue params = RPCConvertValues(strMethod, std::vector<std::string>(args.begin()+1, args.end()));\n+        args.erase(args.begin()); // Remove trailing method name from arguments vector\n+\n+        // Check for named arguments.\n+        // Note that ParseParameters stops at the first argument that doesn't\n+        // start with a switch character, which happens to be the method. This\n+        // starts scanning after the method, so arguments before and after the\n+        // command will never interfere.\n+        bool haveNamed = false;\n+        bool havePositional = false;\n+        for (const std::string &s: args) {\n+            if (s.size() >= 1 && IsSwitchChar(s[0]))\n+                haveNamed = true; // Have named arguments\n+            else\n+                havePositional = true; // Have positional arguments\n+        }\n+\n+        UniValue params;\n+        if (haveNamed && havePositional) {\n+            throw runtime_error(\"cannot have both named and positional arguments, did you mean to pass arguments before the command?\");",
    "path": "src/bitcoin-cli.cpp",
    "position": null,
    "original_position": 23,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "dd9b157f0369760788a5a6ec7bdea829470346a8",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "no longer, no",
    "created_at": "2016-12-06T06:41:15Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r91019951",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91019951"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r91019951"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/91019951/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 307,
    "side": "RIGHT",
    "in_reply_to_id": 90891244
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95069551",
    "pull_request_review_id": 15615440,
    "id": 95069551,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1MDY5NTUx",
    "diff_hunk": "@@ -420,6 +421,48 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];",
    "path": "src/rpc/server.cpp",
    "position": 58,
    "original_position": 58,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "6f1c76ae14c884c919db9ed720c7776aa0748244",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Because univalue does not check for duplicate keys, things are a bit weird. I'm not sure if there's much that this PR could/should do about this, but as long as we're adding more user-provided-json-parsing stuff I thought I'd mention it.",
    "created_at": "2017-01-08T01:27:27Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95069551",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95069551"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95069551"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95069551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 438,
    "original_line": 438,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95084461",
    "pull_request_review_id": 15615440,
    "id": 95084461,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1MDg0NDYx",
    "diff_hunk": "@@ -279,7 +279,7 @@ UniValue waitforblockheight(const JSONRPCRequest& request)\n             \"of the current tip.\\n\"\n             \"\\nReturns the current block on timeout or exit.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. block height to wait for (int)\\n\"\n+            \"1. height  (required, int) Block height to wait for (int)\\n\"",
    "path": "src/rpc/blockchain.cpp",
    "position": 22,
    "original_position": 16,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "65bf5d27c578e7560128a28af08fef57135ec841",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Docs here still say \"blockheight\" for one-line help but height for multi-line.",
    "created_at": "2017-01-08T17:36:09Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95084461",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95084461"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95084461"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95084461/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 282,
    "original_line": 282,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95085202",
    "pull_request_review_id": 15615440,
    "id": 95085202,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1MDg1MjAy",
    "diff_hunk": "@@ -171,3 +191,31 @@ UniValue RPCConvertValues(const std::string &strMethod, const std::vector<std::s\n \n     return params;\n }\n+\n+UniValue RPCConvertNamedValues(const std::string &strMethod, const std::vector<std::string> &strParams)\n+{\n+    UniValue params(UniValue::VOBJ);\n+\n+    for (const std::string &s: strParams) {\n+        size_t pos = s.find(\"=\");\n+        if (pos == std::string::npos) {\n+            throw(std::runtime_error(\"No '=' in named argument '\"+s+\"', this needs to be present for every argument (even if it is empty)\"));\n+        }\n+\n+        std::string name = s.substr(0, pos);\n+        std::string value = s.substr(pos+1);\n+\n+        // allow include-mempool=true as well as include_mempool=true",
    "path": "src/rpc/client.cpp",
    "position": null,
    "original_position": 255,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "65bf5d27c578e7560128a28af08fef57135ec841",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why?",
    "created_at": "2017-01-08T18:17:26Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95085202",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95085202"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95085202"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95085202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 208,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95107579",
    "pull_request_review_id": 15651620,
    "id": 95107579,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1MTA3NTc5",
    "diff_hunk": "@@ -420,6 +421,48 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];",
    "path": "src/rpc/server.cpp",
    "position": 58,
    "original_position": 58,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "6f1c76ae14c884c919db9ed720c7776aa0748244",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Almost no JSON implementation checks for duplicate keys. The usual behavior is that the last value assigned to the key takes precedence. I think that will happen here?",
    "created_at": "2017-01-09T06:57:21Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95107579",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95107579"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95107579"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95107579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 438,
    "original_line": 438,
    "side": "RIGHT",
    "in_reply_to_id": 95069551
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95107679",
    "pull_request_review_id": 15651709,
    "id": 95107679,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1MTA3Njc5",
    "diff_hunk": "@@ -171,3 +191,31 @@ UniValue RPCConvertValues(const std::string &strMethod, const std::vector<std::s\n \n     return params;\n }\n+\n+UniValue RPCConvertNamedValues(const std::string &strMethod, const std::vector<std::string> &strParams)\n+{\n+    UniValue params(UniValue::VOBJ);\n+\n+    for (const std::string &s: strParams) {\n+        size_t pos = s.find(\"=\");\n+        if (pos == std::string::npos) {\n+            throw(std::runtime_error(\"No '=' in named argument '\"+s+\"', this needs to be present for every argument (even if it is empty)\"));\n+        }\n+\n+        std::string name = s.substr(0, pos);\n+        std::string value = s.substr(pos+1);\n+\n+        // allow include-mempool=true as well as include_mempool=true",
    "path": "src/rpc/client.cpp",
    "position": null,
    "original_position": 255,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "65bf5d27c578e7560128a28af08fef57135ec841",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This was useful when the syntax was -arg=value. I guess it no longer really is now that plain name=value pairs are used.",
    "created_at": "2017-01-09T06:58:27Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95107679",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95107679"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95107679"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95107679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 208,
    "side": "RIGHT",
    "in_reply_to_id": 95085202
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95107724",
    "pull_request_review_id": 15651752,
    "id": 95107724,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1MTA3NzI0",
    "diff_hunk": "@@ -279,7 +279,7 @@ UniValue waitforblockheight(const JSONRPCRequest& request)\n             \"of the current tip.\\n\"\n             \"\\nReturns the current block on timeout or exit.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. block height to wait for (int)\\n\"\n+            \"1. height  (required, int) Block height to wait for (int)\\n\"",
    "path": "src/rpc/blockchain.cpp",
    "position": 22,
    "original_position": 16,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "65bf5d27c578e7560128a28af08fef57135ec841",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "OK, will make that consistent.",
    "created_at": "2017-01-09T06:58:37Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95107724",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95107724"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95107724"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95107724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 282,
    "original_line": 282,
    "side": "RIGHT",
    "in_reply_to_id": 95084461
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95198148",
    "pull_request_review_id": 15745405,
    "id": 95198148,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1MTk4MTQ4",
    "diff_hunk": "@@ -420,6 +421,48 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];",
    "path": "src/rpc/server.cpp",
    "position": 58,
    "original_position": 58,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "6f1c76ae14c884c919db9ed720c7776aa0748244",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, I believe the last one will take precedence. I'm ok with not fixing this, but it seems super strange.",
    "created_at": "2017-01-09T17:02:40Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95198148",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95198148"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95198148"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95198148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 438,
    "original_line": 438,
    "side": "RIGHT",
    "in_reply_to_id": 95069551
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95341492",
    "pull_request_review_id": 15891778,
    "id": 95341492,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk1MzQxNDky",
    "diff_hunk": "@@ -420,6 +421,48 @@ std::string JSONRPCExecBatch(const UniValue& vReq)\n     return ret.write() + \"\\n\";\n }\n \n+/**\n+ * Process named arguments into a vector of positional arguments, based on the\n+ * passed-in specification for the RPC call's arguments.\n+ */\n+static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, const std::vector<std::string>& argNames)\n+{\n+    JSONRPCRequest out = in;\n+    out.params = UniValue(UniValue::VARR);\n+    // Build a map of parameters, and remove ones that have been processed, so that we can throw a focused error if\n+    // there is an unknown one.\n+    const std::vector<std::string>& keys = in.params.getKeys();\n+    const std::vector<UniValue>& values = in.params.getValues();\n+    std::unordered_map<std::string, const UniValue*> argsIn;\n+    for (size_t i=0; i<keys.size(); ++i) {\n+        argsIn[keys[i]] = &values[i];",
    "path": "src/rpc/server.cpp",
    "position": 58,
    "original_position": 58,
    "commit_id": "4e7e2e16e4530be31bfc696a08bd3d1265e6f235",
    "original_commit_id": "6f1c76ae14c884c919db9ed720c7776aa0748244",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Well if it's any guide, python's JSON behaves exactly the same:\r\n```\r\n>>> json.loads('{\"a\":\"b\",\"a\":\"C\"}')\r\n{'a': 'C'}\r\n```\r\nWhat I would not mind is checking at the client side for duplicate arguments, as a user friendly feature, but I'm not going to do it in this pull.",
    "created_at": "2017-01-10T11:00:06Z",
    "updated_at": "2017-01-10T11:05:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95341492",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95341492"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/8811#discussion_r95341492"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/8811"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/95341492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 438,
    "original_line": 438,
    "side": "RIGHT",
    "in_reply_to_id": 95069551
  }
]