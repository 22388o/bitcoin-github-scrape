[
  {
    "sha": "a6739cc86827759c543bf81f5532ec46e40549c3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNjczOWNjODY4Mjc3NTljNTQzYmY4MWY1NTMyZWM0NmU0MDU0OWMz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-19T14:15:02Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-25T06:55:35Z"
      },
      "message": "rpc: Add specific error code for \"wallet already loaded\"",
      "tree": {
        "sha": "6b93a270848a33ce7ddfac0186830225b646a74f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b93a270848a33ce7ddfac0186830225b646a74f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6739cc86827759c543bf81f5532ec46e40549c3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6739cc86827759c543bf81f5532ec46e40549c3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a6739cc86827759c543bf81f5532ec46e40549c3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6739cc86827759c543bf81f5532ec46e40549c3/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "43f3ada27b835e6b198f9a669e4955d06f5c4d08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43f3ada27b835e6b198f9a669e4955d06f5c4d08",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/43f3ada27b835e6b198f9a669e4955d06f5c4d08"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 15,
      "deletions": 3
    },
    "files": [
      {
        "sha": "fc00a1efad8cd3d584d0738d8235c69bdc633a1b",
        "filename": "src/rpc/protocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6739cc86827759c543bf81f5532ec46e40549c3/src/rpc/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6739cc86827759c543bf81f5532ec46e40549c3/src/rpc/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.h?ref=a6739cc86827759c543bf81f5532ec46e40549c3",
        "patch": "@@ -79,6 +79,7 @@ enum RPCErrorCode\n     RPC_WALLET_ALREADY_UNLOCKED     = -17, //!< Wallet is already unlocked\n     RPC_WALLET_NOT_FOUND            = -18, //!< Invalid wallet specified\n     RPC_WALLET_NOT_SPECIFIED        = -19, //!< No wallet specified (error when there are multiple wallets loaded)\n+    RPC_WALLET_ALREADY_LOADED       = -35, //!< This same wallet is already loaded\n \n     //! Backwards compatible aliases\n     RPC_WALLET_INVALID_ACCOUNT_NAME = RPC_WALLET_INVALID_LABEL_NAME,"
      },
      {
        "sha": "e3631d5c6b7aa7d097349507376ed30c2a4907ef",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6739cc86827759c543bf81f5532ec46e40549c3/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6739cc86827759c543bf81f5532ec46e40549c3/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=a6739cc86827759c543bf81f5532ec46e40549c3",
        "patch": "@@ -2615,7 +2615,18 @@ static RPCHelpMan loadwallet()\n     if (!wallet) {\n         // Map bad format to not found, since bad format is returned when the\n         // wallet directory exists, but doesn't contain a data file.\n-        RPCErrorCode code = status == DatabaseStatus::FAILED_NOT_FOUND || status == DatabaseStatus::FAILED_BAD_FORMAT ? RPC_WALLET_NOT_FOUND : RPC_WALLET_ERROR;\n+        RPCErrorCode code = RPC_WALLET_ERROR;\n+        switch (status) {\n+            case DatabaseStatus::FAILED_NOT_FOUND:\n+            case DatabaseStatus::FAILED_BAD_FORMAT:\n+                code = RPC_WALLET_NOT_FOUND;\n+                break;\n+            case DatabaseStatus::FAILED_ALREADY_LOADED:\n+                code = RPC_WALLET_ALREADY_LOADED;\n+                break;\n+            default: // RPC_WALLET_ERROR is returned for all other cases.\n+                break;\n+        }\n         throw JSONRPCError(code, error.original);\n     }\n "
      },
      {
        "sha": "bf24b9c7b3bfe40b8da11059c470f5df79bb9f8e",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6739cc86827759c543bf81f5532ec46e40549c3/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6739cc86827759c543bf81f5532ec46e40549c3/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=a6739cc86827759c543bf81f5532ec46e40549c3",
        "patch": "@@ -304,12 +304,12 @@ def wallet_file(name):\n         if self.options.descriptors:\n             assert_raises_rpc_error(-4, \"Wallet file verification failed. SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\", self.nodes[0].loadwallet, wallet_names[0])\n         else:\n-            assert_raises_rpc_error(-4, \"Wallet file verification failed. Refusing to load database. Data file '{}' is already loaded.\".format(path), self.nodes[0].loadwallet, wallet_names[0])\n+            assert_raises_rpc_error(-35, \"Wallet file verification failed. Refusing to load database. Data file '{}' is already loaded.\".format(path), self.nodes[0].loadwallet, wallet_names[0])\n \n             # This tests the default wallet that BDB makes, so SQLite wallet doesn't need to test this\n             # Fail to load duplicate wallets by different ways (directory and filepath)\n             path = os.path.join(self.options.tmpdir, \"node0\", \"regtest\", \"wallets\", \"wallet.dat\")\n-            assert_raises_rpc_error(-4, \"Wallet file verification failed. Refusing to load database. Data file '{}' is already loaded.\".format(path), self.nodes[0].loadwallet, 'wallet.dat')\n+            assert_raises_rpc_error(-35, \"Wallet file verification failed. Refusing to load database. Data file '{}' is already loaded.\".format(path), self.nodes[0].loadwallet, 'wallet.dat')\n \n             # Only BDB doesn't open duplicate wallet files. SQLite does not have this limitation. While this may be desired in the future, it is not necessary\n             # Fail to load if one wallet is a copy of another"
      }
    ]
  }
]