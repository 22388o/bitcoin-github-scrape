[
  {
    "sha": "fa61c6f6a6fda3e68f3f84d27bcc996af861bcfd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTYxYzZmNmE2ZmRhM2U2OGYzZjg0ZDI3YmNjOTk2YWY4NjFiY2Zk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-11-15T16:03:49Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-11-15T16:02:41Z"
      },
      "message": "qa: Add multiwallet prefix test",
      "tree": {
        "sha": "975975710373859c476857ee39ced8305ab29a87",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/975975710373859c476857ee39ced8305ab29a87"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa61c6f6a6fda3e68f3f84d27bcc996af861bcfd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa61c6f6a6fda3e68f3f84d27bcc996af861bcfd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa61c6f6a6fda3e68f3f84d27bcc996af861bcfd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa61c6f6a6fda3e68f3f84d27bcc996af861bcfd/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "927a1d7d088e52aa079682e1d4f514222c0a2069",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/927a1d7d088e52aa079682e1d4f514222c0a2069",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/927a1d7d088e52aa079682e1d4f514222c0a2069"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 8,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b3a7b8d3b5823d8733e6e7acc1257ed385bd77e5",
        "filename": "test/functional/multiwallet.py",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa61c6f6a6fda3e68f3f84d27bcc996af861bcfd/test/functional/multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa61c6f6a6fda3e68f3f84d27bcc996af861bcfd/test/functional/multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/multiwallet.py?ref=fa61c6f6a6fda3e68f3f84d27bcc996af861bcfd",
        "patch": "@@ -16,10 +16,10 @@ class MultiWalletTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n-        self.extra_args = [['-wallet=w1', '-wallet=w2', '-wallet=w3']]\n+        self.extra_args = [['-wallet=w1', '-wallet=w2', '-wallet=w3', '-wallet=w']]\n \n     def run_test(self):\n-        assert_equal(set(self.nodes[0].listwallets()), {\"w1\", \"w2\", \"w3\"})\n+        assert_equal(set(self.nodes[0].listwallets()), {\"w1\", \"w2\", \"w3\", \"w\"})\n \n         self.stop_node(0)\n \n@@ -44,6 +44,7 @@ def run_test(self):\n         w1 = self.nodes[0].get_wallet_rpc(\"w1\")\n         w2 = self.nodes[0].get_wallet_rpc(\"w2\")\n         w3 = self.nodes[0].get_wallet_rpc(\"w3\")\n+        w4 = self.nodes[0].get_wallet_rpc(\"w\")\n         wallet_bad = self.nodes[0].get_wallet_rpc(\"bad\")\n \n         w1.generate(1)\n@@ -69,18 +70,22 @@ def run_test(self):\n         w3_name = w3.getwalletinfo()['walletname']\n         assert_equal(w3_name, \"w3\")\n \n-        assert_equal({\"w1\", \"w2\", \"w3\"}, {w1_name, w2_name, w3_name})\n+        w4_name = w4.getwalletinfo()['walletname']\n+        assert_equal(w4_name, \"w\")\n \n         w1.generate(101)\n         assert_equal(w1.getbalance(), 100)\n         assert_equal(w2.getbalance(), 0)\n         assert_equal(w3.getbalance(), 0)\n+        assert_equal(w4.getbalance(), 0)\n \n         w1.sendtoaddress(w2.getnewaddress(), 1)\n         w1.sendtoaddress(w3.getnewaddress(), 2)\n+        w1.sendtoaddress(w4.getnewaddress(), 3)\n         w1.generate(1)\n         assert_equal(w2.getbalance(), 1)\n         assert_equal(w3.getbalance(), 2)\n+        assert_equal(w4.getbalance(), 3)\n \n         batch = w1.batch([w1.getblockchaininfo.get_request(), w1.getwalletinfo.get_request()])\n         assert_equal(batch[0][\"result\"][\"chain\"], \"regtest\")"
      }
    ]
  }
]