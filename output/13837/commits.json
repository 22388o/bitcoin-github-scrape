[
  {
    "sha": "fa5b440971a0dfdd64c1b86748a573fcd7dc65d3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTViNDQwOTcxYTBkZmRkNjRjMWI4Njc0OGE1NzNmY2Q3ZGM2NWQz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-08-01T18:37:47Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-08-01T18:37:07Z"
      },
      "message": "qa: Extract rpc_timewait as test param\n\nAlso increase it for wallet_dump and wallet_groups",
      "tree": {
        "sha": "293c5d69fa9d0f2fb658ddd50da6b665f0175d41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/293c5d69fa9d0f2fb658ddd50da6b665f0175d41"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJbYf3TAAoJEM4rdWl+aaVIgTIL/326J0UVBWqV7lTeGlvLs5HF\nIXFdPH2ldjiiSbnML1xSy+97kJLMMZIO6ZVyNL5Tte4lufPWDGmrxc0IaSazY+5l\np0Us4AWIqkKl6YJBFVx2KRATj+zJlwgf7N/V3VMz3bfsufS8kq/P4jDvHNRIKWZG\nne6prIhowBxolY4SO47qPPttc9GpxbgEs8AndGO5WOKeV+CKF32QZkyCodHdV10e\nM2fYnVGdhDee87byQpLUQx5ccSVMwYju/7Jm23iXJzmGT2vvvIVH3fE3WElWQqH9\nXebAc4KxUct5aWUCZLowNGUS0DqIE6j2/ItqktB0T9AW3He8fkwdPY8jCqHmZut7\nHv61mHW48euKaQDVro98Hg51cbG+q3XFc61oQzXRiU7usEPro2lag0zO+n3GFPYf\nS8NE2JlMn0gBNInLe/fJdkELRBf/HpjPre+0uKNVWBHqZfzs0BrJKEfMOGlwbCRz\nGdQQXAhW4F6p/Xnh8ijjwrY10Cwqb68xQ2v6prHvEQ==\n=TT+p\n-----END PGP SIGNATURE-----",
        "payload": "tree 293c5d69fa9d0f2fb658ddd50da6b665f0175d41\nparent c88529a178d5ca719ebab597a4c4c3437327b2f6\nauthor MarcoFalke <falke.marco@gmail.com> 1533148667 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1533148627 -0400\n\nqa: Extract rpc_timewait as test param\n\nAlso increase it for wallet_dump and wallet_groups\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c88529a178d5ca719ebab597a4c4c3437327b2f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c88529a178d5ca719ebab597a4c4c3437327b2f6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c88529a178d5ca719ebab597a4c4c3437327b2f6"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 15,
      "deletions": 18
    },
    "files": [
      {
        "sha": "a771118fd17ff94b77824c5ba53fdf574f20ad51",
        "filename": "test/functional/feature_dbcrash.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3/test/functional/feature_dbcrash.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3/test/functional/feature_dbcrash.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_dbcrash.py?ref=fa5b440971a0dfdd64c1b86748a573fcd7dc65d3",
        "patch": "@@ -46,6 +46,8 @@ class ChainstateWriteCrashTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 4\n         self.setup_clean_chain = False\n+        # Need a bit of extra time for the nodes to start up for this test\n+        self.rpc_timewait = 90\n \n         # Set -maxmempool=0 to turn off mempool memory sharing with dbcache\n         # Set -rpcservertimeout=900 to reduce socket disconnects in this\n@@ -63,8 +65,7 @@ def set_test_params(self):\n         self.extra_args = [self.node0_args, self.node1_args, self.node2_args, self.node3_args]\n \n     def setup_network(self):\n-        # Need a bit of extra time for the nodes to start up for this test\n-        self.add_nodes(self.num_nodes, extra_args=self.extra_args, timewait=90)\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n         self.start_nodes()\n         # Leave them unconnected, we'll use submitblock directly in this test\n "
      },
      {
        "sha": "147a0904be29939215fec4ab57929b76b34b3476",
        "filename": "test/functional/feature_pruning.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3/test/functional/feature_pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3/test/functional/feature_pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_pruning.py?ref=fa5b440971a0dfdd64c1b86748a573fcd7dc65d3",
        "patch": "@@ -28,6 +28,7 @@ class PruneTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 6\n+        self.rpc_timewait = 900\n \n         # Create nodes 0 and 1 to mine.\n         # Create node 2 to test pruning.\n@@ -54,7 +55,7 @@ def setup_network(self):\n         sync_blocks(self.nodes[0:5])\n \n     def setup_nodes(self):\n-        self.add_nodes(self.num_nodes, self.extra_args, timewait=900)\n+        self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n     def create_big_chain(self):"
      },
      {
        "sha": "ebdf4d18fdca7dd6f34a084f93cf9e9d6a94b673",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=fa5b440971a0dfdd64c1b86748a573fcd7dc65d3",
        "patch": "@@ -86,6 +86,7 @@ def __init__(self):\n         self.nodes = []\n         self.network_thread = None\n         self.mocktime = 0\n+        self.rpc_timewait = 60  # Wait for up to 60 seconds for the RPC server to respond\n         self.supports_cli = False\n         self.bind_to_localhost_only = True\n         self.set_test_params()\n@@ -252,7 +253,7 @@ def run_test(self):\n \n     # Public helper methods. These can be accessed by the subclass test scripts.\n \n-    def add_nodes(self, num_nodes, extra_args=None, rpchost=None, timewait=None, binary=None):\n+    def add_nodes(self, num_nodes, extra_args=None, *, rpchost=None, binary=None):\n         \"\"\"Instantiate TestNode objects\"\"\"\n         if self.bind_to_localhost_only:\n             extra_confs = [[\"bind=127.0.0.1\"]] * num_nodes\n@@ -266,7 +267,7 @@ def add_nodes(self, num_nodes, extra_args=None, rpchost=None, timewait=None, bin\n         assert_equal(len(extra_args), num_nodes)\n         assert_equal(len(binary), num_nodes)\n         for i in range(num_nodes):\n-            self.nodes.append(TestNode(i, get_datadir_path(self.options.tmpdir, i), rpchost=rpchost, timewait=timewait, bitcoind=binary[i], bitcoin_cli=self.options.bitcoincli, mocktime=self.mocktime, coverage_dir=self.options.coveragedir, extra_conf=extra_confs[i], extra_args=extra_args[i], use_cli=self.options.usecli))\n+            self.nodes.append(TestNode(i, get_datadir_path(self.options.tmpdir, i), rpchost=rpchost, timewait=self.rpc_timewait, bitcoind=binary[i], bitcoin_cli=self.options.bitcoincli, mocktime=self.mocktime, coverage_dir=self.options.coveragedir, extra_conf=extra_confs[i], extra_args=extra_args[i], use_cli=self.options.usecli))\n \n     def start_node(self, i, *args, **kwargs):\n         \"\"\"Start a bitcoind\"\"\"\n@@ -417,7 +418,7 @@ def _initialize_chain(self):\n                 args = [self.options.bitcoind, \"-datadir=\" + datadir]\n                 if i > 0:\n                     args.append(\"-connect=127.0.0.1:\" + str(p2p_port(0)))\n-                self.nodes.append(TestNode(i, get_datadir_path(self.options.cachedir, i), extra_conf=[\"bind=127.0.0.1\"], extra_args=[], rpchost=None, timewait=None, bitcoind=self.options.bitcoind, bitcoin_cli=self.options.bitcoincli, mocktime=self.mocktime, coverage_dir=None))\n+                self.nodes.append(TestNode(i, get_datadir_path(self.options.cachedir, i), extra_conf=[\"bind=127.0.0.1\"], extra_args=[], rpchost=None, timewait=self.rpc_timewait, bitcoind=self.options.bitcoind, bitcoin_cli=self.options.bitcoincli, mocktime=self.mocktime, coverage_dir=None))\n                 self.nodes[i].args = args\n                 self.start_node(i)\n "
      },
      {
        "sha": "0c9f92448bde269ab896927932767154b8cc8cbb",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=fa5b440971a0dfdd64c1b86748a573fcd7dc65d3",
        "patch": "@@ -56,17 +56,13 @@ class TestNode():\n     To make things easier for the test writer, any unrecognised messages will\n     be dispatched to the RPC connection.\"\"\"\n \n-    def __init__(self, i, datadir, rpchost, timewait, bitcoind, bitcoin_cli, mocktime, coverage_dir, extra_conf=None, extra_args=None, use_cli=False):\n+    def __init__(self, i, datadir, *, rpchost, timewait, bitcoind, bitcoin_cli, mocktime, coverage_dir, extra_conf=None, extra_args=None, use_cli=False):\n         self.index = i\n         self.datadir = datadir\n         self.stdout_dir = os.path.join(self.datadir, \"stdout\")\n         self.stderr_dir = os.path.join(self.datadir, \"stderr\")\n         self.rpchost = rpchost\n-        if timewait:\n-            self.rpc_timeout = timewait\n-        else:\n-            # Wait for up to 60 seconds for the RPC server to respond\n-            self.rpc_timeout = 60\n+        self.rpc_timeout = timewait\n         self.binary = bitcoind\n         self.coverage_dir = coverage_dir\n         if extra_conf != None:"
      },
      {
        "sha": "cc0aca0df8919801bddf1a90bbcd83e956bbe388",
        "filename": "test/functional/wallet_dump.py",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3/test/functional/wallet_dump.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3/test/functional/wallet_dump.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_dump.py?ref=fa5b440971a0dfdd64c1b86748a573fcd7dc65d3",
        "patch": "@@ -81,16 +81,13 @@ class WalletDumpTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.extra_args = [[\"-keypool=90\", \"-addresstype=legacy\", \"-deprecatedrpc=addwitnessaddress\"]]\n+        self.rpc_timeout = 120\n \n     def setup_network(self, split=False):\n-        # Use 1 minute timeout because the initial getnewaddress RPC can take\n-        # longer than the default 30 seconds due to an expensive\n-        # CWallet::TopUpKeyPool call, and the encryptwallet RPC made later in\n-        # the test often takes even longer.\n-        self.add_nodes(self.num_nodes, extra_args=self.extra_args, timewait=60)\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args)\n         self.start_nodes()\n \n-    def run_test (self):\n+    def run_test(self):\n         wallet_unenc_dump = os.path.join(self.nodes[0].datadir, \"wallet.unencrypted.dump\")\n         wallet_enc_dump = os.path.join(self.nodes[0].datadir, \"wallet.encrypted.dump\")\n "
      },
      {
        "sha": "9fa7eaf07e8fd8cd17a2cf42cdbba71c5b65ac19",
        "filename": "test/functional/wallet_groups.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3/test/functional/wallet_groups.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5b440971a0dfdd64c1b86748a573fcd7dc65d3/test/functional/wallet_groups.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_groups.py?ref=fa5b440971a0dfdd64c1b86748a573fcd7dc65d3",
        "patch": "@@ -22,6 +22,7 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 3\n         self.extra_args = [[], [], ['-avoidpartialspends']]\n+        self.rpc_timewait = 120\n \n     def run_test (self):\n         # Mine some coins"
      }
    ]
  }
]