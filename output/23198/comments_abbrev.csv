CallMeMisterOwl,2021-10-05 20:43:45,"Sorry for the second pull request, I tried to squash the commits but something went wrong and it ended up with a lot of other commits. This is the fixed version now, hope this works.",https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-934803431,934803431,
fanquake,2021-10-06 00:31:49,"In future, please don't open new Pull Requests for the same change. You should be able to recover your branch. Please combine the change from #23195 into this PR. You'll also need to sqaush your commits here, and write a more cohesive commit message. See the update PR description for an example.",https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-935147344,935147344,
sipsorcery,2021-10-06 07:49:55,"@CallMeMisterOwl thx for the PR.\n\nAm I correct that its purpose is to update the version fields in the `build_msvc/bitcoin_config.h` file with the matching values in `configure.ac`? If so it would be worth adding that to your PR description. It's a bit light at the moment.\n",https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-935681377,935681377,
MarcoFalke,2021-10-06 09:01:37,Please squash your commits according to https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits,https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-935791895,935791895,
CallMeMisterOwl,2021-10-06 10:23:45,"> In future, please don't open new Pull Requests for the same change. You should be able to recover your branch.\n\nGot it\n\n>Please combine the change from #23195 into this PR. You'll also need to sqaush your commits here, and write a more cohesive commit message. See the update PR description for an example.\n\nDone\n\n",https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-935920109,935920109,
MarcoFalke,2021-10-06 10:25:26,"The instructions to squash don't work when there are merge commit. You can use something like this instead:\n\n```\ngit checkout branch_name\ngit fetch origin 113b863f0773999497f952daa6539a03a66a9de3\ngit merge        113b863f0773999497f952daa6539a03a66a9de3\ngit reset --soft 113b863f0773999497f952daa6539a03a66a9de3\ngit commit -m 'commit message'\ngit push origin branch_name -f",https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-935922397,935922397,
CallMeMisterOwl,2021-10-06 10:39:02,Did it work ?,https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-935942639,935942639,
MarcoFalke,2021-10-06 10:44:20,"No, you'll need to rebase on latest master now.\n\nAlso, you can remove the ""Fixes #..."" prefix from the commit message and put it into the GitHub pull request description.",https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-935950490,935950490,
MarcoFalke,2021-10-06 12:18:30,"Again, a rebase it not possible with merge commits in between (I think), you'll have to repeat the steps of https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-935922397 with the commit hash of the latest master.",https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-936126782,936126782,
sipsorcery,2021-10-06 19:53:44,"The change in this PR works correctly and makes sense. But...\n\nI'm 50-50 on the concept of the Python pre-build script for the msvc build. The original goal of the msvc build was to provide a quick and easy way for Windows devs to build and debug Bitcoin Core, adding the build to the CI was an added benefit. The dilemna is as the Python pre-build script is slowly morphing into a mini build sys",https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-937011511,937011511,
MarcoFalke,2021-10-13 06:08:39,Concept ACK. Seems ok to simplify the release process without complicating other steps.,https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-941953518,941953518,
MarcoFalke,2021-10-13 06:09:09,"@laanwj As you opened the issue, do you think this is ready for merge?",https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-941953777,941953777,
laanwj,2021-10-27 13:25:57,">  It causes me a vague sesne of unease to see the script grow.\n\nI would agree in general. We definitely don't want to invent yet another meta-build system. But for this specifically it's quite an annoyance for every release to have to update these things manually. The reason it's not forgotten more often is because I wrote another python script (https://github.com/bitcoin-core/bitcoin-maintai",https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-952927933,952927933,
laanwj,2021-11-15 13:53:31,"Code review and lightly tested ACK 410f99faed47e27fca77531a864383b6119e7b0b\nThank you!",https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-968931911,968931911,
CallMeMisterOwl,2021-11-15 17:41:22,"> Thank you!\n\nPleasure contributing to this beautiful project :wink:\n\n",https://github.com/bitcoin/bitcoin/pull/23198#issuecomment-969152626,969152626,
laanwj,2021-10-27 13:28:41,"- Might want to remove the current values from `build_msvc/bitcoin_config.h` to make it clear that this script needs to be run (and to pre-empt people from filing PRs to update the stale info).\n- Instead of changing this file in-place I'd prefer renaming it to `build_msvc/bitcoin_config.h.in` (or such) in the build system, then making a copy to `build_msvc/bitcoin_config.h` here. This avoids the",https://github.com/bitcoin/bitcoin/pull/23198#discussion_r737467106,737467106,build_msvc/msvc-autogen.py
CallMeMisterOwl,2021-11-04 13:15:41,"Hi @laanwj, \ndid I understand this correctly ? \n`build_msvc/bitcoin_config.h.in` is basically a empty template and everytime \n`build_msvc/msvc-autogen.py` is executed it generates `build_msvc/bitcoin_config.h` using `build_msvc/bitcoin_config.h.in` and the values from `configure.ac`.",https://github.com/bitcoin/bitcoin/pull/23198#discussion_r742822479,742822479,build_msvc/msvc-autogen.py
laanwj,2021-11-10 15:35:04,"Yes, that sounds good to me. `build_msvc/bitcoin_config.h.in` would be the (read-only) template, with substitution strings that will be filled in by the script and written to `build_msvc/bitcoin_config.h`.",https://github.com/bitcoin/bitcoin/pull/23198#discussion_r746708356,746708356,build_msvc/msvc-autogen.py
CallMeMisterOwl,2021-11-14 14:25:59,"> Yes, that sounds good to me. `build_msvc/bitcoin_config.h.in` would be the (read-only) template, with substitution strings > that will be filled in by the script and written to `build_msvc/bitcoin_config.h`.\n\nOk, I changed the code. It should work the way you mentioned now.\n\n",https://github.com/bitcoin/bitcoin/pull/23198#discussion_r748862085,748862085,build_msvc/msvc-autogen.py
