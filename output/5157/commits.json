[
  {
    "sha": "b4ee0bddad94cb580c1b56c592021bb102ed7b1a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNGVlMGJkZGFkOTRjYjU4MGMxYjU2YzU5MjAyMWJiMTAyZWQ3YjFh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-28T16:33:55Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-29T15:08:13Z"
      },
      "message": "Introduce preferred download peers",
      "tree": {
        "sha": "c9eb02d200b3e78eeb1b0bf29e6fa7738a9fed7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9eb02d200b3e78eeb1b0bf29e6fa7738a9fed7f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4ee0bddad94cb580c1b56c592021bb102ed7b1a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4ee0bddad94cb580c1b56c592021bb102ed7b1a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b4ee0bddad94cb580c1b56c592021bb102ed7b1a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4ee0bddad94cb580c1b56c592021bb102ed7b1a/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "723c7526368badda15df8ac1ffc047a0ab2e384a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/723c7526368badda15df8ac1ffc047a0ab2e384a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/723c7526368badda15df8ac1ffc047a0ab2e384a"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 19,
      "deletions": 1
    },
    "files": [
      {
        "sha": "36af1c28277c99798b389ecd4e884691234feee7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4ee0bddad94cb580c1b56c592021bb102ed7b1a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4ee0bddad94cb580c1b56c592021bb102ed7b1a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=b4ee0bddad94cb580c1b56c592021bb102ed7b1a",
        "patch": "@@ -128,6 +128,8 @@ namespace {\n     };\n     map<uint256, pair<NodeId, list<QueuedBlock>::iterator> > mapBlocksInFlight;\n \n+    // Number of preferrable block download peers.\n+    int nPreferredDownload = 0;\n } // anon namespace\n \n //////////////////////////////////////////////////////////////////////////////\n@@ -225,6 +227,8 @@ struct CNodeState {\n     int64_t nStallingSince;\n     list<QueuedBlock> vBlocksInFlight;\n     int nBlocksInFlight;\n+    // Whether we consider this a preferred download peer.\n+    bool fPreferredDownload;\n \n     CNodeState() {\n         nMisbehavior = 0;\n@@ -235,6 +239,7 @@ struct CNodeState {\n         fSyncStarted = false;\n         nStallingSince = 0;\n         nBlocksInFlight = 0;\n+        fPreferredDownload = false;\n     }\n };\n \n@@ -255,6 +260,16 @@ int GetHeight()\n     return chainActive.Height();\n }\n \n+void UpdatePreferredDownload(CNode* node, CNodeState* state)\n+{\n+    nPreferredDownload -= state->fPreferredDownload;\n+\n+    // Whether this node should be marked as a preferred download node.\n+    state->fPreferredDownload = (!node->fInbound || node->fWhitelisted) && !node->fOneShot && !node->fClient;\n+\n+    nPreferredDownload += state->fPreferredDownload;\n+}\n+\n void InitializeNode(NodeId nodeid, const CNode *pnode) {\n     LOCK(cs_main);\n     CNodeState &state = mapNodeState.insert(std::make_pair(nodeid, CNodeState())).first->second;\n@@ -271,6 +286,7 @@ void FinalizeNode(NodeId nodeid) {\n     BOOST_FOREACH(const QueuedBlock& entry, state->vBlocksInFlight)\n         mapBlocksInFlight.erase(entry.hash);\n     EraseOrphansFor(nodeid);\n+    nPreferredDownload -= state->fPreferredDownload;\n \n     mapNodeState.erase(nodeid);\n }\n@@ -3471,6 +3487,8 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n         pfrom->fClient = !(pfrom->nServices & NODE_NETWORK);\n \n+        // Potentially mark this peer as a preferred download peer.\n+        UpdatePreferredDownload(pfrom, State(pfrom->GetId()));\n \n         // Change version\n         pfrom->PushMessage(\"verack\");\n@@ -4415,7 +4433,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         // Start block sync\n         if (pindexBestHeader == NULL)\n             pindexBestHeader = chainActive.Tip();\n-        bool fFetch = !pto->fInbound || (pindexBestHeader && (state.pindexLastCommonBlock ? state.pindexLastCommonBlock->nHeight : 0) + 144 > pindexBestHeader->nHeight);\n+        bool fFetch = state.fPreferredDownload || (nPreferredDownload == 0 && !pto->fClient && !pto->fOneShot); // Download if this is a nice peer, or we have no nice peers and this one might do.\n         if (!state.fSyncStarted && !pto->fClient && fFetch && !fImporting && !fReindex) {\n             // Only actively request headers from a single peer, unless we're close to today.\n             if (nSyncStarted == 0 || pindexBestHeader->GetBlockTime() > GetAdjustedTime() - 24 * 60 * 60) {"
      }
    ]
  }
]