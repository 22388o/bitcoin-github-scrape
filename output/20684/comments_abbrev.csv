MarcoFalke,2020-12-17 12:34:13,"Concept ACK, not willing to upgrade to review ACK",https://github.com/bitcoin/bitcoin/pull/20684#issuecomment-747412785,747412785,
DrahtBot,2020-12-18 22:57:18,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 816314ef0f7bdf50a6596ef893ac1a1d2d8723bf<br>(master) | commit b38a4770ee739822ae0f9b96b7c1c5525d536c49<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`92c094a57f28b2fe...`](https://drahtbot.space/gitian/bitcoin/bitcoin/816314ef0f7bdf50a6596ef893ac1a1d2d8723bf/bitcoin-816314ef0f7b-aarch64-l,https://github.com/bitcoin/bitcoin/pull/20684#issuecomment-748359483,748359483,
DrahtBot,2020-12-20 21:46:44,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit f1dbf92ff0475a01d20170ea422c1d086acbbc57<br>(master) | commit aba1aad34b1f82f8d5a7c28d2ec79d9e85b77e8b<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`3515438da57735d7...`](https://drahtbot.space/guix/bitcoin/bitcoin/f1dbf92ff0475a01d20170ea422c1d086acbbc57/bitcoin-f1dbf92ff047-aarch64-linux,https://github.com/bitcoin/bitcoin/pull/20684#issuecomment-748675294,748675294,
jonatack,2020-12-22 15:07:22,"Tested and very light review ACK 5e0dedb111ed9db03914b9dac36cf081974c2918\n\nIDK if there is a better solution but I've been recompiling several times a day with this patch while testing pulls and it resolves the warning while working fine for me.",https://github.com/bitcoin/bitcoin/pull/20684#issuecomment-749587359,749587359,
laanwj,2020-12-20 11:59:34,Is it safe/correct to have OSX_TEMP_ISO here even though it's not a thing for non-OSX? It is unconditionally assigned a value on line 38.,https://github.com/bitcoin/bitcoin/pull/20684#discussion_r546366987,546366987,Makefile.am
hebasto,2020-12-21 05:46:09,"> Is it safe/correct to have OSX_TEMP_ISO here even though it's not a thing for non-OSX?\n\n""OSX_TEMP_ISO ... [i]s not a thing for non-OSX"" seems like a bit vague statement for the next reasons:\n1) Being a global variable, the `OSX_TEMP_ISO` is defined regardless of the place of its evaluation, i.e., on all platforms:\n```\n$ make print-OSX_TEMP_ISO\nOSX_TEMP_ISO = Bitcoin-Core.temp.iso\n`",https://github.com/bitcoin/bitcoin/pull/20684#discussion_r546519908,546519908,Makefile.am
laanwj,2020-12-21 09:48:00,"Yes I was a bit unclear there, sorry.\nI wondered if it might have been better to define `OSX_TEMP_ISO` as empty on non-DARWIN, instead of assign it a value, so that it's not included in `.INTERMEDIATES`.\nBut it is good to know that adding it to  `.INTERMEDIATES` cannot actually trigger the build rule. I guess that addresses my concern.",https://github.com/bitcoin/bitcoin/pull/20684#discussion_r546607529,546607529,Makefile.am
