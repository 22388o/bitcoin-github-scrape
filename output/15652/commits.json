[
  {
    "sha": "0440481c6bf5683eff669c789bdf6a306d99adc5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNDQwNDgxYzZiZjU2ODNlZmY2NjljNzg5YmRmNmEzMDZkOTlhZGM1",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-03-27T16:59:47Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-03-27T16:59:47Z"
      },
      "message": "wallet: Move CWallet::ReacceptWalletTransactions locks to callers",
      "tree": {
        "sha": "b95978e65b84bf96512970778ac500249f40826e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b95978e65b84bf96512970778ac500249f40826e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0440481c6bf5683eff669c789bdf6a306d99adc5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0440481c6bf5683eff669c789bdf6a306d99adc5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0440481c6bf5683eff669c789bdf6a306d99adc5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0440481c6bf5683eff669c789bdf6a306d99adc5/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7b13c646457980f44599412f243694fa682a1abf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b13c646457980f44599412f243694fa682a1abf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7b13c646457980f44599412f243694fa682a1abf"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 23,
      "deletions": 10
    },
    "files": [
      {
        "sha": "9c5dae3623da21eb8cd4d5e9761b88a924d27b53",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 3,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0440481c6bf5683eff669c789bdf6a306d99adc5/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0440481c6bf5683eff669c789bdf6a306d99adc5/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=0440481c6bf5683eff669c789bdf6a306d99adc5",
        "patch": "@@ -348,7 +348,11 @@ UniValue importaddress(const JSONRPCRequest& request)\n     if (fRescan)\n     {\n         RescanWallet(*pwallet, reserver);\n-        pwallet->ReacceptWalletTransactions();\n+        {\n+            auto locked_chain = pwallet->chain().lock();\n+            LOCK(pwallet->cs_wallet);\n+            pwallet->ReacceptWalletTransactions(*locked_chain);\n+        }\n     }\n \n     return NullUniValue;\n@@ -532,7 +536,11 @@ UniValue importpubkey(const JSONRPCRequest& request)\n     if (fRescan)\n     {\n         RescanWallet(*pwallet, reserver);\n-        pwallet->ReacceptWalletTransactions();\n+        {\n+            auto locked_chain = pwallet->chain().lock();\n+            LOCK(pwallet->cs_wallet);\n+            pwallet->ReacceptWalletTransactions(*locked_chain);\n+        }\n     }\n \n     return NullUniValue;\n@@ -1468,7 +1476,11 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n     }\n     if (fRescan && fRunScan && requests.size()) {\n         int64_t scannedTime = pwallet->RescanFromTime(nLowestTimestamp, reserver, true /* update */);\n-        pwallet->ReacceptWalletTransactions();\n+        {\n+            auto locked_chain = pwallet->chain().lock();\n+            LOCK(pwallet->cs_wallet);\n+            pwallet->ReacceptWalletTransactions(*locked_chain);\n+        }\n \n         if (pwallet->IsAbortingRescan()) {\n             throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted by user.\");"
      },
      {
        "sha": "a1d0de6a16da46d418da19287176b3e152548996",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0440481c6bf5683eff669c789bdf6a306d99adc5/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0440481c6bf5683eff669c789bdf6a306d99adc5/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=0440481c6bf5683eff669c789bdf6a306d99adc5",
        "patch": "@@ -1861,13 +1861,11 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n-void CWallet::ReacceptWalletTransactions()\n+void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n {\n     // If transactions aren't being broadcasted, don't let them into local mempool either\n     if (!fBroadcastTransactions)\n         return;\n-    auto locked_chain = chain().lock();\n-    LOCK(cs_wallet);\n     std::map<int64_t, CWalletTx*> mapSorted;\n \n     // Sort pending wallet transactions based on their initial wallet insertion order\n@@ -1877,7 +1875,7 @@ void CWallet::ReacceptWalletTransactions()\n         CWalletTx& wtx = item.second;\n         assert(wtx.GetHash() == wtxid);\n \n-        int nDepth = wtx.GetDepthInMainChain(*locked_chain);\n+        int nDepth = wtx.GetDepthInMainChain(locked_chain);\n \n         if (!wtx.IsCoinBase() && (nDepth == 0 && !wtx.isAbandoned())) {\n             mapSorted.insert(std::make_pair(wtx.nOrderPos, &wtx));\n@@ -1888,7 +1886,7 @@ void CWallet::ReacceptWalletTransactions()\n     for (const std::pair<const int64_t, CWalletTx*>& item : mapSorted) {\n         CWalletTx& wtx = *(item.second);\n         CValidationState state;\n-        wtx.AcceptToMemoryPool(*locked_chain, state);\n+        wtx.AcceptToMemoryPool(locked_chain, state);\n     }\n }\n \n@@ -4398,9 +4396,12 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n \n void CWallet::postInitProcess()\n {\n+    auto locked_chain = chain().lock();\n+    LOCK(cs_wallet);\n+\n     // Add wallet transactions that aren't already in a block to mempool\n     // Do this here as mempool requires genesis block to be loaded\n-    ReacceptWalletTransactions();\n+    ReacceptWalletTransactions(*locked_chain);\n }\n \n bool CWallet::BackupWallet(const std::string& strDest)"
      },
      {
        "sha": "24a1b92f7d7754ee1a2def97a70031b7ae9d0e9e",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0440481c6bf5683eff669c789bdf6a306d99adc5/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0440481c6bf5683eff669c789bdf6a306d99adc5/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=0440481c6bf5683eff669c789bdf6a306d99adc5",
        "patch": "@@ -945,7 +945,7 @@ class CWallet final : public CCryptoKeyStore, private interfaces::Chain::Notific\n     };\n     ScanResult ScanForWalletTransactions(const uint256& first_block, const uint256& last_block, const WalletRescanReserver& reserver, bool fUpdate);\n     void TransactionRemovedFromMempool(const CTransactionRef &ptx) override;\n-    void ReacceptWalletTransactions();\n+    void ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void ResendWalletTransactions(interfaces::Chain::Lock& locked_chain, int64_t nBestBlockTime) override;\n     // ResendWalletTransactionsBefore may only be called if fBroadcastTransactions!\n     std::vector<uint256> ResendWalletTransactionsBefore(interfaces::Chain::Lock& locked_chain, int64_t nTime);"
      }
    ]
  },
  {
    "sha": "57908a739ca377d60ef224ce0f565d4412a414f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzkwOGE3MzljYTM3N2Q2MGVmMjI0Y2UwZjU2NWQ0NDEyYTQxNGY0",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-03-27T17:00:06Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-03-31T10:37:28Z"
      },
      "message": "interfaces: Add Chain::requestMempoolTransactions",
      "tree": {
        "sha": "985bb1d2e0bf3477e40faef44aa96d209d17b6e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/985bb1d2e0bf3477e40faef44aa96d209d17b6e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57908a739ca377d60ef224ce0f565d4412a414f4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57908a739ca377d60ef224ce0f565d4412a414f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57908a739ca377d60ef224ce0f565d4412a414f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57908a739ca377d60ef224ce0f565d4412a414f4/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0440481c6bf5683eff669c789bdf6a306d99adc5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0440481c6bf5683eff669c789bdf6a306d99adc5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0440481c6bf5683eff669c789bdf6a306d99adc5"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e409ced601d95e539418c7252317d859d0300f89",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57908a739ca377d60ef224ce0f565d4412a414f4/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57908a739ca377d60ef224ce0f565d4412a414f4/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=57908a739ca377d60ef224ce0f565d4412a414f4",
        "patch": "@@ -367,6 +367,13 @@ class ChainImpl : public Chain\n     {\n         return MakeUnique<RpcHandlerImpl>(command);\n     }\n+    void requestMempoolTransactions(Notifications& notifications) override\n+    {\n+        LOCK2(::cs_main, ::mempool.cs);\n+        for (const CTxMemPoolEntry& entry : ::mempool.mapTx) {\n+            notifications.TransactionAddedToMempool(entry.GetSharedTx());\n+        }\n+    }\n };\n } // namespace\n "
      },
      {
        "sha": "d11a59241ebe934fbc2dfbf9eafa8b3d69e495c0",
        "filename": "src/interfaces/chain.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57908a739ca377d60ef224ce0f565d4412a414f4/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57908a739ca377d60ef224ce0f565d4412a414f4/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=57908a739ca377d60ef224ce0f565d4412a414f4",
        "patch": "@@ -269,6 +269,16 @@ class Chain\n     //! Register handler for RPC. Command is not copied, so reference\n     //! needs to remain valid until Handler is disconnected.\n     virtual std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) = 0;\n+\n+    //! Synchronously send TransactionAddedToMempool notifications about all\n+    //! current mempool transactions to the specified handler and return after\n+    //! the last one is sent. These notifications aren't coordinated with async\n+    //! notifications sent by handleNotifications, so out of date async\n+    //! notifications from handleNotifications can arrive during and after\n+    //! synchronous notifications from requestMempoolTransactions. Clients need\n+    //! to be prepared to handle this by ignoring notifications about unknown\n+    //! removed transactions and already added new transactions.\n+    virtual void requestMempoolTransactions(Notifications& notifications) = 0;\n };\n \n //! Interface to let node manage chain clients (wallets, or maybe tools for"
      }
    ]
  },
  {
    "sha": "2ebf650b2eb7a078ab60c8c4d5c726823686f549",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZWJmNjUwYjJlYjdhMDc4YWI2MGM4YzRkNWM3MjY4MjM2ODZmNTQ5",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-03-27T17:00:08Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-03-31T10:37:41Z"
      },
      "message": "wallet: Update transactions with current mempool after load",
      "tree": {
        "sha": "13a96b58f06c7b3bfd392923324fe43b65a502be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/13a96b58f06c7b3bfd392923324fe43b65a502be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ebf650b2eb7a078ab60c8c4d5c726823686f549",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ebf650b2eb7a078ab60c8c4d5c726823686f549",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ebf650b2eb7a078ab60c8c4d5c726823686f549",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ebf650b2eb7a078ab60c8c4d5c726823686f549/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "57908a739ca377d60ef224ce0f565d4412a414f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57908a739ca377d60ef224ce0f565d4412a414f4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57908a739ca377d60ef224ce0f565d4412a414f4"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b137bbb9d5245e4772e49c8087b41998f1401b69",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ebf650b2eb7a078ab60c8c4d5c726823686f549/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ebf650b2eb7a078ab60c8c4d5c726823686f549/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=2ebf650b2eb7a078ab60c8c4d5c726823686f549",
        "patch": "@@ -4402,6 +4402,9 @@ void CWallet::postInitProcess()\n     // Add wallet transactions that aren't already in a block to mempool\n     // Do this here as mempool requires genesis block to be loaded\n     ReacceptWalletTransactions(*locked_chain);\n+\n+    // Update wallet transactions with current mempool transactions.\n+    chain().requestMempoolTransactions(*this);\n }\n \n bool CWallet::BackupWallet(const std::string& strDest)"
      }
    ]
  },
  {
    "sha": "4bf1b1cefa9723bf2cfa8b1a938757abc99bb17b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YmYxYjFjZWZhOTcyM2JmMmNmYThiMWE5Mzg3NTdhYmM5OWJiMTdi",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-03-27T17:00:11Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-03-31T10:37:41Z"
      },
      "message": "qa: Check unconfirmed balance after loadwallet",
      "tree": {
        "sha": "7885990ef5ad92dd6af282abc5a891afbcf99014",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7885990ef5ad92dd6af282abc5a891afbcf99014"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4bf1b1cefa9723bf2cfa8b1a938757abc99bb17b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bf1b1cefa9723bf2cfa8b1a938757abc99bb17b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4bf1b1cefa9723bf2cfa8b1a938757abc99bb17b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bf1b1cefa9723bf2cfa8b1a938757abc99bb17b/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ebf650b2eb7a078ab60c8c4d5c726823686f549",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ebf650b2eb7a078ab60c8c4d5c726823686f549",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ebf650b2eb7a078ab60c8c4d5c726823686f549"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3a65b684c8890b67db09a6b96d264eeb40991a2d",
        "filename": "test/functional/wallet_balance.py",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bf1b1cefa9723bf2cfa8b1a938757abc99bb17b/test/functional/wallet_balance.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bf1b1cefa9723bf2cfa8b1a938757abc99bb17b/test/functional/wallet_balance.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_balance.py?ref=4bf1b1cefa9723bf2cfa8b1a938757abc99bb17b",
        "patch": "@@ -129,5 +129,17 @@ def run_test(self):\n         # getbalance with minconf=2 will show the new balance.\n         assert_equal(self.nodes[1].getbalance(minconf=2), Decimal('0'))\n \n+        # check mempool transactions count for wallet unconfirmed balance after\n+        # dynamically loading the wallet.\n+        before = self.nodes[1].getunconfirmedbalance()\n+        dst = self.nodes[1].getnewaddress()\n+        self.nodes[1].unloadwallet('')\n+        self.nodes[0].sendtoaddress(dst, 0.1)\n+        self.sync_all()\n+        self.nodes[1].loadwallet('')\n+        after = self.nodes[1].getunconfirmedbalance()\n+        assert_equal(before + Decimal('0.1'), after)\n+\n+\n if __name__ == '__main__':\n     WalletTest().main()"
      }
    ]
  }
]