[
  {
    "sha": "84e19d0673c9822093b46ab214ff75c61da01ea9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NGUxOWQwNjczYzk4MjIwOTNiNDZhYjIxNGZmNzVjNjFkYTAxZWE5",
    "commit": {
      "author": {
        "name": "John Bampton",
        "email": "jbampton@gmail.com",
        "date": "2021-05-07T11:37:09Z"
      },
      "committer": {
        "name": "John Bampton",
        "email": "jbampton@gmail.com",
        "date": "2021-05-07T13:39:09Z"
      },
      "message": "doc: fix spelling",
      "tree": {
        "sha": "9387c6bcf7ca2a27e7c9e9f7077c616542ec28d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9387c6bcf7ca2a27e7c9e9f7077c616542ec28d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84e19d0673c9822093b46ab214ff75c61da01ea9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84e19d0673c9822093b46ab214ff75c61da01ea9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/84e19d0673c9822093b46ab214ff75c61da01ea9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84e19d0673c9822093b46ab214ff75c61da01ea9/comments",
    "author": {
      "login": "jbampton",
      "id": 418747,
      "node_id": "MDQ6VXNlcjQxODc0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/418747?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbampton",
      "html_url": "https://github.com/jbampton",
      "followers_url": "https://api.github.com/users/jbampton/followers",
      "following_url": "https://api.github.com/users/jbampton/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbampton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbampton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbampton/subscriptions",
      "organizations_url": "https://api.github.com/users/jbampton/orgs",
      "repos_url": "https://api.github.com/users/jbampton/repos",
      "events_url": "https://api.github.com/users/jbampton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbampton/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jbampton",
      "id": 418747,
      "node_id": "MDQ6VXNlcjQxODc0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/418747?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbampton",
      "html_url": "https://github.com/jbampton",
      "followers_url": "https://api.github.com/users/jbampton/followers",
      "following_url": "https://api.github.com/users/jbampton/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbampton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbampton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbampton/subscriptions",
      "organizations_url": "https://api.github.com/users/jbampton/orgs",
      "repos_url": "https://api.github.com/users/jbampton/repos",
      "events_url": "https://api.github.com/users/jbampton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbampton/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eb9a1fe03779bf05062b70f14190cb23ff42b46f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb9a1fe03779bf05062b70f14190cb23ff42b46f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eb9a1fe03779bf05062b70f14190cb23ff42b46f"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 9,
      "deletions": 10
    },
    "files": [
      {
        "sha": "cc282e5a0f0ab7cdfe69c43a66e6e02465b2c1ff",
        "filename": "contrib/guix/guix-clean",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84e19d0673c9822093b46ab214ff75c61da01ea9/contrib/guix/guix-clean",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84e19d0673c9822093b46ab214ff75c61da01ea9/contrib/guix/guix-clean",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-clean?ref=84e19d0673c9822093b46ab214ff75c61da01ea9",
        "patch": "@@ -15,7 +15,7 @@ source \"$(dirname \"${BASH_SOURCE[0]}\")/libexec/prelude.bash\"\n ###################\n \n ################\n-# Required non-builtin commands should be invokable\n+# Required non-builtin commands should be invocable\n ################\n \n check_tools cat mkdir make git guix"
      },
      {
        "sha": "6aaf71c0b0c3756bbafec53f3accd29b33031bf2",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84e19d0673c9822093b46ab214ff75c61da01ea9/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84e19d0673c9822093b46ab214ff75c61da01ea9/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=84e19d0673c9822093b46ab214ff75c61da01ea9",
        "patch": "@@ -115,7 +115,7 @@ include builders/default.mk\n include packages/packages.mk\n \n # Previously, we directly invoked the well-known programs using $(shell ...)\n-# to contruct build_id_string. However, that was problematic because:\n+# to construct build_id_string. However, that was problematic because:\n #\n # 1. When invoking a shell, GNU Make special-cases exit code 127 (command not\n #    found) by not capturing the output but instead passing it through. This is"
      },
      {
        "sha": "3ff009fbc0154eac2ed3d6b2ee50c1dc19c8b45e",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84e19d0673c9822093b46ab214ff75c61da01ea9/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84e19d0673c9822093b46ab214ff75c61da01ea9/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=84e19d0673c9822093b46ab214ff75c61da01ea9",
        "patch": "@@ -115,7 +115,7 @@ brew install berkeley-db@4\n \n ###### Descriptor Wallet Support\n \n-Note: Apple has included a useable `sqlite` package since macOS 10.14.\n+Note: Apple has included a usable `sqlite` package since macOS 10.14.\n You may not need to install this package.\n \n `sqlite` is required to enable support for descriptor wallets."
      },
      {
        "sha": "478be84bc853753880cf207de2cebab653055beb",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84e19d0673c9822093b46ab214ff75c61da01ea9/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84e19d0673c9822093b46ab214ff75c61da01ea9/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=84e19d0673c9822093b46ab214ff75c61da01ea9",
        "patch": "@@ -321,7 +321,7 @@ static void MutateTxAddOutPubKey(CMutableTransaction& tx, const std::string& str\n \n     if (bSegWit) {\n         if (!pubkey.IsCompressed()) {\n-            throw std::runtime_error(\"Uncompressed pubkeys are not useable for SegWit outputs\");\n+            throw std::runtime_error(\"Uncompressed pubkeys are not usable for SegWit outputs\");\n         }\n         // Build a P2WPKH script\n         scriptPubKey = GetScriptForDestination(WitnessV0KeyHash(pubkey));\n@@ -390,7 +390,7 @@ static void MutateTxAddOutMultiSig(CMutableTransaction& tx, const std::string& s\n     if (bSegWit) {\n         for (const CPubKey& pubkey : pubkeys) {\n             if (!pubkey.IsCompressed()) {\n-                throw std::runtime_error(\"Uncompressed pubkeys are not useable for SegWit outputs\");\n+                throw std::runtime_error(\"Uncompressed pubkeys are not usable for SegWit outputs\");\n             }\n         }\n         // Build a P2WSH with the multisig script"
      },
      {
        "sha": "2e4c173c39f230ff4a570ffade1090ab39e06b4a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84e19d0673c9822093b46ab214ff75c61da01ea9/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84e19d0673c9822093b46ab214ff75c61da01ea9/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=84e19d0673c9822093b46ab214ff75c61da01ea9",
        "patch": "@@ -390,7 +390,7 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-dbcache=<n>\", strprintf(\"Maximum database cache size <n> MiB (%d to %d, default: %d). In addition, unused mempool memory is shared for this cache (see -maxmempool).\", nMinDbCache, nMaxDbCache, nDefaultDbCache), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-feefilter\", strprintf(\"Tell other nodes to filter invs to us by our mempool min fee (default: %u)\", DEFAULT_FEEFILTER), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-includeconf=<file>\", \"Specify additional configuration file, relative to the -datadir path (only useable from configuration file, not command line)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-includeconf=<file>\", \"Specify additional configuration file, relative to the -datadir path (only usable from configuration file, not command line)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-loadblock=<file>\", \"Imports blocks from external file on startup\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-maxmempool=<n>\", strprintf(\"Keep the transaction memory pool below <n> megabytes (default: %u)\", DEFAULT_MAX_MEMPOOL_SIZE), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-maxorphantx=<n>\", strprintf(\"Keep at most <n> unconnectable transactions in memory (default: %u)\", DEFAULT_MAX_ORPHAN_TRANSACTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);"
      },
      {
        "sha": "1553d3b92e867f6aac56e6281f8f4af7d230d365",
        "filename": "test/functional/wallet_avoidreuse.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84e19d0673c9822093b46ab214ff75c61da01ea9/test/functional/wallet_avoidreuse.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84e19d0673c9822093b46ab214ff75c61da01ea9/test/functional/wallet_avoidreuse.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_avoidreuse.py?ref=84e19d0673c9822093b46ab214ff75c61da01ea9",
        "patch": "@@ -217,7 +217,7 @@ def test_sending_from_reused_address_fails(self, second_addr_type):\n         '''\n         Test the simple case where [1] generates a new address A, then\n         [0] sends 10 BTC to A.\n-        [1] spends 5 BTC from A. (leaving roughly 5 BTC useable)\n+        [1] spends 5 BTC from A. (leaving roughly 5 BTC usable)\n         [0] sends 10 BTC to A again.\n         [1] tries to spend 10 BTC (fails; dirty).\n         [1] tries to spend 4 BTC (succeeds; change address sufficient)"
      },
      {
        "sha": "4249f38ef14a066b04a17f7ac4b89d0158786a51",
        "filename": "test/lint/lint-spelling.ignore-words.txt",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84e19d0673c9822093b46ab214ff75c61da01ea9/test/lint/lint-spelling.ignore-words.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84e19d0673c9822093b46ab214ff75c61da01ea9/test/lint/lint-spelling.ignore-words.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-spelling.ignore-words.txt?ref=84e19d0673c9822093b46ab214ff75c61da01ea9",
        "patch": "@@ -11,5 +11,4 @@ nin\n ser\n unparseable\n unser\n-useable\n wit"
      },
      {
        "sha": "95e77e7c7031dd28cc2f7d806af4a9c4376fb135",
        "filename": "test/util/data/bitcoin-util-test.json",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84e19d0673c9822093b46ab214ff75c61da01ea9/test/util/data/bitcoin-util-test.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84e19d0673c9822093b46ab214ff75c61da01ea9/test/util/data/bitcoin-util-test.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/bitcoin-util-test.json?ref=84e19d0673c9822093b46ab214ff75c61da01ea9",
        "patch": "@@ -420,7 +420,7 @@\n     \"args\":\n     [\"-json\", \"-create\", \"outpubkey=0:047d1368ba7ae01c94bc32293efd70bd7e3be7aa7912d07d0b1c659c1008d179b8642f5fb90f47580feb29f045e216ff5a4716d3a0fed36da414d332046303c44a:WS\", \"nversion=1\"],\n     \"return_code\": 1,\n-    \"error_txt\": \"error: Uncompressed pubkeys are not useable for SegWit outputs\",\n+    \"error_txt\": \"error: Uncompressed pubkeys are not usable for SegWit outputs\",\n     \"description\": \"Creates a new transaction with a single pay-to-pub-key output, wrapped in P2SH (output as json)\"\n   },\n   { \"exec\": \"./bitcoin-tx\",\n@@ -559,7 +559,7 @@\n   { \"exec\": \"./bitcoin-tx\",\n     \"args\": [\"-json\", \"-create\", \"outmultisig=1:2:3:02a5613bd857b7048924264d1e70e08fb2a7e6527d32b7ab1bb993ac59964ff397:021ac43c7ff740014c3b33737ede99c967e4764553d1b2b83db77c83b8715fa72d:047d1368ba7ae01c94bc32293efd70bd7e3be7aa7912d07d0b1c659c1008d179b8642f5fb90f47580feb29f045e216ff5a4716d3a0fed36da414d332046303c44a:WS\"],\n     \"return_code\": 1,\n-    \"error_txt\": \"error: Uncompressed pubkeys are not useable for SegWit outputs\",\n+    \"error_txt\": \"error: Uncompressed pubkeys are not usable for SegWit outputs\",\n     \"description\": \"Ensure adding witness outputs with uncompressed pubkeys fails\"\n   }\n ]"
      }
    ]
  }
]