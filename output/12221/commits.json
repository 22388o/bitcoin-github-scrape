[
  {
    "sha": "23fc59a941c43a7fa1fde30e98aedb050e2aad50",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyM2ZjNTlhOTQxYzQzYTdmYTFmZGUzMGU5OGFlZGIwNTBlMmFhZDUw",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2018-01-18T19:01:43Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2018-01-18T19:01:43Z"
      },
      "message": "scripted-diff: rename -walletdir options -walletsdir\n\nReasons for rename:\n\n  1) Default value is `<datadir>/wallets` so calling it `-walletsdir` instead\n     of `-walletdir` would be more internally consistent\n\n  2) Directory can contain more than one wallet so plural makes more sense\n\n  3) This makes it harder to confuse -walletdir option with -wallet option\n     if we store wallets in their own directories as proposed in\n     https://github.com/bitcoin/bitcoin/pull/11466#issuecomment-335827526 and\n     implemented in https://github.com/bitcoin/bitcoin/pull/12216\n\n-BEGIN VERIFY SCRIPT-\ngit grep -l walletdir | xargs sed -i s/walletdir/walletsdir/g\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "d4ad48b1d2737617637ff925775c98d42a244a60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4ad48b1d2737617637ff925775c98d42a244a60"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23fc59a941c43a7fa1fde30e98aedb050e2aad50",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23fc59a941c43a7fa1fde30e98aedb050e2aad50",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/23fc59a941c43a7fa1fde30e98aedb050e2aad50",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23fc59a941c43a7fa1fde30e98aedb050e2aad50/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "898f560b55aba2070f188b0223ef2beefcdede8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/898f560b55aba2070f188b0223ef2beefcdede8b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/898f560b55aba2070f188b0223ef2beefcdede8b"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 18,
      "deletions": 18
    },
    "files": [
      {
        "sha": "fab9a066a61fd1b8f488babbc4d28cee54d71b78",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23fc59a941c43a7fa1fde30e98aedb050e2aad50/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23fc59a941c43a7fa1fde30e98aedb050e2aad50/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=23fc59a941c43a7fa1fde30e98aedb050e2aad50",
        "patch": "@@ -78,7 +78,7 @@ use the `replaceable` argument for individual transactions.\n Custom wallet directories\n ---------------------\n The ability to specify a directory other than the default data directory in which to store\n-wallets has been added. An existing directory can be specified using the `-walletdir=<dir>`\n+wallets has been added. An existing directory can be specified using the `-walletsdir=<dir>`\n argument. Wallets loaded via `-wallet` arguments must be in this wallet directory. Care should be taken\n when choosing a wallet directory location, as if it becomes unavailable during operation,\n funds may be lost."
      },
      {
        "sha": "42d6ceaaf652a60e3c99ab4b226e6643ab03d8e3",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23fc59a941c43a7fa1fde30e98aedb050e2aad50/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23fc59a941c43a7fa1fde30e98aedb050e2aad50/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=23fc59a941c43a7fa1fde30e98aedb050e2aad50",
        "patch": "@@ -37,7 +37,7 @@ std::string GetWalletHelpString(bool showDebug)\n     strUsage += HelpMessageOpt(\"-upgradewallet\", _(\"Upgrade wallet to latest format on startup\"));\n     strUsage += HelpMessageOpt(\"-wallet=<file>\", _(\"Specify wallet file (within data directory)\") + \" \" + strprintf(_(\"(default: %s)\"), DEFAULT_WALLET_DAT));\n     strUsage += HelpMessageOpt(\"-walletbroadcast\", _(\"Make the wallet broadcast transactions\") + \" \" + strprintf(_(\"(default: %u)\"), DEFAULT_WALLETBROADCAST));\n-    strUsage += HelpMessageOpt(\"-walletdir=<dir>\", _(\"Specify directory to hold wallets (default: <datadir>/wallets if it exists, otherwise <datadir>)\"));\n+    strUsage += HelpMessageOpt(\"-walletsdir=<dir>\", _(\"Specify directory to hold wallets (default: <datadir>/wallets if it exists, otherwise <datadir>)\"));\n     strUsage += HelpMessageOpt(\"-walletnotify=<cmd>\", _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\"));\n     strUsage += HelpMessageOpt(\"-zapwallettxes=<mode>\", _(\"Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup\") +\n                                \" \" + _(\"(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\"));\n@@ -205,11 +205,11 @@ bool VerifyWallets()\n         return true;\n     }\n \n-    if (gArgs.IsArgSet(\"-walletdir\") && !fs::is_directory(GetWalletDir())) {\n-        if (fs::exists(fs::system_complete(gArgs.GetArg(\"-walletdir\", \"\")))) {\n-            return InitError(strprintf(_(\"Specified -walletdir \\\"%s\\\" is not a directory\"), gArgs.GetArg(\"-walletdir\", \"\").c_str()));\n+    if (gArgs.IsArgSet(\"-walletsdir\") && !fs::is_directory(GetWalletDir())) {\n+        if (fs::exists(fs::system_complete(gArgs.GetArg(\"-walletsdir\", \"\")))) {\n+            return InitError(strprintf(_(\"Specified -walletsdir \\\"%s\\\" is not a directory\"), gArgs.GetArg(\"-walletsdir\", \"\").c_str()));\n         }\n-        return InitError(strprintf(_(\"Specified -walletdir \\\"%s\\\" does not exist\"), gArgs.GetArg(\"-walletdir\", \"\").c_str()));\n+        return InitError(strprintf(_(\"Specified -walletsdir \\\"%s\\\" does not exist\"), gArgs.GetArg(\"-walletsdir\", \"\").c_str()));\n     }\n \n     LogPrintf(\"Using wallet directory %s\\n\", GetWalletDir().string());"
      },
      {
        "sha": "dff3b140a53713e460767c235d628b3cd1f9dc44",
        "filename": "src/wallet/walletutil.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23fc59a941c43a7fa1fde30e98aedb050e2aad50/src/wallet/walletutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23fc59a941c43a7fa1fde30e98aedb050e2aad50/src/wallet/walletutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletutil.cpp?ref=23fc59a941c43a7fa1fde30e98aedb050e2aad50",
        "patch": "@@ -8,8 +8,8 @@ fs::path GetWalletDir()\n {\n     fs::path path;\n \n-    if (gArgs.IsArgSet(\"-walletdir\")) {\n-        path = fs::system_complete(gArgs.GetArg(\"-walletdir\", \"\"));\n+    if (gArgs.IsArgSet(\"-walletsdir\")) {\n+        path = fs::system_complete(gArgs.GetArg(\"-walletsdir\", \"\"));\n         if (!fs::is_directory(path)) {\n             // If the path specified doesn't exist, we return the deliberately\n             // invalid empty string."
      },
      {
        "sha": "95d79ab9acf34b700670a01b28330ef0d7a8deb5",
        "filename": "test/functional/multiwallet.py",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23fc59a941c43a7fa1fde30e98aedb050e2aad50/test/functional/multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23fc59a941c43a7fa1fde30e98aedb050e2aad50/test/functional/multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/multiwallet.py?ref=23fc59a941c43a7fa1fde30e98aedb050e2aad50",
        "patch": "@@ -45,33 +45,33 @@ def run_test(self):\n         os.symlink(wallet_dir('w1'), wallet_dir('w12'))\n         self.assert_start_raises_init_error(0, ['-wallet=w12'], 'Error loading wallet w12. -wallet filename must be a regular file.')\n \n-        # should not initialize if the specified walletdir does not exist\n-        self.assert_start_raises_init_error(0, ['-walletdir=bad'], 'Error: Specified -walletdir \"bad\" does not exist')\n-        # should not initialize if the specified walletdir is not a directory\n+        # should not initialize if the specified walletsdir does not exist\n+        self.assert_start_raises_init_error(0, ['-walletsdir=bad'], 'Error: Specified -walletsdir \"bad\" does not exist')\n+        # should not initialize if the specified walletsdir is not a directory\n         not_a_dir = wallet_dir('notadir')\n         open(not_a_dir, 'a').close()\n-        self.assert_start_raises_init_error(0, ['-walletdir=' + not_a_dir], 'Error: Specified -walletdir \"' + not_a_dir + '\" is not a directory')\n+        self.assert_start_raises_init_error(0, ['-walletsdir=' + not_a_dir], 'Error: Specified -walletsdir \"' + not_a_dir + '\" is not a directory')\n \n         # if wallets/ doesn't exist, datadir should be the default wallet dir\n-        wallet_dir2 = data_dir('walletdir')\n+        wallet_dir2 = data_dir('walletsdir')\n         os.rename(wallet_dir(), wallet_dir2)\n         self.start_node(0, ['-wallet=w4', '-wallet=w5'])\n         assert_equal(set(node.listwallets()), {\"w4\", \"w5\"})\n         w5 = wallet(\"w5\")\n         w5.generate(1)\n \n-        # now if wallets/ exists again, but the rootdir is specified as the walletdir, w4 and w5 should still be loaded\n+        # now if wallets/ exists again, but the rootdir is specified as the walletsdir, w4 and w5 should still be loaded\n         os.rename(wallet_dir2, wallet_dir())\n-        self.restart_node(0, ['-wallet=w4', '-wallet=w5', '-walletdir=' + data_dir()])\n+        self.restart_node(0, ['-wallet=w4', '-wallet=w5', '-walletsdir=' + data_dir()])\n         assert_equal(set(node.listwallets()), {\"w4\", \"w5\"})\n         w5 = wallet(\"w5\")\n         w5_info = w5.getwalletinfo()\n         assert_equal(w5_info['immature_balance'], 50)\n \n-        competing_wallet_dir = os.path.join(self.options.tmpdir, 'competing_walletdir')\n+        competing_wallet_dir = os.path.join(self.options.tmpdir, 'competing_walletsdir')\n         os.mkdir(competing_wallet_dir)\n-        self.restart_node(0, ['-walletdir='+competing_wallet_dir])\n-        self.assert_start_raises_init_error(1, ['-walletdir='+competing_wallet_dir], 'Error initializing wallet database environment')\n+        self.restart_node(0, ['-walletsdir='+competing_wallet_dir])\n+        self.assert_start_raises_init_error(1, ['-walletsdir='+competing_wallet_dir], 'Error initializing wallet database environment')\n \n         self.restart_node(0, self.extra_args[0])\n "
      }
    ]
  }
]