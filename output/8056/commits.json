[
  {
    "sha": "fac93497986b5f74716383bf26c78406253c625a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWM5MzQ5Nzk4NmI1Zjc0NzE2MzgzYmYyNmM3ODQwNjI1M2M2MjVh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-05-14T11:01:31Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-05-15T10:58:53Z"
      },
      "message": "[qa] Remove hardcoded \"4 nodes\" from test_framework",
      "tree": {
        "sha": "10656400cfb00351ed99475fbf98eff13d4e4d9a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10656400cfb00351ed99475fbf98eff13d4e4d9a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac93497986b5f74716383bf26c78406253c625a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac93497986b5f74716383bf26c78406253c625a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac93497986b5f74716383bf26c78406253c625a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac93497986b5f74716383bf26c78406253c625a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "169d379c98357a17e634f34b5e72033c69f9a7cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/169d379c98357a17e634f34b5e72033c69f9a7cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/169d379c98357a17e634f34b5e72033c69f9a7cb"
      }
    ],
    "stats": {
      "total": 429,
      "additions": 291,
      "deletions": 138
    },
    "files": [
      {
        "sha": "c50c3cc562e5f60811da8bc66e9d3359e954f821",
        "filename": "qa/rpc-tests/abandonconflict.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/abandonconflict.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -9,6 +9,10 @@\n import urllib.parse\n \n class AbandonConflictTest(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 2\n+        self.setup_clean_chain = False\n \n     def setup_network(self):\n         self.nodes = []"
      },
      {
        "sha": "754b6873b71ff7098535a3822ac04e273959dfe5",
        "filename": "qa/rpc-tests/bip65-cltv-p2p.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/bip65-cltv-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/bip65-cltv-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv-p2p.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -37,11 +37,12 @@ def cltv_invalidate(tx):\n class BIP65Test(ComparisonTestFramework):\n \n     def __init__(self):\n+        super().__init__()\n         self.num_nodes = 1\n \n     def setup_network(self):\n         # Must set the blockversion for this test\n-        self.nodes = start_nodes(1, self.options.tmpdir,\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir,\n                                  extra_args=[['-debug', '-whitelist=127.0.0.1', '-blockversion=3']],\n                                  binary=[self.options.testbinary])\n "
      },
      {
        "sha": "abba7fc20e7d9296210f6d77a723a37b8046e8cd",
        "filename": "qa/rpc-tests/bip65-cltv.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/bip65-cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/bip65-cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -11,6 +11,10 @@\n from test_framework.util import *\n \n class BIP65Test(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 3\n+        self.setup_clean_chain = False\n \n     def setup_network(self):\n         self.nodes = []"
      },
      {
        "sha": "8ba07043849a6fd346f4caf7c001b73a41054535",
        "filename": "qa/rpc-tests/bip68-112-113-p2p.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/bip68-112-113-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/bip68-112-113-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-112-113-p2p.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -94,11 +94,12 @@ def all_rlt_txs(txarray):\n \n class BIP68_112_113Test(ComparisonTestFramework):\n     def __init__(self):\n+        super().__init__()\n         self.num_nodes = 1\n \n     def setup_network(self):\n         # Must set the blockversion for this test\n-        self.nodes = start_nodes(1, self.options.tmpdir,\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir,\n                                  extra_args=[['-debug', '-whitelist=127.0.0.1', '-blockversion=4']],\n                                  binary=[self.options.testbinary])\n "
      },
      {
        "sha": "a12bf10ebd75895e31e369572517150a002f6f97",
        "filename": "qa/rpc-tests/bip68-sequence.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/bip68-sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/bip68-sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-sequence.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -22,6 +22,10 @@\n NOT_FINAL_ERROR = \"64: non-BIP68-final\"\n \n class BIP68Test(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 2\n+        self.setup_clean_chain = False\n \n     def setup_network(self):\n         self.nodes = []"
      },
      {
        "sha": "aae258315e0b77584774a148d3baf46e5b3a9b0d",
        "filename": "qa/rpc-tests/bip9-softforks.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/bip9-softforks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/bip9-softforks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip9-softforks.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -32,10 +32,11 @@\n class BIP9SoftForksTest(ComparisonTestFramework):\n \n     def __init__(self):\n+        super().__init__()\n         self.num_nodes = 1\n \n     def setup_network(self):\n-        self.nodes = start_nodes(1, self.options.tmpdir,\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir,\n                                  extra_args=[['-debug', '-whitelist=127.0.0.1']],\n                                  binary=[self.options.testbinary])\n "
      },
      {
        "sha": "4e4936a4ae6de0f532154c021779bcc1f14a0f91",
        "filename": "qa/rpc-tests/bipdersig-p2p.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/bipdersig-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/bipdersig-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig-p2p.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -45,11 +45,12 @@ def unDERify(tx):\n class BIP66Test(ComparisonTestFramework):\n \n     def __init__(self):\n+        super().__init__()\n         self.num_nodes = 1\n \n     def setup_network(self):\n         # Must set the blockversion for this test\n-        self.nodes = start_nodes(1, self.options.tmpdir, \n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir,\n                                  extra_args=[['-debug', '-whitelist=127.0.0.1', '-blockversion=2']],\n                                  binary=[self.options.testbinary])\n "
      },
      {
        "sha": "17c2ced79ac1ec6c985e61059bb965331eaddebb",
        "filename": "qa/rpc-tests/bipdersig.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/bipdersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/bipdersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -11,6 +11,10 @@\n from test_framework.util import *\n \n class BIP66Test(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 3\n+        self.setup_clean_chain = False\n \n     def setup_network(self):\n         self.nodes = []"
      },
      {
        "sha": "410b85d15e35f04a31834bf3b492f9164dbce67a",
        "filename": "qa/rpc-tests/blockchain.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/blockchain.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -13,7 +13,6 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.authproxy import JSONRPCException\n from test_framework.util import (\n-    initialize_chain,\n     assert_equal,\n     assert_raises,\n     assert_is_hex_string,\n@@ -32,12 +31,13 @@ class BlockchainTest(BitcoinTestFramework):\n \n     \"\"\"\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \" + self.options.tmpdir)\n-        initialize_chain(self.options.tmpdir)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n \n     def setup_network(self, split=False):\n-        self.nodes = start_nodes(2, self.options.tmpdir)\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n         connect_nodes_bi(self.nodes, 0, 1)\n         self.is_network_split = False\n         self.sync_all()"
      },
      {
        "sha": "24768c265577a49367b9c7c67d8d79059f37e3c2",
        "filename": "qa/rpc-tests/decodescript.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/decodescript.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/decodescript.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/decodescript.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -11,12 +11,13 @@\n class DecodeScriptTest(BitcoinTestFramework):\n     \"\"\"Tests decoding scripts via RPC command \"decodescript\".\"\"\"\n \n-    def setup_chain(self):\n-        print('Initializing test directory ' + self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 1)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n \n     def setup_network(self, split=False):\n-        self.nodes = start_nodes(1, self.options.tmpdir)\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n         self.is_network_split = False\n \n     def decodescript_script_sig(self):"
      },
      {
        "sha": "36c147edad3a6f9c94c16e744432ba337e654ce0",
        "filename": "qa/rpc-tests/disablewallet.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/disablewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/disablewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/disablewallet.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -13,12 +13,13 @@\n \n class DisableWalletTest (BitcoinTestFramework):\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 1)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n \n     def setup_network(self, split=False):\n-        self.nodes = start_nodes(1, self.options.tmpdir, [['-disablewallet']])\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, [['-disablewallet']])\n         self.is_network_split = False\n         self.sync_all()\n "
      },
      {
        "sha": "5a3f75c8087410b0a8e18990f13b60db26eeeb23",
        "filename": "qa/rpc-tests/forknotify.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/forknotify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/forknotify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/forknotify.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -12,6 +12,11 @@\n \n class ForkNotifyTest(BitcoinTestFramework):\n \n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 2\n+        self.setup_clean_chain = False\n+\n     alert_filename = None  # Set by setup_network\n \n     def setup_network(self):"
      },
      {
        "sha": "57b850a6a9eaa3f068f9e10f4f99c1ed6d7df78d",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -9,12 +9,13 @@\n # Create one-input, one-output, no-fee transaction:\n class RawTransactionsTest(BitcoinTestFramework):\n \n-    def setup_chain(self):\n-        print((\"Initializing test directory \"+self.options.tmpdir))\n-        initialize_chain_clean(self.options.tmpdir, 4)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n \n     def setup_network(self, split=False):\n-        self.nodes = start_nodes(4, self.options.tmpdir)\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n \n         connect_nodes_bi(self.nodes,0,1)\n         connect_nodes_bi(self.nodes,1,2)\n@@ -521,7 +522,7 @@ def run_test(self):\n         stop_nodes(self.nodes)\n         wait_bitcoinds()\n \n-        self.nodes = start_nodes(4, self.options.tmpdir)\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n         # This test is not meant to test fee estimation and we'd like\n         # to be sure all txs are sent at a consistent desired feerate\n         for node in self.nodes:"
      },
      {
        "sha": "3cddf4046aaf6eed75634c4ef2161a0a607ebc09",
        "filename": "qa/rpc-tests/getblocktemplate_longpoll.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/getblocktemplate_longpoll.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/getblocktemplate_longpoll.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_longpoll.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -26,6 +26,11 @@ class GetBlockTemplateLPTest(BitcoinTestFramework):\n     Test longpolling with getblocktemplate.\n     '''\n \n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 4\n+        self.setup_clean_chain = False\n+\n     def run_test(self):\n         print(\"Warning: this test will take about 70 seconds in the best case. Be patient.\")\n         self.nodes[0].generate(10)"
      },
      {
        "sha": "7a4f8f8fdc3c2a3cc50e3c71030c3578d3919c1e",
        "filename": "qa/rpc-tests/getblocktemplate_proposals.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/getblocktemplate_proposals.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/getblocktemplate_proposals.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_proposals.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -70,6 +70,15 @@ class GetBlockTemplateProposalTest(BitcoinTestFramework):\n     Test block proposals with getblocktemplate.\n     '''\n \n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 2\n+        self.setup_clean_chain = False\n+\n+    def setup_network(self):\n+        self.nodes = self.setup_nodes()\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n     def run_test(self):\n         node = self.nodes[0]\n         node.generate(1) # Mine a block to leave initial block download"
      },
      {
        "sha": "1c66b8c28927d110947e6430f04787bb9bd2bb0d",
        "filename": "qa/rpc-tests/getchaintips.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/getchaintips.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/getchaintips.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getchaintips.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -11,9 +11,12 @@\n from test_framework.util import assert_equal\n \n class GetChainTipsTest (BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 4\n+        self.setup_clean_chain = False\n \n     def run_test (self):\n-        BitcoinTestFramework.run_test (self)\n \n         tips = self.nodes[0].getchaintips ()\n         assert_equal (len (tips), 1)"
      },
      {
        "sha": "10bc927e1a51a6ea1aefa2bbc1b89f374c61a3bd",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -14,8 +14,13 @@\n import urllib.parse\n \n class HTTPBasicsTest (BitcoinTestFramework):\n-    def setup_nodes(self):\n-        return start_nodes(4, self.options.tmpdir)\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 3\n+        self.setup_clean_chain = False\n+\n+    def setup_network(self):\n+        self.nodes = self.setup_nodes()\n \n     def run_test(self):\n "
      },
      {
        "sha": "761c9af90c30ecf42c67d21a9239b48870adc575",
        "filename": "qa/rpc-tests/importprunedfunds.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/importprunedfunds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/importprunedfunds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/importprunedfunds.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -9,12 +9,13 @@\n \n class ImportPrunedFundsTest(BitcoinTestFramework):\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 4)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n \n     def setup_network(self, split=False):\n-        self.nodes = start_nodes(2, self.options.tmpdir)\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n         connect_nodes_bi(self.nodes,0,1)\n         self.is_network_split=False\n         self.sync_all()"
      },
      {
        "sha": "0faadd33ab35a55cf68b1e3b20ad71286ca9c2f9",
        "filename": "qa/rpc-tests/invalidateblock.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/invalidateblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/invalidateblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidateblock.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -13,10 +13,11 @@\n class InvalidateTest(BitcoinTestFramework):\n     \n         \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 3)\n-                 \n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+\n     def setup_network(self):\n         self.nodes = []\n         self.is_network_split = False "
      },
      {
        "sha": "3d8107a76c661a7890ee9a3abbd5f360291791eb",
        "filename": "qa/rpc-tests/invalidblockrequest.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/invalidblockrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/invalidblockrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidblockrequest.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -25,6 +25,7 @@ class InvalidBlockRequestTest(ComparisonTestFramework):\n     ''' Can either run this test as 1 node with expected answers, or two and compare them. \n         Change the \"outcome\" variable from each TestInstance object to only do the comparison. '''\n     def __init__(self):\n+        super().__init__()\n         self.num_nodes = 1\n \n     def run_test(self):"
      },
      {
        "sha": "93205d79dee5bddd8e5e3d0862374dd72d1fdcb1",
        "filename": "qa/rpc-tests/invalidtxrequest.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/invalidtxrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/invalidtxrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidtxrequest.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -19,6 +19,7 @@ class InvalidTxRequestTest(ComparisonTestFramework):\n     ''' Can either run this test as 1 node with expected answers, or two and compare them. \n         Change the \"outcome\" variable from each TestInstance object to only do the comparison. '''\n     def __init__(self):\n+        super().__init__()\n         self.num_nodes = 1\n \n     def run_test(self):"
      },
      {
        "sha": "c75303ecbfc31b571b9825fb675df119627f0890",
        "filename": "qa/rpc-tests/keypool.py",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/keypool.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -5,8 +5,6 @@\n \n # Exercise the wallet keypool, and interaction with wallet encryption/locking\n \n-# Add python-bitcoinrpc to module search path:\n-\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n \n@@ -65,12 +63,13 @@ def run_test(self):\n         except JSONRPCException as e:\n             assert(e.error['code']==-12)\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain(self.options.tmpdir)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n \n     def setup_network(self):\n-        self.nodes = start_nodes(1, self.options.tmpdir)\n+        self.nodes = self.setup_nodes()\n \n if __name__ == '__main__':\n     KeyPoolTest().main()"
      },
      {
        "sha": "5ec6ce17e01e8aae3ad4a513b4eaafdf1127edc7",
        "filename": "qa/rpc-tests/listtransactions.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listtransactions.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -17,11 +17,15 @@ def txFromHex(hexstring):\n     return tx\n \n class ListTransactionsTest(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 4\n+        self.setup_clean_chain = False\n \n     def setup_nodes(self):\n         #This test requires mocktime\n         enable_mocktime()\n-        return start_nodes(4, self.options.tmpdir)\n+        return start_nodes(self.num_nodes, self.options.tmpdir)\n \n     def run_test(self):\n         # Simple send, 0 to 1:"
      },
      {
        "sha": "1df1c484bea1205ac3f8ec51f5c87830bc505a94",
        "filename": "qa/rpc-tests/maxblocksinflight.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/maxblocksinflight.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/maxblocksinflight.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxblocksinflight.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -76,12 +76,13 @@ def add_options(self, parser):\n                           default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n                           help=\"Binary to test max block requests behavior\")\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 1)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n \n     def setup_network(self):\n-        self.nodes = start_nodes(1, self.options.tmpdir,\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir,\n                                  extra_args=[['-debug', '-whitelist=127.0.0.1']],\n                                  binary=[self.options.testbinary])\n "
      },
      {
        "sha": "42235a511910b114d0263528b9357251264c12b9",
        "filename": "qa/rpc-tests/maxuploadtarget.py",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxuploadtarget.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -80,17 +80,19 @@ def received_pong():\n         return success\n \n class MaxUploadTest(BitcoinTestFramework):\n-    def __init__(self):\n-        self.utxo = []\n-        self.txouts = gen_return_txouts()\n  \n     def add_options(self, parser):\n         parser.add_option(\"--testbinary\", dest=\"testbinary\",\n                           default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n                           help=\"bitcoind binary to test\")\n \n-    def setup_chain(self):\n-        initialize_chain_clean(self.options.tmpdir, 2)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+        self.utxo = []\n+        self.txouts = gen_return_txouts()\n \n     def setup_network(self):\n         # Start a node with maxuploadtarget of 200 MB (/24h)"
      },
      {
        "sha": "c1c5558a95fc131152e1d8295e1e874daa772785",
        "filename": "qa/rpc-tests/mempool_limit.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_limit.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -10,19 +10,19 @@\n \n class MempoolLimitTest(BitcoinTestFramework):\n \n-    def __init__(self):\n-        self.txouts = gen_return_txouts()\n-\n     def setup_network(self):\n         self.nodes = []\n         self.nodes.append(start_node(0, self.options.tmpdir, [\"-maxmempool=5\", \"-spendzeroconfchange=0\", \"-debug\"]))\n         self.is_network_split = False\n         self.sync_all()\n         self.relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 2)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+        self.txouts = gen_return_txouts()\n \n     def run_test(self):\n         txids = []"
      },
      {
        "sha": "693ff593b348560acc96cb8f5735cb062ae1d455",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -13,6 +13,10 @@\n MAX_DESCENDANTS = 25\n \n class MempoolPackagesTest(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 2\n+        self.setup_clean_chain = False\n \n     def setup_network(self):\n         self.nodes = []"
      },
      {
        "sha": "301b094eb08ca6326d64cf8ae9c4ca77303e32ad",
        "filename": "qa/rpc-tests/mempool_reorg.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/mempool_reorg.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/mempool_reorg.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_reorg.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -13,6 +13,10 @@\n \n # Create one-input, one-output, no-fee transaction:\n class MempoolCoinbaseTest(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 2\n+        self.setup_clean_chain = False\n \n     alert_filename = None  # Set by setup_network\n "
      },
      {
        "sha": "3db12cbf76a68f2ba1098f58224c9a7343716c7d",
        "filename": "qa/rpc-tests/mempool_resurrect_test.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/mempool_resurrect_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/mempool_resurrect_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_resurrect_test.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -14,6 +14,11 @@\n # Create one-input, one-output, no-fee transaction:\n class MempoolCoinbaseTest(BitcoinTestFramework):\n \n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 1\n+        self.setup_clean_chain = False\n+\n     def setup_network(self):\n         # Just need one node for this test\n         args = [\"-checkmempool\", \"-debug=mempool\"]"
      },
      {
        "sha": "d5e4bf52d26ce5b8ce8580cd28f4673a62666f83",
        "filename": "qa/rpc-tests/mempool_spendcoinbase.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/mempool_spendcoinbase.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/mempool_spendcoinbase.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_spendcoinbase.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -19,6 +19,11 @@\n # Create one-input, one-output, no-fee transaction:\n class MempoolSpendCoinbaseTest(BitcoinTestFramework):\n \n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 1\n+        self.setup_clean_chain = False\n+\n     def setup_network(self):\n         # Just need one node for this test\n         args = [\"-checkmempool\", \"-debug=mempool\"]"
      },
      {
        "sha": "b2155d7fc33c31b10642dccf2e8e13dbdf10ff7c",
        "filename": "qa/rpc-tests/merkle_blocks.py",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/merkle_blocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/merkle_blocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/merkle_blocks.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -12,9 +12,10 @@\n \n class MerkleBlockTest(BitcoinTestFramework):\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 4)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n \n     def setup_network(self):\n         self.nodes = []"
      },
      {
        "sha": "24373b257d7e602b1ff6255b75a1ea328ba00604",
        "filename": "qa/rpc-tests/multi_rpc.py",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/multi_rpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/multi_rpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/multi_rpc.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -8,25 +8,31 @@\n #\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import str_to_b64str, assert_equal\n \n+import os\n import http.client\n import urllib.parse\n \n class HTTPBasicsTest (BitcoinTestFramework):\n-    def setup_nodes(self):\n-        return start_nodes(4, self.options.tmpdir)\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n \n     def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain(self.options.tmpdir)\n+        super().setup_chain()\n         #Append rpcauth to bitcoin.conf before initialization\n         rpcauth = \"rpcauth=rt:93648e835a54c573682c2eb19f882535$7681e9c5b74bdd85e78166031d2058e1069b3ed7ed967c93fc63abba06f31144\"\n         rpcauth2 = \"rpcauth=rt2:f8607b1a88861fac29dfccf9b52ff9f$ff36a0c23c8c62b4846112e50fa888416e94c17bfd4c42f88fd8f55ec6a3137e\"\n         with open(os.path.join(self.options.tmpdir+\"/node0\", \"bitcoin.conf\"), 'a') as f:\n             f.write(rpcauth+\"\\n\")\n             f.write(rpcauth2+\"\\n\")\n \n+    def setup_network(self):\n+        self.nodes = self.setup_nodes()\n+\n     def run_test(self):\n \n         ##################################################"
      },
      {
        "sha": "e9682c4908f651366b8b554ab74ab45004975a0d",
        "filename": "qa/rpc-tests/nodehandling.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/nodehandling.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/nodehandling.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nodehandling.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -14,6 +14,12 @@\n import urllib.parse\n \n class NodeHandlingTest (BitcoinTestFramework):\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 4\n+        self.setup_clean_chain = False\n+\n     def run_test(self):\n         ###########################\n         # setban/listbanned tests #"
      },
      {
        "sha": "015ec34effabe7f6db1099a0512ad979c4073a83",
        "filename": "qa/rpc-tests/p2p-acceptblock.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/p2p-acceptblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/p2p-acceptblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-acceptblock.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -111,8 +111,10 @@ def add_options(self, parser):\n                           default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n                           help=\"bitcoind binary to test\")\n \n-    def setup_chain(self):\n-        initialize_chain_clean(self.options.tmpdir, 2)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n \n     def setup_network(self):\n         # Node0 will be used to test behavior of processing unrequested blocks"
      },
      {
        "sha": "cd0501a3140c33a9932f9d3c14b3c7c4ac5750dd",
        "filename": "qa/rpc-tests/p2p-feefilter.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/p2p-feefilter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/p2p-feefilter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-feefilter.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -46,6 +46,12 @@ def send_filter(self, feerate):\n         self.sync_with_ping()\n \n class FeeFilterTest(BitcoinTestFramework):\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 2\n+        self.setup_clean_chain = False\n+\n     def setup_network(self):\n         # Node1 will be used to generate txs which should be relayed from Node0\n         # to our test node"
      },
      {
        "sha": "aa0501c5e9260ee46fe3f4b516d3e931bb8f7f0a",
        "filename": "qa/rpc-tests/p2p-fullblocktest.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/p2p-fullblocktest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/p2p-fullblocktest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-fullblocktest.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -29,6 +29,7 @@ class FullBlockTest(ComparisonTestFramework):\n     ''' Can either run this test as 1 node with expected answers, or two and compare them. \n         Change the \"outcome\" variable from each TestInstance object to only do the comparison. '''\n     def __init__(self):\n+        super().__init__()\n         self.num_nodes = 1\n         self.block_heights = {}\n         self.coinbase_key = CECKey()"
      },
      {
        "sha": "962cafef0b17b27b3335f15acda08b372d71e7e0",
        "filename": "qa/rpc-tests/p2p-versionbits-warning.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/p2p-versionbits-warning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/p2p-versionbits-warning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-versionbits-warning.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -59,8 +59,10 @@ def sync_with_ping(self, timeout=30):\n \n \n class VersionBitsWarningTest(BitcoinTestFramework):\n-    def setup_chain(self):\n-        initialize_chain_clean(self.options.tmpdir, 1)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n \n     def setup_network(self):\n         self.nodes = []"
      },
      {
        "sha": "e1771231c066e97b432ebb23768663e371fecb25",
        "filename": "qa/rpc-tests/prioritise_transaction.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/prioritise_transaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/prioritise_transaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/prioritise_transaction.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -14,11 +14,11 @@\n class PrioritiseTransactionTest(BitcoinTestFramework):\n \n     def __init__(self):\n-        self.txouts = gen_return_txouts()\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 1)\n+        self.txouts = gen_return_txouts()\n \n     def setup_network(self):\n         self.nodes = []"
      },
      {
        "sha": "27160cae077621fff229a23e3f665ab35bfa22b1",
        "filename": "qa/rpc-tests/proxy_test.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/proxy_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/proxy_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/proxy_test.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -36,6 +36,10 @@\n \n class ProxyTest(BitcoinTestFramework):\n     def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 4\n+        self.setup_clean_chain = False\n+\n         self.have_ipv6 = test_ipv6_local()\n         # Create two proxies on different ports\n         # ... one unauthenticated\n@@ -77,7 +81,7 @@ def setup_nodes(self):\n             ]\n         if self.have_ipv6:\n             args[3] = ['-listen', '-debug=net', '-debug=proxy', '-proxy=[%s]:%i' % (self.conf3.addr),'-proxyrandomize=0', '-noonion']\n-        return start_nodes(4, self.options.tmpdir, extra_args=args)\n+        return start_nodes(self.num_nodes, self.options.tmpdir, extra_args=args)\n \n     def node_test(self, node, proxies, auth, test_onion=True):\n         rv = []"
      },
      {
        "sha": "4c0530b355a59cd5ec20205ede2a710bd1d9823b",
        "filename": "qa/rpc-tests/pruning.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/pruning.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -20,14 +20,14 @@ def calc_usage(blockdir):\n class PruneTest(BitcoinTestFramework):\n \n     def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+\n         self.utxo = []\n         self.address = [\"\",\"\"]\n         self.txouts = gen_return_txouts()\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 3)\n-\n     def setup_network(self):\n         self.nodes = []\n         self.is_network_split = False"
      },
      {
        "sha": "df02c1697f342c2e4da1cb6f40e5f7dd2c9b4c3a",
        "filename": "qa/rpc-tests/rawtransactions.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/rawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/rawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rawtransactions.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -14,12 +14,13 @@\n # Create one-input, one-output, no-fee transaction:\n class RawTransactionsTest(BitcoinTestFramework):\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 3)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n \n     def setup_network(self, split=False):\n-        self.nodes = start_nodes(3, self.options.tmpdir)\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n \n         #connect to a local machine for debugging\n         #url = \"http://bitcoinrpc:DP6DvqZtqXarpeNWyN3LZTFchCCyCUuHwNF7E8pX99x1@%s:%d\" % ('127.0.0.1', 18332)"
      },
      {
        "sha": "4f17b661cb28d78123632b69efe42a57b1faa7c5",
        "filename": "qa/rpc-tests/receivedby.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/receivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/receivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/receivedby.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -27,10 +27,15 @@ def get_sub_array_from_array(object_array, to_match):\n \n class ReceivedByTest(BitcoinTestFramework):\n \n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 4\n+        self.setup_clean_chain = False\n+\n     def setup_nodes(self):\n         #This test requires mocktime\n         enable_mocktime()\n-        return start_nodes(4, self.options.tmpdir)\n+        return start_nodes(self.num_nodes, self.options.tmpdir)\n \n     def run_test(self):\n         '''"
      },
      {
        "sha": "87e6239b59b32865ebf9633d379fd693d84d2718",
        "filename": "qa/rpc-tests/reindex.py",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/reindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/reindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/reindex.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -11,9 +11,10 @@\n \n class ReindexTest(BitcoinTestFramework):\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 1)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n \n     def setup_network(self):\n         self.nodes = []"
      },
      {
        "sha": "34c0f9d7957c71257e2d5d5a49e97b116dd5e02e",
        "filename": "qa/rpc-tests/replace-by-fee.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/replace-by-fee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/replace-by-fee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/replace-by-fee.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -68,6 +68,11 @@ def make_utxo(node, amount, confirmed=True, scriptPubKey=CScript([1])):\n \n class ReplaceByFeeTest(BitcoinTestFramework):\n \n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 1\n+        self.setup_clean_chain = False\n+\n     def setup_network(self):\n         self.nodes = []\n         self.nodes.append(start_node(0, self.options.tmpdir, [\"-maxorphantx=1000\", \"-debug\","
      },
      {
        "sha": "c9c2eaf7f37b96bf4bf2b2c63e56ef419063dfb0",
        "filename": "qa/rpc-tests/rest.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rest.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -47,12 +47,13 @@ def http_post_call(host, port, path, requestdata = '', response_object = 0):\n class RESTTest (BitcoinTestFramework):\n     FORMAT_SEPARATOR = \".\"\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 3)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n \n     def setup_network(self, split=False):\n-        self.nodes = start_nodes(3, self.options.tmpdir)\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n         connect_nodes_bi(self.nodes,0,1)\n         connect_nodes_bi(self.nodes,1,2)\n         connect_nodes_bi(self.nodes,0,2)"
      },
      {
        "sha": "572273566b63a0f1bab34ed0ad8fb23a1f63672c",
        "filename": "qa/rpc-tests/rpcbind_test.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/rpcbind_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/rpcbind_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcbind_test.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -24,7 +24,7 @@ def run_bind_test(tmpdir, allow_ips, connect_to, addresses, expected):\n     if allow_ips:\n         base_args += ['-rpcallowip=' + x for x in allow_ips]\n     binds = ['-rpcbind='+addr for addr in addresses]\n-    nodes = start_nodes(1, tmpdir, [base_args + binds], connect_to)\n+    nodes = start_nodes(self.num_nodes, tmpdir, [base_args + binds], connect_to)\n     try:\n         pid = bitcoind_processes[0].pid\n         assert_equal(set(get_bind_addrs(pid)), set(expected))\n@@ -38,7 +38,7 @@ def run_allowip_test(tmpdir, allow_ips, rpchost, rpcport):\n     at a non-localhost IP.\n     '''\n     base_args = ['-disablewallet', '-nolisten'] + ['-rpcallowip='+x for x in allow_ips]\n-    nodes = start_nodes(1, tmpdir, [base_args])\n+    nodes = start_nodes(self.num_nodes, tmpdir, [base_args])\n     try:\n         # connect to node through non-loopback interface\n         url = \"http://rt:rt@%s:%d\" % (rpchost, rpcport,)"
      },
      {
        "sha": "6ab17d59b387834f14445e4165ed401650cc0545",
        "filename": "qa/rpc-tests/sendheaders.py",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/sendheaders.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/sendheaders.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/sendheaders.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -208,12 +208,14 @@ def __init__(self):\n         BaseNode.__init__(self)\n \n class SendHeadersTest(BitcoinTestFramework):\n-    def setup_chain(self):\n-        initialize_chain_clean(self.options.tmpdir, 2)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n \n     def setup_network(self):\n         self.nodes = []\n-        self.nodes = start_nodes(2, self.options.tmpdir, [[\"-debug\", \"-logtimemicros=1\"]]*2)\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, [[\"-debug\", \"-logtimemicros=1\"]]*2)\n         connect_nodes(self.nodes[0], 1)\n \n     # mine count blocks and return the new tip"
      },
      {
        "sha": "31b6f14a26562fbdb251cefb432fbf5a183e99bd",
        "filename": "qa/rpc-tests/signmessages.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/signmessages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/signmessages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/signmessages.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -10,12 +10,13 @@\n class SignMessagesTest(BitcoinTestFramework):\n     \"\"\"Tests RPC commands for signing and verifying messages.\"\"\"\n \n-    def setup_chain(self):\n-        print('Initializing test directory ' + self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 1)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n \n     def setup_network(self, split=False):\n-        self.nodes = start_nodes(1, self.options.tmpdir)\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n         self.is_network_split = False\n \n     def run_test(self):"
      },
      {
        "sha": "c61a280616cf7194a4bca1ba23ca842dc2b6aced",
        "filename": "qa/rpc-tests/signrawtransactions.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/signrawtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/signrawtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/signrawtransactions.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -10,12 +10,13 @@\n class SignRawTransactionsTest(BitcoinTestFramework):\n     \"\"\"Tests transaction signing via RPC command \"signrawtransaction\".\"\"\"\n \n-    def setup_chain(self):\n-        print('Initializing test directory ' + self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 1)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n \n     def setup_network(self, split=False):\n-        self.nodes = start_nodes(1, self.options.tmpdir)\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n         self.is_network_split = False\n \n     def successful_signing_test(self):"
      },
      {
        "sha": "d76fba4b075ce0176990ab9140e4bede577e2bd6",
        "filename": "qa/rpc-tests/smartfees.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/smartfees.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/smartfees.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/smartfees.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -145,6 +145,11 @@ def check_estimates(node, fees_seen, max_invalid, print_estimates = True):\n \n class EstimateFeeTest(BitcoinTestFramework):\n \n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 3\n+        self.setup_clean_chain = False\n+\n     def setup_network(self):\n         '''\n         We'll setup the network to have 3 nodes that all mine with different parameters."
      },
      {
        "sha": "b9b803429dec252fda59609b9b8648426278231d",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "modified",
        "additions": 13,
        "deletions": 12,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -15,7 +15,6 @@\n \n from .util import (\n     initialize_chain,\n-    assert_equal,\n     start_nodes,\n     connect_nodes_bi,\n     sync_blocks,\n@@ -32,21 +31,26 @@\n \n class BitcoinTestFramework(object):\n \n-    # These may be over-ridden by subclasses:\n+    def __init__(self):\n+        self.num_nodes = 4\n+        self.setup_clean_chain = False\n+        self.nodes = None\n+\n     def run_test(self):\n-        for node in self.nodes:\n-            assert_equal(node.getblockcount(), 200)\n-            assert_equal(node.getbalance(), 25*50)\n+        raise NotImplementedError\n \n     def add_options(self, parser):\n         pass\n \n     def setup_chain(self):\n         print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain(self.options.tmpdir)\n+        if self.setup_clean_chain:\n+            initialize_chain_clean(self.options.tmpdir, self.num_nodes)\n+        else:\n+            initialize_chain(self.options.tmpdir, self.num_nodes)\n \n     def setup_nodes(self):\n-        return start_nodes(4, self.options.tmpdir)\n+        return start_nodes(self.num_nodes, self.options.tmpdir)\n \n     def setup_network(self, split = False):\n         self.nodes = self.setup_nodes()\n@@ -181,9 +185,10 @@ def main(self):\n \n class ComparisonTestFramework(BitcoinTestFramework):\n \n-    # Can override the num_nodes variable to indicate how many nodes to run.\n     def __init__(self):\n+        super().__init__()\n         self.num_nodes = 2\n+        self.setup_clean_chain = True\n \n     def add_options(self, parser):\n         parser.add_option(\"--testbinary\", dest=\"testbinary\",\n@@ -193,10 +198,6 @@ def add_options(self, parser):\n                           default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n                           help=\"bitcoind binary to use for reference nodes (if any)\")\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, self.num_nodes)\n-\n     def setup_network(self):\n         self.nodes = start_nodes(\n             self.num_nodes, self.options.tmpdir,"
      },
      {
        "sha": "0e522e78d4853004c7f302059b27412394caa607",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 20,
        "deletions": 13,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -182,24 +182,28 @@ def wait_for_bitcoind_start(process, url, i):\n                 raise # unkown JSON RPC exception\n         time.sleep(0.25)\n \n-def initialize_chain(test_dir):\n+def initialize_chain(test_dir, num_nodes):\n     \"\"\"\n-    Create (or copy from cache) a 200-block-long chain and\n-    4 wallets.\n+    Create a cache of a 200-block-long chain (with wallet) for MAX_NODES\n+    Afterward, create num_nodes copies from the cache\n     \"\"\"\n \n-    if (not os.path.isdir(os.path.join(\"cache\",\"node0\"))\n-        or not os.path.isdir(os.path.join(\"cache\",\"node1\"))\n-        or not os.path.isdir(os.path.join(\"cache\",\"node2\"))\n-        or not os.path.isdir(os.path.join(\"cache\",\"node3\"))):\n+    assert num_nodes <= MAX_NODES\n+    create_cache = False\n+    for i in range(MAX_NODES):\n+        if not os.path.isdir(os.path.join('cache', 'node'+str(i))):\n+            create_cache = True\n+            break\n+\n+    if create_cache:\n \n         #find and delete old cache directories if any exist\n-        for i in range(4):\n+        for i in range(MAX_NODES):\n             if os.path.isdir(os.path.join(\"cache\",\"node\"+str(i))):\n                 shutil.rmtree(os.path.join(\"cache\",\"node\"+str(i)))\n \n         # Create cache directories, run bitcoinds:\n-        for i in range(4):\n+        for i in range(MAX_NODES):\n             datadir=initialize_datadir(\"cache\", i)\n             args = [ os.getenv(\"BITCOIND\", \"bitcoind\"), \"-server\", \"-keypool=1\", \"-datadir=\"+datadir, \"-discover=0\" ]\n             if i > 0:\n@@ -212,15 +216,18 @@ def initialize_chain(test_dir):\n                 print(\"initialize_chain: RPC succesfully started\")\n \n         rpcs = []\n-        for i in range(4):\n+        for i in range(MAX_NODES):\n             try:\n                 rpcs.append(get_rpc_proxy(rpc_url(i), i))\n             except:\n                 sys.stderr.write(\"Error connecting to \"+url+\"\\n\")\n                 sys.exit(1)\n \n-        # Create a 200-block-long chain; each of the 4 nodes\n+        # Create a 200-block-long chain; each of the 4 first nodes\n         # gets 25 mature blocks and 25 immature.\n+        # Note: To preserve compatibility with older versions of\n+        # initialize_chain, only 4 nodes will generate coins.\n+        #\n         # blocks are created with timestamps 10 minutes apart\n         # starting from 2010 minutes in the past\n         enable_mocktime()\n@@ -238,13 +245,13 @@ def initialize_chain(test_dir):\n         stop_nodes(rpcs)\n         wait_bitcoinds()\n         disable_mocktime()\n-        for i in range(4):\n+        for i in range(MAX_NODES):\n             os.remove(log_filename(\"cache\", i, \"debug.log\"))\n             os.remove(log_filename(\"cache\", i, \"db.log\"))\n             os.remove(log_filename(\"cache\", i, \"peers.dat\"))\n             os.remove(log_filename(\"cache\", i, \"fee_estimates.dat\"))\n \n-    for i in range(4):\n+    for i in range(num_nodes):\n         from_dir = os.path.join(\"cache\", \"node\"+str(i))\n         to_dir = os.path.join(test_dir,  \"node\"+str(i))\n         shutil.copytree(from_dir, to_dir)"
      },
      {
        "sha": "22f850ece64a2ce22112323e72cdaf63e5132c80",
        "filename": "qa/rpc-tests/txn_clone.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/txn_clone.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/txn_clone.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txn_clone.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -12,6 +12,11 @@\n \n class TxnMallTest(BitcoinTestFramework):\n \n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 4\n+        self.setup_clean_chain = False\n+\n     def add_options(self, parser):\n         parser.add_option(\"--mineblock\", dest=\"mine_block\", default=False, action=\"store_true\",\n                           help=\"Test double-spend of 1-confirmed transaction\")"
      },
      {
        "sha": "84944c3c1943aaf8c9b1c759eb6cacfdd5198019",
        "filename": "qa/rpc-tests/txn_doublespend.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/txn_doublespend.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/txn_doublespend.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txn_doublespend.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -12,6 +12,11 @@\n \n class TxnMallTest(BitcoinTestFramework):\n \n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 4\n+        self.setup_clean_chain = False\n+\n     def add_options(self, parser):\n         parser.add_option(\"--mineblock\", dest=\"mine_block\", default=False, action=\"store_true\",\n                           help=\"Test double-spend of 1-confirmed transaction\")"
      },
      {
        "sha": "2d24ced97cffc2e1addd00184f85a1b1ca64e283",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -19,9 +19,10 @@ def check_fee_amount(self, curr_balance, balance_with_fee, fee_per_byte, tx_size\n             raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\"%(str(fee), str(target_fee)))\n         return curr_balance\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 4)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n \n     def setup_network(self, split=False):\n         self.nodes = start_nodes(3, self.options.tmpdir)"
      },
      {
        "sha": "b991d5c7618621a28c60385787c1f26449680bc5",
        "filename": "qa/rpc-tests/walletbackup.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/walletbackup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/walletbackup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/walletbackup.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -41,15 +41,16 @@\n \n class WalletBackupTest(BitcoinTestFramework):\n \n-    def setup_chain(self):\n-        logging.info(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 4)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n \n     # This mirrors how the network was setup in the bash test\n     def setup_network(self, split=False):\n         # nodes 1, 2,3 are spenders, let's give them a keypool=100\n         extra_args = [[\"-keypool=100\"], [\"-keypool=100\"], [\"-keypool=100\"], []]\n-        self.nodes = start_nodes(4, self.options.tmpdir, extra_args)\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, extra_args)\n         connect_nodes(self.nodes[0], 3)\n         connect_nodes(self.nodes[1], 3)\n         connect_nodes(self.nodes[2], 3)"
      },
      {
        "sha": "17ba53a844b4fa78a9072c20be882e95c8d3cc2c",
        "filename": "qa/rpc-tests/zapwallettxes.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/zapwallettxes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/zapwallettxes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zapwallettxes.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -9,12 +9,13 @@\n \n class ZapWalletTXesTest (BitcoinTestFramework):\n \n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        initialize_chain_clean(self.options.tmpdir, 3)\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n \n     def setup_network(self, split=False):\n-        self.nodes = start_nodes(3, self.options.tmpdir)\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n         connect_nodes_bi(self.nodes,0,1)\n         connect_nodes_bi(self.nodes,1,2)\n         connect_nodes_bi(self.nodes,0,2)"
      },
      {
        "sha": "3a116317fed969f0d948e664b94a1a80d826327e",
        "filename": "qa/rpc-tests/zmq_test.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac93497986b5f74716383bf26c78406253c625a/qa/rpc-tests/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zmq_test.py?ref=fac93497986b5f74716383bf26c78406253c625a",
        "patch": "@@ -17,6 +17,10 @@\n \n class ZMQTest (BitcoinTestFramework):\n \n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 4\n+\n     port = 28332\n \n     def setup_nodes(self):\n@@ -25,7 +29,7 @@ def setup_nodes(self):\n         self.zmqSubSocket.setsockopt(zmq.SUBSCRIBE, b\"hashblock\")\n         self.zmqSubSocket.setsockopt(zmq.SUBSCRIBE, b\"hashtx\")\n         self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % self.port)\n-        return start_nodes(4, self.options.tmpdir, extra_args=[\n+        return start_nodes(self.num_nodes, self.options.tmpdir, extra_args=[\n             ['-zmqpubhashtx=tcp://127.0.0.1:'+str(self.port), '-zmqpubhashblock=tcp://127.0.0.1:'+str(self.port)],\n             [],\n             [],"
      }
    ]
  },
  {
    "sha": "fad68f751aff024bcbc1587640c3591aab5a80f7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQ2OGY3NTFhZmYwMjRiY2JjMTU4NzY0MGMzNTkxYWFiNWE4MGY3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-05-15T10:20:15Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-05-15T10:58:56Z"
      },
      "message": "[qa] Reduce node count for some tests",
      "tree": {
        "sha": "fba427e9331b5f99a8df173bcfc4761318229722",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fba427e9331b5f99a8df173bcfc4761318229722"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad68f751aff024bcbc1587640c3591aab5a80f7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad68f751aff024bcbc1587640c3591aab5a80f7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad68f751aff024bcbc1587640c3591aab5a80f7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad68f751aff024bcbc1587640c3591aab5a80f7/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fac93497986b5f74716383bf26c78406253c625a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac93497986b5f74716383bf26c78406253c625a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fac93497986b5f74716383bf26c78406253c625a"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d86f51b7f3aaf691b721a5f906ca1f3008b51666",
        "filename": "qa/rpc-tests/importprunedfunds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad68f751aff024bcbc1587640c3591aab5a80f7/qa/rpc-tests/importprunedfunds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad68f751aff024bcbc1587640c3591aab5a80f7/qa/rpc-tests/importprunedfunds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/importprunedfunds.py?ref=fad68f751aff024bcbc1587640c3591aab5a80f7",
        "patch": "@@ -12,7 +12,7 @@ class ImportPrunedFundsTest(BitcoinTestFramework):\n     def __init__(self):\n         super().__init__()\n         self.setup_clean_chain = True\n-        self.num_nodes = 4\n+        self.num_nodes = 2\n \n     def setup_network(self, split=False):\n         self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)"
      },
      {
        "sha": "5087f0762033a177ee05a89637742547427f8d5d",
        "filename": "qa/rpc-tests/maxuploadtarget.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad68f751aff024bcbc1587640c3591aab5a80f7/qa/rpc-tests/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad68f751aff024bcbc1587640c3591aab5a80f7/qa/rpc-tests/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxuploadtarget.py?ref=fad68f751aff024bcbc1587640c3591aab5a80f7",
        "patch": "@@ -89,7 +89,7 @@ def add_options(self, parser):\n     def __init__(self):\n         super().__init__()\n         self.setup_clean_chain = True\n-        self.num_nodes = 2\n+        self.num_nodes = 1\n \n         self.utxo = []\n         self.txouts = gen_return_txouts()"
      },
      {
        "sha": "4438c152df10a077c6654e598c63ea19017eaae4",
        "filename": "qa/rpc-tests/mempool_limit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad68f751aff024bcbc1587640c3591aab5a80f7/qa/rpc-tests/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad68f751aff024bcbc1587640c3591aab5a80f7/qa/rpc-tests/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_limit.py?ref=fad68f751aff024bcbc1587640c3591aab5a80f7",
        "patch": "@@ -20,7 +20,7 @@ def setup_network(self):\n     def __init__(self):\n         super().__init__()\n         self.setup_clean_chain = True\n-        self.num_nodes = 2\n+        self.num_nodes = 1\n \n         self.txouts = gen_return_txouts()\n "
      }
    ]
  }
]