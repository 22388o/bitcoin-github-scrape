[
  {
    "sha": "a3e19846519952a3d22e387031258a88ec24d280",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphM2UxOTg0NjUxOTk1MmEzZDIyZTM4NzAzMTI1OGE4OGVjMjRkMjgw",
    "commit": {
      "author": {
        "name": "NicolasDorier",
        "email": "nicolas.dorier@gmail.com",
        "date": "2016-07-15T05:20:13Z"
      },
      "committer": {
        "name": "NicolasDorier",
        "email": "nicolas.dorier@gmail.com",
        "date": "2016-07-16T02:08:52Z"
      },
      "message": "Consensus: Trivial transform BOOST_FOREACH into for loop",
      "tree": {
        "sha": "cb172b2ca43307f54eb4fff7563405dc5eef7d9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb172b2ca43307f54eb4fff7563405dc5eef7d9c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3e19846519952a3d22e387031258a88ec24d280",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3e19846519952a3d22e387031258a88ec24d280",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a3e19846519952a3d22e387031258a88ec24d280",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3e19846519952a3d22e387031258a88ec24d280/comments",
    "author": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bc94b87487824c6fba45788facf96faba97a4aa6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc94b87487824c6fba45788facf96faba97a4aa6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bc94b87487824c6fba45788facf96faba97a4aa6"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "5e8a6d50fb24bd069f524324edfcafa283a90099",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3e19846519952a3d22e387031258a88ec24d280/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3e19846519952a3d22e387031258a88ec24d280/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a3e19846519952a3d22e387031258a88ec24d280",
        "patch": "@@ -785,7 +785,7 @@ bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n         return true;\n     if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n         return true;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n+    for (const auto& txin : tx.vin) {\n         if (!(txin.nSequence == CTxIn::SEQUENCE_FINAL))\n             return false;\n     }\n@@ -999,11 +999,11 @@ bool CheckSequenceLocks(const CTransaction &tx, int flags, LockPoints* lp, bool\n unsigned int GetLegacySigOpCount(const CTransaction& tx)\n {\n     unsigned int nSigOps = 0;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n+    for (const auto& txin : tx.vin)\n     {\n         nSigOps += txin.scriptSig.GetSigOpCount(false);\n     }\n-    BOOST_FOREACH(const CTxOut& txout, tx.vout)\n+    for (const auto& txout : tx.vout)\n     {\n         nSigOps += txout.scriptPubKey.GetSigOpCount(false);\n     }\n@@ -1061,7 +1061,7 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n \n     // Check for negative or overflow output values\n     CAmount nValueOut = 0;\n-    BOOST_FOREACH(const CTxOut& txout, tx.vout)\n+    for (const auto& txout : tx.vout)\n     {\n         if (txout.nValue < 0)\n             return state.DoS(100, false, REJECT_INVALID, \"bad-txns-vout-negative\");\n@@ -1074,7 +1074,7 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n \n     // Check for duplicate inputs\n     set<COutPoint> vInOutPoints;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n+    for (const auto& txin : tx.vin)\n     {\n         if (vInOutPoints.count(txin.prevout))\n             return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-duplicate\");\n@@ -1088,7 +1088,7 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n     }\n     else\n     {\n-        BOOST_FOREACH(const CTxIn& txin, tx.vin)\n+        for (const auto& txin : tx.vin)\n             if (txin.prevout.IsNull())\n                 return state.DoS(10, false, REJECT_INVALID, \"bad-txns-prevout-null\");\n     }\n@@ -3401,13 +3401,13 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n             return state.DoS(100, false, REJECT_INVALID, \"bad-cb-multiple\", false, \"more than one coinbase\");\n \n     // Check transactions\n-    BOOST_FOREACH(const CTransaction& tx, block.vtx)\n+    for (const auto& tx : block.vtx)\n         if (!CheckTransaction(tx, state))\n             return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n                                  strprintf(\"Transaction check failed (tx hash %s) %s\", tx.GetHash().ToString(), state.GetDebugMessage()));\n \n     unsigned int nSigOps = 0;\n-    BOOST_FOREACH(const CTransaction& tx, block.vtx)\n+    for (const auto& tx : block.vtx)\n     {\n         nSigOps += GetLegacySigOpCount(tx);\n     }\n@@ -3538,7 +3538,7 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIn\n                               : block.GetBlockTime();\n \n     // Check that all transactions are finalized\n-    BOOST_FOREACH(const CTransaction& tx, block.vtx) {\n+    for (const auto& tx : block.vtx) {\n         if (!IsFinalTx(tx, nHeight, nLockTimeCutoff)) {\n             return state.DoS(10, false, REJECT_INVALID, \"bad-txns-nonfinal\", false, \"non-final transaction\");\n         }"
      }
    ]
  }
]