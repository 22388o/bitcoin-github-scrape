NicolasDorier,2016-07-15T07:00:01Z,"Fixed nit, now using C++11 iteration loop style.\n",https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-232878120,232878120,
MarcoFalke,2016-07-15T07:19:51Z,> move those functions into libconsensus later\n\nConcept ACK on doing required trivial refactors before moving chunks of code.\n,https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-232881208,232881208,
NicolasDorier,2016-07-15T07:22:56Z,"I'm doing a big PR on https://github.com/bitcoin/bitcoin/pull/8339 that is still work in progress.\nMy goal is to make it smaller by doing trivial stuff I come accross while doing it, then I will rebase on top of it.\n",https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-232881681,232881681,
dcousens,2016-07-15T07:33:24Z,utACK 4358252\n,https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-232883370,232883370,
NicolasDorier,2016-07-15T10:32:11Z,"@dcousens updated the commit, I forgot GetLegacySigopsCount\n",https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-232918212,232918212,
jtimon,2016-07-15T11:32:25Z,"> Concept ACK on doing required trivial refactors before moving chunks of code.\n\nWhy is that? Why can't #8329 , for example, happen before this?\n\nRegarding the PR, I would prefer to move to plain C fors to move towards C rather than towards C++11 (I mean for libconsensus code only). But I don't care enough to nack.\n",https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-232929157,232929157,
NicolasDorier,2016-07-15T13:08:05Z,"I would prefer C++ 11, only because I'm a spoiled kid using high level language like C# and even with C++11 I feel at the stone age. :(\n\nI don't think it make sense to move something in consensus/\* which can't yet be compiled into libconsensus. But I'm not feeling strongly about it neither.\n",https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-232946274,232946274,
MarcoFalke,2016-07-15T13:47:05Z,"> Why is that? Why can't #8329 , for example, happen before this?\n\nHaven't seen the other pull is already open. I have no strong opinion on which should go first. My comment was meant as a general guideline in case the more disruptive pull may not be uncontroversial enough to merge immediately and the trivial improvement can go in right now. Also note that the plan was to get rid of some boost s",https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-232954953,232954953,
jtimon,2016-07-15T13:47:22Z,"Oh, personally I like the new loop more, and I'm very used to classes. Most of my experience is with C++, java and python, not C. But apparently some analysis tools are much more mature for C than for C++ and we could potentially benefit from them for consensus code if it was C. Maybe @gmaxwell can say more about this. In any case, was not a nack.\n",https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-232955007,232955007,
jtimon,2016-07-15T13:56:41Z,"@MarcoFalke well, I was asking on the general guideline. It makes sense to open both options because we don't know what's going to be merged first. That's what I've been doing so far: any changes after a moveonly have been mostly ignored and the moveonlies themselves, separated or not, have been delayed forever. With the exception of this PR and #8341 all ""dumb fixes"" have been already done.\nWe n",https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-232957367,232957367,
dcousens,2016-07-15T14:39:37Z,"@jtimon there is **so much** that would have to change to make libconsensus C only.  This for-loop change does not change that in any way.\nIf a dedicated effort begins, when libconsensus is actually separated, to make it solely C, I'm sure these loops will be the simplest to change.\n",https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-232969485,232969485,
jtimon,2016-07-15T14:53:01Z,"@dcousens agreed, while we keep adding classes to the consensus code, these lines are not a concern. I still would have preferred to do this with the old style loops ages ago.\n",https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-232973494,232973494,
luke-jr,2016-07-15T20:36:57Z,utACK (and don't mind using auto where @paveljanik suggests)\n\nThis for loop cannot be C period - it's using classes. C++11 loops make sense.\n,https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-233063534,233063534,
NicolasDorier,2016-07-16T02:09:43Z,"@paveljanik good catch, I just updated commit to use auto everywhere.\n",https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-233102876,233102876,
paveljanik,2016-07-16T08:02:29Z,ACK https://github.com/bitcoin/bitcoin/pull/8342/commits/a3e19846519952a3d22e387031258a88ec24d280\n,https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-233118793,233118793,
btcdrak,2016-07-16T09:53:35Z,ACK a3e1984\n,https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-233122902,233122902,
jtimon,2016-07-16T22:38:02Z,Upgrade from non-nack to utACK a3e1984\n,https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-233154646,233154646,
MarcoFalke,2016-07-17T08:24:35Z,utACK a3e1984\n,https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-233171114,233171114,
laanwj,2016-07-18T05:31:52Z,"@jtimon We've switched the project to c++11 just so that the code can use c++11, please don't come up with any lousy excuses not to. If you want to port the consensus code to some other language later that should _not_ affect how development is done in this project.\n\nutACK a3e1984 (after .13 split-off)\n",https://github.com/bitcoin/bitcoin/pull/8342#issuecomment-233231110,233231110,
dcousens,2016-07-15T05:47:48Z,Why not?\n\n``` c++\nfor (auto txout : tx.vout) {\n```\n\n  It's C++11\n,https://github.com/bitcoin/bitcoin/pull/8342#discussion_r70924397,70924397,src/main.cpp
sipa,2016-07-15T05:53:50Z,Please use\n\n```\nfor (const auto& txout : tx.vout)\n```\n\nto avoid copying the entire txout.\n,https://github.com/bitcoin/bitcoin/pull/8342#discussion_r70924734,70924734,src/main.cpp
paveljanik,2016-07-15T20:26:56Z,Why are you using `CTxIn&` here and `CTxOut&` below instead of `auto&` as in other changes? Is there any reason for this I do not see?\n,https://github.com/bitcoin/bitcoin/pull/8342#discussion_r71035950,71035950,src/main.cpp
