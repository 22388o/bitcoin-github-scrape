luke-jr,2015-06-02T04:11:08Z,Why?\n,https://github.com/bitcoin/bitcoin/pull/6215#issuecomment-107795935,107795935,
jonasschnelli,2015-06-02T07:00:04Z,"This is a valid question.\nI'm working on a new wallet and i'm trying to split of and create PRs for everything which could be used  independent and might reduce the diff-size when merging a bigger wallet change later.\n[1] https://github.com/jonasschnelli/bitcoin/tree/2015/05/corewallet\n\nBecause there is already unused bip32 stuff in bitcoin core, why not complete it with things which would be ",https://github.com/bitcoin/bitcoin/pull/6215#issuecomment-107832508,107832508,
luke-jr,2015-06-02T07:27:38Z,"Oh, I guess this might be useful for storing watch-only HD seeds in the wallet file?\n",https://github.com/bitcoin/bitcoin/pull/6215#issuecomment-107837927,107837927,
jonasschnelli,2015-06-02T07:36:46Z,Exactly!.\n,https://github.com/bitcoin/bitcoin/pull/6215#issuecomment-107840667,107840667,
jgarzik,2015-06-07T02:37:50Z,"Too many naked constants (74, 75) without a named constant, IMO\n",https://github.com/bitcoin/bitcoin/pull/6215#issuecomment-109677119,109677119,
jonasschnelli,2015-06-07T07:31:15Z,Agreed.\nFactored out the ext keysize of 74 bytes to a constant.\n,https://github.com/bitcoin/bitcoin/pull/6215#issuecomment-109712125,109712125,
jgarzik,2015-07-23T19:24:47Z,"ACK, with comment\n- A better test is probably deserialize then serialize, check for byte match.\n",https://github.com/bitcoin/bitcoin/pull/6215#issuecomment-124217494,124217494,
jonasschnelli,2015-07-24T08:56:32Z,Force push fixed: replace magic number 74 bytes into BIP32_EXTKEY_SIZE in base58.h\n,https://github.com/bitcoin/bitcoin/pull/6215#issuecomment-124448650,124448650,
jonasschnelli,2015-07-28T07:15:00Z,Added serializing/deserializing of a bip32 extended private key.\nFollowed @jgarzik advice of checking the serialized output by deserialize again and compare the keys (bytes).\n,https://github.com/bitcoin/bitcoin/pull/6215#issuecomment-125479340,125479340,
jgarzik,2015-09-15T18:28:26Z,"Ping, reviewers\n",https://github.com/bitcoin/bitcoin/pull/6215#issuecomment-140491119,140491119,
dcousens,2015-09-16T08:24:38Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6215#issuecomment-140667490,140667490,
laanwj,2015-10-01T14:53:32Z,"~~utACK~~ (retracted for now, see below)\n",https://github.com/bitcoin/bitcoin/pull/6215#issuecomment-144751732,144751732,
sipa,2015-11-28T22:56:26Z,@laanwj All good now?\n,https://github.com/bitcoin/bitcoin/pull/6215#issuecomment-160343958,160343958,
jonasschnelli,2016-04-14T19:10:36Z,Fixed @laanwj nit.\nRebased & squashed.\n,https://github.com/bitcoin/bitcoin/pull/6215#issuecomment-210104346,210104346,
laanwj,2015-10-01T15:01:54Z,This looks like a potential buffer overflow: you read len bytes into a fixed buffer.\nPlease check that len == BIP32_EXTKEY_SIZE\n,https://github.com/bitcoin/bitcoin/pull/6215#discussion_r40923403,40923403,src/pubkey.h
jonasschnelli,2015-10-01T18:51:02Z,Agreed.\nAdded a len check assertion.\n,https://github.com/bitcoin/bitcoin/pull/6215#discussion_r40951460,40951460,src/pubkey.h
laanwj,2016-04-14T16:01:33Z,"IMO it'd be better to throw an exception (serialization framework seems to prefer std::ios_base::failure, see [here](https://github.com/bitcoin/bitcoin/blob/master/src/addrman.h#L343) and [here](https://github.com/bitcoin/bitcoin/blob/master/src/serialize.h#L287) )  which can at least be caught instead of killing the program immediately.\n\nOf course we don't expect to deserialize these from the n",https://github.com/bitcoin/bitcoin/pull/6215#discussion_r59743665,59743665,src/pubkey.h
