defijesus,2015-08-04T04:56:00Z,"Travis CI: No output has been received in the last 10 minutes, this potentially indicates a stalled build or something wrong with the build itself.\n",https://github.com/bitcoin/bitcoin/pull/6511#issuecomment-127478529,127478529,
jonasschnelli,2015-08-04T06:22:34Z,"Travis fails with \n`test_bitcoin: key.cpp:198: void ECC_Start(): Assertion `secp256k1_context == __null' failed.\nunknown location(0): fatal error in ""script_PushData"": signal: SIGABRT (application abort requested)`\nProblem location: https://github.com/bitcoin/bitcoin/blob/master/src/key.cpp#L198\n\nLooks like a libsecp256k issue (@sipa)?\nSame travis problem in #6509.\n",https://github.com/bitcoin/bitcoin/pull/6511#issuecomment-127492210,127492210,
MarcoFalke,2015-08-04T07:12:16Z,"This PR does the exact opposite of what the ""block style example"" says in https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding\n",https://github.com/bitcoin/bitcoin/pull/6511#issuecomment-127504520,127504520,
laanwj,2015-08-04T11:08:21Z,"Too risky for what is gained, IMO. We don't usually merge these kinds of random code refactors because - even when they do improve readability - in the past some very nasty bugs have been introduced by them, accidentally.\n\nThat these changes are in consensus/validation code compounds the above-mentioned risks.\n\nIf your goal is to make the code more understandable, adding of  comments is prefer",https://github.com/bitcoin/bitcoin/pull/6511#issuecomment-127567017,127567017,
defijesus,2015-08-04T13:20:09Z,Hi!\n@laanwj I agree this is a small change in a very critical code. But if test pass and build pass. How does adding a new variable to store the return value should produce any bugs? (This kind of change is too simple to fail).\nThank you so much for reviewing\n,https://github.com/bitcoin/bitcoin/pull/6511#issuecomment-127606454,127606454,
laanwj,2015-08-04T14:15:56Z,"@pouta The tests hardly ever cover all possible cases. I agree that there is a class of changes that is too simple to fail, but just as well there are some seeming innocent changes that break bug-for-bug compatibility which is very important in the consensus code.\n\n@jonasschnelli opened an issue for that, #6515. Looks like secp256k1 context is the victim, not the cause of the problem.\n",https://github.com/bitcoin/bitcoin/pull/6511#issuecomment-127627598,127627598,
MarcoFalke,2015-08-04T07:10:20Z,Replacing code which spans over two lines to spread over six lines can only decrease readability.\n,https://github.com/bitcoin/bitcoin/pull/6511#discussion_r36162449,36162449,src/consensus/validation.h
