[
  {
    "sha": "76e13b586ff690dd3312f719f305c0d1021cd505",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NmUxM2I1ODZmZjY5MGRkMzMxMmY3MTlmMzA1YzBkMTAyMWNkNTA1",
    "commit": {
      "author": {
        "name": "Lenny Maiorani",
        "email": "lenny@colorado.edu",
        "date": "2018-11-04T03:15:05Z"
      },
      "committer": {
        "name": "Lenny Maiorani",
        "email": "lenny@colorado.edu",
        "date": "2018-11-05T03:50:40Z"
      },
      "message": "warnings: Compiler warning on memset usage for non-trivial type\n\nProblem:\n- IS_TRIVIALLY_CONSTRUCTIBLE macro does not work correctly resulting\n  in `memset()` usage to set a non-trivial type to 0 when\n  `nontrivial_t` is passed in from the tests.\n- Warning reported by GCC when compiling with `--enable-werror`.\n\nSolution:\n- Use the standard algorithm `std::fill_n()` and let the compiler\n  determine the optimal way of looping or using `memset()`.",
      "tree": {
        "sha": "04fa746cd6c9b2cb088895df4ebe8144dfd5701d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/04fa746cd6c9b2cb088895df4ebe8144dfd5701d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76e13b586ff690dd3312f719f305c0d1021cd505",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76e13b586ff690dd3312f719f305c0d1021cd505",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/76e13b586ff690dd3312f719f305c0d1021cd505",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76e13b586ff690dd3312f719f305c0d1021cd505/comments",
    "author": {
      "login": "ldm5180",
      "id": 639247,
      "node_id": "MDQ6VXNlcjYzOTI0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/639247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ldm5180",
      "html_url": "https://github.com/ldm5180",
      "followers_url": "https://api.github.com/users/ldm5180/followers",
      "following_url": "https://api.github.com/users/ldm5180/following{/other_user}",
      "gists_url": "https://api.github.com/users/ldm5180/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ldm5180/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ldm5180/subscriptions",
      "organizations_url": "https://api.github.com/users/ldm5180/orgs",
      "repos_url": "https://api.github.com/users/ldm5180/repos",
      "events_url": "https://api.github.com/users/ldm5180/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ldm5180/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ldm5180",
      "id": 639247,
      "node_id": "MDQ6VXNlcjYzOTI0Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/639247?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ldm5180",
      "html_url": "https://github.com/ldm5180",
      "followers_url": "https://api.github.com/users/ldm5180/followers",
      "following_url": "https://api.github.com/users/ldm5180/following{/other_user}",
      "gists_url": "https://api.github.com/users/ldm5180/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ldm5180/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ldm5180/subscriptions",
      "organizations_url": "https://api.github.com/users/ldm5180/orgs",
      "repos_url": "https://api.github.com/users/ldm5180/repos",
      "events_url": "https://api.github.com/users/ldm5180/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ldm5180/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "742ee213499194f97e59dae4971f1474ae7d57ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/742ee213499194f97e59dae4971f1474ae7d57ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/742ee213499194f97e59dae4971f1474ae7d57ad"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 3,
      "deletions": 13
    },
    "files": [
      {
        "sha": "aa77573746f6a1b573f3748aaa986cbf40acd50b",
        "filename": "src/prevector.h",
        "status": "modified",
        "additions": 3,
        "deletions": 13,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76e13b586ff690dd3312f719f305c0d1021cd505/src/prevector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76e13b586ff690dd3312f719f305c0d1021cd505/src/prevector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/prevector.h?ref=76e13b586ff690dd3312f719f305c0d1021cd505",
        "patch": "@@ -10,6 +10,7 @@\n #include <stdint.h>\n #include <string.h>\n \n+#include <algorithm>\n #include <cstddef>\n #include <iterator>\n #include <type_traits>\n@@ -198,22 +199,11 @@ class prevector {\n     const T* item_ptr(difference_type pos) const { return is_direct() ? direct_ptr(pos) : indirect_ptr(pos); }\n \n     void fill(T* dst, ptrdiff_t count) {\n-        if (IS_TRIVIALLY_CONSTRUCTIBLE<T>::value) {\n-            // The most common use of prevector is where T=unsigned char. For\n-            // trivially constructible types, we can use memset() to avoid\n-            // looping.\n-            ::memset(dst, 0, count * sizeof(T));\n-        } else {\n-            for (auto i = 0; i < count; ++i) {\n-                new(static_cast<void*>(dst + i)) T();\n-            }\n-        }\n+        std::fill_n(dst, count, T{});\n     }\n \n     void fill(T* dst, ptrdiff_t count, const T& value) {\n-        for (auto i = 0; i < count; ++i) {\n-            new(static_cast<void*>(dst + i)) T(value);\n-        }\n+        std::fill_n(dst, count, value);\n     }\n \n     template<typename InputIterator>"
      }
    ]
  }
]