[
  {
    "sha": "dccfddd538aeb4d079c610d8b6606120da0cc3a5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkY2NmZGRkNTM4YWViNGQwNzljNjEwZDhiNjYwNjEyMGRhMGNjM2E1",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-30T13:12:31Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-30T13:12:38Z"
      },
      "message": "wallet: Remove unused function GetLabelDestination",
      "tree": {
        "sha": "f4af191225803942fd83e8a4bd1327463706c31e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4af191225803942fd83e8a4bd1327463706c31e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dccfddd538aeb4d079c610d8b6606120da0cc3a5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dccfddd538aeb4d079c610d8b6606120da0cc3a5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dccfddd538aeb4d079c610d8b6606120da0cc3a5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dccfddd538aeb4d079c610d8b6606120da0cc3a5/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c7cfc8da68a6a68fb83b65d3a456eec8554d1e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c7cfc8da68a6a68fb83b65d3a456eec8554d1e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c7cfc8da68a6a68fb83b65d3a456eec8554d1e9"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 0,
      "deletions": 51
    },
    "files": [
      {
        "sha": "8944e93c31c513aabcf5e1db94fb830522869149",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dccfddd538aeb4d079c610d8b6606120da0cc3a5/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dccfddd538aeb4d079c610d8b6606120da0cc3a5/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=dccfddd538aeb4d079c610d8b6606120da0cc3a5",
        "patch": "@@ -196,16 +196,6 @@ static UniValue getnewaddress(const JSONRPCRequest& request)\n     return EncodeDestination(dest);\n }\n \n-CTxDestination GetLabelDestination(CWallet* const pwallet, const std::string& label, bool bForceNew=false)\n-{\n-    CTxDestination dest;\n-    if (!pwallet->GetLabelDestination(dest, label, bForceNew)) {\n-        throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n-    }\n-\n-    return dest;\n-}\n-\n static UniValue getrawchangeaddress(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);"
      },
      {
        "sha": "9209b705b57fbe657903bb410d38a66c2c8fc77a",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 40,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dccfddd538aeb4d079c610d8b6606120da0cc3a5/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dccfddd538aeb4d079c610d8b6606120da0cc3a5/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=dccfddd538aeb4d079c610d8b6606120da0cc3a5",
        "patch": "@@ -850,46 +850,6 @@ bool CWallet::AccountMove(std::string strFrom, std::string strTo, CAmount nAmoun\n     return true;\n }\n \n-bool CWallet::GetLabelDestination(CTxDestination &dest, const std::string& label, bool bForceNew)\n-{\n-    WalletBatch batch(*database);\n-\n-    CAccount account;\n-    batch.ReadAccount(label, account);\n-\n-    if (!bForceNew) {\n-        if (!account.vchPubKey.IsValid())\n-            bForceNew = true;\n-        else {\n-            // Check if the current key has been used (TODO: check other addresses with the same key)\n-            CScript scriptPubKey = GetScriptForDestination(GetDestinationForKey(account.vchPubKey, m_default_address_type));\n-            for (std::map<uint256, CWalletTx>::iterator it = mapWallet.begin();\n-                 it != mapWallet.end() && account.vchPubKey.IsValid();\n-                 ++it)\n-                for (const CTxOut& txout : (*it).second.tx->vout)\n-                    if (txout.scriptPubKey == scriptPubKey) {\n-                        bForceNew = true;\n-                        break;\n-                    }\n-        }\n-    }\n-\n-    // Generate a new key\n-    if (bForceNew) {\n-        if (!GetKeyFromPool(account.vchPubKey, false))\n-            return false;\n-\n-        LearnRelatedScripts(account.vchPubKey, m_default_address_type);\n-        dest = GetDestinationForKey(account.vchPubKey, m_default_address_type);\n-        SetAddressBook(dest, label, \"receive\");\n-        batch.WriteAccount(label, account);\n-    } else {\n-        dest = GetDestinationForKey(account.vchPubKey, m_default_address_type);\n-    }\n-\n-    return true;\n-}\n-\n void CWallet::MarkDirty()\n {\n     {"
      },
      {
        "sha": "aac18bf321e320bc82a7d4235c6a070ac1502180",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dccfddd538aeb4d079c610d8b6606120da0cc3a5/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dccfddd538aeb4d079c610d8b6606120da0cc3a5/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=dccfddd538aeb4d079c610d8b6606120da0cc3a5",
        "patch": "@@ -942,7 +942,6 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     int64_t IncOrderPosNext(WalletBatch *batch = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     DBErrors ReorderTransactions();\n     bool AccountMove(std::string strFrom, std::string strTo, CAmount nAmount, std::string strComment = \"\") EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n-    bool GetLabelDestination(CTxDestination &dest, const std::string& label, bool bForceNew = false);\n \n     void MarkDirty();\n     bool AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose=true);"
      }
    ]
  }
]