[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512674355",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-512674355",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 512674355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjY3NDM1NQ==",
    "user": {
      "login": "junderw",
      "id": 11246316,
      "node_id": "MDQ6VXNlcjExMjQ2MzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/11246316?u=b1879af21c58336a58b5b41376db8eade5006d51&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/junderw",
      "html_url": "https://github.com/junderw",
      "followers_url": "https://api.github.com/users/junderw/followers",
      "following_url": "https://api.github.com/users/junderw/following{/other_user}",
      "gists_url": "https://api.github.com/users/junderw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/junderw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
      "organizations_url": "https://api.github.com/users/junderw/orgs",
      "repos_url": "https://api.github.com/users/junderw/repos",
      "events_url": "https://api.github.com/users/junderw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/junderw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-18T05:49:56Z",
    "updated_at": "2019-07-18T05:50:47Z",
    "author_association": "NONE",
    "body": "Brainstorming some things we should consider:\r\n\r\n```\r\n1. Does adding this put anyone at risk?\r\n2. Does adding this somehow hurt Bitcoin's code base?\r\n3. Does adding this require some long term maintenance / increase the weight on devs for support in the future?\r\n```\r\n\r\n1. Since Testnet has been used at some points to scam people out of money, I could see how this could be used in a similar way. However, with something like this it would be easier for someone to create a signet and give it value (aka use it to create a permission-ed altcoin and mooch 100% off Bitcoin Core development. At least with current altcoin, they have a \"keep up to date with merging Core patches\" barrier of entry... this would not have such a barrier.)\r\n2. I would say no. But that would need more in-depth technical review.\r\n3. If scams run rampant in my scenario in number 1, some people might propose hard coding blacklists that will require scammers to maintain patches removing themselves from the signet blacklist etc... But other than that, I don't see much problem.\r\n\r\nI am leaning towards concept ACK. But I am slightly concerned about someone abusing this like testnet has been abused in the past, and how signet's differences make those abuses easier or harder.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512674355/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512675963",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-512675963",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 512675963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjY3NTk2Mw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-18T05:57:45Z",
    "updated_at": "2019-07-18T05:57:45Z",
    "author_association": "MEMBER",
    "body": "@junderw\r\n\r\nThanks for feedback, comments below:\r\n\r\n>     1. Does adding this put anyone at risk?\r\n\r\nExample?\r\n\r\n>     2. Does adding this somehow hurt Bitcoin's code base?\r\n\r\nThere is a tiny amount of risk involved as it touches consensus validation code, but this is a tiny code change.\r\n\r\nIf for some reason someone managed to flip the \"signet\" flag on a running node, for example, that would cause those nodes to start rejecting bitcoin blocks. I don't foresee this as very likely, personally.\r\n\r\n>     3. Does adding this require some long term maintenance / increase the weight on devs for support in the future?\r\n\r\nYes, same as adding any feature to a system. I assume the point of your question is if the added maintenance is worth it; in my opinion it is. Signet is fairly self-contained (3 main parts: signet, wallet RPC, miner RPC, and some sprinkled stuff; there are also the contrib/signet scripts but I see those as irrelevant in this case as they're not a part of the C++ codebase), so it shouldn't be that hard to maintain.\r\n\r\n>     4. Since Testnet has been used at some points to scam people out of money, I could see how this could be used in a similar way. However, with something like this it would be easier for someone to create a signet and give it value (aka use it to create a permission-ed altcoin and mooch 100% off Bitcoin Core development. At least with current altcoin, they have a \"keep up to date with merging Core patches\" barrier of entry... this would not have such a barrier.)\r\n\r\nI don't think this is an issue, to be honest. People can already copy the codebase and tweak it to make a new coin, or start up a regtest and ask their victim to connect to it using This Special Bitcoin.conf File [tm] which so happens to have regtest=1 in it.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512675963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512681583",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-512681583",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 512681583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjY4MTU4Mw==",
    "user": {
      "login": "junderw",
      "id": 11246316,
      "node_id": "MDQ6VXNlcjExMjQ2MzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/11246316?u=b1879af21c58336a58b5b41376db8eade5006d51&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/junderw",
      "html_url": "https://github.com/junderw",
      "followers_url": "https://api.github.com/users/junderw/followers",
      "following_url": "https://api.github.com/users/junderw/following{/other_user}",
      "gists_url": "https://api.github.com/users/junderw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/junderw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
      "organizations_url": "https://api.github.com/users/junderw/orgs",
      "repos_url": "https://api.github.com/users/junderw/repos",
      "events_url": "https://api.github.com/users/junderw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/junderw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-18T06:22:47Z",
    "updated_at": "2019-07-18T06:22:47Z",
    "author_association": "NONE",
    "body": "> People can already copy the codebase and tweak it to make a new coin, or start up a regtest and ask their victim to connect to it using This Special Bitcoin.conf File [tm] which so happens to have regtest=1 in it.\r\n\r\nWhich is why I am mostly leaning toward concept ACK.\r\n\r\nBut tbh, if someone said \"hey, we have a 7-of-13 multisig based faster Bitcoin!\" as compared to \"hey use this regtest thing, totally decentralized, we swear!\" could be argued by pedantic people as \"not technically false\"... so a regtest based scam has less of a chance of someone understanding the tech aspect saying \"yeah, that's not centralized\" than a signet based scam.\r\n\r\nAlso, there are also many scams that copy-pasted the code base, sure... but with a signet based scam, they don't even need to maintain a patch. Just tell the victims to download Bitcoin Core. And it works out of the box (with a conf tweak)...\r\n\r\nSo while the risk is super low, it is objectively higher than regtest and testnet...\r\n\r\nThat being said. The benefit is great compared to that risk. Which, again, is why I say \"leaning towards concept ACK.\"\r\n\r\nIt would be very powerful to have someone who already has Bitcoin Core downloaded and running to spin up another instance with some args that lets them try out taproot etc etc...",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512681583/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512684725",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-512684725",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 512684725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjY4NDcyNQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-18T06:35:05Z",
    "updated_at": "2019-07-18T06:35:05Z",
    "author_association": "MEMBER",
    "body": "Yep, I see what you're saying. Ultimately both cases require a conf tweak, though (regtest or testnet scam vs signet scam), and signet case requires them to give you a big ugly signet challenge and signet seed node(s), so I'm not sure how viable the attack really is in the end.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512684725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512709547",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-512709547",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 512709547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjcwOTU0Nw==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-18T08:01:08Z",
    "updated_at": "2019-07-18T08:01:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK, though I am unsure if signet should be configurable at all. (via `signet_blockscript` for example)\r\n\r\nIt should just be a shared public network, an alternative (or replacement) of testnet.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512709547/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512710369",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-512710369",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 512710369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjcxMDM2OQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-18T08:03:51Z",
    "updated_at": "2020-03-10T01:28:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18267 (BIP-325: Signet [consensus] by kallewoof)\n* #18002 (Abstract out script execution out of VerifyWitnessProgram() by sipa)\n* #17977 ([WIP] Implement BIP 340-342 validation (Schnorr/taproot/tapscript) by sipa)\n* #17693 (rpc: Add generateblock to mine a custom set of transactions by andrewtoth)\n* #17037 (Testschains: Many regtests with different genesis and default datadir by jtimon)\n* #17032 (Tests: Chainparams: Make regtest almost fully customizable by jtimon)\n* #16653 (script: add simple signature support (checker/creator) by kallewoof)\n* #15761 (Replace -upgradewallet startup option with upgradewallet RPC by achow101)\n* #15481 (Restrict timestamp when mining a diff-adjustment block to prev-600 by TheBlueMatt)\n* #13062 (Make script interpreter independent from storage type CScript by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512710369/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512710459",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-512710459",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 512710459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjcxMDQ1OQ==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-18T08:04:13Z",
    "updated_at": "2019-07-18T08:04:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "The code does not seems to be that much to maintain, I would advise though to open a separate pull requests for most changes in `validation.cpp/h`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/512710459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513277035",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-513277035",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 513277035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzI3NzAzNQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-19T15:40:43Z",
    "updated_at": "2019-07-19T15:40:43Z",
    "author_association": "MEMBER",
    "body": "Would be nice to have a `contrib/signet/README.md` to explain what those sh scripts are supposed to be doing",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513277035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513431472",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-513431472",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 513431472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzQzMTQ3Mg==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-20T03:25:31Z",
    "updated_at": "2019-07-20T03:25:31Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke Added README file. Also missing release notes. Since it is Needs Concept Review stage, I am not gonna rush that just yet.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513431472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513431929",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-513431929",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 513431929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzQzMTkyOQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-20T03:32:58Z",
    "updated_at": "2019-07-20T03:32:58Z",
    "author_association": "MEMBER",
    "body": "I added a \"noteworthy\" section to the OP of this PR, which points out a number of changes to existing functionality.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513431929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513460520",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-513460520",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 513460520,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzQ2MDUyMA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-20T11:41:31Z",
    "updated_at": "2019-07-20T11:41:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nThanks for doing this - would be very useful for testing.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513460520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/518271962",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-518271962",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 518271962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODI3MTk2Mg==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-05T15:03:51Z",
    "updated_at": "2019-08-05T15:03:51Z",
    "author_association": "MEMBER",
    "body": "Refactored now that #16509 is in (one less commit, and fewer (test) code lines touched!).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/518271962/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519531178",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-519531178",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 519531178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTUzMTE3OA==",
    "user": {
      "login": "michaelfolkson",
      "id": 16323900,
      "node_id": "MDQ6VXNlcjE2MzIzOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16323900?u=e2201a78ad660e42fd175003d02ad749b855e0a9&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelfolkson",
      "html_url": "https://github.com/michaelfolkson",
      "followers_url": "https://api.github.com/users/michaelfolkson/followers",
      "following_url": "https://api.github.com/users/michaelfolkson/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
      "repos_url": "https://api.github.com/users/michaelfolkson/repos",
      "events_url": "https://api.github.com/users/michaelfolkson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-08T14:01:43Z",
    "updated_at": "2019-08-08T14:13:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there a resource online discussing the difference(s) between regtest and (proposed) signet? I found this on the [bitcoin-dev mailing list](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-March/016742.html) but it doesn't go into much detail. Is unvetted \"people rewriting the blockchain at their whim by mining a ton of blocks\" a common problem? It wouldn't be a problem for a training workshop (just spin up a new one) but could possibly be for a project building on top of regtest.\r\n\r\nAlso any other key differences between design of regtest and signet? I don't need convincing of signet's upsides in comparison to testnet but not convinced re regtest versus signet. Digging into understanding regtest code a bit more but any guidance would be appreciated.\r\n\r\nI've opened up a [Stack Exchange page](https://bitcoin.stackexchange.com/questions/89640/what-are-the-key-differences-between-regtest-and-the-proposed-signet) for this question so probably better to move answers there.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519531178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519744924",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-519744924",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 519744924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTc0NDkyNA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-09T01:36:36Z",
    "updated_at": "2019-08-09T01:36:36Z",
    "author_association": "MEMBER",
    "body": "@michaelfolkson I already replied on Twitter, but there is a [Bitcoin Wiki entry](https://en.bitcoin.it/wiki/Signet) and also a [Bitcoin Stack Exchange page](https://bitcoin.stackexchange.com/questions/89640/what-are-the-key-differences-between-regtest-and-the-proposed-signet?stw=2) (made by you).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/519744924/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522406446",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-522406446",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 522406446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQwNjQ0Ng==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-19T04:24:27Z",
    "updated_at": "2019-08-19T04:24:27Z",
    "author_association": "MEMBER",
    "body": "The proof of work changes were removed; Signet now requires a POW-valid genesis block, which is generated using `grindblock <challenge>` and which is provided to nodes using `-signet_genesisnonce`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522406446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522409485",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-522409485",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 522409485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQwOTQ4NQ==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-19T04:44:32Z",
    "updated_at": "2019-08-19T04:44:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Update: proof of work check is back in place; instead, Signet now requires an additional `-signet_genesisnonce`\r\n\r\nIt should not require. If I want to use signet, I want to do `bitcoind -signet` without any more obscure parameter.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522409485/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522410562",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-522410562",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 522410562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQxMDU2Mg==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-19T04:50:51Z",
    "updated_at": "2019-08-19T04:51:01Z",
    "author_association": "MEMBER",
    "body": "@NicolasDorier The default parameters include a genesis nonce value. It's only for custom signets, where you provide your own `-signet_blockscript` as well.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522410562/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522466194",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-522466194",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 522466194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ2NjE5NA==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-19T08:24:35Z",
    "updated_at": "2019-08-19T08:25:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I discussed with @kallewoof I don't like the fact that `generatetoaddress` does not work on custom signets.\r\nThe reason why `generatetoaddress` does not work on signet is that signet need blocks to be signed, and right now it uses the bitcoin wallet to find the keys. However `generatetoaddress` can't depends on wallet code.\r\n\r\nNow we have three ways of fixing the problem:\r\n1. Passing the keys for signing on signet via command line `--signet_privatekey` (My preference)\r\n2. Passing the keys to `generatetoaddress` (@kallewoof preference)\r\n3. We don't care for this PR.\r\n\r\nI don't like 2, because it does not solve my initial problem: to have a custom signet just work with the same code you would use for regtest.\r\n\r\n@kallewoof does not like my preference, because he says passing private keys via command line is bad practice. Personally, I don't think this is a problem because custom signet coins have no value, so no damage can be done.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522466194/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522470900",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-522470900",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 522470900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ3MDkwMA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-19T08:37:55Z",
    "updated_at": "2019-08-19T08:37:55Z",
    "author_association": "MEMBER",
    "body": "@NicolasDorier or create `generatetodescriptor` which uses the block height as the index. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522470900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522478256",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-522478256",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 522478256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ3ODI1Ng==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-19T08:57:59Z",
    "updated_at": "2019-08-19T08:57:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@NicolasDorier @kallewoof Is the risk scenario that the signet private key would leak via process listings? If that it deemed a problem then it could perhaps be passed as an environment variable?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522478256/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522486276",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-522486276",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 522486276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ4NjI3Ng==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-19T09:19:41Z",
    "updated_at": "2019-08-19T09:19:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Sjors I don't really understand what you mean, but anyway there should not have \"special way of doing same thing\" in RPC depending if you are on custom signet or regtest.\r\n\r\n@practicalswift it feel a bit weird to use environment variable when everything else is not.\r\nI don't think that the key leaking is in anyway a problem that need to be solved.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522486276/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522490898",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-522490898",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 522490898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ5MDg5OA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-19T09:32:01Z",
    "updated_at": "2019-08-19T09:32:01Z",
    "author_association": "MEMBER",
    "body": "@NicolasDorier instead of providing a single address or private key, you provide a [descriptor](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md) so that each block will have a unique payout address. E.g. if you pass `wpkh(xpub/0/*)` it could replace `*` with the block height. You can use `importmulti` with the private key `wpkh(xpriv/0/*)` to import that descriptor in any wallet, from which you can then spend the coins.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522490898/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522640360",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-522640360",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 522640360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjY0MDM2MA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-19T15:56:18Z",
    "updated_at": "2019-08-19T15:56:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "> it feel a bit weird to use environment variable when everything else is not.\r\n\r\nYes, that's a good point.\r\n\r\nPerhaps I'm missing something but wouldn't setting `signet_privatekey` in the config file solve the key-leak-via-process-listing issue (assuming it is an issue)?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522640360/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522869010",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-522869010",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 522869010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjg2OTAxMA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-20T06:12:08Z",
    "updated_at": "2019-08-20T06:13:04Z",
    "author_association": "MEMBER",
    "body": "I don't agree with the premise that the RPC `generatetoaddress` must be possible under Signet. If you are generating the blocks yourself, use regtest, or use the Signet solution available. Signet is for more global testing where you often are not the miner.\r\n\r\nI'm neutral on the private key juggling, as long as we don't teach people bad habits for valuable private keys.\r\n\r\np.s. I think you guys are talking about different things. @NicolasDorier wants signet to seamlessly work exactly like regtest, including mining; @Sjors seems to be talking about the actual generated-to addresses and their reuse?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/522869010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/523871601",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-523871601",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 523871601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzg3MTYwMQ==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-22T11:50:22Z",
    "updated_at": "2019-08-22T11:50:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Sjors I see, well my complaint is generally about, as a RPC user, I expect that RPC works as it would with regtest. If I need to make an if/else in my code to specifically handle the case of a custom signet this would really suck.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/523871601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524175320",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-524175320",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 524175320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDE3NTMyMA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-23T05:15:18Z",
    "updated_at": "2019-08-23T05:15:39Z",
    "author_association": "MEMBER",
    "body": "Moved `g_signet_blocks` bool into consensus parameters.\r\n\r\nHowever, moving `g_signet_blockscript` would require the `params.h` file to now `#include <script/script.h>` to get the `CScript`, which seems wasteful.\r\n\r\nAlternatively I could make it a `std::vector<unsigned char>` in the consensus params, but then every time it's used, it would have to be converted, so you'd get `CScript(consensus.signet_blockscript.begin(), consensus.signet_blockscript.end())` sprinkled all over which doesn't seem ideal.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/524175320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/525807714",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-525807714",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 525807714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTgwNzcxNA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-28T15:53:17Z",
    "updated_at": "2019-08-28T15:53:17Z",
    "author_association": "MEMBER",
    "body": "I think including script in consensus/params.h should be fine. I'm not sure\nI understand \"wasteful\" in this context. Is going to \"waste\" exactly the\nsame memory.\n\nBut, if not, can we at least put it in chainparams?\n\nOn Fri, Aug 23, 2019, 07:18 kallewoof <notifications@github.com> wrote:\n\n> Moved g_signet_blocks bool into consensus parameters.\n>\n> However, moving g_signet_blockscript would require the params.h file to\n> now #include <script/script.h> to get the CScript, which seems wasteful.\n>\n> Alternatively I could make it a std::vector<unsigned int> in the\n> consensus params, but then every time it's used, it would have to be\n> converted, so you'd get CScript(consensus.signet_blockscript.begin(),\n> consensus.signet_blockscript.end()) sprinkled all over which doesn't seem\n> ideal.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/16411?email_source=notifications&email_token=AAHWGSV4TRS4YXT62FMOW4TQF5XLJA5CNFSM4IEW75LKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD47EPWA#issuecomment-524175320>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAHWGSSCWTNGVH6XKSSEVXDQF5XLJANCNFSM4IEW75LA>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/525807714/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/526048514",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-526048514",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 526048514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjA0ODUxNA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-29T06:45:00Z",
    "updated_at": "2019-08-29T06:45:00Z",
    "author_association": "MEMBER",
    "body": "@jtimon \r\n\r\n> But, if not, can we at least put it in chainparams?\r\n\r\nI mean, yes, we could totally do that, but I'm not sure which is better here to be honest. Putting it in chainparams means it's close to the other stuff, which is good. But keeping it in signet.h means isolating signet stuff more from the rest of the code, which is *also* good.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/526048514/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529133412",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-529133412",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 529133412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTEzMzQxMg==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-07T18:19:48Z",
    "updated_at": "2019-09-07T18:19:48Z",
    "author_association": "MEMBER",
    "body": "I think it's more consistent in chainparams, but I can see your point. Both options are valid, that's just what I prefer.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529133412/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529224742",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-529224742",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 529224742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTIyNDc0Mg==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-08T17:35:30Z",
    "updated_at": "2019-09-08T17:35:30Z",
    "author_association": "MEMBER",
    "body": "Created https://github.com/kallewoof/bitcoin/pull/9 with code solving most nits if not all.\r\nAlso created https://github.com/jtimon/bitcoin/pull/12 to see how signet and custom chains could be combined best.\r\nComments welcomed on any of them, and hopefully you will pick things from 9.\r\nThe last commit requires a restart of the default network for it changes its genesis block.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529224742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529886172",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-529886172",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 529886172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTg4NjE3Mg==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-10T11:07:46Z",
    "updated_at": "2019-09-10T11:07:46Z",
    "author_association": "MEMBER",
    "body": "@jtimon Sorry for lack of responsiveness. I've addressed your nits separately and will compare to your branch.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/529886172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/530090019",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-530090019",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 530090019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDA5MDAxOQ==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-10T19:43:28Z",
    "updated_at": "2019-09-10T21:52:45Z",
    "author_association": "MEMBER",
    "body": "No worries, most of the commits in the branch are fixes to my own nits any way in case you find it convenient to squash them or something.\r\n\r\nRegarding https://github.com/bitcoin/bitcoin/pull/16630#issuecomment-521988316 \r\n@MarcoFalke I strongly disagree. the only reason we need to have rpc functionality to grind genesis blocks and the only reason this patch needs the signet_nonce parameter is validating the pow in the genesis block.\r\n\r\nThere's little reason to validate anything in the genesis block, for arguably the blocks is valid by definition and it's itself a consensus rule (the sencond block must contain its hash). But philosophical questions aside, the changes in the consensus code are quite simple and innocuous.\r\nNot the way they're written in https://github.com/bitcoin/bitcoin/pull/16630 though, for it has a performance penalty for other valid blocks. The way it is written in https://github.com/bitcoin/bitcoin/pull/9102 there's no performance penalty at all unless the block is invalid, which I think it's fine, since the penalty should be small anyway, I haven't benchmarked it but it's just comparing 2 hashes right before logging an error.\r\n\r\nSorry for the rant, but I really dislike the -signet_nonce argument.\r\nSee https://github.com/kallewoof/bitcoin/pull/9/commits/010cca031dfb890f92ff78c3bf6a45326ae38edf",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/530090019/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/539543087",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-539543087",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 539543087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTU0MzA4Nw==",
    "user": {
      "login": "carnhofdaki",
      "id": 46941376,
      "node_id": "MDQ6VXNlcjQ2OTQxMzc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46941376?u=6306df69954bfd506fe58e0783704eb846dd8807&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carnhofdaki",
      "html_url": "https://github.com/carnhofdaki",
      "followers_url": "https://api.github.com/users/carnhofdaki/followers",
      "following_url": "https://api.github.com/users/carnhofdaki/following{/other_user}",
      "gists_url": "https://api.github.com/users/carnhofdaki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carnhofdaki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carnhofdaki/subscriptions",
      "organizations_url": "https://api.github.com/users/carnhofdaki/orgs",
      "repos_url": "https://api.github.com/users/carnhofdaki/repos",
      "events_url": "https://api.github.com/users/carnhofdaki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carnhofdaki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-08T14:34:17Z",
    "updated_at": "2019-10-08T14:34:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "No matter how far in syncing signet, it always says `progress=1.000000`.\r\n\r\n```\r\n...\r\n2019-10-08T14:32:08Z UpdateTip: new best=00000098714cd57f96b1bb4bdec02a869cb3269351bb2e110d56ea480e9a9e41 height=3140 version=0x30000000 log2_work=32.087826 tx=3152 date='2019-09-09T00:13:04Z' progress=1.000000 cache=0.4MiB(3155txo)\r\n2019-10-08T14:32:08Z UpdateTip: new best=0000014e412d4d959c4d397cdd685d66cd32df7842984f490d493f57cdd031ac height=3141 version=0x30000000 log2_work=32.088886 tx=3153 date='2019-09-09T00:22:06Z' progress=1.000000 cache=0.4MiB(3156txo)\r\n2019-10-08T14:32:08Z UpdateTip: new best=0000031045f7a9f625ea845ace16fe18153bbcfaf2445951df96c37d427a34a5 height=3142 version=0x30000000 log2_work=32.089945 tx=3154 date='2019-09-09T00:31:07Z' progress=1.000000 cache=0.4MiB(3157txo)\r\n2019-10-08T14:32:08Z UpdateTip: new best=0000044ee1b6e1b471d28f3f32e4c92deb9828efc2ab5948e76ad70c753ad7c8 height=3143 version=0x30000000 log2_work=32.091004 tx=3155 date='2019-09-09T00:40:09Z' progress=1.000000 cache=0.4MiB(3158txo)\r\n2019-10-08T14:32:08Z UpdateTip: new best=000003c670e58d4876da8ff3f21d12efd70984e30eb7f69e74c8a7754e5f4657 height=3144 version=0x30000000 log2_work=32.092062 tx=3156 date='2019-09-09T00:49:12Z' progress=1.000000 cache=0.4MiB(3159txo)\r\n```\r\n\r\nI do everything according to Getting Started section of https://en.bitcoin.it/wiki/Signet#Fetch_and_compile_signet",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/539543087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/539564737",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-539564737",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 539564737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTU2NDczNw==",
    "user": {
      "login": "carnhofdaki",
      "id": 46941376,
      "node_id": "MDQ6VXNlcjQ2OTQxMzc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46941376?u=6306df69954bfd506fe58e0783704eb846dd8807&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carnhofdaki",
      "html_url": "https://github.com/carnhofdaki",
      "followers_url": "https://api.github.com/users/carnhofdaki/followers",
      "following_url": "https://api.github.com/users/carnhofdaki/following{/other_user}",
      "gists_url": "https://api.github.com/users/carnhofdaki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carnhofdaki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carnhofdaki/subscriptions",
      "organizations_url": "https://api.github.com/users/carnhofdaki/orgs",
      "repos_url": "https://api.github.com/users/carnhofdaki/repos",
      "events_url": "https://api.github.com/users/carnhofdaki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carnhofdaki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-08T15:20:36Z",
    "updated_at": "2019-10-08T15:20:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, errors like this are being shown on the console (yes, I am not running as daemon, but rather in `tmux`):\r\n\r\n```\r\n2019-10-08T15:13:23Z ERROR: AcceptBlockHeader: prev block not found\r\n2019-10-08T15:13:26Z ERROR: AcceptBlockHeader: prev block not found\r\n```\r\n\r\nLet me know if it is proper that I am writing it here in this pull request.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/539564737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/539991911",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-539991911",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 539991911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTk5MTkxMQ==",
    "user": {
      "login": "carnhofdaki",
      "id": 46941376,
      "node_id": "MDQ6VXNlcjQ2OTQxMzc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46941376?u=6306df69954bfd506fe58e0783704eb846dd8807&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carnhofdaki",
      "html_url": "https://github.com/carnhofdaki",
      "followers_url": "https://api.github.com/users/carnhofdaki/followers",
      "following_url": "https://api.github.com/users/carnhofdaki/following{/other_user}",
      "gists_url": "https://api.github.com/users/carnhofdaki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carnhofdaki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carnhofdaki/subscriptions",
      "organizations_url": "https://api.github.com/users/carnhofdaki/orgs",
      "repos_url": "https://api.github.com/users/carnhofdaki/repos",
      "events_url": "https://api.github.com/users/carnhofdaki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carnhofdaki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-09T13:05:24Z",
    "updated_at": "2019-10-09T13:05:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kallewoof is signet meant to overwrite file `blk00000.dat` and not have any index? How is the explorer at https://explorer.bc-2.jp possible then?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/539991911/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540367001",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-540367001",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 540367001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDM2NzAwMQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-10T05:10:46Z",
    "updated_at": "2019-10-10T05:10:46Z",
    "author_association": "MEMBER",
    "body": "@carnhofdaki Thanks for testing! Comments below.\r\n\r\n> No matter how far in syncing signet, it always says `progress=1.000000`.\r\n\r\nI'm confused. My bitcoin full node running on mainnet has this\r\n```\r\n2019-10-10T04:59:39Z UpdateTip: new best=0000000000000000000c41823b84f6273e2bf59648cfa7187eb2919213643a3d height=598693 version=0x20800000 log2_work=91.193405 tx=463424821 date='2019-10-10T04:58:54Z' progress=1.000000 cache=21.4MiB(60544txo) warning='45 of last 100 blocks have unexpected version'\r\n```\r\nso the behavior seems ordinary to me. What's the problem?\r\n\r\n> 2019-10-08T15:13:23Z ERROR: AcceptBlockHeader: prev block not found\r\n\r\nThis is because there are a couple of other signets running that have not properly removed the seed node parameter, so they are trying to connect to incompatible nodes (their genesis block is different, so in the end they get disconnected).\r\n\r\nIt's a nuisance, but not a big problem.\r\n\r\n> is signet meant to overwrite file blk00000.dat and not have any index? How is the explorer at https://explorer.bc-2.jp possible then?\r\n\r\nSIgnet works exactly like mainnet/testnet/regtest in regards to file I/O. By index, do you mean a transaction index? You need to do txindex=1 in your bitcoin.conf for that to appear. If you did, and it still isn't appearing, do let me know. :)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540367001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540367293",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-540367293",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 540367293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDM2NzI5Mw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-10T05:11:26Z",
    "updated_at": "2019-10-10T05:11:26Z",
    "author_association": "MEMBER",
    "body": "@jtimon Thanks for all the feedback/suggestions. I'm trying to work through them, but am a bit swamped at work right now so it may be a bit slower than normal. Will get back to you though.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540367293/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540434205",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-540434205",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 540434205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDQzNDIwNQ==",
    "user": {
      "login": "carnhofdaki",
      "id": 46941376,
      "node_id": "MDQ6VXNlcjQ2OTQxMzc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46941376?u=6306df69954bfd506fe58e0783704eb846dd8807&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carnhofdaki",
      "html_url": "https://github.com/carnhofdaki",
      "followers_url": "https://api.github.com/users/carnhofdaki/followers",
      "following_url": "https://api.github.com/users/carnhofdaki/following{/other_user}",
      "gists_url": "https://api.github.com/users/carnhofdaki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carnhofdaki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carnhofdaki/subscriptions",
      "organizations_url": "https://api.github.com/users/carnhofdaki/orgs",
      "repos_url": "https://api.github.com/users/carnhofdaki/repos",
      "events_url": "https://api.github.com/users/carnhofdaki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carnhofdaki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-10T07:30:58Z",
    "updated_at": "2019-10-10T14:46:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kallewoof You are welcome! See my comments below.\r\n\r\n> I'm confused. My bitcoin full node running on mainnet has this\r\n> \r\n> ```\r\n> 2019-10-10T04:59:39Z UpdateTip: new best=0000000000000000000c41823b84f6273e2bf59648cfa7187eb2919213643a3d height=598693 version=0x20800000 log2_work=91.193405 tx=463424821 date='2019-10-10T04:58:54Z' progress=1.000000 cache=21.4MiB(60544txo) warning='45 of last 100 blocks have unexpected version'\r\n> ```\r\n> \r\n> so the behavior seems ordinary to me. What's the problem?\r\n\r\nWhat you are showing is an actually synced bitcoin mainnet node. When you start syncing\r\nbitcoin mainnet without having any blocks, it will start with `progress=0.000000` and slowly\r\nadd there according to block index number devided by total blocks currently (and time, this\r\nis not an exact formula, just to get an idea).\r\n\r\n> > 2019-10-08T15:13:23Z ERROR: AcceptBlockHeader: prev block not found\r\n> \r\n> This is because there are a couple of other signets running that have not properly removed the seed node parameter, so they are trying to connect to incompatible nodes (their genesis block is different, so in the end they get disconnected).\r\n> \r\n> It's a nuisance, but not a big problem.\r\n\r\nI see.\r\n\r\n> > is signet meant to overwrite file blk00000.dat and not have any index? How is the explorer at https://explorer.bc-2.jp possible then?\r\n> \r\n> SIgnet works exactly like mainnet/testnet/regtest in regards to file I/O. By index, do you mean a transaction index? You need to do txindex=1 in your bitcoin.conf for that to appear. If you did, and it still isn't appearing, do let me know. :)\r\n\r\n~~I will re-run with `txindex=1` but what I mean here is that when I run a signet full node, even after\r\nfull sync to the block 8002, I have only file `blk00000.dat` with has last modification date set to\r\nwhen the last block was received.~~\r\n\r\nEdit: ^^ this blk00000.dat issue is totally a non-issue. I misunderstood what is going on. There are not enough data on signet yet for other files to appear.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540434205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540717225",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-540717225",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 540717225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDcxNzIyNQ==",
    "user": {
      "login": "carnhofdaki",
      "id": 46941376,
      "node_id": "MDQ6VXNlcjQ2OTQxMzc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46941376?u=6306df69954bfd506fe58e0783704eb846dd8807&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carnhofdaki",
      "html_url": "https://github.com/carnhofdaki",
      "followers_url": "https://api.github.com/users/carnhofdaki/followers",
      "following_url": "https://api.github.com/users/carnhofdaki/following{/other_user}",
      "gists_url": "https://api.github.com/users/carnhofdaki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carnhofdaki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carnhofdaki/subscriptions",
      "organizations_url": "https://api.github.com/users/carnhofdaki/orgs",
      "repos_url": "https://api.github.com/users/carnhofdaki/repos",
      "events_url": "https://api.github.com/users/carnhofdaki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carnhofdaki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-10T18:37:22Z",
    "updated_at": "2019-10-15T11:14:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kallewoof So I was playing more.\r\n\r\nSee this anomaly - it does not add up: https://explorer.bc-2.jp/tx/7bc98cb0298233bbeb8d43deebc879626c3403add1ebbf443c44a31576283aff\r\n\r\nEdit: Shortened. Sorry for spam.\r\n\r\nSee block [8174](https://explorer.bc-2.jp/block/0000021f73ceda899d47c05288e2dbab83d6a79b3ec15f3f24730bf8075ad184)\r\n\r\nEdit: Finally I see the last zero in `8.999978` is omitted and that's why `8.9999769` seemed to me that it does not add up.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540717225/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541037408",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-541037408",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 541037408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTAzNzQwOA==",
    "user": {
      "login": "carnhofdaki",
      "id": 46941376,
      "node_id": "MDQ6VXNlcjQ2OTQxMzc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46941376?u=6306df69954bfd506fe58e0783704eb846dd8807&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carnhofdaki",
      "html_url": "https://github.com/carnhofdaki",
      "followers_url": "https://api.github.com/users/carnhofdaki/followers",
      "following_url": "https://api.github.com/users/carnhofdaki/following{/other_user}",
      "gists_url": "https://api.github.com/users/carnhofdaki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carnhofdaki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carnhofdaki/subscriptions",
      "organizations_url": "https://api.github.com/users/carnhofdaki/orgs",
      "repos_url": "https://api.github.com/users/carnhofdaki/repos",
      "events_url": "https://api.github.com/users/carnhofdaki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carnhofdaki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-11T12:08:48Z",
    "updated_at": "2019-10-15T09:28:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Testing c584956573b553f33771b7d853e2ccf8f033d29a ([`kallewoof/bitcoin@signet`]()) and 5cced1d78ee96b597dce23cff81f3ca991671fdf ([`kallewoof/bitcoin@signet-0.18`](https://github.com/kallewoof/bitcoin/tree/signet-0.18)) on ARM, Ubuntu 19.04, but berkleydb and boost are built from `bitcoin/depends` and installed to `/usr` (though not related to my issues).\r\n\r\nI have issues with running a [custom signet](https://en.bitcoin.it/wiki/Signet#Custom_Signet) always ending on the last step - generating a block and signing it where I get:\r\n\r\n```\r\nerror code: -25\r\nerror message:\r\ncould not produce a signature -- do you have the private key(s)?\r\n```\r\n\r\nOn the `bitcoind` side when I try to `importprivkey` I see this:\r\n\r\n```\r\n[default wallet] Already have key with pubkey $PUBKEY, skipping\r\n[default wallet] Already have script <some_other_script>, skipping\r\n```\r\n\r\nWhere the second line appears even on the first `importprivkey $PRIVKEY` call. `<some_other_script>` is a value different from any of the values referred by [the wiki article](https://en.bitcoin.it/wiki/Signet#Generating_keys_used_for_signing_a_block)\r\n\r\nThe same happens using the version recommended by [wiki article](https://en.bitcoin.it/wiki/Signet#Getting_Started) - i.e. from the `signet-0.18` branch of https://github.com/kallewoof/bitcoin.git",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541037408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542157098",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-542157098",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 542157098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjE1NzA5OA==",
    "user": {
      "login": "carnhofdaki",
      "id": 46941376,
      "node_id": "MDQ6VXNlcjQ2OTQxMzc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46941376?u=6306df69954bfd506fe58e0783704eb846dd8807&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carnhofdaki",
      "html_url": "https://github.com/carnhofdaki",
      "followers_url": "https://api.github.com/users/carnhofdaki/followers",
      "following_url": "https://api.github.com/users/carnhofdaki/following{/other_user}",
      "gists_url": "https://api.github.com/users/carnhofdaki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carnhofdaki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carnhofdaki/subscriptions",
      "organizations_url": "https://api.github.com/users/carnhofdaki/orgs",
      "repos_url": "https://api.github.com/users/carnhofdaki/repos",
      "events_url": "https://api.github.com/users/carnhofdaki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carnhofdaki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-15T10:58:34Z",
    "updated_at": "2019-10-15T10:58:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Concept ACK, though I am unsure if signet should be configurable at all. (via `signet_blockscript` for example)\r\n> \r\n> It should just be a shared public network, an alternative (or replacement) of testnet.\r\n\r\n@NicolasDorier as of my testing, the configurable signet currently does not work. I will be happy if someone can prove me wrong, but the steps at [Signet - Bitcoin Wiki](https://en.bitcoin.it/wiki/Signet#Custom_Signet) currently do not lead me to a working custom signet.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542157098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545689045",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-545689045",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 545689045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTY4OTA0NQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-24T00:20:46Z",
    "updated_at": "2019-10-24T00:20:57Z",
    "author_association": "MEMBER",
    "body": "@carnhofdaki Can you make a log file showing all the steps of you setting up a custom signet to you getting the error? (and accompanying debug.log file would be helpful too)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545689045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547558988",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-547558988",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 547558988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzU1ODk4OA==",
    "user": {
      "login": "carnhofdaki",
      "id": 46941376,
      "node_id": "MDQ6VXNlcjQ2OTQxMzc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46941376?u=6306df69954bfd506fe58e0783704eb846dd8807&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carnhofdaki",
      "html_url": "https://github.com/carnhofdaki",
      "followers_url": "https://api.github.com/users/carnhofdaki/followers",
      "following_url": "https://api.github.com/users/carnhofdaki/following{/other_user}",
      "gists_url": "https://api.github.com/users/carnhofdaki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carnhofdaki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carnhofdaki/subscriptions",
      "organizations_url": "https://api.github.com/users/carnhofdaki/orgs",
      "repos_url": "https://api.github.com/users/carnhofdaki/repos",
      "events_url": "https://api.github.com/users/carnhofdaki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carnhofdaki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-29T18:12:03Z",
    "updated_at": "2019-10-29T18:12:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kallewoof See log and the script which produced it at https://gist.github.com/carnhofdaki/60edef577f637ef2dbf4d244e4e279c2\r\n\r\nFeel free to ask any questions if you wonder about the commands in the script. Generally it is just following the [wiki article](https://en.bitcoin.it/wiki/Signet#Custom_Signet) but fully automated.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/547558988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549206775",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-549206775",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 549206775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTIwNjc3NQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-04T02:18:35Z",
    "updated_at": "2019-11-04T02:18:35Z",
    "author_association": "MEMBER",
    "body": "@carnhofdaki Sorry for late response. Tried your script and, yeah, that looks off. Will have to look closer into what might be causing it. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549206775/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552216376",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-552216376",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 552216376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjIxNjM3Ng==",
    "user": {
      "login": "carnhofdaki",
      "id": 46941376,
      "node_id": "MDQ6VXNlcjQ2OTQxMzc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46941376?u=6306df69954bfd506fe58e0783704eb846dd8807&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carnhofdaki",
      "html_url": "https://github.com/carnhofdaki",
      "followers_url": "https://api.github.com/users/carnhofdaki/followers",
      "following_url": "https://api.github.com/users/carnhofdaki/following{/other_user}",
      "gists_url": "https://api.github.com/users/carnhofdaki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carnhofdaki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carnhofdaki/subscriptions",
      "organizations_url": "https://api.github.com/users/carnhofdaki/orgs",
      "repos_url": "https://api.github.com/users/carnhofdaki/repos",
      "events_url": "https://api.github.com/users/carnhofdaki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carnhofdaki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-10T17:41:22Z",
    "updated_at": "2019-11-10T17:41:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @carnhofdaki Sorry for late response. Tried your script and, yeah, that looks off. Will have to look closer into what might be causing it.\r\n\r\nThank you for having a look at the script!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552216376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/563026092",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-563026092",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 563026092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzAyNjA5Mg==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-09T01:33:40Z",
    "updated_at": "2019-12-09T01:33:40Z",
    "author_association": "MEMBER",
    "body": "@carnesen Sorry for delay on looking at that script, work is keeping me away from everything atm. Hoping to get back into things in a week or two, though. Will look then.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/563026092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/563043393",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-563043393",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 563043393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzA0MzM5Mw==",
    "user": {
      "login": "carnesen",
      "id": 5756743,
      "node_id": "MDQ6VXNlcjU3NTY3NDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5756743?u=4c385465c3b70ae61c6c45bea3e5169746bf0b4a&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carnesen",
      "html_url": "https://github.com/carnesen",
      "followers_url": "https://api.github.com/users/carnesen/followers",
      "following_url": "https://api.github.com/users/carnesen/following{/other_user}",
      "gists_url": "https://api.github.com/users/carnesen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carnesen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carnesen/subscriptions",
      "organizations_url": "https://api.github.com/users/carnesen/orgs",
      "repos_url": "https://api.github.com/users/carnesen/repos",
      "events_url": "https://api.github.com/users/carnesen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carnesen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-09T03:06:50Z",
    "updated_at": "2019-12-09T03:06:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @carnesen Sorry for delay on looking at that script, work is keeping me away from everything atm. Hoping to get back into things in a week or two, though. Will look then.\r\n\r\n@carnhofdaki I think this was meant for you (cc @kallewoof) ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/563043393/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/563046605",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-563046605",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 563046605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzA0NjYwNQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-09T03:24:34Z",
    "updated_at": "2019-12-09T03:24:34Z",
    "author_association": "MEMBER",
    "body": "@carnesen Thanks. Yeah, it was.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/563046605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569259536",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-569259536",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 569259536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTI1OTUzNg==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-27T12:24:10Z",
    "updated_at": "2019-12-27T12:28:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nGreat work! I set up a custom signet a few months ago and found it very easy to do and it was running smoothly (followed the wiki article, not a review, code has changed a lot since then). However, I also discovered that (as is usually the case) coordinating other participants in that Signet was the hard part. So, I now think the main contribution of Signet will be the global signet with regularly scheduled fee spikes, attack scenarios etc. where the behavior of all kinds of upcoming PRs can be tested and measured on a regular basis, especially P2P behavior. But even if custom signets may be used less than I thought initially, I still see the value in them for upcoming softforks like taproot. Will try to review the code in the coming weeks.\r\n\r\nEdit: If you were to schedule some events on the global signet now already that maybe would attract more contributors to deploy their own PRs to the global signet and give feedback here as well, a win-win. Just an idea :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569259536/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569346579",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-569346579",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 569346579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTM0NjU3OQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-27T21:13:06Z",
    "updated_at": "2019-12-27T21:13:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "This PR has gotten four Concept ACKs and zero Concept NACKs if I'm counting correctly.\r\n\r\nPlease chime in: more Concept ACKs or Concept NACKs?\r\n\r\nThe benefits have been discussed extensively: what costs can we see?\r\n\r\nPersonally I think signet would be very valuable to have when testing.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569346579/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569483123",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-569483123",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 569483123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTQ4MzEyMw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-29T07:46:45Z",
    "updated_at": "2019-12-29T07:46:45Z",
    "author_association": "MEMBER",
    "body": "@carnhofdaki \r\n\r\n> @kallewoof See log and the script which produced it at https://gist.github.com/carnhofdaki/60edef577f637ef2dbf4d244e4e279c2\r\n> \r\n> Feel free to ask any questions if you wonder about the commands in the script. Generally it is just following the [wiki article](https://en.bitcoin.it/wiki/Signet#Custom_Signet) but fully automated.\r\n\r\nSorry for the extremely late reply. I found the issue -- you are setting `LEN` to the length of the hexadecimal string, rather than the length of the actual data. One fix:\r\n```diff\r\n- LEN=$(printf $PUBKEY | wc -c)\r\n+ LENX2=$(printf $PUBKEY | wc -c)\r\n+ LEN=$((LENX2/2))\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569483123/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569483275",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-569483275",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 569483275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTQ4MzI3NQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-29T07:49:48Z",
    "updated_at": "2019-12-29T07:49:48Z",
    "author_association": "MEMBER",
    "body": "@fjahr Thanks for the feedback! I was honestly dragged away from everything for the last couple of months, and am finally getting back to things now. Scheduling events on the global running signet is something I've been meaning to do for a long time. The code to do things like intentional reorgs and such is in place, but lacking a UI right now.\r\n\r\nIf you have any concrete ideas I'd love to hear them :)\r\n\r\n@practicalswift Thanks for the nudge! I will bring up bumping signet over to high priority from needs concept ACK on IRC.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569483275/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569920143",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-569920143",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 569920143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTkyMDE0Mw==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-31T12:17:40Z",
    "updated_at": "2019-12-31T12:17:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> If you have any concrete ideas I'd love to hear them :)\r\n\r\nI am not sure about priorities as I am not working on something where I need it right now, but some ideas could be interesting:\r\n- \"larger\" re-orgs\r\n- large numbers of transactions with rising fee rate, so that default sized mempools start evicting transactions\r\n- mining empty blocks\r\n- full blocks but transactions were not in the mempool\r\n- network hash-rate drop/spike\r\n\r\nPing @amitiuttarwar what would be helpful for your work on https://github.com/bitcoin/bitcoin/pull/16698?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569920143/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570566733",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-570566733",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 570566733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDU2NjczMw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-03T13:05:37Z",
    "updated_at": "2020-01-03T13:05:37Z",
    "author_association": "MEMBER",
    "body": "I have no idea why tests are failing... they aren't, locally.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570566733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570568871",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-570568871",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 570568871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDU2ODg3MQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-03T13:15:30Z",
    "updated_at": "2020-01-03T13:15:30Z",
    "author_association": "MEMBER",
    "body": "re-run ci",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570568871/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/571145312",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-571145312",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 571145312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTE0NTMxMg==",
    "user": {
      "login": "carnhofdaki",
      "id": 46941376,
      "node_id": "MDQ6VXNlcjQ2OTQxMzc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46941376?u=6306df69954bfd506fe58e0783704eb846dd8807&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carnhofdaki",
      "html_url": "https://github.com/carnhofdaki",
      "followers_url": "https://api.github.com/users/carnhofdaki/followers",
      "following_url": "https://api.github.com/users/carnhofdaki/following{/other_user}",
      "gists_url": "https://api.github.com/users/carnhofdaki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carnhofdaki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carnhofdaki/subscriptions",
      "organizations_url": "https://api.github.com/users/carnhofdaki/orgs",
      "repos_url": "https://api.github.com/users/carnhofdaki/repos",
      "events_url": "https://api.github.com/users/carnhofdaki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carnhofdaki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-06T13:51:45Z",
    "updated_at": "2020-01-06T13:51:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kallewoof Thank you! https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-569483123\r\nIt works well now!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/571145312/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/571487855",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-571487855",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 571487855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTQ4Nzg1NQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-07T08:32:44Z",
    "updated_at": "2020-01-07T08:32:44Z",
    "author_association": "MEMBER",
    "body": "I think we can remove \"Needs Conceptual Review\" tag as well.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/571487855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/574542278",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-574542278",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 574542278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDU0MjI3OA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-15T08:02:56Z",
    "updated_at": "2020-01-15T08:02:56Z",
    "author_association": "MEMBER",
    "body": "Bumped copyright year. Note that Travis tests did not run, only Appveyor.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/574542278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/574811270",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-574811270",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 574811270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDgxMTI3MA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-15T19:12:34Z",
    "updated_at": "2020-01-15T19:12:34Z",
    "author_association": "MEMBER",
    "body": "Can we have the discussion on not checking the genesis' block pow vs needing grind the genesis block again?\r\nCan anybody remind me what are the main arguments in favor of having to grind the genesis block?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/574811270/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575862493",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-575862493",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 575862493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTg2MjQ5Mw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-18T03:36:00Z",
    "updated_at": "2020-01-18T03:48:05Z",
    "author_association": "MEMBER",
    "body": "@jtimon I think we should discuss on the mailing list. I'll send an email listing pros and cons.\r\n\r\nEdit: Actually, I think this is contentious enough that I'd rather just get signet v 1.0 in as it is with the genesis nonce, and then later see about a signet 2.0 which shortcuts the genesis POW.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575862493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577999888",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-577999888",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 577999888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Nzk5OTg4OA==",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?u=256d78207f88d303d61b62060a309657276cf6cb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T05:45:26Z",
    "updated_at": "2020-01-24T05:45:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I started talking with @kallewoof about signet, and I thought of something.\r\n\r\n## Problem\r\n\r\nSoftware built on top of bitcoin core very often hard code and rely on the genesis block hash.\r\nHowever it seems that because of [this](https://github.com/bitcoin/bitcoin/pull/16411/files#diff-64cbe1ad5465e13bc59ee8bb6f3de2e7L26), each signet will have a different genesis block. \r\nThis mean that every times you use a different signet, you would need to rebuild every software on top of of bitcoin core. This is a friction that would prevent people from using signet.\r\n\r\n## Specific use case\r\n\r\nFor example, if a project using NBitcoin would decide to use another signet, the developer would need me to hardcode his new signet in my library then I need to push a new version of my library, then he would need to recompile his project to use this version and finally able to use the new signet.\r\nMoving back and forth between signet would require such kind of heavy coordination between many people involved.\r\n\r\nBecause in real code the genesis block never change, it is not wise either for NBitcoin to allow dynamic network parameters. This would push the complexity to the user of my library, and make his code a bit farther away from their mainnet.\r\n\r\n## Proposal\r\n\r\nInstead of putting the challenge scriptPubKey in the genesis block, it should be put in the block just after.\r\n\r\nThe other advantage of it is that we don't need to grind the genesis block to pass the PoW check everytimes somebody change the signet params.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577999888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578005031",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-578005031",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 578005031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODAwNTAzMQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T06:11:44Z",
    "updated_at": "2020-01-24T06:11:44Z",
    "author_association": "MEMBER",
    "body": "It would definitely simplify software since most stuff I've found has a hard coded genesis block.\r\n\r\nThe downside is that most light clients (anything that *doesn't* also check the block signature) will run the risk of switching to the wrong chain!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578005031/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578010261",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-578010261",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 578010261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODAxMDI2MQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T06:37:22Z",
    "updated_at": "2020-01-24T06:37:22Z",
    "author_association": "MEMBER",
    "body": "One partial solution to the problem would be to set the magic number (`pchMessageStart`) to be e.g. the first 4 bytes of `sha256d(signet_challenge)`. There would be a 1 in 2^32 chance that two signets' magic numbers would collide, but I think this is acceptable, as most SPV nodes will have trusted nodes they connect to for signet testing anyway.\r\n\r\nInterested to hear people's thoughts!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578010261/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578042043",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-578042043",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 578042043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODA0MjA0Mw==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T08:45:21Z",
    "updated_at": "2020-01-24T08:45:42Z",
    "author_association": "MEMBER",
    "body": "It sounds reasonable to have a fixed genesis block for all signets, with differentiation happening in the first block. Taking the thought a bit further, could you have an arbitrary height where the signet constraint activates (default 1)? That might make it easier to fork signets, so you can try new consensus features on an existing UTXO set.\r\n\r\nThe `sha256d(signet_challenge)` also sounds reasonable. You could write a test case with two different signets to demonstrate this.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578042043/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578297985",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-578297985",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 578297985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODI5Nzk4NQ==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T20:54:59Z",
    "updated_at": "2020-01-24T20:54:59Z",
    "author_association": "MEMBER",
    "body": "> Instead of putting the challenge scriptPubKey in the genesis block, it should be put in the block just after.\r\n\r\nBut you need them to have different genesis blocks. For example, the genesis block is the chain_id in lightning networks.\r\nSee, for example, my project in which I use 3 different regtest chains for lightning.\r\nI'm not using signet there, but it would be similar.\r\n\r\nhttps://github.com/jtimon/multi-ln-demo/blob/master/multiln/chains.py\r\n\r\nI guess that file is not very interesting, but different chains need different genesis blocks.\r\n\r\n> This mean that every times you use a different signet, you would need to rebuild every software on top of of bitcoin core.\r\n\r\nAlternatively those projects can reimplement how to calculate the genesis hash from the challenge script.\r\nThis alternative requires that the pow for genesis blocks isn't checked so that there's no need to grind the genesis block, which is desirable for simplicity anyway, and I am yet to hear a good argument against.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578297985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583342863",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-583342863",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 583342863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzM0Mjg2Mw==",
    "user": {
      "login": "0xB10C",
      "id": 19157360,
      "node_id": "MDQ6VXNlcjE5MTU3MzYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/19157360?u=a20996a145f1be613c7b0a57e75d36508572e29d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xB10C",
      "html_url": "https://github.com/0xB10C",
      "followers_url": "https://api.github.com/users/0xB10C/followers",
      "following_url": "https://api.github.com/users/0xB10C/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xB10C/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
      "organizations_url": "https://api.github.com/users/0xB10C/orgs",
      "repos_url": "https://api.github.com/users/0xB10C/repos",
      "events_url": "https://api.github.com/users/0xB10C/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xB10C/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-07T11:04:00Z",
    "updated_at": "2020-02-07T11:04:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Syncing signet (both the default one and a custom one) reports an incorrect IBD _progress_ while in IBD and after the IBD. The wrong progress can be seen in the debug.log and via `getblockchaininfo` and potentially causes confusion. Haven't looked into why the calculation is wrong.\r\n\r\n```bash\r\n./bitcoin-cli -signet getblockchaininfo\r\n{\r\n  \"chain\": \"signet\",\r\n  \"blocks\": 27004,\r\n  \"headers\": 27004,\r\n  \"bestblockhash\": \"0000015194fa56d07f9cf8ce3c23e3e5ab64d68cfa06fa15e622b86336db10c0\",\r\n  \"difficulty\": 0.002338098747362749,\r\n  \"mediantime\": 1581068861,\r\n  \"verificationprogress\": 5.484926296056364e-05,\r\n  \"initialblockdownload\": false,\r\n  \"chainwork\": \"000000000000000000000000000000000000000000000000000000236405f47a\",\r\n  \"size_on_disk\": 10652880,\r\n  \"pruned\": false,\r\n  \"signet-blockscript\": \"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\",\r\n  \"softforks\": {\r\n  // shortend  \r\n  },\r\n  \"warnings\": \"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\"\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583342863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583359493",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-583359493",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 583359493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzM1OTQ5Mw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-07T11:54:31Z",
    "updated_at": "2020-02-07T11:54:31Z",
    "author_association": "MEMBER",
    "body": "@0xB10C Unfortunately this is not trivial to fix, because it depends on statistics manually put into the chainparams file (see e.g. the mainnet class a few pages up, where it has info about the number of transactions and such in the network). For a very-long-term signet, it might make sense to start adding those, but whenever the signet network switches to a new one, all of that would become redundant.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583359493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595036647",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-595036647",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 595036647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTAzNjY0Nw==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-05T05:31:07Z",
    "updated_at": "2020-03-05T05:31:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > \r\n> \r\n> But you need them to have different genesis blocks. For example, the genesis block is the chain_id in lightning networks.\r\n\r\n@jtimon per [bolt-00](https://github.com/lightningnetwork/lightning-rfc/blob/master/00-introduction.md#glossary-and-terminology-guide) you don't have to use the genesis block as the chain id, so I think it should be fine to use block 1 as the chain id for testing lightning on signet ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595036647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/597815073",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-597815073",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 597815073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzgxNTA3Mw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-11T19:07:04Z",
    "updated_at": "2020-03-11T19:07:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n\ud83d\udc19 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/fa733bbd78add587e19f0175ab9c127a8c27e024/CONTRIBUTING.md#rebasing-changes).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/597815073/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/597892804",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-597892804",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 597892804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Nzg5MjgwNA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-11T21:43:01Z",
    "updated_at": "2020-03-11T21:43:01Z",
    "author_association": "MEMBER",
    "body": "> > > \r\n> > \r\n> > \r\n> > But you need them to have different genesis blocks. For example, the genesis block is the chain_id in lightning networks.\r\n> \r\n> @jtimon per [bolt-00](https://github.com/lightningnetwork/lightning-rfc/blob/master/00-introduction.md#glossary-and-terminology-guide) you don't have to use the genesis block as the chain id, so I think it should be fine to use block 1 as the chain id for testing lightning on signet\r\n\r\nWell, but in that case, you would need to hardcode the second block instead of the genesis block and you have the same problem @NicolasDorier complains about, no?\r\n\r\nI understand that some use cases don't need a chain_id or anything like that, and for those it is fine to have the same the same genesis hash and they don't even care about the second block hash because they won't hardcode that either.\r\nBut for lightning, I think you need a chain_id.\r\n\r\nSupporting multiple chains doesn't require external software to hardcode every new chain though, that's just a design decision.\r\nJust like bitcoin core generates the hash in a deterministic way, other software can too.\r\nInstead of implementing only a few hardcoded signets or only the default one, external software could implement them all possible signets at once, just like bitcoin core does.\r\n\r\nFor this, it would help to not mine the genesis block and thus not need to handle the nonce as configurable anywhere, but that's orthogonal.\r\nSorry to insist, but can we discuss what are the advantages of grinding the genesis block again?\r\n\r\nBack to @NicolasDorier 's proposal of committing the challenge to the second block instead of the first one, I'm all fine with that, it's just that I also want to generate chains that do have different genesis blocks when I want to. This could be done, for example, by hashing the network name.\r\nPeople wanting the same genesis hash could all just leave the default \"signet\" while others could customize different names, resulting in different genesis blocks, like in https://github.com/bitcoin/bitcoin/pull/17037\r\n\r\nThis again would be simpler if the genesis block wasn't mined.\r\n\r\nOr perhaps we could even allow both having the challenge being committed on the genesis block or on the second one as a configuration option?\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/597892804/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/598023388",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-598023388",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 598023388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODAyMzM4OA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-12T06:09:54Z",
    "updated_at": "2020-03-12T06:09:54Z",
    "author_association": "MEMBER",
    "body": "I just want to add to this that, with the hard coded genesis block, all software will still need to re-generate the magic number (message header / message start / whatever you wanna call it) when they switch signets. I think this is significantly easier than a dynamic genesis block hash, but it's still not \"plug-and-play\" to switch to a different signet. Ping @NicolasDorier.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/598023388/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602995351",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#issuecomment-602995351",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16411",
    "id": 602995351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjk5NTM1MQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-24T03:39:30Z",
    "updated_at": "2020-03-24T03:39:30Z",
    "author_association": "MEMBER",
    "body": "Closing in favor of #18267.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/602995351/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305236543",
    "pull_request_review_id": 264057562,
    "id": 305236543,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTIzNjU0Mw==",
    "diff_hunk": "@@ -941,9 +941,12 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n         return error(\"%s: Deserialize or I/O error - %s at %s\", __func__, e.what(), pos.ToString());\n     }\n \n-    // Check the header\n-    if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n-        return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n+    // We skip POW checks for genesis block\n+    if (block.GetHash() != consensusParams.hashGenesisBlock) {",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "88312cd89e2dd5f2a2eeeb6dd0b517b6d836d685",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I would move this test inside `CheckProofOfWork`",
    "created_at": "2019-07-19T07:42:44Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r305236543",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305236543"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r305236543"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305236543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 969,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305236661",
    "pull_request_review_id": 264057680,
    "id": 305236661,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTIzNjY2MQ==",
    "diff_hunk": "@@ -2965,10 +2968,13 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n     if (block.fChecked)\n         return true;\n \n-    // Check that the header is valid (particularly PoW).  This is mostly\n-    // redundant with the call in AcceptBlockHeader.\n-    if (!CheckBlockHeader(block, state, consensusParams, fCheckPOW))\n-        return false;\n+    // We skip POW checks for genesis block\n+    if (block.GetHash() != consensusParams.hashGenesisBlock) {",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "88312cd89e2dd5f2a2eeeb6dd0b517b6d836d685",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I would move this test inside `CheckBlockHeader`",
    "created_at": "2019-07-19T07:43:06Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r305236661",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305236661"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r305236661"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305236661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3041,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305251449",
    "pull_request_review_id": 264076468,
    "id": 305251449,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTI1MTQ0OQ==",
    "diff_hunk": "@@ -941,9 +941,12 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n         return error(\"%s: Deserialize or I/O error - %s at %s\", __func__, e.what(), pos.ToString());\n     }\n \n-    // Check the header\n-    if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n-        return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n+    // We skip POW checks for genesis block\n+    if (block.GetHash() != consensusParams.hashGenesisBlock) {",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "88312cd89e2dd5f2a2eeeb6dd0b517b6d836d685",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I need this if block for `CheckBlockSolution` too, though.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/587526d21850e71bf7c7685a6c40e4084b4d894a/src/validation.cpp#L945-L952",
    "created_at": "2019-07-19T08:26:38Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r305251449",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305251449"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r305251449"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305251449/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 969,
    "side": "RIGHT",
    "in_reply_to_id": 305236543
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305251888",
    "pull_request_review_id": 264077002,
    "id": 305251888,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTI1MTg4OA==",
    "diff_hunk": "@@ -2965,10 +2968,13 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n     if (block.fChecked)\n         return true;\n \n-    // Check that the header is valid (particularly PoW).  This is mostly\n-    // redundant with the call in AcceptBlockHeader.\n-    if (!CheckBlockHeader(block, state, consensusParams, fCheckPOW))\n-        return false;\n+    // We skip POW checks for genesis block\n+    if (block.GetHash() != consensusParams.hashGenesisBlock) {",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "88312cd89e2dd5f2a2eeeb6dd0b517b6d836d685",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I need this if block for `CheckBlockSolution` too, though.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/587526d21850e71bf7c7685a6c40e4084b4d894a/src/validation.cpp#L2974-L2982",
    "created_at": "2019-07-19T08:27:37Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r305251888",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305251888"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r305251888"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305251888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3041,
    "side": "RIGHT",
    "in_reply_to_id": 305236661
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305320988",
    "pull_request_review_id": 264164745,
    "id": 305320988,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTMyMDk4OA==",
    "diff_hunk": "@@ -2965,10 +2968,13 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n     if (block.fChecked)\n         return true;\n \n-    // Check that the header is valid (particularly PoW).  This is mostly\n-    // redundant with the call in AcceptBlockHeader.\n-    if (!CheckBlockHeader(block, state, consensusParams, fCheckPOW))\n-        return false;\n+    // We skip POW checks for genesis block\n+    if (block.GetHash() != consensusParams.hashGenesisBlock) {",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "88312cd89e2dd5f2a2eeeb6dd0b517b6d836d685",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`CheckBlockSolution` could also return true if  `block.GetHash() == consensusParams.hashGenesisBlock`",
    "created_at": "2019-07-19T11:45:19Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r305320988",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305320988"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r305320988"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305320988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3041,
    "side": "RIGHT",
    "in_reply_to_id": 305236661
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305335726",
    "pull_request_review_id": 264184073,
    "id": 305335726,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTMzNTcyNg==",
    "diff_hunk": "@@ -2965,10 +2968,13 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n     if (block.fChecked)\n         return true;\n \n-    // Check that the header is valid (particularly PoW).  This is mostly\n-    // redundant with the call in AcceptBlockHeader.\n-    if (!CheckBlockHeader(block, state, consensusParams, fCheckPOW))\n-        return false;\n+    // We skip POW checks for genesis block\n+    if (block.GetHash() != consensusParams.hashGenesisBlock) {",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 25,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "88312cd89e2dd5f2a2eeeb6dd0b517b6d836d685",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That's fair. But the check appears in 3 places instead of 2. Not sure why that is better, tbh.\r\n\r\nEdit: to clarify, moving the check to the three called-to functions means the check will happen 3 times in 3 different places, compared to 2 times in 2 places, as is the case right now.",
    "created_at": "2019-07-19T12:32:20Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r305335726",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305335726"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r305335726"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/305335726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3041,
    "side": "RIGHT",
    "in_reply_to_id": 305236661
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308844811",
    "pull_request_review_id": 268547102,
    "id": 308844811,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODg0NDgxMQ==",
    "diff_hunk": "@@ -0,0 +1,60 @@\n+Contents\n+========\n+This directory contains tools related to Signet, both for running a Signet yourself and for using one.\n+\n+The `args.sh` script is a helper script used by the other scripts and should not be invoked directly.\n+\n+getcoins.sh\n+===========\n+\n+A script to call a faucet to get Signet coins.\n+\n+Syntax: `getcoins.sh [--help] [--cmd=<bitcoin-cli path>] [--faucet=<faucet URL>] [--addr=<signet bech32 address>] [--password=<faucet password>] [--] [<bitcoin-cli args>]`\n+\n+* `--cmd` lets you customize the bitcoin-cli path. By default it will look for it in the PATH, then in `../../src/`\n+* `--faucet` lets you specify which faucet to use; the faucet is assumed to be compatible with https://github.com/kallewoof/bitcoin-faucet\n+* `--addr` lets you specify a Signet address; by default, the address must be a bech32 address. This and `--cmd` above complement each other (i.e. you do not need `bitcoin-cli` if you use `--addr`)\n+* `--password` lets you specify a faucet password; this is handy if you are in a classroom and set up your own faucet for your students; (above faucet does not limit by IP when password is enabled)\n+\n+If using the default network, invoking the script with no arguments should be sufficient under normal\n+circumstances, but if multiple people are behind the same IP address, the faucet will by default only\n+accept one claim per day. See `--password` above.\n+\n+issuer.sh\n+=========\n+\n+A script to regularly issue Signet blocks.\n+\n+Syntax: `issuer.sh <idle time> [--help] [--cmd=<bitcoin-cli path>] [--] [<bitcoin-cli args>]`\n+\n+* `<idle time>` is a time in seconds to wait between each block generation\n+* `--cmd` lets you customize the bitcoin-cli path. By default it will look for it in the PATH, then in `../../src/`\n+\n+Signet, just like other bitcoin networks, uses proof of work alongside the block signature; this\n+includes the difficulty adjustment every 2016 blocks.\n+The `<idle time>` exists to allow you to maintain a relatively low difficulty over an extended period\n+of time. E.g. an idle time of 540 means your node will end up spending roughly 1 minute grinding\n+hashes for each block, and wait 9 minutes after every time.\n+\n+mkblock.sh\n+==========\n+\n+A script to generate one Signet block.\n+\n+Syntax: `mkblock.sh <bitcoin-cli path> [<bitcoin-cli args>]`",
    "path": "contrib/signet/README.md",
    "position": 44,
    "original_position": 44,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "ac9da7d232831b6cc67c1386a0a18439f6b829b1",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "How is this supposed to work? It looks like the chainparams are setting the pow to the pow of mainnet. This script calls `grindblock`, which is a non-optimized while loop on a single CPU core. Could this lead to the chain stalling?",
    "created_at": "2019-07-30T17:23:26Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r308844811",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308844811"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r308844811"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308844811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 44,
    "original_line": 44,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308986219",
    "pull_request_review_id": 268720882,
    "id": 308986219,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODk4NjIxOQ==",
    "diff_hunk": "@@ -0,0 +1,60 @@\n+Contents\n+========\n+This directory contains tools related to Signet, both for running a Signet yourself and for using one.\n+\n+The `args.sh` script is a helper script used by the other scripts and should not be invoked directly.\n+\n+getcoins.sh\n+===========\n+\n+A script to call a faucet to get Signet coins.\n+\n+Syntax: `getcoins.sh [--help] [--cmd=<bitcoin-cli path>] [--faucet=<faucet URL>] [--addr=<signet bech32 address>] [--password=<faucet password>] [--] [<bitcoin-cli args>]`\n+\n+* `--cmd` lets you customize the bitcoin-cli path. By default it will look for it in the PATH, then in `../../src/`\n+* `--faucet` lets you specify which faucet to use; the faucet is assumed to be compatible with https://github.com/kallewoof/bitcoin-faucet\n+* `--addr` lets you specify a Signet address; by default, the address must be a bech32 address. This and `--cmd` above complement each other (i.e. you do not need `bitcoin-cli` if you use `--addr`)\n+* `--password` lets you specify a faucet password; this is handy if you are in a classroom and set up your own faucet for your students; (above faucet does not limit by IP when password is enabled)\n+\n+If using the default network, invoking the script with no arguments should be sufficient under normal\n+circumstances, but if multiple people are behind the same IP address, the faucet will by default only\n+accept one claim per day. See `--password` above.\n+\n+issuer.sh\n+=========\n+\n+A script to regularly issue Signet blocks.\n+\n+Syntax: `issuer.sh <idle time> [--help] [--cmd=<bitcoin-cli path>] [--] [<bitcoin-cli args>]`\n+\n+* `<idle time>` is a time in seconds to wait between each block generation\n+* `--cmd` lets you customize the bitcoin-cli path. By default it will look for it in the PATH, then in `../../src/`\n+\n+Signet, just like other bitcoin networks, uses proof of work alongside the block signature; this\n+includes the difficulty adjustment every 2016 blocks.\n+The `<idle time>` exists to allow you to maintain a relatively low difficulty over an extended period\n+of time. E.g. an idle time of 540 means your node will end up spending roughly 1 minute grinding\n+hashes for each block, and wait 9 minutes after every time.\n+\n+mkblock.sh\n+==========\n+\n+A script to generate one Signet block.\n+\n+Syntax: `mkblock.sh <bitcoin-cli path> [<bitcoin-cli args>]`",
    "path": "contrib/signet/README.md",
    "position": 44,
    "original_position": 44,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "ac9da7d232831b6cc67c1386a0a18439f6b829b1",
    "user": {
      "login": "junderw",
      "id": 11246316,
      "node_id": "MDQ6VXNlcjExMjQ2MzE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/11246316?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/junderw",
      "html_url": "https://github.com/junderw",
      "followers_url": "https://api.github.com/users/junderw/followers",
      "following_url": "https://api.github.com/users/junderw/following{/other_user}",
      "gists_url": "https://api.github.com/users/junderw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/junderw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/junderw/subscriptions",
      "organizations_url": "https://api.github.com/users/junderw/orgs",
      "repos_url": "https://api.github.com/users/junderw/repos",
      "events_url": "https://api.github.com/users/junderw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/junderw/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If the signers compete with each other, or frequently change their hashpower, yes.\r\n\r\nI think the idea is that signatures limit the miner pool to a few people, then those people each pledge a consistent low hashpower to the network.\r\n\r\nPrevents people from hopping on with ASICs, driving up difficulty and then disappearing.",
    "created_at": "2019-07-30T23:33:43Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r308986219",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308986219"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r308986219"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308986219/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 44,
    "original_line": 44,
    "side": "RIGHT",
    "in_reply_to_id": 308844811
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308994818",
    "pull_request_review_id": 268731126,
    "id": 308994818,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODk5NDgxOA==",
    "diff_hunk": "@@ -0,0 +1,60 @@\n+Contents\n+========\n+This directory contains tools related to Signet, both for running a Signet yourself and for using one.\n+\n+The `args.sh` script is a helper script used by the other scripts and should not be invoked directly.\n+\n+getcoins.sh\n+===========\n+\n+A script to call a faucet to get Signet coins.\n+\n+Syntax: `getcoins.sh [--help] [--cmd=<bitcoin-cli path>] [--faucet=<faucet URL>] [--addr=<signet bech32 address>] [--password=<faucet password>] [--] [<bitcoin-cli args>]`\n+\n+* `--cmd` lets you customize the bitcoin-cli path. By default it will look for it in the PATH, then in `../../src/`\n+* `--faucet` lets you specify which faucet to use; the faucet is assumed to be compatible with https://github.com/kallewoof/bitcoin-faucet\n+* `--addr` lets you specify a Signet address; by default, the address must be a bech32 address. This and `--cmd` above complement each other (i.e. you do not need `bitcoin-cli` if you use `--addr`)\n+* `--password` lets you specify a faucet password; this is handy if you are in a classroom and set up your own faucet for your students; (above faucet does not limit by IP when password is enabled)\n+\n+If using the default network, invoking the script with no arguments should be sufficient under normal\n+circumstances, but if multiple people are behind the same IP address, the faucet will by default only\n+accept one claim per day. See `--password` above.\n+\n+issuer.sh\n+=========\n+\n+A script to regularly issue Signet blocks.\n+\n+Syntax: `issuer.sh <idle time> [--help] [--cmd=<bitcoin-cli path>] [--] [<bitcoin-cli args>]`\n+\n+* `<idle time>` is a time in seconds to wait between each block generation\n+* `--cmd` lets you customize the bitcoin-cli path. By default it will look for it in the PATH, then in `../../src/`\n+\n+Signet, just like other bitcoin networks, uses proof of work alongside the block signature; this\n+includes the difficulty adjustment every 2016 blocks.\n+The `<idle time>` exists to allow you to maintain a relatively low difficulty over an extended period\n+of time. E.g. an idle time of 540 means your node will end up spending roughly 1 minute grinding\n+hashes for each block, and wait 9 minutes after every time.\n+\n+mkblock.sh\n+==========\n+\n+A script to generate one Signet block.\n+\n+Syntax: `mkblock.sh <bitcoin-cli path> [<bitcoin-cli args>]`",
    "path": "contrib/signet/README.md",
    "position": 44,
    "original_position": 44,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "ac9da7d232831b6cc67c1386a0a18439f6b829b1",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The pow is not really the pow of mainnet unless you don't pass `-signet` or don't use a `-datadir` with signet in bitcoin.conf.\r\n\r\n`grindblock` is basically equivalent to `generate*`. You can use other miners like existing CPU miners or even ASICs (though you can't use the extra nonce so you'd have to resign the block instead).\r\n",
    "created_at": "2019-07-31T00:17:37Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r308994818",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308994818"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r308994818"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308994818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 44,
    "original_line": 44,
    "side": "RIGHT",
    "in_reply_to_id": 308844811
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315067388",
    "pull_request_review_id": 276377538,
    "id": 315067388,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTA2NzM4OA==",
    "diff_hunk": "@@ -7,6 +7,8 @@\n \n #include <chainparamsseeds.h>\n #include <consensus/merkle.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <signet.h>",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "ac9147c9f75f80de12148471561022d122584149",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think you are not using this one in this file.",
    "created_at": "2019-08-19T07:20:05Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315067388",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315067388"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315067388"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315067388/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315069080",
    "pull_request_review_id": 276379661,
    "id": 315069080,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTA2OTA4MA==",
    "diff_hunk": "@@ -158,10 +158,27 @@ bool DecodeHexBlockHeader(CBlockHeader& header, const std::string& hex_header)\n     return true;\n }\n \n+inline bool ReadFromDisk(const std::string& path, std::string& output)\n+{\n+    FILE* fp = fopen(path.c_str(), \"rb\");\n+    if (!fp) return false;\n+    char buf[1025];\n+    size_t r;\n+    buf[1024] = 0;\n+    output = \"\";\n+    while (0 < (r = fread(buf, 1, 1024, fp))) { buf[r] = 0; output += buf; }\n+    while (output.size() > 0 && output[output.size() - 1] == '\\n') output = output.substr(0, output.size() - 1);\n+    fclose(fp);\n+    return true;\n+}\n+\n bool DecodeHexBlk(CBlock& block, const std::string& strHexBlk)\n {\n-    if (!IsHex(strHexBlk))\n+    if (!IsHex(strHexBlk)) {\n+        std::string actual;\n+        if (ReadFromDisk(strHexBlk, actual)) return DecodeHexBlk(block, actual);",
    "path": "src/core_read.cpp",
    "position": 23,
    "original_position": 23,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "ac9147c9f75f80de12148471561022d122584149",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "why do you need this?",
    "created_at": "2019-08-19T07:25:26Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315069080",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315069080"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315069080"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315069080/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 179,
    "original_line": 179,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315069923",
    "pull_request_review_id": 276380740,
    "id": 315069923,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTA2OTkyMw==",
    "diff_hunk": "@@ -171,6 +183,10 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Error: Invalid address\");\n     }\n \n+    if (g_signet_blocks) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Generating signet blocks require that you use getnewblockhex\");",
    "path": "src/rpc/mining.cpp",
    "position": 71,
    "original_position": 72,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "ac9147c9f75f80de12148471561022d122584149",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "is there really no way to make it works, can't you call `getnewblockhex`? ",
    "created_at": "2019-08-19T07:27:57Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315069923",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315069923"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315069923"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315069923/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 236,
    "original_line": 236,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315070529",
    "pull_request_review_id": 276381392,
    "id": 315070529,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTA3MDUyOQ==",
    "diff_hunk": "@@ -32,6 +32,16 @@ class BaseSignatureCreator {\n     virtual bool CreateSig(const SigningProvider& provider, std::vector<unsigned char>& vchSig, const CKeyID& keyid, const CScript& scriptCode, SigVersion sigversion) const =0;\n };\n \n+class SimpleSignatureCreator : public BaseSignatureCreator",
    "path": "src/script/sign.h",
    "position": 5,
    "original_position": 4,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "ac9147c9f75f80de12148471561022d122584149",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "comments about the purpose of this would be nice",
    "created_at": "2019-08-19T07:29:29Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315070529",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315070529"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315070529"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315070529/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 35,
    "original_line": 35,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315076959",
    "pull_request_review_id": 276389303,
    "id": 315076959,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTA3Njk1OQ==",
    "diff_hunk": "@@ -158,10 +158,27 @@ bool DecodeHexBlockHeader(CBlockHeader& header, const std::string& hex_header)\n     return true;\n }\n \n+inline bool ReadFromDisk(const std::string& path, std::string& output)\n+{\n+    FILE* fp = fopen(path.c_str(), \"rb\");\n+    if (!fp) return false;\n+    char buf[1025];\n+    size_t r;\n+    buf[1024] = 0;\n+    output = \"\";\n+    while (0 < (r = fread(buf, 1, 1024, fp))) { buf[r] = 0; output += buf; }\n+    while (output.size() > 0 && output[output.size() - 1] == '\\n') output = output.substr(0, output.size() - 1);\n+    fclose(fp);\n+    return true;\n+}\n+\n bool DecodeHexBlk(CBlock& block, const std::string& strHexBlk)\n {\n-    if (!IsHex(strHexBlk))\n+    if (!IsHex(strHexBlk)) {\n+        std::string actual;\n+        if (ReadFromDisk(strHexBlk, actual)) return DecodeHexBlk(block, actual);",
    "path": "src/core_read.cpp",
    "position": 23,
    "original_position": 23,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "ac9147c9f75f80de12148471561022d122584149",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Juggling block hex values in Bash is very fragile. If a block gets too big, bash scripts start breaking. To avoid, the issuer script redirects output to files during the signing/grinding process.",
    "created_at": "2019-08-19T07:48:22Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315076959",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315076959"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315076959"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315076959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 179,
    "original_line": 179,
    "side": "RIGHT",
    "in_reply_to_id": 315069080
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315077473",
    "pull_request_review_id": 276389960,
    "id": 315077473,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTA3NzQ3Mw==",
    "diff_hunk": "@@ -171,6 +183,10 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Error: Invalid address\");\n     }\n \n+    if (g_signet_blocks) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Generating signet blocks require that you use getnewblockhex\");",
    "path": "src/rpc/mining.cpp",
    "position": 71,
    "original_position": 72,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "ac9147c9f75f80de12148471561022d122584149",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Recently, the wallet code and the rest of the code have been separated. Unfortunately this means the mining part and the signing part have to be separated as well.",
    "created_at": "2019-08-19T07:49:54Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315077473",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315077473"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315077473"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315077473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 236,
    "original_line": 236,
    "side": "RIGHT",
    "in_reply_to_id": 315069923
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315077802",
    "pull_request_review_id": 276390409,
    "id": 315077802,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTA3NzgwMg==",
    "diff_hunk": "@@ -7,6 +7,8 @@\n \n #include <chainparamsseeds.h>\n #include <consensus/merkle.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <signet.h>",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "ac9147c9f75f80de12148471561022d122584149",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I do; I reference `g_signet_blocks`, for example.",
    "created_at": "2019-08-19T07:50:53Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315077802",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315077802"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315077802"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315077802/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT",
    "in_reply_to_id": 315067388
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315078684",
    "pull_request_review_id": 276391553,
    "id": 315078684,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTA3ODY4NA==",
    "diff_hunk": "@@ -171,6 +183,10 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Error: Invalid address\");\n     }\n \n+    if (g_signet_blocks) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Generating signet blocks require that you use getnewblockhex\");",
    "path": "src/rpc/mining.cpp",
    "position": 71,
    "original_position": 72,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "ac9147c9f75f80de12148471561022d122584149",
    "user": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't understand. Why are you talking about wallet code? `generatetoaddress` does touch only mining code and `getnewblockhex` is in the scope of this function.",
    "created_at": "2019-08-19T07:53:30Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315078684",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315078684"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315078684"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315078684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 236,
    "original_line": 236,
    "side": "RIGHT",
    "in_reply_to_id": 315069923
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315078869",
    "pull_request_review_id": 276391795,
    "id": 315078869,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTA3ODg2OQ==",
    "diff_hunk": "@@ -32,6 +32,16 @@ class BaseSignatureCreator {\n     virtual bool CreateSig(const SigningProvider& provider, std::vector<unsigned char>& vchSig, const CKeyID& keyid, const CScript& scriptCode, SigVersion sigversion) const =0;\n };\n \n+class SimpleSignatureCreator : public BaseSignatureCreator",
    "path": "src/script/sign.h",
    "position": 5,
    "original_position": 4,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "ac9147c9f75f80de12148471561022d122584149",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added a few words to describe what it is. :)",
    "created_at": "2019-08-19T07:54:03Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315078869",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315078869"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r315078869"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/315078869/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 35,
    "original_line": 35,
    "side": "RIGHT",
    "in_reply_to_id": 315070529
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316715474",
    "pull_request_review_id": 278467997,
    "id": 316715474,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjcxNTQ3NA==",
    "diff_hunk": "@@ -968,6 +969,8 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n     if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n         return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n \n+    if (g_signet_blocks && block.GetHash() != consensusParams.hashGenesisBlock && !CheckBlockSolution(block, consensusParams)) return false; /* function calls error(..) */",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "39aeff990223282e46937f331152ea18638c9485",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "instead of g_signet_blocks we could use consensusParams.signet_blocks or similar.",
    "created_at": "2019-08-22T14:39:01Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316715474",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316715474"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316715474"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316715474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 972,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316717834",
    "pull_request_review_id": 278467997,
    "id": 316717834,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjcxNzgzNA==",
    "diff_hunk": "@@ -3036,6 +3039,8 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n     if (!CheckBlockHeader(block, state, consensusParams, fCheckPOW))\n         return false;\n \n+    if (g_signet_blocks && fCheckPOW && block.GetHash() != consensusParams.hashGenesisBlock && !CheckBlockSolution(block, consensusParams)) return false;\n+",
    "path": "src/validation.cpp",
    "position": 27,
    "original_position": 22,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "39aeff990223282e46937f331152ea18638c9485",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Perhaps do this in CheckBlockHeader?\r\nThat way unsigned blocks would be detected faster.\r\nAlso, I think the return false in a new line would be more readable.",
    "created_at": "2019-08-22T14:42:57Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316717834",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316717834"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316717834"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316717834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3320,
    "original_line": 3320,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316719229",
    "pull_request_review_id": 278467997,
    "id": 316719229,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjcxOTIyOQ==",
    "diff_hunk": "@@ -0,0 +1,58 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>        // MANDATORY_SCRIPT_VERIFY_FLAGS\n+#include <util/system.h>\n+\n+bool g_signet_blocks = false;\n+CScript g_signet_blockscript;",
    "path": "src/signet.cpp",
    "position": 15,
    "original_position": 16,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "3022803f33ced9853b6a5e264d2d917db95f3016",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Likewise this can be in consensus params instead of being a new global.",
    "created_at": "2019-08-22T14:45:13Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316719229",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316719229"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316719229"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316719229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 15,
    "original_line": 15,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316723055",
    "pull_request_review_id": 278467997,
    "id": 316723055,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjcyMzA1NQ==",
    "diff_hunk": "@@ -160,6 +161,12 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIn\n         result.pushKV(\"previousblockhash\", blockindex->pprev->GetBlockHash().GetHex());\n     if (pnext)\n         result.pushKV(\"nextblockhash\", pnext->GetBlockHash().GetHex());\n+    if (g_signet_blocks) {\n+        std::vector<uint8_t> signet_commitment;\n+        if (block.GetWitnessCommitmentSection(SIGNET_HEADER, signet_commitment)) {\n+            result.pushKV(\"signet-solution\", HexStr(signet_commitment));",
    "path": "src/rpc/blockchain.cpp",
    "position": 15,
    "original_position": 15,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "911924404731fedb605057c64e8de84c6c706fea",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "it would be nice to also show the challenge in getblockchaininfo.",
    "created_at": "2019-08-22T14:51:54Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316723055",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316723055"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316723055"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316723055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 174,
    "original_line": 174,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316974164",
    "pull_request_review_id": 278795970,
    "id": 316974164,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk3NDE2NA==",
    "diff_hunk": "@@ -968,6 +969,8 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n     if (!CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n         return error(\"ReadBlockFromDisk: Errors in block header at %s\", pos.ToString());\n \n+    if (g_signet_blocks && block.GetHash() != consensusParams.hashGenesisBlock && !CheckBlockSolution(block, consensusParams)) return false; /* function calls error(..) */",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "39aeff990223282e46937f331152ea18638c9485",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Did this, but did not move `blockscript` - see detached comment.",
    "created_at": "2019-08-23T04:56:46Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316974164",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316974164"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316974164"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316974164/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 972,
    "side": "RIGHT",
    "in_reply_to_id": 316715474
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316974346",
    "pull_request_review_id": 278796186,
    "id": 316974346,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk3NDM0Ng==",
    "diff_hunk": "@@ -3036,6 +3039,8 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n     if (!CheckBlockHeader(block, state, consensusParams, fCheckPOW))\n         return false;\n \n+    if (g_signet_blocks && fCheckPOW && block.GetHash() != consensusParams.hashGenesisBlock && !CheckBlockSolution(block, consensusParams)) return false;\n+",
    "path": "src/validation.cpp",
    "position": 27,
    "original_position": 22,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "39aeff990223282e46937f331152ea18638c9485",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`CheckBlockSolution` requires the block, not just the header.\r\n\r\nMoving return to own line for readability.",
    "created_at": "2019-08-23T04:57:44Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316974346",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316974346"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316974346"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316974346/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3320,
    "original_line": 3320,
    "side": "RIGHT",
    "in_reply_to_id": 316717834
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316974675",
    "pull_request_review_id": 278796574,
    "id": 316974675,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk3NDY3NQ==",
    "diff_hunk": "@@ -0,0 +1,58 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <signet.h>\n+\n+#include <consensus/merkle.h>\n+#include <consensus/params.h>\n+#include <hash.h>\n+#include <primitives/block.h>\n+#include <script/interpreter.h>\n+#include <script/standard.h>        // MANDATORY_SCRIPT_VERIFY_FLAGS\n+#include <util/system.h>\n+\n+bool g_signet_blocks = false;\n+CScript g_signet_blockscript;",
    "path": "src/signet.cpp",
    "position": 15,
    "original_position": 16,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "3022803f33ced9853b6a5e264d2d917db95f3016",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It can, but it would be wasteful; see detached comment.",
    "created_at": "2019-08-23T04:59:24Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316974675",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316974675"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316974675"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316974675/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 15,
    "original_line": 15,
    "side": "RIGHT",
    "in_reply_to_id": 316719229
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316974754",
    "pull_request_review_id": 278796673,
    "id": 316974754,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNjk3NDc1NA==",
    "diff_hunk": "@@ -160,6 +161,12 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIn\n         result.pushKV(\"previousblockhash\", blockindex->pprev->GetBlockHash().GetHex());\n     if (pnext)\n         result.pushKV(\"nextblockhash\", pnext->GetBlockHash().GetHex());\n+    if (g_signet_blocks) {\n+        std::vector<uint8_t> signet_commitment;\n+        if (block.GetWitnessCommitmentSection(SIGNET_HEADER, signet_commitment)) {\n+            result.pushKV(\"signet-solution\", HexStr(signet_commitment));",
    "path": "src/rpc/blockchain.cpp",
    "position": 15,
    "original_position": 15,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "911924404731fedb605057c64e8de84c6c706fea",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "True! Adding.",
    "created_at": "2019-08-23T04:59:52Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316974754",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316974754"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r316974754"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/316974754/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 174,
    "original_line": 174,
    "side": "RIGHT",
    "in_reply_to_id": 316723055
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321978663",
    "pull_request_review_id": 285182650,
    "id": 321978663,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTk3ODY2Mw==",
    "diff_hunk": "@@ -948,6 +964,107 @@ static UniValue estimaterawfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+//\n+// signet\n+//\n+\n+UniValue getnewblockhex(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"getnewblockhex\",\n+        \"\\nGets hex representation of a proposed, unmined new signet block.\\n\",\n+        {\n+            {\"coinbase_destination\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Pay-out destination, as an address or a custom coinbase script\"},\n+        },\n+        RPCResult{\n+            \"blockhex      (hex) The block hex\\n\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getnewblockhex\", \"bc1qkallealmkdwwyuc2tmf5c6hzmlaujq6jl38hpe\")\n+        }\n+    }.Check(request);\n+\n+    if (!Params().GetConsensus().signet_blocks) {\n+        throw std::runtime_error(\"getnewblockhex can only be used with signet networks\");\n+    }\n+\n+    CScript coinbase_script;\n+    auto str = request.params[0].get_str();\n+    if (IsValidDestinationString(str)) {\n+        auto dest = DecodeDestination(str);\n+        coinbase_script = GetScriptForDestination(dest);\n+    } else {\n+        util::insert(coinbase_script, ParseHexV(str, \"coinbase_script\"));\n+    }\n+\n+    auto block = BlockAssembler(Params()).CreateNewBlock(coinbase_script)->block;\n+    unsigned int extra_nonce = 0;\n+    // we bump stuff to bop stuff, or merkle root will be 0, etc etc etc etc\n+    {\n+        LOCK(cs_main);\n+        IncrementExtraNonce(&block, ::ChainActive().Tip(), extra_nonce);\n+    }\n+\n+    CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION);\n+    ssBlock << block;\n+\n+    return HexStr(ssBlock.begin(), ssBlock.end());\n+}\n+\n+static UniValue grindblock(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"grindblock\",\n+        \"\\nGrind the given signet block to find valid proof of work\\n\"\n+        \"May fail if it reaches maxtries attempts.\\n\",\n+        {\n+            {\"blockhex\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The block data, or a script challenge, for new Signet networks\"},\n+            {\"maxtries\", RPCArg::Type::NUM, /* default */ \"1000000\", \"How many iterations to try.\"},\n+        },\n+        {\n+            RPCResult{\"for block data\",\n+                \"blockhash     (hex) resulting block hash, or null if none was found\\n\"\n+            },\n+            RPCResult{\"for script challenge\",\n+                \"nonce         (number) resulting nonce value which satisfies the proof of work requirement\"\n+            },\n+        },\n+        RPCExamples{\n+            \"\\nGrind a block with hex $blockhex\\n\"\n+            + HelpExampleCli(\"grindblock\", \"$blockhex\")\n+            + \"\\nCreate a new signet network with challenge 512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\\n\"\n+            + HelpExampleCli(\"grindblock\", \"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\")\n+        },\n+    }.Check(request);\n+\n+    bool grinding_nonce = false;\n+    CBlock block;\n+    if (DecodeHexBlk(block, request.params[0].get_str())) {\n+        if (!Params().GetConsensus().signet_blocks) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Grinding blocks is only possible in a signet network; if you want to make a new Signet network, provide the challenge instead\");\n+        }\n+\n+        std::vector<uint8_t> signet_commitment;\n+        if (!block.GetWitnessCommitmentSection(SIGNET_HEADER, signet_commitment)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Block has no signet commitment; please sign it first\");\n+        }\n+    } else {\n+        auto bin = ParseHexV(request.params[0], \"challenge\");\n+        block = CreateSignetGenesisBlock(CScript(bin.begin(), bin.end()));",
    "path": "src/rpc/mining.cpp",
    "position": null,
    "original_position": 166,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "b3896d51c246efe99853d4a51bddc43010c2c035",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why do we need to mine the genesis block, isn't it easier to just not validate the genesis block beyond its hash defined in chainparams?\r\n",
    "created_at": "2019-09-07T18:18:09Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r321978663",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321978663"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r321978663"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321978663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1100,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321981871",
    "pull_request_review_id": 285186156,
    "id": 321981871,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTk4MTg3MQ==",
    "diff_hunk": "@@ -265,20 +265,27 @@ class SigNetParams : public CChainParams {\n         uint32_t genesis_nonce = 0;\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n-        }\n-        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n-        if (args.IsArgSet(\"-signet_genesisnonce\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            genesis_nonce = 621297;\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (!args.IsArgSet(\"-signet_blockscript\")) {",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "10fac77f4923c5a8095db581b594ca65556bb224",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This will never trigger as it has already been checked and handled. It can be removed.",
    "created_at": "2019-09-07T20:07:44Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r321981871",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321981871"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r321981871"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321981871/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 275,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321981901",
    "pull_request_review_id": 285186200,
    "id": 321981901,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTk4MTkwMQ==",
    "diff_hunk": "@@ -265,20 +265,27 @@ class SigNetParams : public CChainParams {\n         uint32_t genesis_nonce = 0;\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n-        }\n-        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n-        if (args.IsArgSet(\"-signet_genesisnonce\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            genesis_nonce = 621297;\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (!args.IsArgSet(\"-signet_blockscript\")) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n+            }\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {",
    "path": "src/chainparams.cpp",
    "position": 46,
    "original_position": 21,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "10fac77f4923c5a8095db581b594ca65556bb224",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why not just get the arg as a string?",
    "created_at": "2019-09-07T20:08:41Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r321981901",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321981901"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r321981901"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321981901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 273,
    "original_line": 273,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321984085",
    "pull_request_review_id": 285188691,
    "id": 321984085,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTk4NDA4NQ==",
    "diff_hunk": "@@ -246,6 +254,89 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+        uint32_t genesis_nonce = 0;\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n+        }\n+        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+        }\n+        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+        if (args.IsArgSet(\"-signet_genesisnonce\")) {\n+            genesis_nonce = args.GetArg(\"-signet_genesisnonce\", 0);\n+        }\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        LogPrintf(\"SigNet with block script %s\\n\", gArgs.GetArgs(\"-signet_blockscript\")[0]);\n+\n+        strNetworkID = \"signet\";\n+        consensus.signet_blocks = true;",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 69,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "aef5294c8194d2cce91bcec86132fa096445f874",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can you set it to false in the others like regtest does with fPowNoRetargeting ?",
    "created_at": "2019-09-07T21:35:40Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r321984085",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321984085"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r321984085"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321984085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 291,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321992333",
    "pull_request_review_id": 285197923,
    "id": 321992333,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTk5MjMzMw==",
    "diff_hunk": "@@ -948,6 +964,107 @@ static UniValue estimaterawfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+//\n+// signet\n+//\n+\n+UniValue getnewblockhex(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"getnewblockhex\",\n+        \"\\nGets hex representation of a proposed, unmined new signet block.\\n\",\n+        {\n+            {\"coinbase_destination\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Pay-out destination, as an address or a custom coinbase script\"},\n+        },\n+        RPCResult{\n+            \"blockhex      (hex) The block hex\\n\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getnewblockhex\", \"bc1qkallealmkdwwyuc2tmf5c6hzmlaujq6jl38hpe\")\n+        }\n+    }.Check(request);\n+\n+    if (!Params().GetConsensus().signet_blocks) {\n+        throw std::runtime_error(\"getnewblockhex can only be used with signet networks\");\n+    }\n+\n+    CScript coinbase_script;\n+    auto str = request.params[0].get_str();\n+    if (IsValidDestinationString(str)) {\n+        auto dest = DecodeDestination(str);\n+        coinbase_script = GetScriptForDestination(dest);\n+    } else {\n+        util::insert(coinbase_script, ParseHexV(str, \"coinbase_script\"));\n+    }\n+\n+    auto block = BlockAssembler(Params()).CreateNewBlock(coinbase_script)->block;\n+    unsigned int extra_nonce = 0;\n+    // we bump stuff to bop stuff, or merkle root will be 0, etc etc etc etc\n+    {\n+        LOCK(cs_main);\n+        IncrementExtraNonce(&block, ::ChainActive().Tip(), extra_nonce);\n+    }\n+\n+    CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION);\n+    ssBlock << block;\n+\n+    return HexStr(ssBlock.begin(), ssBlock.end());\n+}\n+\n+static UniValue grindblock(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"grindblock\",\n+        \"\\nGrind the given signet block to find valid proof of work\\n\"\n+        \"May fail if it reaches maxtries attempts.\\n\",\n+        {\n+            {\"blockhex\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The block data, or a script challenge, for new Signet networks\"},\n+            {\"maxtries\", RPCArg::Type::NUM, /* default */ \"1000000\", \"How many iterations to try.\"},\n+        },\n+        {\n+            RPCResult{\"for block data\",\n+                \"blockhash     (hex) resulting block hash, or null if none was found\\n\"\n+            },\n+            RPCResult{\"for script challenge\",\n+                \"nonce         (number) resulting nonce value which satisfies the proof of work requirement\"\n+            },\n+        },\n+        RPCExamples{\n+            \"\\nGrind a block with hex $blockhex\\n\"\n+            + HelpExampleCli(\"grindblock\", \"$blockhex\")\n+            + \"\\nCreate a new signet network with challenge 512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\\n\"\n+            + HelpExampleCli(\"grindblock\", \"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\")\n+        },\n+    }.Check(request);\n+\n+    bool grinding_nonce = false;\n+    CBlock block;\n+    if (DecodeHexBlk(block, request.params[0].get_str())) {\n+        if (!Params().GetConsensus().signet_blocks) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Grinding blocks is only possible in a signet network; if you want to make a new Signet network, provide the challenge instead\");\n+        }\n+\n+        std::vector<uint8_t> signet_commitment;\n+        if (!block.GetWitnessCommitmentSection(SIGNET_HEADER, signet_commitment)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Block has no signet commitment; please sign it first\");\n+        }\n+    } else {\n+        auto bin = ParseHexV(request.params[0], \"challenge\");\n+        block = CreateSignetGenesisBlock(CScript(bin.begin(), bin.end()));",
    "path": "src/rpc/mining.cpp",
    "position": null,
    "original_position": 166,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "b3896d51c246efe99853d4a51bddc43010c2c035",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "https://github.com/bitcoin/bitcoin/pull/16630#issuecomment-521988316",
    "created_at": "2019-09-08T05:39:03Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r321992333",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321992333"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r321992333"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321992333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1100,
    "side": "RIGHT",
    "in_reply_to_id": 321978663
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322679080",
    "pull_request_review_id": 286068482,
    "id": 322679080,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjY3OTA4MA==",
    "diff_hunk": "@@ -265,20 +265,27 @@ class SigNetParams : public CChainParams {\n         uint32_t genesis_nonce = 0;\n \n         if (!args.IsArgSet(\"-signet_blockscript\")) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n-        }\n-        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n-            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n-        }\n-        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n-        if (args.IsArgSet(\"-signet_genesisnonce\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            genesis_nonce = 621297;\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (!args.IsArgSet(\"-signet_blockscript\")) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n+            }\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {",
    "path": "src/chainparams.cpp",
    "position": 46,
    "original_position": 21,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "10fac77f4923c5a8095db581b594ca65556bb224",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I figured it was good to check there weren't multiple blockscripts provided.",
    "created_at": "2019-09-10T11:01:43Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r322679080",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322679080"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r322679080"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322679080/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 273,
    "original_line": 273,
    "side": "RIGHT",
    "in_reply_to_id": 321981901
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322680003",
    "pull_request_review_id": 286069668,
    "id": 322680003,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjY4MDAwMw==",
    "diff_hunk": "@@ -246,6 +254,89 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+        uint32_t genesis_nonce = 0;\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript is mandatory for signet networks\", __func__));\n+        }\n+        if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+            throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+        }\n+        bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+        if (args.IsArgSet(\"-signet_genesisnonce\")) {\n+            genesis_nonce = args.GetArg(\"-signet_genesisnonce\", 0);\n+        }\n+        if (args.IsArgSet(\"-signet_seednode\")) {\n+            vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+        }\n+\n+        LogPrintf(\"SigNet with block script %s\\n\", gArgs.GetArgs(\"-signet_blockscript\")[0]);\n+\n+        strNetworkID = \"signet\";\n+        consensus.signet_blocks = true;",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 69,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "aef5294c8194d2cce91bcec86132fa096445f874",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "OK!",
    "created_at": "2019-09-10T11:04:09Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r322680003",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322680003"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r322680003"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322680003/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 291,
    "side": "RIGHT",
    "in_reply_to_id": 321984085
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322687302",
    "pull_request_review_id": 286079262,
    "id": 322687302,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjY4NzMwMg==",
    "diff_hunk": "@@ -23,6 +24,11 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
    "path": "src/chainparamsbase.cpp",
    "position": 12,
    "original_position": 12,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "93dd0a1e62b019a72657f2abd60a2afc3d0702ba",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit 93dd0a1e62b019a72657f2abd60a2afc3d0702ba:\r\n\r\nCan be removed, as this is redundant to `-chain=signet`",
    "created_at": "2019-09-10T11:23:40Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r322687302",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322687302"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r322687302"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322687302/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 27,
    "original_line": 27,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322690086",
    "pull_request_review_id": 286082863,
    "id": 322690086,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjY5MDA4Ng==",
    "diff_hunk": "@@ -23,6 +24,11 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);",
    "path": "src/chainparamsbase.cpp",
    "position": 12,
    "original_position": 12,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "93dd0a1e62b019a72657f2abd60a2afc3d0702ba",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Isn't it good to be able to do just -signet?",
    "created_at": "2019-09-10T11:31:16Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r322690086",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322690086"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r322690086"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322690086/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 27,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 322687302
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322993291",
    "pull_request_review_id": 286474092,
    "id": 322993291,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjk5MzI5MQ==",
    "diff_hunk": "@@ -7,6 +7,8 @@\n \n #include <chainparamsseeds.h>\n #include <consensus/merkle.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <signet.h>",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "ac9147c9f75f80de12148471561022d122584149",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it's only for that, right? Perhaps a small reason to put the global here instead of there.",
    "created_at": "2019-09-10T22:41:45Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r322993291",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322993291"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r322993291"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322993291/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT",
    "in_reply_to_id": 315067388
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322994160",
    "pull_request_review_id": 286475103,
    "id": 322994160,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjk5NDE2MA==",
    "diff_hunk": "@@ -38,6 +40,12 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n     return genesis;\n }\n \n+static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "93dd0a1e62b019a72657f2abd60a2afc3d0702ba",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This function is only called from the next one and can be inlined. The change in the previous one is, I think all you need for your own CreateSignetGenesisBlock, which I would also prefer at the top (or at least before SigNetParams) in case it  turns into a static function in the future.\r\nReally small nits.",
    "created_at": "2019-09-10T22:44:57Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r322994160",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322994160"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r322994160"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322994160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 43,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/323056709",
    "pull_request_review_id": 286551732,
    "id": 323056709,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMzA1NjcwOQ==",
    "diff_hunk": "@@ -38,6 +40,12 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n     return genesis;\n }\n \n+static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "93dd0a1e62b019a72657f2abd60a2afc3d0702ba",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think `CreateSignetGenesisBlock` will be static anytime soon, since it is also used in `mining.cpp` but I can definitely inline this one.",
    "created_at": "2019-09-11T04:42:27Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r323056709",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/323056709"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r323056709"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/323056709/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 43,
    "side": "RIGHT",
    "in_reply_to_id": 322994160
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/323060254",
    "pull_request_review_id": 286556165,
    "id": 323060254,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMzA2MDI1NA==",
    "diff_hunk": "@@ -171,6 +183,10 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Error: Invalid address\");\n     }\n \n+    if (g_signet_blocks) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Generating signet blocks require that you use getnewblockhex\");",
    "path": "src/rpc/mining.cpp",
    "position": 71,
    "original_position": 72,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "ac9147c9f75f80de12148471561022d122584149",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think we discussed this outside of here, but basically, you don't have the private keys associated with any addresses, so you'd have to provide those every time here. I don't think we should encourage systems that behave in that manner (\"bitcoin core does it so it must be safe\").",
    "created_at": "2019-09-11T05:04:45Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r323060254",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/323060254"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r323060254"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/323060254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 236,
    "original_line": 236,
    "side": "RIGHT",
    "in_reply_to_id": 315069923
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/323225533",
    "pull_request_review_id": 286770285,
    "id": 323225533,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMzIyNTUzMw==",
    "diff_hunk": "@@ -38,6 +40,12 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n     return genesis;\n }\n \n+static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "93dd0a1e62b019a72657f2abd60a2afc3d0702ba",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Well, it can only be static if we stop supporting grinding the genesis block because the genesis block's pow is not checked anymore and we don't need it.\r\nSo I guess it depends on the other discussion. If we end up doing that, we won't need to move the function later. But it's a very minor nit, feel free to ignore.",
    "created_at": "2019-09-11T12:59:03Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r323225533",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/323225533"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r323225533"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/323225533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 43,
    "side": "RIGHT",
    "in_reply_to_id": 322994160
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357742",
    "pull_request_review_id": 294688482,
    "id": 329357742,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTM1Nzc0Mg==",
    "diff_hunk": "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {\n+                return o;\n+            }\n+        }\n+        return -1;\n+    }\n+\n+    /**\n+     * Attempt to get the data for the section with the given header in the witness commitment of this block.\n+     *\n+     * Returns false if header was not found. The data (excluding the 4 byte header) is written into result if found.\n+     */\n+    bool GetWitnessCommitmentSection(const uint8_t header[4], std::vector<uint8_t>& result) const;\n+\n+    /**\n+     * Attempt to add or update the data for the section with the given header in the witness commitment of this block.\n+     *\n+     * This operation may fail and return false, if no witness commitment exists upon call time. Returns true on success.\n+     */\n+    bool SetWitnessCommitmentSection(const uint8_t header[4], const std::vector<uint8_t> data);",
    "path": "src/primitives/block.h",
    "position": null,
    "original_position": 41,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "f5291323b01ede310c3ceacc6719a9e4d3d1b5aa",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`data` could be const ref?",
    "created_at": "2019-09-29T15:20:19Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357742",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357742"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357742"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 156,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357747",
    "pull_request_review_id": 294688487,
    "id": 329357747,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTM1Nzc0Nw==",
    "diff_hunk": "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {\n+                return o;\n+            }\n+        }\n+        return -1;\n+    }\n+\n+    /**\n+     * Attempt to get the data for the section with the given header in the witness commitment of this block.\n+     *\n+     * Returns false if header was not found. The data (excluding the 4 byte header) is written into result if found.\n+     */\n+    bool GetWitnessCommitmentSection(const uint8_t header[4], std::vector<uint8_t>& result) const;\n+\n+    /**\n+     * Attempt to add or update the data for the section with the given header in the witness commitment of this block.\n+     *\n+     * This operation may fail and return false, if no witness commitment exists upon call time. Returns true on success.\n+     */\n+    bool SetWitnessCommitmentSection(const uint8_t header[4], const std::vector<uint8_t> data);\n+\n+    /**\n+     * The tx based equivalent of the above.\n+     */\n+    static bool SetWitnessCommitmentSection(CMutableTransaction& tx, const uint8_t header[4], const std::vector<uint8_t> data);",
    "path": "src/primitives/block.h",
    "position": null,
    "original_position": 46,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "f5291323b01ede310c3ceacc6719a9e4d3d1b5aa",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`data` could be const ref?",
    "created_at": "2019-09-29T15:20:30Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357747",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357747"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357747"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357747/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 161,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357763",
    "pull_request_review_id": 294688502,
    "id": 329357763,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTM1Nzc2Mw==",
    "diff_hunk": "@@ -246,13 +266,101 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    SigNetParams(const ArgsManager& args) {",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 88,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "f5291323b01ede310c3ceacc6719a9e4d3d1b5aa",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Single parameter ctor could be `explicit`?",
    "created_at": "2019-09-29T15:21:00Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357763",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357763"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357763"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357763/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 274,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357777",
    "pull_request_review_id": 294688520,
    "id": 329357777,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTM1Nzc3Nw==",
    "diff_hunk": "@@ -29,3 +29,65 @@ std::string CBlock::ToString() const\n     }\n     return s.str();\n }\n+\n+bool CBlock::GetWitnessCommitmentSection(const uint8_t header[4], std::vector<uint8_t>& result) const\n+{\n+    int cidx = GetWitnessCommitmentIndex();\n+    if (cidx == -1) return false;\n+    auto script = vtx.at(0)->vout.at(cidx).scriptPubKey;\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    ++pc; // move beyond initial OP_RETURN\n+    while (script.GetOp(pc, opcode, result)) {\n+        if (result.size() > 3 && !memcmp(result.data(), header, 4)) {\n+            result.erase(result.begin(), result.begin() + 4);\n+            return true;\n+        }\n+    }\n+    result.clear();\n+    return false;\n+}\n+\n+bool CBlock::SetWitnessCommitmentSection(CMutableTransaction& mtx, const uint8_t header[4], const std::vector<uint8_t> data)",
    "path": "src/primitives/block.cpp",
    "position": null,
    "original_position": 23,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "f5291323b01ede310c3ceacc6719a9e4d3d1b5aa",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`data` const ref?",
    "created_at": "2019-09-29T15:21:22Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357777",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357777"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357777"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357777/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 51,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357786",
    "pull_request_review_id": 294688532,
    "id": 329357786,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTM1Nzc4Ng==",
    "diff_hunk": "@@ -29,3 +29,65 @@ std::string CBlock::ToString() const\n     }\n     return s.str();\n }\n+\n+bool CBlock::GetWitnessCommitmentSection(const uint8_t header[4], std::vector<uint8_t>& result) const\n+{\n+    int cidx = GetWitnessCommitmentIndex();\n+    if (cidx == -1) return false;\n+    auto script = vtx.at(0)->vout.at(cidx).scriptPubKey;\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    ++pc; // move beyond initial OP_RETURN\n+    while (script.GetOp(pc, opcode, result)) {\n+        if (result.size() > 3 && !memcmp(result.data(), header, 4)) {\n+            result.erase(result.begin(), result.begin() + 4);\n+            return true;\n+        }\n+    }\n+    result.clear();\n+    return false;\n+}\n+\n+bool CBlock::SetWitnessCommitmentSection(CMutableTransaction& mtx, const uint8_t header[4], const std::vector<uint8_t> data)\n+{\n+    int cidx = GetWitnessCommitmentIndex(mtx);\n+    if (cidx == -1) return false;\n+\n+    CScript result;\n+    std::vector<uint8_t> pushdata;\n+    auto script = mtx.vout[cidx].scriptPubKey;\n+    opcodetype opcode;\n+    CScript::const_iterator pc = script.begin();\n+    result.push_back(*pc++);\n+    bool found = false;\n+    while (script.GetOp(pc, opcode, pushdata)) {\n+        if (pushdata.size() > 0) {\n+            if (pushdata.size() > 3 && !memcmp(pushdata.data(), header, 4)) {\n+                // replace pushdata\n+                found = true;\n+                pushdata.erase(pushdata.begin() + 4, pushdata.end());\n+                pushdata.insert(pushdata.end(), data.begin(), data.end());\n+            }\n+            result << pushdata;\n+        } else {\n+            result << opcode;\n+        }\n+    }\n+    if (!found) {\n+        // append section as it did not exist\n+        pushdata.clear();\n+        pushdata.insert(pushdata.end(), header, header + 4);\n+        pushdata.insert(pushdata.end(), data.begin(), data.end());\n+        result << pushdata;\n+    }\n+    mtx.vout[cidx].scriptPubKey = result;\n+    return true;\n+}\n+\n+bool CBlock::SetWitnessCommitmentSection(const uint8_t header[4], const std::vector<uint8_t> data)",
    "path": "src/primitives/block.cpp",
    "position": null,
    "original_position": 59,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "f5291323b01ede310c3ceacc6719a9e4d3d1b5aa",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Same here :)",
    "created_at": "2019-09-29T15:21:35Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357786",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357786"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357786"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 87,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357827",
    "pull_request_review_id": 294688561,
    "id": 329357827,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTM1NzgyNw==",
    "diff_hunk": "@@ -948,6 +964,107 @@ static UniValue estimaterawfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+//\n+// signet\n+//\n+\n+UniValue getnewblockhex(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"getnewblockhex\",\n+        \"\\nGets hex representation of a proposed, unmined new signet block.\\n\",\n+        {\n+            {\"coinbase_destination\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Pay-out destination, as an address or a custom coinbase script\"},\n+        },\n+        RPCResult{\n+            \"blockhex      (hex) The block hex\\n\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getnewblockhex\", \"bc1qkallealmkdwwyuc2tmf5c6hzmlaujq6jl38hpe\")\n+        }\n+    }.Check(request);\n+\n+    if (!Params().GetConsensus().signet_blocks) {\n+        throw std::runtime_error(\"getnewblockhex can only be used with signet networks\");\n+    }\n+\n+    CScript coinbase_script;\n+    auto str = request.params[0].get_str();\n+    if (IsValidDestinationString(str)) {\n+        auto dest = DecodeDestination(str);\n+        coinbase_script = GetScriptForDestination(dest);\n+    } else {\n+        util::insert(coinbase_script, ParseHexV(str, \"coinbase_script\"));\n+    }\n+\n+    auto block = BlockAssembler(Params()).CreateNewBlock(coinbase_script)->block;\n+    unsigned int extra_nonce = 0;",
    "path": "src/rpc/mining.cpp",
    "position": 116,
    "original_position": 115,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "f5291323b01ede310c3ceacc6719a9e4d3d1b5aa",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The scope for `extra_nonce` could be reduced.",
    "created_at": "2019-09-29T15:22:16Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357827",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357827"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357827"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357827/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1074,
    "original_line": 1074,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357838",
    "pull_request_review_id": 294688576,
    "id": 329357838,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTM1NzgzOA==",
    "diff_hunk": "@@ -4160,6 +4162,80 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n     return result;\n }\n \n+void SignBlockWithWallet(CBlock& block, CWallet* const pwallet)\n+{\n+    SignatureData solution_in;\n+\n+    std::vector<uint8_t> signet_commitment;\n+    if (block.GetWitnessCommitmentSection(SIGNET_HEADER, signet_commitment) && signet_commitment.size() > 8) {\n+        solution_in = SignatureData(CScript(signet_commitment.begin() + 8, signet_commitment.end()));\n+    }\n+\n+    auto signet_hash = GetSignetHash(block);\n+\n+    CScript blockscript(g_signet_blockscript.begin(), g_signet_blockscript.end());\n+\n+    std::vector<uint8_t> sigdata;",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 33,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "f5291323b01ede310c3ceacc6719a9e4d3d1b5aa",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`sigdata` not used? :)",
    "created_at": "2019-09-29T15:22:31Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357838",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357838"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357838"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357838/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4178,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357959",
    "pull_request_review_id": 294688709,
    "id": 329357959,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTM1Nzk1OQ==",
    "diff_hunk": "@@ -0,0 +1,58 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import sys\n+import os\n+import argparse\n+\n+# dirty hack but makes CBlock etc available\n+sys.path.append('/'.join(os.getcwd().split('/')[:-2]) + '/test/functional')\n+\n+from test_framework.messages import (\n+    CBlock,\n+    CTransaction,\n+    FromHex,\n+    ToHex,\n+)\n+\n+from test_framework.blocktools import add_witness_commitment\n+\n+def main():\n+\n+    # Parse arguments and pass through unrecognised args\n+    parser = argparse.ArgumentParser(add_help=False,\n+                                        usage='%(prog)s [addtxtoblock options] [bitcoin block file] [tx file] [fee]',\n+                                        description=__doc__,\n+                                        epilog='''Help text and arguments:''',\n+                                        formatter_class=argparse.RawTextHelpFormatter)\n+    # parser.add_argument('--filter', help='filter scripts to run by regular expression')\n+    args, unknown_args = parser.parse_known_args()",
    "path": "contrib/signet/addtxtoblock.py",
    "position": null,
    "original_position": 31,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "f5291323b01ede310c3ceacc6719a9e4d3d1b5aa",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Idiomatic alternative which signals that `args` is intentionally unused: `_, unknown_args = parser.parse_known_args()` :)",
    "created_at": "2019-09-29T15:25:36Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357959",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357959"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357959"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357959/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 31,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357989",
    "pull_request_review_id": 294688735,
    "id": 329357989,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTM1Nzk4OQ==",
    "diff_hunk": "@@ -0,0 +1,95 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test signet mining RPCs\n+\n+- getmininginfo\n+- getblocktemplate proposal mode\n+- submitblock\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import (\n+    create_coinbase,\n+)\n+from test_framework.messages import (\n+    CBlock,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+private_key  = \"ZFNp4W4HSatHDc4zsheMsDWgUg2uiB5PtnY2Y2hUCNCkQiF81KyV\"\n+pubkey       = \"02c72b24ae2ee333f2da24aea66ce4338c01db8f26d0cc96f586d77edcb5238a4f\"\n+address      = \"sb1qghzjzc0jvkjvvvymxnadmjjpu2tywmvagduwfj\"\n+blockscript  = \"5121\" + pubkey + \"51ae\" # 1-of-1 multisig\n+genesisnonce = 405557\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate(template_request={'data': block.serialize().hex(), 'mode': 'proposal', 'rules': ['segwit']})\n+    assert_equal(rsp, expect)\n+\n+\n+class SigMiningTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+        shared_args = [\"-signet_blockscript=\" + blockscript, \"-signet_genesisnonce=\" + str(genesisnonce), \"-signet_seednode=localhost:1234\"]\n+        self.extra_args = [shared_args, shared_args]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def generate(self, node, count):\n+        for i in range(count):",
    "path": "test/functional/mining_signet.py",
    "position": null,
    "original_position": 49,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "f5291323b01ede310c3ceacc6719a9e4d3d1b5aa",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: Same here: could use `_`.",
    "created_at": "2019-09-29T15:26:20Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357989",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357989"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329357989"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329357989/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 49,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329358007",
    "pull_request_review_id": 294688768,
    "id": 329358007,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTM1ODAwNw==",
    "diff_hunk": "@@ -0,0 +1,95 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test signet mining RPCs\n+\n+- getmininginfo\n+- getblocktemplate proposal mode\n+- submitblock\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import (\n+    create_coinbase,\n+)\n+from test_framework.messages import (\n+    CBlock,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+private_key  = \"ZFNp4W4HSatHDc4zsheMsDWgUg2uiB5PtnY2Y2hUCNCkQiF81KyV\"\n+pubkey       = \"02c72b24ae2ee333f2da24aea66ce4338c01db8f26d0cc96f586d77edcb5238a4f\"\n+address      = \"sb1qghzjzc0jvkjvvvymxnadmjjpu2tywmvagduwfj\"\n+blockscript  = \"5121\" + pubkey + \"51ae\" # 1-of-1 multisig\n+genesisnonce = 405557\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate(template_request={'data': block.serialize().hex(), 'mode': 'proposal', 'rules': ['segwit']})\n+    assert_equal(rsp, expect)\n+\n+\n+class SigMiningTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+        shared_args = [\"-signet_blockscript=\" + blockscript, \"-signet_genesisnonce=\" + str(genesisnonce), \"-signet_seednode=localhost:1234\"]\n+        self.extra_args = [shared_args, shared_args]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def generate(self, node, count):",
    "path": "test/functional/mining_signet.py",
    "position": null,
    "original_position": 48,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "f5291323b01ede310c3ceacc6719a9e4d3d1b5aa",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: This could be a function instead of a method.",
    "created_at": "2019-09-29T15:27:09Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329358007",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329358007"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329358007"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329358007/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 48,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329358041",
    "pull_request_review_id": 294688812,
    "id": 329358041,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTM1ODA0MQ==",
    "diff_hunk": "@@ -0,0 +1,95 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test signet mining RPCs\n+\n+- getmininginfo\n+- getblocktemplate proposal mode\n+- submitblock\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import (\n+    create_coinbase,\n+)\n+from test_framework.messages import (\n+    CBlock,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+private_key  = \"ZFNp4W4HSatHDc4zsheMsDWgUg2uiB5PtnY2Y2hUCNCkQiF81KyV\"\n+pubkey       = \"02c72b24ae2ee333f2da24aea66ce4338c01db8f26d0cc96f586d77edcb5238a4f\"\n+address      = \"sb1qghzjzc0jvkjvvvymxnadmjjpu2tywmvagduwfj\"\n+blockscript  = \"5121\" + pubkey + \"51ae\" # 1-of-1 multisig\n+genesisnonce = 405557\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate(template_request={'data': block.serialize().hex(), 'mode': 'proposal', 'rules': ['segwit']})\n+    assert_equal(rsp, expect)\n+\n+\n+class SigMiningTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+        shared_args = [\"-signet_blockscript=\" + blockscript, \"-signet_genesisnonce=\" + str(genesisnonce), \"-signet_seednode=localhost:1234\"]\n+        self.extra_args = [shared_args, shared_args]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def generate(self, node, count):\n+        for i in range(count):\n+            addr = node.getnewaddress()\n+            block = node.getnewblockhex(addr)\n+            signed = node.signblock(block)\n+            node.grindblock(signed)\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        # give the privkey to node 1 so it can sign\n+        node.importprivkey(private_key)\n+        self.log.info('Imported network private key')\n+        self.log.info('address: %s, privkey: %s' % (address, node.dumpprivkey(address)))",
    "path": "test/functional/mining_signet.py",
    "position": null,
    "original_position": 61,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "f5291323b01ede310c3ceacc6719a9e4d3d1b5aa",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Instead of string format arguments use logging function parameters when using `self.log.info` :)",
    "created_at": "2019-09-29T15:28:15Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329358041",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329358041"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329358041"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329358041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 61,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329856560",
    "pull_request_review_id": 295338954,
    "id": 329856560,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTg1NjU2MA==",
    "diff_hunk": "@@ -38,6 +40,12 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n     return genesis;\n }\n \n+static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "93dd0a1e62b019a72657f2abd60a2afc3d0702ba",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good point. If we end up reversing the grinding approach I will try to remember to address this.",
    "created_at": "2019-10-01T02:14:40Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329856560",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329856560"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329856560"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329856560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 43,
    "side": "RIGHT",
    "in_reply_to_id": 322994160
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329856859",
    "pull_request_review_id": 295339258,
    "id": 329856859,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTg1Njg1OQ==",
    "diff_hunk": "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {\n+        for (int64_t o = coinbase.vout.size() - 1; o > -1; --o) {\n+            auto vospk = coinbase.vout[o].scriptPubKey;\n+            if (vospk.size() >= 38 && vospk[0] == OP_RETURN && vospk[1] == 0x24 && vospk[2] == 0xaa && vospk[3] == 0x21 && vospk[4] == 0xa9 && vospk[5] == 0xed) {\n+                return o;\n+            }\n+        }\n+        return -1;\n+    }\n+\n+    /**\n+     * Attempt to get the data for the section with the given header in the witness commitment of this block.\n+     *\n+     * Returns false if header was not found. The data (excluding the 4 byte header) is written into result if found.\n+     */\n+    bool GetWitnessCommitmentSection(const uint8_t header[4], std::vector<uint8_t>& result) const;\n+\n+    /**\n+     * Attempt to add or update the data for the section with the given header in the witness commitment of this block.\n+     *\n+     * This operation may fail and return false, if no witness commitment exists upon call time. Returns true on success.\n+     */\n+    bool SetWitnessCommitmentSection(const uint8_t header[4], const std::vector<uint8_t> data);",
    "path": "src/primitives/block.h",
    "position": null,
    "original_position": 41,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "f5291323b01ede310c3ceacc6719a9e4d3d1b5aa",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think I meant to do that, yeah. Thanks, fixed!",
    "created_at": "2019-10-01T02:16:26Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329856859",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329856859"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329856859"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329856859/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 156,
    "side": "RIGHT",
    "in_reply_to_id": 329357742
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329858936",
    "pull_request_review_id": 295342203,
    "id": 329858936,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTg1ODkzNg==",
    "diff_hunk": "@@ -948,6 +964,107 @@ static UniValue estimaterawfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+//\n+// signet\n+//\n+\n+UniValue getnewblockhex(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"getnewblockhex\",\n+        \"\\nGets hex representation of a proposed, unmined new signet block.\\n\",\n+        {\n+            {\"coinbase_destination\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Pay-out destination, as an address or a custom coinbase script\"},\n+        },\n+        RPCResult{\n+            \"blockhex      (hex) The block hex\\n\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getnewblockhex\", \"bc1qkallealmkdwwyuc2tmf5c6hzmlaujq6jl38hpe\")\n+        }\n+    }.Check(request);\n+\n+    if (!Params().GetConsensus().signet_blocks) {\n+        throw std::runtime_error(\"getnewblockhex can only be used with signet networks\");\n+    }\n+\n+    CScript coinbase_script;\n+    auto str = request.params[0].get_str();\n+    if (IsValidDestinationString(str)) {\n+        auto dest = DecodeDestination(str);\n+        coinbase_script = GetScriptForDestination(dest);\n+    } else {\n+        util::insert(coinbase_script, ParseHexV(str, \"coinbase_script\"));\n+    }\n+\n+    auto block = BlockAssembler(Params()).CreateNewBlock(coinbase_script)->block;\n+    unsigned int extra_nonce = 0;",
    "path": "src/rpc/mining.cpp",
    "position": 116,
    "original_position": 115,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "f5291323b01ede310c3ceacc6719a9e4d3d1b5aa",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It doesn't feel cleaner to put it inside the lock brackets as those are meant to do the lock, not limit scope.",
    "created_at": "2019-10-01T02:31:32Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329858936",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329858936"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329858936"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329858936/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1074,
    "original_line": 1074,
    "side": "RIGHT",
    "in_reply_to_id": 329357827
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329859849",
    "pull_request_review_id": 295343530,
    "id": 329859849,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTg1OTg0OQ==",
    "diff_hunk": "@@ -0,0 +1,95 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test signet mining RPCs\n+\n+- getmininginfo\n+- getblocktemplate proposal mode\n+- submitblock\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.blocktools import (\n+    create_coinbase,\n+)\n+from test_framework.messages import (\n+    CBlock,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+private_key  = \"ZFNp4W4HSatHDc4zsheMsDWgUg2uiB5PtnY2Y2hUCNCkQiF81KyV\"\n+pubkey       = \"02c72b24ae2ee333f2da24aea66ce4338c01db8f26d0cc96f586d77edcb5238a4f\"\n+address      = \"sb1qghzjzc0jvkjvvvymxnadmjjpu2tywmvagduwfj\"\n+blockscript  = \"5121\" + pubkey + \"51ae\" # 1-of-1 multisig\n+genesisnonce = 405557\n+\n+def assert_template(node, block, expect, rehash=True):\n+    if rehash:\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+    rsp = node.getblocktemplate(template_request={'data': block.serialize().hex(), 'mode': 'proposal', 'rules': ['segwit']})\n+    assert_equal(rsp, expect)\n+\n+\n+class SigMiningTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.chain = \"signet\"\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+        shared_args = [\"-signet_blockscript=\" + blockscript, \"-signet_genesisnonce=\" + str(genesisnonce), \"-signet_seednode=localhost:1234\"]\n+        self.extra_args = [shared_args, shared_args]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def generate(self, node, count):\n+        for i in range(count):\n+            addr = node.getnewaddress()\n+            block = node.getnewblockhex(addr)\n+            signed = node.signblock(block)\n+            node.grindblock(signed)\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        # give the privkey to node 1 so it can sign\n+        node.importprivkey(private_key)\n+        self.log.info('Imported network private key')\n+        self.log.info('address: %s, privkey: %s' % (address, node.dumpprivkey(address)))",
    "path": "test/functional/mining_signet.py",
    "position": null,
    "original_position": 61,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "f5291323b01ede310c3ceacc6719a9e4d3d1b5aa",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You mean ` % (...)` \u2192 `, ...`? OK.",
    "created_at": "2019-10-01T02:38:56Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329859849",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329859849"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329859849"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329859849/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 61,
    "side": "RIGHT",
    "in_reply_to_id": 329358041
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329953129",
    "pull_request_review_id": 295464771,
    "id": 329953129,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyOTk1MzEyOQ==",
    "diff_hunk": "@@ -38,6 +40,12 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n     return genesis;\n }\n \n+static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "93dd0a1e62b019a72657f2abd60a2afc3d0702ba",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "One part about skipping genesis PoW that shouldn't be forgotten is that this doesn't just mean code changes in Bitcoin Core, but in every other software that checks the blockchain POW, e.g. btcd.",
    "created_at": "2019-10-01T09:11:26Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329953129",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329953129"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r329953129"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/329953129/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 43,
    "side": "RIGHT",
    "in_reply_to_id": 322994160
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332726189",
    "pull_request_review_id": 299040652,
    "id": 332726189,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjcyNjE4OQ==",
    "diff_hunk": "@@ -38,6 +40,12 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n     return genesis;\n }\n \n+static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "93dd0a1e62b019a72657f2abd60a2afc3d0702ba",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "well, they will need changes to support chains whose genesis block doesn't passs pow anyway, but yeah",
    "created_at": "2019-10-08T20:49:12Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r332726189",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332726189"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r332726189"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332726189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 43,
    "side": "RIGHT",
    "in_reply_to_id": 322994160
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332730947",
    "pull_request_review_id": 299046772,
    "id": 332730947,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjczMDk0Nw==",
    "diff_hunk": "@@ -38,6 +40,12 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n     return genesis;\n }\n \n+static inline CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "c584956573b553f33771b7d853e2ccf8f033d29a",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is only called from the next CreateGenesisBlock, there's no need for a new function.\r\n",
    "created_at": "2019-10-08T21:00:31Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r332730947",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332730947"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r332730947"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332730947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 43,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332733307",
    "pull_request_review_id": 299049705,
    "id": 332733307,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjczMzMwNw==",
    "diff_hunk": "@@ -49,20 +57,31 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n  *     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n  *   vMerkleTree: 4a5e1e\n  */\n-static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+static inline CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n     const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n     const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n }\n \n+CBlock CreateSignetGenesisBlock(const CScript& block_script, uint32_t block_nonce)\n+{\n+    CHashWriter h(SER_DISK, 0);\n+    h << block_script;",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "c584956573b553f33771b7d853e2ccf8f033d29a",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sorry to reiterate this. If it was answered elsewhere I missed it.\r\nCould we add the following?\r\n\r\n```\r\n    h << strNetworkID;\r\n```\r\n\r\nI know it requires a network restart for the current signet network, but I think that should be alright to restart the network until the PR is merged.\r\nEven if we keep mining genesis blocks, this should make it easier to create a new signet chain with a different genesis block hash, even if the -signet_blockscript is the same.\r\n\r\nAlso, see https://github.com/bitcoin/bitcoin/pull/17037 for more context.",
    "created_at": "2019-10-08T21:05:56Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r332733307",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332733307"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r332733307"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332733307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 70,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332738312",
    "pull_request_review_id": 299056280,
    "id": 332738312,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjczODMxMg==",
    "diff_hunk": "@@ -23,6 +24,12 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_genesisnonce\", \"Nonce value for use in genesis block to satisfy proof of work requirement\", ArgsManager::ALLOW_INT, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_enforcescript\", \"Blocks must satisfy the given script to be considered valid (this replaces -signet_blockscript, and is used for opt-in-reorg mode)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
    "path": "src/chainparamsbase.cpp",
    "position": 15,
    "original_position": 17,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "c584956573b553f33771b7d853e2ccf8f033d29a",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The hrp and seeds arguments aren't signet specific necessarily. You could drop the 'signet' prefix and make them configurable for regtest too.\r\nSee https://github.com/bitcoin/bitcoin/pull/17037 for potential synergies.\r\nYou could also make SigNetParams extend CRegTestParams for more code reusability.\r\n",
    "created_at": "2019-10-08T21:18:36Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r332738312",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332738312"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r332738312"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332738312/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 30,
    "original_line": 30,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332738891",
    "pull_request_review_id": 299057047,
    "id": 332738891,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjczODg5MQ==",
    "diff_hunk": "@@ -19,7 +19,8 @@ static const struct {\n } network_styles[] = {\n     {\"main\", QAPP_APP_NAME_DEFAULT, 0, 0},\n     {\"test\", QAPP_APP_NAME_TESTNET, 70, 30},\n-    {\"regtest\", QAPP_APP_NAME_REGTEST, 160, 30}\n+    {\"regtest\", QAPP_APP_NAME_REGTEST, 160, 30},",
    "path": "src/qt/networkstyle.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "c584956573b553f33771b7d853e2ccf8f033d29a",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I forgot this ```,```, this +1-1 is my fault. My apologies.",
    "created_at": "2019-10-08T21:20:06Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r332738891",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332738891"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r332738891"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332738891/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 22,
    "original_line": 22,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332740382",
    "pull_request_review_id": 299058982,
    "id": 332740382,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjc0MDM4Mg==",
    "diff_hunk": "@@ -948,6 +964,107 @@ static UniValue estimaterawfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+//\n+// signet\n+//\n+\n+UniValue getnewblockhex(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"getnewblockhex\",\n+        \"\\nGets hex representation of a proposed, unmined new signet block.\\n\",\n+        {\n+            {\"coinbase_destination\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Pay-out destination, as an address or a custom coinbase script\"},\n+        },\n+        RPCResult{\n+            \"blockhex      (hex) The block hex\\n\"\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getnewblockhex\", \"bc1qkallealmkdwwyuc2tmf5c6hzmlaujq6jl38hpe\")\n+        }\n+    }.Check(request);\n+\n+    if (!Params().GetConsensus().signet_blocks) {\n+        throw std::runtime_error(\"getnewblockhex can only be used with signet networks\");\n+    }\n+\n+    CScript coinbase_script;\n+    auto str = request.params[0].get_str();\n+    if (IsValidDestinationString(str)) {\n+        auto dest = DecodeDestination(str);\n+        coinbase_script = GetScriptForDestination(dest);\n+    } else {\n+        util::insert(coinbase_script, ParseHexV(str, \"coinbase_script\"));\n+    }\n+\n+    auto block = BlockAssembler(Params()).CreateNewBlock(coinbase_script)->block;\n+    unsigned int extra_nonce = 0;\n+    // we bump stuff to bop stuff, or merkle root will be 0, etc etc etc etc\n+    {\n+        LOCK(cs_main);\n+        IncrementExtraNonce(&block, ::ChainActive().Tip(), extra_nonce);\n+    }\n+\n+    CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION);\n+    ssBlock << block;\n+\n+    return HexStr(ssBlock.begin(), ssBlock.end());\n+}\n+\n+static UniValue grindblock(const JSONRPCRequest& request)\n+{\n+    RPCHelpMan{\"grindblock\",\n+        \"\\nGrind the given signet block to find valid proof of work\\n\"\n+        \"May fail if it reaches maxtries attempts.\\n\",\n+        {\n+            {\"blockhex\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The block data, or a script challenge, for new Signet networks\"},\n+            {\"maxtries\", RPCArg::Type::NUM, /* default */ \"1000000\", \"How many iterations to try.\"},\n+        },\n+        {\n+            RPCResult{\"for block data\",\n+                \"blockhash     (hex) resulting block hash, or null if none was found\\n\"\n+            },\n+            RPCResult{\"for script challenge\",\n+                \"nonce         (number) resulting nonce value which satisfies the proof of work requirement\"\n+            },\n+        },\n+        RPCExamples{\n+            \"\\nGrind a block with hex $blockhex\\n\"\n+            + HelpExampleCli(\"grindblock\", \"$blockhex\")\n+            + \"\\nCreate a new signet network with challenge 512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\\n\"\n+            + HelpExampleCli(\"grindblock\", \"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\")\n+        },\n+    }.Check(request);\n+\n+    bool grinding_nonce = false;\n+    CBlock block;\n+    if (DecodeHexBlk(block, request.params[0].get_str())) {\n+        if (!Params().GetConsensus().signet_blocks) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Grinding blocks is only possible in a signet network; if you want to make a new Signet network, provide the challenge instead\");\n+        }\n+\n+        std::vector<uint8_t> signet_commitment;\n+        if (!block.GetWitnessCommitmentSection(SIGNET_HEADER, signet_commitment)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Block has no signet commitment; please sign it first\");\n+        }\n+    } else {\n+        auto bin = ParseHexV(request.params[0], \"challenge\");\n+        block = CreateSignetGenesisBlock(CScript(bin.begin(), bin.end()));",
    "path": "src/rpc/mining.cpp",
    "position": null,
    "original_position": 166,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "b3896d51c246efe99853d4a51bddc43010c2c035",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "With https://github.com/bitcoin/bitcoin/pull/17037 we wouldn't need to grind the genesis block, and it is smaller than #8994 .",
    "created_at": "2019-10-08T21:24:06Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r332740382",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332740382"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r332740382"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332740382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1100,
    "side": "RIGHT",
    "in_reply_to_id": 321978663
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332784076",
    "pull_request_review_id": 299113535,
    "id": 332784076,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMjc4NDA3Ng==",
    "diff_hunk": "@@ -248,13 +268,101 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+        uint32_t genesis_nonce = 0;\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            genesis_nonce = 621297;\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+            genesis_nonce = args.GetArg(\"-signet_genesisnonce\", 0);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }\n+\n+            LogPrintf(\"SigNet with block script %s\\n\", gArgs.GetArgs(\"-signet_blockscript\")[0]);\n+        }\n+\n+        strNetworkID = \"signet\";\n+        g_signet_blockscript = CScript(bin.begin(), bin.end());\n+        consensus.signet_blocks = true;\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 0;\n+        consensus.SegwitHeight = 0;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        pchMessageStart[0] = 0xf0;\n+        pchMessageStart[1] = 0xc7;\n+        pchMessageStart[2] = 0x70;\n+        pchMessageStart[3] = 0x6a;\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+\n+        genesis = CreateSignetGenesisBlock(g_signet_blockscript, genesis_nonce);\n+        consensus.hashGenesisBlock = genesis.GetHash();",
    "path": "src/chainparams.cpp",
    "position": 88,
    "original_position": 141,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "c584956573b553f33771b7d853e2ccf8f033d29a",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "why not add the following here?\r\n```\r\n        consensus.hashGenesisBlock = genesis.GetHash();\r\n        checkpointData = {\r\n            {\r\n                {0, consensus.hashGenesisBlock},\r\n            }\r\n        };\r\n\r\n```",
    "created_at": "2019-10-09T00:06:27Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r332784076",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332784076"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r332784076"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/332784076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 315,
    "original_line": 315,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333330707",
    "pull_request_review_id": 299821019,
    "id": 333330707,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzMzMDcwNw==",
    "diff_hunk": "@@ -49,20 +57,31 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n  *     CTxOut(nValue=50.00000000, scriptPubKey=0x5F1DF16B2B704C8A578D0B)\n  *   vMerkleTree: 4a5e1e\n  */\n-static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n+static inline CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n     const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n     const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n }\n \n+CBlock CreateSignetGenesisBlock(const CScript& block_script, uint32_t block_nonce)\n+{\n+    CHashWriter h(SER_DISK, 0);\n+    h << block_script;",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "c584956573b553f33771b7d853e2ccf8f033d29a",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree adding network ID is a good idea. I'd like to not restart the network until things are more finalized, but I will put this on the list of things to change for the next reset.",
    "created_at": "2019-10-10T05:02:48Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r333330707",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333330707"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r333330707"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333330707/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 70,
    "side": "RIGHT",
    "in_reply_to_id": 332733307
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333331147",
    "pull_request_review_id": 299821581,
    "id": 333331147,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzMzMTE0Nw==",
    "diff_hunk": "@@ -23,6 +24,12 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet\", \"Use the signet chain. Note that the network is defined by the signet_blockscript parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_blockscript\", \"Blocks must satisfy the given script to be considered valid (only for signet networks)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_genesisnonce\", \"Nonce value for use in genesis block to satisfy proof of work requirement\", ArgsManager::ALLOW_INT, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_hrp\", \"Human readable part of bech32 address (suffixed by \\\"sb\\\"; default = \\\"\\\")\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_enforcescript\", \"Blocks must satisfy the given script to be considered valid (this replaces -signet_blockscript, and is used for opt-in-reorg mode)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-signet_seednode\", \"Specify a seed node for the signet network (may be used multiple times to specify multiple seed nodes)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);",
    "path": "src/chainparamsbase.cpp",
    "position": 15,
    "original_position": 17,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "c584956573b553f33771b7d853e2ccf8f033d29a",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That seems sensible in #17037, but there is literally no reason outside signet for these, here. I don't think people will be too upset if we rename these a few months after merge, if worse comes to worst.",
    "created_at": "2019-10-10T05:05:26Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r333331147",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333331147"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r333331147"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333331147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 30,
    "original_line": 30,
    "side": "RIGHT",
    "in_reply_to_id": 332738312
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333331303",
    "pull_request_review_id": 299821775,
    "id": 333331303,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzMzMTMwMw==",
    "diff_hunk": "@@ -248,13 +268,101 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+        uint32_t genesis_nonce = 0;\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            genesis_nonce = 621297;\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+            genesis_nonce = args.GetArg(\"-signet_genesisnonce\", 0);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }\n+\n+            LogPrintf(\"SigNet with block script %s\\n\", gArgs.GetArgs(\"-signet_blockscript\")[0]);\n+        }\n+\n+        strNetworkID = \"signet\";\n+        g_signet_blockscript = CScript(bin.begin(), bin.end());\n+        consensus.signet_blocks = true;\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 0;\n+        consensus.SegwitHeight = 0;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        pchMessageStart[0] = 0xf0;\n+        pchMessageStart[1] = 0xc7;\n+        pchMessageStart[2] = 0x70;\n+        pchMessageStart[3] = 0x6a;\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+\n+        genesis = CreateSignetGenesisBlock(g_signet_blockscript, genesis_nonce);\n+        consensus.hashGenesisBlock = genesis.GetHash();",
    "path": "src/chainparams.cpp",
    "position": 88,
    "original_position": 141,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "c584956573b553f33771b7d853e2ccf8f033d29a",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Does it change anything? (Actual question; I assumed it didn't, except for blocks > height 0)",
    "created_at": "2019-10-10T05:06:24Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r333331303",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333331303"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r333331303"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333331303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 315,
    "original_line": 315,
    "side": "RIGHT",
    "in_reply_to_id": 332784076
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335017902",
    "pull_request_review_id": 301993639,
    "id": 335017902,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTAxNzkwMg==",
    "diff_hunk": "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
    "path": "src/primitives/block.h",
    "position": 19,
    "original_position": 19,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "c584956573b553f33771b7d853e2ccf8f033d29a",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why is this moved? I think the goal for `primitives` is to be data-only and don't contain any helper logic, especially if they are consensus critical.",
    "created_at": "2019-10-15T15:18:48Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r335017902",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335017902"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r335017902"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335017902/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 134,
    "original_line": 134,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338323361",
    "pull_request_review_id": 306246725,
    "id": 338323361,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzODMyMzM2MQ==",
    "diff_hunk": "@@ -248,13 +268,101 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * SigNet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+        uint32_t genesis_nonce = 0;\n+\n+        if (!args.IsArgSet(\"-signet_blockscript\")) {\n+            LogPrintf(\"Using default signet network\\n\");\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be43051ae\");\n+            genesis_nonce = 621297;\n+            vSeeds.push_back(\"178.128.221.177\");\n+            vSeeds.push_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.push_back(\"ntv3mtqw5wt63red.onion:38333\");\n+        } else {\n+            if (args.GetArgs(\"-signet_blockscript\").size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signet_blockscript cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(args.GetArgs(\"-signet_blockscript\")[0]);\n+            genesis_nonce = args.GetArg(\"-signet_genesisnonce\", 0);\n+            if (args.IsArgSet(\"-signet_seednode\")) {\n+                vSeeds = gArgs.GetArgs(\"-signet_seednode\");\n+            }\n+\n+            LogPrintf(\"SigNet with block script %s\\n\", gArgs.GetArgs(\"-signet_blockscript\")[0]);\n+        }\n+\n+        strNetworkID = \"signet\";\n+        g_signet_blockscript = CScript(bin.begin(), bin.end());\n+        consensus.signet_blocks = true;\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 0;\n+        consensus.SegwitHeight = 0;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00002adc28cf53b63c82faa55d83e40ac63b5f100aa5d8df62a429192f9e8ce5\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1539478800;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+\n+        pchMessageStart[0] = 0xf0;\n+        pchMessageStart[1] = 0xc7;\n+        pchMessageStart[2] = 0x70;\n+        pchMessageStart[3] = 0x6a;\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+\n+        genesis = CreateSignetGenesisBlock(g_signet_blockscript, genesis_nonce);\n+        consensus.hashGenesisBlock = genesis.GetHash();",
    "path": "src/chainparams.cpp",
    "position": 88,
    "original_position": 141,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "c584956573b553f33771b7d853e2ccf8f033d29a",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Well, I was thinking more on consistency with regtest, but functionally, I'm actually not sure it does anything (here or in regtest) either.",
    "created_at": "2019-10-23T23:24:49Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r338323361",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338323361"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r338323361"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338323361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 315,
    "original_line": 315,
    "side": "RIGHT",
    "in_reply_to_id": 332784076
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338334621",
    "pull_request_review_id": 306260898,
    "id": 338334621,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzODMzNDYyMQ==",
    "diff_hunk": "@@ -116,6 +116,50 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n+    /**\n+     * Get the vout index of the segwit commitment in the coinbase transaction of this block.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    inline int GetWitnessCommitmentIndex() const\n+    {\n+        return vtx.empty() ? -1 : GetWitnessCommitmentIndex(*vtx.at(0));\n+    }\n+\n+    /**\n+     * Get the vout index of the segwit commitment in the given coinbase transaction.\n+     *\n+     * Returns -1 if no witness commitment was found.\n+     */\n+    template<typename T> static inline int GetWitnessCommitmentIndex(const T& coinbase) {",
    "path": "src/primitives/block.h",
    "position": 19,
    "original_position": 19,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "c584956573b553f33771b7d853e2ccf8f033d29a",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It seems very weird to keep this obviously `CBlock`-related functionality in some completely different place. I'm not sure about primitives and data-only logic. If people feel strongly, I can restore this. Should the other stuff (witness commitment section stuff) follow along into validation.cpp then, you think?",
    "created_at": "2019-10-24T00:19:41Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r338334621",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338334621"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r338334621"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338334621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 134,
    "original_line": 134,
    "side": "RIGHT",
    "in_reply_to_id": 335017902
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388286223",
    "pull_request_review_id": 369558635,
    "id": 388286223,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI4NjIyMw==",
    "diff_hunk": "@@ -7,6 +7,8 @@\n \n #include <chainparamsseeds.h>\n #include <consensus/merkle.h>\n+#include <hash.h> // for signet block challenge hash\n+#include <signet.h>",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "89e402443ace8c52e3785e74410a2c05a6785af7",
    "original_commit_id": "ac9147c9f75f80de12148471561022d122584149",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Belated, but I am removing this and adding an `extern CScript g_signet_blockscript` in the signet chainparams class.",
    "created_at": "2020-03-05T13:18:03Z",
    "updated_at": "2020-03-06T04:47:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r388286223",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388286223"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16411#discussion_r388286223"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16411"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388286223/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT",
    "in_reply_to_id": 315067388
  }
]