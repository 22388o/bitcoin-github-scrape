MarcoFalke,2016-12-31T20:24:04Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/9281#issuecomment-269880652,269880652,
kallewoof,2017-01-02T12:03:43Z,Rebased. Will do a same-binary check in a couple of days if needed (wrong machine atm).,https://github.com/bitcoin/bitcoin/pull/9281#issuecomment-269964057,269964057,
MarcoFalke,2017-01-03T11:21:12Z,utACK 73f41190b91dce9c125b1828b18f7625e0200145,https://github.com/bitcoin/bitcoin/pull/9281#issuecomment-270094598,270094598,
MarcoFalke,2017-01-03T11:31:53Z,"> Will do a same-binary check in a couple of days if needed\n\nPing me when you are done, so I don't forget about this pull.",https://github.com/bitcoin/bitcoin/pull/9281#issuecomment-270096135,270096135,
kallewoof,2017-01-04T02:41:59Z,"@MarcoFalke Same-binary check done and indicates `bitcoin-cli`, `bitcoin-tx`, `bitcoind` are all identical. (See updated OP.)",https://github.com/bitcoin/bitcoin/pull/9281#issuecomment-270282426,270282426,
MarcoFalke,2017-01-04T13:30:35Z,"@kallewoof Can you run it for the affected binaries instead? ðŸ˜› \n\n```\n      test/test_bitcoin\n      bench/bench_bitcoin",https://github.com/bitcoin/bitcoin/pull/9281#issuecomment-270370389,270370389,
kallewoof,2017-01-05T02:34:03Z,"@MarcoFalke The binary compare util explicitly disables tests. I removed that and tried and I got differences. I believe this is because the tests use macros which capture the line numbers, which obviously change just by adding or removing lines, even if the execution itself doesn't change.\n\nbench does pass the binary check though:\n\n```\n$ sha256sum /tmp/compare/*.stripped\n5e60275a2f497",https://github.com/bitcoin/bitcoin/pull/9281#issuecomment-270548438,270548438,
paveljanik,2016-12-05T12:36:39Z,Forgetten 'using namespace'?,https://github.com/bitcoin/bitcoin/pull/9281#discussion_r90855988,90855988,src/test/streams_tests.cpp
kallewoof,2016-12-05T13:14:34Z,"You mean `boost::assign`? It's not trivial to remove, as it actually adds an `operator` so that things like the `key` statement below are possible.\n```C++\n    std::vector<unsigned char> key;\n    [...]\n    key += '\x00','\x00';\n```\n",https://github.com/bitcoin/bitcoin/pull/9281#discussion_r90861321,90861321,src/test/streams_tests.cpp
paveljanik,2016-12-05T14:22:25Z,"IIRC in C++11, you can initialise this vector with\n\n```C++\nkey = {'\x00','\x00'};\n```\n\nBut this is probably outside of the scope of this PR.\n",https://github.com/bitcoin/bitcoin/pull/9281#discussion_r90872445,90872445,src/test/streams_tests.cpp
kallewoof,2016-12-05T14:27:34Z,"Yeah, but you can't add onto it afterwards (using `+=`), at least AFAIK. \nI think a nice compromise is to move the `using namespace boost::assign` into the functions using it. I can do that if people prefer.",https://github.com/bitcoin/bitcoin/pull/9281#discussion_r90873398,90873398,src/test/streams_tests.cpp
paveljanik,2016-12-05T14:29:56Z,"Yup, but the code is always using it after `.clear()`...",https://github.com/bitcoin/bitcoin/pull/9281#discussion_r90874129,90874129,src/test/streams_tests.cpp
kallewoof,2016-12-05T14:32:31Z,"Wow, yeah you're right. I didn't realize that.",https://github.com/bitcoin/bitcoin/pull/9281#discussion_r90874716,90874716,src/test/streams_tests.cpp
kallewoof,2016-12-06T00:40:35Z,"Actually, I don't think I'll fix it (as you said initially, it's outside the scope of this PR) as it would no doubt break the same-binaries condition I've been working hard to retain. With a big update I think upholding that condition is worthwhile.",https://github.com/bitcoin/bitcoin/pull/9281#discussion_r90990008,90990008,src/test/streams_tests.cpp
paveljanik,2016-12-06T06:51:26Z,"Agree, not for this PR as I said.",https://github.com/bitcoin/bitcoin/pull/9281#discussion_r91020820,91020820,src/test/streams_tests.cpp
MarcoFalke,2016-12-31T20:51:08Z,"It is also possible to scope the `using boost::*` to the only function where it is used. But better keep it as is, when there are plans to move to cpp11 anyway.",https://github.com/bitcoin/bitcoin/pull/9281#discussion_r94277595,94277595,src/test/streams_tests.cpp
MarcoFalke,2017-01-01T00:00:04Z,Might be better to just keep `using namespace boost::filesystem` or specify the full namespace instead.,https://github.com/bitcoin/bitcoin/pull/9281#discussion_r94278853,94278853,src/test/dbwrapper_tests.cpp
kallewoof,2017-01-02T11:25:33Z,"Aliasing a namespace is quite different from `using` it, I think. I prefer removing the alias and just using the full namespace instead, in that case.",https://github.com/bitcoin/bitcoin/pull/9281#discussion_r94310569,94310569,src/test/dbwrapper_tests.cpp
MarcoFalke,2017-01-02T11:28:33Z,"Thx, fine with me.",https://github.com/bitcoin/bitcoin/pull/9281#discussion_r94310773,94310773,src/test/dbwrapper_tests.cpp
