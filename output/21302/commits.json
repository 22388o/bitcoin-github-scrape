[
  {
    "sha": "5d5a90e819d23a302f9bec6b995a3116ead6ae94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZDVhOTBlODE5ZDIzYTMwMmY5YmVjNmI5OTVhMzExNmVhZDZhZTk0",
    "commit": {
      "author": {
        "name": "Ivan Metlushko",
        "email": "metlushko@gmail.com",
        "date": "2021-03-03T08:32:14Z"
      },
      "committer": {
        "name": "Ivan Metlushko",
        "email": "metlushko@gmail.com",
        "date": "2021-03-03T08:36:23Z"
      },
      "message": "rpc: Add HelpExampleRpcNamed",
      "tree": {
        "sha": "92314f386805d8cd8ef1de3998c31784a8c02bfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/92314f386805d8cd8ef1de3998c31784a8c02bfb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d5a90e819d23a302f9bec6b995a3116ead6ae94",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d5a90e819d23a302f9bec6b995a3116ead6ae94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5d5a90e819d23a302f9bec6b995a3116ead6ae94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d5a90e819d23a302f9bec6b995a3116ead6ae94/comments",
    "author": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e49117470b77fb7d53be122c6490ba163c6e304d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e49117470b77fb7d53be122c6490ba163c6e304d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e49117470b77fb7d53be122c6490ba163c6e304d"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b4533c14d0c0ab420c96ea8f8e43b8b72ac0445b",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d5a90e819d23a302f9bec6b995a3116ead6ae94/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d5a90e819d23a302f9bec6b995a3116ead6ae94/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=5d5a90e819d23a302f9bec6b995a3116ead6ae94",
        "patch": "@@ -124,6 +124,17 @@ std::string HelpExampleRpc(const std::string& methodname, const std::string& arg\n         \"\\\"method\\\": \\\"\" + methodname + \"\\\", \\\"params\\\": [\" + args + \"]}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\\n\";\n }\n \n+std::string HelpExampleRpcNamed(const std::string& methodname, const RPCArgList& args)\n+{\n+    UniValue params(UniValue::VOBJ);\n+    for (const auto& param: args) {\n+        params.pushKV(param.first, param.second);\n+    }\n+\n+    return \"> curl --user myusername --data-binary '{\\\"jsonrpc\\\": \\\"1.0\\\", \\\"id\\\": \\\"curltest\\\", \"\n+           \"\\\"method\\\": \\\"\" + methodname + \"\\\", \\\"params\\\": \" + params.write() + \"}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\\n\";\n+}\n+\n // Converts a hex string to a public key if possible\n CPubKey HexToPubKey(const std::string& hex_in)\n {"
      },
      {
        "sha": "184dfc2940f1dc4fecf344ec3e0a7f3020204216",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d5a90e819d23a302f9bec6b995a3116ead6ae94/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d5a90e819d23a302f9bec6b995a3116ead6ae94/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=5d5a90e819d23a302f9bec6b995a3116ead6ae94",
        "patch": "@@ -78,8 +78,11 @@ extern std::vector<unsigned char> ParseHexV(const UniValue& v, std::string strNa\n extern std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKey);\n \n extern CAmount AmountFromValue(const UniValue& value);\n+\n+using RPCArgList = std::vector<std::pair<std::string, UniValue>>;\n extern std::string HelpExampleCli(const std::string& methodname, const std::string& args);\n extern std::string HelpExampleRpc(const std::string& methodname, const std::string& args);\n+extern std::string HelpExampleRpcNamed(const std::string& methodname, const RPCArgList& args);\n \n CPubKey HexToPubKey(const std::string& hex_in);\n CPubKey AddrToPubKey(const FillableSigningProvider& keystore, const std::string& addr_in);"
      }
    ]
  },
  {
    "sha": "591735ef0bf13b94643b794518406f981fa5dcb7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTE3MzVlZjBiZjEzYjk0NjQzYjc5NDUxODQwNmY5ODFmYTVkY2I3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-02-26T14:03:50Z"
      },
      "committer": {
        "name": "Ivan Metlushko",
        "email": "metlushko@gmail.com",
        "date": "2021-03-03T08:40:06Z"
      },
      "message": "rpc: Add HelpExampleCliNamed and use it for `createwallet` doc",
      "tree": {
        "sha": "1e846cc4c1af06829d68ad35b2c73f406d33a1e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e846cc4c1af06829d68ad35b2c73f406d33a1e3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/591735ef0bf13b94643b794518406f981fa5dcb7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/591735ef0bf13b94643b794518406f981fa5dcb7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/591735ef0bf13b94643b794518406f981fa5dcb7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/591735ef0bf13b94643b794518406f981fa5dcb7/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5d5a90e819d23a302f9bec6b995a3116ead6ae94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d5a90e819d23a302f9bec6b995a3116ead6ae94",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5d5a90e819d23a302f9bec6b995a3116ead6ae94"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 55,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d8440746014d79c05ca2ae13f692a5f77a9588f6",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/591735ef0bf13b94643b794518406f981fa5dcb7/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/591735ef0bf13b94643b794518406f981fa5dcb7/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=591735ef0bf13b94643b794518406f981fa5dcb7",
        "patch": "@@ -113,11 +113,63 @@ std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKey)\n     return ParseHexV(find_value(o, strKey), strKey);\n }\n \n+namespace {\n+\n+/**\n+ * Quote an argument for shell.\n+ *\n+ * @note This is intended for help, not for security-sensitive purposes.\n+ */\n+std::string ShellQuote(const std::string& s)\n+{\n+    std::string result;\n+    result.reserve(s.size() * 2);\n+    for (const char ch: s) {\n+        if (ch == '\\'') {\n+            result += \"'\\''\";\n+        } else {\n+            result += ch;\n+        }\n+    }\n+    return \"'\" + result + \"'\";\n+}\n+\n+/**\n+ * Shell-quotes the argument if it needs quoting, else returns it literally, to save typing.\n+ *\n+ * @note This is intended for help, not for security-sensitive purposes.\n+ */\n+std::string ShellQuoteIfNeeded(const std::string& s)\n+{\n+    for (const char ch: s) {\n+        if (ch == ' ' || ch == '\\'' || ch == '\"') {\n+            return ShellQuote(s);\n+        }\n+    }\n+\n+    return s;\n+}\n+\n+}\n+\n std::string HelpExampleCli(const std::string& methodname, const std::string& args)\n {\n     return \"> bitcoin-cli \" + methodname + \" \" + args + \"\\n\";\n }\n \n+std::string HelpExampleCliNamed(const std::string& methodname, const RPCArgList& args)\n+{\n+    std::string result = \"> bitcoin-cli -named \" + methodname;\n+    for (const auto& argpair: args) {\n+        const auto& value = argpair.second.isStr()\n+                ? argpair.second.get_str()\n+                : argpair.second.write();\n+        result += \" \" + argpair.first + \"=\" + ShellQuoteIfNeeded(value);\n+    }\n+    result += \"\\n\";\n+    return result;\n+}\n+\n std::string HelpExampleRpc(const std::string& methodname, const std::string& args)\n {\n     return \"> curl --user myusername --data-binary '{\\\"jsonrpc\\\": \\\"1.0\\\", \\\"id\\\": \\\"curltest\\\", \""
      },
      {
        "sha": "c87c3db6f0616ba805052b7e6efa1c0acfa2a181",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/591735ef0bf13b94643b794518406f981fa5dcb7/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/591735ef0bf13b94643b794518406f981fa5dcb7/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=591735ef0bf13b94643b794518406f981fa5dcb7",
        "patch": "@@ -81,6 +81,7 @@ extern CAmount AmountFromValue(const UniValue& value);\n \n using RPCArgList = std::vector<std::pair<std::string, UniValue>>;\n extern std::string HelpExampleCli(const std::string& methodname, const std::string& args);\n+extern std::string HelpExampleCliNamed(const std::string& methodname, const RPCArgList& args);\n extern std::string HelpExampleRpc(const std::string& methodname, const std::string& args);\n extern std::string HelpExampleRpcNamed(const std::string& methodname, const RPCArgList& args);\n "
      },
      {
        "sha": "f065332c9967ea56dc13ffa1bdd2c634005a0e4f",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/591735ef0bf13b94643b794518406f981fa5dcb7/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/591735ef0bf13b94643b794518406f981fa5dcb7/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=591735ef0bf13b94643b794518406f981fa5dcb7",
        "patch": "@@ -2738,6 +2738,8 @@ static RPCHelpMan createwallet()\n         RPCExamples{\n             HelpExampleCli(\"createwallet\", \"\\\"testwallet\\\"\")\n             + HelpExampleRpc(\"createwallet\", \"\\\"testwallet\\\"\")\n+            + HelpExampleCliNamed(\"createwallet\", {{\"wallet_name\", \"descriptors\"}, {\"avoid_reuse\", true}, {\"descriptors\", true}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"createwallet\", {{\"wallet_name\", \"descriptors\"}, {\"avoid_reuse\", true}, {\"descriptors\", true}, {\"load_on_startup\", true}})\n         },\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n {"
      }
    ]
  },
  {
    "sha": "5039e0e55a7c9dd63a38c12fa60d244592de69e0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MDM5ZTBlNTVhN2M5ZGQ2M2EzOGMxMmZhNjBkMjQ0NTkyZGU2OWUw",
    "commit": {
      "author": {
        "name": "Ivan Metlushko",
        "email": "metlushko@gmail.com",
        "date": "2021-03-03T08:32:39Z"
      },
      "committer": {
        "name": "Ivan Metlushko",
        "email": "metlushko@gmail.com",
        "date": "2021-03-03T08:58:39Z"
      },
      "message": "test: HelpExampleCliNamed and HelpExampleRpcNamed",
      "tree": {
        "sha": "5e88b77f4977d9cd9548a45a16fc814f67a6e4c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e88b77f4977d9cd9548a45a16fc814f67a6e4c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5039e0e55a7c9dd63a38c12fa60d244592de69e0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5039e0e55a7c9dd63a38c12fa60d244592de69e0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5039e0e55a7c9dd63a38c12fa60d244592de69e0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5039e0e55a7c9dd63a38c12fa60d244592de69e0/comments",
    "author": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "591735ef0bf13b94643b794518406f981fa5dcb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/591735ef0bf13b94643b794518406f981fa5dcb7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/591735ef0bf13b94643b794518406f981fa5dcb7"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 35,
      "deletions": 0
    },
    "files": [
      {
        "sha": "946f9935369257b404620e2d88f9eb4b8e026a3a",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5039e0e55a7c9dd63a38c12fa60d244592de69e0/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5039e0e55a7c9dd63a38c12fa60d244592de69e0/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=5039e0e55a7c9dd63a38c12fa60d244592de69e0",
        "patch": "@@ -421,4 +421,39 @@ BOOST_AUTO_TEST_CASE(rpc_getblockstats_calculate_percentiles_by_weight)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(help_example)\n+{\n+    // test different argument types\n+    const RPCArgList& args = {{\"foo\", \"bar\"}, {\"b\", true}, {\"n\", 1}};\n+    BOOST_CHECK_EQUAL(HelpExampleCliNamed(\"test\", args), \"> bitcoin-cli -named test foo=bar b=true n=1\\n\");\n+    BOOST_CHECK_EQUAL(HelpExampleRpcNamed(\"test\", args), \"> curl --user myusername --data-binary '{\\\"jsonrpc\\\": \\\"1.0\\\", \\\"id\\\": \\\"curltest\\\", \\\"method\\\": \\\"test\\\", \\\"params\\\": {\\\"foo\\\":\\\"bar\\\",\\\"b\\\":true,\\\"n\\\":1}}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\\n\");\n+\n+    // test shell escape\n+    BOOST_CHECK_EQUAL(HelpExampleCliNamed(\"test\", {{\"foo\", \"b'ar\"}}), \"> bitcoin-cli -named test foo='b'''ar'\\n\");\n+    BOOST_CHECK_EQUAL(HelpExampleCliNamed(\"test\", {{\"foo\", \"b\\\"ar\"}}), \"> bitcoin-cli -named test foo='b\\\"ar'\\n\");\n+    BOOST_CHECK_EQUAL(HelpExampleCliNamed(\"test\", {{\"foo\", \"b ar\"}}), \"> bitcoin-cli -named test foo='b ar'\\n\");\n+\n+    // test object params\n+    UniValue obj_value(UniValue::VOBJ);\n+    obj_value.pushKV(\"foo\", \"bar\");\n+    obj_value.pushKV(\"b\", false);\n+    obj_value.pushKV(\"n\", 1);\n+    BOOST_CHECK_EQUAL(HelpExampleCliNamed(\"test\", {{\"name\", obj_value}}), \"> bitcoin-cli -named test name='{\\\"foo\\\":\\\"bar\\\",\\\"b\\\":false,\\\"n\\\":1}'\\n\");\n+    BOOST_CHECK_EQUAL(HelpExampleRpcNamed(\"test\", {{\"name\", obj_value}}), \"> curl --user myusername --data-binary '{\\\"jsonrpc\\\": \\\"1.0\\\", \\\"id\\\": \\\"curltest\\\", \\\"method\\\": \\\"test\\\", \\\"params\\\": {\\\"name\\\":{\\\"foo\\\":\\\"bar\\\",\\\"b\\\":false,\\\"n\\\":1}}}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\\n\");\n+\n+    // test array params\n+    UniValue arr_value(UniValue::VARR);\n+    arr_value.push_back(\"bar\");\n+    arr_value.push_back(false);\n+    arr_value.push_back(1);\n+    BOOST_CHECK_EQUAL(HelpExampleCliNamed(\"test\", {{\"name\", arr_value}}), \"> bitcoin-cli -named test name='[\\\"bar\\\",false,1]'\\n\");\n+    BOOST_CHECK_EQUAL(HelpExampleRpcNamed(\"test\", {{\"name\", arr_value}}), \"> curl --user myusername --data-binary '{\\\"jsonrpc\\\": \\\"1.0\\\", \\\"id\\\": \\\"curltest\\\", \\\"method\\\": \\\"test\\\", \\\"params\\\": {\\\"name\\\":[\\\"bar\\\",false,1]}}' -H 'content-type: text/plain;' http://127.0.0.1:8332/\\n\");\n+\n+    // test types don't matter for shell\n+    BOOST_CHECK_EQUAL(HelpExampleCliNamed(\"foo\", {{\"arg\", true}}), HelpExampleCliNamed(\"foo\", {{\"arg\", \"true\"}}));\n+\n+    // test types matter for Rpc\n+    BOOST_CHECK_NE(HelpExampleRpcNamed(\"foo\", {{\"arg\", true}}), HelpExampleRpcNamed(\"foo\", {{\"arg\", \"true\"}}));\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]