DrahtBot,2021-03-27 16:10:16,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21391 ([Bundle 5/n] Prune g_chainman usage in RPC modules by dongcarl)\n* #20017 (rpc: Add RPCContext by promag)\n\nIf yo",https://github.com/bitcoin/bitcoin/pull/21533#issuecomment-808755524,808755524,
Empact,2021-03-30 05:48:57,Concept ACK,https://github.com/bitcoin/bitcoin/pull/21533#issuecomment-809930190,809930190,
jnewbery,2021-03-30 08:07:11,Rebased to pick up android CI fix: https://github.com/bitcoin/bitcoin/compare/4740100090bde0668b7baf3044d56d628974aa45..28f052f0b85907bdf49df994014a6708c6dfc218,https://github.com/bitcoin/bitcoin/pull/21533#issuecomment-810010604,810010604,
jnewbery,2021-03-30 08:30:42,Thanks for the review @Empact! I've addressed your comment.,https://github.com/bitcoin/bitcoin/pull/21533#issuecomment-810027438,810027438,
jnewbery,2021-04-14 12:38:34,"Thanks for the reviews @theStack and @Empact. I realize now that I've misread the new `GenerateBlock()` function and that the effective tri-state return means that the extranonce _can_ be incremented if we exit from `GenerateBlock()` with `block_hash` unset.\n\nI think it's very confusing that state is being passed around and shared between `generateBlocks()`, `GenerateBlock()`, and `IncrementEx",https://github.com/bitcoin/bitcoin/pull/21533#issuecomment-819485464,819485464,
Empact,2021-03-30 05:43:41,nit: `assert` against invalid `height`?,https://github.com/bitcoin/bitcoin/pull/21533#discussion_r603796733,603796733,src/miner.cpp
jnewbery,2021-03-30 08:30:22,done!,https://github.com/bitcoin/bitcoin/pull/21533#discussion_r603890878,603890878,src/miner.cpp
Empact,2021-04-13 03:28:59,"I tend to agree with @theStack that throwing here is a change of failure modes for `generateBlocks`, impacting `generatetodescriptor` and `generatetoaddress`.\n\nHowever, I'm not clear on when this condition occurs. `CBlock::GetHash()` resolves to `SerializeHash(*this)`, and I didn't see a failure possible in the serialization logic (through a cursory glance).\n\nOptions seem to be:\n* retain",https://github.com/bitcoin/bitcoin/pull/21533#discussion_r612101490,612101490,src/rpc/mining.cpp
jnewbery,2021-04-14 12:35:03,It's a very strange and unintuitive interface. The passed out hash will be null if `block.nNonce == std::numeric_limits<uint32_t>::max()`. The nullness of that out-param is what is used to determine whether the outer while loop should increment the height or try again at the same height.,https://github.com/bitcoin/bitcoin/pull/21533#discussion_r613206186,613206186,src/rpc/mining.cpp
