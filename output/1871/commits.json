[
  {
    "sha": "189eb6a989674e384d65397befb6b1050789df97",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxODllYjZhOTg5Njc0ZTM4NGQ2NTM5N2JlZmI2YjEwNTA3ODlkZjk3",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@exmulti.com",
        "date": "2012-09-27T01:56:45Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@redhat.com",
        "date": "2012-09-27T01:56:45Z"
      },
      "message": "walletdb.h: remove dead code",
      "tree": {
        "sha": "4f01c9c2d4dbd72addcf4d967d01c1960a105807",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f01c9c2d4dbd72addcf4d967d01c1960a105807"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/189eb6a989674e384d65397befb6b1050789df97",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/189eb6a989674e384d65397befb6b1050789df97",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/189eb6a989674e384d65397befb6b1050789df97",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/189eb6a989674e384d65397befb6b1050789df97/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1381ad2b21733071acb2a43c251dbecef524f110",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1381ad2b21733071acb2a43c251dbecef524f110",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1381ad2b21733071acb2a43c251dbecef524f110"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 0,
      "deletions": 30
    },
    "files": [
      {
        "sha": "f07848181136b00db67e1cf14e3e98cef78b8a6e",
        "filename": "src/walletdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/189eb6a989674e384d65397befb6b1050789df97/src/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/189eb6a989674e384d65397befb6b1050789df97/src/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.h?ref=189eb6a989674e384d65397befb6b1050789df97",
        "patch": "@@ -33,21 +33,10 @@ class CWalletDB : public CDB\n     CWalletDB(const CWalletDB&);\n     void operator=(const CWalletDB&);\n public:\n-    bool ReadName(const std::string& strAddress, std::string& strName)\n-    {\n-        strName = \"\";\n-        return Read(std::make_pair(std::string(\"name\"), strAddress), strName);\n-    }\n-\n     bool WriteName(const std::string& strAddress, const std::string& strName);\n \n     bool EraseName(const std::string& strAddress);\n \n-    bool ReadTx(uint256 hash, CWalletTx& wtx)\n-    {\n-        return Read(std::make_pair(std::string(\"tx\"), hash), wtx);\n-    }\n-\n     bool WriteTx(uint256 hash, const CWalletTx& wtx)\n     {\n         nWalletDBUpdated++;\n@@ -60,12 +49,6 @@ class CWalletDB : public CDB\n         return Erase(std::make_pair(std::string(\"tx\"), hash));\n     }\n \n-    bool ReadKey(const CPubKey& vchPubKey, CPrivKey& vchPrivKey)\n-    {\n-        vchPrivKey.clear();\n-        return Read(std::make_pair(std::string(\"key\"), vchPubKey.Raw()), vchPrivKey);\n-    }\n-\n     bool WriteKey(const CPubKey& vchPubKey, const CPrivKey& vchPrivKey)\n     {\n         nWalletDBUpdated++;\n@@ -91,13 +74,6 @@ class CWalletDB : public CDB\n         return Write(std::make_pair(std::string(\"mkey\"), nID), kMasterKey, true);\n     }\n \n-    // Support for BIP 0013 : see https://en.bitcoin.it/wiki/BIP_0013\n-    bool ReadCScript(const uint160 &hash, CScript& redeemScript)\n-    {\n-        redeemScript.clear();\n-        return Read(std::make_pair(std::string(\"cscript\"), hash), redeemScript);\n-    }\n-\n     bool WriteCScript(const uint160& hash, const CScript& redeemScript)\n     {\n         nWalletDBUpdated++;\n@@ -121,12 +97,6 @@ class CWalletDB : public CDB\n         return Write(std::string(\"orderposnext\"), nOrderPosNext);\n     }\n \n-    bool ReadDefaultKey(std::vector<unsigned char>& vchPubKey)\n-    {\n-        vchPubKey.clear();\n-        return Read(std::string(\"defaultkey\"), vchPubKey);\n-    }\n-\n     bool WriteDefaultKey(const CPubKey& vchPubKey)\n     {\n         nWalletDBUpdated++;"
      }
    ]
  }
]