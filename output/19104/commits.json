[
  {
    "sha": "4f49d5222eca11c149713ad34113d5a3d1c577b1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZjQ5ZDUyMjJlY2ExMWMxNDk3MTNhZDM0MTEzZDVhM2QxYzU3N2Ix",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-11-12T23:26:31Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-05-29T15:05:47Z"
      },
      "message": "gui, refactor: Register Qt meta types in application constructor",
      "tree": {
        "sha": "84b31db62df2ebd95d27b3f45f0f40765200f024",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84b31db62df2ebd95d27b3f45f0f40765200f024"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4f49d5222eca11c149713ad34113d5a3d1c577b1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f49d5222eca11c149713ad34113d5a3d1c577b1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4f49d5222eca11c149713ad34113d5a3d1c577b1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f49d5222eca11c149713ad34113d5a3d1c577b1/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "de369c7ea57745fbbbab5c7ba3ec8ab48f9e3ec5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de369c7ea57745fbbbab5c7ba3ec8ab48f9e3ec5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de369c7ea57745fbbbab5c7ba3ec8ab48f9e3ec5"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 18,
      "deletions": 14
    },
    "files": [
      {
        "sha": "eeaa6ecfb28ce0b7de47fc5ad7085851c0c88361",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 14,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f49d5222eca11c149713ad34113d5a3d1c577b1/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f49d5222eca11c149713ad34113d5a3d1c577b1/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=4f49d5222eca11c149713ad34113d5a3d1c577b1",
        "patch": "@@ -65,6 +65,23 @@ Q_DECLARE_METATYPE(CAmount)\n Q_DECLARE_METATYPE(SynchronizationState)\n Q_DECLARE_METATYPE(uint256)\n \n+static void RegisterMetaTypes()\n+{\n+    // Register meta types used for QMetaObject::invokeMethod and Qt::QueuedConnection\n+    qRegisterMetaType<bool*>();\n+    qRegisterMetaType<SynchronizationState>();\n+  #ifdef ENABLE_WALLET\n+    qRegisterMetaType<WalletModel*>();\n+  #endif\n+    // Register typedefs (see http://qt-project.org/doc/qt-5/qmetatype.html#qRegisterMetaType)\n+    // IMPORTANT: if CAmount is no longer a typedef use the normal variant above (see https://doc.qt.io/qt-5/qmetatype.html#qRegisterMetaType-1)\n+    qRegisterMetaType<CAmount>(\"CAmount\");\n+    qRegisterMetaType<size_t>(\"size_t\");\n+\n+    qRegisterMetaType<std::function<void()>>(\"std::function<void()>\");\n+    qRegisterMetaType<QMessageBox::Icon>(\"QMessageBox::Icon\");\n+}\n+\n static QString GetLangTerritory()\n {\n     QSettings settings;\n@@ -184,6 +201,7 @@ BitcoinApplication::BitcoinApplication(interfaces::Node& node):\n     returnValue(0),\n     platformStyle(nullptr)\n {\n+    RegisterMetaTypes();\n     setQuitOnLastWindowClosed(false);\n }\n \n@@ -435,20 +453,6 @@ int GuiMain(int argc, char* argv[])\n \n     BitcoinApplication app(*node);\n \n-    // Register meta types used for QMetaObject::invokeMethod and Qt::QueuedConnection\n-    qRegisterMetaType<bool*>();\n-    qRegisterMetaType<SynchronizationState>();\n-#ifdef ENABLE_WALLET\n-    qRegisterMetaType<WalletModel*>();\n-#endif\n-    // Register typedefs (see http://qt-project.org/doc/qt-5/qmetatype.html#qRegisterMetaType)\n-    // IMPORTANT: if CAmount is no longer a typedef use the normal variant above (see https://doc.qt.io/qt-5/qmetatype.html#qRegisterMetaType-1)\n-    qRegisterMetaType<CAmount>(\"CAmount\");\n-    qRegisterMetaType<size_t>(\"size_t\");\n-\n-    qRegisterMetaType<std::function<void()>>(\"std::function<void()>\");\n-    qRegisterMetaType<QMessageBox::Icon>(\"QMessageBox::Icon\");\n-\n     /// 2. Parse command-line options. We do this after qt in order to show an error if there are problems parsing these\n     // Command-line options take precedence:\n     node->setupServerArgs();"
      }
    ]
  }
]