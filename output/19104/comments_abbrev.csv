promag,2020-05-29 09:10:21,"Pushed in #17457, then #19033, and now on it's own PR.",https://github.com/bitcoin/bitcoin/pull/19104#issuecomment-635864927,635864927,
jonasschnelli,2020-05-29 09:12:25,"We could share those registrations with the main GUI code as also commented [here](https://github.com/bitcoin/bitcoin/pull/19011/files#r429144851). Since its test only,... not really necessary but would prevent further testing issues.\n\nutACK 41c3af9fecd52d44fb205edec7c0f054036d41eb",https://github.com/bitcoin/bitcoin/pull/19104#issuecomment-635865845,635865845,
promag,2020-05-29 09:14:26,"@jonasschnelli yes, was already suggested by @ryanofsky somewhere and I've suggested adding `GUIUtils::registerMetaTypes`.\n\nAh just saw you linked the suggestion comment.",https://github.com/bitcoin/bitcoin/pull/19104#issuecomment-635866878,635866878,
promag,2020-05-29 10:23:39,"Moving to `GUIUtil::registerMetaTypes`, and because of `WalletModel*` registration, I need to `#include <qt/walletmodel.h>` which causes\n```\nA new circular dependency in the form of ""qt/guiutil -> qt/walletmodel -> qt/guiutil"" appears to have been introduced.\nA new circular dependency in the form of ""qt/clientmodel -> qt/guiutil -> qt/walletmodel -> qt/clientmodel"" appears to have been intro",https://github.com/bitcoin/bitcoin/pull/19104#issuecomment-635897334,635897334,
ryanofsky,2020-05-29 10:42:06,"re: https://github.com/bitcoin/bitcoin/pull/19104#issuecomment-635897334\n\nSlight preference for just adding a new file like src/qt/types.h or src/qt/util_types.h to adding new circular dependencies here",https://github.com/bitcoin/bitcoin/pull/19104#issuecomment-635904540,635904540,
promag,2020-05-29 10:44:30,How about `BitcoinApplication::registerMetaTypes` - maybe called from constructor? ,https://github.com/bitcoin/bitcoin/pull/19104#issuecomment-635905487,635905487,
ryanofsky,2020-05-29 10:50:31,"> How about `BitcoinApplication::registerMetaTypes` - maybe called from constructor?\n\nSeems good",https://github.com/bitcoin/bitcoin/pull/19104#issuecomment-635907830,635907830,
promag,2020-05-29 11:32:04,"Updated, almost move only.",https://github.com/bitcoin/bitcoin/pull/19104#issuecomment-635923482,635923482,
jonasschnelli,2020-05-29 11:39:45,utACK 9df2528e57ff3c22f3d5777eb6a60a326c909995,https://github.com/bitcoin/bitcoin/pull/19104#issuecomment-635926259,635926259,
hebasto,2020-05-29 11:45:17,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/19104#issuecomment-635928149,635928149,
DrahtBot,2020-05-29 16:35:12,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19011 (Reduce cs_main lock accumulation during GUI startup by jonasschnelli)\n* #18817 (doc: Document differences in bitc",https://github.com/bitcoin/bitcoin/pull/19104#issuecomment-636068596,636068596,
jonasschnelli,2020-06-02 06:47:07,Re utACK 4f49d5222eca11c149713ad34113d5a3d1c577b1,https://github.com/bitcoin/bitcoin/pull/19104#issuecomment-637317586,637317586,
hebasto,2020-05-29 14:54:27,"Why a member function?\nCould it be a non-member function, either in unnamed namespace or `static`?",https://github.com/bitcoin/bitcoin/pull/19104#discussion_r432541976,432541976,src/qt/bitcoin.cpp
promag,2020-05-29 15:06:20,Good question ðŸ¤·  updated.,https://github.com/bitcoin/bitcoin/pull/19104#discussion_r432549468,432549468,src/qt/bitcoin.cpp
