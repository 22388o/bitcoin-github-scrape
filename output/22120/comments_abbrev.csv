michaelfolkson,2021-06-01 18:23:54,"> Two concept ACKs, but this needs review comments addressing, added ""waiting for author"" https://github.com/bitcoin/bitcoin/pull/17872#issuecomment-815473116\n\nConcept ACK, cool you picked this up.\n\nnit: I think the title should be `test:` or `qa:` ie lower case rather than upper case\n\n> test, qa or ci for changes to the unit tests, QA tests or CI code test, https://github.com/bitcoin/",https://github.com/bitcoin/bitcoin/pull/22120#issuecomment-852348017,852348017,
willcl-ark,2021-06-15 21:44:02,"Pushed to address nits and restart appveyor (which failed during fastly outage).\n\n* Removed `t_premature` and reverted to simple `+ 1` seconds past `MAX_FUTURE_BLOCK_TIME`\n* Removed `timeout` from `send_blocks_and_test` as suggested [here](https://github.com/bitcoin/bitcoin/pull/22120#discussion_r648935864)\n\n```\n$ git range-diff HEAD~1..7879b46 HEAD~1..754e802\n\n1:  7879b4679 ! 1:  ",https://github.com/bitcoin/bitcoin/pull/22120#issuecomment-861853803,861853803,
MarcoFalke,2021-06-17 07:05:30,review ACK 754e802274e9373ad7e1dccb710acf74ded6e7fb,https://github.com/bitcoin/bitcoin/pull/22120#issuecomment-862987039,862987039,
LarryRuane,2021-07-07 00:57:58,"This PR may be causing heisenbug CI failures ([example](https://github.com/bitcoin/bitcoin/pull/22350/checks?check_run_id=3002374670)). I can reproduce the failure on my laptop after several attempts:\n```\n2021-07-06T22:15:40.550000Z TestFramework (INFO): Create a new block with an anyone-can-spend coinbase\n2021-07-06T22:15:40.653000Z TestFramework (INFO): Mature the block.\n2021-07-06T22:15",https://github.com/bitcoin/bitcoin/pull/22120#issuecomment-875186505,875186505,
MarcoFalke,2021-07-07 07:29:07,"Are you sure this is failing on master?\n\nDebug log rotation must be disabled for the tests to work properly, as some are reading within the file by offset.",https://github.com/bitcoin/bitcoin/pull/22120#issuecomment-875360205,875360205,
LarryRuane,2021-07-07 16:33:38,"> Are you sure this is failing on master?\n> \n> Debug log rotation must be disabled for the tests to work properly, as some are reading within the file by offset.\n\nAAACK! You're right, sorry about that! I didn't imagine the log file would get large enough to rotate, but I forgot that tests run with `-debug` (all logs enabled).",https://github.com/bitcoin/bitcoin/pull/22120#issuecomment-875752579,875752579,
glozow,2021-06-02 09:06:02,"This is a comment, there's no need to say ""NOTE""\n```suggestion\n        # Need force_send because the block will get rejected without a getdata otherwise\n```",https://github.com/bitcoin/bitcoin/pull/22120#discussion_r643767595,643767595,test/functional/p2p_invalid_block.py
glozow,2021-06-02 09:07:55,"I'd prefer referencing the p2p object directly instead of through the node's p2p list, similar to the code above. If a subtest is added that connects/disconnects peers, this index could no longer refer to the peer you want.\n\n```suggestion\n        peer.send_blocks_and_test([block], node, force_send=True, success=False, reject_reason='time-too-new')\n\n        node.setmocktime(t + 1)\n     ",https://github.com/bitcoin/bitcoin/pull/22120#discussion_r643768936,643768936,test/functional/p2p_invalid_block.py
glozow,2021-06-02 09:15:37,This is 1 second away from the cutoff right? Perhaps a slightly larger buffer would be better because the functional tests usually run multithreaded.,https://github.com/bitcoin/bitcoin/pull/22120#discussion_r643774433,643774433,test/functional/p2p_invalid_block.py
glozow,2021-06-02 09:21:05,"Another small suggestion, using `2 * 60 * 60` or `MAX_FUTURE_BLOCK_TIME` instead of a magic number might be a bit more clear",https://github.com/bitcoin/bitcoin/pull/22120#discussion_r643778376,643778376,test/functional/p2p_invalid_block.py
willcl-ark,2021-06-02 19:03:42,Removed!,https://github.com/bitcoin/bitcoin/pull/22120#discussion_r644246318,644246318,test/functional/p2p_invalid_block.py
willcl-ark,2021-06-02 19:05:31,"Thanks, I agree this is both clearer and better.",https://github.com/bitcoin/bitcoin/pull/22120#discussion_r644247408,644247408,test/functional/p2p_invalid_block.py
willcl-ark,2021-06-02 19:07:30,"I went for `MAX_FUTURE_BLOCK_TIME` in the end and added a new `t_premature = 60`, so that we have a 60 second buffer to avoid any potential issues.",https://github.com/bitcoin/bitcoin/pull/22120#discussion_r644248601,644248601,test/functional/p2p_invalid_block.py
glozow,2021-06-07 14:14:21,"Hm, I don't think it's been removed?",https://github.com/bitcoin/bitcoin/pull/22120#discussion_r646627839,646627839,test/functional/p2p_invalid_block.py
MarcoFalke,2021-06-10 07:47:43,why? I changed to `1` and nothing happened,https://github.com/bitcoin/bitcoin/pull/22120#discussion_r648935320,648935320,test/functional/p2p_invalid_block.py
MarcoFalke,2021-06-10 07:48:23,"```suggestion\n        peer.send_blocks_and_test([block], node, success=True)\n```\n\nNo need to lower this. User can adjust via `--timeout-factor=0.1`",https://github.com/bitcoin/bitcoin/pull/22120#discussion_r648935864,648935864,test/functional/p2p_invalid_block.py
willcl-ark,2021-06-15 08:41:53,"I also had no difficulty/local failures with t=1, but there was a raised concern that multi-threaded tests could jeopardise this [here](https://github.com/bitcoin/bitcoin/pull/22120#discussion_r643774433). It doesn't seem like something that threat timing issues could throw off to me as time is advanced before validity is re-checked, but I am not 100% on that.\n\nI am going to reset this to 1 al",https://github.com/bitcoin/bitcoin/pull/22120#discussion_r651577974,651577974,test/functional/p2p_invalid_block.py
willcl-ark,2021-06-15 08:52:52,Thanks. Will update this with or without the time premature (=1) suggestion.,https://github.com/bitcoin/bitcoin/pull/22120#discussion_r651587109,651587109,test/functional/p2p_invalid_block.py
MarcoFalke,2021-06-15 09:52:29,"> Edit: @MarcoFalke can you confirm that node time cannot advance automatically once setmocktime rpc has been called? If so then I will be convinced that multi-threading these tests will not cause any issues with t=1\n\nThe wall clock time for the node still advances, but the mocktime is pinned once `setmocktime` is set to a non-zero value.",https://github.com/bitcoin/bitcoin/pull/22120#discussion_r651633522,651633522,test/functional/p2p_invalid_block.py
willcl-ark,2021-06-15 21:44:26,Removed in 754e802,https://github.com/bitcoin/bitcoin/pull/22120#discussion_r652173996,652173996,test/functional/p2p_invalid_block.py
willcl-ark,2021-06-15 21:44:47,"Thanks, unnecessary constant now removed in 754e802",https://github.com/bitcoin/bitcoin/pull/22120#discussion_r652174173,652174173,test/functional/p2p_invalid_block.py
