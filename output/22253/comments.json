[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/861665545",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-861665545",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22253",
    "id": 861665545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MTY2NTU0NQ==",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?u=3e27bc6589085f3450be1b0e969d04008cc77565&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-15T16:52:52Z",
    "updated_at": "2021-06-15T16:52:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "CC @ariard - The same-txid-different-wtxid issue was initially pointed out in #19645 and the test commit is converted from https://github.com/bitcoin/bitcoin/pull/19645/commits/d86e7a17081af04ceabe93b15a87cf295a9e9d84",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/861665545/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/861807755",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-861807755",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22253",
    "id": 861807755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MTgwNzc1NQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-15T20:25:49Z",
    "updated_at": "2021-07-08T03:58:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22261 by jnewbery\n* #22252 by glozow\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/861807755/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862492811",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-862492811",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22253",
    "id": 862492811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MjQ5MjgxMQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-16T15:48:41Z",
    "updated_at": "2021-06-16T15:48:41Z",
    "author_association": "MEMBER",
    "body": "ACK e6ba22edbc13f29d53f2dc0fcdcff49df879f597",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862492811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863485755",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-863485755",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22253",
    "id": 863485755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzQ4NTc1NQ==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-17T18:54:08Z",
    "updated_at": "2021-06-17T18:55:29Z",
    "author_association": "MEMBER",
    "body": "@glozow \r\n\r\nYou know i'm quite bothered by you reaching offline, asking me to re-use my work with #19645 and the well-foundness of #22252, of which I said it wasn't really required for a v0.1 package-relay and that we should be [careful](https://github.com/bitcoin/bitcoin/pull/22252#issuecomment-861930852) before considering this change.\r\n\r\nI still appreciate the energy and dedication you're pouring in this serie of work. That said next time if you have questions on any work related to better support for L2s, ping me on #bitcoin-core-dev. Anyone will be able to learn from the discussion, and it would avoid me to repeat twice my arguments :/",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863485755/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863932473",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-863932473",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22253",
    "id": 863932473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzkzMjQ3Mw==",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?u=3e27bc6589085f3450be1b0e969d04008cc77565&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-18T10:21:01Z",
    "updated_at": "2021-06-18T10:55:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ariard We discussed this [8 months ago on github, when you posted that you would open the PR to make this change](https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-705109193). I felt that there was a bit of urgency which is why I wanted to PR it, and messaged you privately to make sure we wouldn't be doing redundant work. That's my view, and I can also see that having multiple private/public communication channels can cause wires to cross and require repetitive messages. My apologies.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863932473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863953347",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-863953347",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22253",
    "id": 863953347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2Mzk1MzM0Nw==",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?u=3e27bc6589085f3450be1b0e969d04008cc77565&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-18T10:59:07Z",
    "updated_at": "2021-06-18T11:00:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've updated the description and removed commits that aren't strictly about same-txid-different-wtxid. Hopefully #22252 no longer needs to be considered for this PR! Also removed the commit for `BroadcastTransaction()` since #22261 covers it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863953347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864001544",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-864001544",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22253",
    "id": 864001544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDAwMTU0NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-18T12:26:33Z",
    "updated_at": "2021-06-18T12:26:33Z",
    "author_association": "MEMBER",
    "body": "Code review ACK ea678026a7ca41659a09cab9ab5b989eed7d3bf9",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864001544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875563331",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-875563331",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22253",
    "id": 875563331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTU2MzMzMQ==",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?u=06eb9ae4f9b3f954056098860decccbf1340e40f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-07T12:31:07Z",
    "updated_at": "2021-07-07T12:31:07Z",
    "author_association": "MEMBER",
    "body": "The last commit has Antoine emails twice: \r\n```\r\nCo-authored-by: Antoine Riard <ariard@student.42.fr>\r\nCo-authored-by: Antoine Riard <antoine.riard@gmail.com>\r\n```\r\n\r\nNot that I care much, just pointing out it might be something odd.\r\n\r\n---------------------------\r\n\r\nAt a high level, I'm not getting lost with the justification of this in terms of [19645](https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-705109193).\r\n\r\nIf the plan is to have replacement of different-witness in the future, then why adding this error in the first place here? Do we need this in the meanwhile, until different-witness-replacement is merged?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875563331/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875573977",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-875573977",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22253",
    "id": 875573977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTU3Mzk3Nw==",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?u=3e27bc6589085f3450be1b0e969d04008cc77565&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-07T12:47:58Z",
    "updated_at": "2021-07-09T12:21:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> If the plan is to have replacement of different-witness in the future, then why adding this error in the first place here? Do we need this in the meanwhile, until different-witness-replacement is merged?\r\n\r\n- We are not adding an error; we are simply distinguishing between the two cases, returning different error messages, and adding a test for same-txid-different-wtxid.\r\n- The new error message is an improvement upon the current \"txn-already-in-mempool\" which, in the case of same-txid-different-witness, is inaccurate and confusing for users.\r\n- This is not in conflict with witness replacement; I hope that this speeds it up. :) Merging this first means that PRs that deal with same-txid-different-wtxid (hopefully) don't all conflict with each other.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875573977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875799008",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-875799008",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22253",
    "id": 875799008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTc5OTAwOA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-07T17:40:15Z",
    "updated_at": "2021-07-07T17:40:15Z",
    "author_association": "MEMBER",
    "body": "Since you're going to rebase, a few v smol suggestions for the test:\r\n\r\n<details>\r\n<summary>Diff</summary>\r\n\r\n```diff\r\n--- a/test/functional/mempool_accept_wtxid.py\r\n+++ b/test/functional/mempool_accept_wtxid.py\r\n@@ -7,46 +7,42 @@ Test mempool acceptance in case of an already known transaction\r\n with identical non-witness data different witness.\r\n \"\"\"\r\n \r\n-from test_framework.script import (\r\n-    CScript,\r\n-    OP_0,\r\n-    OP_TRUE,\r\n-    OP_IF,\r\n-    OP_HASH160,\r\n-    OP_EQUAL,\r\n-    OP_ELSE,\r\n-    OP_ENDIF,\r\n-    hash160,\r\n-)\r\n from test_framework.messages import (\r\n+    COIN,\r\n+    COutPoint,\r\n     CTransaction,\r\n     CTxIn,\r\n     CTxInWitness,\r\n     CTxOut,\r\n-    COutPoint,\r\n     sha256,\r\n-    COIN,\r\n-    ToHex,\r\n )\r\n-from test_framework.test_framework import BitcoinTestFramework\r\n-from test_framework.util import (\r\n-    assert_equal,\r\n+from test_framework.p2p import P2PTxInvStore\r\n+from test_framework.script import (\r\n+    CScript,\r\n+    OP_0,\r\n+    OP_ELSE,\r\n+    OP_ENDIF,\r\n+    OP_EQUAL,\r\n+    OP_HASH160,\r\n+    OP_IF,\r\n+    OP_TRUE,\r\n+    hash160,\r\n )\r\n+from test_framework.test_framework import BitcoinTestFramework\r\n+from test_framework.util import assert_equal\r\n \r\n class MempoolWtxidTest(BitcoinTestFramework):\r\n     def set_test_params(self):\r\n         self.num_nodes = 1\r\n         self.setup_clean_chain = True\r\n-        self.extra_args = [[\"-incrementalrelayfee=0\"]]\r\n \r\n     def run_test(self):\r\n         node = self.nodes[0]\r\n \r\n-        self.log.info('Start with empty mempool, and 200 blocks')\r\n-        privkeys = [node.get_deterministic_priv_key().key]\r\n+        self.log.info(\"Start with empty mempool\")\r\n         # The last 100 coinbase transactions are premature\r\n-        earliest_blockhash = node.generate(101)[0]\r\n-        txid = node.getblock(blockhash=earliest_blockhash, verbosity=2)[\"tx\"][0][\"txid\"]\r\n+        blockhash = node.generate(101)[0]\r\n+        txid = node.getblock(blockhash=blockhash, verbosity=2)[\"tx\"][0][\"txid\"]\r\n         assert_equal(node.getmempoolinfo()['size'], 0)\r\n \r\n         self.log.info(\"Submit parent with multiple script branches to mempool\")\r\n@@ -60,11 +56,12 @@ class MempoolWtxidTest(BitcoinTestFramework):\r\n         parent.vout.append(CTxOut(int(9.99998 * COIN), script_pubkey))\r\n         parent.rehash()\r\n \r\n+        privkeys = [node.get_deterministic_priv_key().key]\r\n         raw_parent = node.signrawtransactionwithkey(hexstring=parent.serialize().hex(), privkeys=privkeys)['hex']\r\n         parent_txid = node.sendrawtransaction(hexstring=raw_parent, maxfeerate=0)\r\n         node.generate(1)\r\n \r\n-        # Create a new segwit transaction with witness solving first branch\r\n+        # Create a new transaction with witness solving first branch\r\n         child_witness_script = CScript([OP_TRUE])\r\n         child_witness_program = sha256(child_witness_script)\r\n         child_script_pubkey = CScript([OP_0, child_witness_program])\r\n@@ -77,7 +74,7 @@ class MempoolWtxidTest(BitcoinTestFramework):\r\n         child_one_wtxid = child_one.getwtxid()\r\n         child_one_txid = child_one.rehash()\r\n \r\n-        # Create another identical segwit transaction with witness solving second branch\r\n+        # Create another identical transaction with witness solving second branch\r\n         child_two = CTransaction()\r\n         child_two.vin.append(CTxIn(COutPoint(int(parent_txid, 16), 0), b\"\"))\r\n         child_two.vout.append(CTxOut(int(9.99996 * COIN), child_script_pubkey))\r\n```\r\n\r\n</details>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/875799008/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876252987",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-876252987",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22253",
    "id": 876252987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjI1Mjk4Nw==",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?u=3e27bc6589085f3450be1b0e969d04008cc77565&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T08:44:08Z",
    "updated_at": "2021-07-08T08:44:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased and applied suggestions from https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-875799008",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876252987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876275948",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-876275948",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22253",
    "id": 876275948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjI3NTk0OA==",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?u=06eb9ae4f9b3f954056098860decccbf1340e40f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T09:16:11Z",
    "updated_at": "2021-07-08T09:16:11Z",
    "author_association": "MEMBER",
    "body": "ACK b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876275948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876341924",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-876341924",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22253",
    "id": 876341924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjM0MTkyNA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-08T10:58:40Z",
    "updated_at": "2021-07-08T10:58:40Z",
    "author_association": "MEMBER",
    "body": "Code review ACK b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/876341924/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651936906",
    "pull_request_review_id": 684204023,
    "id": 651936906,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MTkzNjkwNg==",
    "diff_hunk": "@@ -611,9 +611,13 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     if (!CheckFinalTx(m_active_chainstate.m_chain.Tip(), tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.Invalid(TxValidationResult::TX_PREMATURE_SPEND, \"non-final\");\n \n-    // is it already in the memory pool?\n-    if (m_pool.exists(hash)) {\n+    if (m_pool.exists(GenTxid(true, tx.GetWitnessHash()))) {\n+        // Exact transaction already exists in the mempool.\n         return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-already-in-mempool\");\n+    } else if (m_pool.exists(GenTxid(false, tx.GetHash()))) {\n+        // Transaction with the same nonwitness data but different witnes (same txid, different\n+        // wtxid) already exists in the mempool. TODO: allow replacements",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 11,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "TODOs in comments are generally discouraged. If someone wants to implement witness replacement, they don't need a TODO to tell them to do that.",
    "created_at": "2021-06-15T16:02:56Z",
    "updated_at": "2021-06-15T16:33:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r651936906",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651936906"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r651936906"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651936906/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 619,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651940492",
    "pull_request_review_id": 684204023,
    "id": 651940492,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MTk0MDQ5Mg==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test mempool acceptance in case of an already known transaction\n+with identical non-witness data different witness.\n+\"\"\"\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_0,\n+    OP_TRUE,\n+    OP_IF,\n+    OP_HASH160,\n+    OP_EQUAL,\n+    OP_ELSE,\n+    OP_ENDIF,\n+    hash160,\n+)\n+from test_framework.messages import (\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+    COutPoint,\n+    sha256,\n+    COIN,\n+    ToHex,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+class MempoolWtxidTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+        self.extra_args = [[\"-incrementalrelayfee=0\"]]\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.log.info('Start with empty mempool, and 200 blocks')\n+        self.privkeys = [node.get_deterministic_priv_key().key]\n+        self.address = node.get_deterministic_priv_key().address\n+        self.coins = []",
    "path": "test/functional/mempool_wtxid.py",
    "position": null,
    "original_position": 48,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No need for these to be member variables:\r\n\r\n```suggestion\r\n        privkeys = [node.get_deterministic_priv_key().key]\r\n        address = node.get_deterministic_priv_key().address\r\n        coins = []\r\n```",
    "created_at": "2021-06-15T16:07:32Z",
    "updated_at": "2021-06-15T16:33:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r651940492",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651940492"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r651940492"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651940492/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 46,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 48,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651941053",
    "pull_request_review_id": 684204023,
    "id": 651941053,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MTk0MTA1Mw==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test mempool acceptance in case of an already known transaction\n+with identical non-witness data different witness.\n+\"\"\"\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_0,\n+    OP_TRUE,\n+    OP_IF,\n+    OP_HASH160,\n+    OP_EQUAL,\n+    OP_ELSE,\n+    OP_ENDIF,\n+    hash160,\n+)\n+from test_framework.messages import (\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+    COutPoint,\n+    sha256,\n+    COIN,\n+    ToHex,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+class MempoolWtxidTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+        self.extra_args = [[\"-incrementalrelayfee=0\"]]\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.log.info('Start with empty mempool, and 200 blocks')\n+        self.privkeys = [node.get_deterministic_priv_key().key]\n+        self.address = node.get_deterministic_priv_key().address\n+        self.coins = []\n+        # The last 100 coinbase transactions are premature\n+        for b in node.generatetoaddress(110, self.address)[:-100]:",
    "path": "test/functional/mempool_wtxid.py",
    "position": null,
    "original_position": 50,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think you can just call `node.generate()` and it'll generate to the node's deterministic address.",
    "created_at": "2021-06-15T16:08:12Z",
    "updated_at": "2021-06-15T16:33:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r651941053",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651941053"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r651941053"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651941053/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 50,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651956121",
    "pull_request_review_id": 684204023,
    "id": 651956121,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MTk1NjEyMQ==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test mempool acceptance in case of an already known transaction\n+with identical non-witness data different witness.\n+\"\"\"\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_0,\n+    OP_TRUE,\n+    OP_IF,\n+    OP_HASH160,\n+    OP_EQUAL,\n+    OP_ELSE,\n+    OP_ENDIF,\n+    hash160,\n+)\n+from test_framework.messages import (\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+    COutPoint,\n+    sha256,\n+    COIN,\n+    ToHex,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+class MempoolWtxidTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+        self.extra_args = [[\"-incrementalrelayfee=0\"]]\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.log.info('Start with empty mempool, and 200 blocks')\n+        self.privkeys = [node.get_deterministic_priv_key().key]\n+        self.address = node.get_deterministic_priv_key().address\n+        self.coins = []\n+        # The last 100 coinbase transactions are premature\n+        for b in node.generatetoaddress(110, self.address)[:-100]:\n+            coinbase = node.getblock(blockhash=b, verbosity=2)[\"tx\"][0]\n+            self.coins.append({\n+                \"txid\": coinbase[\"txid\"],\n+                \"amount\": coinbase[\"vout\"][0][\"value\"],\n+                \"scriptPubKey\": coinbase[\"vout\"][0][\"scriptPubKey\"],\n+            })\n+        assert_equal(node.getmempoolinfo()['size'], 0)\n+\n+        txid = self.coins.pop()[\"txid\"]\n+\n+        self.log.info(\"Submit parent with multiple script branches to mempool\")\n+        hashlock = hash160(b'Preimage')\n+        witness_script = CScript([OP_IF, OP_HASH160, hashlock, OP_EQUAL, OP_ELSE, OP_TRUE, OP_ENDIF])\n+        witness_program = sha256(witness_script)\n+        script_pubkey = CScript([OP_0, witness_program])\n+\n+        parent = CTransaction()\n+        parent.vin.append(CTxIn(COutPoint(int(txid, 16), 0), b\"\"))\n+        parent.vout.append(CTxOut(int(9.99998 * COIN), script_pubkey))\n+        parent.rehash()\n+\n+        raw_parent = node.signrawtransactionwithkey(hexstring=parent.serialize().hex(), privkeys=self.privkeys)['hex']\n+        parent_txid = node.sendrawtransaction(hexstring=raw_parent, maxfeerate=0)\n+        node.generate(1)\n+\n+        # Create a new segwit transaction with witness solving first branch\n+        child_witness_script = CScript([OP_TRUE])\n+        child_witness_program = sha256(child_witness_script)\n+        child_script_pubkey = CScript([OP_0, child_witness_program])\n+\n+        child_one = CTransaction()\n+        child_one.vin.append(CTxIn(COutPoint(int(parent_txid, 16), 0), b\"\"))\n+        child_one.vout.append(CTxOut(int(9.99996 * COIN), child_script_pubkey))\n+        child_one.wit.vtxinwit.append(CTxInWitness())\n+        child_one.wit.vtxinwit[0].scriptWitness.stack = [b'Preimage', b'\\x01', witness_script]\n+        child_one_wtxid = child_one.getwtxid()\n+        child_one_txid = child_one.rehash()\n+\n+        # Create another identical segwit transaction with witness solving second branch\n+        child_two = CTransaction()\n+        child_two.vin.append(CTxIn(COutPoint(int(parent_txid, 16), 0), b\"\"))\n+        child_two.vout.append(CTxOut(int(9.99996 * COIN), child_script_pubkey))\n+        child_two.wit.vtxinwit.append(CTxInWitness())\n+        child_two.wit.vtxinwit[0].scriptWitness.stack = [b'', witness_script]\n+        child_two_wtxid = child_two.getwtxid()\n+        child_two_txid = child_two.rehash()\n+\n+        assert_equal(child_one_txid, child_two_txid)\n+        assert child_one_wtxid != child_two_wtxid\n+\n+        self.log.info(\"Submit one child to the mempool\")\n+        txid_submitted = node.sendrawtransaction(ToHex(child_one))\n+        assert_equal(node.getrawmempool(True)[txid_submitted]['wtxid'], child_one_wtxid)\n+\n+        # testmempoolaccept reports the \"already in mempool\" error\n+        assert_equal(node.testmempoolaccept([ToHex(child_one)]),",
    "path": "test/functional/mempool_wtxid.py",
    "position": null,
    "original_position": 106,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "can you break this into multiple lines like the `assert_equal()` below?",
    "created_at": "2021-06-15T16:25:59Z",
    "updated_at": "2021-06-15T16:33:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r651956121",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651956121"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r651956121"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/651956121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 106,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652255365",
    "pull_request_review_id": 684615208,
    "id": 652255365,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjI1NTM2NQ==",
    "diff_hunk": "@@ -50,7 +50,7 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n         // So if the output does exist, then this transaction exists in the chain.\n         if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n     }\n-    if (!node.mempool->exists(hashTx)) {\n+    if (!node.mempool->exists(GenTxid(false, tx->GetHash()))) {",
    "path": "src/node/transaction.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is this change altering behavior of `BroadcastTransaction` ? Otherwise maybe better to just rename `hashTx` to `txid`, update comment to \"Txid is not already in the mempool. Note if the submitted candidate differs by wtxid from an already present transaction, it's for now rejected\", and make it its own commit as it's only a documenting change ?",
    "created_at": "2021-06-16T00:08:06Z",
    "updated_at": "2021-06-16T00:40:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652255365",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652255365"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652255365"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652255365/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 53,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652257209",
    "pull_request_review_id": 684615208,
    "id": 652257209,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjI1NzIwOQ==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test mempool acceptance in case of an already known transaction\n+with identical non-witness data different witness.\n+\"\"\"",
    "path": "test/functional/mempool_wtxid.py",
    "position": null,
    "original_position": 8,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: I think the test could be called \"mempool_wtxid_acceptance\" because this is what it does exercising our mempool logic w.r.t to accepting candidates identified by wtxid imo ?",
    "created_at": "2021-06-16T00:13:52Z",
    "updated_at": "2021-06-16T00:40:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652257209",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652257209"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652257209"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652257209/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 8,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652260173",
    "pull_request_review_id": 684615208,
    "id": 652260173,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjI2MDE3Mw==",
    "diff_hunk": "@@ -611,9 +611,13 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     if (!CheckFinalTx(m_active_chainstate.m_chain.Tip(), tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.Invalid(TxValidationResult::TX_PREMATURE_SPEND, \"non-final\");\n \n-    // is it already in the memory pool?\n-    if (m_pool.exists(hash)) {\n+    if (m_pool.exists(GenTxid(true, tx.GetWitnessHash()))) {\n+        // Exact transaction already exists in the mempool.\n         return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-already-in-mempool\");\n+    } else if (m_pool.exists(GenTxid(false, tx.GetHash()))) {\n+        // Transaction with the same nonwitness data but different witnes (same txid, different\n+        // wtxid) already exists in the mempool. TODO: allow replacements\n+        return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-same-nonwitness-data-in-mempool\");",
    "path": "src/validation.cpp",
    "position": 12,
    "original_position": 12,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What do you think about \"mutant-replacement-disallowed\" as a rejection message ? Where a mutant is defined as a transaction sharing an equivalent txid of an already in-mempool transaction but offering differing witnesses. \r\n\r\nIt's quite kind of a glossary point but i don't think we have yet an unified term across the codebase to designate same-txid-diff-wtxid ? Maybe someone has a better naming proposal, but it sounds less verbose rather than duplicating \"same nonwitness data but different witness (same txid, different wtxid)\" everywhere in the code paths where this subtlety is present.",
    "created_at": "2021-06-16T00:22:54Z",
    "updated_at": "2021-06-16T00:40:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652260173",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652260173"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652260173"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652260173/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 596,
    "original_line": 596,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652262302",
    "pull_request_review_id": 684615208,
    "id": 652262302,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjI2MjMwMg==",
    "diff_hunk": "@@ -181,12 +181,15 @@ struct MempoolAcceptResult {\n     const std::optional<std::list<CTransactionRef>> m_replaced_transactions;\n     /** Raw base fees in satoshis. */\n     const std::optional<CAmount> m_base_fees;\n+    /** Size in virtual bytes. */\n+    const std::optional<int64_t> m_vsize;",
    "path": "src/validation.h",
    "position": null,
    "original_position": 5,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do you plan to use vbytes as an identifier to dissociate same-txid-different-wtxid transaction in `AcceptSingleTransaction` consumers ?\r\n\r\nI'm not sure it's absent of collisions, two mutants can have the same vbytes but yet different witnesses ? E.g, a P2WSH 1-of-2 spent by either Alice signature or Bob signature",
    "created_at": "2021-06-16T00:29:34Z",
    "updated_at": "2021-06-16T00:40:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652262302",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652262302"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652262302"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652262302/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 185,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652418951",
    "pull_request_review_id": 684811195,
    "id": 652418951,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjQxODk1MQ==",
    "diff_hunk": "@@ -181,12 +181,15 @@ struct MempoolAcceptResult {\n     const std::optional<std::list<CTransactionRef>> m_replaced_transactions;\n     /** Raw base fees in satoshis. */\n     const std::optional<CAmount> m_base_fees;\n+    /** Size in virtual bytes. */\n+    const std::optional<int64_t> m_vsize;",
    "path": "src/validation.h",
    "position": null,
    "original_position": 5,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nope. See https://github.com/bitcoin/bitcoin/pull/22252/commits/188cab0af2c5ee646f1467bd0a300d361ffd1fed - we need the vsize in the result because otherwise the RPC code doesn't know it without looking into the mempool (which would require holding the mempool lock).",
    "created_at": "2021-06-16T07:23:31Z",
    "updated_at": "2021-06-16T07:23:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652418951",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652418951"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652418951"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652418951/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 185,
    "side": "RIGHT",
    "in_reply_to_id": 652262302
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652421838",
    "pull_request_review_id": 684815247,
    "id": 652421838,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjQyMTgzOA==",
    "diff_hunk": "@@ -611,9 +611,13 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     if (!CheckFinalTx(m_active_chainstate.m_chain.Tip(), tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.Invalid(TxValidationResult::TX_PREMATURE_SPEND, \"non-final\");\n \n-    // is it already in the memory pool?\n-    if (m_pool.exists(hash)) {\n+    if (m_pool.exists(GenTxid(true, tx.GetWitnessHash()))) {\n+        // Exact transaction already exists in the mempool.\n         return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-already-in-mempool\");\n+    } else if (m_pool.exists(GenTxid(false, tx.GetHash()))) {\n+        // Transaction with the same nonwitness data but different witnes (same txid, different\n+        // wtxid) already exists in the mempool. TODO: allow replacements\n+        return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-same-nonwitness-data-in-mempool\");",
    "path": "src/validation.cpp",
    "position": 12,
    "original_position": 12,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think a user would find \"mutant-replacement-disallowed\" more helpful than \"txn-same-nonwitness-data-in-mempool.\" It would require them knowing what mutant replacement is (which doesn't exist yet), which requires knowing what a mutant is (which is not widely defined). It's confusing because it can imply that mutant replacement _is_ allowed somehwere else...\r\n\r\nIf/when the replacement policy is implemented, that would be an excellent time to give it a name. But at this point, what's relevant to users is \"a different transaction with the same nonwitness data is already in the mempool.\"",
    "created_at": "2021-06-16T07:27:37Z",
    "updated_at": "2021-06-16T07:27:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652421838",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652421838"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652421838"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652421838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 596,
    "original_line": 596,
    "side": "RIGHT",
    "in_reply_to_id": 652260173
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652429928",
    "pull_request_review_id": 684825588,
    "id": 652429928,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjQyOTkyOA==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test mempool acceptance in case of an already known transaction\n+with identical non-witness data different witness.\n+\"\"\"\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_0,\n+    OP_TRUE,\n+    OP_IF,\n+    OP_HASH160,\n+    OP_EQUAL,\n+    OP_ELSE,\n+    OP_ENDIF,\n+    hash160,\n+)\n+from test_framework.messages import (\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+    COutPoint,\n+    sha256,\n+    COIN,\n+    ToHex,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+class MempoolWtxidTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+        self.extra_args = [[\"-incrementalrelayfee=0\"]]\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.log.info('Start with empty mempool, and 200 blocks')\n+        self.privkeys = [node.get_deterministic_priv_key().key]\n+        self.address = node.get_deterministic_priv_key().address\n+        self.coins = []\n+        # The last 100 coinbase transactions are premature\n+        for b in node.generatetoaddress(110, self.address)[:-100]:",
    "path": "test/functional/mempool_wtxid.py",
    "position": null,
    "original_position": 50,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ohhh I didn't know that, I've been using `generatetoaddress` this whole time :scream:",
    "created_at": "2021-06-16T07:38:51Z",
    "updated_at": "2021-06-16T07:38:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652429928",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652429928"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652429928"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652429928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 50,
    "side": "RIGHT",
    "in_reply_to_id": 651941053
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652446361",
    "pull_request_review_id": 684846563,
    "id": 652446361,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjQ0NjM2MQ==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test mempool acceptance in case of an already known transaction\n+with identical non-witness data different witness.\n+\"\"\"",
    "path": "test/functional/mempool_wtxid.py",
    "position": null,
    "original_position": 8,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done!",
    "created_at": "2021-06-16T08:00:29Z",
    "updated_at": "2021-06-16T08:00:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652446361",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652446361"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652446361"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652446361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 8,
    "side": "RIGHT",
    "in_reply_to_id": 652257209
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652447133",
    "pull_request_review_id": 684847602,
    "id": 652447133,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjQ0NzEzMw==",
    "diff_hunk": "@@ -50,7 +50,7 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n         // So if the output does exist, then this transaction exists in the chain.\n         if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n     }\n-    if (!node.mempool->exists(hashTx)) {\n+    if (!node.mempool->exists(GenTxid(false, tx->GetHash()))) {",
    "path": "src/node/transaction.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good point, my intention is merely to highlight/document what the current behavior is. I've now marked the commits with \"changes / doesn't change behavior\" and switched this to just be a comment explaining the behavior.",
    "created_at": "2021-06-16T08:01:32Z",
    "updated_at": "2021-06-16T08:01:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652447133",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652447133"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652447133"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652447133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 53,
    "side": "RIGHT",
    "in_reply_to_id": 652255365
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652447349",
    "pull_request_review_id": 684847886,
    "id": 652447349,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjQ0NzM0OQ==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test mempool acceptance in case of an already known transaction\n+with identical non-witness data different witness.\n+\"\"\"\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_0,\n+    OP_TRUE,\n+    OP_IF,\n+    OP_HASH160,\n+    OP_EQUAL,\n+    OP_ELSE,\n+    OP_ENDIF,\n+    hash160,\n+)\n+from test_framework.messages import (\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+    COutPoint,\n+    sha256,\n+    COIN,\n+    ToHex,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+class MempoolWtxidTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+        self.extra_args = [[\"-incrementalrelayfee=0\"]]\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.log.info('Start with empty mempool, and 200 blocks')\n+        self.privkeys = [node.get_deterministic_priv_key().key]\n+        self.address = node.get_deterministic_priv_key().address\n+        self.coins = []\n+        # The last 100 coinbase transactions are premature\n+        for b in node.generatetoaddress(110, self.address)[:-100]:\n+            coinbase = node.getblock(blockhash=b, verbosity=2)[\"tx\"][0]\n+            self.coins.append({\n+                \"txid\": coinbase[\"txid\"],\n+                \"amount\": coinbase[\"vout\"][0][\"value\"],\n+                \"scriptPubKey\": coinbase[\"vout\"][0][\"scriptPubKey\"],\n+            })\n+        assert_equal(node.getmempoolinfo()['size'], 0)\n+\n+        txid = self.coins.pop()[\"txid\"]\n+\n+        self.log.info(\"Submit parent with multiple script branches to mempool\")\n+        hashlock = hash160(b'Preimage')\n+        witness_script = CScript([OP_IF, OP_HASH160, hashlock, OP_EQUAL, OP_ELSE, OP_TRUE, OP_ENDIF])\n+        witness_program = sha256(witness_script)\n+        script_pubkey = CScript([OP_0, witness_program])\n+\n+        parent = CTransaction()\n+        parent.vin.append(CTxIn(COutPoint(int(txid, 16), 0), b\"\"))\n+        parent.vout.append(CTxOut(int(9.99998 * COIN), script_pubkey))\n+        parent.rehash()\n+\n+        raw_parent = node.signrawtransactionwithkey(hexstring=parent.serialize().hex(), privkeys=self.privkeys)['hex']\n+        parent_txid = node.sendrawtransaction(hexstring=raw_parent, maxfeerate=0)\n+        node.generate(1)\n+\n+        # Create a new segwit transaction with witness solving first branch\n+        child_witness_script = CScript([OP_TRUE])\n+        child_witness_program = sha256(child_witness_script)\n+        child_script_pubkey = CScript([OP_0, child_witness_program])\n+\n+        child_one = CTransaction()\n+        child_one.vin.append(CTxIn(COutPoint(int(parent_txid, 16), 0), b\"\"))\n+        child_one.vout.append(CTxOut(int(9.99996 * COIN), child_script_pubkey))\n+        child_one.wit.vtxinwit.append(CTxInWitness())\n+        child_one.wit.vtxinwit[0].scriptWitness.stack = [b'Preimage', b'\\x01', witness_script]\n+        child_one_wtxid = child_one.getwtxid()\n+        child_one_txid = child_one.rehash()\n+\n+        # Create another identical segwit transaction with witness solving second branch\n+        child_two = CTransaction()\n+        child_two.vin.append(CTxIn(COutPoint(int(parent_txid, 16), 0), b\"\"))\n+        child_two.vout.append(CTxOut(int(9.99996 * COIN), child_script_pubkey))\n+        child_two.wit.vtxinwit.append(CTxInWitness())\n+        child_two.wit.vtxinwit[0].scriptWitness.stack = [b'', witness_script]\n+        child_two_wtxid = child_two.getwtxid()\n+        child_two_txid = child_two.rehash()\n+\n+        assert_equal(child_one_txid, child_two_txid)\n+        assert child_one_wtxid != child_two_wtxid\n+\n+        self.log.info(\"Submit one child to the mempool\")\n+        txid_submitted = node.sendrawtransaction(ToHex(child_one))\n+        assert_equal(node.getrawmempool(True)[txid_submitted]['wtxid'], child_one_wtxid)\n+\n+        # testmempoolaccept reports the \"already in mempool\" error\n+        assert_equal(node.testmempoolaccept([ToHex(child_one)]),",
    "path": "test/functional/mempool_wtxid.py",
    "position": null,
    "original_position": 106,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-06-16T08:01:49Z",
    "updated_at": "2021-06-16T08:01:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652447349",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652447349"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652447349"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652447349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 106,
    "side": "RIGHT",
    "in_reply_to_id": 651956121
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652447428",
    "pull_request_review_id": 684847999,
    "id": 652447428,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjQ0NzQyOA==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test mempool acceptance in case of an already known transaction\n+with identical non-witness data different witness.\n+\"\"\"\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_0,\n+    OP_TRUE,\n+    OP_IF,\n+    OP_HASH160,\n+    OP_EQUAL,\n+    OP_ELSE,\n+    OP_ENDIF,\n+    hash160,\n+)\n+from test_framework.messages import (\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+    COutPoint,\n+    sha256,\n+    COIN,\n+    ToHex,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+class MempoolWtxidTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+        self.extra_args = [[\"-incrementalrelayfee=0\"]]\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.log.info('Start with empty mempool, and 200 blocks')\n+        self.privkeys = [node.get_deterministic_priv_key().key]\n+        self.address = node.get_deterministic_priv_key().address\n+        self.coins = []\n+        # The last 100 coinbase transactions are premature\n+        for b in node.generatetoaddress(110, self.address)[:-100]:",
    "path": "test/functional/mempool_wtxid.py",
    "position": null,
    "original_position": 50,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-06-16T08:01:56Z",
    "updated_at": "2021-06-16T08:01:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652447428",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652447428"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652447428"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652447428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 50,
    "side": "RIGHT",
    "in_reply_to_id": 651941053
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652447709",
    "pull_request_review_id": 684848336,
    "id": 652447709,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjQ0NzcwOQ==",
    "diff_hunk": "@@ -0,0 +1,123 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test mempool acceptance in case of an already known transaction\n+with identical non-witness data different witness.\n+\"\"\"\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_0,\n+    OP_TRUE,\n+    OP_IF,\n+    OP_HASH160,\n+    OP_EQUAL,\n+    OP_ELSE,\n+    OP_ENDIF,\n+    hash160,\n+)\n+from test_framework.messages import (\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+    COutPoint,\n+    sha256,\n+    COIN,\n+    ToHex,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+class MempoolWtxidTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+        self.extra_args = [[\"-incrementalrelayfee=0\"]]\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.log.info('Start with empty mempool, and 200 blocks')\n+        self.privkeys = [node.get_deterministic_priv_key().key]\n+        self.address = node.get_deterministic_priv_key().address\n+        self.coins = []",
    "path": "test/functional/mempool_wtxid.py",
    "position": null,
    "original_position": 48,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done - got rid of some of it entirely since not needed for `generate()`",
    "created_at": "2021-06-16T08:02:15Z",
    "updated_at": "2021-06-16T08:02:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652447709",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652447709"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652447709"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652447709/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 46,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 48,
    "side": "RIGHT",
    "in_reply_to_id": 651940492
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652447870",
    "pull_request_review_id": 684848545,
    "id": 652447870,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjQ0Nzg3MA==",
    "diff_hunk": "@@ -611,9 +611,13 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     if (!CheckFinalTx(m_active_chainstate.m_chain.Tip(), tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.Invalid(TxValidationResult::TX_PREMATURE_SPEND, \"non-final\");\n \n-    // is it already in the memory pool?\n-    if (m_pool.exists(hash)) {\n+    if (m_pool.exists(GenTxid(true, tx.GetWitnessHash()))) {\n+        // Exact transaction already exists in the mempool.\n         return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-already-in-mempool\");\n+    } else if (m_pool.exists(GenTxid(false, tx.GetHash()))) {\n+        // Transaction with the same nonwitness data but different witnes (same txid, different\n+        // wtxid) already exists in the mempool. TODO: allow replacements",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 11,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Gotcha, fixed.",
    "created_at": "2021-06-16T08:02:28Z",
    "updated_at": "2021-06-16T08:02:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652447870",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652447870"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652447870"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652447870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 619,
    "side": "RIGHT",
    "in_reply_to_id": 651936906
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652525994",
    "pull_request_review_id": 684950419,
    "id": 652525994,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjUyNTk5NA==",
    "diff_hunk": "@@ -51,7 +51,11 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n         if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n     }\n     if (!node.mempool->exists(hashTx)) {\n-        // Transaction is not already in the mempool.\n+        // A transaction with the same txid is not already in the mempool. Note that it is still\n+        // possible for a transaction with same nonwitness data but different witness to be in the\n+        // mempool - in that case, we treat them as the same transaction and don't try to submit tx\n+        // to mempool. This logic must be changed if we allow replacements of\n+        // same-txid-different-wtxid transactions in the future.",
    "path": "src/node/transaction.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "81d92fac91838c424b08fe11458f07d0276f6a50",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I find this comment quite confusing. I initially read the \"Note that it is still possible for a transaction with same nonwitness data but different witness to be in the mempool.\" as meaning \"it is possible for this condition to be true in this code branch\".\r\n\r\nDoes this seem better to you:\r\n\r\n```diff\r\n-    if (!node.mempool->exists(hashTx)) {\r\n-        // A transaction with the same txid is not already in the mempool. Note that it is still\r\n-        // possible for a transaction with same nonwitness data but different witness to be in the\r\n-        // mempool - in that case, we treat them as the same transaction and don't try to submit tx\r\n-        // to mempool. This logic must be changed if we allow replacements of\r\n-        // same-txid-different-wtxid transactions in the future.\r\n+    if (node.mempool->exists(hashTx)) {\r\n+        // There's already a transaction in the mempool with this txid. Don't try to submit\r\n+        // this transaction to the mempool, but do attempt to reannounce it if relay=true.\r\n+        // The mempool transaction may have the same or different witness (and wtxid) as this\r\n+        // transaction.\r\n+    } else {\r\n```",
    "created_at": "2021-06-16T09:40:32Z",
    "updated_at": "2021-06-16T09:50:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652525994",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652525994"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652525994"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652525994/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 54,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652527692",
    "pull_request_review_id": 684950419,
    "id": 652527692,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MjUyNzY5Mg==",
    "diff_hunk": "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test mempool acceptance in case of an already known transaction\n+with identical non-witness data different witness.\n+\"\"\"\n+\n+from test_framework.script import (\n+    CScript,\n+    OP_0,\n+    OP_TRUE,\n+    OP_IF,\n+    OP_HASH160,\n+    OP_EQUAL,\n+    OP_ELSE,\n+    OP_ENDIF,\n+    hash160,\n+)\n+from test_framework.messages import (\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+    COutPoint,\n+    sha256,\n+    COIN,\n+    ToHex,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+class MempoolWtxidTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+        self.extra_args = [[\"-incrementalrelayfee=0\"]]\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.log.info('Start with empty mempool, and 200 blocks')\n+        privkeys = [node.get_deterministic_priv_key().key]\n+        coins = []\n+        # The last 100 coinbase transactions are premature\n+        for b in node.generate(110)[:-100]:\n+            coinbase = node.getblock(blockhash=b, verbosity=2)[\"tx\"][0]\n+            coins.append({\n+                \"txid\": coinbase[\"txid\"],\n+                \"amount\": coinbase[\"vout\"][0][\"value\"],\n+                \"scriptPubKey\": coinbase[\"vout\"][0][\"scriptPubKey\"],\n+            })\n+        assert_equal(node.getmempoolinfo()['size'], 0)\n+\n+        txid = coins.pop()[\"txid\"]",
    "path": "test/functional/mempool_accept_wtxid.py",
    "position": null,
    "original_position": 58,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "81d92fac91838c424b08fe11458f07d0276f6a50",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You don't need a `coins` list or all this logic. Just generate 101 blocks, then get the txid of the first transaction in the tip block.",
    "created_at": "2021-06-16T09:42:39Z",
    "updated_at": "2021-06-16T09:50:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652527692",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652527692"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652527692"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/652527692/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 47,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/653845005",
    "pull_request_review_id": 686682685,
    "id": 653845005,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1Mzg0NTAwNQ==",
    "diff_hunk": "@@ -181,12 +181,15 @@ struct MempoolAcceptResult {\n     const std::optional<std::list<CTransactionRef>> m_replaced_transactions;\n     /** Raw base fees in satoshis. */\n     const std::optional<CAmount> m_base_fees;\n+    /** Size in virtual bytes. */\n+    const std::optional<int64_t> m_vsize;",
    "path": "src/validation.h",
    "position": null,
    "original_position": 5,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think the commit you're pointing to me is a unittest, exercising this logic with a collision on vbytes ? Do you think we can't have vbytes collision among \"same-txid-different-wtxids\" candidates ?\r\n\r\n> we need the vsize in the result because otherwise the RPC code doesn't know it without looking into the mempool (which would require holding the mempool lock).\r\n\r\nSorry, I don't understand, what the RPC code is searching to know, the vbyte's size or an ambiguous identifer between \"same-txid-different-wtxids\" candidates ?",
    "created_at": "2021-06-17T18:43:30Z",
    "updated_at": "2021-06-17T18:43:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r653845005",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/653845005"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r653845005"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/653845005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 185,
    "side": "RIGHT",
    "in_reply_to_id": 652262302
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/653847058",
    "pull_request_review_id": 686684777,
    "id": 653847058,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1Mzg0NzA1OA==",
    "diff_hunk": "@@ -611,9 +611,13 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     if (!CheckFinalTx(m_active_chainstate.m_chain.Tip(), tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.Invalid(TxValidationResult::TX_PREMATURE_SPEND, \"non-final\");\n \n-    // is it already in the memory pool?\n-    if (m_pool.exists(hash)) {\n+    if (m_pool.exists(GenTxid(true, tx.GetWitnessHash()))) {\n+        // Exact transaction already exists in the mempool.\n         return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-already-in-mempool\");\n+    } else if (m_pool.exists(GenTxid(false, tx.GetHash()))) {\n+        // Transaction with the same nonwitness data but different witnes (same txid, different\n+        // wtxid) already exists in the mempool. TODO: allow replacements\n+        return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-same-nonwitness-data-in-mempool\");",
    "path": "src/validation.cpp",
    "position": 12,
    "original_position": 12,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "012341f779f4b82a757f30ef36810d8f8a1975dc",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fair point, it's quite a chicken-and-egg issue, either you pollute the codebases with multiple times verbose variable names like \"same-txid-different-wtxid\", which are less unambiguous or you find one name, defined somehwhere in the codebase, and hope to reviewers to refer it during discussion.\r\n\r\nYes it can be added latter for sure, once we add mutant replacement.",
    "created_at": "2021-06-17T18:46:00Z",
    "updated_at": "2021-06-17T18:46:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r653847058",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/653847058"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r653847058"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/653847058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 596,
    "original_line": 596,
    "side": "RIGHT",
    "in_reply_to_id": 652260173
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665318684",
    "pull_request_review_id": 700936908,
    "id": 665318684,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTMxODY4NA==",
    "diff_hunk": "@@ -611,9 +611,13 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     if (!CheckFinalTx(m_active_chainstate.m_chain.Tip(), tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.Invalid(TxValidationResult::TX_PREMATURE_SPEND, \"non-final\");\n \n-    // is it already in the memory pool?\n-    if (m_pool.exists(hash)) {\n+    if (m_pool.exists(GenTxid(true, tx.GetWitnessHash()))) {\n+        // Exact transaction already exists in the mempool.\n         return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-already-in-mempool\");\n+    } else if (m_pool.exists(GenTxid(false, tx.GetHash()))) {\n+        // Transaction with the same nonwitness data but different witnes (same txid, different",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "e64776154f063fa3a281039edd7a38bb7154e720",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "typo: \"witnes\"",
    "created_at": "2021-07-07T12:22:52Z",
    "updated_at": "2021-07-07T12:22:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r665318684",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665318684"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r665318684"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665318684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 618,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665514255",
    "pull_request_review_id": 701196049,
    "id": 665514255,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTUxNDI1NQ==",
    "diff_hunk": "@@ -611,9 +611,13 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     if (!CheckFinalTx(m_active_chainstate.m_chain.Tip(), tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.Invalid(TxValidationResult::TX_PREMATURE_SPEND, \"non-final\");\n \n-    // is it already in the memory pool?\n-    if (m_pool.exists(hash)) {\n+    if (m_pool.exists(GenTxid(true, tx.GetWitnessHash()))) {\n+        // Exact transaction already exists in the mempool.\n         return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-already-in-mempool\");\n+    } else if (m_pool.exists(GenTxid(false, tx.GetHash()))) {\n+        // Transaction with the same nonwitness data but different witnes (same txid, different",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "e64776154f063fa3a281039edd7a38bb7154e720",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: s/nonwitness/non-witness/\r\nRationale:\r\n```\r\n$ git grep nonwitness | wc -l\r\n0\r\n$ git grep non-witness | wc -l\r\n39\r\n``` ",
    "created_at": "2021-07-07T16:07:27Z",
    "updated_at": "2021-07-07T16:16:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r665514255",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665514255"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r665514255"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665514255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 618,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665534425",
    "pull_request_review_id": 701222110,
    "id": 665534425,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTUzNDQyNQ==",
    "diff_hunk": "@@ -611,9 +611,13 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     if (!CheckFinalTx(m_active_chainstate.m_chain.Tip(), tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.Invalid(TxValidationResult::TX_PREMATURE_SPEND, \"non-final\");\n \n-    // is it already in the memory pool?\n-    if (m_pool.exists(hash)) {\n+    if (m_pool.exists(GenTxid(true, tx.GetWitnessHash()))) {\n+        // Exact transaction already exists in the mempool.\n         return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-already-in-mempool\");\n+    } else if (m_pool.exists(GenTxid(false, tx.GetHash()))) {\n+        // Transaction with the same nonwitness data but different witnes (same txid, different",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "e64776154f063fa3a281039edd7a38bb7154e720",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "makes sense, will use non-witness from now on!",
    "created_at": "2021-07-07T16:33:59Z",
    "updated_at": "2021-07-07T16:33:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r665534425",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665534425"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r665534425"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665534425/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 618,
    "side": "RIGHT",
    "in_reply_to_id": 665514255
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665993902",
    "pull_request_review_id": 701797940,
    "id": 665993902,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTk5MzkwMg==",
    "diff_hunk": "@@ -611,9 +611,13 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     if (!CheckFinalTx(m_active_chainstate.m_chain.Tip(), tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.Invalid(TxValidationResult::TX_PREMATURE_SPEND, \"non-final\");\n \n-    // is it already in the memory pool?\n-    if (m_pool.exists(hash)) {\n+    if (m_pool.exists(GenTxid(true, tx.GetWitnessHash()))) {\n+        // Exact transaction already exists in the mempool.\n         return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-already-in-mempool\");\n+    } else if (m_pool.exists(GenTxid(false, tx.GetHash()))) {\n+        // Transaction with the same nonwitness data but different witnes (same txid, different",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "e64776154f063fa3a281039edd7a38bb7154e720",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-07-08T08:44:20Z",
    "updated_at": "2021-07-08T08:44:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r665993902",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665993902"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r665993902"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665993902/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 618,
    "side": "RIGHT",
    "in_reply_to_id": 665514255
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665994005",
    "pull_request_review_id": 701798103,
    "id": 665994005,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTk5NDAwNQ==",
    "diff_hunk": "@@ -611,9 +611,13 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     if (!CheckFinalTx(m_active_chainstate.m_chain.Tip(), tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.Invalid(TxValidationResult::TX_PREMATURE_SPEND, \"non-final\");\n \n-    // is it already in the memory pool?\n-    if (m_pool.exists(hash)) {\n+    if (m_pool.exists(GenTxid(true, tx.GetWitnessHash()))) {\n+        // Exact transaction already exists in the mempool.\n         return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-already-in-mempool\");\n+    } else if (m_pool.exists(GenTxid(false, tx.GetHash()))) {\n+        // Transaction with the same nonwitness data but different witnes (same txid, different",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "e64776154f063fa3a281039edd7a38bb7154e720",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed",
    "created_at": "2021-07-08T08:44:30Z",
    "updated_at": "2021-07-08T08:44:31Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r665994005",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665994005"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r665994005"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/665994005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 618,
    "side": "RIGHT",
    "in_reply_to_id": 665318684
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666933370",
    "pull_request_review_id": 703027841,
    "id": 666933370,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NjkzMzM3MA==",
    "diff_hunk": "@@ -0,0 +1,116 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test mempool acceptance in case of an already known transaction\n+with identical non-witness data different witness.",
    "path": "test/functional/mempool_accept_wtxid.py",
    "position": 7,
    "original_position": 7,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit:\r\n```suggestion\r\nwith identical non-witness data but different witness.\r\n```",
    "created_at": "2021-07-09T13:04:25Z",
    "updated_at": "2021-07-09T13:37:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r666933370",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666933370"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r666933370"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666933370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 7,
    "original_line": 7,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666933993",
    "pull_request_review_id": 703027841,
    "id": 666933993,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NjkzMzk5Mw==",
    "diff_hunk": "@@ -0,0 +1,116 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test mempool acceptance in case of an already known transaction\n+with identical non-witness data different witness.\n+\"\"\"\n+\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+    sha256,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_0,\n+    OP_ELSE,\n+    OP_ENDIF,\n+    OP_EQUAL,\n+    OP_HASH160,\n+    OP_IF,\n+    OP_TRUE,\n+    hash160,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+class MempoolWtxidTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.log.info('Start with empty mempool and 101 blocks')\n+        # The last 100 coinbase transactions are premature\n+        blockhash = node.generate(101)[0]\n+        txid = node.getblock(blockhash=blockhash, verbosity=2)[\"tx\"][0][\"txid\"]\n+        assert_equal(node.getmempoolinfo()['size'], 0)\n+\n+        self.log.info(\"Submit parent with multiple script branches to mempool\")\n+        hashlock = hash160(b'Preimage')\n+        witness_script = CScript([OP_IF, OP_HASH160, hashlock, OP_EQUAL, OP_ELSE, OP_TRUE, OP_ENDIF])\n+        witness_program = sha256(witness_script)\n+        script_pubkey = CScript([OP_0, witness_program])\n+\n+        parent = CTransaction()\n+        parent.vin.append(CTxIn(COutPoint(int(txid, 16), 0), b\"\"))\n+        parent.vout.append(CTxOut(int(9.99998 * COIN), script_pubkey))\n+        parent.rehash()\n+\n+        privkeys = [node.get_deterministic_priv_key().key]\n+        raw_parent = node.signrawtransactionwithkey(hexstring=parent.serialize().hex(), privkeys=privkeys)['hex']\n+        parent_txid = node.sendrawtransaction(hexstring=raw_parent, maxfeerate=0)\n+        node.generate(1)\n+\n+        # Create a new transaction with witness solving first branch\n+        child_witness_script = CScript([OP_TRUE])\n+        child_witness_program = sha256(child_witness_script)\n+        child_script_pubkey = CScript([OP_0, child_witness_program])\n+\n+        child_one = CTransaction()\n+        child_one.vin.append(CTxIn(COutPoint(int(parent_txid, 16), 0), b\"\"))\n+        child_one.vout.append(CTxOut(int(9.99996 * COIN), child_script_pubkey))\n+        child_one.wit.vtxinwit.append(CTxInWitness())\n+        child_one.wit.vtxinwit[0].scriptWitness.stack = [b'Preimage', b'\\x01', witness_script]\n+        child_one_wtxid = child_one.getwtxid()\n+        child_one_txid = child_one.rehash()\n+\n+        # Create another identical transaction with witness solving second branch\n+        child_two = CTransaction()\n+        child_two.vin.append(CTxIn(COutPoint(int(parent_txid, 16), 0), b\"\"))\n+        child_two.vout.append(CTxOut(int(9.99996 * COIN), child_script_pubkey))\n+        child_two.wit.vtxinwit.append(CTxInWitness())\n+        child_two.wit.vtxinwit[0].scriptWitness.stack = [b'', witness_script]\n+        child_two_wtxid = child_two.getwtxid()\n+        child_two_txid = child_two.rehash()\n+\n+        assert_equal(child_one_txid, child_two_txid)\n+        assert child_one_wtxid != child_two_wtxid\n+\n+        self.log.info(\"Submit one child to the mempool\")\n+        txid_submitted = node.sendrawtransaction(child_one.serialize().hex())\n+        assert_equal(node.getrawmempool(True)[txid_submitted]['wtxid'], child_one_wtxid)\n+\n+        # testmempoolaccept reports the \"already in mempool\" error\n+        assert_equal(node.testmempoolaccept([child_one.serialize().hex()]), [{\n+            \"txid\": child_one_txid,\n+            \"wtxid\": child_one_wtxid,\n+            \"allowed\": False,\n+            \"reject-reason\": \"txn-already-in-mempool\"\n+        }])\n+        testres_child_two = node.testmempoolaccept([child_two.serialize().hex()])[0]\n+        assert_equal(testres_child_two, {",
    "path": "test/functional/mempool_accept_wtxid.py",
    "position": 102,
    "original_position": 102,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, could be simplified (like for `child_one` above):\r\n```suggestion\r\n        assert_equal(node.testmempoolaccept([child_two.serialize().hex()]), [{\r\n```",
    "created_at": "2021-07-09T13:05:33Z",
    "updated_at": "2021-07-09T13:37:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r666933993",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666933993"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r666933993"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666933993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 101,
    "original_start_line": 101,
    "start_side": "RIGHT",
    "line": 102,
    "original_line": 102,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666940629",
    "pull_request_review_id": 703027841,
    "id": 666940629,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Njk0MDYyOQ==",
    "diff_hunk": "@@ -0,0 +1,116 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test mempool acceptance in case of an already known transaction\n+with identical non-witness data different witness.\n+\"\"\"\n+\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+    sha256,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_0,\n+    OP_ELSE,\n+    OP_ENDIF,\n+    OP_EQUAL,\n+    OP_HASH160,\n+    OP_IF,\n+    OP_TRUE,\n+    hash160,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+class MempoolWtxidTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+\n+        self.log.info('Start with empty mempool and 101 blocks')\n+        # The last 100 coinbase transactions are premature\n+        blockhash = node.generate(101)[0]\n+        txid = node.getblock(blockhash=blockhash, verbosity=2)[\"tx\"][0][\"txid\"]\n+        assert_equal(node.getmempoolinfo()['size'], 0)\n+\n+        self.log.info(\"Submit parent with multiple script branches to mempool\")\n+        hashlock = hash160(b'Preimage')\n+        witness_script = CScript([OP_IF, OP_HASH160, hashlock, OP_EQUAL, OP_ELSE, OP_TRUE, OP_ENDIF])\n+        witness_program = sha256(witness_script)\n+        script_pubkey = CScript([OP_0, witness_program])\n+\n+        parent = CTransaction()\n+        parent.vin.append(CTxIn(COutPoint(int(txid, 16), 0), b\"\"))\n+        parent.vout.append(CTxOut(int(9.99998 * COIN), script_pubkey))\n+        parent.rehash()\n+\n+        privkeys = [node.get_deterministic_priv_key().key]\n+        raw_parent = node.signrawtransactionwithkey(hexstring=parent.serialize().hex(), privkeys=privkeys)['hex']\n+        parent_txid = node.sendrawtransaction(hexstring=raw_parent, maxfeerate=0)\n+        node.generate(1)\n+\n+        # Create a new transaction with witness solving first branch\n+        child_witness_script = CScript([OP_TRUE])\n+        child_witness_program = sha256(child_witness_script)\n+        child_script_pubkey = CScript([OP_0, child_witness_program])\n+\n+        child_one = CTransaction()\n+        child_one.vin.append(CTxIn(COutPoint(int(parent_txid, 16), 0), b\"\"))\n+        child_one.vout.append(CTxOut(int(9.99996 * COIN), child_script_pubkey))\n+        child_one.wit.vtxinwit.append(CTxInWitness())\n+        child_one.wit.vtxinwit[0].scriptWitness.stack = [b'Preimage', b'\\x01', witness_script]\n+        child_one_wtxid = child_one.getwtxid()\n+        child_one_txid = child_one.rehash()\n+\n+        # Create another identical transaction with witness solving second branch\n+        child_two = CTransaction()\n+        child_two.vin.append(CTxIn(COutPoint(int(parent_txid, 16), 0), b\"\"))\n+        child_two.vout.append(CTxOut(int(9.99996 * COIN), child_script_pubkey))\n+        child_two.wit.vtxinwit.append(CTxInWitness())\n+        child_two.wit.vtxinwit[0].scriptWitness.stack = [b'', witness_script]",
    "path": "test/functional/mempool_accept_wtxid.py",
    "position": 83,
    "original_position": 83,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "possible dedup alternative, since the txs only differ in one part:\r\n```suggestion\r\n        child_two = copy.deepcopy(child_one)\r\n        child_two.wit.vtxinwit[0].scriptWitness.stack = [b'', witness_script]\r\n```",
    "created_at": "2021-07-09T13:16:07Z",
    "updated_at": "2021-07-09T13:37:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r666940629",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666940629"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r666940629"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666940629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 79,
    "original_start_line": 79,
    "start_side": "RIGHT",
    "line": 83,
    "original_line": 83,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667070938",
    "pull_request_review_id": 703213116,
    "id": 667070938,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzA3MDkzOA==",
    "diff_hunk": "@@ -587,9 +587,13 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     if (!CheckFinalTx(m_active_chainstate.m_chain.Tip(), tx, STANDARD_LOCKTIME_VERIFY_FLAGS))\n         return state.Invalid(TxValidationResult::TX_PREMATURE_SPEND, \"non-final\");\n \n-    // is it already in the memory pool?\n-    if (m_pool.exists(hash)) {\n+    if (m_pool.exists(GenTxid(true, tx.GetWitnessHash()))) {\n+        // Exact transaction already exists in the mempool.\n         return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-already-in-mempool\");\n+    } else if (m_pool.exists(GenTxid(false, tx.GetHash()))) {",
    "path": "src/validation.cpp",
    "position": 9,
    "original_position": 9,
    "commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "original_commit_id": "b7a8cd9963e810264d3b45d0ad15af863965c47a",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(One nicety if you pass this way again.)\r\n```diff\r\n-    if (m_pool.exists(GenTxid(true, tx.GetWitnessHash()))) {\r\n+    if (m_pool.exists(GenTxid(/* is_wtxid */ true, tx.GetWitnessHash()))) {\r\n         // Exact transaction already exists in the mempool.\r\n         return state.Invalid(TxValidationResult::TX_CONFLICT, \"txn-already-in-mempool\");\r\n-    } else if (m_pool.exists(GenTxid(false, tx.GetHash()))) {\r\n+    } else if (m_pool.exists(GenTxid(/* is_wtxid */ false, tx.GetHash()))) {\r\n```\r\n",
    "created_at": "2021-07-09T16:25:14Z",
    "updated_at": "2021-07-09T16:25:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r667070938",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667070938"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22253#discussion_r667070938"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22253"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667070938/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 593,
    "original_line": 593,
    "side": "RIGHT"
  }
]