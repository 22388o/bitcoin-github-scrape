glozow,2021-06-15 16:52:52,CC @ariard - The same-txid-different-wtxid issue was initially pointed out in #19645 and the test commit is converted from https://github.com/bitcoin/bitcoin/pull/19645/commits/d86e7a17081af04ceabe93b15a87cf295a9e9d84,https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-861665545,861665545,
DrahtBot,2021-06-15 20:25:49,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22261 by jnewbery\n* #22252 by glozow\n\nIf you consider this pull request important, please also help to review the conf",https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-861807755,861807755,
jnewbery,2021-06-16 15:48:41,ACK e6ba22edbc13f29d53f2dc0fcdcff49df879f597,https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-862492811,862492811,
ariard,2021-06-17 18:54:08,"@glozow \n\nYou know i'm quite bothered by you reaching offline, asking me to re-use my work with #19645 and the well-foundness of #22252, of which I said it wasn't really required for a v0.1 package-relay and that we should be [careful](https://github.com/bitcoin/bitcoin/pull/22252#issuecomment-861930852) before considering this change.\n\nI still appreciate the energy and dedication you're p",https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-863485755,863485755,
glozow,2021-06-18 10:21:01,"@ariard We discussed this [8 months ago on github, when you posted that you would open the PR to make this change](https://github.com/bitcoin/bitcoin/pull/19645#issuecomment-705109193). I felt that there was a bit of urgency which is why I wanted to PR it, and messaged you privately to make sure we wouldn't be doing redundant work. That's my view, and I can also see that having multiple private/pu",https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-863932473,863932473,
glozow,2021-06-18 10:59:07,I've updated the description and removed commits that aren't strictly about same-txid-different-wtxid. Hopefully #22252 no longer needs to be considered for this PR! Also removed the commit for `BroadcastTransaction()` since #22261 covers it.,https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-863953347,863953347,
jnewbery,2021-06-18 12:26:33,Code review ACK ea678026a7ca41659a09cab9ab5b989eed7d3bf9,https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-864001544,864001544,
naumenkogs,2021-07-07 12:31:07,"The last commit has Antoine emails twice: \n```\nCo-authored-by: Antoine Riard <ariard@student.42.fr>\nCo-authored-by: Antoine Riard <antoine.riard@gmail.com>\n```\n\nNot that I care much, just pointing out it might be something odd.\n\n---------------------------\n\nAt a high level, I'm not getting lost with the justification of this in terms of [19645](https://github.com/bitcoin/bitcoi",https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-875563331,875563331,
glozow,2021-07-07 12:47:58,"> If the plan is to have replacement of different-witness in the future, then why adding this error in the first place here? Do we need this in the meanwhile, until different-witness-replacement is merged?\n\n- We are not adding an error; we are simply distinguishing between the two cases, returning different error messages, and adding a test for same-txid-different-wtxid.\n- The new error mess",https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-875573977,875573977,
jnewbery,2021-07-07 17:40:15,"Since you're going to rebase, a few v smol suggestions for the test:\n\n<details>\n<summary>Diff</summary>\n\n```diff\n--- a/test/functional/mempool_accept_wtxid.py\n+++ b/test/functional/mempool_accept_wtxid.py\n@@ -7,46 +7,42 @@ Test mempool acceptance in case of an already known transaction\n with identical non-witness data different witness.\n """"""\n \n-from test_framework.script im",https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-875799008,875799008,
glozow,2021-07-08 08:44:08,Rebased and applied suggestions from https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-875799008,https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-876252987,876252987,
naumenkogs,2021-07-08 09:16:11,ACK b7a8cd9963e810264d3b45d0ad15af863965c47a,https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-876275948,876275948,
jnewbery,2021-07-08 10:58:40,Code review ACK b7a8cd9963e810264d3b45d0ad15af863965c47a,https://github.com/bitcoin/bitcoin/pull/22253#issuecomment-876341924,876341924,
jnewbery,2021-06-15 16:02:56,"TODOs in comments are generally discouraged. If someone wants to implement witness replacement, they don't need a TODO to tell them to do that.",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r651936906,651936906,src/validation.cpp
jnewbery,2021-06-15 16:07:32,"No need for these to be member variables:\n\n```suggestion\n        privkeys = [node.get_deterministic_priv_key().key]\n        address = node.get_deterministic_priv_key().address\n        coins = []\n```",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r651940492,651940492,test/functional/mempool_wtxid.py
jnewbery,2021-06-15 16:08:12,I think you can just call `node.generate()` and it'll generate to the node's deterministic address.,https://github.com/bitcoin/bitcoin/pull/22253#discussion_r651941053,651941053,test/functional/mempool_wtxid.py
jnewbery,2021-06-15 16:25:59,can you break this into multiple lines like the `assert_equal()` below?,https://github.com/bitcoin/bitcoin/pull/22253#discussion_r651956121,651956121,test/functional/mempool_wtxid.py
ariard,2021-06-16 00:08:06,"Is this change altering behavior of `BroadcastTransaction` ? Otherwise maybe better to just rename `hashTx` to `txid`, update comment to ""Txid is not already in the mempool. Note if the submitted candidate differs by wtxid from an already present transaction, it's for now rejected"", and make it its own commit as it's only a documenting change ?",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652255365,652255365,src/node/transaction.cpp
ariard,2021-06-16 00:13:52,"nit: I think the test could be called ""mempool_wtxid_acceptance"" because this is what it does exercising our mempool logic w.r.t to accepting candidates identified by wtxid imo ?",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652257209,652257209,test/functional/mempool_wtxid.py
ariard,2021-06-16 00:22:54,"What do you think about ""mutant-replacement-disallowed"" as a rejection message ? Where a mutant is defined as a transaction sharing an equivalent txid of an already in-mempool transaction but offering differing witnesses. \n\nIt's quite kind of a glossary point but i don't think we have yet an unified term across the codebase to designate same-txid-diff-wtxid ? Maybe someone has a better naming ",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652260173,652260173,src/validation.cpp
ariard,2021-06-16 00:29:34,"Do you plan to use vbytes as an identifier to dissociate same-txid-different-wtxid transaction in `AcceptSingleTransaction` consumers ?\n\nI'm not sure it's absent of collisions, two mutants can have the same vbytes but yet different witnesses ? E.g, a P2WSH 1-of-2 spent by either Alice signature or Bob signature",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652262302,652262302,src/validation.h
glozow,2021-06-16 07:23:31,Nope. See https://github.com/bitcoin/bitcoin/pull/22252/commits/188cab0af2c5ee646f1467bd0a300d361ffd1fed - we need the vsize in the result because otherwise the RPC code doesn't know it without looking into the mempool (which would require holding the mempool lock).,https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652418951,652418951,src/validation.h
glozow,2021-06-16 07:27:37,"I don't think a user would find ""mutant-replacement-disallowed"" more helpful than ""txn-same-nonwitness-data-in-mempool."" It would require them knowing what mutant replacement is (which doesn't exist yet), which requires knowing what a mutant is (which is not widely defined). It's confusing because it can imply that mutant replacement _is_ allowed somehwere else...\n\nIf/when the replacement poli",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652421838,652421838,src/validation.cpp
glozow,2021-06-16 07:38:51,"Ohhh I didn't know that, I've been using `generatetoaddress` this whole time :scream:",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652429928,652429928,test/functional/mempool_wtxid.py
glozow,2021-06-16 08:00:29,Done!,https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652446361,652446361,test/functional/mempool_wtxid.py
glozow,2021-06-16 08:01:32,"Good point, my intention is merely to highlight/document what the current behavior is. I've now marked the commits with ""changes / doesn't change behavior"" and switched this to just be a comment explaining the behavior.",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652447133,652447133,src/node/transaction.cpp
glozow,2021-06-16 08:01:49,Done,https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652447349,652447349,test/functional/mempool_wtxid.py
glozow,2021-06-16 08:01:56,Done,https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652447428,652447428,test/functional/mempool_wtxid.py
glozow,2021-06-16 08:02:15,Done - got rid of some of it entirely since not needed for `generate()`,https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652447709,652447709,test/functional/mempool_wtxid.py
glozow,2021-06-16 08:02:28,"Gotcha, fixed.",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652447870,652447870,src/validation.cpp
jnewbery,2021-06-16 09:40:32,"I find this comment quite confusing. I initially read the ""Note that it is still possible for a transaction with same nonwitness data but different witness to be in the mempool."" as meaning ""it is possible for this condition to be true in this code branch"".\n\nDoes this seem better to you:\n\n```diff\n-    if (!node.mempool->exists(hashTx)) {\n-        // A transaction with the same txid is ",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652525994,652525994,src/node/transaction.cpp
jnewbery,2021-06-16 09:42:39,"You don't need a `coins` list or all this logic. Just generate 101 blocks, then get the txid of the first transaction in the tip block.",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r652527692,652527692,test/functional/mempool_accept_wtxid.py
ariard,2021-06-17 18:43:30,"I don't think the commit you're pointing to me is a unittest, exercising this logic with a collision on vbytes ? Do you think we can't have vbytes collision among ""same-txid-different-wtxids"" candidates ?\n\n> we need the vsize in the result because otherwise the RPC code doesn't know it without looking into the mempool (which would require holding the mempool lock).\n\nSorry, I don't understa",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r653845005,653845005,src/validation.h
ariard,2021-06-17 18:46:00,"Fair point, it's quite a chicken-and-egg issue, either you pollute the codebases with multiple times verbose variable names like ""same-txid-different-wtxid"", which are less unambiguous or you find one name, defined somehwhere in the codebase, and hope to reviewers to refer it during discussion.\n\nYes it can be added latter for sure, once we add mutant replacement.",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r653847058,653847058,src/validation.cpp
naumenkogs,2021-07-07 12:22:52,"typo: ""witnes""",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r665318684,665318684,src/validation.cpp
theStack,2021-07-07 16:07:27,"nit: s/nonwitness/non-witness/\nRationale:\n```\n$ git grep nonwitness | wc -l\n0\n$ git grep non-witness | wc -l\n39\n``` ",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r665514255,665514255,src/validation.cpp
glozow,2021-07-07 16:33:59,"makes sense, will use non-witness from now on!",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r665534425,665534425,src/validation.cpp
glozow,2021-07-08 08:44:20,Done,https://github.com/bitcoin/bitcoin/pull/22253#discussion_r665993902,665993902,src/validation.cpp
glozow,2021-07-08 08:44:30,Fixed,https://github.com/bitcoin/bitcoin/pull/22253#discussion_r665994005,665994005,src/validation.cpp
theStack,2021-07-09 13:04:25,"nit:\n```suggestion\nwith identical non-witness data but different witness.\n```",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r666933370,666933370,test/functional/mempool_accept_wtxid.py
theStack,2021-07-09 13:05:33,"nit, could be simplified (like for `child_one` above):\n```suggestion\n        assert_equal(node.testmempoolaccept([child_two.serialize().hex()]), [{\n```",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r666933993,666933993,test/functional/mempool_accept_wtxid.py
theStack,2021-07-09 13:16:07,"possible dedup alternative, since the txs only differ in one part:\n```suggestion\n        child_two = copy.deepcopy(child_one)\n        child_two.wit.vtxinwit[0].scriptWitness.stack = [b'', witness_script]\n```",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r666940629,666940629,test/functional/mempool_accept_wtxid.py
jonatack,2021-07-09 16:25:14,"(One nicety if you pass this way again.)\n```diff\n-    if (m_pool.exists(GenTxid(true, tx.GetWitnessHash()))) {\n+    if (m_pool.exists(GenTxid(/* is_wtxid */ true, tx.GetWitnessHash()))) {\n         // Exact transaction already exists in the mempool.\n         return state.Invalid(TxValidationResult::TX_CONFLICT, ""txn-already-in-mempool"");\n-    } else if (m_pool.exists(GenTxid(false, tx.G",https://github.com/bitcoin/bitcoin/pull/22253#discussion_r667070938,667070938,src/validation.cpp
