[
  {
    "sha": "dac314a8868c4fc5b52a1d7b00be755492b4ea1e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYWMzMTRhODg2OGM0ZmM1YjUyYTFkN2IwMGJlNzU1NDkyYjRlYTFl",
    "commit": {
      "author": {
        "name": "Forrest Voight",
        "email": "forrest@forre.st",
        "date": "2011-07-26T16:29:56Z"
      },
      "committer": {
        "name": "Forrest Voight",
        "email": "forrest@forre.st",
        "date": "2011-07-26T16:29:56Z"
      },
      "message": "Added a new RPC command, getrawtransaction. Given a transaction hash, getrawtransaction returns that transaction and some metadata.",
      "tree": {
        "sha": "8c38e395cc9438c65d4ffdee99cc7e9d1a86f11f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c38e395cc9438c65d4ffdee99cc7e9d1a86f11f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dac314a8868c4fc5b52a1d7b00be755492b4ea1e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dac314a8868c4fc5b52a1d7b00be755492b4ea1e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dac314a8868c4fc5b52a1d7b00be755492b4ea1e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dac314a8868c4fc5b52a1d7b00be755492b4ea1e/comments",
    "author": {
      "login": "forrestv",
      "id": 59872,
      "node_id": "MDQ6VXNlcjU5ODcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/59872?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/forrestv",
      "html_url": "https://github.com/forrestv",
      "followers_url": "https://api.github.com/users/forrestv/followers",
      "following_url": "https://api.github.com/users/forrestv/following{/other_user}",
      "gists_url": "https://api.github.com/users/forrestv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/forrestv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/forrestv/subscriptions",
      "organizations_url": "https://api.github.com/users/forrestv/orgs",
      "repos_url": "https://api.github.com/users/forrestv/repos",
      "events_url": "https://api.github.com/users/forrestv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/forrestv/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "forrestv",
      "id": 59872,
      "node_id": "MDQ6VXNlcjU5ODcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/59872?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/forrestv",
      "html_url": "https://github.com/forrestv",
      "followers_url": "https://api.github.com/users/forrestv/followers",
      "following_url": "https://api.github.com/users/forrestv/following{/other_user}",
      "gists_url": "https://api.github.com/users/forrestv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/forrestv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/forrestv/subscriptions",
      "organizations_url": "https://api.github.com/users/forrestv/orgs",
      "repos_url": "https://api.github.com/users/forrestv/repos",
      "events_url": "https://api.github.com/users/forrestv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/forrestv/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a0eb1d151f60ac49ce30042c7ae4039cf538992d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0eb1d151f60ac49ce30042c7ae4039cf538992d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a0eb1d151f60ac49ce30042c7ae4039cf538992d"
      }
    ],
    "stats": {
      "total": 112,
      "additions": 112,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9056aec312eeaacb73378f41d101271282192f98",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dac314a8868c4fc5b52a1d7b00be755492b4ea1e/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dac314a8868c4fc5b52a1d7b00be755492b4ea1e/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=dac314a8868c4fc5b52a1d7b00be755492b4ea1e",
        "patch": "@@ -1568,5 +1568,7 @@ class CAlert : public CUnsignedAlert\n \n \n extern std::map<uint256, CTransaction> mapTransactions;\n+extern CCriticalSection cs_mapTransactions;\n+extern std::map<COutPoint, CInPoint> mapNextTx;\n \n #endif"
      },
      {
        "sha": "c0e6a6a34ff92775bcc4026aeef92d7f23723256",
        "filename": "src/rpc.cpp",
        "status": "modified",
        "additions": 110,
        "deletions": 0,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dac314a8868c4fc5b52a1d7b00be755492b4ea1e/src/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dac314a8868c4fc5b52a1d7b00be755492b4ea1e/src/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.cpp?ref=dac314a8868c4fc5b52a1d7b00be755492b4ea1e",
        "patch": "@@ -1667,6 +1667,114 @@ Value getwork(const Array& params, bool fHelp)\n }\n \n \n+Value getrawtransaction(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getrawtransaction <txid>\\n\"\n+            \"Get transaction <txid>'s data and associated metadata\");\n+\n+    uint256 hash;\n+    hash.SetHex(params[0].get_str());\n+\n+    CTxDB txdb(\"r\");\n+    CTxIndex txindex;\n+    CTransaction this_tx;\n+    bool fFound = txdb.ReadTxIndex(hash, txindex);\n+    if (fFound)\n+    {\n+        if (!this_tx.ReadFromDisk(txindex.pos))\n+            throw JSONRPCError(-7, \"this_tx.ReadFromDisk failed\");\n+    }\n+    else\n+        CRITICAL_BLOCK(cs_mapTransactions)\n+        {\n+            if (!mapTransactions.count(hash))\n+                throw JSONRPCError(-5, \"Transaction not found\");\n+            this_tx = mapTransactions[hash];\n+        }\n+\n+\n+    Array txins;\n+    for (int i = 0; i < this_tx.vin.size(); i++)\n+    {\n+        Object previous_output;\n+        previous_output.push_back(Pair(\"hash\", this_tx.vin[i].prevout.hash.ToString()));\n+        previous_output.push_back(Pair(\"index\", (uint64_t)this_tx.vin[i].prevout.n));\n+\n+        Object txin;\n+        txin.push_back(Pair(\"previous_output\", previous_output));\n+        txin.push_back(Pair(\"script\", HexStr(this_tx.vin[i].scriptSig)));\n+        txin.push_back(Pair(\"sequence\", (uint64_t)this_tx.vin[i].nSequence));\n+\n+        txins.push_back(txin);\n+    }\n+\n+    Array txouts;\n+    for (int i = 0; i < this_tx.vout.size(); i++)\n+    {\n+        Object txout;\n+        txout.push_back(Pair(\"value\", (uint64_t)this_tx.vout[i].nValue));\n+        txout.push_back(Pair(\"script2\", HexStr(this_tx.vout[i].scriptPubKey)));\n+\n+        txouts.push_back(txout);\n+    }\n+\n+    Object tx;\n+    tx.push_back(Pair(\"version\", this_tx.nVersion));\n+    tx.push_back(Pair(\"txins\", txins));\n+    tx.push_back(Pair(\"txouts\", txouts));\n+    tx.push_back(Pair(\"lock_time\", (uint64_t)this_tx.nLockTime));\n+\n+    Array parent_blocks;\n+    if (fFound)\n+    {\n+        // There can be more than one block that include this transaction\n+        // Only one can be found efficiently, though...\n+        CBlock block;\n+        if (!block.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos, false))\n+            throw JSONRPCError(-7, \"block.ReadFromDisk failed\");\n+        parent_blocks.push_back(block.GetHash().ToString());\n+    }\n+\n+    Array txout_claims;\n+    for (int i = 0; i < this_tx.vout.size(); i++)\n+        txout_claims.push_back(Array());\n+    if (fFound)\n+    {\n+        for (int i = 0; i < txindex.vSpent.size(); i++)\n+        {\n+            if (txindex.vSpent[i].IsNull())\n+                continue;\n+            CTransaction next_tx;\n+            if (!next_tx.ReadFromDisk(txindex.vSpent[i]))\n+                throw JSONRPCError(-7, \"next_tx.ReadFromDisk failed\");\n+            txout_claims[i].get_array().push_back(next_tx.GetHash().ToString());\n+        }\n+    }\n+    CRITICAL_BLOCK(cs_mapTransactions)\n+    {\n+        for (int i = 0; i < this_tx.vout.size(); i++)\n+        {\n+            COutPoint outpoint(hash, i);\n+            if (!mapNextTx.count(outpoint))\n+                continue;\n+            txout_claims[i].get_array().push_back(mapNextTx[outpoint].ptx->GetHash().ToString());\n+        }\n+    }\n+\n+    Object result;\n+    result.push_back(Pair(\"tx\", tx));\n+    result.push_back(Pair(\"parent_blocks\", parent_blocks));\n+    result.push_back(Pair(\"txout_claims\", txout_claims));\n+    if (pindexBest != NULL)\n+        result.push_back(Pair(\"as_of\", pindexBest->GetBlockHash().ToString()));\n+    else\n+        result.push_back(Pair(\"as_of\", Value::null));\n+    return result;\n+}\n+\n+\n \n \n \n@@ -1725,6 +1833,7 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"getwork\",                &getwork),\n     make_pair(\"listaccounts\",           &listaccounts),\n     make_pair(\"settxfee\",               &settxfee),\n+    make_pair(\"getrawtransaction\",      &getrawtransaction),\n };\n map<string, rpcfn_type> mapCallTable(pCallTable, pCallTable + sizeof(pCallTable)/sizeof(pCallTable[0]));\n \n@@ -1753,6 +1862,7 @@ string pAllowInSafeMode[] =\n     \"walletlock\",\n     \"validateaddress\",\n     \"getwork\",\n+    \"getrawtransaction\",\n };\n set<string> setAllowInSafeMode(pAllowInSafeMode, pAllowInSafeMode + sizeof(pAllowInSafeMode)/sizeof(pAllowInSafeMode[0]));\n "
      }
    ]
  }
]