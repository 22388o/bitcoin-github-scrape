[
  {
    "sha": "13dd2d090e1acf8895854cedea18e38a6278c7ea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxM2RkMmQwOTBlMWFjZjg4OTU4NTRjZWRlYTE4ZTM4YTYyNzhjN2Vh",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2013-06-25T20:07:29Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2013-06-25T20:07:29Z"
      },
      "message": "CWallet::TopUpKeyPool() takes optional pool size argument\n\nAlso, GetKeyPoolSize() now returns an accurate type, unsigned int.",
      "tree": {
        "sha": "6aab366e467151d693ea9d1a90110c86e5f08058",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6aab366e467151d693ea9d1a90110c86e5f08058"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/13dd2d090e1acf8895854cedea18e38a6278c7ea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13dd2d090e1acf8895854cedea18e38a6278c7ea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/13dd2d090e1acf8895854cedea18e38a6278c7ea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13dd2d090e1acf8895854cedea18e38a6278c7ea/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "481d89979457d69da07edd99fba451fd42a47f5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/481d89979457d69da07edd99fba451fd42a47f5c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/481d89979457d69da07edd99fba451fd42a47f5c"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 10,
      "deletions": 5
    },
    "files": [
      {
        "sha": "7d3cfad76a0a6f9b62fd761d2bfb464e675ae053",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13dd2d090e1acf8895854cedea18e38a6278c7ea/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13dd2d090e1acf8895854cedea18e38a6278c7ea/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=13dd2d090e1acf8895854cedea18e38a6278c7ea",
        "patch": "@@ -81,7 +81,7 @@ Value getinfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n     obj.push_back(Pair(\"testnet\",       TestNet()));\n     obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n-    obj.push_back(Pair(\"keypoolsize\",   pwalletMain->GetKeyPoolSize()));\n+    obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n     obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n     if (pwalletMain->IsCrypted())\n         obj.push_back(Pair(\"unlocked_until\", (boost::int64_t)nWalletUnlockTime));"
      },
      {
        "sha": "e64d3150a33bcaf614f6ff1f9c32928dcb87cbfa",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13dd2d090e1acf8895854cedea18e38a6278c7ea/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13dd2d090e1acf8895854cedea18e38a6278c7ea/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=13dd2d090e1acf8895854cedea18e38a6278c7ea",
        "patch": "@@ -1553,7 +1553,7 @@ bool CWallet::NewKeyPool()\n     return true;\n }\n \n-bool CWallet::TopUpKeyPool()\n+bool CWallet::TopUpKeyPool(unsigned int kpSize)\n {\n     {\n         LOCK(cs_wallet);\n@@ -1564,7 +1564,12 @@ bool CWallet::TopUpKeyPool()\n         CWalletDB walletdb(strWalletFile);\n \n         // Top up key pool\n-        unsigned int nTargetSize = max(GetArg(\"-keypool\", 100), 0LL);\n+        unsigned int nTargetSize;\n+        if (kpSize > 0)\n+            nTargetSize = kpSize;\n+        else\n+            nTargetSize = max(GetArg(\"-keypool\", 100), 0LL);\n+\n         while (setKeyPool.size() < (nTargetSize + 1))\n         {\n             int64 nEnd = 1;"
      },
      {
        "sha": "cd9bf54cc562fa6215afb86c5744be65e083644c",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/13dd2d090e1acf8895854cedea18e38a6278c7ea/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/13dd2d090e1acf8895854cedea18e38a6278c7ea/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=13dd2d090e1acf8895854cedea18e38a6278c7ea",
        "patch": "@@ -195,7 +195,7 @@ class CWallet : public CCryptoKeyStore\n     std::string SendMoneyToDestination(const CTxDestination &address, int64 nValue, CWalletTx& wtxNew, bool fAskFee=false);\n \n     bool NewKeyPool();\n-    bool TopUpKeyPool();\n+    bool TopUpKeyPool(unsigned int kpSize = 0);\n     int64 AddReserveKey(const CKeyPool& keypool);\n     void ReserveKeyFromKeyPool(int64& nIndex, CKeyPool& keypool);\n     void KeepKey(int64 nIndex);\n@@ -292,7 +292,7 @@ class CWallet : public CCryptoKeyStore\n         }\n     }\n \n-    int GetKeyPoolSize()\n+    unsigned int GetKeyPoolSize()\n     {\n         return setKeyPool.size();\n     }"
      }
    ]
  },
  {
    "sha": "36bd46f1c4330fa57a3730bd80706eca11510b55",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNmJkNDZmMWM0MzMwZmE1N2EzNzMwYmQ4MDcwNmVjYTExNTEwYjU1",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2013-06-25T20:21:42Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2013-06-25T20:21:42Z"
      },
      "message": "RPC: keypoolrefill gains optional size parameter",
      "tree": {
        "sha": "1b85ec3e3b0f3a064f6378484fbdaca34f2704a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b85ec3e3b0f3a064f6378484fbdaca34f2704a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/36bd46f1c4330fa57a3730bd80706eca11510b55",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36bd46f1c4330fa57a3730bd80706eca11510b55",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/36bd46f1c4330fa57a3730bd80706eca11510b55",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36bd46f1c4330fa57a3730bd80706eca11510b55/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "13dd2d090e1acf8895854cedea18e38a6278c7ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13dd2d090e1acf8895854cedea18e38a6278c7ea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/13dd2d090e1acf8895854cedea18e38a6278c7ea"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 12,
      "deletions": 4
    },
    "files": [
      {
        "sha": "9cd94f023418144a0dba110e22a51b5ecf3e4d82",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36bd46f1c4330fa57a3730bd80706eca11510b55/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36bd46f1c4330fa57a3730bd80706eca11510b55/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=36bd46f1c4330fa57a3730bd80706eca11510b55",
        "patch": "@@ -1199,6 +1199,7 @@ Array RPCConvertValues(const std::string &strMethod, const std::vector<std::stri\n     if (strMethod == \"importprivkey\"          && n > 2) ConvertTo<bool>(params[2]);\n     if (strMethod == \"verifychain\"            && n > 0) ConvertTo<boost::int64_t>(params[0]);\n     if (strMethod == \"verifychain\"            && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"keypoolrefill\"          && n > 0) ConvertTo<boost::int64_t>(params[0]);\n \n     return params;\n }"
      },
      {
        "sha": "f79fe78763618b9834776669953f81df6490419a",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 4,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36bd46f1c4330fa57a3730bd80706eca11510b55/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36bd46f1c4330fa57a3730bd80706eca11510b55/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=36bd46f1c4330fa57a3730bd80706eca11510b55",
        "patch": "@@ -1253,17 +1253,24 @@ Value backupwallet(const Array& params, bool fHelp)\n \n Value keypoolrefill(const Array& params, bool fHelp)\n {\n-    if (fHelp || params.size() > 0)\n+    if (fHelp || params.size() > 1)\n         throw runtime_error(\n-            \"keypoolrefill\\n\"\n+            \"keypoolrefill [new-size]\\n\"\n             \"Fills the keypool.\"\n             + HelpRequiringPassphrase());\n \n+    unsigned int kpSize = max(GetArg(\"-keypool\", 100), 0LL);\n+    if (params.size() > 0) {\n+        if (params[0].get_int() < 0)\n+            throw JSONRPCError(-8, \"Invalid parameter, expected valid size\");\n+        kpSize = (unsigned int) params[0].get_int();\n+    }\n+\n     EnsureWalletIsUnlocked();\n \n-    pwalletMain->TopUpKeyPool();\n+    pwalletMain->TopUpKeyPool(kpSize);\n \n-    if (pwalletMain->GetKeyPoolSize() < GetArg(\"-keypool\", 100))\n+    if (pwalletMain->GetKeyPoolSize() < kpSize)\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Error refreshing keypool.\");\n \n     return Value::null;"
      }
    ]
  }
]