[
  {
    "sha": "9c5a4a6ed8024fa7d83dad0507231ca34494a6ac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YzVhNGE2ZWQ4MDI0ZmE3ZDgzZGFkMDUwNzIzMWNhMzQ0OTRhNmFj",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-12T18:30:22Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-12T18:30:22Z"
      },
      "message": "Stop special-casing phashBlock handling in validation for TBV",
      "tree": {
        "sha": "0ac4fd2ee58e94d67ea0748cb6a152b6db827f39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ac4fd2ee58e94d67ea0748cb6a152b6db827f39"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c5a4a6ed8024fa7d83dad0507231ca34494a6ac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c5a4a6ed8024fa7d83dad0507231ca34494a6ac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9c5a4a6ed8024fa7d83dad0507231ca34494a6ac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c5a4a6ed8024fa7d83dad0507231ca34494a6ac/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5d132e8b974652d96466a1b73ec1231614719fe2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d132e8b974652d96466a1b73ec1231614719fe2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5d132e8b974652d96466a1b73ec1231614719fe2"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 4,
      "deletions": 5
    },
    "files": [
      {
        "sha": "b777e923fd7a2be20ec6d210f18c9639f22cdf67",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c5a4a6ed8024fa7d83dad0507231ca34494a6ac/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c5a4a6ed8024fa7d83dad0507231ca34494a6ac/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=9c5a4a6ed8024fa7d83dad0507231ca34494a6ac",
        "patch": "@@ -1771,9 +1771,7 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n {\n     AssertLockHeld(cs_main);\n     assert(pindex);\n-    // pindex->phashBlock can be null if called by CreateNewBlock/TestBlockValidity\n-    assert((pindex->phashBlock == nullptr) ||\n-           (*pindex->phashBlock == block.GetHash()));\n+    assert(*pindex->phashBlock == block.GetHash());\n     int64_t nTimeStart = GetTimeMicros();\n \n     // Check it again in case a previous version let a bad block in\n@@ -1847,8 +1845,7 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n     // Now that the whole chain is irreversibly beyond that time it is applied to all blocks except the\n     // two in the chain that violate it. This prevents exploiting the issue against nodes during their\n     // initial block download.\n-    bool fEnforceBIP30 = (!pindex->phashBlock) || // Enforce on CreateNewBlock invocations which don't have a hash.\n-                          !((pindex->nHeight==91842 && pindex->GetBlockHash() == uint256S(\"0x00000000000a4d0a398161ffc163c503763b1f4360639393e0e4c8e300e0caec\")) ||\n+    bool fEnforceBIP30 = !((pindex->nHeight==91842 && pindex->GetBlockHash() == uint256S(\"0x00000000000a4d0a398161ffc163c503763b1f4360639393e0e4c8e300e0caec\")) ||\n                            (pindex->nHeight==91880 && pindex->GetBlockHash() == uint256S(\"0x00000000000743f190a18c5577a3c2d2a1f610ae9601ac046a38084ccb7cd721\")));\n \n     // Once BIP34 activated it was not possible to create new duplicate coinbases and thus other than starting\n@@ -3417,9 +3414,11 @@ bool TestBlockValidity(CValidationState& state, const CChainParams& chainparams,\n     AssertLockHeld(cs_main);\n     assert(pindexPrev && pindexPrev == chainActive.Tip());\n     CCoinsViewCache viewNew(pcoinsTip.get());\n+    uint256 block_hash(block.GetHash());\n     CBlockIndex indexDummy(block);\n     indexDummy.pprev = pindexPrev;\n     indexDummy.nHeight = pindexPrev->nHeight + 1;\n+    indexDummy.phashBlock = &block_hash;\n \n     // NOTE: CheckBlockHeader is called by CheckBlock\n     if (!ContextualCheckBlockHeader(block, state, chainparams, pindexPrev, GetAdjustedTime()))"
      }
    ]
  }
]