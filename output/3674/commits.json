[
  {
    "sha": "77cbd4623e171ee9c48ada8a421295ed2c8e6c7c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3N2NiZDQ2MjNlMTcxZWU5YzQ4YWRhOGE0MjEyOTVlZDJjOGU2Yzdj",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-02-14T17:27:15Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-06-16T16:56:57Z"
      },
      "message": "Let -zapwallettxes recover transaction meta data",
      "tree": {
        "sha": "84ff89231b49da39f3ff6d4d8baeded4a3e8c068",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84ff89231b49da39f3ff6d4d8baeded4a3e8c068"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "529047fcd18acd1b64dc95d6eb69edeaad75d405",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/529047fcd18acd1b64dc95d6eb69edeaad75d405",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/529047fcd18acd1b64dc95d6eb69edeaad75d405"
      }
    ],
    "stats": {
      "total": 223,
      "additions": 212,
      "deletions": 11
    },
    "files": [
      {
        "sha": "b726ef627fac4139a690f058df3d25e2aa617bb9",
        "filename": "qa/rpc-tests/util.sh",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/qa/rpc-tests/util.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/qa/rpc-tests/util.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.sh?ref=77cbd4623e171ee9c48ada8a421295ed2c8e6c7c",
        "patch": "@@ -38,6 +38,10 @@ function AssertEqual {\n   if (( $( echo \"$1 == $2\" | bc ) == 0 ))\n   then\n     echoerr \"AssertEqual: $1 != $2\"\n+    declare -f CleanUp > /dev/null 2>&1\n+    if [[ $? -eq 0 ]] ; then\n+        CleanUp\n+    fi\n     exit 1\n   fi\n }\n@@ -49,6 +53,10 @@ function CheckBalance {\n   if (( $( echo \"$B == $EXPECT\" | bc ) == 0 ))\n   then\n     echoerr \"bad balance: $B (expected $2)\"\n+    declare -f CleanUp > /dev/null 2>&1\n+    if [[ $? -eq 0 ]] ; then\n+        CleanUp\n+    fi\n     exit 1\n   fi\n }"
      },
      {
        "sha": "bc52a7dacd205bc1364f33992ccc2b5ace1fe7b6",
        "filename": "qa/rpc-tests/zapwallettxes.sh",
        "status": "added",
        "additions": 161,
        "deletions": 0,
        "changes": 161,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/qa/rpc-tests/zapwallettxes.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/qa/rpc-tests/zapwallettxes.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zapwallettxes.sh?ref=77cbd4623e171ee9c48ada8a421295ed2c8e6c7c",
        "patch": "@@ -0,0 +1,161 @@\n+#!/usr/bin/env bash\n+\n+# Test -zapwallettxes=<mode>\n+\n+if [ $# -lt 1 ]; then\n+        echo \"Usage: $0 path_to_binaries\"\n+        echo \"e.g. $0 ../../src\"\n+        exit 1\n+fi\n+\n+set -f\n+\n+BITCOIND=${1}/bitcoind\n+CLI=${1}/bitcoin-cli\n+\n+DIR=\"${BASH_SOURCE%/*}\"\n+SENDANDWAIT=\"${DIR}/send.sh\"\n+if [[ ! -d \"$DIR\" ]]; then DIR=\"$PWD\"; fi\n+. \"$DIR/util.sh\"\n+\n+D=$(mktemp -d test.XXXXX)\n+\n+D1=${D}/node1\n+CreateDataDir \"$D1\" port=11000 rpcport=11001\n+B1ARGS=\"-datadir=$D1\"\n+$BITCOIND $B1ARGS &\n+B1PID=$!\n+\n+D2=${D}/node2\n+CreateDataDir \"$D2\" port=11010 rpcport=11011\n+B2ARGS=\"-datadir=$D2\"\n+$BITCOIND $B2ARGS &\n+B2PID=$!\n+\n+function CleanUp {\n+$CLI $B2ARGS stop > /dev/null 2>&1\n+wait $B2PID\n+$CLI $B1ARGS stop > /dev/null 2>&1\n+wait $B1PID\n+\n+rm -rf $D\n+}\n+\n+# 110 blocks, 10 mature == 500 XBT\n+$CLI $B1ARGS setgenerate true 110\n+$CLI $B2ARGS setgenerate true 110\n+\n+CheckBalance \"$B1ARGS\" 500\n+CheckBalance \"$B2ARGS\" 500\n+\n+# Send 10 XBT\n+TXID1_DEFAULT=$($CLI $B1ARGS sendtoaddress \"mrhz5ZgSF3C1BSdyCKt3gEdhKoRL5BNfJV\" 10)\n+TXID2_DEFAULT=$($CLI $B2ARGS sendtoaddress \"mrhz5ZgSF3C1BSdyCKt3gEdhKoRL5BNfJV\" 10)\n+\n+CheckBalance $B1ARGS 490\n+CheckBalance $B2ARGS 490\n+\n+# Move 10 XBT to testaccount\n+TMP=$($CLI $B1ARGS move \"\" \"testaccount\" 10)\n+TMP=$($CLI $B2ARGS move \"\" \"testaccount\" 10)\n+\n+CheckBalance $B1ARGS 10 \"testaccount\"\n+CheckBalance $B2ARGS 10 \"testaccount\"\n+\n+# Send 1 XBT from testaccount\n+TXID1_TESTACCOUNT=$($CLI $B1ARGS sendfrom \"testaccount\" \"mrhz5ZgSF3C1BSdyCKt3gEdhKoRL5BNfJV\" 1)\n+TXID2_TESTACCOUNT=$($CLI $B2ARGS sendfrom \"testaccount\" \"mrhz5ZgSF3C1BSdyCKt3gEdhKoRL5BNfJV\" 1)\n+\n+CheckBalance $B1ARGS 9 \"testaccount\"\n+CheckBalance $B2ARGS 9 \"testaccount\"\n+\n+CheckBalance $B1ARGS 489\n+CheckBalance $B2ARGS 489\n+\n+# Confirm transactions\n+$CLI $B1ARGS setgenerate true 1\n+$CLI $B2ARGS setgenerate true 1\n+\n+# Create unconfirmed transaction\n+TXID1_UNCONFIRMED=$($CLI $B1ARGS sendtoaddress \"mrhz5ZgSF3C1BSdyCKt3gEdhKoRL5BNfJV\" 1)\n+TXID2_UNCONFIRMED=$($CLI $B2ARGS sendtoaddress \"mrhz5ZgSF3C1BSdyCKt3gEdhKoRL5BNfJV\" 1)\n+\n+# check balance (we created another 50 and spent 1 in the meantime)\n+CheckBalance $B1ARGS 538\n+CheckBalance $B2ARGS 538\n+\n+# Safety check, if unconfirmed transactions are there\n+$CLI $B1ARGS gettransaction $TXID1_UNCONFIRMED > /dev/null 2>&1\n+if [[ $? -ne 0 ]] ; then\n+    echoerr \"gettransaction1_1: $TXID1_UNCONFIRMED failed\"\n+    CleanUp\n+    exit 1\n+fi\n+$CLI $B2ARGS gettransaction $TXID2_UNCONFIRMED > /dev/null 2>&1\n+if [[ $? -ne 0 ]] ; then\n+    echoerr \"gettransaction2_1: $TXID2_UNCONFIRMED failed\"\n+    CleanUp\n+    exit 1\n+fi\n+\n+# stop nodes\n+$CLI $B2ARGS stop > /dev/null 2>&1\n+wait $B2PID\n+$CLI $B1ARGS stop > /dev/null 2>&1\n+wait $B1PID\n+\n+# restart nodes with -zapwallettxes\n+$BITCOIND -zapwallettxes=1 $B1ARGS &\n+B1PID=$!\n+$BITCOIND -zapwallettxes=2 $B2ARGS &\n+B2PID=$!\n+\n+# check if confirmed transactions are there\n+$CLI $B1ARGS gettransaction $TXID1_DEFAULT > /dev/null 2>&1\n+if [[ $? -ne 0 ]] ; then\n+    echoerr \"check confirmed transaction 1: $TXID1_DEFAULT failed\"\n+    CleanUp\n+    exit 1\n+fi\n+$CLI $B2ARGS gettransaction $TXID2_DEFAULT > /dev/null 2>&1\n+if [[ $? -ne 0 ]] ; then\n+    echoerr \"check confirmed transaction 2: $TXID2_DEFAULT failed\"\n+    CleanUp\n+    exit 1\n+fi\n+$CLI $B1ARGS gettransaction $TXID1_TESTACCOUNT > /dev/null 2>&1\n+if [[ $? -ne 0 ]] ; then\n+    echoerr \"check confirmed transaction 3: $TXID1_TESTACCOUNT failed\"\n+    CleanUp\n+    exit 1\n+fi\n+$CLI $B2ARGS gettransaction $TXID2_TESTACCOUNT > /dev/null 2>&1\n+if [[ $? -ne 0 ]] ; then\n+    echoerr \"check confirmed transaction 4: $TXID2_TESTACCOUNT failed\"\n+    CleanUp\n+    exit 1\n+fi\n+\n+# check if unconfirmed transaction is gone\n+$CLI $B1ARGS gettransaction $TXID1_UNCONFIRMED > /dev/null 2>&1\n+if [[ $? -eq 0 ]] ; then\n+    echoerr \"check unconfirmed transaction 1: $TXID1_UNCONFIRMED failed\"\n+    CleanUp\n+    exit 1\n+fi\n+$CLI $B2ARGS gettransaction $TXID2_UNCONFIRMED > /dev/null 2>&1\n+if [[ $? -eq 0 ]] ; then\n+    echoerr \"check unconfirmed transaction 2: $TXID2_UNCONFIRMED failed\"\n+    CleanUp\n+    exit 1\n+fi\n+\n+# check zapwallet mode 1, testaccount balance must be 9 (keeping transaction metadata)\n+CheckBalance $B1ARGS 9 \"testaccount\"\n+\n+# check zapwallet mode 2, testaccount balance must be 10 (dropping transaction metadata)\n+CheckBalance $B2ARGS 10 \"testaccount\"\n+\n+echo \"Tests successful, cleaning up\"\n+CleanUp\n+exit 0"
      },
      {
        "sha": "b9af16a156a1324d9de6cde60d665325e59422ec",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 3,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=77cbd4623e171ee9c48ada8a421295ed2c8e6c7c",
        "patch": "@@ -259,7 +259,8 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \" \" + _(\"on startup\") + \"\\n\";\n     strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \" \" + _(\"(default: wallet.dat)\") + \"\\n\";\n     strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n-    strUsage += \"  -zapwallettxes         \" + _(\"Clear list of wallet transactions (diagnostic tool; implies -rescan)\") + \"\\n\";\n+    strUsage += \"  -zapwallettxes=<mode>  \" + _(\"Delete all wallet transactions and only recover those part of the blockchain through -rescan on startup\") + \"\\n\";\n+    strUsage += \"                         \" + _(\"(default: 1, 1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)\") + \"\\n\";\n #endif\n \n     strUsage += \"\\n\" + _(\"Debugging/Testing options:\") + \"\\n\";\n@@ -529,7 +530,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n     // -zapwallettx implies a rescan\n     if (GetBoolArg(\"-zapwallettxes\", false)) {\n         if (SoftSetBoolArg(\"-rescan\", true))\n-            LogPrintf(\"AppInit2 : parameter interaction: -zapwallettxes=1 -> setting -rescan=1\\n\");\n+            LogPrintf(\"AppInit2 : parameter interaction: -zapwallettxes=<mode> -> setting -rescan=1\\n\");\n     }\n \n     // Make sure enough file descriptors are available\n@@ -986,11 +987,15 @@ bool AppInit2(boost::thread_group& threadGroup)\n         pwalletMain = NULL;\n         LogPrintf(\"Wallet disabled!\\n\");\n     } else {\n+\n+        // needed to restore wallet transaction meta data after -zapwallettxes\n+        std::vector<CWalletTx> vWtx;\n+\n         if (GetBoolArg(\"-zapwallettxes\", false)) {\n             uiInterface.InitMessage(_(\"Zapping all transactions from wallet...\"));\n \n             pwalletMain = new CWallet(strWalletFile);\n-            DBErrors nZapWalletRet = pwalletMain->ZapWalletTx();\n+            DBErrors nZapWalletRet = pwalletMain->ZapWalletTx(vWtx);\n             if (nZapWalletRet != DB_LOAD_OK) {\n                 uiInterface.InitMessage(_(\"Error loading wallet.dat: Wallet corrupted\"));\n                 return false;\n@@ -1085,6 +1090,29 @@ bool AppInit2(boost::thread_group& threadGroup)\n             LogPrintf(\" rescan      %15dms\\n\", GetTimeMillis() - nStart);\n             pwalletMain->SetBestChain(chainActive.GetLocator());\n             nWalletDBUpdated++;\n+\n+            // Restore wallet transaction metadata after -zapwallettxes=1\n+            if (GetBoolArg(\"-zapwallettxes\", false) && GetArg(\"-zapwallettxes\", \"1\") != \"2\")\n+            {\n+                BOOST_FOREACH(const CWalletTx& wtxOld, vWtx)\n+                {\n+                    uint256 hash = wtxOld.GetHash();\n+                    std::map<uint256, CWalletTx>::iterator mi = pwalletMain->mapWallet.find(hash);\n+                    if (mi != pwalletMain->mapWallet.end())\n+                    {\n+                        const CWalletTx* copyFrom = &wtxOld;\n+                        CWalletTx* copyTo = &mi->second;\n+                        copyTo->mapValue = copyFrom->mapValue;\n+                        copyTo->vOrderForm = copyFrom->vOrderForm;\n+                        copyTo->nTimeReceived = copyFrom->nTimeReceived;\n+                        copyTo->nTimeSmart = copyFrom->nTimeSmart;\n+                        copyTo->fFromMe = copyFrom->fFromMe;\n+                        copyTo->strFromAccount = copyFrom->strFromAccount;\n+                        copyTo->nOrderPos = copyFrom->nOrderPos;\n+                        copyTo->WriteToDisk();\n+                    }\n+                }\n+            }\n         }\n     } // (!fDisableWallet)\n #else // ENABLE_WALLET"
      },
      {
        "sha": "36e40b1fc8c9e385fc185a2ea7b27867fcb530a4",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=77cbd4623e171ee9c48ada8a421295ed2c8e6c7c",
        "patch": "@@ -1511,11 +1511,11 @@ DBErrors CWallet::LoadWallet(bool& fFirstRunRet)\n }\n \n \n-DBErrors CWallet::ZapWalletTx()\n+DBErrors CWallet::ZapWalletTx(std::vector<CWalletTx>& vWtx)\n {\n     if (!fFileBacked)\n         return DB_LOAD_OK;\n-    DBErrors nZapWalletTxRet = CWalletDB(strWalletFile,\"cr+\").ZapWalletTx(this);\n+    DBErrors nZapWalletTxRet = CWalletDB(strWalletFile,\"cr+\").ZapWalletTx(this, vWtx);\n     if (nZapWalletTxRet == DB_NEED_REWRITE)\n     {\n         if (CDB::Rewrite(strWalletFile, \"\\x04pool\"))"
      },
      {
        "sha": "b168116f49c7d43759c554b2e44671b44ae73411",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=77cbd4623e171ee9c48ada8a421295ed2c8e6c7c",
        "patch": "@@ -341,7 +341,7 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     void SetBestChain(const CBlockLocator& loc);\n \n     DBErrors LoadWallet(bool& fFirstRunRet);\n-    DBErrors ZapWalletTx();\n+    DBErrors ZapWalletTx(std::vector<CWalletTx>& vWtx);\n \n     bool SetAddressBook(const CTxDestination& address, const std::string& strName, const std::string& purpose);\n "
      },
      {
        "sha": "3ce2ef019c545f30ec5e737ce12368570d4e9499",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=77cbd4623e171ee9c48ada8a421295ed2c8e6c7c",
        "patch": "@@ -680,7 +680,7 @@ DBErrors CWalletDB::LoadWallet(CWallet* pwallet)\n     return result;\n }\n \n-DBErrors CWalletDB::FindWalletTx(CWallet* pwallet, vector<uint256>& vTxHash)\n+DBErrors CWalletDB::FindWalletTx(CWallet* pwallet, vector<uint256>& vTxHash, vector<CWalletTx>& vWtx)\n {\n     pwallet->vchDefaultKey = CPubKey();\n     CWalletScanState wss;\n@@ -725,7 +725,11 @@ DBErrors CWalletDB::FindWalletTx(CWallet* pwallet, vector<uint256>& vTxHash)\n                 uint256 hash;\n                 ssKey >> hash;\n \n+                CWalletTx wtx;\n+                ssValue >> wtx;\n+\n                 vTxHash.push_back(hash);\n+                vWtx.push_back(wtx);\n             }\n         }\n         pcursor->close();\n@@ -743,11 +747,11 @@ DBErrors CWalletDB::FindWalletTx(CWallet* pwallet, vector<uint256>& vTxHash)\n     return result;\n }\n \n-DBErrors CWalletDB::ZapWalletTx(CWallet* pwallet)\n+DBErrors CWalletDB::ZapWalletTx(CWallet* pwallet, vector<CWalletTx>& vWtx)\n {\n     // build list of wallet TXs\n     vector<uint256> vTxHash;\n-    DBErrors err = FindWalletTx(pwallet, vTxHash);\n+    DBErrors err = FindWalletTx(pwallet, vTxHash, vWtx);\n     if (err != DB_LOAD_OK)\n         return err;\n "
      },
      {
        "sha": "8eb716acbb9c929cfddb3203cb07d044f658dabb",
        "filename": "src/walletdb.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/src/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/src/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.h?ref=77cbd4623e171ee9c48ada8a421295ed2c8e6c7c",
        "patch": "@@ -122,8 +122,8 @@ class CWalletDB : public CDB\n \n     DBErrors ReorderTransactions(CWallet*);\n     DBErrors LoadWallet(CWallet* pwallet);\n-    DBErrors FindWalletTx(CWallet* pwallet, std::vector<uint256>& vTxHash);\n-    DBErrors ZapWalletTx(CWallet* pwallet);\n+    DBErrors FindWalletTx(CWallet* pwallet, std::vector<uint256>& vTxHash, std::vector<CWalletTx>& vWtx);\n+    DBErrors ZapWalletTx(CWallet* pwallet, std::vector<CWalletTx>& vWtx);\n     static bool Recover(CDBEnv& dbenv, std::string filename, bool fOnlyKeys);\n     static bool Recover(CDBEnv& dbenv, std::string filename);\n };"
      }
    ]
  }
]