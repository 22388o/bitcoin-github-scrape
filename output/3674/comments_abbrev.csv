gmaxwell,2014-02-14T20:34:55Z,"On one hand this makes it much less disruptive, on the other hand it might be corruption in that data which you're trying to solve.  So I think this should also be switchable so that someone can choose to zap harder.\n\nAlsoâ€” should we try to restore metadata for mutants to the surviving transaction?  I don't think using a normalized txid for this is correct, in the case that the wallet may contai",https://github.com/bitcoin/bitcoin/pull/3674#issuecomment-35122144,35122144,
jgarzik,2014-02-14T20:38:42Z,"It is intentionally a blunt instrument.  Handling the metadata problem is always going to be a partial solution, kinda-sorta handling recovery kinda-sorta well.\n\nLet's get some feedback on need?  Unless we have a lot of sites who are not served by this simple procedure, lean towards punting.\n\nAnyone may modify https://github.com/gavinandresen/bitcointools fixwallet.py to handle a specific, unc",https://github.com/bitcoin/bitcoin/pull/3674#issuecomment-35122466,35122466,
laanwj,2014-02-15T10:27:21Z,"It would be useful to have an option to keep metadata with -zapwallettx.\n\nWould it be possible to build this on top of #3671 and re-use Gavin's metadata-copying and duplicate matching? I understand that the problem is different here: you want to match rescanned tranactions against the old contents of the wallet, instead of matching current transactions against each other. So maybe it doesn't hel",https://github.com/bitcoin/bitcoin/pull/3674#issuecomment-35152437,35152437,
cozz,2014-02-15T12:09:16Z,"update:\n- add parameter &lt;mode&gt;, so -zapwallettxes=&lt;mode&gt;\n  - -zapwallettxes or -zapwallettxes=1 => drop meta data\n  - -zapwallettxes=2 => keep meta data\n- change desription from\n  \n  ```\n  Clear list of wallet transactions (diagnostic tool; implies -rescan)\n  ```\n  \n  to\n  \n  ```\n  Clear list of wallet transactions and recover those part of the blockchain\n  through -resca",https://github.com/bitcoin/bitcoin/pull/3674#issuecomment-35154648,35154648,
cozz,2014-02-15T16:34:27Z,"update:\n- removed the ""default: 0"" from the documentation to avoid confusion there\n",https://github.com/bitcoin/bitcoin/pull/3674#issuecomment-35160396,35160396,
laanwj,2014-02-17T12:10:20Z,ACK apart from nit about defaults\n,https://github.com/bitcoin/bitcoin/pull/3674#issuecomment-35251431,35251431,
cozz,2014-02-17T13:57:08Z,update:\n- changed description to diapolos version\n- default is now to keep meta data \n,https://github.com/bitcoin/bitcoin/pull/3674#issuecomment-35283428,35283428,
Diapolo,2014-02-17T14:48:10Z,"Thanks for updating the help string, looks good now.\n",https://github.com/bitcoin/bitcoin/pull/3674#issuecomment-35287700,35287700,
gavinandresen,2014-02-17T17:17:40Z,A new regression test (or tests) for this in qa/rpc-tests/ would be spiffy.  See #3694 for examples to follow.\n,https://github.com/bitcoin/bitcoin/pull/3674#issuecomment-35304054,35304054,
cozz,2014-02-25T13:14:15Z,"update:\n- added qa/rpc-tests/zapwallettxes.sh\n  - create 2 independent nodes, both:\n    - create a confirmed transaction without account information\n    - create a confirmed transaction with account information\n    - create an unconfirmed transaction\n    - node 1 runs zapwallettxes with mode 1\n    - node 2 runs zapwallettxes with mode 2\n    - check if the confirmed transactions are still t",https://github.com/bitcoin/bitcoin/pull/3674#issuecomment-36005632,36005632,
gavinandresen,2014-02-25T13:22:10Z,"Awesome, thanks @cozz !\n\nRE: CleanUp/util.sh :  ACK.\n",https://github.com/bitcoin/bitcoin/pull/3674#issuecomment-36006265,36006265,
laanwj,2014-06-16T15:28:47Z,Needs rebase\n,https://github.com/bitcoin/bitcoin/pull/3674#issuecomment-46193283,46193283,
cozz,2014-06-16T19:15:49Z,"Rebased. \nI also changed the help-description and do now recover the fields nOrderPos and nTimeReceived.\nI dont think there is a reason not to recover them.\nJust executed the zapwallettxes.sh test, still works.\n",https://github.com/bitcoin/bitcoin/pull/3674#issuecomment-46221855,46221855,
BitcoinPullTester,2014-06-23T16:15:23Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p3674_77cbd4623e171ee9c48ada8a421295ed2c8e6c7c/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/3674#issuecomment-46866513,46866513,
laanwj,2014-02-15T12:11:05Z,"You default to mode 0, but only document mode 1 and 2. Is there a third mode at all? If not, I'd make the 0 and 1\nEdit: oh wait, with 0 you mean ""don't zap txes"". This is a bit confusing doc IMO :)\nMaybe: The default is 1 _if the option is provided_. \n",https://github.com/bitcoin/bitcoin/pull/3674#discussion_r9772551,9772551,src/init.cpp
cozz,2014-02-15T12:43:59Z,"Indeed confusing, I will change the documentation.\n",https://github.com/bitcoin/bitcoin/pull/3674#discussion_r9772639,9772639,src/init.cpp
Diapolo,2014-02-16T01:25:21Z,"I would go for (to stay in line with current strings and also be a little shorter):\n`(default: 1, 1 = drop tx meta data, 2 = keep tx meta data e.g. account owner and payment request information)`\n\nAlso -salvagewallet doesn't tell it starts a rescan, IMHO this description it too long... what tells `diagnostic tool` to a normal user? I wouldn't think it is that invasive at all, if I don't know wh",https://github.com/bitcoin/bitcoin/pull/3674#discussion_r9775412,9775412,src/init.cpp
laanwj,2014-02-17T12:07:16Z,"Making 'recover metadata' be the default mode would make sense IMO as it is the least invasive. Then if that isn't enough, the user can use the other mode that drops metadata too.\n",https://github.com/bitcoin/bitcoin/pull/3674#discussion_r9789603,9789603,src/init.cpp
