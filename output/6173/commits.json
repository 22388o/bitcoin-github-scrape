[
  {
    "sha": "e69734309c948bed697292a1c3b420d163e07fd3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNjk3MzQzMDljOTQ4YmVkNjk3MjkyYTFjM2I0MjBkMTYzZTA3ZmQz",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-19T21:48:25Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-27T14:01:07Z"
      },
      "message": "Chainparams: Explicit CMessageHeader::MessageStartChars to functions in main:\n\n-UndoWriteToDisk\n-WriteBlockToDisk",
      "tree": {
        "sha": "c5ee9dbbf886ce825e30e0441f26bdbac668065b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c5ee9dbbf886ce825e30e0441f26bdbac668065b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e69734309c948bed697292a1c3b420d163e07fd3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e69734309c948bed697292a1c3b420d163e07fd3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e69734309c948bed697292a1c3b420d163e07fd3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e69734309c948bed697292a1c3b420d163e07fd3/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7c9af381cacd76fa5190dad5a8a537eb3aa6b70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7c9af381cacd76fa5190dad5a8a537eb3aa6b70",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7c9af381cacd76fa5190dad5a8a537eb3aa6b70"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 10,
      "deletions": 8
    },
    "files": [
      {
        "sha": "651348300e1279404c4d97a5a983ed33b6d3278f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e69734309c948bed697292a1c3b420d163e07fd3/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e69734309c948bed697292a1c3b420d163e07fd3/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e69734309c948bed697292a1c3b420d163e07fd3",
        "patch": "@@ -1146,7 +1146,7 @@ bool GetTransaction(const uint256 &hash, CTransaction &txOut, uint256 &hashBlock\n // CBlock and CBlockIndex\n //\n \n-bool WriteBlockToDisk(CBlock& block, CDiskBlockPos& pos)\n+bool WriteBlockToDisk(CBlock& block, CDiskBlockPos& pos, const CMessageHeader::MessageStartChars& messageStart)\n {\n     // Open history file to append\n     CAutoFile fileout(OpenBlockFile(pos), SER_DISK, CLIENT_VERSION);\n@@ -1155,7 +1155,7 @@ bool WriteBlockToDisk(CBlock& block, CDiskBlockPos& pos)\n \n     // Write index header\n     unsigned int nSize = fileout.GetSerializeSize(block);\n-    fileout << FLATDATA(Params().MessageStart()) << nSize;\n+    fileout << FLATDATA(messageStart) << nSize;\n \n     // Write block\n     long fileOutPos = ftell(fileout.Get());\n@@ -1509,7 +1509,7 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n \n namespace {\n \n-bool UndoWriteToDisk(const CBlockUndo& blockundo, CDiskBlockPos& pos, const uint256& hashBlock)\n+bool UndoWriteToDisk(const CBlockUndo& blockundo, CDiskBlockPos& pos, const uint256& hashBlock, const CMessageHeader::MessageStartChars& messageStart)\n {\n     // Open history file to append\n     CAutoFile fileout(OpenUndoFile(pos), SER_DISK, CLIENT_VERSION);\n@@ -1518,7 +1518,7 @@ bool UndoWriteToDisk(const CBlockUndo& blockundo, CDiskBlockPos& pos, const uint\n \n     // Write index header\n     unsigned int nSize = fileout.GetSerializeSize(blockundo);\n-    fileout << FLATDATA(Params().MessageStart()) << nSize;\n+    fileout << FLATDATA(messageStart) << nSize;\n \n     // Write undo data\n     long fileOutPos = ftell(fileout.Get());\n@@ -1918,7 +1918,7 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n             CDiskBlockPos pos;\n             if (!FindUndoPos(state, pindex->nFile, pos, ::GetSerializeSize(blockundo, SER_DISK, CLIENT_VERSION) + 40))\n                 return error(\"ConnectBlock(): FindUndoPos failed\");\n-            if (!UndoWriteToDisk(blockundo, pos, pindex->pprev->GetBlockHash()))\n+            if (!UndoWriteToDisk(blockundo, pos, pindex->pprev->GetBlockHash(), chainparams.MessageStart()))\n                 return AbortNode(state, \"Failed to write undo data\");\n \n             // update nUndoPos in block index\n@@ -2841,6 +2841,7 @@ bool AcceptBlockHeader(const CBlockHeader& block, CValidationState& state, CBloc\n \n bool AcceptBlock(CBlock& block, CValidationState& state, CBlockIndex** ppindex, CDiskBlockPos* dbp)\n {\n+    const CChainParams& chainparams = Params();\n     AssertLockHeld(cs_main);\n \n     CBlockIndex *&pindex = *ppindex;\n@@ -2876,7 +2877,7 @@ bool AcceptBlock(CBlock& block, CValidationState& state, CBlockIndex** ppindex,\n         if (!FindBlockPos(state, blockPos, nBlockSize+8, nHeight, block.GetBlockTime(), dbp != NULL))\n             return error(\"AcceptBlock(): FindBlockPos failed\");\n         if (dbp == NULL)\n-            if (!WriteBlockToDisk(block, blockPos))\n+            if (!WriteBlockToDisk(block, blockPos, chainparams.MessageStart()))\n                 AbortNode(state, \"Failed to write block\");\n         if (!ReceivedBlockTransactions(block, state, pindex, blockPos))\n             return error(\"AcceptBlock(): ReceivedBlockTransactions failed\");\n@@ -3366,6 +3367,7 @@ bool LoadBlockIndex()\n \n \n bool InitBlockIndex() {\n+    const CChainParams& chainparams = Params();\n     LOCK(cs_main);\n     // Check whether we're already initialized\n     if (chainActive.Genesis() != NULL)\n@@ -3386,7 +3388,7 @@ bool InitBlockIndex() {\n             CValidationState state;\n             if (!FindBlockPos(state, blockPos, nBlockSize+8, 0, block.GetBlockTime()))\n                 return error(\"LoadBlockIndex(): FindBlockPos failed\");\n-            if (!WriteBlockToDisk(block, blockPos))\n+            if (!WriteBlockToDisk(block, blockPos, chainparams.MessageStart()))\n                 return error(\"LoadBlockIndex(): writing genesis block to disk failed\");\n             CBlockIndex *pindex = AddToBlockIndex(block);\n             if (!ReceivedBlockTransactions(block, state, pindex, blockPos))"
      },
      {
        "sha": "9bf7bbb2f856487c0e15ba6c4bb2ba106930ae77",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e69734309c948bed697292a1c3b420d163e07fd3/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e69734309c948bed697292a1c3b420d163e07fd3/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=e69734309c948bed697292a1c3b420d163e07fd3",
        "patch": "@@ -362,7 +362,7 @@ class CScriptCheck\n \n \n /** Functions for disk access for blocks */\n-bool WriteBlockToDisk(CBlock& block, CDiskBlockPos& pos);\n+bool WriteBlockToDisk(CBlock& block, CDiskBlockPos& pos, const CMessageHeader::MessageStartChars& messageStart);\n bool ReadBlockFromDisk(CBlock& block, const CDiskBlockPos& pos);\n bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex);\n "
      }
    ]
  }
]