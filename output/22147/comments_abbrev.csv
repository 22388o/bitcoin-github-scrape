Crypt-iQ,2021-06-06 18:04:53,"ACK 6efbcec\n\nAs jonatack mentioned, I think extending the existing functional test would be good.",https://github.com/bitcoin/bitcoin/pull/22147#issuecomment-855438190,855438190,
jnewbery,2021-06-07 10:48:27,"Concept ACK. It seems reasonable to protect one outbound peer as an HB compact block source.\n\nI agree with @jonatack and @Crypt-iQ that it'd be good to see a test for this new behaviour.\n\nI've always found the `MaybeSetPeerAsAnnouncingHeaderAndIDs()` logic to be strangely convoluted and difficult to follow - is there a good reason to recursively call into `ForNode()` instead of just callin",https://github.com/bitcoin/bitcoin/pull/22147#issuecomment-855821435,855821435,
sdaftuar,2021-06-07 13:00:17,"I agree a test would be nice -- I'm not planning to write one myself, but if someone contributes one I'd be happy to include it here.\n\n> I've always found the MaybeSetPeerAsAnnouncingHeaderAndIDs() logic to be strangely convoluted and difficult to follow - is there a good reason to recursively call into ForNode() instead of just calling it serially to first switch off hb for one node and then ",https://github.com/bitcoin/bitcoin/pull/22147#issuecomment-855904105,855904105,
sipa,2021-06-09 01:05:18,Here is an RPC-based test for compact blocks HB selection: https://github.com/sipa/bitcoin/commits/sdaftuar-2021-06-reserve-outbound-hb,https://github.com/bitcoin/bitcoin/pull/22147#issuecomment-857293997,857293997,
sdaftuar,2021-06-09 11:27:48,"@sipa Thanks, I've cherry-picked that commit onto this branch.",https://github.com/bitcoin/bitcoin/pull/22147#issuecomment-857615734,857615734,
sipa,2021-06-15 17:08:58,My node at bitcoin.sipa.be currently has all 3 HB connections on inbounds (it has 250 connections).,https://github.com/bitcoin/bitcoin/pull/22147#issuecomment-861676412,861676412,
jonatack,2021-06-15 17:14:46,@sipa thanks -- good to hear about different peer topologies. Am probably restarting too often (for testing pulls) to see anything close to that many inbounds.,https://github.com/bitcoin/bitcoin/pull/22147#issuecomment-861680709,861680709,
achow101,2021-06-15 18:21:47,"ACK 30aee2dfe671b347438c1c327c6f79edfacff1ce\n\nReviewed code and checked that the test fails on master but passes with this PR.",https://github.com/bitcoin/bitcoin/pull/22147#issuecomment-861731677,861731677,
ariard,2021-06-16 15:23:33,"Code ACK 30aee2dfe\n\nOur last oubound HB compact block peer could still be evicted under our CHAIN_SYNC_TIMEOUT/EXTRA_PEER_CHECK_INTERVAL logics if it appears slow on block-delivery. Hitting this eviction on our side would require from an attacker to control our peer's block-relay, assuming this peer's implementation has the same mitigations in place against adversarial peers, it sounds hard to",https://github.com/bitcoin/bitcoin/pull/22147#issuecomment-862473546,862473546,
naumenkogs,2021-06-18 09:47:40,Concept ACK. I agree with protecting last outbound HB peer.,https://github.com/bitcoin/bitcoin/pull/22147#issuecomment-863910719,863910719,
jonatack,2021-06-04 18:41:23,"Optional, if retouch perhaps hoist the `3` here and in line 854 to a constexpr and maybe the following mini-wishlist:\n```diff\n         int num_outbound_hb_peers = 0;\n         for (std::list<NodeId>::iterator it = lNodesAnnouncingHeaderAndIDs.begin(); it != lNodesAnnouncingHeaderAndIDs.end(); it++) {\n             if (*it == nodeid) {\n+                // Move this nodeid to the end of the ",https://github.com/bitcoin/bitcoin/pull/22147#discussion_r645778792,645778792,src/net_processing.cpp
jnewbery,2021-06-09 12:26:52,This member variable is unused.,https://github.com/bitcoin/bitcoin/pull/22147#discussion_r648251055,648251055,test/functional/p2p_compactblocks_hb.py
sipa,2021-06-09 15:30:20,"Oh, indeed. Leftover from an earlier iteration.",https://github.com/bitcoin/bitcoin/pull/22147#discussion_r648427253,648427253,test/functional/p2p_compactblocks_hb.py
sipa,2021-06-09 17:31:19,Made a few style improvements to the commit in https://github.com/sipa/bitcoin/commits/sdaftuar-2021-06-reserve-outbound-hb,https://github.com/bitcoin/bitcoin/pull/22147#discussion_r648524486,648524486,test/functional/p2p_compactblocks_hb.py
sdaftuar,2021-06-10 14:23:24,"Thanks, cherry-picked the latest commit on that branch.",https://github.com/bitcoin/bitcoin/pull/22147#discussion_r649232972,649232972,test/functional/p2p_compactblocks_hb.py
jnewbery,2021-06-11 16:58:36,"If you touch this branch again, consider using f-strings for string formatting (https://github.com/bitcoin/bitcoin/blob/master/test/functional/README.md#style-guidelines)",https://github.com/bitcoin/bitcoin/pull/22147#discussion_r650138822,650138822,test/functional/p2p_compactblocks_hb.py
