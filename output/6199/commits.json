[
  {
    "sha": "4be34e388892f950aeddb2da515f6977438ee02a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YmUzNGUzODg4OTJmOTUwYWVkZGIyZGE1MTVmNjk3NzQzOGVlMDJh",
    "commit": {
      "author": {
        "name": "Daniel Newton",
        "email": "djpnewton@gmail.com",
        "date": "2015-05-28T05:26:15Z"
      },
      "committer": {
        "name": "Daniel Newton",
        "email": "djpnewton@gmail.com",
        "date": "2015-05-28T05:26:15Z"
      },
      "message": "test txnotify command",
      "tree": {
        "sha": "6d37965a831925cda21e029f33eed43c7499028d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d37965a831925cda21e029f33eed43c7499028d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4be34e388892f950aeddb2da515f6977438ee02a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4be34e388892f950aeddb2da515f6977438ee02a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4be34e388892f950aeddb2da515f6977438ee02a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4be34e388892f950aeddb2da515f6977438ee02a/comments",
    "author": {
      "login": "djpnewton",
      "id": 42459,
      "node_id": "MDQ6VXNlcjQyNDU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/42459?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djpnewton",
      "html_url": "https://github.com/djpnewton",
      "followers_url": "https://api.github.com/users/djpnewton/followers",
      "following_url": "https://api.github.com/users/djpnewton/following{/other_user}",
      "gists_url": "https://api.github.com/users/djpnewton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djpnewton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djpnewton/subscriptions",
      "organizations_url": "https://api.github.com/users/djpnewton/orgs",
      "repos_url": "https://api.github.com/users/djpnewton/repos",
      "events_url": "https://api.github.com/users/djpnewton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djpnewton/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "djpnewton",
      "id": 42459,
      "node_id": "MDQ6VXNlcjQyNDU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/42459?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djpnewton",
      "html_url": "https://github.com/djpnewton",
      "followers_url": "https://api.github.com/users/djpnewton/followers",
      "following_url": "https://api.github.com/users/djpnewton/following{/other_user}",
      "gists_url": "https://api.github.com/users/djpnewton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djpnewton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djpnewton/subscriptions",
      "organizations_url": "https://api.github.com/users/djpnewton/orgs",
      "repos_url": "https://api.github.com/users/djpnewton/repos",
      "events_url": "https://api.github.com/users/djpnewton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djpnewton/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce56f5621a94dcc2159ebe57e43da727eab18e6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce56f5621a94dcc2159ebe57e43da727eab18e6c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce56f5621a94dcc2159ebe57e43da727eab18e6c"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 18,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3dbc88647d79dd206a6578dd2a052cabee9abd10",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4be34e388892f950aeddb2da515f6977438ee02a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4be34e388892f950aeddb2da515f6977438ee02a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=4be34e388892f950aeddb2da515f6977438ee02a",
        "patch": "@@ -266,6 +266,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-?\", _(\"This help message\"));\n     strUsage += HelpMessageOpt(\"-alertnotify=<cmd>\", _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\"));\n     strUsage += HelpMessageOpt(\"-blocknotify=<cmd>\", _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\"));\n+    strUsage += HelpMessageOpt(\"-txnotify=<cmd>\", _(\"Execute command when broadcast transactions are recieved (%s in cmd is replaced by TxID)\"));\n     strUsage += HelpMessageOpt(\"-checkblocks=<n>\", strprintf(_(\"How many blocks to check at startup (default: %u, 0 = all)\"), 288));\n     strUsage += HelpMessageOpt(\"-checklevel=<n>\", strprintf(_(\"How thorough the block verification of -checkblocks is (0-4, default: %u)\"), 3));\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), \"bitcoin.conf\"));\n@@ -457,6 +458,14 @@ static void BlockNotifyCallback(const uint256& hashNewTip)\n     boost::thread t(runCommand, strCmd); // thread runs free\n }\n \n+static void TxNotifyCallback(const uint256& txid)\n+{\n+    std::string strCmd = GetArg(\"-txnotify\", \"\");\n+\n+    boost::replace_all(strCmd, \"%s\", txid.GetHex());\n+    boost::thread t(runCommand, strCmd); // thread runs free\n+}\n+\n struct CImportingNow\n {\n     CImportingNow() {\n@@ -1359,6 +1368,9 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     if (mapArgs.count(\"-blocknotify\"))\n         uiInterface.NotifyBlockTip.connect(BlockNotifyCallback);\n \n+    if (mapArgs.count(\"-txnotify\"))\n+        uiInterface.NotifyTx.connect(TxNotifyCallback);\n+\n     uiInterface.InitMessage(_(\"Activating best chain...\"));\n     // scan for better chains in the block chain database, that are not yet connected in the active best chain\n     CValidationState state;"
      },
      {
        "sha": "0e4cf23a3a2a96d858bb834a1e10c8b097fce964",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4be34e388892f950aeddb2da515f6977438ee02a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4be34e388892f950aeddb2da515f6977438ee02a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=4be34e388892f950aeddb2da515f6977438ee02a",
        "patch": "@@ -1070,6 +1070,9 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n     SyncWithWallets(tx, NULL);\n \n+    // Notify external listeners about the new tx.\n+    uiInterface.NotifyTx(hash);\n+\n     return true;\n }\n "
      },
      {
        "sha": "5ad1967a4951cf6db6c7cf8ef7f9c416d34dae55",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4be34e388892f950aeddb2da515f6977438ee02a/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4be34e388892f950aeddb2da515f6977438ee02a/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=4be34e388892f950aeddb2da515f6977438ee02a",
        "patch": "@@ -95,6 +95,9 @@ class CClientUIInterface\n \n     /** New block has been accepted */\n     boost::signals2::signal<void (const uint256& hash)> NotifyBlockTip;\n+\n+    /** New transaction has been accepted */\n+    boost::signals2::signal<void (const uint256& hash)> NotifyTx;\n };\n \n extern CClientUIInterface uiInterface;"
      }
    ]
  }
]