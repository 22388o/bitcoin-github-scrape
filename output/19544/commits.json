[
  {
    "sha": "c2551d00afc60d8adac1b2f97be1441c8e9f6f9d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMjU1MWQwMGFmYzYwZDhhZGFjMWIyZjk3YmUxNDQxYzhlOWY2Zjlk",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-07-17T15:37:11Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-08-02T22:11:07Z"
      },
      "message": "refactor: Add ParseBool to rpc/util\n\nThe helper function encapsulates the boolean parse logic in one place.",
      "tree": {
        "sha": "ee27bcf70a5451c3b89c7e9ad543d5716ddfe947",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee27bcf70a5451c3b89c7e9ad543d5716ddfe947"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c2551d00afc60d8adac1b2f97be1441c8e9f6f9d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAl8nOo4VHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNNDwP/0ICT3PXLU2z57U8jya3rzKvWGux\nhHJTvQOXAYOnEDGfiqoMcsNLP+endVO+DVCM/b2cXHcS4NUnJSGV1vqAH4ZOjKai\n5pFzFHar6qeJVHuEIL0DFnrhdxO6XzDM+VWCcQ1SyEfOyajFuxU48Uhsu+N/HuK3\nML4vdkSsPIeQdAztYH15Z15MfOozPzCgF2FcOF/zhXalST/GNqPyp43WtYPP3V18\nwww3PgoGBsO7sul3Affs0rFnyEBWz9SN5niqYtD/6MsZy4uXeA72vQFevYrgKndP\nek/0WV37STtREiiokT0B9i4ivnqh/RVBs4+LnrOiLFhGcPkdqFAPJ6qBItb/P+wM\nyZsIgnCSvJoQP57JpA+Hpwh2m5+9G4JQi46r4cL63CKveD1QD1CwqAqRMirzGLP7\nYbuXF+0LH4DjJfYbwR98sDwyQjL7nwl0HCObdQGHAUynwk7bgsXEf9iF3715yCPk\n+cZyEVBPphR8T5jKTmtbIGcvrshdanO18b7KqCgF7QJklqQyPJ2JtlOXkorGVa+7\nPd0WkmIK4lzjt/pA4AJttbAraMSiaymf+z3+vmxANHsZOJHFShZ/j6IDCmYKUgLL\nq8lUEF492+ATE7SdcavK4DePxUBQYkVuQZSVfBDqL69pc/iIj1WODQ7xNgWQdRor\npCB53qoswb6NR7K+\n=pOtI\n-----END PGP SIGNATURE-----",
        "payload": "tree ee27bcf70a5451c3b89c7e9ad543d5716ddfe947\nparent a78742830aa35bf57bcb0a4730977a1e5a1876bc\nauthor Fabian Jahr <fjahr@protonmail.com> 1595000231 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1596406267 +0200\n\nrefactor: Add ParseBool to rpc/util\n\nThe helper function encapsulates the boolean parse logic in one place.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2551d00afc60d8adac1b2f97be1441c8e9f6f9d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c2551d00afc60d8adac1b2f97be1441c8e9f6f9d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2551d00afc60d8adac1b2f97be1441c8e9f6f9d/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a78742830aa35bf57bcb0a4730977a1e5a1876bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a78742830aa35bf57bcb0a4730977a1e5a1876bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a78742830aa35bf57bcb0a4730977a1e5a1876bc"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 17,
      "deletions": 24
    },
    "files": [
      {
        "sha": "db80f8a8e9aef6961e1f703f49742f7a3d0ddaef",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 19,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2551d00afc60d8adac1b2f97be1441c8e9f6f9d/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2551d00afc60d8adac1b2f97be1441c8e9f6f9d/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=c2551d00afc60d8adac1b2f97be1441c8e9f6f9d",
        "patch": "@@ -536,10 +536,7 @@ static UniValue getrawmempool(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n-    bool fVerbose = false;\n-    if (!request.params[0].isNull())\n-        fVerbose = request.params[0].get_bool();\n-\n+    const bool fVerbose = ParseBool(request.params[0], false);\n     return MempoolToJSON(EnsureMemPool(request.context), fVerbose);\n }\n \n@@ -564,10 +561,7 @@ static UniValue getmempoolancestors(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n-    bool fVerbose = false;\n-    if (!request.params[1].isNull())\n-        fVerbose = request.params[1].get_bool();\n-\n+    const bool fVerbose = ParseBool(request.params[1], false);\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n \n     const CTxMemPool& mempool = EnsureMemPool(request.context);\n@@ -627,10 +621,7 @@ static UniValue getmempooldescendants(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n-    bool fVerbose = false;\n-    if (!request.params[1].isNull())\n-        fVerbose = request.params[1].get_bool();\n-\n+    const bool fVerbose = ParseBool(request.params[1], false);\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n \n     const CTxMemPool& mempool = EnsureMemPool(request.context);\n@@ -761,10 +752,7 @@ static UniValue getblockheader(const JSONRPCRequest& request)\n             }.Check(request);\n \n     uint256 hash(ParseHashV(request.params[0], \"hash\"));\n-\n-    bool fVerbose = true;\n-    if (!request.params[1].isNull())\n-        fVerbose = request.params[1].get_bool();\n+    const bool fVerbose = ParseBool(request.params[1], true);\n \n     const CBlockIndex* pblockindex;\n     const CBlockIndex* tip;\n@@ -1063,9 +1051,7 @@ UniValue gettxout(const JSONRPCRequest& request)\n     uint256 hash(ParseHashV(request.params[0], \"txid\"));\n     int n = request.params[1].get_int();\n     COutPoint out(hash, n);\n-    bool fMempool = true;\n-    if (!request.params[2].isNull())\n-        fMempool = request.params[2].get_bool();\n+    const bool fMempool = ParseBool(request.params[2], true);\n \n     Coin coin;\n     CCoinsViewCache* coins_view = &::ChainstateActive().CoinsTip();"
      },
      {
        "sha": "ce2e42fe368fd4fe3d58cdf4e408b93a725639da",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2551d00afc60d8adac1b2f97be1441c8e9f6f9d/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2551d00afc60d8adac1b2f97be1441c8e9f6f9d/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=c2551d00afc60d8adac1b2f97be1441c8e9f6f9d",
        "patch": "@@ -1337,10 +1337,9 @@ UniValue finalizepsbt(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"TX decode failed %s\", error));\n     }\n \n-    bool extract = request.params[1].isNull() || (!request.params[1].isNull() && request.params[1].get_bool());\n-\n     CMutableTransaction mtx;\n     bool complete = FinalizeAndExtractPSBT(psbtx, mtx);\n+    const bool extract = ParseBool(request.params[1], true);\n \n     UniValue result(UniValue::VOBJ);\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n@@ -1470,9 +1469,9 @@ UniValue converttopsbt(const JSONRPCRequest& request)\n \n     // parse hex string from parameter\n     CMutableTransaction tx;\n-    bool permitsigdata = request.params[1].isNull() ? false : request.params[1].get_bool();\n-    bool witness_specified = !request.params[2].isNull();\n-    bool iswitness = witness_specified ? request.params[2].get_bool() : false;\n+    const bool permitsigdata = ParseBool(request.params[1], false);\n+    const bool witness_specified = !request.params[2].isNull();\n+    const bool iswitness = ParseBool(request.params[2], false);\n     const bool try_witness = witness_specified ? iswitness : true;\n     const bool try_no_witness = witness_specified ? !iswitness : true;\n     if (!DecodeHexTx(tx, request.params[0].get_str(), try_no_witness, try_witness)) {"
      },
      {
        "sha": "aafbceed098933971b48eaa83d37f561308527d6",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2551d00afc60d8adac1b2f97be1441c8e9f6f9d/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2551d00afc60d8adac1b2f97be1441c8e9f6f9d/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=c2551d00afc60d8adac1b2f97be1441c8e9f6f9d",
        "patch": "@@ -130,6 +130,11 @@ CoinStatsHashType ParseHashType(const UniValue& param, const CoinStatsHashType d\n     }\n }\n \n+bool ParseBool(const UniValue& param, const bool default_value)\n+{\n+    return param.isNull() ? default_value : param.get_bool();\n+}\n+\n std::string HelpExampleCli(const std::string& methodname, const std::string& args)\n {\n     return \"> bitcoin-cli \" + methodname + \" \" + args + \"\\n\";"
      },
      {
        "sha": "7fb9907c34b3c93d856a727405ef9db26a784f3e",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2551d00afc60d8adac1b2f97be1441c8e9f6f9d/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2551d00afc60d8adac1b2f97be1441c8e9f6f9d/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=c2551d00afc60d8adac1b2f97be1441c8e9f6f9d",
        "patch": "@@ -80,6 +80,9 @@ extern std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKe\n \n CoinStatsHashType ParseHashType(const UniValue& param, const CoinStatsHashType default_type);\n \n+/** Parse bool from UniValue param with default fallback */\n+bool ParseBool(const UniValue& param, const bool default_value);\n+\n extern CAmount AmountFromValue(const UniValue& value);\n extern std::string HelpExampleCli(const std::string& methodname, const std::string& args);\n extern std::string HelpExampleRpc(const std::string& methodname, const std::string& args);"
      }
    ]
  }
]