fjahr,2020-07-17 23:05:19,"#19501 introduces more `verbose` flags, which is how I got the idea from reviewing it.",https://github.com/bitcoin/bitcoin/pull/19544#issuecomment-660373780,660373780,
DrahtBot,2020-07-18 08:44:39,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19849 (Assert that RPCArg names are equal to CRPCCommand ones (blockchain,rawtransaction) by MarcoFalke)\n* #19572 (ZMQ: ",https://github.com/bitcoin/bitcoin/pull/19544#issuecomment-660450998,660450998,
fjahr,2020-08-02 21:48:01,Took suggestions by @promag ,https://github.com/bitcoin/bitcoin/pull/19544#issuecomment-667728758,667728758,
promag,2020-08-02 22:12:37,Need to update PR title and reword commit.,https://github.com/bitcoin/bitcoin/pull/19544#issuecomment-667731093,667731093,
fjahr,2020-08-02 22:15:31,"> Need to update PR title and reword commit.\n\nDone, also rebased on master to get access to the git commit message linter that failed in the CI but not locally on my one-liner commit message.",https://github.com/bitcoin/bitcoin/pull/19544#issuecomment-667731354,667731354,
practicalswift,2020-08-14 15:30:41,ACK c2551d00afc60d8adac1b2f97be1441c8e9f6f9d -- suggested version is easier to reason about and patch looks correct,https://github.com/bitcoin/bitcoin/pull/19544#issuecomment-674130777,674130777,
MarcoFalke,2020-08-27 17:49:24,"Should a helper for every type be added?\n\nIt would probably be better to hide all parsing etc within RPCHelpMan, so that the logic in rpc methods itself doesn't need to worry about that",https://github.com/bitcoin/bitcoin/pull/19544#issuecomment-682097958,682097958,
fjahr,2020-08-28 08:52:25,"> Should a helper for every type be added?\n> \n> It would probably be better to hide all parsing etc within RPCHelpMan, so that the logic in rpc methods itself doesn't need to worry about that\n\nYeah, makes sense I think. Unless that is something you are already working on, I will explore it and make a suggestion.",https://github.com/bitcoin/bitcoin/pull/19544#issuecomment-682409610,682409610,
MarcoFalke,2020-08-28 09:08:09,I'd suspect this can only be done after #18531 ,https://github.com/bitcoin/bitcoin/pull/19544#issuecomment-682418087,682418087,
DrahtBot,2020-09-22 17:07:00,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/19544#issuecomment-696854781,696854781,
fanquake,2021-04-08 07:04:00,#18531 is now merged. @fjahr are you still interested in working on this?,https://github.com/bitcoin/bitcoin/pull/19544#issuecomment-815506873,815506873,
MarcoFalke,2021-04-08 10:18:25,Related: #20017 ,https://github.com/bitcoin/bitcoin/pull/19544#issuecomment-815641652,815641652,
fjahr,2021-04-11 14:53:53,"> #18531 is now merged. @fjahr are you still interested in working on this?\n\nYes but I guess #20017 took the same idea and is further along now, so closing.",https://github.com/bitcoin/bitcoin/pull/19544#issuecomment-817320717,817320717,
MarcoFalke,2020-07-18 06:08:56,"Doesn't this change behavior when passed an int?\n\nIf you want to refactor this to a single line without changing behavior, it would read maybe so:\n\n```suggestion\n    const bool fVerbose{request.params[0].isNull() ? false : request.params[0].get_bool()};\n```",https://github.com/bitcoin/bitcoin/pull/19544#discussion_r456755180,456755180,src/rpc/blockchain.cpp
fjahr,2020-07-18 09:41:43,"Yeah, sorry, I forgot to comment on that it would allow us to use ints in more cases. I guess the int case is only used in `rawtransaction.cpp` for historical reasons and we rather want to error in other cases? I removed the int part from the function and removed its use from the one place where it's relevant. And I know this can be made a one-liner but I don't like reading ternary operators for t",https://github.com/bitcoin/bitcoin/pull/19544#discussion_r456771957,456771957,src/rpc/blockchain.cpp
laanwj,2020-07-22 10:30:42,"I like the idea of factoring this out to a function, but I don't personally think ints should be accepted where bools are expected in more cases. Being specific about input types helps catch, for example, bugs when the argument is shifted.\n",https://github.com/bitcoin/bitcoin/pull/19544#discussion_r458695235,458695235,src/rpc/blockchain.cpp
promag,2020-07-23 08:57:11,"nit, `ParseBool`?",https://github.com/bitcoin/bitcoin/pull/19544#discussion_r459307311,459307311,src/rpc/util.h
promag,2020-07-23 08:57:39,Just `return param.isNull() ? default_value : param.get_bool();`?,https://github.com/bitcoin/bitcoin/pull/19544#discussion_r459307586,459307586,src/rpc/util.cpp
fjahr,2020-08-02 21:47:53,"I agree, I changed that already so there is no behavior change anymore now. I just didn't make a clearer comment on it.",https://github.com/bitcoin/bitcoin/pull/19544#discussion_r464127280,464127280,src/rpc/blockchain.cpp
fjahr,2020-08-02 21:48:12,done,https://github.com/bitcoin/bitcoin/pull/19544#discussion_r464127311,464127311,src/rpc/util.cpp
fjahr,2020-08-02 21:48:25,done,https://github.com/bitcoin/bitcoin/pull/19544#discussion_r464127339,464127339,src/rpc/util.h
