[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568196511",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-568196511",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 568196511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODE5NjUxMQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-21T17:09:56Z",
    "updated_at": "2019-12-21T17:09:56Z",
    "author_association": "MEMBER",
    "body": "Related discussion:\r\n- https://github.com/bitcoin/bitcoin/pull/15638#discussion_r268718912 by @ryanofsky \r\n- https://github.com/bitcoin/bitcoin/pull/13949#issuecomment-476322427 by @MarcoFalke ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568196511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568204036",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-568204036",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 568204036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODIwNDAzNg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-21T19:04:33Z",
    "updated_at": "2021-10-16T15:28:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23211](https://github.com/bitcoin/bitcoin/pull/23211) (refactor: move `update_*` structs from txmempool.h to .cpp file by theStack)\n* [#23157](https://github.com/bitcoin/bitcoin/pull/23157) (txmempool -/-> validation 1/2: improve performance of check() and remove dependency on validation by glozow)\n* [#23076](https://github.com/bitcoin/bitcoin/pull/23076) (Pass CFeeRate and CTxMemPool in-params by reference to const by jonatack)\n* [#22919](https://github.com/bitcoin/bitcoin/pull/22919) (fees: skip pointless fee parameter calculation during IBD by RohitRanjangit)\n* [#22677](https://github.com/bitcoin/bitcoin/pull/22677) (cut the validation <-> txmempool circular dependency 2/2 by glozow)\n* [#21464](https://github.com/bitcoin/bitcoin/pull/21464) (Mempool Update Cut-Through Optimization by JeremyRubin)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568204036/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568205753",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-568205753",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 568205753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODIwNTc1Mw==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-21T19:30:57Z",
    "updated_at": "2019-12-21T19:30:57Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568205753/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568258501",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-568258501",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 568258501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODI1ODUwMQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-22T12:39:36Z",
    "updated_at": "2019-12-22T12:39:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK: thanks for nuking circular dependencies",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568258501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568258976",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-568258976",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 568258976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODI1ODk3Ng==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-22T12:47:11Z",
    "updated_at": "2019-12-22T12:47:11Z",
    "author_association": "MEMBER",
    "body": "@promag \r\n> I'd squash 1st and 2nd commits. 3rd commit is unrelated but is a nice cleanup.\r\n\r\nDone.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568258976/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568261039",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-568261039",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 568261039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODI2MTAzOQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-22T13:16:39Z",
    "updated_at": "2019-12-22T13:41:28Z",
    "author_association": "MEMBER",
    "body": "~I stumble on UB sanitizer. How could a move-only change cause an [error](https://travis-ci.org/bitcoin/bitcoin/jobs/628353183)?~\r\n\r\n~Is this a side effect of circular dependencies resolving?~ nm",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568261039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568269159",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-568269159",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 568269159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODI2OTE1OQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-22T14:42:35Z",
    "updated_at": "2019-12-22T14:42:35Z",
    "author_association": "MEMBER",
    "body": "Travis is happy now ;)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/568269159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575673666",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-575673666",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 575673666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTY3MzY2Ng==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-17T15:32:13Z",
    "updated_at": "2020-01-17T15:32:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Generally agree with this change, I've thought about doing it myself a few times myself. It also seems to be a good alternative to the observer pattern mentioned as we change far fewer things to get the same circular dependency break. So a slight code review ACK that this seems correct.\r\n\r\nSlightly short of concept ack for a few reasons:\r\n\r\n1) Needs a simple benchmark to show that we haven't made functions calling the CTxMemPoolEntry's non-header functions slower because they are no longer within the same compilation unit\r\n2) Some other changes I've been working on lately w.r.t. epoch mempool introduce some new classes & move code between the CTxMemPool and CTxMemPoolEntry classes; while those can be rebased, it's not clear where some of the shared code should live (perhaps in a third additional header, or a new circular dependency). We already have some things which are *inherent* circular dependencies (that won't get picked up by the linter, maps of MemPoolChildren/MemPoolParents) that will deliver a big performance win to get rid of (I think it will at least), so I'd rather kill those circular dependencies first so that it doesn't become harder to do later -- I'm happy to open up a PR for that once the first step of my #17268 Project, #17925, goes through.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575673666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577151183",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-577151183",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 577151183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzE1MTE4Mw==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-22T12:07:48Z",
    "updated_at": "2020-01-22T12:07:48Z",
    "author_association": "MEMBER",
    "body": "@JeremyRubin \r\n> ... to show that we haven't made functions calling the CTxMemPoolEntry's non-header functions slower because they are no longer within the same compilation unit\r\n\r\nHow is it possible?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577151183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577303749",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-577303749",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 577303749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzMwMzc0OQ==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-22T17:45:26Z",
    "updated_at": "2020-01-22T17:45:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's annoying, but because these functions were previously in the same translation unit then it's possible they can get completely inlined, but now they're in separate units they will definitely trigger function calls.\r\n\r\nBecause these updater functions get called in hot loops you have possibly replaced something optimized previously with something slow.\r\n\r\nThis matters a bit because we may expect these loops/regions to get even hotter if we increase mempool limits.\r\n\r\nOne way of addressing this would be to make CTxMemPoolEntry header only...",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/577303749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578026970",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-578026970",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 578026970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODAyNjk3MA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T07:47:49Z",
    "updated_at": "2020-01-24T07:47:49Z",
    "author_association": "MEMBER",
    "body": "@JeremyRubin \r\n> It's annoying, but because these functions were previously in the same translation unit then it's possible they can get completely inlined, but now they're in separate units they will definitely trigger function calls.\r\n\r\nIIUC, making function inline depends on compiler and its optimization settings. The `bitcoind` compiled with GCC 7.4.0 was checked with `nm` tool, and `CTxMemPoolEntry` member function symbols are present, therefore those functions are not inlined (except those which are defined in class declaration, as expected).\r\n\r\nIt seems runtime performance issues and circular dependency resolving are orthogonal. And \"yes\", we could \r\n> ... make CTxMemPoolEntry header only...",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578026970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578245894",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-578245894",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 578245894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODI0NTg5NA==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T18:27:57Z",
    "updated_at": "2020-01-24T18:27:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Correct; this is compiler dependent behavior. But we happen to compile with optimizations enabled for release builds -- not sure if we do different flags for non release builds (I think it's the same?).\r\n\r\nPresence of the symbols doesn't prove that they aren't also inlined. An inline function is a hint to inline, not a mandate, and the function can be either called or or inlined depending on context, you would need to check the actual call sites.\r\n\r\nI agree it's not a large issue; but specifically code organization does affect emitted code (this is what LTO is intended, in a sense, to get around, but I don't think we do that other than experimentally)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578245894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578248440",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-578248440",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 578248440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODI0ODQ0MA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T18:35:13Z",
    "updated_at": "2020-01-24T18:35:13Z",
    "author_association": "MEMBER",
    "body": "> Presence of the symbols doesn't prove that they aren't also inlined. An inline function is a hint to inline, not a mandate, and the function can be either called or or inlined depending on context, you would need to check the actual call sites.\r\n\r\nI mean if a function is inlined in all call sites, there is no dedicated assembly code and no symbol. Could a compiler inline a function in some call sites and make a standard function call of the same function in other call sites?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578248440/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578255211",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-578255211",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 578255211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODI1NTIxMQ==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T18:54:13Z",
    "updated_at": "2020-01-24T18:54:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Unless the symbol isn't exported there will be a separate copy of it included in the object for external callers. That extra copy will persist in the final binary so long as there are any non-inlined callers.\r\n\r\nFor a quick check, just look at the size of all functions in dump of the binary. If they're all the same size then it's very likely that all you did was move things around.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578255211/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578264117",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-578264117",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 578264117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODI2NDExNw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T19:19:10Z",
    "updated_at": "2020-01-24T19:19:10Z",
    "author_association": "MEMBER",
    "body": "In C++, `inline` is more than a hint, and actually has a meaning: it's a function that may be defined (and exported from) multiple translation units without conflicting with itself (it's only well defined if all definitions are identical, though). This is what allows having code in .h files. In practice it means the linker will merge all the definitions into one symbol.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578264117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578340006",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-578340006",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 578340006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODM0MDAwNg==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-24T23:20:19Z",
    "updated_at": "2020-01-24T23:20:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think what @gmaxwell says is correct with my question.\r\n\r\n@sipa that sounds correct. These weren't previously marked inline either, so I guess what I meant to capture is that *not* marking inline is a hint *not* to inline but *not* a mandate to *not* inline. E.g., if some function F is called by G, F may or may not be inlined depending on the compiler if they are in the same translation unit, but certainly won't be if F is in a different translation unit, is non inline, and LTO is not enabled.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578340006/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579472172",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-579472172",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 579472172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ3MjE3Mg==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-28T21:47:00Z",
    "updated_at": "2020-01-28T21:47:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think if you were to just put all the mempool entry functions into the header I wouldn't have any concerns. It doesn't seem to me like there's a really strong reason for them to be separate, and any time you change the initializers you've likely also changed the class definition so it doesn't seem like it would trigger recompilation explosions.\r\n\r\nIt also (maybe I'm wrong here) looks like you have some unneeded dependencies in the cpp (e.g., memusage), so that can be pruned out to keep the header small.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579472172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579943665",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-579943665",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 579943665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTk0MzY2NQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-29T20:26:34Z",
    "updated_at": "2020-01-29T20:26:34Z",
    "author_association": "MEMBER",
    "body": "@JeremyRubin Thank you for your review.\r\n\r\n> I think if you were to just put all the mempool entry functions into the header I wouldn't have any concerns.\r\n\r\nDone.\r\n\r\n> It also (maybe I'm wrong here) looks like you have some unneeded dependencies in the cpp (e.g., memusage), so that can be pruned out to keep the header small.\r\n\r\nAll `#include`s are checked again. They all are needed, e.g., `core_memusage.h` is needed for `RecursiveDynamicUsage`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/579943665/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580348874",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-580348874",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 580348874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDM0ODg3NA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-30T16:53:23Z",
    "updated_at": "2020-01-30T16:53:23Z",
    "author_association": "MEMBER",
    "body": "Rebased after #17261 has been merged.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580348874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580419545",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-580419545",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 580419545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDQxOTU0NQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-30T19:38:20Z",
    "updated_at": "2020-01-30T19:38:20Z",
    "author_association": "MEMBER",
    "body": "Looking at the (currently) 9 conflicts, maybe it makes sense to postpone this changeset until after some of the other user-facing/features got merged to the mempool code?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580419545/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/581579799",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-581579799",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 581579799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTU3OTc5OQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-03T19:32:30Z",
    "updated_at": "2020-02-03T19:32:30Z",
    "author_association": "MEMBER",
    "body": "Rebased after #17925 has been merged.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/581579799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589302158",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-589302158",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 589302158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTMwMjE1OA==",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?u=a1574ca2038ff1dfaa9a7764c59ea5ff4f305b5d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-20T20:51:19Z",
    "updated_at": "2020-02-28T20:45:25Z",
    "author_association": "MEMBER",
    "body": "ACK https://github.com/bitcoin/bitcoin/pull/17786/commits/19f6bf826d890cc78bd4a19f10dfbf59dd58c10d\r\n\r\nA few possible refinements:\r\nhttps://github.com/hebasto/bitcoin/compare/20191221-mempool-circ-dep...Empact:2020-02-mempool-circ-dep",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589302158/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612464141",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-612464141",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 612464141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjQ2NDE0MQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-11T16:54:29Z",
    "updated_at": "2020-04-11T16:54:29Z",
    "author_association": "MEMBER",
    "body": "Updated 19f6bf826d890cc78bd4a19f10dfbf59dd58c10d  -> 287b930a18921716bdf6961350959804042b46b0 ([pr17786.07](https://github.com/hebasto/bitcoin/commits/pr17786.07) -> [pr17786.08](https://github.com/hebasto/bitcoin/commits/pr17786.08), [diff](https://github.com/hebasto/bitcoin/compare/pr17786.07..pr17786.08)):\r\n\r\n- implemented @Empact's [suggestions](https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-589302158)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612464141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612515847",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-612515847",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 612515847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjUxNTg0Nw==",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?u=a1574ca2038ff1dfaa9a7764c59ea5ff4f305b5d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-11T21:20:26Z",
    "updated_at": "2020-04-12T00:39:58Z",
    "author_association": "MEMBER",
    "body": "Re-ACK https://github.com/bitcoin/bitcoin/pull/17786/commits/287b930a18921716bdf6961350959804042b46b0 - reviewed diff particularly changed lines as identified by git. Didn't audit the includes.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612515847/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653387539",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-653387539",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 653387539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzM4NzUzOQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-03T07:01:07Z",
    "updated_at": "2020-07-03T07:01:07Z",
    "author_association": "MEMBER",
    "body": "Rebased 287b930a18921716bdf6961350959804042b46b0 -> 219324ca4fe0d466c9007c30543c88444dec3569 ([pr17786.08](https://github.com/hebasto/bitcoin/commits/pr17786.08) -> [pr17786.09](https://github.com/hebasto/bitcoin/commits/pr17786.09)) due to the conflict with #19331.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653387539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688286559",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-688286559",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 688286559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODI4NjU1OQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-07T12:14:40Z",
    "updated_at": "2020-09-07T12:14:40Z",
    "author_association": "MEMBER",
    "body": "Rebased 219324ca4fe0d466c9007c30543c88444dec3569 -> 9782a8ee773a59667424353de047fd6bb9c3cb5d ([pr17786.09](https://github.com/hebasto/bitcoin/commits/pr17786.09) -> [pr17786.10](https://github.com/hebasto/bitcoin/commits/pr17786.10)) due to the conflict with #19478.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688286559/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688466974",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-688466974",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 688466974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODQ2Njk3NA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-07T18:30:57Z",
    "updated_at": "2020-09-07T18:30:57Z",
    "author_association": "MEMBER",
    "body": "@promag @empact Mind re-reviewing?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688466974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688541456",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-688541456",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 688541456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODU0MTQ1Ng==",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?u=a1574ca2038ff1dfaa9a7764c59ea5ff4f305b5d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-07T23:36:44Z",
    "updated_at": "2020-09-07T23:36:44Z",
    "author_association": "MEMBER",
    "body": "Code Review ACK https://github.com/bitcoin/bitcoin/pull/17786/commits/9782a8ee773a59667424353de047fd6bb9c3cb5d",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688541456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/924059983",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-924059983",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 924059983,
    "node_id": "IC_kwDOABII5843FAlP",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-21T14:45:25Z",
    "updated_at": "2021-09-21T14:45:25Z",
    "author_association": "MEMBER",
    "body": "Why the close?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/924059983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926846822",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-926846822",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 926846822,
    "node_id": "IC_kwDOABII5843Po9m",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-24T18:44:41Z",
    "updated_at": "2021-09-24T18:44:41Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke \r\n> Why the close?\r\n\r\nReopened and rebased 9782a8ee773a59667424353de047fd6bb9c3cb5d -> 77438e18478ca0a06708f3e988fdb31567bb76e0 ([pr17786.10](https://github.com/hebasto/bitcoin/commits/pr17786.10) -> [pr17786.11](https://github.com/hebasto/bitcoin/commits/pr17786.11)) on top of the merged #23054 and the recent CI changes.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926846822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/950980398",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-950980398",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17786",
    "id": 950980398,
    "node_id": "IC_kwDOABII5844rs8u",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-25T14:21:15Z",
    "updated_at": "2021-10-25T14:21:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n\ud83d\udc19 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/950980398/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484540818",
    "pull_request_review_id": 483684825,
    "id": 484540818,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU0MDgxOA==",
    "diff_hunk": "@@ -0,0 +1,175 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TXMEMPOOL_ENTRY_H\n+#define BITCOIN_TXMEMPOOL_ENTRY_H\n+\n+#include <amount.h>\n+#include <consensus/validation.h>\n+#include <core_memusage.h>\n+#include <policy/settings.h>\n+#include <primitives/transaction.h>\n+\n+#include <chrono>\n+\n+class CBlockIndex;\n+\n+struct LockPoints {\n+    // Will be set to the blockchain height and median time past\n+    // values that would be necessary to satisfy all relative locktime\n+    // constraints (BIP68) of this tx given our view of block chain history\n+    int height{0};\n+    int64_t time{0};\n+    // As long as the current chain descends from the highest height block\n+    // containing one of the inputs used in the calculation, then the cached\n+    // values are still valid even after a reorg.\n+    CBlockIndex* maxInputBlock{nullptr};\n+};\n+\n+struct CompareIteratorByHash {\n+    // SFINAE for T where T is either a pointer type (e.g., a txiter) or a reference_wrapper<T>\n+    // (e.g. a wrapped CTxMemPoolEntry&)\n+    template <typename T>\n+    bool operator()(const std::reference_wrapper<T>& a, const std::reference_wrapper<T>& b) const\n+    {\n+        return a.get().GetTx().GetHash() < b.get().GetTx().GetHash();\n+    }\n+    template <typename T>\n+    bool operator()(const T& a, const T& b) const\n+    {\n+        return a->GetTx().GetHash() < b->GetTx().GetHash();\n+    }\n+};\n+/** \\class CTxMemPoolEntry\n+ *\n+ * CTxMemPoolEntry stores data about the corresponding transaction, as well\n+ * as data about all in-mempool transactions that depend on the transaction\n+ * (\"descendant\" transactions).\n+ *\n+ * When a new entry is added to the mempool, we update the descendant state\n+ * (nCountWithDescendants, nSizeWithDescendants, and nModFeesWithDescendants) for\n+ * all ancestors of the newly added transaction.\n+ *\n+ */\n+\n+class CTxMemPoolEntry\n+{\n+public:\n+    typedef std::reference_wrapper<const CTxMemPoolEntry> CTxMemPoolEntryRef;\n+    // two aliases, should the types ever diverge\n+    typedef std::set<CTxMemPoolEntryRef, CompareIteratorByHash> Parents;\n+    typedef std::set<CTxMemPoolEntryRef, CompareIteratorByHash> Children;\n+\n+private:\n+    const CTransactionRef tx;\n+    mutable Parents m_parents;\n+    mutable Children m_children;\n+    const CAmount nFee;             //!< Cached to avoid expensive parent-transaction lookups\n+    const size_t nTxWeight;         //!< ... and avoid recomputing tx weight (also used for GetTxSize())\n+    const size_t nUsageSize;        //!< ... and total memory usage\n+    const int64_t nTime;            //!< Local time when entering the mempool\n+    const unsigned int entryHeight; //!< Chain height when entering the mempool\n+    const bool spendsCoinbase;      //!< keep track of transactions that spend a coinbase\n+    const int64_t sigOpCost;        //!< Total sigop cost\n+    int64_t feeDelta{0};            //!< Used for determining the priority of the transaction for mining in a block\n+    LockPoints lockPoints;          //!< Track the height and time at which tx was final\n+\n+    // Information about descendants of this transaction that are in the\n+    // mempool; if we remove this transaction we must remove all of these\n+    // descendants as well.\n+    uint64_t nCountWithDescendants{1}; //!< number of descendant transactions",
    "path": "src/txmempool_entry.h",
    "position": 83,
    "original_position": 81,
    "commit_id": "77438e18478ca0a06708f3e988fdb31567bb76e0",
    "original_commit_id": "9782a8ee773a59667424353de047fd6bb9c3cb5d",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: slight preference to do all initialization in the constructor (for consistency/minimal diff)",
    "created_at": "2020-09-07T18:26:46Z",
    "updated_at": "2020-09-07T18:27:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#discussion_r484540818",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17786",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484540818"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17786#discussion_r484540818"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17786"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484540818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 83,
    "original_line": 83,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716007613",
    "pull_request_review_id": 763571375,
    "id": 716007613,
    "node_id": "PRRC_kwDOABII584qrWi9",
    "diff_hunk": "@@ -0,0 +1,183 @@\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TXMEMPOOL_ENTRY_H\n+#define BITCOIN_TXMEMPOOL_ENTRY_H\n+\n+#include <amount.h>\n+#include <consensus/validation.h>\n+#include <core_memusage.h>\n+#include <policy/settings.h>\n+#include <primitives/transaction.h>\n+#include <util/epochguard.h>\n+\n+#include <chrono>\n+\n+class CBlockIndex;\n+\n+struct LockPoints {\n+    // Will be set to the blockchain height and median time past\n+    // values that would be necessary to satisfy all relative locktime\n+    // constraints (BIP68) of this tx given our view of block chain history\n+    int height{0};\n+    int64_t time{0};\n+    // As long as the current chain descends from the highest height block\n+    // containing one of the inputs used in the calculation, then the cached\n+    // values are still valid even after a reorg.\n+    CBlockIndex* maxInputBlock{nullptr};\n+};\n+\n+struct CompareIteratorByHash {\n+    // SFINAE for T where T is either a pointer type (e.g., a txiter) or a reference_wrapper<T>\n+    // (e.g. a wrapped CTxMemPoolEntry&)\n+    template <typename T>\n+    bool operator()(const std::reference_wrapper<T>& a, const std::reference_wrapper<T>& b) const\n+    {\n+        return a.get().GetTx().GetHash() < b.get().GetTx().GetHash();\n+    }\n+    template <typename T>\n+    bool operator()(const T& a, const T& b) const\n+    {\n+        return a->GetTx().GetHash() < b->GetTx().GetHash();\n+    }\n+};\n+\n+/** \\class CTxMemPoolEntry\n+ *\n+ * CTxMemPoolEntry stores data about the corresponding transaction, as well\n+ * as data about all in-mempool transactions that depend on the transaction\n+ * (\"descendant\" transactions).\n+ *\n+ * When a new entry is added to the mempool, we update the descendant state\n+ * (nCountWithDescendants, nSizeWithDescendants, and nModFeesWithDescendants) for\n+ * all ancestors of the newly added transaction.\n+ *\n+ */\n+\n+class CTxMemPoolEntry\n+{\n+public:\n+    typedef std::reference_wrapper<const CTxMemPoolEntry> CTxMemPoolEntryRef;\n+    // two aliases, should the types ever diverge\n+    typedef std::set<CTxMemPoolEntryRef, CompareIteratorByHash> Parents;\n+    typedef std::set<CTxMemPoolEntryRef, CompareIteratorByHash> Children;\n+\n+private:\n+    const CTransactionRef tx;\n+    mutable Parents m_parents;\n+    mutable Children m_children;\n+    const CAmount nFee;             //!< Cached to avoid expensive parent-transaction lookups\n+    const size_t nTxWeight;         //!< ... and avoid recomputing tx weight (also used for GetTxSize())\n+    const size_t nUsageSize;        //!< ... and total memory usage\n+    const int64_t nTime;            //!< Local time when entering the mempool\n+    const unsigned int entryHeight; //!< Chain height when entering the mempool\n+    const bool spendsCoinbase;      //!< keep track of transactions that spend a coinbase\n+    const int64_t sigOpCost;        //!< Total sigop cost\n+    int64_t feeDelta{0};            //!< Used for determining the priority of the transaction for mining in a block\n+    LockPoints lockPoints;     //!< Track the height and time at which tx was final\n+\n+    // Information about descendants of this transaction that are in the\n+    // mempool; if we remove this transaction we must remove all of these\n+    // descendants as well.\n+    uint64_t nCountWithDescendants{1}; //!< number of descendant transactions\n+    uint64_t nSizeWithDescendants;   //!< ... and size\n+    CAmount nModFeesWithDescendants; //!< ... and total fees (all including us)\n+\n+    // Analogous statistics for ancestor transactions\n+    uint64_t nCountWithAncestors{1};\n+    uint64_t nSizeWithAncestors;\n+    CAmount nModFeesWithAncestors;\n+    int64_t nSigOpCostWithAncestors;\n+\n+public:\n+    CTxMemPoolEntry(const CTransactionRef& tx, CAmount fee,\n+                    int64_t time, unsigned int entry_height,\n+                    bool spends_coinbase, int64_t sigops_cost, LockPoints lp)\n+        : tx{tx},\n+          nFee{fee},\n+          nTxWeight(GetTransactionWeight(*tx)),\n+          nUsageSize{RecursiveDynamicUsage(tx)},\n+          nTime{time},\n+          entryHeight{entry_height},\n+          spendsCoinbase{spends_coinbase},\n+          sigOpCost{sigops_cost},\n+          lockPoints{lp},\n+          nSizeWithDescendants{GetTxSize()},\n+          nModFeesWithDescendants{nFee},\n+          nSizeWithAncestors{GetTxSize()},\n+          nModFeesWithAncestors{nFee},\n+          nSigOpCostWithAncestors{sigOpCost} {}\n+\n+    const CTransaction& GetTx() const { return *this->tx; }\n+    CTransactionRef GetSharedTx() const { return this->tx; }\n+    const CAmount& GetFee() const { return nFee; }\n+    size_t GetTxSize() const\n+    {\n+        return GetVirtualTransactionSize(nTxWeight, sigOpCost);",
    "path": "src/txmempool_entry.h",
    "position": 117,
    "original_position": 117,
    "commit_id": "77438e18478ca0a06708f3e988fdb31567bb76e0",
    "original_commit_id": "9161fefe06b51aca11d1a65768deca217a1f6829",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it makes sense to keep this in the cpp file, to keep the header free of unneeded includes.",
    "created_at": "2021-09-25T07:49:46Z",
    "updated_at": "2021-09-25T07:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#discussion_r716007613",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17786",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716007613"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17786#discussion_r716007613"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17786"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716007613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 117,
    "original_line": 117,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716007966",
    "pull_request_review_id": 763571588,
    "id": 716007966,
    "node_id": "PRRC_kwDOABII584qrWoe",
    "diff_hunk": "@@ -0,0 +1,183 @@\n+// Copyright (c) 2009-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TXMEMPOOL_ENTRY_H\n+#define BITCOIN_TXMEMPOOL_ENTRY_H\n+\n+#include <amount.h>\n+#include <consensus/validation.h>\n+#include <core_memusage.h>\n+#include <policy/settings.h>\n+#include <primitives/transaction.h>\n+#include <util/epochguard.h>\n+\n+#include <chrono>\n+\n+class CBlockIndex;\n+\n+struct LockPoints {\n+    // Will be set to the blockchain height and median time past\n+    // values that would be necessary to satisfy all relative locktime\n+    // constraints (BIP68) of this tx given our view of block chain history\n+    int height{0};\n+    int64_t time{0};\n+    // As long as the current chain descends from the highest height block\n+    // containing one of the inputs used in the calculation, then the cached\n+    // values are still valid even after a reorg.\n+    CBlockIndex* maxInputBlock{nullptr};\n+};\n+\n+struct CompareIteratorByHash {\n+    // SFINAE for T where T is either a pointer type (e.g., a txiter) or a reference_wrapper<T>\n+    // (e.g. a wrapped CTxMemPoolEntry&)\n+    template <typename T>\n+    bool operator()(const std::reference_wrapper<T>& a, const std::reference_wrapper<T>& b) const\n+    {\n+        return a.get().GetTx().GetHash() < b.get().GetTx().GetHash();\n+    }\n+    template <typename T>\n+    bool operator()(const T& a, const T& b) const\n+    {\n+        return a->GetTx().GetHash() < b->GetTx().GetHash();\n+    }\n+};\n+\n+/** \\class CTxMemPoolEntry\n+ *\n+ * CTxMemPoolEntry stores data about the corresponding transaction, as well\n+ * as data about all in-mempool transactions that depend on the transaction\n+ * (\"descendant\" transactions).\n+ *\n+ * When a new entry is added to the mempool, we update the descendant state\n+ * (nCountWithDescendants, nSizeWithDescendants, and nModFeesWithDescendants) for\n+ * all ancestors of the newly added transaction.\n+ *\n+ */\n+\n+class CTxMemPoolEntry\n+{\n+public:\n+    typedef std::reference_wrapper<const CTxMemPoolEntry> CTxMemPoolEntryRef;\n+    // two aliases, should the types ever diverge\n+    typedef std::set<CTxMemPoolEntryRef, CompareIteratorByHash> Parents;\n+    typedef std::set<CTxMemPoolEntryRef, CompareIteratorByHash> Children;\n+\n+private:\n+    const CTransactionRef tx;\n+    mutable Parents m_parents;\n+    mutable Children m_children;\n+    const CAmount nFee;             //!< Cached to avoid expensive parent-transaction lookups\n+    const size_t nTxWeight;         //!< ... and avoid recomputing tx weight (also used for GetTxSize())\n+    const size_t nUsageSize;        //!< ... and total memory usage\n+    const int64_t nTime;            //!< Local time when entering the mempool\n+    const unsigned int entryHeight; //!< Chain height when entering the mempool\n+    const bool spendsCoinbase;      //!< keep track of transactions that spend a coinbase\n+    const int64_t sigOpCost;        //!< Total sigop cost\n+    int64_t feeDelta{0};            //!< Used for determining the priority of the transaction for mining in a block\n+    LockPoints lockPoints;     //!< Track the height and time at which tx was final\n+\n+    // Information about descendants of this transaction that are in the\n+    // mempool; if we remove this transaction we must remove all of these\n+    // descendants as well.\n+    uint64_t nCountWithDescendants{1}; //!< number of descendant transactions\n+    uint64_t nSizeWithDescendants;   //!< ... and size\n+    CAmount nModFeesWithDescendants; //!< ... and total fees (all including us)\n+\n+    // Analogous statistics for ancestor transactions\n+    uint64_t nCountWithAncestors{1};\n+    uint64_t nSizeWithAncestors;\n+    CAmount nModFeesWithAncestors;\n+    int64_t nSigOpCostWithAncestors;\n+\n+public:\n+    CTxMemPoolEntry(const CTransactionRef& tx, CAmount fee,\n+                    int64_t time, unsigned int entry_height,\n+                    bool spends_coinbase, int64_t sigops_cost, LockPoints lp)\n+        : tx{tx},\n+          nFee{fee},\n+          nTxWeight(GetTransactionWeight(*tx)),\n+          nUsageSize{RecursiveDynamicUsage(tx)},\n+          nTime{time},\n+          entryHeight{entry_height},\n+          spendsCoinbase{spends_coinbase},\n+          sigOpCost{sigops_cost},\n+          lockPoints{lp},\n+          nSizeWithDescendants{GetTxSize()},\n+          nModFeesWithDescendants{nFee},\n+          nSizeWithAncestors{GetTxSize()},\n+          nModFeesWithAncestors{nFee},\n+          nSigOpCostWithAncestors{sigOpCost} {}\n+\n+    const CTransaction& GetTx() const { return *this->tx; }\n+    CTransactionRef GetSharedTx() const { return this->tx; }\n+    const CAmount& GetFee() const { return nFee; }\n+    size_t GetTxSize() const\n+    {\n+        return GetVirtualTransactionSize(nTxWeight, sigOpCost);",
    "path": "src/txmempool_entry.h",
    "position": 117,
    "original_position": 117,
    "commit_id": "77438e18478ca0a06708f3e988fdb31567bb76e0",
    "original_commit_id": "9161fefe06b51aca11d1a65768deca217a1f6829",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There [were](https://github.com/bitcoin/bitcoin/pull/17786#issuecomment-579472172) concerns from @JeremyRubin:\r\n> I think if you were to just put all the mempool entry functions into the header I wouldn't have any concerns.",
    "created_at": "2021-09-25T07:53:24Z",
    "updated_at": "2021-09-25T07:53:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17786#discussion_r716007966",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17786",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716007966"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17786#discussion_r716007966"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17786"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/716007966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 117,
    "original_line": 117,
    "side": "RIGHT",
    "in_reply_to_id": 716007613
  }
]