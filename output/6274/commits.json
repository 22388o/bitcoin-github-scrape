[
  {
    "sha": "02a6702a82a5b00e0e0351041dd3267308b7f319",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMmE2NzAyYTgyYTViMDBlMGUwMzUxMDQxZGQzMjY3MzA4YjdmMzE5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-06-12T10:00:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-06-15T07:53:33Z"
      },
      "message": "Add option `-alerts` to opt out of alert system\n\nMake it possible to opt-out of the centralized alert system by providing\nan option `-noalerts` or `-alerts=0`. The default remains unchanged.\n\nThis is a gentler form of #6260, in which I went a bit overboard by\nremoving the alert system completely.\n\nI intend to add this to the GUI options in another pull after this.",
      "tree": {
        "sha": "e7e41447c2b7684c76ccada1242530a6b7556f64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7e41447c2b7684c76ccada1242530a6b7556f64"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02a6702a82a5b00e0e0351041dd3267308b7f319",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02a6702a82a5b00e0e0351041dd3267308b7f319",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/02a6702a82a5b00e0e0351041dd3267308b7f319",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02a6702a82a5b00e0e0351041dd3267308b7f319/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ebab5d3c59558000f0e0fd18b7f26ed6f31ac21a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebab5d3c59558000f0e0fd18b7f26ed6f31ac21a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ebab5d3c59558000f0e0fd18b7f26ed6f31ac21a"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 8,
      "deletions": 1
    },
    "files": [
      {
        "sha": "fc7a7fc7fc45a6dfe16332c15f02c07596c4d8e8",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02a6702a82a5b00e0e0351041dd3267308b7f319/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02a6702a82a5b00e0e0351041dd3267308b7f319/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=02a6702a82a5b00e0e0351041dd3267308b7f319",
        "patch": "@@ -266,6 +266,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     // Do not translate _(...) -help-debug options, Many technical terms, and only a very small audience, so is unnecessary stress to translators.\n     string strUsage = HelpMessageGroup(_(\"Options:\"));\n     strUsage += HelpMessageOpt(\"-?\", _(\"This help message\"));\n+    strUsage += HelpMessageOpt(\"-alerts\", strprintf(_(\"Receive and display P2P network alerts (default: %u)\"), DEFAULT_ALERTS));\n     strUsage += HelpMessageOpt(\"-alertnotify=<cmd>\", _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\"));\n     strUsage += HelpMessageOpt(\"-blocknotify=<cmd>\", _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\"));\n     strUsage += HelpMessageOpt(\"-checkblocks=<n>\", strprintf(_(\"How many blocks to check at startup (default: %u, 0 = all)\"), 288));\n@@ -865,6 +866,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     fIsBareMultisigStd = GetBoolArg(\"-permitbaremultisig\", true);\n     nMaxDatacarrierBytes = GetArg(\"-datacarriersize\", nMaxDatacarrierBytes);\n \n+    fAlerts = GetBoolArg(\"-alerts\", DEFAULT_ALERTS);\n+\n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log\n \n     // Initialize elliptic curve code"
      },
      {
        "sha": "49263a13fc51a0a9407a5996493b95bd74db7272",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02a6702a82a5b00e0e0351041dd3267308b7f319/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02a6702a82a5b00e0e0351041dd3267308b7f319/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=02a6702a82a5b00e0e0351041dd3267308b7f319",
        "patch": "@@ -61,6 +61,7 @@ bool fCheckBlockIndex = false;\n bool fCheckpointsEnabled = true;\n size_t nCoinCacheUsage = 5000 * 300;\n uint64_t nPruneTarget = 0;\n+bool fAlerts = DEFAULT_ALERTS;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n CFeeRate minRelayTxFee = CFeeRate(1000);\n@@ -4622,7 +4623,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n-    else if (strCommand == \"alert\")\n+    else if (fAlerts && strCommand == \"alert\")\n     {\n         CAlert alert;\n         vRecv >> alert;"
      },
      {
        "sha": "aceac2831b4be5cd00378ba4ebe29288cb451559",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02a6702a82a5b00e0e0351041dd3267308b7f319/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02a6702a82a5b00e0e0351041dd3267308b7f319/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=02a6702a82a5b00e0e0351041dd3267308b7f319",
        "patch": "@@ -52,6 +52,8 @@ static const unsigned int DEFAULT_BLOCK_MAX_SIZE = 750000;\n static const unsigned int DEFAULT_BLOCK_MIN_SIZE = 0;\n /** Default for -blockprioritysize, maximum space for zero/low-fee transactions **/\n static const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE = 50000;\n+/** Default for accepting alerts from the P2P network. */\n+static const bool DEFAULT_ALERTS = true;\n /** The maximum size for transactions we're willing to relay/mine */\n static const unsigned int MAX_STANDARD_TX_SIZE = 100000;\n /** Maximum number of signature check operations in an IsStandard() P2SH script */\n@@ -113,6 +115,7 @@ extern bool fCheckBlockIndex;\n extern bool fCheckpointsEnabled;\n extern size_t nCoinCacheUsage;\n extern CFeeRate minRelayTxFee;\n+extern bool fAlerts;\n \n /** Best header we've seen so far (used for getheaders queries' starting points). */\n extern CBlockIndex *pindexBestHeader;"
      }
    ]
  }
]