[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/275191822",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-275191822",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 275191822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTE5MTgyMg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T18:30:33Z",
    "updated_at": "2017-01-25T18:30:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased ed457a39ebaa672cce21622d3af422fe50730580 -> b1ac3cff00a51c0b8965b7a85fa489c98409ddff to resolve merge conflicts with bumpfee (#8456).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/275191822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/275196684",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-275196684",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 275196684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTE5NjY4NA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T18:48:42Z",
    "updated_at": "2017-01-25T18:48:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm thinking of splitting this up into two commits to make it easier to review. First commit would change CreateTransaction to return a CTransactionRef instead of CWalletTx. Second commit would change AddToWallet to accept a CTransactionRef instead of a CWalletTx.\r\n\r\nIf any reviewers would prefer this you can let me know.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/275196684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/275207263",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-275207263",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 275207263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTIwNzI2Mw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T19:26:39Z",
    "updated_at": "2017-01-25T19:26:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Splitting commits into logical breaks is always appreciated.\n\nOn 01/25/17 18:48, Russell Yanofsky wrote:\n> I'm thinking of splitting this up into two commits to make it easier to\n> review. First commit would change CreateTransaction to return a\n> CTransactionRef instead of CWalletTx. Second commit would change\n> AddToWallet to accept a CTransactionRef instead of a CWalletTx.\n> \n> If any reviewers would prefer this you can let me know.\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-275196684>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAnoHu0xZqwtESQp3_rXWoR3OurDnNzgks5rV5kPgaJpZM4LRR4W>.\n> \n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/275207263/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/275250693",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-275250693",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 275250693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTI1MDY5Mw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-25T22:17:34Z",
    "updated_at": "2017-01-25T22:17:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hum, reading this (finally) now, I'm not sure if I'm a big fan of this approach. The call-function-which-callsback-to-let-you-fill-in-things-that-really-should-have-been-arguments pattern really sucks. On the flip side, passing in CWalletTxes, and copying those into mapWallet can also lead to issues if you try to do anything to the object you just passed in thinking it is what got stored in the wallet (a mistake I made recently).\r\n\r\nMaybe we should adapt some of these functions (AddToWallet/CommitTransaction/whatever) to just always take an rvalue to a CWalletTx. This leaves only AddToWalletIfInvolvingMe (I think) which has to update-or-add, and that can just use an internal version of AddToWallet which takes the CWalletDB as an argument instead of creating its own.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/275250693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277122702",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-277122702",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 277122702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzEyMjcwMg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-02T23:51:36Z",
    "updated_at": "2017-02-02T23:51:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The call-function-which-callsback-to-let-you-fill-in-things-that-really-should-have-been-arguments pattern really sucks.\r\n\r\nIf you are adamant about this, could you say more about why it sucks? I think a callback is exactly the thing you want when you are doing an in-place update to a data structure.\r\n\r\nIn any case, I agree that CommitTransaction shouldn't take a callback, so I changed it to just take a transaction ref. So now there are way fewer callbacks (I think only 3 left in non-test code).\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277122702/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277328482",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-277328482",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 277328482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzMyODQ4Mg==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-03T18:46:10Z",
    "updated_at": "2017-02-03T18:46:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm just generally not a fan of callbacks making ownership models inconsistent. eg this kind of thing is where people always fuck up lockordering (though admittedly less so in this particular case, more the general case of callbacks going in both directions between modules).\r\n\r\nSo I do like this version much better, but still not sure the call back is required to be publicly exposed...Can we just leave MarkReplaced and add a similar function for importpruned funds to use (I dont believe the double-disk-sync in importprunedfunds will make for inconsistent/bad on-disk state?). Then we can make AddToWallet(..., callback) private and use AddToWalletIfInvolvingMe (which should probably also take a CTransactionRef, not a CTransaction, though maybe thats for a separate PR) publicly.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277328482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277335035",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-277335035",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 277335035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzMzNTAzNQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-03T19:10:56Z",
    "updated_at": "2017-02-03T19:10:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Can we just leave MarkReplaced and add a similar function for importpruned funds to use\r\n\r\nWill try that. In the meantime I moved the non-AddToWallet cleanup to #9680 so it can be considered separately. By the way #9369 is another PR which significantly simplifies AddToWallet.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277335035/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348631717",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-348631717",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 348631717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODYzMTcxNw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-01T22:31:12Z",
    "updated_at": "2017-12-01T22:31:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Can we just leave MarkReplaced and add a similar function for importpruned funds to use\r\n\r\nImplemented this suggestion. (New function is `CWallet::AddTransaction`). I also went ahead and disabled the CWalletTx copy constructor. Interestingly this uncovered a bunch of cases where we were unwittingly copying wallet transactions in loops due to writing:\r\n```c++\r\nfor (const std::pair<uint256, CWalletTx>& pairWtx : pwallet->mapWallet)\r\n```\r\n\r\ninstead of:\r\n```c++\r\nfor (const std::pair<const uint256, CWalletTx>& pairWtx : pwallet->mapWallet)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/348631717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/371519076",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-371519076",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 371519076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUxOTA3Ng==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T15:21:26Z",
    "updated_at": "2018-03-08T15:21:26Z",
    "author_association": "MEMBER",
    "body": "Needs rebase to fix travis (sorry)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/371519076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372424339",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-372424339",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 372424339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQyNDMzOQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T18:55:25Z",
    "updated_at": "2018-03-12T22:12:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Needs rebase to fix travis (sorry)\r\n\r\nRebased 71bce6b0f4aee487026afd31ada41a4e6028abd3 -> 31297f007b2424ab5036258ed782aacc70237a7f ([pr/atw-nomerge.33](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.33) -> [pr/atw-nomerge.34](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.34)) for #12607.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372424339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372853226",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-372853226",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 372853226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjg1MzIyNg==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T23:27:29Z",
    "updated_at": "2018-03-13T23:27:29Z",
    "author_association": "MEMBER",
    "body": "Re-slight-utACK 8a6ec70",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/372853226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373499190",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-373499190",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 373499190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQ5OTE5MA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-15T19:41:47Z",
    "updated_at": "2018-03-15T19:41:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased e15246fc310599770332021d14b96ce3f213a82b -> d62357a7c7c8c34a55580a31ddbfd04a9fa72591 ([pr/atw-nomerge.37](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.37) -> [pr/atw-nomerge.38](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.38)) due to conflict with #12681 and after merge of base PR #9680.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373499190/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/398550587",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-398550587",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 398550587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODU1MDU4Nw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-19T21:22:47Z",
    "updated_at": "2019-05-15T15:35:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Needs rebase \r\n\r\nRebased cad8b14857d8e310ebad8a850c9e6450e13360fc -> a494d2a4472ea63620b1f6cce20cb726590eb75b ([pr/atw-nomerge.42](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.42) -> [pr/atw-nomerge.43](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.43)) due to minor conflict with #13437.\r\nRebased a494d2a4472ea63620b1f6cce20cb726590eb75b -> 497f8a035ca2788564266f426033f52f982075ed ([pr/atw-nomerge.43](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.43) -> [pr/atw-nomerge.44](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.44)) due to conflict with #13622\r\nRebased 497f8a035ca2788564266f426033f52f982075ed -> ba8ade94a4291b761f6a0395a9d6345782388c91 ([pr/atw-nomerge.44](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.44) -> [pr/atw-nomerge.45](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.45)) due to conflict with #13774\r\nRebased ba8ade94a4291b761f6a0395a9d6345782388c91 -> 876d885730e8572e4616b0067595c91f0545dd55 ([pr/atw-nomerge.45](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.45) -> [pr/atw-nomerge.46](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.46)) due to conflict with #12992\r\nRebased 876d885730e8572e4616b0067595c91f0545dd55 -> 9274458aedb68919618b13568432998b35430e6f ([pr/atw-nomerge.46](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.46) -> [pr/atw-nomerge.47](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.47)) due to conflict with #14023\r\nRebased 9274458aedb68919618b13568432998b35430e6f -> a0d1323d7ef977b0ed78ec675d8bb14fa5e672d5 ([pr/atw-nomerge.47](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.47) -> [pr/atw-nomerge.48](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.48)) due to conflict with #13825\r\nRebased a0d1323d7ef977b0ed78ec675d8bb14fa5e672d5 -> 4b077293cec57f0b5f3bc010beb5ce1a9820a9ef ([pr/atw-nomerge.48](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.48) -> [pr/atw-nomerge.49](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.49)) due to conflict with #14287\r\nUpdated 4b077293cec57f0b5f3bc010beb5ce1a9820a9ef -> 15adcd19e49399590b5224a6a5e0a11e003eac53 ([pr/atw-nomerge.49](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.49) -> [pr/atw-nomerge.50](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.50)) with suggested lint fixes\r\nUpdated 15adcd19e49399590b5224a6a5e0a11e003eac53 -> ca7b4e24324464f04053145e58c25bfa5e0c5a51 ([pr/atw-nomerge.50](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.50) -> [pr/atw-nomerge.51](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.51)) with suggested lint fixes\r\nRebased ca7b4e24324464f04053145e58c25bfa5e0c5a51 -> 8cbc44f92f0932c87abadbd7c85e246d5b37b707 ([pr/atw-nomerge.51](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.51) -> [pr/atw-nomerge.52](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.52)) due to conflict with #11634\r\nAdded 1 commits 8cbc44f92f0932c87abadbd7c85e246d5b37b707 -> 845345c70c42411373a480406686b67870a235ad ([pr/atw-nomerge.52](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.52) -> [pr/atw-nomerge.53](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.53), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/atw-nomerge.52...pr/atw-nomerge.53)) with MeshCollider suggestions.\r\nRebased 845345c70c42411373a480406686b67870a235ad -> b35d6cd39f383af5c8d07312e7c7b8d2d3c12641 ([pr/atw-nomerge.53](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.53) -> [pr/atw-nomerge.54](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.54)) due to conflict with #14437\r\nRebased b35d6cd39f383af5c8d07312e7c7b8d2d3c12641 -> da86f39d50de1ca559c96c87e17228f73ee1afef ([pr/atw-nomerge.54](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.54) -> [pr/atw-nomerge.55](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.55)) due to conflict with #14711\r\nRebased da86f39d50de1ca559c96c87e17228f73ee1afef -> 596f85075d21c474f4ae5a98ad5c89da7ace1484 ([pr/atw-nomerge.55](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.55) -> [pr/atw-nomerge.56](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.56)) due to conflict with #15288\r\nRebased 596f85075d21c474f4ae5a98ad5c89da7ace1484 -> ab2bd422f77c37d232467c45cdfa57a581c8008b ([pr/atw-nomerge.56](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.56) -> [pr/atw-nomerge.57](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.57)) due to conflict with #15948",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/398550587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/400513131",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-400513131",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 400513131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDUxMzEzMQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T01:24:16Z",
    "updated_at": "2018-06-27T01:25:50Z",
    "author_association": "MEMBER",
    "body": "utACK a494d2a4472ea63620b1f6cce20cb726590eb75b. I think the \"callback\" approach is perfectly fine here; they're not actual callbacks (in that they're not invoked at a different time or from a different thread); they're just functions to fill in values at the time the object is created.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/400513131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423532570",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-423532570",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 423532570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzUzMjU3MA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-21T13:34:09Z",
    "updated_at": "2020-05-05T07:10:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18592 (rpc: replace raw pointers with shared_ptrs by brakmic)\n* #16910 (wallet: reduce loading time by using unordered maps by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423532570/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521741857",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-521741857",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 521741857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTc0MTg1Nw==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-15T18:15:14Z",
    "updated_at": "2019-08-15T18:15:14Z",
    "author_association": "MEMBER",
    "body": "> @achow101 how does this jive with wallet boxes #16341?\r\n\r\nAFAICT They don't interact at all. The only part of #16341 that touches transactions is a small section in `AddToWalletIfInvolvingMe` which this PR does not touch.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521741857/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521751666",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-521751666",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 521751666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTc1MTY2Ng==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-15T18:44:07Z",
    "updated_at": "2019-08-15T18:44:07Z",
    "author_association": "MEMBER",
    "body": "re-ACK 825a514481dd69dc7038c7f4c974a76cb2becd87, but Travis is in a state of despair, perhaps due to #16582 (@MarcoFalke?)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/521751666/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557697310",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-557697310",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 557697310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzY5NzMxMA==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-22T21:15:58Z",
    "updated_at": "2019-11-22T21:15:58Z",
    "author_association": "MEMBER",
    "body": "Sorry about all the rebases, Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557697310/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561640984",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-561640984",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 561640984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTY0MDk4NA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T13:17:24Z",
    "updated_at": "2019-12-04T13:17:24Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561640984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590983096",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-590983096",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 590983096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDk4MzA5Ng==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-25T17:40:14Z",
    "updated_at": "2020-02-25T17:40:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased dff3c12515773bef07756bb2420da5a1ac8e1438 -> 93510bcfe80385203880d1211cb94f621411839e ([`pr/atw-nomerge.74`](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.74) -> [`pr/atw-nomerge.75`](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.75), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/atw-nomerge.74-rebase..pr/atw-nomerge.75)) due to minor conflict with #13339\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590983096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/603490263",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-603490263",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 603490263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzQ5MDI2Mw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-24T20:34:06Z",
    "updated_at": "2020-03-24T20:34:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased fc4df9dc2910c4a57d5e81573faf7952e1c3ee42 -> f1fc7892608fb258da86017c79ffb4b1a477014a ([`pr/atw-nomerge.76`](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.76) -> [`pr/atw-nomerge.77`](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.77), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/atw-nomerge.76-rebase..pr/atw-nomerge.77)) due to conflict with #18278",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/603490263/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606691829",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-606691829",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 606691829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjY5MTgyOQ==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-31T15:16:44Z",
    "updated_at": "2020-03-31T15:16:44Z",
    "author_association": "MEMBER",
    "body": "utACK f1fc7892608fb258da86017c79ffb4b1a477014a",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606691829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614294739",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-614294739",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 614294739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDI5NDczOQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-15T21:41:54Z",
    "updated_at": "2020-04-15T21:41:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased f1fc7892608fb258da86017c79ffb4b1a477014a -> ece5d1cf46cf8c335dee4bb6affe514d7b33f306 ([`pr/atw-nomerge.77`](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.77) -> [`pr/atw-nomerge.78`](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.78), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/atw-nomerge.77-rebase..pr/atw-nomerge.78)) due to conflict with #17954",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614294739/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/616145342",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-616145342",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 616145342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjE0NTM0Mg==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-19T14:17:23Z",
    "updated_at": "2020-04-19T14:17:23Z",
    "author_association": "MEMBER",
    "body": "re-utACK ece5d1c (rebased)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/616145342/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622422795",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-622422795",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 622422795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjQyMjc5NQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-01T15:00:34Z",
    "updated_at": "2020-05-01T15:00:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased ece5d1cf46cf8c335dee4bb6affe514d7b33f306 -> f2892d8eb5404a34f3b09d3b9ac65d58c965e362 ([`pr/atw-nomerge.78`](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.78) -> [`pr/atw-nomerge.79`](https://github.com/ryanofsky/bitcoin/commits/pr/atw-nomerge.79), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/atw-nomerge.78-rebase..pr/atw-nomerge.79)) due to conflict with #16426\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622422795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623381605",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-623381605",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 623381605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzM4MTYwNQ==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-04T10:21:31Z",
    "updated_at": "2020-05-04T10:21:31Z",
    "author_association": "MEMBER",
    "body": "Light re-utACK f2892d8eb5404a34f3b09d3b9ac65d58c965e362, looks like a reasonably straight-forward rebase.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623381605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624197882",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-624197882",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 624197882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDE5Nzg4Mg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-05T17:29:37Z",
    "updated_at": "2020-05-05T17:29:37Z",
    "author_association": "MEMBER",
    "body": "Ah sorry, no need to revert your changes. If the wallet can't write to disk, a simple `CHECK_NONFATAL(wtx)` should be sufficient",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624197882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624210794",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-624210794",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 624210794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDIxMDc5NA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-05T17:54:24Z",
    "updated_at": "2020-05-05T17:54:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Ah sorry, no need to revert your changes. If the wallet can't write to disk, a simple `CHECK_NONFATAL(wtx)` should be sufficient\r\n\r\nI don't think CHECK_NONFATAL would be right, because this is checking a runtime error, not an internal assertion about how code works. I can go back to the earlier version and add this if that's your preference. But actually I like the update better because it makes the overall diff smaller and avoids changing behavior in a refactoring PR. I think ideally if different error handling is needed here, it would be handled in a standalone PR with a unit test.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624210794/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624212989",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-624212989",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 624212989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDIxMjk4OQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-05T17:58:36Z",
    "updated_at": "2020-05-05T17:58:36Z",
    "author_association": "MEMBER",
    "body": "Well, our assumption in the code is that the wallet can write to disk. If that assumption is violated it seems fine to assert or do that `CHECK` thingy. But I also see your point to make it a separate runtime error.\r\n\r\nAnyway, re-ACK 28b112e9bd3fd1181c0720306051ba7efca8b436",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624212989/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624361292",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#issuecomment-624361292",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
    "id": 624361292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDM2MTI5Mg==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-05T23:37:03Z",
    "updated_at": "2020-05-05T23:37:03Z",
    "author_association": "MEMBER",
    "body": "re-utACK 28b112e9bd3fd1181c0720306051ba7efca8b436",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/624361292/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/169884033",
    "pull_request_review_id": 98480176,
    "id": 169884033,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTg4NDAzMw==",
    "diff_hunk": "@@ -12,27 +12,21 @@ WalletModelTransaction::WalletModelTransaction(const QList<SendCoinsRecipient> &\n     walletTransaction(0),\n     fee(0)\n {\n-    walletTransaction = new CWalletTx();\n-}\n-\n-WalletModelTransaction::~WalletModelTransaction()\n-{\n-    delete walletTransaction;\n }\n \n QList<SendCoinsRecipient> WalletModelTransaction::getRecipients() const\n {\n     return recipients;\n }\n \n-CWalletTx *WalletModelTransaction::getTransaction() const\n+CTransactionRef* WalletModelTransaction::getTransaction()",
    "path": "src/qt/walletmodeltransaction.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "8e3dd3be1af06646a65cf2c22384dd156eced1a9",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`CTransactionRef` is itself a pointer, so unless you intend for the caller to be able to modify what it points to, I think simply returning a `CTransactionRef` is better here. Every use case also seems to `*`-dereference it.",
    "created_at": "2018-02-22T08:33:12Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r169884033",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/169884033"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r169884033"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/169884033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 22,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174259437",
    "pull_request_review_id": 103583241,
    "id": 174259437,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDI1OTQzNw==",
    "diff_hunk": "@@ -12,27 +12,21 @@ WalletModelTransaction::WalletModelTransaction(const QList<SendCoinsRecipient> &\n     walletTransaction(0),\n     fee(0)\n {\n-    walletTransaction = new CWalletTx();\n-}\n-\n-WalletModelTransaction::~WalletModelTransaction()\n-{\n-    delete walletTransaction;\n }\n \n QList<SendCoinsRecipient> WalletModelTransaction::getRecipients() const\n {\n     return recipients;\n }\n \n-CWalletTx *WalletModelTransaction::getTransaction() const\n+CTransactionRef* WalletModelTransaction::getTransaction()",
    "path": "src/qt/walletmodeltransaction.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "8e3dd3be1af06646a65cf2c22384dd156eced1a9",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r169884033\r\n\r\n> CTransactionRef is itself a pointer, so unless you intend for the caller to be able to modify what it points to, I think simply returning a CTransactionRef is better here. Every use case also seems to *-dereference it.\r\n\r\nGood idea, done in 64f182fa587f35081ed8026b44e2a36010364153.",
    "created_at": "2018-03-13T19:39:49Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r174259437",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174259437"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r174259437"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174259437/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 22,
    "side": "RIGHT",
    "in_reply_to_id": 169884033
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174957667",
    "pull_request_review_id": 104409901,
    "id": 174957667,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDk1NzY2Nw==",
    "diff_hunk": "@@ -668,12 +668,9 @@ DBErrors CWalletDB::FindWalletTx(std::vector<uint256>& vTxHash, std::vector<CWal\n             if (strType == \"tx\") {\n                 uint256 hash;\n                 ssKey >> hash;\n-\n-                CWalletTx wtx(nullptr /* pwallet */, MakeTransactionRef());\n-                ssValue >> wtx;\n-\n                 vTxHash.push_back(hash);\n-                vWtx.push_back(wtx);\n+                vWtx.emplace_back(nullptr /* wallet */, nullptr /* tx */);",
    "path": "src/wallet/walletdb.cpp",
    "position": 88,
    "original_position": 19,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "bf59f2135d93bc175f7a1f630285d6479580e291",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Disable CWalletTx copy constructor\",\r\n\r\nCould add an empty constructor (or add default values)? I believe that would allow keeping `vWtx` as vector?",
    "created_at": "2018-03-15T22:59:45Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r174957667",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174957667"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r174957667"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174957667/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 780,
    "original_line": 780,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174958125",
    "pull_request_review_id": 104409901,
    "id": 174958125,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDk1ODEyNQ==",
    "diff_hunk": "@@ -348,14 +348,13 @@ class CWalletTx : public CMerkleTx\n     mutable CAmount nAvailableWatchCreditCached;\n     mutable CAmount nChangeCached;\n \n-    CWalletTx(const CWallet* pwalletIn, CTransactionRef arg) : CMerkleTx(std::move(arg))\n+    CWalletTx(const CWallet* wallet, CTransactionRef arg) : CMerkleTx(std::move(arg)), pwallet(wallet)",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 5,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "62afca0ac31ee6db6beab800cc349157809e87da",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Avoid copying CWalletTx in LoadToWallet\",\r\n\r\nThis and the `Init()` change could be in a different (trivial) commit.",
    "created_at": "2018-03-15T23:02:38Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r174958125",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174958125"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r174958125"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174958125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 501,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174960713",
    "pull_request_review_id": 104409901,
    "id": 174960713,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDk2MDcxMw==",
    "diff_hunk": "@@ -547,18 +547,11 @@ static int64_t AddTx(CWallet& wallet, uint32_t lockTime, int64_t mockTime, int64\n         block = inserted.first->second;\n         block->nTime = blockTime;\n         block->phashBlock = &hash;\n+        wallet.AddTransaction(MakeTransactionRef(tx), hash, 0);\n+    } else {\n+        wallet.AddTransaction(MakeTransactionRef(tx));\n     }\n-\n-    CWalletTx wtx(&wallet, MakeTransactionRef(tx));\n-    if (block) {\n-        wtx.SetMerkleBranch(block, 0);\n-    }\n-    {\n-        LOCK(cs_main);",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "98ff78d5a272f9fef0057ebd8a4553cd2bead5ee",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Remove CWalletTx merging logic from AddToWallet\",\r\n\r\nShould stay? Related to #12681.\r\n\r\nLooks like [this code](https://github.com/bitcoin/bitcoin/pull/12681/files#diff-b2bb174788c7409b671c46ccc86034bdR3816) is not hit, otherwise the lock held assertion in `LookupBlockIndex` would cause travis failure here?",
    "created_at": "2018-03-15T23:18:14Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r174960713",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174960713"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r174960713"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174960713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 288,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175151138",
    "pull_request_review_id": 104640583,
    "id": 175151138,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTE1MTEzOA==",
    "diff_hunk": "@@ -668,12 +668,9 @@ DBErrors CWalletDB::FindWalletTx(std::vector<uint256>& vTxHash, std::vector<CWal\n             if (strType == \"tx\") {\n                 uint256 hash;\n                 ssKey >> hash;\n-\n-                CWalletTx wtx(nullptr /* pwallet */, MakeTransactionRef());\n-                ssValue >> wtx;\n-\n                 vTxHash.push_back(hash);\n-                vWtx.push_back(wtx);\n+                vWtx.emplace_back(nullptr /* wallet */, nullptr /* tx */);",
    "path": "src/wallet/walletdb.cpp",
    "position": 88,
    "original_position": 19,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "bf59f2135d93bc175f7a1f630285d6479580e291",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r174957667\r\n\r\nIn commit \"Disable CWalletTx copy constructor\",\r\n\r\n> Could add an empty constructor (or add default values)? I believe that would allow keeping vWtx as vector?\r\n\r\nIt isn't enough because a vector needs its elements to be copyable or movable (otherwise it couldn't reallocate during expansion).",
    "created_at": "2018-03-16T16:49:17Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r175151138",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175151138"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r175151138"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175151138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 780,
    "original_line": 780,
    "side": "RIGHT",
    "in_reply_to_id": 174957667
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175151371",
    "pull_request_review_id": 104640583,
    "id": 175151371,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTE1MTM3MQ==",
    "diff_hunk": "@@ -348,14 +348,13 @@ class CWalletTx : public CMerkleTx\n     mutable CAmount nAvailableWatchCreditCached;\n     mutable CAmount nChangeCached;\n \n-    CWalletTx(const CWallet* pwalletIn, CTransactionRef arg) : CMerkleTx(std::move(arg))\n+    CWalletTx(const CWallet* wallet, CTransactionRef arg) : CMerkleTx(std::move(arg)), pwallet(wallet)",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 5,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "62afca0ac31ee6db6beab800cc349157809e87da",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r174958125\r\n\r\nIn commit \"Avoid copying CWalletTx in LoadToWallet\",\r\n\r\n> This and the Init() change could be in a different (trivial) commit.\r\n\r\nGood catch, split 62afca0ac31ee6db6beab800cc349157809e87da into 5f10dfceef542ec19030e02d4954295bc0fa0428 and 9b178932e532bc507bc4e825a404e42deab726f9",
    "created_at": "2018-03-16T16:49:52Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r175151371",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175151371"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r175151371"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175151371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 501,
    "side": "RIGHT",
    "in_reply_to_id": 174958125
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175151774",
    "pull_request_review_id": 104640583,
    "id": 175151774,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTE1MTc3NA==",
    "diff_hunk": "@@ -547,18 +547,11 @@ static int64_t AddTx(CWallet& wallet, uint32_t lockTime, int64_t mockTime, int64\n         block = inserted.first->second;\n         block->nTime = blockTime;\n         block->phashBlock = &hash;\n+        wallet.AddTransaction(MakeTransactionRef(tx), hash, 0);\n+    } else {\n+        wallet.AddTransaction(MakeTransactionRef(tx));\n     }\n-\n-    CWalletTx wtx(&wallet, MakeTransactionRef(tx));\n-    if (block) {\n-        wtx.SetMerkleBranch(block, 0);\n-    }\n-    {\n-        LOCK(cs_main);",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "98ff78d5a272f9fef0057ebd8a4553cd2bead5ee",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r174960713\r\n\r\nIn commit \"Remove CWalletTx merging logic from AddToWallet\",\r\n\r\n> Should stay? Related to #12681.\r\n\r\nIt's not needed because of the lock above:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/98ff78d5a272f9fef0057ebd8a4553cd2bead5ee/src/wallet/test/wallet_tests.cpp#L543\r\n\r\nThis is the reason there's no assert failure on travis.",
    "created_at": "2018-03-16T16:51:09Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r175151774",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175151774"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r175151774"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175151774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 288,
    "side": "LEFT",
    "in_reply_to_id": 174960713
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214549286",
    "pull_request_review_id": 151629344,
    "id": 214549286,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDU0OTI4Ng==",
    "diff_hunk": "@@ -985,13 +963,23 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n                 }\n             }\n \n-            CWalletTx wtx(this, ptx);\n-\n-            // Get merkle branch if transaction was found in a block\n-            if (pIndex != nullptr)\n-                wtx.SetMerkleBranch(pIndex, posInBlock);\n-\n-            return AddToWallet(wtx, false);\n+            auto update_wtx = [&](CWalletTx& wtx, bool new_tx) {\n+                bool updated = false;\n+                // Update block position if transaction was found in a block\n+                if (pIndex && (wtx.nIndex != posInBlock || wtx.hashBlock != pIndex->GetBlockHash())) {\n+                    wtx.nIndex = posInBlock;\n+                    wtx.hashBlock = pIndex->GetBlockHash();\n+                    updated = true;\n+                }\n+                // Clear abandoned state assuming notification means it isn't\n+                // safe to consider the tranaction abandoned (see TODO above).",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 128,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "a0d1323d7ef977b0ed78ec675d8bb14fa5e672d5",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Typo found by `codespell`: tranaction",
    "created_at": "2018-09-02T18:36:06Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r214549286",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214549286"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r214549286"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214549286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 975,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219424559",
    "pull_request_review_id": 157596935,
    "id": 219424559,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQyNDU1OQ==",
    "diff_hunk": "@@ -833,65 +833,41 @@ bool CWallet::MarkReplaced(const uint256& originalHash, const uint256& newHash)\n     return success;\n }\n \n-bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n+bool CWallet::AddToWallet(CTransactionRef tx, UpdateWalletTxFn update_wtx, bool fFlushOnClose)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "a0d1323d7ef977b0ed78ec675d8bb14fa5e672d5",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n2018-09-20 06:04:29 clang-tidy(pr=9381): src/wallet/wallet.cpp:843:64: warning: the parameter 'update_wtx' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]\r\n2018-09-20 06:04:29 clang-tidy(pr=9381): src/wallet/wallet.cpp:903:66: warning: the parameter 'update_wtx' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]\r\n```",
    "created_at": "2018-09-21T08:45:08Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r219424559",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219424559"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r219424559"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219424559/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 843,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219424779",
    "pull_request_review_id": 157597199,
    "id": 219424779,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQyNDc3OQ==",
    "diff_hunk": "@@ -211,18 +211,11 @@ static int64_t AddTx(CWallet& wallet, uint32_t lockTime, int64_t mockTime, int64\n         block = inserted.first->second;\n         block->nTime = blockTime;\n         block->phashBlock = &hash;\n+        wallet.AddTransaction(MakeTransactionRef(tx), hash, 0);\n+    } else {\n+        wallet.AddTransaction(MakeTransactionRef(tx));\n     }\n-\n-    CWalletTx wtx(&wallet, MakeTransactionRef(tx));\n-    if (block) {\n-        wtx.SetMerkleBranch(block, 0);",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": null,
    "original_position": 11,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "a0d1323d7ef977b0ed78ec675d8bb14fa5e672d5",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Seems like `SetMerkleBranch` can be removed.\r\n\r\n```\r\n2018-09-20 06:29:02 cppcheck(pr=9381): [src/wallet/wallet.cpp:4237]: (style) The function 'SetMerkleBranch' is never used.\r\n```",
    "created_at": "2018-09-21T08:45:57Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r219424779",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219424779"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r219424779"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219424779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 225,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220432539",
    "pull_request_review_id": 158838614,
    "id": 220432539,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDQzMjUzOQ==",
    "diff_hunk": "@@ -196,37 +196,41 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         {\n             uint256 hash;\n             ssKey >> hash;\n-            CWalletTx wtx(nullptr /* pwallet */, MakeTransactionRef());\n-            ssValue >> wtx;\n-            CValidationState state;\n-            if (!(CheckTransaction(*wtx.tx, state) && (wtx.GetHash() == hash) && state.IsValid()))\n-                return false;\n+            auto update_wtx = [&](CWalletTx& wtx, bool new_tx) {",
    "path": "src/wallet/walletdb.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "15adcd19e49399590b5224a6a5e0a11e003eac53",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`new_tx` not used?",
    "created_at": "2018-09-26T05:47:44Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r220432539",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220432539"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r220432539"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220432539/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 199,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220432586",
    "pull_request_review_id": 158838675,
    "id": 220432586,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDQzMjU4Ng==",
    "diff_hunk": "@@ -992,13 +970,23 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n                 }\n             }\n \n-            CWalletTx wtx(this, ptx);\n-\n-            // Get merkle branch if transaction was found in a block\n-            if (pIndex != nullptr)\n-                wtx.SetMerkleBranch(pIndex, posInBlock);\n-\n-            return AddToWallet(wtx, false);\n+            auto update_wtx = [&](CWalletTx& wtx, bool new_tx) {",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 119,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "15adcd19e49399590b5224a6a5e0a11e003eac53",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`new_tx` not used?",
    "created_at": "2018-09-26T05:48:07Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r220432586",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220432586"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r220432586"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220432586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 973,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220432616",
    "pull_request_review_id": 158838717,
    "id": 220432616,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDQzMjYxNg==",
    "diff_hunk": "@@ -1076,6 +1064,20 @@ bool CWallet::AbandonTransaction(const uint256& hashTx)\n     return true;\n }\n \n+bool CWallet::AddTransaction(CTransactionRef tx, const uint256& block_hash, int block_position)\n+{\n+    auto update_wtx = [&](CWalletTx& wtx, bool new_tx) {",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 145,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "15adcd19e49399590b5224a6a5e0a11e003eac53",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`new_tx` not used?",
    "created_at": "2018-09-26T05:48:23Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r220432616",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220432616"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r220432616"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220432616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1069,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232517780",
    "pull_request_review_id": 173730418,
    "id": 232517780,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjUxNzc4MA==",
    "diff_hunk": "@@ -992,13 +969,23 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n                 }\n             }\n \n-            CWalletTx wtx(this, ptx);\n-\n-            // Get merkle branch if transaction was found in a block\n-            if (pIndex != nullptr)\n-                wtx.SetMerkleBranch(pIndex, posInBlock);\n-\n-            return AddToWallet(wtx, false);\n+            auto update_wtx = [&](CWalletTx& wtx, bool /* new_tx */) {\n+                bool updated = false;\n+                // Update block position if transaction was found in a block\n+                if (pIndex && (wtx.nIndex != posInBlock || wtx.hashBlock != pIndex->GetBlockHash())) {\n+                    wtx.nIndex = posInBlock;\n+                    wtx.hashBlock = pIndex->GetBlockHash();\n+                    updated = true;\n+                }\n+                // Clear abandoned state assuming notification means it isn't\n+                // safe to consider the transaction abandoned (see TODO above).",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 102,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "2c7c443718d525cf6a312eeba2d7331d05b380af",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Which TODO is this referring to?",
    "created_at": "2018-11-12T01:47:00Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r232517780",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232517780"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r232517780"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232517780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 981,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232517928",
    "pull_request_review_id": 173730418,
    "id": 232517928,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjUxNzkyOA==",
    "diff_hunk": "@@ -992,13 +969,23 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n                 }\n             }\n \n-            CWalletTx wtx(this, ptx);\n-\n-            // Get merkle branch if transaction was found in a block\n-            if (pIndex != nullptr)\n-                wtx.SetMerkleBranch(pIndex, posInBlock);\n-\n-            return AddToWallet(wtx, false);\n+            auto update_wtx = [&](CWalletTx& wtx, bool /* new_tx */) {\n+                bool updated = false;\n+                // Update block position if transaction was found in a block\n+                if (pIndex && (wtx.nIndex != posInBlock || wtx.hashBlock != pIndex->GetBlockHash())) {\n+                    wtx.nIndex = posInBlock;\n+                    wtx.hashBlock = pIndex->GetBlockHash();\n+                    updated = true;\n+                }\n+                // Clear abandoned state assuming notification means it isn't\n+                // safe to consider the transaction abandoned (see TODO above).\n+                if (wtx.isAbandoned()) {\n+                    wtx.hashBlock.SetNull();\n+                    updated = true;\n+                }\n+                return updated;\n+            };\n+            return AddToWallet(MakeTransactionRef(tx), update_wtx);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 109,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "2c7c443718d525cf6a312eeba2d7331d05b380af",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should this flush on close? Default is true but previously it didn't",
    "created_at": "2018-11-12T01:48:54Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r232517928",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232517928"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r232517928"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232517928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 988,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232743997",
    "pull_request_review_id": 174008578,
    "id": 232743997,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjc0Mzk5Nw==",
    "diff_hunk": "@@ -992,13 +969,23 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n                 }\n             }\n \n-            CWalletTx wtx(this, ptx);\n-\n-            // Get merkle branch if transaction was found in a block\n-            if (pIndex != nullptr)\n-                wtx.SetMerkleBranch(pIndex, posInBlock);\n-\n-            return AddToWallet(wtx, false);\n+            auto update_wtx = [&](CWalletTx& wtx, bool /* new_tx */) {\n+                bool updated = false;\n+                // Update block position if transaction was found in a block\n+                if (pIndex && (wtx.nIndex != posInBlock || wtx.hashBlock != pIndex->GetBlockHash())) {\n+                    wtx.nIndex = posInBlock;\n+                    wtx.hashBlock = pIndex->GetBlockHash();\n+                    updated = true;\n+                }\n+                // Clear abandoned state assuming notification means it isn't\n+                // safe to consider the transaction abandoned (see TODO above).",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 102,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "2c7c443718d525cf6a312eeba2d7331d05b380af",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/9381#discussion_r232517780\r\n\r\n> Which TODO is this referring to?\r\n\r\nThis is referring to the abandoned transaction TODO in AddToWalletIfInvolvingMe:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/wallet/wallet.h#L654-L658\r\n\r\nThe TODO was moved in #13651 to where it doesn't really make a lot of sense, so I'm moving it back here in 845345c70c42411373a480406686b67870a235ad.",
    "created_at": "2018-11-12T17:17:35Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r232743997",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232743997"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r232743997"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232743997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 981,
    "side": "RIGHT",
    "in_reply_to_id": 232517780
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232744206",
    "pull_request_review_id": 174008578,
    "id": 232744206,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjc0NDIwNg==",
    "diff_hunk": "@@ -992,13 +969,23 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n                 }\n             }\n \n-            CWalletTx wtx(this, ptx);\n-\n-            // Get merkle branch if transaction was found in a block\n-            if (pIndex != nullptr)\n-                wtx.SetMerkleBranch(pIndex, posInBlock);\n-\n-            return AddToWallet(wtx, false);\n+            auto update_wtx = [&](CWalletTx& wtx, bool /* new_tx */) {\n+                bool updated = false;\n+                // Update block position if transaction was found in a block\n+                if (pIndex && (wtx.nIndex != posInBlock || wtx.hashBlock != pIndex->GetBlockHash())) {\n+                    wtx.nIndex = posInBlock;\n+                    wtx.hashBlock = pIndex->GetBlockHash();\n+                    updated = true;\n+                }\n+                // Clear abandoned state assuming notification means it isn't\n+                // safe to consider the transaction abandoned (see TODO above).\n+                if (wtx.isAbandoned()) {\n+                    wtx.hashBlock.SetNull();\n+                    updated = true;\n+                }\n+                return updated;\n+            };\n+            return AddToWallet(MakeTransactionRef(tx), update_wtx);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 109,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "2c7c443718d525cf6a312eeba2d7331d05b380af",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/9381#discussion_r232517928\r\n\r\n> Should this flush on close? Default is true but previously it didn't\r\n\r\nGood catch. It should be safe to flush on close, but this change was not intentional. It's now set back to false in 845345c70c42411373a480406686b67870a235ad.",
    "created_at": "2018-11-12T17:18:17Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r232744206",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232744206"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r232744206"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232744206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 988,
    "side": "RIGHT",
    "in_reply_to_id": 232517928
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314299889",
    "pull_request_review_id": 275417709,
    "id": 314299889,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDI5OTg4OQ==",
    "diff_hunk": "@@ -1041,7 +1036,8 @@ class CWallet final : public FillableSigningProvider, private interfaces::Chain:\n     DBErrors ReorderTransactions();\n \n     void MarkDirty();\n-    bool AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose=true);\n+    typedef std::function<bool(CWalletTx& wtx, bool new_tx)> UpdateWalletTxFn;\n+    bool AddToWallet(CTransactionRef tx, const UpdateWalletTxFn& update_wtx, bool fFlushOnClose=true);",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 18,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "ea715a26257aa669d7e9577023dbec36dcb64936",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe make `AddToWallet(` private to avoid exposing the `update_wtx` callback stuff?",
    "created_at": "2019-08-15T13:10:34Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r314299889",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314299889"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r314299889"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314299889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1046,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314376966",
    "pull_request_review_id": 275515359,
    "id": 314376966,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDM3Njk2Ng==",
    "diff_hunk": "@@ -1041,7 +1036,8 @@ class CWallet final : public FillableSigningProvider, private interfaces::Chain:\n     DBErrors ReorderTransactions();\n \n     void MarkDirty();\n-    bool AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose=true);\n+    typedef std::function<bool(CWalletTx& wtx, bool new_tx)> UpdateWalletTxFn;\n+    bool AddToWallet(CTransactionRef tx, const UpdateWalletTxFn& update_wtx, bool fFlushOnClose=true);",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 18,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "ea715a26257aa669d7e9577023dbec36dcb64936",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/9381#discussion_r314299889\r\n\r\n> Maybe make `AddToWallet(` private to avoid exposing the `update_wtx` callback stuff?\r\n\r\nI [added a doxygen comment](https://github.com/ryanofsky/bitcoin/compare/pr/atw-nomerge.61..pr/atw-nomerge.62) to avoid confusion around the update_wtx callback (which is also used in a later commit by LoadToWallet, not just AddWallet).\r\n\r\nI would change AddToWallet from public to private here too, but this is awkward because AddToWallet is called from a static test function which can't be declared as a friend:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/b8f3870c6a46052a80c694c0744a3eb56a9116ac/src/wallet/test/coinselector_tests.cpp#L68\r\n\r\nIn general I think trying to have better encapsulation in the wallet with a CWallet public / private boundary is probably never going to work out too well. Really CWallet needs to get broken up into smaller classes which can't access each others internal state, not just have a single big boundary.",
    "created_at": "2019-08-15T15:52:55Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r314376966",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314376966"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r314376966"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314376966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1046,
    "side": "RIGHT",
    "in_reply_to_id": 314299889
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314803066",
    "pull_request_review_id": 276057005,
    "id": 314803066,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgwMzA2Ng==",
    "diff_hunk": "@@ -1086,73 +1086,50 @@ bool CWallet::IsUsedDestination(const uint256& hash, unsigned int n) const\n     return srctx && ExtractDestination(srctx->tx->vout[n].scriptPubKey, dst) && IsUsedDestination(dst);\n }\n \n-bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n+bool CWallet::AddToWallet(CTransactionRef tx, const UpdateWalletTxFn& update_wtx, bool fFlushOnClose)\n {\n     LOCK(cs_wallet);\n \n     WalletBatch batch(*database, \"r+\", fFlushOnClose);\n \n-    uint256 hash = wtxIn.GetHash();\n+    uint256 hash = tx->GetHash();\n \n     if (IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE)) {\n         // Mark used destinations\n-        for (const CTxIn& txin : wtxIn.tx->vin) {\n+        for (const CTxIn& txin : tx->vin) {\n             const COutPoint& op = txin.prevout;\n             SetUsedDestinationState(op.hash, op.n, true);\n         }\n     }\n \n     // Inserts only if not already there, returns tx inserted or tx found\n-    std::pair<std::map<uint256, CWalletTx>::iterator, bool> ret = mapWallet.insert(std::make_pair(hash, wtxIn));\n+    auto ret = mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(hash), std::forward_as_tuple(this, tx));\n     CWalletTx& wtx = (*ret.first).second;\n     wtx.BindWallet(this);\n     bool fInsertedNew = ret.second;\n+    bool fUpdated = update_wtx(wtx, fInsertedNew);\n     if (fInsertedNew) {\n         wtx.nTimeReceived = chain().getAdjustedTime();\n         wtx.nOrderPos = IncOrderPosNext(&batch);\n         wtx.m_it_wtxOrdered = wtxOrdered.insert(std::make_pair(wtx.nOrderPos, &wtx));\n         wtx.nTimeSmart = ComputeTimeSmart(wtx);\n         AddToSpends(hash);\n     }\n-\n-    bool fUpdated = false;\n     if (!fInsertedNew)\n     {\n-        // Merge\n-        if (!wtxIn.hashUnset() && wtxIn.hashBlock != wtx.hashBlock)\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        // If no longer abandoned, update\n-        if (wtxIn.hashBlock.IsNull() && wtx.isAbandoned())\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n-        {\n-            wtx.nIndex = wtxIn.nIndex;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.fFromMe && wtxIn.fFromMe != wtx.fFromMe)\n-        {\n-            wtx.fFromMe = wtxIn.fFromMe;\n-            fUpdated = true;\n-        }\n         // If we have a witness-stripped version of this transaction, and we\n         // see a new version with a witness, then we must be upgrading a pre-segwit\n         // wallet.  Store the new version of the transaction with the witness,\n         // as the stripped-version must be invalid.\n         // TODO: Store all versions of the transaction, instead of just one.\n-        if (wtxIn.tx->HasWitness() && !wtx.tx->HasWitness()) {\n-            wtx.SetTx(wtxIn.tx);\n+        if (tx->HasWitness() && !wtx.tx->HasWitness()) {\n+            wtx.SetTx(tx);\n             fUpdated = true;\n         }\n     }\n \n     //// debug print\n-    WalletLogPrintf(\"AddToWallet %s  %s%s\\n\", wtxIn.GetHash().ToString(), (fInsertedNew ? \"new\" : \"\"), (fUpdated ? \"update\" : \"\"));\n+    WalletLogPrintf(\"AddToWallet %s  %s%s\\n\", hash.ToString(), (fInsertedNew ? \"new\" : \"\"), (fUpdated ? \"update\" : \"\"));\n \n     // Write to disk\n     if (fInsertedNew || fUpdated)",
    "path": "src/wallet/wallet.cpp",
    "position": 87,
    "original_position": 81,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "6731aac44784a4be3f195989549defd0d04d695b",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If tx isn't already in mapWallet, it's going to be a fInsertedNew one, if it's already there we surely want to get them fUpdated on disk, and I think both callback return true, excepts for a transaction being disconnected ? Maybe all this flags could be simplified in a further work.",
    "created_at": "2019-08-16T16:49:49Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r314803066",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314803066"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r314803066"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314803066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 848,
    "original_line": 848,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314813155",
    "pull_request_review_id": 276057005,
    "id": 314813155,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNDgxMzE1NQ==",
    "diff_hunk": "@@ -1157,12 +1157,13 @@ bool CWallet::AddToWallet(CTransactionRef tx, const UpdateWalletTxFn& update_wtx\n     return true;\n }\n \n-void CWallet::LoadToWallet(const CWalletTx& wtxIn)\n+bool CWallet::LoadToWallet(const uint256& hash, const UpdateWalletTxFn& update_wtx)\n {\n-    uint256 hash = wtxIn.GetHash();\n-    const auto& ins = mapWallet.emplace(hash, wtxIn);\n+    auto ins = mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(hash), std::forward_as_tuple(this, nullptr));",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "8c4c8cc53896f01ea1fd4a09ba0e01052b4fbad4",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Hmmm new execution flow doesn't make it easier to understand. Maybe mapWallet should be access directly in `ReadKeyValue`, when as you said in another comment wallet components are broken up in smaller classes. I think, but need to test, that `MarkConflicted` and its loop is useless here.",
    "created_at": "2019-08-16T17:18:04Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r314813155",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314813155"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r314813155"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/314813155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1161,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322920662",
    "pull_request_review_id": 286381381,
    "id": 322920662,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjkyMDY2Mg==",
    "diff_hunk": "@@ -1086,73 +1086,50 @@ bool CWallet::IsUsedDestination(const uint256& hash, unsigned int n) const\n     return srctx && ExtractDestination(srctx->tx->vout[n].scriptPubKey, dst) && IsUsedDestination(dst);\n }\n \n-bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n+bool CWallet::AddToWallet(CTransactionRef tx, const UpdateWalletTxFn& update_wtx, bool fFlushOnClose)\n {\n     LOCK(cs_wallet);\n \n     WalletBatch batch(*database, \"r+\", fFlushOnClose);\n \n-    uint256 hash = wtxIn.GetHash();\n+    uint256 hash = tx->GetHash();\n \n     if (IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE)) {\n         // Mark used destinations\n-        for (const CTxIn& txin : wtxIn.tx->vin) {\n+        for (const CTxIn& txin : tx->vin) {\n             const COutPoint& op = txin.prevout;\n             SetUsedDestinationState(op.hash, op.n, true);\n         }\n     }\n \n     // Inserts only if not already there, returns tx inserted or tx found\n-    std::pair<std::map<uint256, CWalletTx>::iterator, bool> ret = mapWallet.insert(std::make_pair(hash, wtxIn));\n+    auto ret = mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(hash), std::forward_as_tuple(this, tx));\n     CWalletTx& wtx = (*ret.first).second;\n     wtx.BindWallet(this);\n     bool fInsertedNew = ret.second;\n+    bool fUpdated = update_wtx(wtx, fInsertedNew);\n     if (fInsertedNew) {\n         wtx.nTimeReceived = chain().getAdjustedTime();\n         wtx.nOrderPos = IncOrderPosNext(&batch);\n         wtx.m_it_wtxOrdered = wtxOrdered.insert(std::make_pair(wtx.nOrderPos, &wtx));\n         wtx.nTimeSmart = ComputeTimeSmart(wtx);\n         AddToSpends(hash);\n     }\n-\n-    bool fUpdated = false;\n     if (!fInsertedNew)\n     {\n-        // Merge\n-        if (!wtxIn.hashUnset() && wtxIn.hashBlock != wtx.hashBlock)\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        // If no longer abandoned, update\n-        if (wtxIn.hashBlock.IsNull() && wtx.isAbandoned())\n-        {\n-            wtx.hashBlock = wtxIn.hashBlock;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.nIndex != -1 && (wtxIn.nIndex != wtx.nIndex))\n-        {\n-            wtx.nIndex = wtxIn.nIndex;\n-            fUpdated = true;\n-        }\n-        if (wtxIn.fFromMe && wtxIn.fFromMe != wtx.fFromMe)\n-        {\n-            wtx.fFromMe = wtxIn.fFromMe;\n-            fUpdated = true;\n-        }\n         // If we have a witness-stripped version of this transaction, and we\n         // see a new version with a witness, then we must be upgrading a pre-segwit\n         // wallet.  Store the new version of the transaction with the witness,\n         // as the stripped-version must be invalid.\n         // TODO: Store all versions of the transaction, instead of just one.\n-        if (wtxIn.tx->HasWitness() && !wtx.tx->HasWitness()) {\n-            wtx.SetTx(wtxIn.tx);\n+        if (tx->HasWitness() && !wtx.tx->HasWitness()) {\n+            wtx.SetTx(tx);\n             fUpdated = true;\n         }\n     }\n \n     //// debug print\n-    WalletLogPrintf(\"AddToWallet %s  %s%s\\n\", wtxIn.GetHash().ToString(), (fInsertedNew ? \"new\" : \"\"), (fUpdated ? \"update\" : \"\"));\n+    WalletLogPrintf(\"AddToWallet %s  %s%s\\n\", hash.ToString(), (fInsertedNew ? \"new\" : \"\"), (fUpdated ? \"update\" : \"\"));\n \n     // Write to disk\n     if (fInsertedNew || fUpdated)",
    "path": "src/wallet/wallet.cpp",
    "position": 87,
    "original_position": 81,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "6731aac44784a4be3f195989549defd0d04d695b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/9381#discussion_r314803066\r\n\r\n> If tx isn't already in mapWallet, it's going to be a fInsertedNew one, if it's already there we surely want to get them fUpdated on disk, and I think both callback return true, excepts for a transaction being disconnected ? Maybe all this flags could be simplified in a further work.\r\n\r\nI think this is basically never false right now, but it seems reasonable to me that there should be a way to avoid writing transaction metadata to disk when it is unchanged. I'd also be happy to simplify this if you see a way to do that, but for the now the PR isn't really changing anything here.",
    "created_at": "2019-09-10T19:24:58Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r322920662",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322920662"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r322920662"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322920662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 848,
    "original_line": 848,
    "side": "RIGHT",
    "in_reply_to_id": 314803066
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322920715",
    "pull_request_review_id": 286381381,
    "id": 322920715,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjkyMDcxNQ==",
    "diff_hunk": "@@ -1157,12 +1157,13 @@ bool CWallet::AddToWallet(CTransactionRef tx, const UpdateWalletTxFn& update_wtx\n     return true;\n }\n \n-void CWallet::LoadToWallet(const CWalletTx& wtxIn)\n+bool CWallet::LoadToWallet(const uint256& hash, const UpdateWalletTxFn& update_wtx)\n {\n-    uint256 hash = wtxIn.GetHash();\n-    const auto& ins = mapWallet.emplace(hash, wtxIn);\n+    auto ins = mapWallet.emplace(std::piecewise_construct, std::forward_as_tuple(hash), std::forward_as_tuple(this, nullptr));",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "8c4c8cc53896f01ea1fd4a09ba0e01052b4fbad4",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/9381#discussion_r314813155\r\n\r\n> Hmmm new execution flow doesn't make it easier to understand. Maybe mapWallet should be access directly in `ReadKeyValue`, when as you said in another comment wallet components are broken up in smaller classes. I think, but need to test, that `MarkConflicted` and its loop is useless here.\r\n\r\nThese improvements seem like good ideas, they're just larger changes than this one is. I agree that the local control flow is a more complicated here, but I think it's a good tradeoff to be able to get rid of the CWalletTx copy constructor, and get rid of all code that is filling a temporary CWalletTx and then merging two CWalletTx's together instead of directly updating a single CWalletTx.\r\n\r\nThis emplace on this line is a good example of how fragile the temporary CWalletTx merging logic can be. If the hash already exists the data in wtxIn is just silently discarded in a different part of the code from where the data was loaded. In the new flow there is no temporary CWalletTx, and the code responsible for loading data can directly control what goes into the final CWalletTx.",
    "created_at": "2019-09-10T19:25:05Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r322920715",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322920715"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r322920715"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322920715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1161,
    "side": "RIGHT",
    "in_reply_to_id": 314813155
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384365942",
    "pull_request_review_id": 364736597,
    "id": 384365942,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM2NTk0Mg==",
    "diff_hunk": "@@ -763,19 +763,19 @@ bool CWallet::IsSpentKey(const uint256& hash, unsigned int n) const\n     return false;\n }\n \n-bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n+bool CWallet::AddToWallet(CTransactionRef tx, const CWalletTx::Confirmation& confirm, const UpdateWalletTxFn& update_wtx, bool fFlushOnClose)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "03c5ac045f94ab965d79300712a70a0357397d5e",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In 03c5ac045f94ab965d79300712a70a0357397d5e `Remove CWalletTx merging logic from AddToWallet`: it might make sense to have a seperate commit that adds the `confirm` argument.\r\n(maybe not worth confusing existing reviewers)",
    "created_at": "2020-02-26T09:23:30Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384365942",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384365942"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384365942"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384365942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 766,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384374046",
    "pull_request_review_id": 364736597,
    "id": 384374046,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM3NDA0Ng==",
    "diff_hunk": "@@ -871,7 +871,16 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n     DBErrors ReorderTransactions();\n \n     void MarkDirty();\n-    bool AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose=true);\n+\n+    //! Callback for updating transaction metadata in mapWallet.\n+    //!\n+    //! @param wtx - reference to mapWallet transaction to update\n+    //! @param new_tx - true if wtx is newly inserted, false it it previously existed",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 9,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "03c5ac045f94ab965d79300712a70a0357397d5e",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: \"false _if_ it\"",
    "created_at": "2020-02-26T09:37:39Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384374046",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384374046"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384374046"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384374046/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 878,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384384050",
    "pull_request_review_id": 364736597,
    "id": 384384050,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM4NDA1MA==",
    "diff_hunk": "@@ -2951,37 +2942,38 @@ void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::ve\n {\n     auto locked_chain = chain().lock();\n     LOCK(cs_wallet);\n+    WalletLogPrintf(\"CommitTransaction:\\n%s\", tx->ToString()); /* Continued */",
    "path": "src/wallet/wallet.cpp",
    "position": 188,
    "original_position": 116,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "03c5ac045f94ab965d79300712a70a0357397d5e",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why the `/* Continued */` comment?",
    "created_at": "2020-02-26T09:54:32Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384384050",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384384050"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384384050"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384384050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3003,
    "original_line": 3003,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384391256",
    "pull_request_review_id": 364736597,
    "id": 384391256,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM5MTI1Ng==",
    "diff_hunk": "@@ -2951,37 +2942,38 @@ void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::ve\n {\n     auto locked_chain = chain().lock();\n     LOCK(cs_wallet);\n+    WalletLogPrintf(\"CommitTransaction:\\n%s\", tx->ToString()); /* Continued */\n \n-    CWalletTx wtxNew(this, std::move(tx));\n-    wtxNew.mapValue = std::move(mapValue);\n-    wtxNew.vOrderForm = std::move(orderForm);\n-    wtxNew.fTimeReceivedIsTxTime = true;\n-    wtxNew.fFromMe = true;\n-\n-    WalletLogPrintf(\"CommitTransaction:\\n%s\", wtxNew.tx->ToString()); /* Continued */\n+    // Get the inserted-CWalletTx from mapWallet so that the\n+    // fInMempool flag is cached properly\n+    CWalletTx* wtx = nullptr;\n \n     // Add tx to wallet, because if it has change it's also ours,\n     // otherwise just for transaction history.\n-    AddToWallet(wtxNew);\n+    AddToWallet(std::move(tx), {}, [&](CWalletTx& new_wtx, bool new_tx) {\n+        assert(new_tx);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 133,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "03c5ac045f94ab965d79300712a70a0357397d5e",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Make this a runtime exception? Perhaps there's some weird edge case, I haven't tried, where a user restores their wallet from a backup on a node with a fresh mempool. The user then recreates the same* transaction in the UI and as they look at the confirmation screen, the transaction re-enters the mempool. Once they click OK this assert should be hit.\r\n\r\n`*` = IIUC it's only a duplicate if they use the same inputs, outputs, fee,  if we shuffle them the same way and if the block height hasn't changed",
    "created_at": "2020-02-26T10:06:34Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384391256",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384391256"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384391256"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384391256/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2954,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384419297",
    "pull_request_review_id": 364736597,
    "id": 384419297,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQxOTI5Nw==",
    "diff_hunk": "@@ -214,36 +214,40 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         } else if (strType == DBKeys::TX) {\n             uint256 hash;\n             ssKey >> hash;\n-            CWalletTx wtx(nullptr /* pwallet */, MakeTransactionRef());\n-            ssValue >> wtx;\n-            if (wtx.GetHash() != hash)\n-                return false;\n+            auto update_wtx = [&](CWalletTx& wtx, bool /* new_tx */) {\n+                ssValue >> wtx;\n+                if (wtx.GetHash() != hash)\n+                    return false;\n \n-            // Undo serialize changes in 31600\n-            if (31404 <= wtx.fTimeReceivedIsTxTime && wtx.fTimeReceivedIsTxTime <= 31703)\n-            {\n-                if (!ssValue.empty())\n+                // Undo serialize changes in 31600\n+                if (31404 <= wtx.fTimeReceivedIsTxTime && wtx.fTimeReceivedIsTxTime <= 31703)\n                 {\n-                    char fTmp;\n-                    char fUnused;\n-                    std::string unused_string;\n-                    ssValue >> fTmp >> fUnused >> unused_string;\n-                    strErr = strprintf(\"LoadWallet() upgrading tx ver=%d %d %s\",\n-                                       wtx.fTimeReceivedIsTxTime, fTmp, hash.ToString());\n-                    wtx.fTimeReceivedIsTxTime = fTmp;\n+                    if (!ssValue.empty())\n+                    {\n+                        char fTmp;\n+                        char fUnused;\n+                        std::string unused_string;\n+                        ssValue >> fTmp >> fUnused >> unused_string;\n+                        strErr = strprintf(\"LoadWallet() upgrading tx ver=%d %d %s\",\n+                                           wtx.fTimeReceivedIsTxTime, fTmp, hash.ToString());\n+                        wtx.fTimeReceivedIsTxTime = fTmp;\n+                    }\n+                    else\n+                    {\n+                        strErr = strprintf(\"LoadWallet() repairing tx ver=%d %s\", wtx.fTimeReceivedIsTxTime, hash.ToString());\n+                        wtx.fTimeReceivedIsTxTime = 0;\n+                    }\n+                    wss.vWalletUpgrade.push_back(hash);\n                 }\n-                else\n-                {\n-                    strErr = strprintf(\"LoadWallet() repairing tx ver=%d %s\", wtx.fTimeReceivedIsTxTime, hash.ToString());\n-                    wtx.fTimeReceivedIsTxTime = 0;\n-                }\n-                wss.vWalletUpgrade.push_back(hash);\n-            }\n \n-            if (wtx.nOrderPos == -1)\n-                wss.fAnyUnordered = true;\n+                if (wtx.nOrderPos == -1)\n+                    wss.fAnyUnordered = true;\n \n-            pwallet->LoadToWallet(wtx);\n+                return true;\n+            };\n+            if (!pwallet->LoadToWallet(hash, update_wtx)) {\n+                return false;",
    "path": "src/wallet/walletdb.cpp",
    "position": 64,
    "original_position": 61,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "754eb2112aac4729805dcc547bef1de956c3c14d",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In 754eb2112aac4729805dcc547bef1de956c3c14d `Avoid copying CWalletTx in LoadToWallet`\r\n\r\nThe \"result\" of (formerly `void`) `LoadToWallet` has always been ignored. Perhaps that's because before https://github.com/bitcoin/bitcoin/pull/3671/files#diff-3b5a9b7d780ff672241548edf2888fcdL385 we just updated the transaction map directly.\r\n\r\nCan you think of any silent failures that would now result in `ReadKeyValue` failing, and IIUC trigger a rescan? (cc @achow101)\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/2d6e76af240969aa284cd4c3d376493988e218c2/src/wallet/walletdb.cpp#L469-L483",
    "created_at": "2020-02-26T10:57:18Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384419297",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384419297"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384419297"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384419297/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 310,
    "original_line": 310,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384430073",
    "pull_request_review_id": 364736597,
    "id": 384430073,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQzMDA3Mw==",
    "diff_hunk": "@@ -214,36 +214,40 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         } else if (strType == DBKeys::TX) {\n             uint256 hash;\n             ssKey >> hash;\n-            CWalletTx wtx(nullptr /* pwallet */, MakeTransactionRef());\n-            ssValue >> wtx;\n-            if (wtx.GetHash() != hash)\n-                return false;\n+            auto update_wtx = [&](CWalletTx& wtx, bool /* new_tx */) {",
    "path": "src/wallet/walletdb.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "754eb2112aac4729805dcc547bef1de956c3c14d",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In 754eb2112aac4729805dcc547bef1de956c3c14d `Avoid copying CWalletTx in LoadToWallet`\r\n\r\nMaybe add a comment here that `LoadToWallet` creates a fresh `CWalletTx` and that we fill it with `ssValue` (hence my rename to `fill_wtx` suggestion above).\r\n\r\nSince a wallet doesn't (shouldn't? otherwise add `assert(new_tx)`) have duplicate transactions `new_tx` should be `true`, but if some reason a wallet entry does exists it will be overridden.",
    "created_at": "2020-02-26T11:19:12Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384430073",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384430073"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384430073"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384430073/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 217,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384433800",
    "pull_request_review_id": 364736597,
    "id": 384433800,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQzMzgwMA==",
    "diff_hunk": "@@ -858,33 +858,34 @@ bool CWallet::AddToWallet(CTransactionRef tx, const CWalletTx::Confirmation& con\n     return true;\n }\n \n-void CWallet::LoadToWallet(CWalletTx& wtxIn)\n+bool CWallet::LoadToWallet(const uint256& hash, const UpdateWalletTxFn& update_wtx)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "754eb2112aac4729805dcc547bef1de956c3c14d",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe rename `update_wtx` to `fill_wtx `.",
    "created_at": "2020-02-26T11:27:10Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384433800",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384433800"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384433800"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384433800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 861,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384443528",
    "pull_request_review_id": 364736597,
    "id": 384443528,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ0MzUyOA==",
    "diff_hunk": "@@ -668,12 +668,9 @@ DBErrors CWalletDB::FindWalletTx(std::vector<uint256>& vTxHash, std::vector<CWal\n             if (strType == \"tx\") {\n                 uint256 hash;\n                 ssKey >> hash;\n-\n-                CWalletTx wtx(nullptr /* pwallet */, MakeTransactionRef());\n-                ssValue >> wtx;\n-\n                 vTxHash.push_back(hash);\n-                vWtx.push_back(wtx);\n+                vWtx.emplace_back(nullptr /* wallet */, nullptr /* tx */);",
    "path": "src/wallet/walletdb.cpp",
    "position": 88,
    "original_position": 19,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "bf59f2135d93bc175f7a1f630285d6479580e291",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe briefly mention this in the commit message, as the change from `std::vector` to `std::list` looks a bit out of the blue (until you try compiling without).",
    "created_at": "2020-02-26T11:48:52Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384443528",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384443528"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384443528"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384443528/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 780,
    "original_line": 780,
    "side": "RIGHT",
    "in_reply_to_id": 174957667
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536100",
    "pull_request_review_id": 364955330,
    "id": 384536100,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUzNjEwMA==",
    "diff_hunk": "@@ -763,19 +763,19 @@ bool CWallet::IsSpentKey(const uint256& hash, unsigned int n) const\n     return false;\n }\n \n-bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n+bool CWallet::AddToWallet(CTransactionRef tx, const CWalletTx::Confirmation& confirm, const UpdateWalletTxFn& update_wtx, bool fFlushOnClose)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "03c5ac045f94ab965d79300712a70a0357397d5e",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384365942\r\n\r\n> In [03c5ac0](https://github.com/bitcoin/bitcoin/commit/03c5ac045f94ab965d79300712a70a0357397d5e) `Remove CWalletTx merging logic from AddToWallet`: it might make sense to have a seperate commit that adds the `confirm` argument.\r\n> (maybe not worth confusing existing reviewers)\r\n\r\nThis is a good thought, and I started to implement it, but the problem is if I just make a commit adding the confirm argument, then there are two confirm objects being passed to AddToWallet (the other one embedded in the CWalletTx object), which is confusing because it's unclear which confirmation should take precedence. If I change the CWalletTx argument to a TransactionRef to solve this problem, then there is no way for callers to set to the other CWalletTx fields (mapValue, vOrderForm, etc), and I have to add the update_wtx argument too, which is already the whole current commit",
    "created_at": "2020-02-26T14:43:57Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384536100",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536100"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384536100"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 766,
    "side": "RIGHT",
    "in_reply_to_id": 384365942
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536183",
    "pull_request_review_id": 364955330,
    "id": 384536183,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUzNjE4Mw==",
    "diff_hunk": "@@ -2951,37 +2942,38 @@ void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::ve\n {\n     auto locked_chain = chain().lock();\n     LOCK(cs_wallet);\n+    WalletLogPrintf(\"CommitTransaction:\\n%s\", tx->ToString()); /* Continued */",
    "path": "src/wallet/wallet.cpp",
    "position": 188,
    "original_position": 116,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "03c5ac045f94ab965d79300712a70a0357397d5e",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384384050\r\n\r\n> Why the `/* Continued */` comment?\r\n\r\nThis is unchanged from previous code, but it's needed to print a lint error since the log format string doesn't end in `\\n`",
    "created_at": "2020-02-26T14:44:04Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384536183",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536183"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384536183"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3003,
    "original_line": 3003,
    "side": "RIGHT",
    "in_reply_to_id": 384384050
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536300",
    "pull_request_review_id": 364955330,
    "id": 384536300,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUzNjMwMA==",
    "diff_hunk": "@@ -2951,37 +2942,38 @@ void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::ve\n {\n     auto locked_chain = chain().lock();\n     LOCK(cs_wallet);\n+    WalletLogPrintf(\"CommitTransaction:\\n%s\", tx->ToString()); /* Continued */\n \n-    CWalletTx wtxNew(this, std::move(tx));\n-    wtxNew.mapValue = std::move(mapValue);\n-    wtxNew.vOrderForm = std::move(orderForm);\n-    wtxNew.fTimeReceivedIsTxTime = true;\n-    wtxNew.fFromMe = true;\n-\n-    WalletLogPrintf(\"CommitTransaction:\\n%s\", wtxNew.tx->ToString()); /* Continued */\n+    // Get the inserted-CWalletTx from mapWallet so that the\n+    // fInMempool flag is cached properly\n+    CWalletTx* wtx = nullptr;\n \n     // Add tx to wallet, because if it has change it's also ours,\n     // otherwise just for transaction history.\n-    AddToWallet(wtxNew);\n+    AddToWallet(std::move(tx), {}, [&](CWalletTx& new_wtx, bool new_tx) {\n+        assert(new_tx);",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 133,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "03c5ac045f94ab965d79300712a70a0357397d5e",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384391256\r\n\r\n> Make this a runtime exception? Perhaps there's some weird edge case, I haven't tried, where a user restores their wallet from a backup on a node with a fresh mempool. The user then recreates the same* transaction in the UI and as they look at the confirmation screen, the transaction re-enters the mempool. Once they click OK this assert should be hit.\r\n\r\nGood point. Since there can be an arbitrary delay before the GUI commits the transaction, it isn't safe to assert assert the transaction is new. I removed the assert and just replaced it with nonfatal checks to make sure there aren't conflicting mapValue and order form values.",
    "created_at": "2020-02-26T14:44:14Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384536300",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536300"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384536300"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536300/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2954,
    "side": "RIGHT",
    "in_reply_to_id": 384391256
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536374",
    "pull_request_review_id": 364955330,
    "id": 384536374,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUzNjM3NA==",
    "diff_hunk": "@@ -871,7 +871,16 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n     DBErrors ReorderTransactions();\n \n     void MarkDirty();\n-    bool AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose=true);\n+\n+    //! Callback for updating transaction metadata in mapWallet.\n+    //!\n+    //! @param wtx - reference to mapWallet transaction to update\n+    //! @param new_tx - true if wtx is newly inserted, false it it previously existed",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 9,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "03c5ac045f94ab965d79300712a70a0357397d5e",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384374046\r\n\r\n> Nit: \"false _if_ it\"\r\n\r\nThank you, fixed!",
    "created_at": "2020-02-26T14:44:21Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384536374",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536374"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384536374"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 878,
    "side": "RIGHT",
    "in_reply_to_id": 384374046
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536559",
    "pull_request_review_id": 364955330,
    "id": 384536559,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUzNjU1OQ==",
    "diff_hunk": "@@ -858,33 +858,34 @@ bool CWallet::AddToWallet(CTransactionRef tx, const CWalletTx::Confirmation& con\n     return true;\n }\n \n-void CWallet::LoadToWallet(CWalletTx& wtxIn)\n+bool CWallet::LoadToWallet(const uint256& hash, const UpdateWalletTxFn& update_wtx)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "754eb2112aac4729805dcc547bef1de956c3c14d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384433800\r\n\r\n> Maybe rename `update_wtx` to `fill_wtx `.\r\n\r\nDone",
    "created_at": "2020-02-26T14:44:39Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384536559",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536559"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384536559"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536559/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 861,
    "side": "RIGHT",
    "in_reply_to_id": 384433800
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536681",
    "pull_request_review_id": 364955330,
    "id": 384536681,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUzNjY4MQ==",
    "diff_hunk": "@@ -214,36 +214,40 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         } else if (strType == DBKeys::TX) {\n             uint256 hash;\n             ssKey >> hash;\n-            CWalletTx wtx(nullptr /* pwallet */, MakeTransactionRef());\n-            ssValue >> wtx;\n-            if (wtx.GetHash() != hash)\n-                return false;\n+            auto update_wtx = [&](CWalletTx& wtx, bool /* new_tx */) {",
    "path": "src/wallet/walletdb.cpp",
    "position": null,
    "original_position": 8,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "754eb2112aac4729805dcc547bef1de956c3c14d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384430073\r\n\r\n> In [754eb21](https://github.com/bitcoin/bitcoin/commit/754eb2112aac4729805dcc547bef1de956c3c14d) `Avoid copying CWalletTx in LoadToWallet`\r\n> \r\n> Maybe add a comment here that `LoadToWallet` creates a fresh `CWalletTx` and that we fill it with `ssValue` (hence my rename to `fill_wtx` suggestion above).\r\n> \r\n> Since a wallet doesn't (shouldn't? otherwise add `assert(new_tx)`) have duplicate transactions `new_tx` should be `true`, but if some reason a wallet entry does exists it will be overridden.\r\n\r\nAdded comment and assert",
    "created_at": "2020-02-26T14:44:50Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384536681",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536681"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384536681"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 217,
    "side": "RIGHT",
    "in_reply_to_id": 384430073
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536761",
    "pull_request_review_id": 364955330,
    "id": 384536761,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUzNjc2MQ==",
    "diff_hunk": "@@ -214,36 +214,40 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n         } else if (strType == DBKeys::TX) {\n             uint256 hash;\n             ssKey >> hash;\n-            CWalletTx wtx(nullptr /* pwallet */, MakeTransactionRef());\n-            ssValue >> wtx;\n-            if (wtx.GetHash() != hash)\n-                return false;\n+            auto update_wtx = [&](CWalletTx& wtx, bool /* new_tx */) {\n+                ssValue >> wtx;\n+                if (wtx.GetHash() != hash)\n+                    return false;\n \n-            // Undo serialize changes in 31600\n-            if (31404 <= wtx.fTimeReceivedIsTxTime && wtx.fTimeReceivedIsTxTime <= 31703)\n-            {\n-                if (!ssValue.empty())\n+                // Undo serialize changes in 31600\n+                if (31404 <= wtx.fTimeReceivedIsTxTime && wtx.fTimeReceivedIsTxTime <= 31703)\n                 {\n-                    char fTmp;\n-                    char fUnused;\n-                    std::string unused_string;\n-                    ssValue >> fTmp >> fUnused >> unused_string;\n-                    strErr = strprintf(\"LoadWallet() upgrading tx ver=%d %d %s\",\n-                                       wtx.fTimeReceivedIsTxTime, fTmp, hash.ToString());\n-                    wtx.fTimeReceivedIsTxTime = fTmp;\n+                    if (!ssValue.empty())\n+                    {\n+                        char fTmp;\n+                        char fUnused;\n+                        std::string unused_string;\n+                        ssValue >> fTmp >> fUnused >> unused_string;\n+                        strErr = strprintf(\"LoadWallet() upgrading tx ver=%d %d %s\",\n+                                           wtx.fTimeReceivedIsTxTime, fTmp, hash.ToString());\n+                        wtx.fTimeReceivedIsTxTime = fTmp;\n+                    }\n+                    else\n+                    {\n+                        strErr = strprintf(\"LoadWallet() repairing tx ver=%d %s\", wtx.fTimeReceivedIsTxTime, hash.ToString());\n+                        wtx.fTimeReceivedIsTxTime = 0;\n+                    }\n+                    wss.vWalletUpgrade.push_back(hash);\n                 }\n-                else\n-                {\n-                    strErr = strprintf(\"LoadWallet() repairing tx ver=%d %s\", wtx.fTimeReceivedIsTxTime, hash.ToString());\n-                    wtx.fTimeReceivedIsTxTime = 0;\n-                }\n-                wss.vWalletUpgrade.push_back(hash);\n-            }\n \n-            if (wtx.nOrderPos == -1)\n-                wss.fAnyUnordered = true;\n+                if (wtx.nOrderPos == -1)\n+                    wss.fAnyUnordered = true;\n \n-            pwallet->LoadToWallet(wtx);\n+                return true;\n+            };\n+            if (!pwallet->LoadToWallet(hash, update_wtx)) {\n+                return false;",
    "path": "src/wallet/walletdb.cpp",
    "position": 64,
    "original_position": 61,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "754eb2112aac4729805dcc547bef1de956c3c14d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384419297\r\n\r\n> In [754eb21](https://github.com/bitcoin/bitcoin/commit/754eb2112aac4729805dcc547bef1de956c3c14d) `Avoid copying CWalletTx in LoadToWallet`\r\n> \r\n> The \"result\" of (formerly `void`) `LoadToWallet` has always been ignored. Perhaps that's because before https://github.com/bitcoin/bitcoin/pull/3671/files#diff-3b5a9b7d780ff672241548edf2888fcdL385 we just updated the transaction map directly.\r\n> \r\n> Can you think of any silent failures that would now result in `ReadKeyValue` failing, and IIUC trigger a rescan? (cc @achow101)\r\n\r\nIt might be worth thinking about how to improve error handling in this code, but behavior shouldn't be changing here. LoadToWallet will only return false if fill_wtx returns false, and fill_wtx only returns false if `wtx.GetHash() != hash`. So ReadKeyValue should be returning true all the times it used to return true and false and the times it used to return false",
    "created_at": "2020-02-26T14:44:58Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384536761",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536761"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r384536761"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384536761/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 310,
    "original_line": 310,
    "side": "RIGHT",
    "in_reply_to_id": 384419297
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420187394",
    "pull_request_review_id": 405887564,
    "id": 420187394,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE4NzM5NA==",
    "diff_hunk": "@@ -3007,37 +2999,34 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm)\n {\n     LOCK(cs_wallet);\n-\n-    CWalletTx wtxNew(this, std::move(tx));\n-    wtxNew.mapValue = std::move(mapValue);\n-    wtxNew.vOrderForm = std::move(orderForm);\n-    wtxNew.fTimeReceivedIsTxTime = true;\n-    wtxNew.fFromMe = true;\n-\n-    WalletLogPrintf(\"CommitTransaction:\\n%s\", wtxNew.tx->ToString()); /* Continued */\n+    WalletLogPrintf(\"CommitTransaction:\\n%s\", tx->ToString()); /* Continued */\n \n     // Add tx to wallet, because if it has change it's also ours,\n     // otherwise just for transaction history.\n-    AddToWallet(wtxNew);\n+    CWalletTx* wtx = AddToWallet(std::move(tx), {}, [&](CWalletTx& wtx, bool new_tx) {\n+        CHECK_NONFATAL(wtx.mapValue.empty());\n+        CHECK_NONFATAL(wtx.vOrderForm.empty());\n+        wtx.mapValue = std::move(mapValue);",
    "path": "src/wallet/wallet.cpp",
    "position": 196,
    "original_position": 147,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "677e1e0e0e1c7d767f56fc61199b906f7442ac6f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Does the `std::move` still work after going through a lambda capture by reference?",
    "created_at": "2020-05-05T15:12:48Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420187394",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420187394"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420187394"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420187394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3010,
    "original_line": 3010,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420187836",
    "pull_request_review_id": 405887564,
    "id": 420187836,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE4NzgzNg==",
    "diff_hunk": "@@ -3007,37 +2999,34 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm)\n {\n     LOCK(cs_wallet);\n-\n-    CWalletTx wtxNew(this, std::move(tx));\n-    wtxNew.mapValue = std::move(mapValue);\n-    wtxNew.vOrderForm = std::move(orderForm);\n-    wtxNew.fTimeReceivedIsTxTime = true;\n-    wtxNew.fFromMe = true;\n-\n-    WalletLogPrintf(\"CommitTransaction:\\n%s\", wtxNew.tx->ToString()); /* Continued */\n+    WalletLogPrintf(\"CommitTransaction:\\n%s\", tx->ToString()); /* Continued */\n \n     // Add tx to wallet, because if it has change it's also ours,\n     // otherwise just for transaction history.\n-    AddToWallet(wtxNew);\n+    CWalletTx* wtx = AddToWallet(std::move(tx), {}, [&](CWalletTx& wtx, bool new_tx) {\n+        CHECK_NONFATAL(wtx.mapValue.empty());\n+        CHECK_NONFATAL(wtx.vOrderForm.empty());\n+        wtx.mapValue = std::move(mapValue);\n+        wtx.vOrderForm = std::move(orderForm);\n+        wtx.fTimeReceivedIsTxTime = true;\n+        wtx.fFromMe = true;\n+        return true;\n+    });\n \n     // Notify that old coins are spent\n-    for (const CTxIn& txin : wtxNew.tx->vin) {\n+    for (const CTxIn& txin : wtx->tx->vin) {",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 156,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "677e1e0e0e1c7d767f56fc61199b906f7442ac6f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Doesn't this line crash the node when the wallet can not write the tx to disk?",
    "created_at": "2020-05-05T15:13:25Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420187836",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420187836"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420187836"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420187836/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3017,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420238473",
    "pull_request_review_id": 405951099,
    "id": 420238473,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIzODQ3Mw==",
    "diff_hunk": "@@ -3007,37 +2999,34 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm)\n {\n     LOCK(cs_wallet);\n-\n-    CWalletTx wtxNew(this, std::move(tx));\n-    wtxNew.mapValue = std::move(mapValue);\n-    wtxNew.vOrderForm = std::move(orderForm);\n-    wtxNew.fTimeReceivedIsTxTime = true;\n-    wtxNew.fFromMe = true;\n-\n-    WalletLogPrintf(\"CommitTransaction:\\n%s\", wtxNew.tx->ToString()); /* Continued */\n+    WalletLogPrintf(\"CommitTransaction:\\n%s\", tx->ToString()); /* Continued */\n \n     // Add tx to wallet, because if it has change it's also ours,\n     // otherwise just for transaction history.\n-    AddToWallet(wtxNew);\n+    CWalletTx* wtx = AddToWallet(std::move(tx), {}, [&](CWalletTx& wtx, bool new_tx) {\n+        CHECK_NONFATAL(wtx.mapValue.empty());\n+        CHECK_NONFATAL(wtx.vOrderForm.empty());\n+        wtx.mapValue = std::move(mapValue);",
    "path": "src/wallet/wallet.cpp",
    "position": 196,
    "original_position": 147,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "677e1e0e0e1c7d767f56fc61199b906f7442ac6f",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes. mapValue is a reference to the same thing it was outside of the lambda. std::move casts it to an rvalue reference.",
    "created_at": "2020-05-05T16:22:51Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420238473",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420238473"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420238473"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420238473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3010,
    "original_line": 3010,
    "side": "RIGHT",
    "in_reply_to_id": 420187394
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420243391",
    "pull_request_review_id": 405948073,
    "id": 420243391,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI0MzM5MQ==",
    "diff_hunk": "@@ -3007,37 +2999,34 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm)\n {\n     LOCK(cs_wallet);\n-\n-    CWalletTx wtxNew(this, std::move(tx));\n-    wtxNew.mapValue = std::move(mapValue);\n-    wtxNew.vOrderForm = std::move(orderForm);\n-    wtxNew.fTimeReceivedIsTxTime = true;\n-    wtxNew.fFromMe = true;\n-\n-    WalletLogPrintf(\"CommitTransaction:\\n%s\", wtxNew.tx->ToString()); /* Continued */\n+    WalletLogPrintf(\"CommitTransaction:\\n%s\", tx->ToString()); /* Continued */\n \n     // Add tx to wallet, because if it has change it's also ours,\n     // otherwise just for transaction history.\n-    AddToWallet(wtxNew);\n+    CWalletTx* wtx = AddToWallet(std::move(tx), {}, [&](CWalletTx& wtx, bool new_tx) {\n+        CHECK_NONFATAL(wtx.mapValue.empty());\n+        CHECK_NONFATAL(wtx.vOrderForm.empty());\n+        wtx.mapValue = std::move(mapValue);\n+        wtx.vOrderForm = std::move(orderForm);\n+        wtx.fTimeReceivedIsTxTime = true;\n+        wtx.fFromMe = true;\n+        return true;\n+    });\n \n     // Notify that old coins are spent\n-    for (const CTxIn& txin : wtxNew.tx->vin) {\n+    for (const CTxIn& txin : wtx->tx->vin) {",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 156,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "677e1e0e0e1c7d767f56fc61199b906f7442ac6f",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420187836\r\n\r\n> Doesn't this line crash the node when the wallet can not write the tx to disk?\r\n\r\nWow, good catch! I'm not sure current behavior is ideal either but it wasn't my intention to change it. Updated PR",
    "created_at": "2020-05-05T16:30:13Z",
    "updated_at": "2020-05-05T16:51:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420243391",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420243391"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420243391"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420243391/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3017,
    "side": "RIGHT",
    "in_reply_to_id": 420187836
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420245998",
    "pull_request_review_id": 405960320,
    "id": 420245998,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI0NTk5OA==",
    "diff_hunk": "@@ -3007,37 +2999,34 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm)\n {\n     LOCK(cs_wallet);\n-\n-    CWalletTx wtxNew(this, std::move(tx));\n-    wtxNew.mapValue = std::move(mapValue);\n-    wtxNew.vOrderForm = std::move(orderForm);\n-    wtxNew.fTimeReceivedIsTxTime = true;\n-    wtxNew.fFromMe = true;\n-\n-    WalletLogPrintf(\"CommitTransaction:\\n%s\", wtxNew.tx->ToString()); /* Continued */\n+    WalletLogPrintf(\"CommitTransaction:\\n%s\", tx->ToString()); /* Continued */\n \n     // Add tx to wallet, because if it has change it's also ours,\n     // otherwise just for transaction history.\n-    AddToWallet(wtxNew);\n+    CWalletTx* wtx = AddToWallet(std::move(tx), {}, [&](CWalletTx& wtx, bool new_tx) {\n+        CHECK_NONFATAL(wtx.mapValue.empty());\n+        CHECK_NONFATAL(wtx.vOrderForm.empty());\n+        wtx.mapValue = std::move(mapValue);",
    "path": "src/wallet/wallet.cpp",
    "position": 196,
    "original_position": 147,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "677e1e0e0e1c7d767f56fc61199b906f7442ac6f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh, this has nothing to do with lambdas. I didn't know that references (as long as they are not const) can be moved.",
    "created_at": "2020-05-05T16:33:50Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420245998",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420245998"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420245998"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420245998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3010,
    "original_line": 3010,
    "side": "RIGHT",
    "in_reply_to_id": 420187394
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420249813",
    "pull_request_review_id": 405948073,
    "id": 420249813,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI0OTgxMw==",
    "diff_hunk": "@@ -3007,37 +2999,34 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm)\n {\n     LOCK(cs_wallet);\n-\n-    CWalletTx wtxNew(this, std::move(tx));\n-    wtxNew.mapValue = std::move(mapValue);\n-    wtxNew.vOrderForm = std::move(orderForm);\n-    wtxNew.fTimeReceivedIsTxTime = true;\n-    wtxNew.fFromMe = true;\n-\n-    WalletLogPrintf(\"CommitTransaction:\\n%s\", wtxNew.tx->ToString()); /* Continued */\n+    WalletLogPrintf(\"CommitTransaction:\\n%s\", tx->ToString()); /* Continued */\n \n     // Add tx to wallet, because if it has change it's also ours,\n     // otherwise just for transaction history.\n-    AddToWallet(wtxNew);\n+    CWalletTx* wtx = AddToWallet(std::move(tx), {}, [&](CWalletTx& wtx, bool new_tx) {\n+        CHECK_NONFATAL(wtx.mapValue.empty());\n+        CHECK_NONFATAL(wtx.vOrderForm.empty());\n+        wtx.mapValue = std::move(mapValue);",
    "path": "src/wallet/wallet.cpp",
    "position": 196,
    "original_position": 147,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "677e1e0e0e1c7d767f56fc61199b906f7442ac6f",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420187394\r\n\r\n> Oh, this has nothing to do with lambdas. I didn't know that references (as long as they are not const) can be moved.\r\n\r\nYep, `std::move` isn't affected by outside things like this. `std::move(mapValue)` is only a type cast from `mapValue_t&` to `mapValue_t&&` that makes the compiler favor the `operator=(mapValue_t&&)` assignment overload instead of the `operator=(const mapValue_t&)` one for `wtx.mapValue =`",
    "created_at": "2020-05-05T16:39:28Z",
    "updated_at": "2020-05-05T16:51:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420249813",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420249813"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420249813"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420249813/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3010,
    "original_line": 3010,
    "side": "RIGHT",
    "in_reply_to_id": 420187394
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420251260",
    "pull_request_review_id": 405966737,
    "id": 420251260,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1MTI2MA==",
    "diff_hunk": "@@ -3007,37 +2999,34 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm)\n {\n     LOCK(cs_wallet);\n-\n-    CWalletTx wtxNew(this, std::move(tx));\n-    wtxNew.mapValue = std::move(mapValue);\n-    wtxNew.vOrderForm = std::move(orderForm);\n-    wtxNew.fTimeReceivedIsTxTime = true;\n-    wtxNew.fFromMe = true;\n-\n-    WalletLogPrintf(\"CommitTransaction:\\n%s\", wtxNew.tx->ToString()); /* Continued */\n+    WalletLogPrintf(\"CommitTransaction:\\n%s\", tx->ToString()); /* Continued */\n \n     // Add tx to wallet, because if it has change it's also ours,\n     // otherwise just for transaction history.\n-    AddToWallet(wtxNew);\n+    CWalletTx* wtx = AddToWallet(std::move(tx), {}, [&](CWalletTx& wtx, bool new_tx) {\n+        CHECK_NONFATAL(wtx.mapValue.empty());\n+        CHECK_NONFATAL(wtx.vOrderForm.empty());\n+        wtx.mapValue = std::move(mapValue);",
    "path": "src/wallet/wallet.cpp",
    "position": 196,
    "original_position": 147,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "677e1e0e0e1c7d767f56fc61199b906f7442ac6f",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Even const ones, actually - though unless they have mutable fields, there is no effect.",
    "created_at": "2020-05-05T16:41:39Z",
    "updated_at": "2020-05-05T16:50:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420251260",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420251260"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420251260"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420251260/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3010,
    "original_line": 3010,
    "side": "RIGHT",
    "in_reply_to_id": 420187394
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420286577",
    "pull_request_review_id": 406008742,
    "id": 420286577,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI4NjU3Nw==",
    "diff_hunk": "@@ -3007,37 +2999,34 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm)\n {\n     LOCK(cs_wallet);\n-\n-    CWalletTx wtxNew(this, std::move(tx));\n-    wtxNew.mapValue = std::move(mapValue);\n-    wtxNew.vOrderForm = std::move(orderForm);\n-    wtxNew.fTimeReceivedIsTxTime = true;\n-    wtxNew.fFromMe = true;\n-\n-    WalletLogPrintf(\"CommitTransaction:\\n%s\", wtxNew.tx->ToString()); /* Continued */\n+    WalletLogPrintf(\"CommitTransaction:\\n%s\", tx->ToString()); /* Continued */\n \n     // Add tx to wallet, because if it has change it's also ours,\n     // otherwise just for transaction history.\n-    AddToWallet(wtxNew);\n+    CWalletTx* wtx = AddToWallet(std::move(tx), {}, [&](CWalletTx& wtx, bool new_tx) {\n+        CHECK_NONFATAL(wtx.mapValue.empty());\n+        CHECK_NONFATAL(wtx.vOrderForm.empty());\n+        wtx.mapValue = std::move(mapValue);",
    "path": "src/wallet/wallet.cpp",
    "position": 196,
    "original_position": 147,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "677e1e0e0e1c7d767f56fc61199b906f7442ac6f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "With \"no effect\" you mean `const&` will stay `const&`, right? See also the example, which does not compile, because the `const&` copy constructor is deleted:\r\n\r\n```cpp\r\n#include <memory>\r\n\r\nstruct Test{\r\n    const std::unique_ptr<int>b;\r\n    Test(const std::unique_ptr<int>& a):b{std::move(a)}{}\r\n};",
    "created_at": "2020-05-05T17:34:27Z",
    "updated_at": "2020-05-05T17:34:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420286577",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420286577"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420286577"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420286577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3010,
    "original_line": 3010,
    "side": "RIGHT",
    "in_reply_to_id": 420187394
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420288613",
    "pull_request_review_id": 406011317,
    "id": 420288613,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI4ODYxMw==",
    "diff_hunk": "@@ -3007,37 +2999,34 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm)\n {\n     LOCK(cs_wallet);\n-\n-    CWalletTx wtxNew(this, std::move(tx));\n-    wtxNew.mapValue = std::move(mapValue);\n-    wtxNew.vOrderForm = std::move(orderForm);\n-    wtxNew.fTimeReceivedIsTxTime = true;\n-    wtxNew.fFromMe = true;\n-\n-    WalletLogPrintf(\"CommitTransaction:\\n%s\", wtxNew.tx->ToString()); /* Continued */\n+    WalletLogPrintf(\"CommitTransaction:\\n%s\", tx->ToString()); /* Continued */\n \n     // Add tx to wallet, because if it has change it's also ours,\n     // otherwise just for transaction history.\n-    AddToWallet(wtxNew);\n+    CWalletTx* wtx = AddToWallet(std::move(tx), {}, [&](CWalletTx& wtx, bool new_tx) {\n+        CHECK_NONFATAL(wtx.mapValue.empty());\n+        CHECK_NONFATAL(wtx.vOrderForm.empty());\n+        wtx.mapValue = std::move(mapValue);",
    "path": "src/wallet/wallet.cpp",
    "position": 196,
    "original_position": 147,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "677e1e0e0e1c7d767f56fc61199b906f7442ac6f",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`std::move(a)` where a is `const T&`, returns something of type `const T&&`. If T has for example a `operator=(const T&&)`, then that one would be selected in assignment. If there is no such operator, `operator=(const T&)` will be selected instead. In general a `const T&&` assignment/constructor operator only makes sense if a class has mutable fields.",
    "created_at": "2020-05-05T17:37:56Z",
    "updated_at": "2020-05-05T17:38:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420288613",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420288613"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420288613"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420288613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3010,
    "original_line": 3010,
    "side": "RIGHT",
    "in_reply_to_id": 420187394
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420291853",
    "pull_request_review_id": 406015325,
    "id": 420291853,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI5MTg1Mw==",
    "diff_hunk": "@@ -3007,37 +2999,34 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CTransac\n void CWallet::CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm)\n {\n     LOCK(cs_wallet);\n-\n-    CWalletTx wtxNew(this, std::move(tx));\n-    wtxNew.mapValue = std::move(mapValue);\n-    wtxNew.vOrderForm = std::move(orderForm);\n-    wtxNew.fTimeReceivedIsTxTime = true;\n-    wtxNew.fFromMe = true;\n-\n-    WalletLogPrintf(\"CommitTransaction:\\n%s\", wtxNew.tx->ToString()); /* Continued */\n+    WalletLogPrintf(\"CommitTransaction:\\n%s\", tx->ToString()); /* Continued */\n \n     // Add tx to wallet, because if it has change it's also ours,\n     // otherwise just for transaction history.\n-    AddToWallet(wtxNew);\n+    CWalletTx* wtx = AddToWallet(std::move(tx), {}, [&](CWalletTx& wtx, bool new_tx) {\n+        CHECK_NONFATAL(wtx.mapValue.empty());\n+        CHECK_NONFATAL(wtx.vOrderForm.empty());\n+        wtx.mapValue = std::move(mapValue);",
    "path": "src/wallet/wallet.cpp",
    "position": 196,
    "original_position": 147,
    "commit_id": "28b112e9bd3fd1181c0720306051ba7efca8b436",
    "original_commit_id": "677e1e0e0e1c7d767f56fc61199b906f7442ac6f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "TIL that `const T&&` exists.",
    "created_at": "2020-05-05T17:43:18Z",
    "updated_at": "2020-05-05T17:43:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420291853",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420291853"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9381#discussion_r420291853"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/420291853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3010,
    "original_line": 3010,
    "side": "RIGHT",
    "in_reply_to_id": 420187394
  }
]