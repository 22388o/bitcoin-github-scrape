[
  {
    "sha": "9986608ba93de040490ee0d5584ea33e605f1df0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTg2NjA4YmE5M2RlMDQwNDkwZWUwZDU1ODRlYTMzZTYwNWYxZGYw",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2020-04-15T21:07:44Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2020-04-15T21:07:44Z"
      },
      "message": "test: Verify findCommonAncestor always initializes outputs\n\nAlso add code comment to clarify surprising code noted by practicalswift\nhttps://github.com/bitcoin/bitcoin/pull/18657#issuecomment-614278450",
      "tree": {
        "sha": "1777a14d9a81dc6dbdb1314c29f139c76738d2f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1777a14d9a81dc6dbdb1314c29f139c76738d2f9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9986608ba93de040490ee0d5584ea33e605f1df0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9986608ba93de040490ee0d5584ea33e605f1df0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9986608ba93de040490ee0d5584ea33e605f1df0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9986608ba93de040490ee0d5584ea33e605f1df0/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4bd6bc5cb4f3c4b017cc0ac21c00c2218acb97d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bd6bc5cb4f3c4b017cc0ac21c00c2218acb97d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4bd6bc5cb4f3c4b017cc0ac21c00c2218acb97d0"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0e7641ae3205fd50b1ea476b7ebc46d9e4c0fa4a",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9986608ba93de040490ee0d5584ea33e605f1df0/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9986608ba93de040490ee0d5584ea33e605f1df0/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=9986608ba93de040490ee0d5584ea33e605f1df0",
        "patch": "@@ -275,6 +275,8 @@ class ChainImpl : public Chain\n         const CBlockIndex* block1 = LookupBlockIndex(block_hash1);\n         const CBlockIndex* block2 = LookupBlockIndex(block_hash2);\n         const CBlockIndex* ancestor = block1 && block2 ? LastCommonAncestor(block1, block2) : nullptr;\n+        // Using & instead of && below to avoid short circuiting and leaving\n+        // output uninitialized.\n         return FillBlock(ancestor, ancestor_out, lock) & FillBlock(block1, block1_out, lock) & FillBlock(block2, block2_out, lock);\n     }\n     void findCoins(std::map<COutPoint, Coin>& coins) override { return FindCoins(m_node, coins); }"
      },
      {
        "sha": "b0d4de89f30432d45c13c3bd364baaa4bafee8ca",
        "filename": "src/test/interfaces_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9986608ba93de040490ee0d5584ea33e605f1df0/src/test/interfaces_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9986608ba93de040490ee0d5584ea33e605f1df0/src/test/interfaces_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/interfaces_tests.cpp?ref=9986608ba93de040490ee0d5584ea33e605f1df0",
        "patch": "@@ -116,6 +116,12 @@ BOOST_AUTO_TEST_CASE(findCommonAncestor)\n     BOOST_CHECK_EQUAL(orig_height, orig_tip->nHeight);\n     BOOST_CHECK_EQUAL(fork_height, orig_tip->nHeight - 10);\n     BOOST_CHECK_EQUAL(fork_hash, active[fork_height]->GetBlockHash());\n+\n+    uint256 active_hash, orig_hash;\n+    BOOST_CHECK(!chain->findCommonAncestor(active.Tip()->GetBlockHash(), {}, {}, FoundBlock().hash(active_hash), {}));\n+    BOOST_CHECK(!chain->findCommonAncestor({}, orig_tip->GetBlockHash(), {}, {}, FoundBlock().hash(orig_hash)));\n+    BOOST_CHECK_EQUAL(active_hash, active.Tip()->GetBlockHash());\n+    BOOST_CHECK_EQUAL(orig_hash, orig_tip->GetBlockHash());\n }\n \n BOOST_AUTO_TEST_CASE(hasBlocks)"
      }
    ]
  }
]