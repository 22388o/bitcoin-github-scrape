[
  {
    "sha": "6262182b3f1c9540291fb8de3bf7a785e7113c55",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MjYyMTgyYjNmMWM5NTQwMjkxZmI4ZGUzYmY3YTc4NWU3MTEzYzU1",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-04-14T22:18:43Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2021-04-14T22:21:17Z"
      },
      "message": "Avoid use of low file descriptor ids (which may be in use) in FuzzedSock and StaticContentsSock",
      "tree": {
        "sha": "bf90f216aabca2113c3ba00f0b1f10c44fb370e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf90f216aabca2113c3ba00f0b1f10c44fb370e7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6262182b3f1c9540291fb8de3bf7a785e7113c55",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6262182b3f1c9540291fb8de3bf7a785e7113c55",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6262182b3f1c9540291fb8de3bf7a785e7113c55",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6262182b3f1c9540291fb8de3bf7a785e7113c55/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e7af2f35af95f4ca51e38c8ac5b05cad8be22489",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7af2f35af95f4ca51e38c8ac5b05cad8be22489",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e7af2f35af95f4ca51e38c8ac5b05cad8be22489"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 4,
      "deletions": 5
    },
    "files": [
      {
        "sha": "a3feddc21d5cf3f18fa852a9c293b6a23540d09b",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6262182b3f1c9540291fb8de3bf7a785e7113c55/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6262182b3f1c9540291fb8de3bf7a785e7113c55/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=6262182b3f1c9540291fb8de3bf7a785e7113c55",
        "patch": "@@ -577,15 +577,15 @@ class FuzzedSock : public Sock\n public:\n     explicit FuzzedSock(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n     {\n-          m_socket = fuzzed_data_provider.ConsumeIntegral<SOCKET>();\n+          m_socket = fuzzed_data_provider.ConsumeIntegralInRange<SOCKET>(INVALID_SOCKET - 1, INVALID_SOCKET);\n     }\n \n     ~FuzzedSock() override\n     {\n         // Sock::~Sock() will be called after FuzzedSock::~FuzzedSock() and it will call\n         // Sock::Reset() (not FuzzedSock::Reset()!) which will call CloseSocket(m_socket).\n-        // Avoid closing an arbitrary file descriptor (m_socket is just a random number which\n-        // may concide with a real opened file descriptor).\n+        // Avoid closing an arbitrary file descriptor (m_socket is just a random very high number which\n+        // theoretically may concide with a real opened file descriptor).\n         Reset();\n     }\n "
      },
      {
        "sha": "9268d60a1ed6383809b71e0f044a2b6ceace70a7",
        "filename": "src/test/util/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6262182b3f1c9540291fb8de3bf7a785e7113c55/src/test/util/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6262182b3f1c9540291fb8de3bf7a785e7113c55/src/test/util/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/net.h?ref=6262182b3f1c9540291fb8de3bf7a785e7113c55",
        "patch": "@@ -78,8 +78,7 @@ class StaticContentsSock : public Sock\n     explicit StaticContentsSock(const std::string& contents) : m_contents{contents}, m_consumed{0}\n     {\n         // Just a dummy number that is not INVALID_SOCKET.\n-        static_assert(INVALID_SOCKET != 1000);\n-        m_socket = 1000;\n+        m_socket = INVALID_SOCKET - 1;\n     }\n \n     ~StaticContentsSock() override { Reset(); }"
      }
    ]
  }
]