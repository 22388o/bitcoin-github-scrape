gmaxwell,2013-03-04T20:37:07Z,"I'm generally in favor of this sort of thing, in that it helps foster understanding of the system (e.g. understanding that it spends coins and not accounts) and avoids people getting pushed to webpages to get similar functionality.\n\nI'm not keen on the ""back to input"" change option, it's not obvious to some people why they shouldn't reuse addresses and it shouldn't be something the system encour",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14403837,14403837,
cozz,2013-03-04T21:47:19Z,"update: removed ""back to input""\n\n@gmaxwell I am actually already computing the fees while selecting inputs assuming 2 outputs\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14407850,14407850,
cozz,2013-03-04T22:08:34Z,"sorry guys, the build issues are because I never tested this with Qt 4.7, I will commit an update in the next days. \n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14409147,14409147,
eldentyrell,2013-03-04T23:18:21Z,"Please merge this.  For many users, having this feature in the client (and not some external utility) is a higher priority than anything else that has happened since the 0.6 release.  Consider how that affects their incentive to upgrade.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14413208,14413208,
BitcoinPullTester,2013-03-05T00:55:03Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/e90eb8f68d245364022c840ceee496a836b0cf5b for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14417181,14417181,
gavinandresen,2013-03-05T01:13:10Z,"How was this or should this be tested?  Can you write up (or, better, get somebody to write up) a test plan? See https://github.com/bitcoin/QA/blob/master/TestPlanCreation.md for how.\n\nThis is definitely a large enough feature with enough possibility of disastrous consequences if there is a bug (people sending coins to /dev/null) to spend some good solid time testing carefully.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14417799,14417799,
rebroad,2013-03-05T01:55:18Z,"I concur with @eldentyrell - if this isn't merged then a fork will occur, which may potentially be more popular than this one - some diversity of this client is probably a good thing though to maintain what bitcoin is meant to be about - decentralised.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14419157,14419157,
eldentyrell,2013-03-05T01:57:29Z,Actually I'm not worried about a fork so much as people simply using increasingly-ancient versions of the client.  Right now there are a bunch of people who will simply keep using coderrr's 0.6-based binaries forever if they aren't offered something strictly more useful.\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14419205,14419205,
gmaxwell,2013-03-05T01:57:29Z,@rebroad  I'm wondering why you think it's appropriate to use threatening language over code that doesn't currently compile? Good luck with that fork.\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14419206,14419206,
eldentyrell,2013-03-05T02:05:22Z,> This is definitely a large enough feature with enough possibility of disastrous consequences if there is a bug (people sending coins to /dev/null) to spend some good solid time testing carefully.\n\nKeep in mind that the people who use this feature will choose an older guaranteed-to-be-more-buggy-since-other-bugs-have-been-fixed-since-then client if the latest bitcoin.org client doesn't offer th,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14419417,14419417,
cozz,2013-03-05T02:21:36Z,"If someone is eligible and wants to write such a test plan, please contact me. \n\nI can help with some coins for the work, just in case they end up in /dev/null while testing:)\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14419862,14419862,
luke-jr,2013-03-05T02:41:13Z,@eldentyrell They could always merge coincontrol with the relevant stable branch (not to dissuade merging this..)\n\n@gmaxwell I didn't interpret @rebroad as threatening at all O.o\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14420378,14420378,
eldentyrell,2013-03-05T03:29:32Z,"@luke-jr, I'm talking about non-{template-heavy-C++}-programmers (the majority of bitcoin users).\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14421643,14421643,
gmaxwell,2013-03-05T03:35:46Z,"CNF shouldn't be a check, it should be a count. (if you want to make it change color when IsConfirmed() thats fine with me too). This is because it influences priority, which perhaps should be shown, as well as securityâ€” confirmation isn't a binary state and the coincontrol interface should be upfront with that.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14421793,14421793,
gmaxwell,2013-03-05T03:40:31Z,If you've selected a bunch of coins in a bunch of different groups it's not easy to unselect them. There should probably be some discoverable way to select all / unselect all.\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14421897,14421897,
gmaxwell,2013-03-05T03:51:10Z,"Shows transactions which are currently in listlockunspent. These should be greyed out. (perhaps with a padlock on them, bonus if the gui gets the ability to lock and unlock them)\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14422138,14422138,
cozz,2013-03-05T03:52:08Z,"@gmaxwell confirmations are shown with tooltip. priority does not matter in my version of coin control.\n\nALL SELECTED INPUTS ARE GOING INTO THE TRANSACTION FOR SURE.\nIf you select 100BTC but only send 1 satoshi, still all 100BTC will be inputs, rest will send back as change.\n\nAlso there is already select all / unselect all, you have to click on ""*"" (left table header).\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14422152,14422152,
gmaxwell,2013-03-05T04:00:04Z,"@cozz  Uh. Priority has nothing to do with which selected inputs go into the transaction.  It's one of the factors that determines if the transaction can be free or not, and influences how fast it can be mined. I am totally confused as to what you're thinking there.\n\nA tooltip is effectively hidden, especially one that takes a half second hover on a tiny icon. Why not make it the number?\n\nThe ",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14422352,14422352,
cozz,2013-03-05T04:05:07Z,"actually I am using the listlockunspent methods to realize coin control, so combining the GUI and cli methods is not possible with this. The GUI would delete your locks, if set by cli. if you guys think this is no good, I need to change this.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14422455,14422455,
gmaxwell,2013-03-05T04:09:25Z,"The lockunspent code is trivial, so if we want to go that route we could basically duplicate it for this. I'll have to contemplate and look through your code. Still just doing really basic tests right now.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14422549,14422549,
cozz,2013-03-05T04:16:47Z,"@gmaxwell ah Im sorry with the priority thing, now I know what you mean, youre right, showing this in an extra column could be useful.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14422710,14422710,
gmaxwell,2013-03-05T04:22:23Z,"Yea, fee behavior is misleading, it fails to override it.\n\nReproduction:\nSelect 50 BTC input. Shows fee: 0.  Send 49.99999999 BTC.   Produces a transaction that pays 1e-8 in fees.\n\nor,\nSelect 50 BTC input. Shows fee: 0. Send 1e-8 BTC.  Prompts to charge for a 0.0005 fee. abort.\n\nor,\nSelect 50 BTC input. Shows fee: 0.  Send 49.99999999 and second output of 1e-8.  Insufficient funds.\n\nThe",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14422816,14422816,
cozz,2013-03-05T20:23:27Z,"![screenshot8](https://f.cloud.github.com/assets/2814559/224452/557b10f8-85d5-11e2-9934-a3e147e63a30.png)\n\njust want to say, that Im working on this, update in 2 or 3 days. gmaxwell made some good points.\nAdded screenshot, what do you think?\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14462951,14462951,
rebroad,2013-03-06T06:53:07Z,Looking good @cozz - I notice @jgarzik commented on the bitcointalk thread about RPC functionality - but I wasn't quite sure of the relevance - is he implying some duplication of effort as a result of this pull?\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14485414,14485414,
cozz,2013-03-06T11:47:12Z,"@rebroad - @jgarzik does not want to patch Bitcoin-Qt but instead provide this functionality through another external app. You could realize this through the lockunspent methods. \n(except the extremely important feature that all selected should go into the transaction for sure, you have to patch bitcoin source for this, otherwise selected only maybe included in the transaction)\nBut I am not inte",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14495285,14495285,
tobypinder,2013-03-14T22:37:51Z,Just want to chime in that this functionality is very cool and also very powerful. I hope this can get sufficiently tested and included (even some reduced subset if necessary).\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14933788,14933788,
rebroad,2013-03-15T15:14:48Z,@cozz I'd like to install this Perhaps you could include instructions for the novice github users for downloading it..? (including me!)\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-14966206,14966206,
Nothing4You,2013-03-16T18:42:17Z,Could you rebase this so it can be tested with current master?\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-15009975,15009975,
BitcoinPullTester,2013-03-17T03:39:46Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b0dc2ad87f2b816dfd2cee1ff5c94c1024c56e8e for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-15016740,15016740,
cozz,2013-03-17T03:44:04Z,"UPDATE:\n\n![screen_shot5](https://f.cloud.github.com/assets/2814559/267707/5d4c5480-8eb4-11e2-8003-5aec5404477f.png)\n![screen_shot6](https://f.cloud.github.com/assets/2814559/267709/91555b14-8eb4-11e2-973a-45d4a630ca6a.png)\n\ncode-cleanup and rebase\n- address-label is now shown, if you enter a change address; also warning if change address is not in wallet or invalid address\n- you can now loc",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-15016784,15016784,
BitcoinPullTester,2013-03-17T04:25:03Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bc86b7377a4469d97d98765e6c5e8f9d9a07b3a3 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-15017240,15017240,
pera,2013-03-17T09:07:41Z,"Sorry for interrupting this pull request but imo those are almost essential features that should be included in the official client, please merge :>\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-15019576,15019576,
cozz,2013-03-17T10:10:47Z, @rebroad I have published binarys also: https://bitcointalk.org/index.php?topic=144331\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-15020219,15020219,
BitcoinPullTester,2013-03-18T13:14:32Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/28403fb61e6bec7c7a207f01c23935fa3b6efaa9 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-15053826,15053826,
cozz,2013-03-18T13:30:10Z,UPDATE: rebase\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-15054517,15054517,
laanwj,2013-03-18T13:41:41Z,"I'm not opposed to merging this (for 0.9). Code changes look sane in\ngeneral, and as it is disabled by default casual users won't be\noverwhelmed. More advanced users get some control over change, priority,\nfee etc which is good.\nOf course it all needs to be well tested, and conflicts with other coming\nfeatures such as multi-wallet support should be checked.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-15055105,15055105,
Nothing4You,2013-03-19T21:52:20Z,"Could you make the values selectable (so it's possible to copy them)?\n\nAlso, this need a rebase (again :( )\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-15145690,15145690,
rebroad,2013-03-21T13:02:01Z,"I've been testing this, and I seem to be having some crashes with wallet.db being unable to be read. So far it's not happened on the build that didn't have this coincontrol merged. Will explore further...\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-15236268,15236268,
laanwj,2013-04-01T14:53:47Z,@rebroad: sounds like a very serious problem; did you manage to get more information from the crashes?\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-15718515,15718515,
cozz,2013-04-02T10:50:03Z,@Nothing4You You you dont need to select you can direct right click and copy to clipboard\n\n@rebroad if you cant reproduce the error I cant help you here.\n\nFrom my standpoint its not possible to create a corrupt wallet with the coin control patch.\nI guess the changes are less critical than some people think. The only critical code is in wallet.cpp\nthats 2 if-statements and some get-set method,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-15768408,15768408,
luke-jr,2013-04-03T04:01:41Z,"Does this correctly calculate fee/kB in the case of unconfirmed (change) inputs? More specifically, does it include the size of unconfirmed ""parent"" transactions in the calculation? If not, should it?\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-15816612,15816612,
sipa,2013-04-05T23:27:20Z,"The changes to core look very sane (I haven't looked at the Qt code), but one thing I'm unconfortable with: coin control settings effectively become per-wallet state. That means that when using coin control from within Qt, it will also affect transactions created via RPC (which doesn't have the same feature at all). Ideally, I'd say the coin control capabilities are abstracted into a separate clas",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-15986182,15986182,
laanwj,2013-04-06T18:03:50Z,"Agreed @sipa, it should not be state but an extra input to the sendtransactions\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-16000873,16000873,
luke-jr,2013-04-16T19:15:48Z,"Bug: Clicking on any part of the list other than the checkbox column (eg, clicking on an item's Confirmation count) sets the focus to that column, and the space-bar cannot be used to check/uncheck the checkbox.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-16465721,16465721,
luke-jr,2013-04-19T22:08:29Z,"Why is change grouped in with other addresses? Seems to me as change is only every used as an input once, it should never be grouped...\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-16692473,16692473,
eldentyrell,2013-04-20T19:00:07Z,"> Seems to me as change is only every used as an input once, it should never be groupedâ€¦\n\nI think the grouping is by output, no?  A change address appears grouped with the wallet address which was used as an input to the transaction which has the change address as an output.\n\nOf course, this isn't the only way in which a change-address and non-change-address might be ""related"" in the blockchai",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-16709367,16709367,
luke-jr,2013-04-20T20:25:13Z,I don't see how a relationship is inferred to an output (that it is change is not represented in the transaction itself).\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-16710725,16710725,
leijurv,2013-04-20T22:11:54Z,"Just chiming in, this all sounds like a great idea.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-16712270,16712270,
sipa,2013-04-20T22:14:31Z,"@luke-jr Without special measures to try to make the change look like a regular output (try to mimic precision/patterns in amount values, for example), I think it's safer to assume that change can be inferred.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-16712295,16712295,
eldentyrell,2013-04-21T04:16:09Z,"> that it is change is not represented in the transaction itself\n\n@luke-jr, do you mean:\n1. In the blockchain?  Of course not.\n2. In a client's local transaction records?  The client can make note of the purpose for which a private key was created (to receive change or not) at the time of its creation.\n3. In the bitcoin-qt client implementation in particular?  See wallet.cpp, bool CWallet::Is",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-16715772,16715772,
luke-jr,2013-05-06T20:22:01Z,"Thought: it would be nice if the coin control had a way to run the coin auto-selector, and display the choices in the coin control screen for any changes/review.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-17505574,17505574,
ahdinosaur,2013-05-27T02:58:04Z,can this please be implemented in RPC too? <3\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-18480273,18480273,
sipa,2013-05-30T03:31:03Z,@ahdinosaur You can do coin control using the raw transaction api in RPC.\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-18659631,18659631,
laanwj,2013-05-30T06:44:29Z,"We'd like to merge this ASAP, but it really needs @sipa's comment fixed (no per-wallet state, use CTxDestination) before it can be merged.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-18664208,18664208,
sipa,2013-05-31T02:46:10Z,I have rebased this branch here: https://github.com/sipa/bitcoin/commits/coincontrol\n\nIt misses:\n- Updates to the new dust logic\n- The coincontrol settings class I suggested instead of wallet state\n- CTxDestination instead of CBitcoinAddress\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-18720595,18720595,
cozz,2013-05-31T10:36:12Z,"I only did not submit any more updates, because I thought you guys require a testing plan for merging.\nAnyway I will look at this and push either an update or the current state after the weekend.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-18737682,18737682,
cozz,2013-06-03T18:57:40Z,"update:\n- new class CCoinControl in wallet.h\n  class has\n  - CTxDestination for change\n  - Coin Control Methods\n  - Lock Unspent Methods\n     I have merged lockunspent - methods into this class, because otherwise \n     we would have again same state for gui and rpc for lockunsppent.\n    There are 2 instances of this class created, 1 in walletmodel for gui\n    and 1 in wallet for rpc. I ha",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-18862897,18862897,
sipa,2013-06-03T19:30:36Z,"Maybe my comment wasn't clear, but this isn't what I meant at all. You've now moved the coin control logic to a separate class, but it's still kept as state in CWallet (and in addition, it holds a backreference to the wallet it is part of...).\n\nThe idea was to have something like CCoinControl, but just use it as a optional argument passed to CreateTransactions & co, not to store it in the wallet",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-18865005,18865005,
cozz,2013-06-03T20:01:49Z,"thx for quick response.\n\nok, I kinda see. I will give this another shot.\nAre you fine with merging the lockunspent into the class?\nShould I create a new file src/coincontrol.h for the class?\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-18866958,18866958,
sipa,2013-06-03T20:03:52Z,"Yes, I think the lockunspent stuff much more belongs in CCoinControl than in CWallet - I disliked it being there in the first place. But then that means that the RPC module gets its own CCoinControl instance, to maintain the lockunspent data.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-18867086,18867086,
jgarzik,2013-06-04T13:29:53Z,"Although I do agree w/ @sipa RE lockunspent data, it was an open question at the time whether it should be stored in the wallet or not.  Some people requested a second iteration of lockunspent store the lock list in stable storage, thereby solving an issue with the current implementation: one must reload the lock list the first time the wallet is used, post-bitcoind-restart.  That is a window for ",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-18908805,18908805,
cozz,2013-06-05T14:44:16Z,"update:\n- I have not merged lockunspent into coincontrol now, to not complicate things\n- class CCoinControl is now in src/coincontrol.h and independent from wallet\n  - the class is optional parameter to createTransaction,AvailableCoins,SelectCoins,sendCoins\n  - class is only passed in GUI coincontrol case\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-18981046,18981046,
wtogami,2013-06-06T20:28:06Z,"Yes, jgarzik agreed, put these into other pull requests unless they are directly related to Coin Control.\n\nBTW, it seems that some incarnation of #2651 will likely happen.  Your patches have incompatibilities.  Would you consider rebasing on current master and checking if things remain compatible with #2651?\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19071850,19071850,
wtogami,2013-06-06T22:20:03Z,"I rebased your Coin Control on top of master and #2651 ""display txfee in first sendCoinsDialog message box"".  When used in combination, ""display txfee in first sendCoinsDialog message box"" selects from available coins which do not include the inputs chosen by the user using Coin Control.  Work would be necessary to allow the two patches to work together.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19078156,19078156,
jonasschnelli,2013-06-07T07:32:25Z,"@wtogami is right. If the pull get's ACKed and merged, pull #2651 needs overhaul and some merge effort.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19092973,19092973,
wtogami,2013-06-07T10:41:23Z,"@jonasschnelli It seems #2651 is closer to acceptance than #2343 Coin Control, so Coin Control should rebase on master with #2651 as a dependency.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19100038,19100038,
sipa,2013-06-09T07:08:07Z,"The changes look good overall to me (though I haven't checked the GUI code or whether the creation logic matches the current filtering policies), apart from two nits I left inline. I think it's likely #2154 gets merged before this, so you may need some rebasing, but I don't think it'll be particularly hard (#2154 is just code movement and dependency changes). No need to rebase right now, though.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19161931,19161931,
cozz,2013-06-10T21:39:38Z,update: sipa changes\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19228329,19228329,
wtogami,2013-06-11T15:19:44Z,"Is anyone else seeing this layout problem?  I've seen it with at least the past two versions of Coin Control, including the current master plus the latest commit.  Fedora native and gitian linux builds are equally affected.\n![cc-layout-problem](https://f.cloud.github.com/assets/93665/637707/4fbfb462-d2aa-11e2-85d1-cb6da55918c5.png)\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19268576,19268576,
cozz,2013-06-11T17:27:22Z,"update: solve layout issue. I had used fixed heights at some point, which was no good.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19277762,19277762,
wtogami,2013-06-12T07:19:49Z,"Hi cozz, did you see my email? My team would like to make a donation to you\nfor this work.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19310204,19310204,
cozz,2013-06-12T15:31:48Z,"update: Diapolo changes\n\nI am using labels now, instead of index numbers.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19333802,19333802,
wtogami,2013-06-13T02:09:47Z,**Space Bar Bug**\nIt seems spacebar often fails to check/uncheck.  Not sure what causes the instances where it does not work.  Clicking and moving around a bit sometimes restores the spacebar ability.\n\n**Isolated Cause**\nClicking on the column titles like Priority to sort causes the spacebar to fail to check/uncheck.\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19368034,19368034,
wtogami,2013-06-13T02:31:23Z,"**Move OK button to bottom right**\nCould you also please move the OK button on the input selection dialog to the bottom right?  That seems to be where other dialogs have their button when the user wants to ""continue"".\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19368705,19368705,
wtogami,2013-06-13T02:32:31Z,"**s/Minus Fee/After Fee/**\nWould you consider renaming the ""Minus Fee"" label?  It is currently a bit confusing.  Perhaps ""After Fee"" would be more understandable?\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19368841,19368841,
wtogami,2013-06-13T03:49:38Z,"**Possible bug with priority calculation.**  I have sent a few Coin Control transactions to combine tiny p2pool dust.  On the 5th attempt, the input selection dialog has dust listed as ""low-medium"".  I sort by Priority and manually select the 67 lowest of the low-medium inputs, keeping the tx size below 10KB.  Priority: at the top says ""medium"" and Fee: is zero.  This should not be possible right?",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19370633,19370633,
wtogami,2013-06-13T03:51:36Z,"**Possible bug with byte size calculation** The ""Bytes:"" of a 67 input transaction in Coin Control is 9994, but after confirmation, ABE block explorer shows those tx's with byte sizes like 9955 or 9962. \n\n**Update** I might have figured out the cause.  The byte calculation is assuming non-compressed key when in fact it is compressed?  Not sure if there's an easy way to fix your calculator to be ",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19370676,19370676,
wtogami,2013-06-13T11:49:57Z,**Escape button bug**\nThis may be related to the spacebar bug above.  Often the Escape button fails to dismiss the CC input selection dialog.\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-19386785,19386785,
wtogami,2013-07-01T09:07:06Z,"**More regarding byte size calculation**\nI now realized, is the discrepency really about leaving room for a possible change output?  What happens if there is a change output and the target address is uncompressed?  Will the actual tx size be in excess of the estimate in that case?\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-20270507,20270507,
cozz,2013-07-03T15:15:02Z,"update:\n- labels are now selectable, because people often ask ""how to copy to clipboard?""\n- fix spacebar/esc bug, I had to subclass the treewidget for this\n- s/Minus Fee/After Fee/\n- s/nBaseFee/nFee/\n- remove (nAmount - nPayFee) parenthesis\n- added a ""~"" before bytes and say ""Can vary +/- 1 Byte per input"" in tooltip, this is because ecdsa signature for a uncompressed public key is: with a 2",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-20422144,20422144,
wtogami,2013-07-03T16:20:40Z,@cozz Sounds great!  Could you please provide this new version rebased to 0.8.2 as well?\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-20427175,20427175,
cozz,2013-07-03T17:27:03Z,@wtogami  http://sourceforge.net/projects/bitcoincoincont/files/bitcoin-0.8.3-coincontrol.tar.gz/download\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-20431575,20431575,
wtogami,2013-07-04T00:46:40Z,"https://github.com/litecoin-project/litecoin-0.8/commits/awesomecoin-cc8\nWe are testing it in this side-branch.  I'm liking the improvements over the previous version!\nhttps://github.com/litecoin-project/litecoin-0.8/commit/874db0996bc34aacf9d848b83d9cdbfb148c433d\nNot Bitcoin's problem, but I am not sure if I got the 4x faster blocks priority threshold correct here.\n\nI am looking forward to t",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-20453629,20453629,
wtogami,2013-07-04T00:52:59Z,@cozz a tiny request.  Could you please push each new revision of Coin Control to a new branch on your github?  It is difficult to compare the changes to previous versions when the earlier versions are gone.\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-20453813,20453813,
luke-jr,2013-07-04T01:16:29Z,@wtogami It's not difficult at all. Pushing to the same branch is necessary to update the pull request.\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-20454477,20454477,
wtogami,2013-07-04T03:32:21Z,"@luke-jr I may be mistaken, but isn't what he is doing push --force, which wipes access to the previous revisions?\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-20457505,20457505,
luke-jr,2013-07-04T03:34:48Z,@wtogami Presumably. Don't you have a local copy?\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-20457553,20457553,
luke-jr,2013-08-11T02:53:29Z,"This has been stable for a while now, and I'm not aware of any unaddressed concerns. Time to merge?\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-22451445,22451445,
gmaxwell,2013-08-11T03:18:09Z,"ACK behavior, just tried it out some, and I'm very happy with how it behaves now.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-22451681,22451681,
sipa,2013-08-11T08:20:31Z,"ACK on the code changes to core. I didn't check the GUI code in detail, but it seems there's a lot of duplication of fee logic there.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-22454294,22454294,
cozz,2013-08-11T21:56:53Z,"Yes, there is some duplication of fee logic. The stuff hardcoded in CreateTransaction(..) in wallet.cpp \nis not so easy to get rid of. But we could change the GetMinFee(..) method in main.cpp, so that it takes a parameter nBytes, and then do not serialize the CTransaction in this method, but use this parameter nBytes as size. When we call GetMinFee(..), we serialize the transaction anyway, and ha",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-22466293,22466293,
luke-jr,2013-08-11T22:19:40Z,"That sounds like a good idea. But I would to it in a separate commit, not pull.\nSo it would be part of this pull request, but also clearly distinguishable from the coin control functionality in git.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-22466627,22466627,
cozz,2013-08-12T16:46:52Z,"update:\n- added second commit ""pass nBytes as parameter to GetMinFee(..)""\n- remove some duplicated fee logic and use GetMinFee(..) instead\n- sipa nits\n- change context menu order ""Copy address,..."" to match order from the Transactions tab\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-22507252,22507252,
gavinandresen,2013-08-12T23:44:16Z,"I'd still be much more comfortable ACK'ing this if there was a written-up QA test plan. I see a lot of ad-hoc testing (e.g. @wtogami testing priority calculations sweeping up dust) which is fine, but the purpose of thorough testing is to find edge cases that aren't tested because ""it works for what the developer uses it for.""\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-22534163,22534163,
wtogami,2013-09-11T20:46:44Z,@gavinandresen What sort of test plan?  Completely automated is necessary?\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-24274890,24274890,
wtogami,2013-09-11T20:48:26Z,@cozz Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-24275028,24275028,
gavinandresen,2013-09-11T22:20:48Z,"@wtogami : no, completely automated is NOT necessary.  The kind of test plan described here:\n  https://github.com/bitcoin/QA\n\ne.g. https://github.com/gavinandresen/QA/blob/master/PaymentRequestTest.md\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-24281264,24281264,
cozz,2013-09-24T18:40:51Z,"update:\n- rebase/fix merge conflicts\n- replace hardcoded 57600000 with AllowFree(..)\n- minor fee bug: occured for sub-cent change and unusual fee setting, 0 < fee < 10000\n- minor gui: hide change label when checkbox unchecked\n\nTestplan:\nhttps://github.com/cozz/bitcoin/blob/cozz1/cctestplan.md\n\n@gavinandresen What do you think about the testplan?\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-25031273,25031273,
gavinandresen,2013-09-25T07:22:33Z,Excellent test plan!  The only section missing is interaction with JSON-RPC -- e.g. could things break in weird ways if a JSON-RPC send is done while the input selection dialog is up?\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-25066480,25066480,
cozz,2013-09-25T17:39:36Z,"Not break, but the rpc scenario to consider is:\nCoin control thinks the selected output is spendable, while actually the output is spent.\nThis can happen if you spent an output with rpc while working around in the sendcoinsdialog.\nSo you select an output with coin control, then spend it with rpc.\nThe selected spent output is then stucked in the coin control selection, because it is selected, b",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-25108354,25108354,
petertodd,2013-09-25T19:15:55Z,"@cozz That kind of thing can probably even happen in the regular wallet with co-current RPC operations, so yeah, if you could think it through carefully and come up with a good solution and user experience that'd be quite valuable. Just make sure the error message you got is reasonable friendly - ""TRANSACTION CREATION FAILED!!!!!"" isn't, but something along the lines of ""Sorry, looks like some coi",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-25116179,25116179,
cozz,2013-09-30T23:33:40Z,"update:\n- selected but spent outputs are now automatically removed from the coincontrol-selection on label update (which is also triggered just by opening the dialog)\n\nThis is now a simple solution to the problem described above, solved with one if-statement.\n\ntest-plan update:\n- added 12. Double Spend (the weird ""Amount Exceeds Balance"" I was talking above is also part of this)\n- added loc",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-25415418,25415418,
mumblerit,2013-10-01T21:23:31Z,@cozz Great work!  Could you please post a new backport to 0.8.5?  You have many testers there that would help to validate the recent changes.\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-25491339,25491339,
cozz,2013-10-05T20:55:33Z,@mumblerit http://sourceforge.net/projects/bitcoincoincont/files/bitcoin-0.8.5-coincontrol.tar.gz/download\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-25756894,25756894,
wtogami,2013-10-14T07:57:32Z,Any remaining concerns blocking this merge?\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-26240566,26240566,
HostFat,2013-10-20T20:17:15Z,"https://bitcointalk.org/index.php?topic=144331.msg3375525#msg3375525\n\n""Transaction times shown on CC window are not equal to times shown on Transactions tab. They are -2 hours off in my case (GMT +1 zone).""\n\nI'm not sure if it's already fixed, I'm just reporting it ...\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-26681569,26681569,
gavinandresen,2013-10-21T01:29:10Z,"How is the test-plan testing going, or how did it go?  Has anybody run through the entire test plan on both Windows and Linux and yet?  (ideally, it would be tested on OSX also).\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-26688367,26688367,
cozz,2013-10-23T13:39:52Z,"update:\n- fix transaction times bug reported by @HostFat \n- because of #3008 \n  - change labels from 10000 to 1000 bytes\n    (I did not have to change fee-logic, only tooltip label and label turn red threshold)\n  - testplan: change from 10000 to 1000 bytes\n- because of #2945 \n  - ignore bytes from the inputs for priority calculation\n  - adjusted getPriorityLabel(..) thresholds (because pri",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-26905257,26905257,
mumblerit,2013-10-23T16:55:23Z,Can we have this backported to bitcoin-0.8.5 please?\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-26922513,26922513,
laanwj,2013-10-24T06:49:15Z,Apart from some minor nits the code looks good enough for merging now.\nHow is the testing coming along?\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-26970088,26970088,
Diapolo,2013-10-24T07:32:52Z,"How does this interact with payment requests, when they show up in sendcoinsdialog?\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-26971797,26971797,
Diapolo,2013-10-24T07:38:58Z,Do all labels in your GUI honor changed display units?\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-26972122,26972122,
cozz,2013-10-25T13:36:39Z,"update:\n- code nits\n  - introduced GUIUtil::setClipboard\n  - calling getBalance(coinControl) now in walletmodel.cpp\n  - replaced ""WARNING"" with ""Warning""\n  - added notr=""true"" to ui non translatable strings\n- added ""coinControlUpdateLabels();"" at the end of SendCoinsDialog::pasteEntry(..).\n  This is because payment-request did not trigger label refresh.\n- reverted some changes from the las",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-27092736,27092736,
BitcoinPullTester,2013-10-25T14:46:03Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/51a2d9cfabf4264a8833da708d19eac4a1f83d87 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-27098135,27098135,
luke-jr,2013-10-29T02:04:34Z,"ACK, whether the code is perfect yet or not, it works and isn't hacky or crazy.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-27273316,27273316,
wtogami,2013-10-29T19:56:34Z,ACK after rebase.\n\nPlease just merge.  Litcoin has found no show-stopping bugs in the past few months of testing while this patch has continued to receive polish and tiny fixes.\n\nhttps://github.com/litecoin-project/litecoin/pull/77#issuecomment-27046107\nLitecoin's Coin Control had this simple debug patch to help verify the priority threshold where the fee is allowed to be zero.\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-27337571,27337571,
gmaxwell,2013-10-29T20:03:41Z,"@wtogami  ""Please just merge"" is not helpful.  ""Mr. Foo. Went through the test plan and completed all the tests successfully"" is.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-27338178,27338178,
luke-jr,2013-11-08T10:11:49Z,"Coin Control tells me 3 inputs and 1 output uses 618 bytes, but this doesn't seem to be the case?\nhttps://blockchain.info/tx/939a4e1b3264eee96a86e56fc1f07b2d52ae6240896d8b196e6af1cf9967ee06\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-28052736,28052736,
cozz,2013-11-08T23:20:34Z,"618 = 3 \* 180 + 2 \* 34 + 10\nThis would be 3 inputs from uncompressed keys and 2 outputs.\n\n590 = 3 \* 148 + 4 \* 34 + 10\nThis would be 3 inputs from compressed keys and 4 outputs.\n\nCalculation depends on how many inputs/outputs and also if inputs are from compressed or uncompressed ecdsa public key. If it is unknown how many outputs, I assume 2 outputs.\n\n@luke-jr Is this a question in gen",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-28106326,28106326,
laanwj,2013-11-14T11:28:00Z,Rebasing this now...\n\nSee #3253 \n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-28476817,28476817,
cozz,2013-11-14T17:49:39Z,Closing this then. We dont need to have two coin control pull reqs open.\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-28506052,28506052,
tmagik,2014-01-19T18:59:33Z,How do I find the original code that _did_ have a 'Back to inputs' option? It's not obvious where that code went.\n,https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-32716420,32716420,
cozz,2014-01-25T04:29:34Z,"@tmagik its gone, sorry. checked my hard drive, did not find it.\n",https://github.com/bitcoin/bitcoin/pull/2343#issuecomment-33280923,33280923,
sipa,2013-04-05T23:19:45Z,I'd like to keep the string representation of addresses out of CWallet as much as possible. Can you turn this into a CTxDestination?\n,https://github.com/bitcoin/bitcoin/pull/2343#discussion_r3682130,3682130,src/wallet.h
sipa,2013-06-09T07:02:20Z,Converting to a CBitcoinAddress shouldn't be necessary.\n,https://github.com/bitcoin/bitcoin/pull/2343#discussion_r4603547,4603547,src/wallet.cpp
sipa,2013-06-09T07:04:22Z,"You can just use vOutpoints.assign(setSelected.begin(), setSelected.end());, I think.\n",https://github.com/bitcoin/bitcoin/pull/2343#discussion_r4603550,4603550,src/coincontrol.h
laanwj,2013-06-09T07:18:41Z,What is this?\n,https://github.com/bitcoin/bitcoin/pull/2343#discussion_r4603563,4603563,src/json/json_spirit_writer_template.h
sipa,2013-06-09T07:19:58Z,"Assuming it's a ""we don't use this"", it has no place in this PR.\n",https://github.com/bitcoin/bitcoin/pull/2343#discussion_r4603565,4603565,src/json/json_spirit_writer_template.h
wtogami,2013-06-09T07:20:35Z,"Yes, I previously asked him to remove the two unrelated commits from this PR.\n",https://github.com/bitcoin/bitcoin/pull/2343#discussion_r4603567,4603567,src/json/json_spirit_writer_template.h
wtogami,2013-06-09T07:21:18Z,This is the other commit that doesn't belong in this PR.\n,https://github.com/bitcoin/bitcoin/pull/2343#discussion_r4603570,4603570,src/main.cpp
sipa,2013-06-09T07:23:27Z,"It is correct, however... but yes, we can fix that separately.\n",https://github.com/bitcoin/bitcoin/pull/2343#discussion_r4603574,4603574,src/main.cpp
sipa,2013-06-09T07:42:40Z,"No need to convert to a CBitcoinAddress. Use CKeyID *pkeyid = boost::get< CKeyID >(&address), which results in NULL or a pointer to a valid CKeyID.\n",https://github.com/bitcoin/bitcoin/pull/2343#discussion_r4603587,4603587,src/qt/coincontroldialog.cpp
Diapolo,2013-06-12T12:01:02Z,"I don't really like such in-code-formatting, consider this a nit, as long as @laanwj has no problem with it :).\n",https://github.com/bitcoin/bitcoin/pull/2343#discussion_r4654716,4654716,src/qt/sendcoinsdialog.cpp
Diapolo,2013-06-12T12:03:45Z,"Is this a good way to do what you want? My quick looking at this doesn't reveal, what you are doing with this clause ^^.\nPerhaps we can use some symbolic-name instead of an index number?\n",https://github.com/bitcoin/bitcoin/pull/2343#discussion_r4654735,4654735,src/qt/coincontroldialog.cpp
Diapolo,2013-06-12T12:07:20Z,After some months or when other people want to contribute here it's not easy to see what colums are meant by 9 or 4 etc...\n,https://github.com/bitcoin/bitcoin/pull/2343#discussion_r4654769,4654769,src/qt/coincontroldialog.cpp
Diapolo,2013-06-12T12:08:38Z,highest?\n,https://github.com/bitcoin/bitcoin/pull/2343#discussion_r4654784,4654784,src/qt/coincontroldialog.cpp
Diapolo,2013-06-12T12:08:46Z,lowest?\n,https://github.com/bitcoin/bitcoin/pull/2343#discussion_r4654785,4654785,src/qt/coincontroldialog.cpp
sipa,2013-08-11T08:15:43Z,Nit: pass hash by reference.\n,https://github.com/bitcoin/bitcoin/pull/2343#discussion_r5699605,5699605,src/coincontrol.h
sipa,2013-08-11T08:16:25Z,Coding style nit: no spaces around CNoDestination.\n,https://github.com/bitcoin/bitcoin/pull/2343#discussion_r5699606,5699606,src/wallet.cpp
laanwj,2013-10-24T06:40:44Z,"For compatibility with the middle-click clipboard in Unix/Linux, it's better to do:\n\n```\nQApplication::clipboard()->setText(..., QClipboard::Clipboard)\nQApplication::clipboard()->setText(..., QClipboard::Selection)\n```\n\nTo prevent blowing up this code it might be better to add a function to GUIUtil to do both in one go.\n",https://github.com/bitcoin/bitcoin/pull/2343#discussion_r7180490,7180490,src/qt/coincontroldialog.cpp
laanwj,2013-10-24T06:48:01Z,"Would be cleaner to add an optional coinControl argument to WalletModel::getBalance(), instead of putting this code here verbatiim.\n",https://github.com/bitcoin/bitcoin/pull/2343#discussion_r7180578,7180578,src/qt/walletmodel.cpp
Diapolo,2013-10-24T07:33:52Z,Nit: Can you use just `Warning`?\n,https://github.com/bitcoin/bitcoin/pull/2343#discussion_r7181140,7181140,src/qt/sendcoinsdialog.cpp
Diapolo,2013-10-24T07:34:24Z,Same here `Warning: Unknown...` and start uppercase after `Warning:`.\n,https://github.com/bitcoin/bitcoin/pull/2343#discussion_r7181150,7181150,src/qt/sendcoinsdialog.cpp
Diapolo,2013-10-24T07:37:22Z,"All these `<string>`s  will show up in translations, can you remove such defaults for the final pre-merge rebase or make them untranslatable.\n",https://github.com/bitcoin/bitcoin/pull/2343#discussion_r7181177,7181177,src/qt/forms/coincontroldialog.ui
