vasild,2021-08-17 14:16:58,cc @hebasto ,https://github.com/bitcoin/bitcoin/pull/22729#issuecomment-900338335,900338335,
jonatack,2021-08-17 17:06:54,"- The test changes seems sporadic (and often pass on master for me locally)\n- Would 15970699828fa404a0c7c17bda4640eb712872a7 disable our inbound onion detection? (`CNode::m_inbound_onion` in `net.h`)",https://github.com/bitcoin/bitcoin/pull/22729#issuecomment-900477859,900477859,
vasild,2021-08-17 17:47:24,"> Would 1597069 disable our inbound onion detection? (`CNode::m_inbound_onion` in `net.h`)\n\n* If both `-bind=...` and `-bind=...=onion` are given -- no\n* If none of `-bind=...` or `-bind=...=onion` are given -- no\n* If only `-bind=...` is given, without `-bind=...=onion` -- yes\n* If only `-bind=...=onion` is given, without `-bind=...` -- no",https://github.com/bitcoin/bitcoin/pull/22729#issuecomment-900506737,900506737,
fanquake,2021-08-18 01:05:04,"CI failure https://cirrus-ci.com/task/5600680695037952:\n```bash\n89/217 - feature_bind_extra.py failed, Duration: 31 s\nstdout:\n2021-08-17T14:41:23.064000Z TestFramework (INFO): Initializing test directory /tmp/cirrus-ci-build/ci/scratch/test_runner/test_runner_‚Çø_üèÉ_20210817_143957/feature_bind_extra_170\n2021-08-17T14:41:23.064000Z TestFramework (INFO): Checking for Linux\n2021-08-17T14:41",https://github.com/bitcoin/bitcoin/pull/22729#issuecomment-900735544,900735544,
Rspigler,2021-08-18 02:10:04,"https://github.com/bitcoin/bitcoin/pull/20234 For reference for related changes.\n\nI might propose some Tor doc clarifications in a separate PR. There has been a lot of confusion around `onlynet`, and users thinking that that affects outgoing and incoming connections.",https://github.com/bitcoin/bitcoin/pull/22729#issuecomment-900757562,900757562,
laanwj,2021-09-15 09:34:06,"Concept ACK (will review in more detail). It would be better if any error in binding configuration stopped the process, not just onion-related ones, as it can lead to surprising outcomes. But historically there were some issues with libevent in getting this right see #14968.",https://github.com/bitcoin/bitcoin/pull/22729#issuecomment-919859422,919859422,
vasild,2021-09-16 12:31:51,"`f89f80ef2d...57e0c5d32e`: rebase and stop startup if any<sup>*</sup> of the P2P binds fail, instead of all.\n\n<sup>*</sup>except the bind on IPv6 any address `::` when the user did not explicitly ask for it because the machine may not have IPv6 support.\n\n> It would be better if any error in binding configuration stopped the process, not just onion-related ones, as it can lead to surprising",https://github.com/bitcoin/bitcoin/pull/22729#issuecomment-920859923,920859923,
vasild,2021-09-16 13:06:02,"The first commit ceeb317cde `net: don't extra bind for Tor if binds are restricted` was part of https://github.com/bitcoin/bitcoin/pull/20234 but was removed so that PR could proceed quickly (it was deemed controversial).\n\nAfter https://github.com/bitcoin/bitcoin/issues/22727#issuecomment-919401356 I am even more convinced that this is the right approach as it reduces user surprises (and those",https://github.com/bitcoin/bitcoin/pull/22729#issuecomment-920883602,920883602,
laanwj,2021-09-27 11:58:59,"> For example our functional testing framework starts >1 bitcoind and all of them collide on 127.0.0.1:8334 but the bind errors are ignored eyes\n\nThere is no reason for the test framework to be creating Tor binds at all. It's kind of surprising to me that it does by default but I understand why.\n\nI think the long term solution would be to only create the Tor bind when either requested thro",https://github.com/bitcoin/bitcoin/pull/22729#issuecomment-927802257,927802257,
laanwj,2021-09-15 09:40:35,"I dislike making this logic more and more complex, special-casing for onion binds. I'd prefer something more general instead that will solve this and surrounding issues.",https://github.com/bitcoin/bitcoin/pull/22729#discussion_r709019666,709019666,src/net.cpp
laanwj,2021-09-15 09:41:38,"Please move the `fBound |= bound_onion;` out of the loop. No point in doing it every iteration, and it (imo) makes it sightly easier to reason about.",https://github.com/bitcoin/bitcoin/pull/22729#discussion_r709020480,709020480,src/net.cpp
vasild,2021-09-16 12:32:50,Not relevant with the latest push.,https://github.com/bitcoin/bitcoin/pull/22729#discussion_r710072344,710072344,src/net.cpp
vasild,2021-09-16 12:33:39,Changed the code to consider bind failures fatal.,https://github.com/bitcoin/bitcoin/pull/22729#discussion_r710072932,710072932,src/net.cpp
