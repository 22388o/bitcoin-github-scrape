[
  {
    "sha": "530bc278b9fab19560f7de51814ded13759e5bd4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzBiYzI3OGI5ZmFiMTk1NjBmN2RlNTE4MTRkZWQxMzc1OWU1YmQ0",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-06-19T19:49:18Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-06-20T11:18:19Z"
      },
      "message": "build: Avoid fcntl64@GLIBC_2.28 symbol when --enable-glibc-back-compat",
      "tree": {
        "sha": "5568a423b3917210d7e8626ce400fc1f58a6fb0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5568a423b3917210d7e8626ce400fc1f58a6fb0b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/530bc278b9fab19560f7de51814ded13759e5bd4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmDPI/sACgkQQQEIES5+\nqB9bvRAAnKlkuCWrm6UDb9mek1/VXzn6xY9sESHfvys7P2FBAvsls+pCPxXSBh5M\n0CYf0D/RpR/Xp550y2TmRWJYIHnnKM7Xd60E/jXlT3w9fOvBZFXwzTjlXta+TrkY\nkHH1vE+JFmK+zu7p3m8nqfUcQLSe6MCRbhHRruemiPN3w1lV8XZLqpxq/ljz+Z4F\nWy9jWtV4S50mRLsex2i7xgho1/gurqutd+tMLo/q3HVcueNp9If6ryXTqnqE1HyQ\nKvYDzuJERkPcAhgxFhYG7KeXO8eRnVuHumOWmYQV3KZ3Yte31uHF1J55HFR219hX\nHc9YMIxP77TvZmZO5W2nqDeDlHAdWeMXwcvOJXtYd2xIxE3mYMoVnltWga3oTzZm\nLB4Cl+7JgaPE7av5erQeyYHi6az+BetgQ8HcP/cZSXkhSZTM9UrmQKbLi2yb/J16\nixpljxOUYl42F/ZLbbrGZy7WHkOyJFyiQdl2+R6WvfZCFRzQgBCTI6Bfi+XFN175\n3x2u1bS2ohi8Nvb10k6KX19Q1420EAZv8QtC7jqs0xp4QMSIsZwAuwsGDJbKUm0V\nKl08CqL8YOLqxiuRfTG8HIIMin7EwE2/qilRGgX3Eq5sr9RjuJKgiC9l6EU49Sy2\ndoyml0Rlb6MNpq0pAyeDcUtj/FAIdxIXdS2bZSbo18zuibJ3m9k=\n=hVEa\n-----END PGP SIGNATURE-----",
        "payload": "tree 5568a423b3917210d7e8626ce400fc1f58a6fb0b\nparent 965e93743454112c0c3c66bf24852f63ee07b862\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1624132158 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1624187899 +0300\n\nbuild: Avoid fcntl64@GLIBC_2.28 symbol when --enable-glibc-back-compat\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/530bc278b9fab19560f7de51814ded13759e5bd4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/530bc278b9fab19560f7de51814ded13759e5bd4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/530bc278b9fab19560f7de51814ded13759e5bd4/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "965e93743454112c0c3c66bf24852f63ee07b862",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/965e93743454112c0c3c66bf24852f63ee07b862",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/965e93743454112c0c3c66bf24852f63ee07b862"
      }
    ],
    "stats": {
      "total": 124,
      "additions": 123,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1326ec3f822ee44e9feab024a508cb6108d5557e",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/530bc278b9fab19560f7de51814ded13759e5bd4/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/530bc278b9fab19560f7de51814ded13759e5bd4/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=530bc278b9fab19560f7de51814ded13759e5bd4",
        "patch": "@@ -837,6 +837,7 @@ if test x$ac_cv_sys_large_files != x &&\n fi\n \n if test x$use_glibc_compat != xno; then\n+  AX_CHECK_LINK_FLAG([-Wl,--wrap=fcntl64], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=fcntl64\"])\n   AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4\"])\n   AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=log2f\"])\n   case $host in"
      },
      {
        "sha": "6e135fe181f7415bd486902a8a563a2efcd95d69",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/530bc278b9fab19560f7de51814ded13759e5bd4/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/530bc278b9fab19560f7de51814ded13759e5bd4/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=530bc278b9fab19560f7de51814ded13759e5bd4",
        "patch": "@@ -645,7 +645,6 @@ endif\n bitcoin_bin_ldadd = \\\n   $(LIBBITCOIN_WALLET) \\\n   $(LIBBITCOIN_COMMON) \\\n-  $(LIBBITCOIN_UTIL) \\\n   $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_ZMQ) \\\n   $(LIBBITCOIN_CONSENSUS) \\\n@@ -656,6 +655,7 @@ bitcoin_bin_ldadd = \\\n   $(LIBSECP256K1)\n \n bitcoin_bin_ldadd += $(BOOST_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(NATPMP_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS) $(SQLITE_LIBS)\n+bitcoin_bin_ldadd += $(LIBBITCOIN_UTIL)\n \n bitcoind_SOURCES = $(bitcoin_daemon_sources) init/bitcoind.cpp\n bitcoind_CPPFLAGS = $(bitcoin_bin_cppflags)"
      },
      {
        "sha": "7874936093978487cb6f27bf4938fc47a6ccbbe6",
        "filename": "src/compat/glibc_compat.cpp",
        "status": "modified",
        "additions": 120,
        "deletions": 0,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/530bc278b9fab19560f7de51814ded13759e5bd4/src/compat/glibc_compat.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/530bc278b9fab19560f7de51814ded13759e5bd4/src/compat/glibc_compat.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_compat.cpp?ref=530bc278b9fab19560f7de51814ded13759e5bd4",
        "patch": "@@ -9,6 +9,126 @@\n #include <cstddef>\n #include <cstdint>\n \n+// See https://stackoverflow.com/a/58472959\n+#if defined(__GLIBC__) && (__GLIBC__ == 2) && (__GLIBC_MINOR__ >= 28)\n+#include <cstdarg>\n+#include <cstdio>\n+#include <cstdlib>\n+#include <fcntl.h>\n+\n+#ifdef __i386__\n+__asm(\".symver fcntl64,fcntl@GLIBC_2.1\");\n+#elif defined(__amd64__)\n+__asm(\".symver fcntl64,fcntl@GLIBC_2.2.5\");\n+#elif defined(__arm__)\n+__asm(\".symver fcntl64,fcntl@GLIBC_2.4\");\n+#elif defined(__aarch64__)\n+__asm(\".symver fcntl64,fcntl@GLIBC_2.17\");\n+#elif defined(__powerpc64__)\n+#  ifdef WORDS_BIGENDIAN\n+__asm(\".symver fcntl64,fcntl@GLIBC_2.3\");\n+#  else\n+__asm(\".symver fcntl64,fcntl@GLIBC_2.17\");\n+#  endif\n+#elif defined(__riscv)\n+__asm(\".symver fcntl64,fcntl@GLIBC_2.27\");\n+#endif\n+extern \"C\" int __wrap_fcntl64(int fd, int cmd, ...)\n+{\n+    int result;\n+    va_list va;\n+    va_start(va, cmd);\n+\n+    switch (cmd) {\n+    //\n+    // File descriptor flags\n+    //\n+    case F_GETFD: goto takes_void;\n+    case F_SETFD: goto takes_int;\n+\n+    // File status flags\n+    //\n+    case F_GETFL: goto takes_void;\n+    case F_SETFL: goto takes_int;\n+\n+    // File byte range locking, not held across fork() or clone()\n+    //\n+    case F_SETLK: goto takes_flock_ptr;\n+    case F_SETLKW: goto takes_flock_ptr;\n+    case F_GETLK: goto takes_flock_ptr;\n+\n+    // File byte range locking, held across fork()/clone() -- Not POSIX\n+    //\n+    case F_OFD_SETLK: goto takes_flock_ptr;\n+    case F_OFD_SETLKW: goto takes_flock_ptr;\n+    case F_OFD_GETLK: goto takes_flock_ptr;\n+\n+    // Managing I/O availability signals\n+    //\n+    case F_GETOWN: goto takes_void;\n+    case F_SETOWN: goto takes_int;\n+    case F_GETOWN_EX: goto takes_f_owner_ex_ptr;\n+    case F_SETOWN_EX: goto takes_f_owner_ex_ptr;\n+    case F_GETSIG: goto takes_void;\n+    case F_SETSIG: goto takes_int;\n+\n+    // Notified when process tries to open or truncate file (Linux 2.4+)\n+    //\n+    case F_SETLEASE: goto takes_int;\n+    case F_GETLEASE: goto takes_void;\n+\n+    // File and directory change notification\n+    //\n+    case F_NOTIFY: goto takes_int;\n+\n+    // Changing pipe capacity (Linux 2.6.35+)\n+    //\n+    case F_SETPIPE_SZ: goto takes_int;\n+    case F_GETPIPE_SZ: goto takes_void;\n+\n+    // File sealing (Linux 3.17+)\n+    //\n+    case F_ADD_SEALS: goto takes_int;\n+    case F_GET_SEALS: goto takes_void;\n+\n+    // File read/write hints (Linux 4.13+)\n+    //\n+    case F_GET_RW_HINT: goto takes_uint64_t_ptr;\n+    case F_SET_RW_HINT: goto takes_uint64_t_ptr;\n+    case F_GET_FILE_RW_HINT: goto takes_uint64_t_ptr;\n+    case F_SET_FILE_RW_HINT: goto takes_uint64_t_ptr;\n+\n+    default:\n+        fprintf(stderr, \"fcntl64 workaround got unknown F_XXX constant: %d\\n\", cmd);\n+        exit(1);\n+    }\n+\n+takes_void:\n+    va_end(va);\n+    return fcntl64(fd, cmd);\n+\n+takes_int:\n+    result = fcntl64(fd, cmd, va_arg(va, int));\n+    va_end(va);\n+    return result;\n+\n+takes_flock_ptr:\n+    result = fcntl64(fd, cmd, va_arg(va, struct flock*));\n+    va_end(va);\n+    return result;\n+\n+takes_f_owner_ex_ptr:\n+    result = fcntl64(fd, cmd, va_arg(va, struct f_owner_ex*));\n+    va_end(va);\n+    return result;\n+\n+takes_uint64_t_ptr:\n+    result = fcntl64(fd, cmd, va_arg(va, uint64_t*));\n+    va_end(va);\n+    return result;\n+}\n+#endif\n+\n #if defined(__i386__) || defined(__arm__)\n \n extern \"C\" int64_t __udivmoddi4(uint64_t u, uint64_t v, uint64_t* rp);"
      },
      {
        "sha": "29acf531a8d8fe7f1cc4c31bad33bb8e393d9255",
        "filename": "test/lint/lint-locale-dependence.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/530bc278b9fab19560f7de51814ded13759e5bd4/test/lint/lint-locale-dependence.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/530bc278b9fab19560f7de51814ded13759e5bd4/test/lint/lint-locale-dependence.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-locale-dependence.sh?ref=530bc278b9fab19560f7de51814ded13759e5bd4",
        "patch": "@@ -40,6 +40,7 @@ export LC_ALL=C\n KNOWN_VIOLATIONS=(\n     \"src/bitcoin-tx.cpp.*stoul\"\n     \"src/bitcoin-tx.cpp.*trim_right\"\n+    \"src/compat/glibc_compat.cpp:.*fprintf\"\n     \"src/dbwrapper.cpp.*stoul\"\n     \"src/dbwrapper.cpp:.*vsnprintf\"\n     \"src/httprpc.cpp.*trim\""
      }
    ]
  }
]