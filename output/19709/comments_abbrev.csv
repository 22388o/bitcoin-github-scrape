practicalswift,2020-08-13 13:43:49,@hebasto What is the root cause of this issue? :),https://github.com/bitcoin/bitcoin/pull/19709#issuecomment-673487165,673487165,
hebasto,2020-08-13 13:59:22,"@practicalswift \n> @hebasto What is the root cause of this issue? :)\n\n~I don't know ((~ See https://github.com/bitcoin/bitcoin/pull/19709#issuecomment-673734727\n\n~I can just describe a pattern on which Boost Test suite and Clang's `llvm-cov` are incompatible: `BOOST_CHECK()` macro argument calls some function more then once.~",https://github.com/bitcoin/bitcoin/pull/19709#issuecomment-673495844,673495844,
laanwj,2020-08-13 17:14:46,"> @hebasto What is the root cause of this issue? :)\n\nThat's pretty important to figure out imo, we can't just randomly perturb the test code to make a tool happy.\n(also so that people maintaining the code in the future know what to take into account)",https://github.com/bitcoin/bitcoin/pull/19709#issuecomment-673601083,673601083,
fjahr,2020-08-13 20:26:34,"Agree we should know what is going on but since I have had this issue locally I have gone ahead and tested it. So, I am tACK this PR cherry-picked on top of #19688 modulo an explanation of why this failed previously. Thanks for fixing this!",https://github.com/bitcoin/bitcoin/pull/19709#issuecomment-673693496,673693496,
hebasto,2020-08-13 22:09:02,"@practicalswift @laanwj @fjahr \n> What is the root cause of this issue? :)\n\nThank you for forcing me to find the root of this issue!\n\n[`BOOST_TEST` - Limitations & workaround](https://www.boost.org/doc/libs/1_73_0/libs/test/doc/html/boost_test/testing_tools/boost_test_universal_macro.html#boost_test.testing_tools.boost_test_universal_macro.limitations_workaround):\n> ... compound statem",https://github.com/bitcoin/bitcoin/pull/19709#issuecomment-673734727,673734727,
Crypt-iQ,2020-08-14 03:45:33,"Tested, code review ACK 568d42b\nOn ubuntu, clang-10\n\nChanges are straightforward and they assert the same thing as they did before so should be fine.\n\ntest_bitcoin coverage: https://crypt-iq.github.io/pr19709/test_bitcoin.coverage/\ntotal coverage: https://crypt-iq.github.io/pr19709/total.coverage/",https://github.com/bitcoin/bitcoin/pull/19709#issuecomment-673867000,673867000,
hebasto,2020-08-14 09:26:07,"Updated 568d42bd7f47851def00b185c6f5f285b6f7f951 -> 35cd2da623e32b975fbc485c3605934e4aa8bdc5 ([pr19709.01](https://github.com/hebasto/bitcoin/commits/pr19709.01) -> [pr19709.02](https://github.com/hebasto/bitcoin/commits/pr19709.02), [diff](https://github.com/hebasto/bitcoin/compare/pr19709.01..pr19709.02)):\n\n- addressed @vasild's [comment](https://github.com/bitcoin/bitcoin/pull/19709#discuss",https://github.com/bitcoin/bitcoin/pull/19709#issuecomment-673983005,673983005,
vasild,2020-08-14 09:36:04,ACK 35cd2da,https://github.com/bitcoin/bitcoin/pull/19709#issuecomment-673987305,673987305,
Crypt-iQ,2020-08-14 12:02:26,ACK 35cd2da,https://github.com/bitcoin/bitcoin/pull/19709#issuecomment-674041144,674041144,
vasild,2020-08-14 07:36:54,"```suggestion\n    BOOST_CHECK_EQUAL(test_args.GetArg(""-a"", ""xxx""), """");\n```\n\nwould produce a better error message, if it fails some day.\n\nSame in all places below where `BOOST_CHECK(a == b);` can be replaced with `BOOST_CHECK_EQUAL(a, b);`",https://github.com/bitcoin/bitcoin/pull/19709#discussion_r470460457,470460457,src/test/util_tests.cpp
hebasto,2020-08-14 09:26:35,Thank you! [Updated](https://github.com/bitcoin/bitcoin/pull/19709#issuecomment-673983005).,https://github.com/bitcoin/bitcoin/pull/19709#discussion_r470514468,470514468,src/test/util_tests.cpp
