[
  {
    "sha": "bb16c8894becfba8764b13d448ba6e7e7f1608c2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjE2Yzg4OTRiZWNmYmE4NzY0YjEzZDQ0OGJhNmU3ZTdmMTYwOGMy",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao@uphold.com",
        "date": "2016-03-08T00:15:17Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao@uphold.com",
        "date": "2016-03-22T08:43:37Z"
      },
      "message": "Prevent multiple calls to CWallet::AvailableCoins",
      "tree": {
        "sha": "530fdb3d0eca0d2d707c41870fc248841a386097",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/530fdb3d0eca0d2d707c41870fc248841a386097"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb16c8894becfba8764b13d448ba6e7e7f1608c2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb16c8894becfba8764b13d448ba6e7e7f1608c2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb16c8894becfba8764b13d448ba6e7e7f1608c2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb16c8894becfba8764b13d448ba6e7e7f1608c2/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c946a15075ba5a2da74a08bb5575391541196475",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c946a15075ba5a2da74a08bb5575391541196475",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c946a15075ba5a2da74a08bb5575391541196475"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 7,
      "deletions": 5
    },
    "files": [
      {
        "sha": "51a2ad78d71e826adb6b9515cdcfa1d6678b3cfd",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb16c8894becfba8764b13d448ba6e7e7f1608c2/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb16c8894becfba8764b13d448ba6e7e7f1608c2/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=bb16c8894becfba8764b13d448ba6e7e7f1608c2",
        "patch": "@@ -1841,10 +1841,9 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, int nConfMine, int\n     return true;\n }\n \n-bool CWallet::SelectCoins(const CAmount& nTargetValue, set<pair<const CWalletTx*,unsigned int> >& setCoinsRet, CAmount& nValueRet, const CCoinControl* coinControl) const\n+bool CWallet::SelectCoins(const vector<COutput>& vAvailableCoins, const CAmount& nTargetValue, set<pair<const CWalletTx*,unsigned int> >& setCoinsRet, CAmount& nValueRet, const CCoinControl* coinControl) const\n {\n-    vector<COutput> vCoins;\n-    AvailableCoins(vCoins, true, coinControl);\n+    vector<COutput> vCoins(vAvailableCoins);\n \n     // coin control -> return all selected outputs (we want all selected to go into the transaction for sure)\n     if (coinControl && coinControl->HasSelected() && !coinControl->fAllowOtherInputs)\n@@ -2010,6 +2009,9 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n     {\n         LOCK2(cs_main, cs_wallet);\n         {\n+            std::vector<COutput> vAvailableCoins;\n+            AvailableCoins(vAvailableCoins, true, coinControl);\n+\n             nFeeRet = 0;\n             // Start with no fee and loop until there is enough fee\n             while (true)\n@@ -2059,7 +2061,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                 // Choose coins to use\n                 set<pair<const CWalletTx*,unsigned int> > setCoins;\n                 CAmount nValueIn = 0;\n-                if (!SelectCoins(nValueToSelect, setCoins, nValueIn, coinControl))\n+                if (!SelectCoins(vAvailableCoins, nValueToSelect, setCoins, nValueIn, coinControl))\n                 {\n                     strFailReason = _(\"Insufficient funds\");\n                     return false;"
      },
      {
        "sha": "e37d972a154f20a25e32c2028c8a59ec300a2506",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb16c8894becfba8764b13d448ba6e7e7f1608c2/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb16c8894becfba8764b13d448ba6e7e7f1608c2/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=bb16c8894becfba8764b13d448ba6e7e7f1608c2",
        "patch": "@@ -544,7 +544,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      * all coins from coinControl are selected; Never select unconfirmed coins\n      * if they are not ours\n      */\n-    bool SelectCoins(const CAmount& nTargetValue, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, CAmount& nValueRet, const CCoinControl *coinControl = NULL) const;\n+    bool SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAmount& nTargetValue, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, CAmount& nValueRet, const CCoinControl *coinControl = NULL) const;\n \n     CWalletDB *pwalletdbEncryption;\n "
      }
    ]
  }
]