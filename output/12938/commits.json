[
  {
    "sha": "943f3b78d63bb69b26f2598fe3f92ab1491801c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NDNmM2I3OGQ2M2JiNjliMjZmMjU5OGZlM2Y5MmFiMTQ5MTgwMWM0",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-04-11T04:16:55Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-06-01T22:47:36Z"
      },
      "message": "Overload CScript::IsWitnessProgram with a test-only version\n\nFor those cases where the version and program are not useful.",
      "tree": {
        "sha": "584f5e07f89920a2f5210d0d78f341a00df34ca2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/584f5e07f89920a2f5210d0d78f341a00df34ca2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/943f3b78d63bb69b26f2598fe3f92ab1491801c4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbEc0LAAoJEG7l83hfeLNF0iwH/2n/4ttkrYkPrvFlveZNwV4b\n8sswR/kMPKi92avUxC8WD1HmIubNbuP4yh/QdHwOORkv76BkI4tv9BRbgpPPgAri\nq2bc6CSNA2KtWiUmbIjq7kiKxflLaPSxzUlB5DZz4WB1UDV4PdpcaMvm8CbQwyRi\nWh7JrLRpFPVAcnmFIsqogiAFdX9i7NrjjnleXcNCuoLlI5yqWPxb3ClyOuSF9eih\n2WkAYJNdoyJnajUF9AvC0XTotV1HzQxXERO1r+xxPM43ypAjnL2Iy4M/LCfsbNb/\neb5Cz1GUHlufo+OogVOXD2X6gQ6v9QS9kyCOgaN3UOKTBVDmr8Fr5yt5m8OcK58=\n=2LhV\n-----END PGP SIGNATURE-----",
        "payload": "tree 584f5e07f89920a2f5210d0d78f341a00df34ca2\nparent d4f6dac9abf8e81e90c1726fa81850799a67bff9\nauthor Ben Woosley <ben.woosley@gmail.com> 1523420215 -0700\ncommitter Ben Woosley <ben.woosley@gmail.com> 1527893256 -0700\n\nOverload CScript::IsWitnessProgram with a test-only version\n\nFor those cases where the version and program are not useful.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/943f3b78d63bb69b26f2598fe3f92ab1491801c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/943f3b78d63bb69b26f2598fe3f92ab1491801c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/943f3b78d63bb69b26f2598fe3f92ab1491801c4/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d4f6dac9abf8e81e90c1726fa81850799a67bff9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4f6dac9abf8e81e90c1726fa81850799a67bff9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d4f6dac9abf8e81e90c1726fa81850799a67bff9"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 20,
      "deletions": 27
    },
    "files": [
      {
        "sha": "1d7fab58d0d1a4df85c8c6d2a70f446c24910388",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=943f3b78d63bb69b26f2598fe3f92ab1491801c4",
        "patch": "@@ -51,8 +51,8 @@ $(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n EXTRA_LIBRARIES += \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_COMMON) \\\n   $(LIBBITCOIN_CONSENSUS) \\\n+  $(LIBBITCOIN_COMMON) \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_CLI) \\\n   $(LIBBITCOIN_WALLET) \\"
      },
      {
        "sha": "37709c4c2198d01669b1a5c8cada84ce3f6e0616",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=943f3b78d63bb69b26f2598fe3f92ab1491801c4",
        "patch": "@@ -35,10 +35,8 @@ CAmount GetDustThreshold(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)\n         return 0;\n \n     size_t nSize = GetSerializeSize(txout, SER_DISK, 0);\n-    int witnessversion = 0;\n-    std::vector<unsigned char> witnessprogram;\n \n-    if (txout.scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) {\n+    if (txout.scriptPubKey.IsWitnessProgram()) {\n         // sum the sizes of the parts of a transaction input\n         // with 75% segwit discount applied to the script size.\n         nSize += (32 + 4 + 1 + (107 / WITNESS_SCALE_FACTOR) + 4);"
      },
      {
        "sha": "ac32987999c2db3789002b48f4aa6e9a1886add3",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=943f3b78d63bb69b26f2598fe3f92ab1491801c4",
        "patch": "@@ -468,10 +468,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n         // Bytes\n         CTxDestination address;\n-        int witnessversion = 0;\n-        std::vector<unsigned char> witnessprogram;\n-        if (out.txout.scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram))\n-        {\n+        if (out.txout.scriptPubKey.IsWitnessProgram()) {\n             nBytesInputs += (32 + 4 + 1 + (107 / WITNESS_SCALE_FACTOR) + 4);\n             fWitness = true;\n         }"
      },
      {
        "sha": "98369e019dc80d313968d95bb0dc108f1f2db7ae",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=943f3b78d63bb69b26f2598fe3f92ab1491801c4",
        "patch": "@@ -213,15 +213,16 @@ bool CScript::IsPayToWitnessScriptHash() const\n \n // A witness program is any valid CScript that consists of a 1-byte push opcode\n // followed by a data push between 2 and 40 bytes.\n+bool CScript::IsWitnessProgram() const\n+{\n+    return ((this->size() >= 4 && this->size() <= 42) &&\n+            ((*this)[0] == OP_0 || IsSmallInteger(static_cast<opcodetype>((*this)[0]))) &&\n+            (size_t)((*this)[1] + 2) == this->size());\n+}\n+\n bool CScript::IsWitnessProgram(int& version, std::vector<unsigned char>& program) const\n {\n-    if (this->size() < 4 || this->size() > 42) {\n-        return false;\n-    }\n-    if ((*this)[0] != OP_0 && ((*this)[0] < OP_1 || (*this)[0] > OP_16)) {\n-        return false;\n-    }\n-    if ((size_t)((*this)[1] + 2) == this->size()) {\n+    if (IsWitnessProgram()) {\n         version = DecodeOP_N((opcodetype)(*this)[0]);\n         program = std::vector<unsigned char>(this->begin() + 2, this->end());\n         return true;"
      },
      {
        "sha": "bdad5101fa560d697c584bf0434d4098fbea9f6f",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=943f3b78d63bb69b26f2598fe3f92ab1491801c4",
        "patch": "@@ -370,6 +370,12 @@ class CScriptNum\n     int64_t m_value;\n };\n \n+/** Test for \"small positive integer\" script opcodes - OP_1 through OP_16. */\n+constexpr bool IsSmallInteger(opcodetype opcode)\n+{\n+    return opcode >= OP_1 && opcode <= OP_16;\n+}\n+\n /**\n  * We use a prevector for the script to reduce the considerable memory overhead\n  *  of vectors in cases where they normally contain a small number of small elements.\n@@ -532,6 +538,7 @@ class CScript : public CScriptBase\n \n     bool IsPayToScriptHash() const;\n     bool IsPayToWitnessScriptHash() const;\n+    bool IsWitnessProgram() const;\n     bool IsWitnessProgram(int& version, std::vector<unsigned char>& program) const;\n \n     /** Called by IsStandardTx and P2SH/BIP62 VerifyScript (which makes it consensus-critical). */"
      },
      {
        "sha": "8f459065cc072efb8fb889e65b6e95368d5bdf86",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=943f3b78d63bb69b26f2598fe3f92ab1491801c4",
        "patch": "@@ -57,12 +57,6 @@ static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n     return false;\n }\n \n-/** Test for \"small positive integer\" script opcodes - OP_1 through OP_16. */\n-static constexpr bool IsSmallInteger(opcodetype opcode)\n-{\n-    return opcode >= OP_1 && opcode <= OP_16;\n-}\n-\n static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n {\n     opcodetype opcode;"
      },
      {
        "sha": "e13adb468c688b46aff900d5d0f2c5865766d026",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=943f3b78d63bb69b26f2598fe3f92ab1491801c4",
        "patch": "@@ -1390,9 +1390,7 @@ class Witnessifier : public boost::static_visitor<bool>\n     bool operator()(const CScriptID &scriptID) {\n         CScript subscript;\n         if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n-            int witnessversion;\n-            std::vector<unsigned char> witprog;\n-            if (subscript.IsWitnessProgram(witnessversion, witprog)) {\n+            if (subscript.IsWitnessProgram()) {\n                 ExtractDestination(subscript, result);\n                 already_witness = true;\n                 return true;"
      },
      {
        "sha": "2e2285a7be92c331a2e8a52a30d5c22eb4a2dc82",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/943f3b78d63bb69b26f2598fe3f92ab1491801c4/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=943f3b78d63bb69b26f2598fe3f92ab1491801c4",
        "patch": "@@ -2697,9 +2697,7 @@ OutputType CWallet::TransactionChangeType(OutputType change_type, const std::vec\n     // output.\n     for (const auto& recipient : vecSend) {\n         // Check if any destination contains a witness program:\n-        int witnessversion = 0;\n-        std::vector<unsigned char> witnessprogram;\n-        if (recipient.scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) {\n+        if (recipient.scriptPubKey.IsWitnessProgram()) {\n             return OutputType::BECH32;\n         }\n     }"
      }
    ]
  }
]