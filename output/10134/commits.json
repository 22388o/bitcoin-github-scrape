[
  {
    "sha": "f19abd90537fe71e757fdbfc52cd2288e967bb6e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTlhYmQ5MDUzN2ZlNzFlNzU3ZmRiZmM1MmNkMjI4OGU5NjdiYjZl",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2017-03-31T17:24:35Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2017-05-06T09:25:18Z"
      },
      "message": "[qa] Fixes segwit block relay test after inv-direct-fetch was disabled\n\nThis test was passing because we never fetch blocks if we only receive\nan inv and not the header (after 037159cebf1eae4445050cec029986514ed4e9e2),\nand this test wasn't delivering the header.",
      "tree": {
        "sha": "b78681af5d816a6c6b23af7ca7d397ad7a283ab4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b78681af5d816a6c6b23af7ca7d397ad7a283ab4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f19abd90537fe71e757fdbfc52cd2288e967bb6e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f19abd90537fe71e757fdbfc52cd2288e967bb6e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f19abd90537fe71e757fdbfc52cd2288e967bb6e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f19abd90537fe71e757fdbfc52cd2288e967bb6e/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35da2aeed7d4000dde93957c3b6e048ab83c4f2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35da2aeed7d4000dde93957c3b6e048ab83c4f2b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35da2aeed7d4000dde93957c3b6e048ab83c4f2b"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 6,
      "deletions": 11
    },
    "files": [
      {
        "sha": "93d42b3df0114ff69fa247140d7a6cf83100be63",
        "filename": "test/functional/p2p-segwit.py",
        "status": "modified",
        "additions": 6,
        "deletions": 11,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f19abd90537fe71e757fdbfc52cd2288e967bb6e/test/functional/p2p-segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f19abd90537fe71e757fdbfc52cd2288e967bb6e/test/functional/p2p-segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p-segwit.py?ref=f19abd90537fe71e757fdbfc52cd2288e967bb6e",
        "patch": "@@ -61,16 +61,6 @@ def announce_block_and_wait_for_getdata(self, block, use_header, timeout=60):\n             self.send_message(msg)\n         self.wait_for_getdata()\n \n-    def announce_block(self, block, use_header):\n-        with mininode_lock:\n-            self.last_message.pop(\"getdata\", None)\n-        if use_header:\n-            msg = msg_headers()\n-            msg.headers = [ CBlockHeader(block) ]\n-            self.send_message(msg)\n-        else:\n-            self.send_message(msg_inv(inv=[CInv(2, block.sha256)]))\n-\n     def request_block(self, blockhash, inv_type, timeout=60):\n         with mininode_lock:\n             self.last_message.pop(\"block\", None)\n@@ -1029,13 +1019,18 @@ def test_block_relay(self, segwit_activated):\n             block4 = self.build_next_block(nVersion=4)\n             block4.solve()\n             self.old_node.getdataset = set()\n+\n             # Blocks can be requested via direct-fetch (immediately upon processing the announcement)\n             # or via parallel download (with an indeterminate delay from processing the announcement)\n             # so to test that a block is NOT requested, we could guess a time period to sleep for,\n             # and then check. We can avoid the sleep() by taking advantage of transaction getdata's\n             # being processed after block getdata's, and announce a transaction as well,\n             # and then check to see if that particular getdata has been received.\n-            self.old_node.announce_block(block4, use_header=False)\n+            # Since 0.14, inv's will only be responded to with a getheaders, so send a header\n+            # to announce this block.\n+            msg = msg_headers()\n+            msg.headers = [ CBlockHeader(block4) ]\n+            self.old_node.send_message(msg)\n             self.old_node.announce_tx_and_wait_for_getdata(block4.vtx[0])\n             assert(block4.sha256 not in self.old_node.getdataset)\n "
      }
    ]
  }
]