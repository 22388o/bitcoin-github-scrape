[
  {
    "sha": "451cf680a95aac0f51a2fbc5d0063cd586cd6c72",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NTFjZjY4MGE5NWFhYzBmNTFhMmZiYzVkMDA2M2NkNTg2Y2Q2Yzcy",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-02-05T03:05:49Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-04-08T23:49:21Z"
      },
      "message": "Refactor CheckSig (prep for OP_CHECKMULTISIG optimization)",
      "tree": {
        "sha": "8d6b521eecef898ef19b7dca126f353d640dd8ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d6b521eecef898ef19b7dca126f353d640dd8ff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/451cf680a95aac0f51a2fbc5d0063cd586cd6c72",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/451cf680a95aac0f51a2fbc5d0063cd586cd6c72",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/451cf680a95aac0f51a2fbc5d0063cd586cd6c72",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/451cf680a95aac0f51a2fbc5d0063cd586cd6c72/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1829134afec6058d2d7d713b5b280a2d4605bb2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1829134afec6058d2d7d713b5b280a2d4605bb2e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1829134afec6058d2d7d713b5b280a2d4605bb2e"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 22,
      "deletions": 9
    },
    "files": [
      {
        "sha": "5dcd6a9fa80a9364f2c15a58c67ac3371353ee3e",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 9,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/451cf680a95aac0f51a2fbc5d0063cd586cd6c72/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/451cf680a95aac0f51a2fbc5d0063cd586cd6c72/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=451cf680a95aac0f51a2fbc5d0063cd586cd6c72",
        "patch": "@@ -1246,11 +1246,8 @@ class CSignatureCache\n     }\n };\n \n-bool CheckSig(vector<unsigned char> vchSig, vector<unsigned char> vchPubKey, CScript scriptCode,\n-              const CTransaction& txTo, unsigned int nIn, int nHashType, int flags)\n+bool PopHashType(vector<unsigned char>& vchSig, int& nHashType)\n {\n-    static CSignatureCache signatureCache;\n-\n     // Hash type is one byte tacked on to the end of the signature\n     if (vchSig.empty())\n         return false;\n@@ -1259,16 +1256,17 @@ bool CheckSig(vector<unsigned char> vchSig, vector<unsigned char> vchPubKey, CSc\n     else if (nHashType != vchSig.back())\n         return false;\n     vchSig.pop_back();\n+    return true;\n+}\n \n-    uint256 sighash = SignatureHash(scriptCode, txTo, nIn, nHashType);\n+bool CheckSigInner(const std::vector<unsigned char>& vchSig, const uint256& sighash,\n+                   const vector<unsigned char>& vchPubKey, CKey& key, int flags)\n+{\n+    static CSignatureCache signatureCache;\n \n     if (signatureCache.Get(sighash, vchSig, vchPubKey))\n         return true;\n \n-    CKey key;\n-    if (!key.SetPubKey(vchPubKey))\n-        return false;\n-\n     if (!key.Verify(sighash, vchSig))\n         return false;\n \n@@ -1278,6 +1276,21 @@ bool CheckSig(vector<unsigned char> vchSig, vector<unsigned char> vchPubKey, CSc\n     return true;\n }\n \n+bool CheckSig(vector<unsigned char> vchSig, vector<unsigned char> vchPubKey, CScript scriptCode,\n+              const CTransaction& txTo, unsigned int nIn, int nHashType, int flags)\n+{\n+    if (!PopHashType(vchSig, nHashType))\n+        return false;\n+\n+    CKey key;\n+    if (!key.SetPubKey(vchPubKey))\n+        return false;\n+\n+    uint256 sighash = SignatureHash(scriptCode, txTo, nIn, nHashType);\n+\n+    return CheckSigInner(vchSig, sighash, vchPubKey, key, flags);\n+}\n+\n \n \n "
      }
    ]
  },
  {
    "sha": "3f916d018f3275cc3f076cb51bfd40d2d8266b54",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjkxNmQwMThmMzI3NWNjM2YwNzZjYjUxYmZkNDBkMmQ4MjY2YjU0",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-02-05T14:28:32Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-04-08T23:49:21Z"
      },
      "message": "Unit test: OP_CHECKMULTISIG multiple signatures with different hash types",
      "tree": {
        "sha": "b1eb4d4ff8a2985f6926527b9318af99aae0f3f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1eb4d4ff8a2985f6926527b9318af99aae0f3f6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f916d018f3275cc3f076cb51bfd40d2d8266b54",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f916d018f3275cc3f076cb51bfd40d2d8266b54",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f916d018f3275cc3f076cb51bfd40d2d8266b54",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f916d018f3275cc3f076cb51bfd40d2d8266b54/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "451cf680a95aac0f51a2fbc5d0063cd586cd6c72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/451cf680a95aac0f51a2fbc5d0063cd586cd6c72",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/451cf680a95aac0f51a2fbc5d0063cd586cd6c72"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 27,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7915544ab4fc0b578c4d44fa7eb380eef85b21d4",
        "filename": "src/test/multisig_tests.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 1,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f916d018f3275cc3f076cb51bfd40d2d8266b54/src/test/multisig_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f916d018f3275cc3f076cb51bfd40d2d8266b54/src/test/multisig_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/multisig_tests.cpp?ref=3f916d018f3275cc3f076cb51bfd40d2d8266b54",
        "patch": "@@ -40,6 +40,25 @@ sign_multisig(CScript scriptPubKey, vector<CKey> keys, CTransaction transaction,\n     return result;\n }\n \n+CScript\n+sign_multisig(CScript scriptPubKey, vector<CKey> keys, vector<int> hashTypes, CTransaction transaction, int whichIn)\n+{\n+    CScript result;\n+    result << OP_0; // CHECKMULTISIG bug workaround\n+    size_t iHash = 0;\n+    BOOST_FOREACH(CKey key, keys)\n+    {\n+        uint256 hash = SignatureHash(scriptPubKey, transaction, whichIn, hashTypes[iHash]);\n+\n+        vector<unsigned char> vchSig;\n+        BOOST_CHECK(key.Sign(hash, vchSig));\n+        vchSig.push_back((unsigned char)hashTypes[iHash]);\n+        result << vchSig;\n+        iHash = (iHash+1)%hashTypes.size();\n+    }\n+    return result;\n+}\n+\n BOOST_AUTO_TEST_CASE(multisig_verify)\n {\n     unsigned int flags = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC;\n@@ -114,17 +133,24 @@ BOOST_AUTO_TEST_CASE(multisig_verify)\n     BOOST_CHECK(!VerifyScript(s, a_or_b, txTo[1], 0, flags, 0));\n \n \n+    vector<int> hashTypes = list_of((int)SIGHASH_ALL)(SIGHASH_NONE)(SIGHASH_SINGLE)\n+        (SIGHASH_ANYONECANPAY)(SIGHASH_SINGLE|SIGHASH_ANYONECANPAY);\n+\n     for (int i = 0; i < 4; i++)\n+    {\n         for (int j = 0; j < 4; j++)\n         {\n             keys.clear();\n             keys += key[i],key[j];\n-            s = sign_multisig(escrow, keys, txTo[2], 0);\n+            s = sign_multisig(escrow, keys, hashTypes, txTo[2], 0);\n             if (i < j && i < 3 && j < 3)\n                 BOOST_CHECK_MESSAGE(VerifyScript(s, escrow, txTo[2], 0, flags, 0), strprintf(\"escrow 1: %d %d\", i, j));\n             else\n                 BOOST_CHECK_MESSAGE(!VerifyScript(s, escrow, txTo[2], 0, flags, 0), strprintf(\"escrow 2: %d %d\", i, j));\n         }\n+        // Mix up the hashTypes\n+        std::swap(hashTypes[0], hashTypes[(i+1)%hashTypes.size()]);\n+    }\n }\n \n BOOST_AUTO_TEST_CASE(multisig_IsStandard)"
      }
    ]
  },
  {
    "sha": "61a29a7c0676eb0d422ff828f0ba006ba0fc8e2e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MWEyOWE3YzA2NzZlYjBkNDIyZmY4MjhmMGJhMDA2YmEwZmM4ZTJl",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-02-05T03:49:31Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-04-08T23:49:21Z"
      },
      "message": "OP_CHECKMULTISIG signature hash optimization\n\nRework OP_CHECKMULTISIG so each OP_CHECKMULTISIG only\nhashes the transaction once for each different SIGHASH_ type.",
      "tree": {
        "sha": "69235109c71c3d0e94e71ac0f3626ec0425de407",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/69235109c71c3d0e94e71ac0f3626ec0425de407"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/61a29a7c0676eb0d422ff828f0ba006ba0fc8e2e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61a29a7c0676eb0d422ff828f0ba006ba0fc8e2e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/61a29a7c0676eb0d422ff828f0ba006ba0fc8e2e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61a29a7c0676eb0d422ff828f0ba006ba0fc8e2e/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3f916d018f3275cc3f076cb51bfd40d2d8266b54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f916d018f3275cc3f076cb51bfd40d2d8266b54",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3f916d018f3275cc3f076cb51bfd40d2d8266b54"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 24,
      "deletions": 5
    },
    "files": [
      {
        "sha": "9b3a33f10bfc6de29980e1f68d81a6a9729e1ed4",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 5,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61a29a7c0676eb0d422ff828f0ba006ba0fc8e2e/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61a29a7c0676eb0d422ff828f0ba006ba0fc8e2e/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=61a29a7c0676eb0d422ff828f0ba006ba0fc8e2e",
        "patch": "@@ -16,9 +16,12 @@ using namespace boost;\n #include \"sync.h\"\n #include \"util.h\"\n \n-bool CheckSig(vector<unsigned char> vchSig, vector<unsigned char> vchPubKey, CScript scriptCode, const CTransaction& txTo, unsigned int nIn, int nHashType, int flags);\n-\n-\n+uint256 SignatureHash(CScript scriptCode, const CTransaction& txTo, unsigned int nIn, int nHashType);\n+bool PopHashType(vector<unsigned char>& vchSig, int& nHashType);\n+bool CheckSigInner(const std::vector<unsigned char>& vchSig, const uint256& sighash,\n+                   const vector<unsigned char>& vchPubKey, CKey& key, int flags);\n+bool CheckSig(vector<unsigned char> vchSig, vector<unsigned char> vchPubKey, CScript scriptCode,\n+              const CTransaction& txTo, unsigned int nIn, int nHashType, int flags);\n \n typedef vector<unsigned char> valtype;\n static const valtype vchFalse(0);\n@@ -330,6 +333,10 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n     int nOpCount = 0;\n     bool fStrictEncodings = flags & SCRIPT_VERIFY_STRICTENC;\n \n+    // This cache is used to avoid repeatedly recomputing signature hashes\n+    // for the CHECKMULTISIG opcodes\n+    map<int, uint256> mapSigHashCache;\n+\n     try\n     {\n         while (pc < pend)\n@@ -1064,13 +1071,25 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                     bool fSuccess = true;\n                     while (fSuccess && nSigsCount > 0)\n                     {\n-                        valtype& vchSig    = stacktop(-isig);\n+                        valtype vchSig     = stacktop(-isig);\n                         valtype& vchPubKey = stacktop(-ikey);\n \n                         // Check signature\n                         bool fOk = (!fStrictEncodings || (IsCanonicalSignature(vchSig) && IsCanonicalPubKey(vchPubKey)));\n                         if (fOk)\n-                            fOk = CheckSig(vchSig, vchPubKey, scriptCode, txTo, nIn, nHashType, flags);\n+                        {\n+                            int nSigHT = nHashType;\n+                            CKey key;\n+                            if (PopHashType(vchSig, nSigHT) && key.SetPubKey(vchPubKey))\n+                            {\n+                                // This will change if there are ever more SIGHASH_ hash types:\n+                                nSigHT = nSigHT & (SIGHASH_ALL|SIGHASH_NONE|SIGHASH_SINGLE|SIGHASH_ANYONECANPAY);\n+                                if (mapSigHashCache.count(nSigHT) == 0)\n+                                    mapSigHashCache[nSigHT] = SignatureHash(scriptCode, txTo, nIn, nSigHT);\n+                                fOk = CheckSigInner(vchSig, mapSigHashCache[nSigHT], vchPubKey, key, flags);\n+                            }\n+                            else fOk = false;\n+                        }\n \n                         if (fOk) {\n                             isig++;"
      }
    ]
  }
]