jonasschnelli,2014-12-17T21:26:07Z,"As `createrawtransactions` with potential unspent vins, this call does not lock the coins somehow.\n",https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-67397249,67397249,
aalness,2014-12-18T18:31:29Z,ACK the idea. It seems useful.\n,https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-67531896,67531896,
gmaxwell,2014-12-18T19:25:05Z,Sweet. This should have a mechenism to also include watchonly coins.\n,https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-67541653,67541653,
gmaxwell,2014-12-18T19:33:18Z,"It should support existing VINs, which are useful if you want to specifically spend a particular coin, but need more inputs to complete the txn. One reason you may want to do this is to achieve mutual exclusion with a prior transaction.  If the existing vins are adequate it shouldn't add any more.\n",https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-67542972,67542972,
kanzure,2014-12-19T21:39:53Z,"Also, not to pile on too much, but a ""fundmany"" would be neat as well (in addition to watchonly support in fundrawtransaction). This would be useful for batch coin selection, offline signing, and coinjoin. Plus, fundmany is not a huge jump from sendmany.\n\nAlso, gmaxwell proposed on IRC a limit=N parameter on fundrawtransaction?\n",https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-67701462,67701462,
kanzure,2014-12-20T20:35:55Z,Nevermind about fundmany: http://bitcoinstats.com/irc/bitcoin-dev/logs/2014/12/19#l1419025192\n,https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-67748700,67748700,
jonasschnelli,2014-12-20T21:07:54Z,Added support for existing VINs.\nNow comes with an extensive test-script.\n\n@gmaxwell the proposed `limit` parameter needs probably some brainwork first. See (http://bitcoinstats.com/irc/bitcoin-dev/logs/2014/12/20#l1419085131). Maybe another pull.\n,https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-67749782,67749782,
jonasschnelli,2014-12-22T08:25:44Z,Just fixed an issue in `CreateTransaction` which produced endless recursive loops. Travis should now be happy.\n,https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-67812662,67812662,
laanwj,2015-02-27T13:37:55Z,"needs rebase (assigned 0.11 milestone, would be nice to have this)\n",https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-76395197,76395197,
jonasschnelli,2015-03-05T08:04:04Z,rebased.\n,https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-77322180,77322180,
jonasschnelli,2015-03-14T08:02:03Z,should solve #3794\n,https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-80110212,80110212,
jonasschnelli,2015-03-14T08:06:45Z,binaries to test: https://builds.jonasschnelli.ch/pulls/5503/\n,https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-80115283,80115283,
jonasschnelli,2015-03-21T20:28:05Z,"Rebased (hard rebase after ""Subtract fee from amount [#5831]""), added some code comments.\n",https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-84450060,84450060,
jgarzik,2015-03-23T14:08:45Z,ut ACK + plan to test this this week (modulo bug fix mentioned above of course)\n,https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-85013718,85013718,
jonasschnelli,2015-03-31T08:02:45Z,Currently i'm working on this to allow fundrawtransaction to calculate serialized transaction length for getting the right fee and priority without actually signing the tx. Tests won't make sense at the moment.\n,https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-87988235,87988235,
jonasschnelli,2015-04-02T19:41:56Z,"Updated!\n`fundrawtransaction` now works with locked wallets. Fee / priority calculation now goes over a new dummy-signing way in `sign.cpp`.\nRPC tests are now even more extensive and includes multisig test, locked wallet tests as well as comparison of calculated fee and correct fee tests.\n\nThe only question is, if it would be worth to add a optional `correctFee=1|0` argument for the `fundrawt",https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-89021090,89021090,
jonasschnelli,2015-04-16T07:55:57Z,"rebased.\n\nMoved RPC function ""fundrawtransaction()"" from `rpcrawtransaction.cpp` to `rpcwallet.cpp` (fundrawtransaction is a wallet function). Added wallet-is-presence check because we recently removed ""reqWallet"" check over the RPC dispatch table.\n",https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-93670312,93670312,
jonasschnelli,2015-04-21T18:25:43Z,rebased.\n,https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-94895866,94895866,
TheBlueMatt,2015-04-24T00:50:19Z,I needed to use this for something and rewrote/tweaked a few chunks. See changes at https://github.com/TheBlueMatt/bitcoin/tree/frt\n,https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-95764388,95764388,
jonasschnelli,2015-04-24T09:12:13Z,"Pulled in some commits from @TheBlueMatt. Only pulled in clear beneficial and easy reviewable commits. Other things (CCoinControl usage, watch-only support) may be better handled in a 2nd pull request to avoid large changeset.\n",https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-95864892,95864892,
TheBlueMatt,2015-04-24T09:30:28Z,"@jonasschnelli Actually, the changes I made were mostly to limit the size of _this_ pull request. Some of them look like it would become a big pull request, but once squashed, the total size is actually smaller than the original :)\n",https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-95869150,95869150,
TheBlueMatt,2015-04-24T09:31:31Z,"Also, not sure when you pulled in, but I force pushe'd a few times, you may want to check that the ones you merged are the latest versions (I'm done now, I think). I also merged in a tweaked-up version of fundrawtransaction there.\n",https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-95869779,95869779,
jonasschnelli,2015-04-24T09:35:48Z,@TheBlueMatt Thank you for your tweaks! Will try to go through the optimizing commits but need a clear head for that. Will do it soon.\n,https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-95871103,95871103,
TheBlueMatt,2015-04-25T01:33:14Z,I added two more commits to that tree and made a nice rebased version at https://github.com/TheBlueMatt/bitcoin/commits/frt2\n,https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-96118201,96118201,
TheBlueMatt,2015-04-30T20:48:41Z,"Rebased frt2. @jonasschnelli do you want to review my changes and merge them here, or should I just open a new pull request? I'd like to keep this moving.\n",https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-97962792,97962792,
jonasschnelli,2015-04-30T20:56:43Z,closing in favor of #6088\n,https://github.com/bitcoin/bitcoin/pull/5503#issuecomment-97964318,97964318,
aalness,2014-12-18T09:53:39Z,s/exiting/existing\n,https://github.com/bitcoin/bitcoin/pull/5503#discussion_r22031843,22031843,src/rpcrawtransaction.cpp
fanquake,2014-12-27T13:10:34Z,s/temporary/temporarily\n,https://github.com/bitcoin/bitcoin/pull/5503#discussion_r22292476,22292476,src/wallet.cpp
jonasschnelli,2014-12-27T19:53:09Z,Thanks. Fixed.\n,https://github.com/bitcoin/bitcoin/pull/5503#discussion_r22294281,22294281,src/wallet.cpp
jgarzik,2015-03-23T13:51:07Z,"Bug:  should be 'true' to indicate wallet requirement.  Otherwise, the 'pwalletMain' reference will oops when NULL (wallet support built, but disabled at runtime).\n",https://github.com/bitcoin/bitcoin/pull/5503#discussion_r26937231,26937231,src/rpcserver.cpp
jonasschnelli,2015-03-23T19:18:40Z,Thanks for catching this one! Fixed and pushed.\n,https://github.com/bitcoin/bitcoin/pull/5503#discussion_r26969580,26969580,src/rpcserver.cpp
laanwj,2015-03-27T08:18:07Z,Why sign at all if it's only for the fee calculation? I ask because we don't want to unnecessarily require the signing keys.\n,https://github.com/bitcoin/bitcoin/pull/5503#discussion_r27280632,27280632,src/wallet/wallet.cpp
jonasschnelli,2015-04-02T19:45:37Z,"We still need to remove the signature, but now, during fundrawtransaction, the signature is dummy/void.\n",https://github.com/bitcoin/bitcoin/pull/5503#discussion_r27690271,27690271,src/wallet/wallet.cpp
laanwj,2015-04-10T09:32:23Z,"Yes, removing a dummy sigature is fine.\n",https://github.com/bitcoin/bitcoin/pull/5503#discussion_r28132231,28132231,src/wallet/wallet.cpp
