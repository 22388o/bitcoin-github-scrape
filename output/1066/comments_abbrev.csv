sipa,2012-04-09T22:07:16Z,I've done some similar cleanups (only path-handling related) in #1072.\n,https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5034999,5034999,
Diapolo,2012-04-10T07:08:39Z,"Last commit reverts to old style of array init via = """", which is allowed and shorter than a memset(). At least now all arrays are initialized :). The only exception is in real_strprintf() where the init could perhaps slow down the GUI / client.\n",https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5040285,5040285,
laanwj,2012-04-10T07:13:21Z,"Thanks, looking good now.\n",https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5040327,5040327,
luke-jr,2012-04-10T13:54:36Z,Rebasing required.\n,https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5046339,5046339,
Diapolo,2012-04-10T17:47:12Z,"As I said I would like to get in #1072 before, as I will have to rebase against that :).\n",https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5051759,5051759,
sipa,2012-04-10T18:03:44Z,"You can already rebase against #1072, if you like, but you risk needing to change things if #1072 changes before being merged then.\n",https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5052153,5052153,
sipa,2012-04-11T22:13:45Z,I merged #1072.\n,https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5080348,5080348,
Diapolo,2012-04-12T04:59:19Z,"Nice, will rebase later today :).\n",https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5084573,5084573,
Diapolo,2012-04-12T06:57:47Z,Rebased and I'm looking through the code again to verify...\n,https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5085472,5085472,
Diapolo,2012-04-12T16:45:35Z,"Rebased one more ;-). I'm only going to fix glitches / errors that are currently in my changes, as I don't want to bloat this. There is of course plenty of room for optimizing our utility functions, but that should go to seperate pull requests.\n",https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5095309,5095309,
luke-jr,2012-04-12T21:10:38Z,"Most of this looks like it makes the code more unreadable. IMO, the absolute namespaces are far clearer, and should be encouraged, while the general ""using namespace"" discouraged. sipa's per-function ""using namespace foo = boost::longerfoo"" makes sense and doesn't interfere with readability.\n",https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5100771,5100771,
Diapolo,2012-04-12T21:28:48Z,"God damn ... everytime I try to harmonize the code someone has an own feeling about things. BUT most of the time I see things in the code + in many places and use these as base. I have no problem to completely discard the global use of ""using namespace"" if everyone would do it. Function local using namespaces seem much more weird to me.\n\nBut even if you don't like the style ... there are at leas",https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5101132,5101132,
sipa,2012-04-12T22:56:53Z,"I really don't care about namespaces, and only followed the pattern of the code already there when doing the boost::filesystem::path stuff. As long as there are no namespaces in header files, I don't care.\n",https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5102558,5102558,
gavinandresen,2012-04-12T23:19:25Z,"56 comments for such trivial changes... I think there are higher priority things we could be spending our time on.\n\nThis is why I don't like ""I'll just clean up the code because I can"" changes. I would much prefer to see code cleaned up as it is being improved, so:\n- Fix a real bug (we have 180 of them, there are plenty to choose from), and do a little code cleanup as part of the fix.\n- Add so",https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5103099,5103099,
freewil,2012-04-13T00:12:47Z,"May I suggest for code cleanup pull requests, you make a smaller and simpler pull request for each one such as ""make sure all char arrays in util.cpp get initialized to 0 and use sizeof(CharArray) instead of MAX_LEN""\n",https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5105970,5105970,
laanwj,2012-04-13T05:58:33Z,"I like bold code cleanups, such as code de-duplication, eliminating unneeded functions, replacing archaic and dangerous C with modern C++, grouping together similar functionality, isolating different concerns, untangling knots of unrelated include files, and so on.\n\nOh yes and: fixing compiler warnings! Those boatloads of warnings are a shame to the project. \n\nOn the other hand changing namesp",https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5108916,5108916,
Diapolo,2012-04-13T09:46:27Z,"Allright, 2 options for me ... leave this as it is or rework to change no var names and only add the small changes I did code-wise. First vore wins, let's go :D.\n\nEdit: @laanwj Thanks, I'm more the GUI lover than console user and it's fun to work together :).\n",https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5111620,5111620,
gavinandresen,2012-04-13T23:57:37Z,First vote: rework.\n,https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5127215,5127215,
Diapolo,2012-04-21T13:13:12Z,I'm back and will do this in the next days :) and btw. I like clear orders ^^.\n,https://github.com/bitcoin/bitcoin/pull/1066#issuecomment-5260389,5260389,
sipa,2012-04-08T22:58:09Z,"Is there no way of asking windows for _the_ startup folder, in a version-agnostic way? Seems hard to believe one would need guesswork like this.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r658953,658953,src/util.cpp
Diapolo,2012-04-08T23:03:01Z,If SHGetSpecialFolderPathA() fails we HAVE to guess (our fallback) or GetSpecialFolderPath() fails ... there is NO environment variable that points to the autostart folder and MS changed the folder in Vista and higher in comparison to i.e. WinXP.\n,https://github.com/bitcoin/bitcoin/pull/1066#discussion_r658956,658956,src/util.cpp
laanwj,2012-04-09T08:42:08Z,"I'd prefer simply giving back an error, instead of guessing and fooling around. I suppose if GetSpecialFolderPath fails something is wrong anyway.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r659504,659504,src/util.cpp
Diapolo,2012-04-09T09:06:44Z,"The fallback WAS in before I edited the file, but it would have failed for Vista and higher. If you are fine with the rest of the changes I can remove this, sure.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r659524,659524,src/util.cpp
laanwj,2012-04-09T09:13:49Z,"I think it's fine to change it as you did. But I'd also be fine with removing the fallback and returning error. \n\nThere are places where extensive recovery mechanisms for OS errors are warranted, but this isn't one of them (how likely is requesting a string from the OS to fail?). No need to spend much time on this.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r659531,659531,src/util.cpp
Diapolo,2012-04-09T10:30:48Z,"This one broke MAX_PATH limits, which seems bad.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r659632,659632,src/util.cpp
gavinandresen,2012-04-09T13:40:17Z,"How often does the code call real_strprintf()?  This change means clearing 50K or memory every time it is called, which might be a performance issue if it is called a lot.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660010,660010,src/util.cpp
Diapolo,2012-04-09T13:44:33Z,"I can check, but I think it's good style to init used arrays or variables, as this creates a clean environment for code relying on that array. What's your oppinion here?\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660024,660024,src/util.cpp
gavinandresen,2012-04-09T14:02:16Z,"Please check.  It is absolutely good style, but if it make the GUI super sluggish because we're calling it 100 times per second when computing the list of transactions to show then performance trumps style (I have no idea if we are or not, but don't want people to start complaining that the 0.6.1 release is a lot slower than 0.6....)\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660076,660076,src/util.cpp
laanwj,2012-04-09T14:10:13Z,"real_strprintf is called a lot of times in many places (for example, HexStr). \n\nI don't think clearing it every time adds anything. The buffer is only written by _vsnprintf, which has well-defined semantics and doesn't do anything with the contents of the buffer beforehand. It returns the number of characters that will be in the output string. Nothing in the strprintf function relies on zero byt",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660104,660104,src/util.cpp
laanwj,2012-04-09T14:10:54Z,"Why rename this variable, `buffer` is a fine name?\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660106,660106,src/util.cpp
laanwj,2012-04-09T14:11:46Z,"Why ""pszBuffer""?\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660109,660109,src/util.cpp
sipa,2012-04-09T14:40:14Z,"I suppose he's following the code guidelines - you know, the contents of doc/coding.txt? ;)\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660206,660206,src/util.cpp
Diapolo,2012-04-09T14:40:39Z,"Variable names without a prefix break coding style standard I think ... somethimes I really would like to have mandantory rules, that I can use while coding. I don't insist on that rename, but if you use buffer, you simply don't know what type it is.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660210,660210,src/util.cpp
Diapolo,2012-04-09T14:42:54Z,"If real_strprintf is ""safe"" and you are right, it's quite often called ... I'm fine with removing the init. In general my intention was to reduce the risk of buffer-overflows / buffer-corruptions causing weird things to happen. It would be nice, if we were able to rewrite funtcions to use std::string instead of char \* or char arrays.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660219,660219,src/util.cpp
laanwj,2012-04-09T14:50:41Z,"Can't say I really like this guideline. Encoding types into variable names reeks of the windows ""Hungarian notation"" fad, and makes little sense to me.  IMO, variable names should be clear and human readable. My IDE and compiler figure out the rest from the context.\n\nThen again, if you think this makes the util code more consistent feel free to do it here. Please don't do it throughout the qt co",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660265,660265,src/util.cpp
sipa,2012-04-09T14:52:18Z,"I don't think many people except for Satoshi like this coding standard, actually, but I must say I like the consistency.\n\nThat said, I never realized it wasn't used in the Qt code...\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660272,660272,src/util.cpp
laanwj,2012-04-09T14:52:54Z,"_It would be nice, if we were able to rewrite funtcions to use std::string instead of char \* or char arrays_\n\nWe certainly agree on that. Apart from places where you really can't get around it such as strprintf, which wraps a legacy C function, there should be as few fixed-size buffers used as possible.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660276,660276,src/util.cpp
laanwj,2012-04-09T14:55:22Z,"Eventually it makes no sense in C++ anyway, as there are so many types and classes.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660291,660291,src/util.cpp
Diapolo,2012-04-09T15:01:22Z,"@laanwj I don't need psz or f or n in front of variables, but at least the names should speak and be consistent everywhere.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660329,660329,src/util.cpp
Diapolo,2012-04-09T16:02:26Z,Removed the memset() in the last rebase!\n,https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660650,660650,src/util.cpp
Diapolo,2012-04-09T16:02:54Z,Reverted to buffer and will keep using this ^^.\n,https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660653,660653,src/util.cpp
Diapolo,2012-04-09T16:03:26Z,"Here it's buffer again, too ;).\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r660656,660656,src/util.cpp
luke-jr,2012-04-09T21:11:51Z,Shouldn't this probably be Bitcoin-Qt.lnk anyway?\n,https://github.com/bitcoin/bitcoin/pull/1066#discussion_r662435,662435,src/init.cpp
luke-jr,2012-04-09T21:12:48Z,This introduces a bug. Uninitialized char arrays are not guaranteed to be null.\n,https://github.com/bitcoin/bitcoin/pull/1066#discussion_r662441,662441,src/util.cpp
luke-jr,2012-04-09T21:16:12Z,Is there a need to initialize pszFile/etc to null?\n,https://github.com/bitcoin/bitcoin/pull/1066#discussion_r662463,662463,src/util.cpp
Diapolo,2012-04-09T21:19:28Z,Take a look into ParseParameters() init happens there via memset.\n,https://github.com/bitcoin/bitcoin/pull/1066#discussion_r662482,662482,src/util.cpp
Diapolo,2012-04-09T21:20:11Z,"That's a nice suggestion, perhaps delete the old one if it exists and create a new Bitcoin-Qt.lnk.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r662491,662491,src/init.cpp
Diapolo,2012-04-09T21:20:43Z,Good coding style IMHO.\n,https://github.com/bitcoin/bitcoin/pull/1066#discussion_r662494,662494,src/util.cpp
luke-jr,2012-04-09T21:37:22Z,It's only memset if -datadir is specified...\n,https://github.com/bitcoin/bitcoin/pull/1066#discussion_r662581,662581,src/util.cpp
luke-jr,2012-04-09T21:39:13Z,"Bad coding style, IMHO.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r662588,662588,src/util.cpp
Diapolo,2012-04-09T21:42:41Z,"Alright, that can be changed and thanks :-D.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r662606,662606,src/util.cpp
Diapolo,2012-04-09T21:58:25Z,I re-added this ;).\n,https://github.com/bitcoin/bitcoin/pull/1066#discussion_r662685,662685,src/util.cpp
laanwj,2012-04-10T05:34:59Z,"I am very sure (but I don't have time to check with the C standard right now) that ="""" is the same as ={0}; and does exactly the same as memset: initialize the array to zeros. No security theater please, I'd like to keep it at """" which is clearest to developers.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r663961,663961,src/util.cpp
laanwj,2012-04-10T05:45:35Z,"See my other remark. Please keep it at ="""" or ={0} (equivalent), which does the same in ~5% of the characters. \n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r663973,663973,src/util.cpp
laanwj,2012-04-10T05:49:54Z,Does the name of the file matter here? It'll just be overwritten with a correct link right now. I don't think there a pressing need to add rename+delete logic.\n,https://github.com/bitcoin/bitcoin/pull/1066#discussion_r663975,663975,src/init.cpp
Diapolo,2012-04-10T06:42:54Z,"@laanwj You convinced me, the important part is not via which method an array is initialized as long as we just initialize it :).\n\nfrom http://www.cplusplus.com/doc/tutorial/arrays/\n""When declaring a regular array of local scope (within a function, for example), if we do not specify otherwise, its elements will not be initialized to any value by default, so their content will be undetermined un",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r664023,664023,src/util.cpp
laanwj,2012-04-10T07:13:03Z,"I wonder if we couldn't reduce all this wonderfully verbose code to about two lines of C++ string manipulation? :-) (or even better, reuse `strprintf`? At least by adding an intermediate function `vstrprintf` that takes a va_arg list)\nEdit: doesn't necessarily need to be in this patch though, just a comment in general\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r664099,664099,src/util.cpp
Diapolo,2012-04-10T07:19:56Z,"Every simplyfication is a great step, so I agree ... but I don't want to bloat this pull request :). I would like sipas boost pathm rework merged into master before my util updates get in, as he has a better GetDataDir() version.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r664121,664121,src/util.cpp
luke-jr,2012-04-10T16:58:11Z,"If you're going to rename pszModule, you need to do it here too...\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r666428,666428,src/util.cpp
Diapolo,2012-04-10T17:43:15Z,"Fixed, that went through because I used a Refactoring function, which didn't catch this ;). Thank you for watching.\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r666727,666727,src/util.cpp
sipa,2012-04-12T14:24:50Z,Is pszBuffer still used now?\n,https://github.com/bitcoin/bitcoin/pull/1066#discussion_r676490,676490,src/util.cpp
Diapolo,2012-04-12T16:06:13Z,"That must be a merge misstake I overlooked ... removed :), thanks for your hint!\n",https://github.com/bitcoin/bitcoin/pull/1066#discussion_r677000,677000,src/util.cpp
