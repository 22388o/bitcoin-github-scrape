[
  {
    "sha": "09dc073cff250afd47a3e219f35d1257add764e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOWRjMDczY2ZmMjUwYWZkNDdhM2UyMTlmMzVkMTI1N2FkZDc2NGU5",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-06-15T19:21:06Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-06-21T17:25:06Z"
      },
      "message": "[test] Allow AddrReceiver to be used more generally\n\nThe `on_addr` functionality of `AddrReceiver` tests logic specific to how the\naddr messages are set up in the test bodies. To allow other callers to also use\n`AddrReceiver`, only apply the assertion logic if the caller indicates\ndesirability by setting `test_addr_contents` to true when initializing the\nclass.",
      "tree": {
        "sha": "20e32c64475329c6ad5362bb352a4a8433c57e5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20e32c64475329c6ad5362bb352a4a8433c57e5d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09dc073cff250afd47a3e219f35d1257add764e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09dc073cff250afd47a3e219f35d1257add764e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/09dc073cff250afd47a3e219f35d1257add764e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09dc073cff250afd47a3e219f35d1257add764e9/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eb63b1db2c4d2877a10fce391cf2c0c60b6210f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb63b1db2c4d2877a10fce391cf2c0c60b6210f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eb63b1db2c4d2877a10fce391cf2c0c60b6210f3"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 14,
      "deletions": 6
    },
    "files": [
      {
        "sha": "a033027c71ee4fe6fd442534816d30d7034887a8",
        "filename": "test/functional/p2p_addr_relay.py",
        "status": "modified",
        "additions": 14,
        "deletions": 6,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09dc073cff250afd47a3e219f35d1257add764e9/test/functional/p2p_addr_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09dc073cff250afd47a3e219f35d1257add764e9/test/functional/p2p_addr_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addr_relay.py?ref=09dc073cff250afd47a3e219f35d1257add764e9",
        "patch": "@@ -23,14 +23,22 @@\n \n class AddrReceiver(P2PInterface):\n     num_ipv4_received = 0\n+    test_addr_contents = False\n+\n+    def __init__(self, test_addr_contents=False):\n+        super().__init__()\n+        self.test_addr_contents = test_addr_contents\n \n     def on_addr(self, message):\n         for addr in message.addrs:\n-            assert_equal(addr.nServices, 9)\n-            if not 8333 <= addr.port < 8343:\n-                raise AssertionError(\"Invalid addr.port of {} (8333-8342 expected)\".format(addr.port))\n-            assert addr.ip.startswith('123.123.123.')\n             self.num_ipv4_received += 1\n+            if(self.test_addr_contents):\n+                # relay_tests checks the content of the addr messages match\n+                # expectations based on the message creation in setup_addr_msg\n+                assert_equal(addr.nServices, 9)\n+                if not 8333 <= addr.port < 8343:\n+                    raise AssertionError(\"Invalid addr.port of {} (8333-8342 expected)\".format(addr.port))\n+                assert addr.ip.startswith('123.123.123.')\n \n \n class GetAddrStore(P2PInterface):\n@@ -101,7 +109,7 @@ def relay_tests(self):\n         num_receivers = 7\n         receivers = []\n         for _ in range(num_receivers):\n-            receivers.append(self.nodes[0].add_p2p_connection(AddrReceiver()))\n+            receivers.append(self.nodes[0].add_p2p_connection(AddrReceiver(test_addr_contents=True)))\n \n         # Keep this with length <= 10. Addresses from larger messages are not\n         # relayed.\n@@ -125,7 +133,7 @@ def relay_tests(self):\n         self.nodes[0].disconnect_p2ps()\n \n         self.log.info('Check relay of addresses received from outbound peers')\n-        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver(test_addr_contents=True))\n         full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n         msg = self.setup_addr_msg(2)\n         self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])"
      }
    ]
  },
  {
    "sha": "e8c67ea19ac4c0aec4a0b449ac3a4152f80dfff5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOGM2N2VhMTlhYzRjMGFlYzRhMGI0NDlhYzNhNDE1MmY4MGRmZmY1",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-06-15T19:29:46Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-06-22T01:05:27Z"
      },
      "message": "[test] Add functionality to AddrReceiver\n\nAdd two simple helper functions to `AddrReceiver` to support callers currently\nusing `GetAddrStore` [used in next commit].",
      "tree": {
        "sha": "643c86093d8635c5820285cbd77ac7014ff51380",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/643c86093d8635c5820285cbd77ac7014ff51380"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8c67ea19ac4c0aec4a0b449ac3a4152f80dfff5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8c67ea19ac4c0aec4a0b449ac3a4152f80dfff5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8c67ea19ac4c0aec4a0b449ac3a4152f80dfff5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8c67ea19ac4c0aec4a0b449ac3a4152f80dfff5/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "09dc073cff250afd47a3e219f35d1257add764e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09dc073cff250afd47a3e219f35d1257add764e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/09dc073cff250afd47a3e219f35d1257add764e9"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "34c5d7105389d540b0ae8298cbcc136c55178b2d",
        "filename": "test/functional/p2p_addr_relay.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8c67ea19ac4c0aec4a0b449ac3a4152f80dfff5/test/functional/p2p_addr_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8c67ea19ac4c0aec4a0b449ac3a4152f80dfff5/test/functional/p2p_addr_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addr_relay.py?ref=e8c67ea19ac4c0aec4a0b449ac3a4152f80dfff5",
        "patch": "@@ -40,6 +40,12 @@ def on_addr(self, message):\n                     raise AssertionError(\"Invalid addr.port of {} (8333-8342 expected)\".format(addr.port))\n                 assert addr.ip.startswith('123.123.123.')\n \n+    def addr_received(self):\n+        return self.num_ipv4_received != 0\n+\n+    def getaddr_received(self):\n+        return self.message_count['getaddr'] > 0\n+\n \n class GetAddrStore(P2PInterface):\n     getaddr_received = False"
      }
    ]
  },
  {
    "sha": "ef2f149bf2d12e2d14e441fdf701808f0f1dfb8e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjJmMTQ5YmYyZDEyZTJkMTRlNDQxZmRmNzAxODA4ZjBmMWRmYjhl",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-06-15T19:42:52Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-06-22T01:05:43Z"
      },
      "message": "[test] Update GetAddrStore callers to use AddrReceiver",
      "tree": {
        "sha": "13a5e74600722bba4d3c53fc836455ffbf643d2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/13a5e74600722bba4d3c53fc836455ffbf643d2b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef2f149bf2d12e2d14e441fdf701808f0f1dfb8e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef2f149bf2d12e2d14e441fdf701808f0f1dfb8e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef2f149bf2d12e2d14e441fdf701808f0f1dfb8e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef2f149bf2d12e2d14e441fdf701808f0f1dfb8e/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e8c67ea19ac4c0aec4a0b449ac3a4152f80dfff5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8c67ea19ac4c0aec4a0b449ac3a4152f80dfff5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e8c67ea19ac4c0aec4a0b449ac3a4152f80dfff5"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "1ffb2c774b6801da0dd5b7e827c2aa8237b5b5d3",
        "filename": "test/functional/p2p_addr_relay.py",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef2f149bf2d12e2d14e441fdf701808f0f1dfb8e/test/functional/p2p_addr_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef2f149bf2d12e2d14e441fdf701808f0f1dfb8e/test/functional/p2p_addr_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addr_relay.py?ref=ef2f149bf2d12e2d14e441fdf701808f0f1dfb8e",
        "patch": "@@ -140,7 +140,7 @@ def relay_tests(self):\n \n         self.log.info('Check relay of addresses received from outbound peers')\n         inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver(test_addr_contents=True))\n-        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n         msg = self.setup_addr_msg(2)\n         self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n         self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n@@ -156,7 +156,7 @@ def relay_tests(self):\n         assert_equal(inbound_peer.num_ipv4_received, 2)\n \n         self.log.info('Check address relay to outbound peers')\n-        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=1, connection_type=\"block-relay-only\")\n         msg3 = self.setup_addr_msg(2)\n         self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n \n@@ -170,17 +170,17 @@ def relay_tests(self):\n     def getaddr_tests(self):\n         self.log.info('Test getaddr behavior')\n         self.log.info('Check that we send a getaddr message upon connecting to an outbound-full-relay peer')\n-        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n         full_outbound_peer.sync_with_ping()\n-        assert full_outbound_peer.getaddr_received\n+        assert full_outbound_peer.getaddr_received()\n \n         self.log.info('Check that we do not send a getaddr message upon connecting to a block-relay-only peer')\n-        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=1, connection_type=\"block-relay-only\")\n         block_relay_peer.sync_with_ping()\n-        assert_equal(block_relay_peer.getaddr_received, False)\n+        assert_equal(block_relay_peer.getaddr_received(), False)\n \n         self.log.info('Check that we answer getaddr messages only from inbound peers')\n-        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n         inbound_peer.sync_with_ping()\n \n         # Add some addresses to addrman\n@@ -196,7 +196,7 @@ def getaddr_tests(self):\n \n         self.mocktime += 5 * 60\n         self.nodes[0].setmocktime(self.mocktime)\n-        inbound_peer.wait_until(inbound_peer.addr_received)\n+        inbound_peer.wait_until(lambda: inbound_peer.addr_received() is True)\n \n         assert_equal(full_outbound_peer.num_ipv4_received, 0)\n         assert_equal(block_relay_peer.num_ipv4_received, 0)\n@@ -210,9 +210,9 @@ def blocksonly_mode_tests(self):\n         self.mocktime = int(time.time())\n \n         self.log.info('Check that we send getaddr messages')\n-        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(AddrReceiver(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n         full_outbound_peer.sync_with_ping()\n-        assert full_outbound_peer.getaddr_received\n+        assert full_outbound_peer.getaddr_received()\n \n         self.log.info('Check that we relay address messages')\n         addr_source = self.nodes[0].add_p2p_connection(P2PInterface())"
      }
    ]
  },
  {
    "sha": "1d8193e2a2950fd957654b601e85ab888899c394",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDgxOTNlMmEyOTUwZmQ5NTc2NTRiNjAxZTg1YWI4ODg4OTljMzk0",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-06-21T17:05:05Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-06-22T01:05:48Z"
      },
      "message": "[test] Remove GetAddrStore class",
      "tree": {
        "sha": "45acd9b68be0a44cfe8c01e533b2b704fa8cf172",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45acd9b68be0a44cfe8c01e533b2b704fa8cf172"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d8193e2a2950fd957654b601e85ab888899c394",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d8193e2a2950fd957654b601e85ab888899c394",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d8193e2a2950fd957654b601e85ab888899c394",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d8193e2a2950fd957654b601e85ab888899c394/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef2f149bf2d12e2d14e441fdf701808f0f1dfb8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef2f149bf2d12e2d14e441fdf701808f0f1dfb8e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef2f149bf2d12e2d14e441fdf701808f0f1dfb8e"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 0,
      "deletions": 15
    },
    "files": [
      {
        "sha": "7c144af2e2820bad8b449f101f83d5304fec465d",
        "filename": "test/functional/p2p_addr_relay.py",
        "status": "modified",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d8193e2a2950fd957654b601e85ab888899c394/test/functional/p2p_addr_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d8193e2a2950fd957654b601e85ab888899c394/test/functional/p2p_addr_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addr_relay.py?ref=1d8193e2a2950fd957654b601e85ab888899c394",
        "patch": "@@ -47,21 +47,6 @@ def getaddr_received(self):\n         return self.message_count['getaddr'] > 0\n \n \n-class GetAddrStore(P2PInterface):\n-    getaddr_received = False\n-    num_ipv4_received = 0\n-\n-    def on_getaddr(self, message):\n-        self.getaddr_received = True\n-\n-    def on_addr(self, message):\n-        for addr in message.addrs:\n-            self.num_ipv4_received += 1\n-\n-    def addr_received(self):\n-        return self.num_ipv4_received != 0\n-\n-\n class AddrTest(BitcoinTestFramework):\n     counter = 0\n     mocktime = int(time.time())"
      }
    ]
  },
  {
    "sha": "6168eb06b2044f00f18727b955b672fc91c60bd7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTY4ZWIwNmIyMDQ0ZjAwZjE4NzI3Yjk1NWI2NzJmYzkxYzYwYmQ3",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-06-21T17:13:37Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-06-22T01:05:54Z"
      },
      "message": "[test] Prevent intermittent issue\n\nSince m_next_addr_send is on a Poisson distribution, increase the mocktime bump\nto ensure we don't experience flakiness in the tests. Closes #22243.",
      "tree": {
        "sha": "a28785c922518ac8cb8a935c0c830d47d15d55e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a28785c922518ac8cb8a935c0c830d47d15d55e6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6168eb06b2044f00f18727b955b672fc91c60bd7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6168eb06b2044f00f18727b955b672fc91c60bd7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6168eb06b2044f00f18727b955b672fc91c60bd7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6168eb06b2044f00f18727b955b672fc91c60bd7/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d8193e2a2950fd957654b601e85ab888899c394",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d8193e2a2950fd957654b601e85ab888899c394",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d8193e2a2950fd957654b601e85ab888899c394"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1a414959b9039474d1d83c2241a405148225fdbb",
        "filename": "test/functional/p2p_addr_relay.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6168eb06b2044f00f18727b955b672fc91c60bd7/test/functional/p2p_addr_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6168eb06b2044f00f18727b955b672fc91c60bd7/test/functional/p2p_addr_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addr_relay.py?ref=6168eb06b2044f00f18727b955b672fc91c60bd7",
        "patch": "@@ -78,7 +78,7 @@ def setup_addr_msg(self, num):\n     def send_addr_msg(self, source, msg, receivers):\n         source.send_and_ping(msg)\n         # pop m_next_addr_send timer\n-        self.mocktime += 5 * 60\n+        self.mocktime += 10 * 60\n         self.nodes[0].setmocktime(self.mocktime)\n         for peer in receivers:\n             peer.sync_send_with_ping()"
      }
    ]
  }
]