[
  {
    "sha": "27859f75e420fdaf16dd8b41a13734d9dbd7ecd0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzg1OWY3NWU0MjBmZGFmMTZkZDhiNDFhMTM3MzRkOWRiZDdlY2Qw",
    "commit": {
      "author": {
        "name": "Ben Carman",
        "email": "benthecarman@live.com",
        "date": "2019-01-08T13:33:52Z"
      },
      "committer": {
        "name": "Ben Carman",
        "email": "benthecarman@live.com",
        "date": "2019-01-08T13:33:52Z"
      },
      "message": "rpc: Added ability to remove watch only addresses",
      "tree": {
        "sha": "c536fd3633bd1492336f4152f9529993497f7f90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c536fd3633bd1492336f4152f9529993497f7f90"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27859f75e420fdaf16dd8b41a13734d9dbd7ecd0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEECtg4d8HwzR7pvWYK18x3C4H9IqgFAlw0psAACgkQ18x3C4H9\nIqhNbgv8CWy/nShbWBEpKyjPL8BTQdUoEzc4BvISfNpfB69dj8+yYVWVyt6CFYHx\nMdb+EH3g5IxyYBqiJywyIBQozAqztBw25k0ccT81YlBhGm27/2hWrE7Dc56Vd0Ga\ncETNVUEm6TY6CYCj0X2Xe47WtCSeYFqb1T/cbwGm6SrNmmHgxs3AFHgZkvhuo5iF\nJe6qDxGlkoUKeH4K+7mYXV6SjEjJub08beeD/d6JdttUIbl7hOFCbSpdLFc14j2Z\n8zYlLgjB9kBKP5Bj5i6btjmoy5v/94UtQLoEa/zRcDfX15C8qKHkthjGw/zpKnAm\nRK+AE1HmU9+vwfvg8DpFjhp2NFTsLmfsxbBh+BQW1IPP6kR9ahXOk2afPBhD3TsD\njt1tiYAIktZNhGl9ohVerd17MEU0FN+LUBQFmNVxgW/si9Wo1Dxa80Ag4WVRGjb+\nbNi/EXndVkuJluKTyTCq3QOccpm5OWu2Xy1kAf5vXZWi+y2twf4q6aS2WcsKAtap\ncoExr1Hi\n=v2LH\n-----END PGP SIGNATURE-----",
        "payload": "tree c536fd3633bd1492336f4152f9529993497f7f90\nparent 29a9f07743500322498592b62134d6fa3d0b1a99\nauthor Ben Carman <benthecarman@live.com> 1546954432 -0600\ncommitter Ben Carman <benthecarman@live.com> 1546954432 -0600\n\nrpc: Added ability to remove watch only addresses\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27859f75e420fdaf16dd8b41a13734d9dbd7ecd0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27859f75e420fdaf16dd8b41a13734d9dbd7ecd0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27859f75e420fdaf16dd8b41a13734d9dbd7ecd0/comments",
    "author": {
      "login": "benthecarman",
      "id": 15256660,
      "node_id": "MDQ6VXNlcjE1MjU2NjYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/15256660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benthecarman",
      "html_url": "https://github.com/benthecarman",
      "followers_url": "https://api.github.com/users/benthecarman/followers",
      "following_url": "https://api.github.com/users/benthecarman/following{/other_user}",
      "gists_url": "https://api.github.com/users/benthecarman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benthecarman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benthecarman/subscriptions",
      "organizations_url": "https://api.github.com/users/benthecarman/orgs",
      "repos_url": "https://api.github.com/users/benthecarman/repos",
      "events_url": "https://api.github.com/users/benthecarman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benthecarman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "benthecarman",
      "id": 15256660,
      "node_id": "MDQ6VXNlcjE1MjU2NjYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/15256660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benthecarman",
      "html_url": "https://github.com/benthecarman",
      "followers_url": "https://api.github.com/users/benthecarman/followers",
      "following_url": "https://api.github.com/users/benthecarman/following{/other_user}",
      "gists_url": "https://api.github.com/users/benthecarman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benthecarman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benthecarman/subscriptions",
      "organizations_url": "https://api.github.com/users/benthecarman/orgs",
      "repos_url": "https://api.github.com/users/benthecarman/repos",
      "events_url": "https://api.github.com/users/benthecarman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benthecarman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29a9f07743500322498592b62134d6fa3d0b1a99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29a9f07743500322498592b62134d6fa3d0b1a99",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29a9f07743500322498592b62134d6fa3d0b1a99"
      }
    ],
    "stats": {
      "total": 113,
      "additions": 112,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f9cce63a07c3c89654eeb8d0bae336da6db599d9",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27859f75e420fdaf16dd8b41a13734d9dbd7ecd0/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27859f75e420fdaf16dd8b41a13734d9dbd7ecd0/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=27859f75e420fdaf16dd8b41a13734d9dbd7ecd0",
        "patch": "@@ -343,6 +343,89 @@ UniValue importaddress(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static void RemoveAddress(CWallet*, const CTxDestination& dest);\n+static void RemoveScript(CWallet* const pwallet, const CScript& script) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n+{\n+    if (::IsMine(*pwallet, script) == ISMINE_SPENDABLE)\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"The wallet contains the private key for this address or script\");\n+    \n+    pwallet->MarkDirty();\n+\n+    if (pwallet->HaveWatchOnly(script) && !pwallet->RemoveWatchOnly(script)) \n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Error removing address from wallet\");\n+    \n+    CTxDestination destination;\n+    if (ExtractDestination(script, destination))\n+        pwallet->DelAddressBook(destination);\n+}\n+\n+static void RemoveAddress(CWallet* const pwallet, const CTxDestination& dest) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n+{\n+    CScript script = GetScriptForDestination(dest);\n+    RemoveScript(pwallet, script);\n+    // remove from address book\n+    if (IsValidDestination(dest))\n+        pwallet->DelAddressBook(dest);\n+}\n+\n+UniValue removeaddress(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) \n+        return NullUniValue;\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"removeaddress\",\n+                \"\\nRemoves an address that was being watched as if it were in your wallet but was not being used to spend. Requires a new wallet backup.\\n\",\n+                {\n+                    {\"address\", RPCArg::Type::STR, /* opt */ false, /* default_val */ \"\", \"The Bitcoin address\"},\n+                    {\"rescan\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"true\", \"Rescan the wallet for transactions\"},\n+                }}\n+                .ToString() +\n+            \"\\nNote: This call can take over an hour to complete if rescan is true, during that time, other rpc calls\\n\"\n+            \"may report that the removed address exists but related transactions are still missing, leading to temporarily incorrect/bogus balances and unspent outputs until rescan completes.\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nRemove an address with rescan\\n\"\n+            + HelpExampleCli(\"removeaddress\", \"\\\"myaddress\\\"\") +\n+            \"\\nRemove an address without rescan\\n\"\n+            + HelpExampleCli(\"removeaddress\", \"\\\"myaddress\\\" false\") +\n+            \"\\nAs a JSON-RPC call\\n\"\n+            + HelpExampleRpc(\"importaddress\", \"\\\"myaddress\\\", false\")\n+        );\n+\n+    // Whether to perform rescan after import\n+    bool fRescan = true;\n+    if (!request.params[1].isNull())\n+        fRescan = request.params[1].get_bool();\n+\n+    if (fRescan && fPruneMode)\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+\n+    WalletRescanReserver reserver(pwallet);\n+    if (fRescan && !reserver.reserve()) \n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n+\n+    {\n+        auto locked_chain = pwallet->chain().lock();\n+        LOCK(pwallet->cs_wallet);\n+\n+        CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+        if (IsValidDestination(dest)) \n+            RemoveAddress(pwallet, dest);\n+        else \n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+        \n+    }\n+    if (fRescan) {\n+        RescanWallet(*pwallet, reserver);\n+        pwallet->ReacceptWalletTransactions();\n+    }\n+\n+    return NullUniValue;\n+}\n+\n UniValue importprunedfunds(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);"
      },
      {
        "sha": "8ca5b1965144f1582498a1936be6313edcd8e13e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27859f75e420fdaf16dd8b41a13734d9dbd7ecd0/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27859f75e420fdaf16dd8b41a13734d9dbd7ecd0/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=27859f75e420fdaf16dd8b41a13734d9dbd7ecd0",
        "patch": "@@ -4137,6 +4137,7 @@ UniValue dumpwallet(const JSONRPCRequest& request);\n UniValue importwallet(const JSONRPCRequest& request);\n UniValue importprunedfunds(const JSONRPCRequest& request);\n UniValue removeprunedfunds(const JSONRPCRequest& request);\n+UniValue removeaddress(const JSONRPCRequest& request);\n UniValue importmulti(const JSONRPCRequest& request);\n \n // clang-format off\n@@ -4184,6 +4185,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"listwallets\",                      &listwallets,                   {} },\n     { \"wallet\",             \"loadwallet\",                       &loadwallet,                    {\"filename\"} },\n     { \"wallet\",             \"lockunspent\",                      &lockunspent,                   {\"unlock\",\"transactions\"} },\n+    { \"wallet\",             \"removeaddress\",                    &removeaddress,                 {\"address\",\"rescan\"} },\n     { \"wallet\",             \"removeprunedfunds\",                &removeprunedfunds,             {\"txid\"} },\n     { \"wallet\",             \"rescanblockchain\",                 &rescanblockchain,              {\"start_height\", \"stop_height\"} },\n     { \"wallet\",             \"sendmany\",                         &sendmany,                      {\"dummy\",\"amounts\",\"minconf\",\"comment\",\"subtractfeefrom\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },"
      },
      {
        "sha": "369e60f9c758e1ca9fd8dce71da4311055df034d",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 1,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27859f75e420fdaf16dd8b41a13734d9dbd7ecd0/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27859f75e420fdaf16dd8b41a13734d9dbd7ecd0/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=27859f75e420fdaf16dd8b41a13734d9dbd7ecd0",
        "patch": "@@ -875,6 +875,28 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     return true;\n }\n \n+bool CWallet::RemoveFromWallet(const CTransaction& tx)\n+{\n+    if (!WalletBatch(*database).EraseTx(tx.GetHash()))\n+        return false;\n+\n+    WalletLogPrintf(\"RemoveFromWallet %s\\n\", tx.GetHash().ToString());\n+\n+    // Notify UI of new or updated transaction\n+    NotifyTransactionChanged(this, tx.GetHash(), CT_DELETED);\n+\n+    // Notify an external script when a wallet transaction comes in or is updated\n+    std::string strCmd = gArgs.GetArg(\"-walletnotify\", \"\");\n+\n+    if (!strCmd.empty()) {\n+        boost::replace_all(strCmd, \"%s\", tx.GetHash().GetHex());\n+        std::thread t(runCommand, strCmd);\n+        t.detach(); // thread runs free\n+    }\n+\n+    return true;\n+}\n+\n void CWallet::LoadToWallet(const CWalletTx& wtxIn)\n {\n     uint256 hash = wtxIn.GetHash();\n@@ -947,7 +969,10 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockI\n             if (pIndex != nullptr)\n                 wtx.SetMerkleBranch(pIndex, posInBlock);\n \n-            return AddToWallet(wtx, false);\n+            if (IsMine(tx) || IsFromMe(tx))\n+                return AddToWallet(wtx, false);\n+\n+            return RemoveFromWallet(tx);\n         }\n     }\n     return false;"
      },
      {
        "sha": "2ce60c8550b022586c36adc01c5b82be7277d1cf",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27859f75e420fdaf16dd8b41a13734d9dbd7ecd0/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27859f75e420fdaf16dd8b41a13734d9dbd7ecd0/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=27859f75e420fdaf16dd8b41a13734d9dbd7ecd0",
        "patch": "@@ -894,6 +894,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n \n     void MarkDirty();\n     bool AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose=true);\n+    bool CWallet::RemoveFromWallet(const CTransaction& tx);\n     void LoadToWallet(const CWalletTx& wtxIn) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void TransactionAddedToMempool(const CTransactionRef& tx) override;\n     void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex *pindex, const std::vector<CTransactionRef>& vtxConflicted) override;"
      }
    ]
  }
]