[
  {
    "sha": "f1511626035023f6c371c43c1c30bc85a7371916",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTUxMTYyNjAzNTAyM2Y2YzM3MWM0M2MxYzMwYmM4NWE3MzcxOTE2",
    "commit": {
      "author": {
        "name": "Kostiantyn Stepaniuk",
        "email": "kostya.stepanyuk@gmail.com",
        "date": "2018-11-01T17:44:37Z"
      },
      "committer": {
        "name": "Kostiantyn Stepaniuk",
        "email": "kostya.stepanyuk@gmail.com",
        "date": "2018-11-01T22:46:02Z"
      },
      "message": "Fix height serialization inside script of coinbase input\n\nAccording to the specification https://github.com/bitcoin/bips/blob/master/bip-0034.mediawiki,\nheight is serialized as: \"first byte is number of bytes in the number, ...\nfollowing bytes are little-endian representation of the number\"\n\nHowever, `CScript() << nHeight` invokes `push_int64` function which has\ndifferent serialization strategy for numbers smaller than 17.\n\nThe current implementation doesn't cause any issues as BIP34 is enabled from height 227931.\nBut, if in regtest set `consensus.BIP34Height=1` (which can be convenient to test BIP34),\nmost of the tests will fail as they follow the specification.",
      "tree": {
        "sha": "63c955acefe32015dd6936280f8e6990b67ed86f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/63c955acefe32015dd6936280f8e6990b67ed86f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f1511626035023f6c371c43c1c30bc85a7371916",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1511626035023f6c371c43c1c30bc85a7371916",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f1511626035023f6c371c43c1c30bc85a7371916",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1511626035023f6c371c43c1c30bc85a7371916/comments",
    "author": {
      "login": "kostyantyn",
      "id": 296795,
      "node_id": "MDQ6VXNlcjI5Njc5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/296795?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kostyantyn",
      "html_url": "https://github.com/kostyantyn",
      "followers_url": "https://api.github.com/users/kostyantyn/followers",
      "following_url": "https://api.github.com/users/kostyantyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/kostyantyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kostyantyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kostyantyn/subscriptions",
      "organizations_url": "https://api.github.com/users/kostyantyn/orgs",
      "repos_url": "https://api.github.com/users/kostyantyn/repos",
      "events_url": "https://api.github.com/users/kostyantyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kostyantyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kostyantyn",
      "id": 296795,
      "node_id": "MDQ6VXNlcjI5Njc5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/296795?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kostyantyn",
      "html_url": "https://github.com/kostyantyn",
      "followers_url": "https://api.github.com/users/kostyantyn/followers",
      "following_url": "https://api.github.com/users/kostyantyn/following{/other_user}",
      "gists_url": "https://api.github.com/users/kostyantyn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kostyantyn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kostyantyn/subscriptions",
      "organizations_url": "https://api.github.com/users/kostyantyn/orgs",
      "repos_url": "https://api.github.com/users/kostyantyn/repos",
      "events_url": "https://api.github.com/users/kostyantyn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kostyantyn/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5049f7f7a9e777c89eb804d6b2d003c4336fbe8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5049f7f7a9e777c89eb804d6b2d003c4336fbe8e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5049f7f7a9e777c89eb804d6b2d003c4336fbe8e"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "5e74f59bcde93ebafeab0f4c82aefb80030520b8",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f1511626035023f6c371c43c1c30bc85a7371916/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f1511626035023f6c371c43c1c30bc85a7371916/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=f1511626035023f6c371c43c1c30bc85a7371916",
        "patch": "@@ -158,7 +158,7 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     coinbaseTx.vout.resize(1);\n     coinbaseTx.vout[0].scriptPubKey = scriptPubKeyIn;\n     coinbaseTx.vout[0].nValue = nFees + GetBlockSubsidy(nHeight, chainparams.GetConsensus());\n-    coinbaseTx.vin[0].scriptSig = CScript() << nHeight << OP_0;\n+    coinbaseTx.vin[0].scriptSig = CScript() << CScriptNum::serialize(nHeight) << OP_0;\n     pblock->vtx[0] = MakeTransactionRef(std::move(coinbaseTx));\n     pblocktemplate->vchCoinbaseCommitment = GenerateCoinbaseCommitment(*pblock, pindexPrev, chainparams.GetConsensus());\n     pblocktemplate->vTxFees[0] = -nFees;\n@@ -445,7 +445,7 @@ void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned\n     ++nExtraNonce;\n     unsigned int nHeight = pindexPrev->nHeight+1; // Height first in coinbase required for block.version=2\n     CMutableTransaction txCoinbase(*pblock->vtx[0]);\n-    txCoinbase.vin[0].scriptSig = (CScript() << nHeight << CScriptNum(nExtraNonce)) + COINBASE_FLAGS;\n+    txCoinbase.vin[0].scriptSig = (CScript() << CScriptNum::serialize(nHeight) << CScriptNum(nExtraNonce)) + COINBASE_FLAGS;\n     assert(txCoinbase.vin[0].scriptSig.size() <= 100);\n \n     pblock->vtx[0] = MakeTransactionRef(std::move(txCoinbase));"
      },
      {
        "sha": "0ded970d6f60be31c0f3ba325b67104f2ef37773",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f1511626035023f6c371c43c1c30bc85a7371916/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f1511626035023f6c371c43c1c30bc85a7371916/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=f1511626035023f6c371c43c1c30bc85a7371916",
        "patch": "@@ -3286,7 +3286,7 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n     // Enforce rule that the coinbase starts with serialized block height\n     if (nHeight >= consensusParams.BIP34Height)\n     {\n-        CScript expect = CScript() << nHeight;\n+        CScript expect = CScript() << CScriptNum::serialize(nHeight);\n         if (block.vtx[0]->vin[0].scriptSig.size() < expect.size() ||\n             !std::equal(expect.begin(), expect.end(), block.vtx[0]->vin[0].scriptSig.begin())) {\n             return state.DoS(100, false, REJECT_INVALID, \"bad-cb-height\", false, \"block height mismatch in coinbase\");"
      },
      {
        "sha": "7d7d251765361ed5d68fd9e7111bf4d0419f5bc5",
        "filename": "test/functional/p2p_sendheaders.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f1511626035023f6c371c43c1c30bc85a7371916/test/functional/p2p_sendheaders.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f1511626035023f6c371c43c1c30bc85a7371916/test/functional/p2p_sendheaders.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_sendheaders.py?ref=f1511626035023f6c371c43c1c30bc85a7371916",
        "patch": "@@ -490,7 +490,7 @@ def test_nonnull_locators(self, test_node, inv_node):\n \n         # Now announce a header that forks the last two blocks\n         tip = blocks[0].sha256\n-        height -= 1\n+        height -= 2\n         blocks = []\n \n         # Create extra blocks for later"
      }
    ]
  }
]