laanwj,2014-01-13T17:16:26Z,Needs rebase after #3516\n,https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-32189832,32189832,
sipa,2014-01-13T17:17:22Z,Will rebase tonight.\n,https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-32189923,32189923,
sipa,2014-01-18T20:49:13Z,"Did a sync from scratch using this branch (plus #3517) on mainnet, a significant part of which under valgrind. Seems to work fine, though sometimes long chains of accumulated orphans are connected, resulting in cs_main being locked for a long time. I'll try to fix that independently.\n",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-32692633,32692633,
sipa,2014-01-27T21:36:04Z,Rebase after logging changes.\n,https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-33425618,33425618,
jgarzik,2014-01-29T19:52:43Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-33623127,33623127,
laanwj,2014-01-30T13:22:42Z,"I did some testing with block syncs, no problems found, worked fine for me.\n",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-33686852,33686852,
sipa,2014-01-30T13:26:45Z,"There is one potential problem here, namely that the many orphans can result in very long chains (I've seen up to ~400)  of blocks being connected within a single cs_main lock, essentially making the program look frozen. This can be solved by pushing some locks down, but may need some discussion first.\n\nI could easily submit the limit-orphans commit as a separate pull request though, as I suppos",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-33687117,33687117,
BitcoinPullTester,2014-02-08T16:31:54Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f59d8f0b644d49324cabd19c58cf2262d49e1392 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-34548315,34548315,
rebroad,2014-02-23T01:06:25Z,Regarding slowing down the download of the small blocks - how about factoring in the block size and incrementally changing how many peers are used as the block sizes get larger?\n,https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-35820557,35820557,
rebroad,2014-02-26T23:29:33Z,"I've been testing this a few days now. The stuck block detection doesn't seem to be working:-\n\n2014-02-26 22:24:01 Requesting block 00000000000000014e06412631ff67305cde77c6631dc58a2ce35308558cee05 from 216.99.101.192:8333\n2014-02-26 22:28:31 ResendWalletTransactions()\n2014-02-26 22:54:16 socket recv error 110\n2014-02-26 22:54:17 receive version message: /Satoshi:0.8.6/: version 70001, blocks=",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-36191367,36191367,
rebroad,2014-03-01T20:37:44Z,"So far upon testing this code, I've not yet seen it downloading blocks from more than one node. There's not even any code to send a getblocks to more than one node from what I can tell. If a node is deemed to be unresponsive it's forcefully disconnected. How come this is ok, and yet my pull request to disconnect nodes sending blocks my nodes already had was considered not ok?\n",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-36435818,36435818,
sipa,2014-03-01T20:44:26Z,"This does not do parallel block download yet, as that requires\nheaders-first sync. This is a step towards that, though.\n\nAnd disconnecting unresponsive peers is fine - it's the only way to not\nwaste their bandwidth if we don't need/want requested blocks anymore.\n\nWhat is not fine, is disconecting peers because they're the second ones to\nrespond to a block that we requested twice. We should ",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-36435987,36435987,
rebroad,2014-03-02T00:27:28Z,"@sipa I deleted my previous comment about ""already have"" messages - none seen with this patch so far! But... a misbehaving node could still send random blocks if it wanted to, so at some point in the future I suspect we'll want to set that sort of behaviour as misbehaviour - maybe even as part of this pull request...?\n",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-36441709,36441709,
sipa,2014-03-02T00:44:13Z,"@rebroad That's a good question. The problem is that the current code actually does broadcast blocks sometimes without inv, namely newly mined blocks which are certain not be exist anywhere else.\n",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-36442056,36442056,
rebroad,2014-03-02T07:41:40Z,"why would it broadcast a block without broadcasting the inv first?\n\nAs an aside note, I notice the block download got stuck today, and wasn't able to recover - it was still downloading blocks that were being advertised (i.e. the latest block mined), but the initial block download stayed stuck.",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-36448412,36448412,
rebroad,2014-03-02T09:09:02Z,"@sipa Re misbehaviour, it could just be for nodes sending unsolicited blocks that the node already has. Perhaps +30.\n",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-36449673,36449673,
rebroad,2014-03-08T00:15:09Z,"The stuck download detection seems like it might not be working.\n",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-37081770,37081770,
rebroad,2014-03-30T04:08:50Z,"I think this has been pulled prematurely. It's still got problems as I mentioned above. For one, it doesn't resume download if the OS is suspended and resumed.",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-39017091,39017091,
laanwj,2014-03-30T07:47:02Z,"@rebroad can you post new problems and bug reports in new issues? If you just dump them into existing, closed issues they will probably get lost.\n",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-39019879,39019879,
laanwj,2014-03-30T10:32:20Z,"And IMO, going toward headers-first / parallel block download is the single most important point in continued development of Bitcoin Core right now.\n\nAs this is pull is an important step in that direction, this was prioritized to be merged as soon as possible after 0.9.0 was released.\n\nIf a little temporary inconvenience while the kinks are worked out is too much for you, I suggest staying wit",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-39022308,39022308,
sipa,2014-03-30T15:01:14Z,"The stuck download detection here is just a very simple prototype. It only uses some hardcoded constants as thresholds. The purpose is turning it into a detection for one peer being slower than the other, once actual parallel downloading is there.\n\n@rebroad  Is this a regression introduced by this pullreq, or a pre-existing problem that you expected to be fixed by this but wasn't?\n",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-39027526,39027526,
rebroad,2014-03-31T17:27:06Z,@sipa it's a regression.\n,https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-39116197,39116197,
laanwj,2014-04-04T07:27:42Z,"I suspended my PC with bitcoin running a few nights and it had no problem recovering connections when re-awakened.\n\n@rebroad Do you perhaps have a dynamic IP, that changes if you computer was suspended for a while? If so Bitcoin indeed doesn't cope with it too well (it will AFAIK still advertise the old address so you won't get incoming connections). But that's not a regression or new issue.\n",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-39538408,39538408,
rebroad,2014-04-06T03:29:41Z,"@laanwj yes, my IP address changes, but I don't accept incoming connections either. The getting stuck after a suspend didn't happen before I applied this pullreq AFAIK.\n",https://github.com/bitcoin/bitcoin/pull/3514#issuecomment-39657511,39657511,
rebroad,2014-02-23T01:08:33Z,Why was this here?\n,https://github.com/bitcoin/bitcoin/pull/3514#discussion_r9973890,9973890,src/main.cpp
rebroad,2014-02-26T23:31:13Z,Magic number... why so high? In the later stages of block download I'd have thought a number close to 1 would be appropriate.\n,https://github.com/bitcoin/bitcoin/pull/3514#discussion_r10105319,10105319,src/main.h
sipa,2014-02-28T13:40:31Z,"Because blocks used to be tracked using the (weak) mapAlreadyAskedFor mechanism, but this patch introduces a better way, that retains information about whom it was asked from.\n",https://github.com/bitcoin/bitcoin/pull/3514#discussion_r10163903,10163903,src/main.cpp
sipa,2014-03-01T22:26:50Z,"That would be a further optimization, yes.\n",https://github.com/bitcoin/bitcoin/pull/3514#discussion_r10192843,10192843,src/main.h
rebroad,2016-10-28T09:28:22Z,Really don't like the use of functions that clearly don't do what their name suggests they do.\n\nWhat parts of this function are needed? And what would the function be called if it did what it is needing to do here?\n,https://github.com/bitcoin/bitcoin/pull/3514#discussion_r85498800,85498800,src/main.cpp
