gavinandresen,2015-06-26T12:28:15Z,"The per-message size sanity checking commit is also pull request #6261 \n\nThe mocktime fixes are pull request #6337 : MERGED, commits removed.\n\nThe remove coinbase payment key from keypool commit will be obsolete if #5994 is merged  : MERGED, commit removed.\n",https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-115660412,115660412,
mjamin,2015-06-26T13:49:09Z,> **Higher-level discussions on the merits of BIP 101 versus other proposals belongs on the bitcoin-dev mailing list**\n,https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-115696820,115696820,
petertodd,2015-06-26T14:28:38Z,"Note to readers: in its current form there is a near zero chance of this getting merged due to a number of BIP-level issues in addition to debate about the patch itself. For instance, Gavin has never given any details about testing; at minimum we'd need a BIP16 style quality assurance document. We also frown on writing software with building expiration dates, let alone expiration dates that trigge",https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-115708493,115708493,
sipa,2015-06-26T16:10:20Z,"> There is rough (but not 100%) consensus that at some point fees will rise ""high enough"" that the 1MB blocksize limit will have to be raised, but no consensus on what that point should be and no consensus on any process to determine what that point should be.\n\nSee the mailinglist for why I totally disagree with the fact that fear of higher fees are a reason to increase the block size. If fees r",https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-115743184,115743184,
laanwj,2015-06-26T17:05:02Z,"I'm happy to see the code for review openly here, but definitely do **not** take the block size discussion here.\n",https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-115765502,115765502,
theuni,2015-06-26T17:39:03Z,"Only had a minute to look over it, but I added a few comments about code for the sake of reviewing code. Policies and numbers can be discussed elsewhere, it's reasonable to critique the code independent of those discussions.\n\nI'll give it a thorough review over the weekend.\n",https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-115803511,115803511,
gavinandresen,2015-06-26T18:15:54Z,"I'm going to delete a few comments from @btcdrak and @rebroad that don't follow the ""comment on the code-- high-level discussion goes to bitcoin-dev mailing list""\n\n@theuni : thanks for the review-- this was forward-ported from 0.10 to 0.11 to git HEAD. It would be helpful if there was a design document for libbitcoinconsensus that I could code against...\n",https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-115822383,115822383,
theuni,2015-06-26T21:47:44Z,"@gavinandresen Point taken. I'm not sure if we're quite to that point yet, though. We're still in the ""move things around so we can do something useful"" part and not quite to the ""what useful things to do and how"" part.\n\nIn particular for this PR, consensus functions need to work statelessly, so something like CheckTransaction() should have deterministic results depending only on its parameters ",https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-115899402,115899402,
sandakersmann,2015-06-28T19:09:29Z,concept ACK\n,https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-116316264,116316264,
gavinandresen,2015-06-29T21:02:42Z,"Reworked to fix @theuni code review comments:\n- Made chainparams constant: main.cpp holds a sizeForkTime global (that behaves like a std::atomic)\n- Moved block size fork params/methods to consensus/params.h\n\nRegarding your comment on how peers that send over-maximum-blocks are handled:\n\nThat is a behavior change, but only if you send blocks between 1 and 2 megabytes before the fork switchove",https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-116845766,116845766,
gavinandresen,2015-06-29T23:04:30Z,@theuni : new Travis error:\n`{standard input}: Fatal error: can't close test/test_test_bitcoin-sanity_tests.o: No space left on device`\n\nIs there anything I can do to fix that?\n,https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-116875499,116875499,
theuni,2015-06-29T23:32:10Z,"@gavinandresen given that it only happened on the one builder and i've never seen it before, I'd chalk that up to a freak occurrence unless it becomes a trend. Fire it off again?\n",https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-116879001,116879001,
gavinandresen,2015-06-30T13:33:12Z,"It was, indeed, a spurious Travis error.\n\nA note on the Java comparison tool: I believe it will continue to work with this pull request ""forever"" because it produces down-version blocks for testing; it will never trigger the supermajority-of-miners condition to make bigger blocks legal.\n",https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-117186425,117186425,
dgenr8,2015-07-03T16:44:12Z,"Been running on mainnet for 1 day.  Got a lot of ""Oversized addr"" disconnects (65% of all connections, in bursts).  Don't know what was being received though.  Also got one ""Oversized headers"" disconnect.\n",https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-118391078,118391078,
gavinandresen,2015-07-15T15:18:01Z,Closing for now; too painful to try to keep up with the movement of code from main.h to policy/policy.h.\n,https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-121649458,121649458,
jeffreyrufino,2018-02-20T01:44:22Z,Do you guys think this has affected the Bitcoin Protocol?,https://github.com/bitcoin/bitcoin/pull/6341#issuecomment-366843933,366843933,
btcdrak,2015-06-26T13:02:48Z,"There should be a nLatestSizeForkTime which is the latest the fork can be activated, and if not, the fork would fail.\n",https://github.com/bitcoin/bitcoin/pull/6341#discussion_r33353226,33353226,src/chainparams.cpp
theuni,2015-06-26T17:30:03Z,"Could you please pass nSizeForkActivationTime in here, rather than changing the const assumption of Params()? main can be responsible for keeping tabs of the activation time.\n\nIt will make life much easier for libbitcoinconsensus. I should think that it would make it easier for testing as well, since you could more easily fake a time for a single test.\n",https://github.com/bitcoin/bitcoin/pull/6341#discussion_r33376815,33376815,src/chainparams.h
theuni,2015-06-26T17:31:45Z,Please use chainparams here rather than Params().\n,https://github.com/bitcoin/bitcoin/pull/6341#discussion_r33376948,33376948,src/main.cpp
theuni,2015-06-26T17:32:38Z,"Here too, and wherever else it applies. I'll avoid pointing out any others.\n",https://github.com/bitcoin/bitcoin/pull/6341#discussion_r33377026,33377026,src/main.cpp
