[
  {
    "sha": "f26866b9caf9ff27d129c703f51b8c2922000243",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMjY4NjZiOWNhZjlmZjI3ZDEyOWM3MDNmNTFiOGMyOTIyMDAwMjQz",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-02-07T22:20:16Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-02-08T19:35:28Z"
      },
      "message": "boost: drop boost threads for upnp",
      "tree": {
        "sha": "85efd77129f0759c6649417f1f23c1a88354d492",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85efd77129f0759c6649417f1f23c1a88354d492"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f26866b9caf9ff27d129c703f51b8c2922000243",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f26866b9caf9ff27d129c703f51b8c2922000243",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f26866b9caf9ff27d129c703f51b8c2922000243",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f26866b9caf9ff27d129c703f51b8c2922000243/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0277173b1defb63216d40a8d8805ae6d5d563c26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0277173b1defb63216d40a8d8805ae6d5d563c26",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0277173b1defb63216d40a8d8805ae6d5d563c26"
      }
    ],
    "stats": {
      "total": 102,
      "additions": 60,
      "deletions": 42
    },
    "files": [
      {
        "sha": "2912beec68edd9ab2343b899272a864c1358fead",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f26866b9caf9ff27d129c703f51b8c2922000243/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f26866b9caf9ff27d129c703f51b8c2922000243/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=f26866b9caf9ff27d129c703f51b8c2922000243",
        "patch": "@@ -165,6 +165,7 @@ void Interrupt()\n     InterruptRPC();\n     InterruptREST();\n     InterruptTorControl();\n+    InterruptMapPort();\n     if (g_connman)\n         g_connman->Interrupt();\n }\n@@ -191,7 +192,7 @@ void Shutdown()\n #ifdef ENABLE_WALLET\n     FlushWallets();\n #endif\n-    MapPort(false);\n+    StopMapPort();\n \n     // Because these depend on each-other, we make sure that neither can be\n     // using the other before destroying them.\n@@ -1669,7 +1670,9 @@ bool AppInitMain()\n     Discover(threadGroup);\n \n     // Map ports with UPnP\n-    MapPort(gArgs.GetBoolArg(\"-upnp\", DEFAULT_UPNP));\n+    if (gArgs.GetBoolArg(\"-upnp\", DEFAULT_UPNP)) {\n+        StartMapPort();\n+    }\n \n     CConnman::Options connOptions;\n     connOptions.nLocalServices = nLocalServices;"
      },
      {
        "sha": "307e5d49d5d510c14bc197e6a639d9ba99536a04",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 38,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f26866b9caf9ff27d129c703f51b8c2922000243/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f26866b9caf9ff27d129c703f51b8c2922000243/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=f26866b9caf9ff27d129c703f51b8c2922000243",
        "patch": "@@ -1459,6 +1459,8 @@ void CConnman::WakeMessageHandler()\n \n \n #ifdef USE_UPNP\n+static CThreadInterrupt g_upnp_interrupt;\n+static std::thread g_upnp_thread;\n void ThreadMapPort()\n {\n     std::string port = strprintf(\"%u\", GetListenPort());\n@@ -1509,35 +1511,29 @@ void ThreadMapPort()\n \n         std::string strDesc = \"Bitcoin \" + FormatFullVersion();\n \n-        try {\n-            while (true) {\n+        do {\n #ifndef UPNPDISCOVER_SUCCESS\n-                /* miniupnpc 1.5 */\n-                r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n-                                    port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0);\n+            /* miniupnpc 1.5 */\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n+                                port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0);\n #else\n-                /* miniupnpc 1.6 */\n-                r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n-                                    port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+            /* miniupnpc 1.6 */\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n+                                port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n #endif\n \n-                if(r!=UPNPCOMMAND_SUCCESS)\n-                    LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\",\n-                        port, port, lanaddr, r, strupnperror(r));\n-                else\n-                    LogPrintf(\"UPnP Port Mapping successful.\\n\");\n-\n-                MilliSleep(20*60*1000); // Refresh every 20 minutes\n-            }\n-        }\n-        catch (const boost::thread_interrupted&)\n-        {\n-            r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n-            LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n-            freeUPNPDevlist(devlist); devlist = nullptr;\n-            FreeUPNPUrls(&urls);\n-            throw;\n+            if(r!=UPNPCOMMAND_SUCCESS)\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\",\n+                    port, port, lanaddr, r, strupnperror(r));\n+            else\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n         }\n+        while(g_upnp_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n     } else {\n         LogPrintf(\"No valid UPnP IGDs found\\n\");\n         freeUPNPDevlist(devlist); devlist = nullptr;\n@@ -1546,27 +1542,39 @@ void ThreadMapPort()\n     }\n }\n \n-void MapPort(bool fUseUPnP)\n+void StartMapPort()\n {\n-    static std::unique_ptr<boost::thread> upnp_thread;\n+    if (!g_upnp_thread.joinable()) {\n+        assert(!g_upnp_interrupt);\n+        g_upnp_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadMapPort)));\n+    }\n+}\n \n-    if (fUseUPnP)\n-    {\n-        if (upnp_thread) {\n-            upnp_thread->interrupt();\n-            upnp_thread->join();\n-        }\n-        upnp_thread.reset(new boost::thread(boost::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadMapPort)));\n+void InterruptMapPort()\n+{\n+    if(g_upnp_thread.joinable()) {\n+        g_upnp_interrupt();\n     }\n-    else if (upnp_thread) {\n-        upnp_thread->interrupt();\n-        upnp_thread->join();\n-        upnp_thread.reset();\n+}\n+\n+void StopMapPort()\n+{\n+    if(g_upnp_thread.joinable()) {\n+        g_upnp_thread.join();\n+        g_upnp_interrupt.reset();\n     }\n }\n \n #else\n-void MapPort(bool)\n+void StartMapPort()\n+{\n+    // Intentionally left blank.\n+}\n+void InterruptMapPort()\n+{\n+    // Intentionally left blank.\n+}\n+void StopMapPort()\n {\n     // Intentionally left blank.\n }"
      },
      {
        "sha": "daa0eea8b8c09d2ab34fa069b85656c1717613fd",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f26866b9caf9ff27d129c703f51b8c2922000243/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f26866b9caf9ff27d129c703f51b8c2922000243/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=f26866b9caf9ff27d129c703f51b8c2922000243",
        "patch": "@@ -442,7 +442,9 @@ class CConnman\n };\n extern std::unique_ptr<CConnman> g_connman;\n void Discover(boost::thread_group& threadGroup);\n-void MapPort(bool fUseUPnP);\n+void StartMapPort();\n+void InterruptMapPort();\n+void StopMapPort();\n unsigned short GetListenPort();\n bool BindListenPort(const CService &bindAddr, std::string& strError, bool fWhitelisted = false);\n "
      },
      {
        "sha": "909be1c26419e25ec8e4816c217f3676d6127c4e",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f26866b9caf9ff27d129c703f51b8c2922000243/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f26866b9caf9ff27d129c703f51b8c2922000243/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=f26866b9caf9ff27d129c703f51b8c2922000243",
        "patch": "@@ -315,7 +315,12 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             break;\n         case MapPortUPnP: // core option - can be changed on-the-fly\n             settings.setValue(\"fUseUPnP\", value.toBool());\n-            MapPort(value.toBool());\n+            if (value.toBool()) {\n+                StartMapPort();\n+            } else {\n+                InterruptMapPort();\n+                StopMapPort();\n+            }\n             break;\n         case MinimizeOnClose:\n             fMinimizeOnClose = value.toBool();"
      }
    ]
  },
  {
    "sha": "ba917249486310985a34a5250bb570ca18821322",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYTkxNzI0OTQ4NjMxMDk4NWEzNGE1MjUwYmI1NzBjYTE4ODIxMzIy",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-02-07T22:42:39Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-02-08T19:35:28Z"
      },
      "message": "boost: remove useless threadGroup parameter from Discover",
      "tree": {
        "sha": "ee3abc56f29ce92b369bf33f5479f5879332a803",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee3abc56f29ce92b369bf33f5479f5879332a803"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba917249486310985a34a5250bb570ca18821322",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba917249486310985a34a5250bb570ca18821322",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ba917249486310985a34a5250bb570ca18821322",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba917249486310985a34a5250bb570ca18821322/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f26866b9caf9ff27d129c703f51b8c2922000243",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f26866b9caf9ff27d129c703f51b8c2922000243",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f26866b9caf9ff27d129c703f51b8c2922000243"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 3,
      "deletions": 7
    },
    "files": [
      {
        "sha": "9524da93cd2ed685d361dd365d99210d27bbb70c",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba917249486310985a34a5250bb570ca18821322/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba917249486310985a34a5250bb570ca18821322/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ba917249486310985a34a5250bb570ca18821322",
        "patch": "@@ -1667,7 +1667,7 @@ bool AppInitMain()\n     if (gArgs.GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION))\n         StartTorControl(threadGroup, scheduler);\n \n-    Discover(threadGroup);\n+    Discover();\n \n     // Map ports with UPnP\n     if (gArgs.GetBoolArg(\"-upnp\", DEFAULT_UPNP)) {"
      },
      {
        "sha": "201914685cb562160794311a730b5b8b509a32d1",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba917249486310985a34a5250bb570ca18821322/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba917249486310985a34a5250bb570ca18821322/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ba917249486310985a34a5250bb570ca18821322",
        "patch": "@@ -2129,7 +2129,7 @@ bool CConnman::BindListenPort(const CService &addrBind, std::string& strError, b\n     return true;\n }\n \n-void Discover(boost::thread_group& threadGroup)\n+void Discover()\n {\n     if (!fDiscover)\n         return;"
      },
      {
        "sha": "8378a303b8b1e13149ba53e3399d4f914d1bc826",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba917249486310985a34a5250bb570ca18821322/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba917249486310985a34a5250bb570ca18821322/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=ba917249486310985a34a5250bb570ca18821322",
        "patch": "@@ -37,10 +37,6 @@\n class CScheduler;\n class CNode;\n \n-namespace boost {\n-    class thread_group;\n-} // namespace boost\n-\n /** Time between pings automatically sent out for latency probing and keepalive (in seconds). */\n static const int PING_INTERVAL = 2 * 60;\n /** Time after which to disconnect, after waiting for a ping response (or inactivity). */\n@@ -441,7 +437,7 @@ class CConnman\n     friend struct CConnmanTest;\n };\n extern std::unique_ptr<CConnman> g_connman;\n-void Discover(boost::thread_group& threadGroup);\n+void Discover();\n void StartMapPort();\n void InterruptMapPort();\n void StopMapPort();"
      }
    ]
  },
  {
    "sha": "08272671d2218eb69589a0639cbb61ef7cde3004",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowODI3MjY3MWQyMjE4ZWI2OTU4OWEwNjM5Y2JiNjFlZjdjZGUzMDA0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-02-07T23:33:20Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-02-08T19:35:29Z"
      },
      "message": "boost: drop boost threads from torcontrol",
      "tree": {
        "sha": "ab4d629613d83d75ae35a25dcd9d6ff7c22a27f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab4d629613d83d75ae35a25dcd9d6ff7c22a27f2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08272671d2218eb69589a0639cbb61ef7cde3004",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08272671d2218eb69589a0639cbb61ef7cde3004",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/08272671d2218eb69589a0639cbb61ef7cde3004",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08272671d2218eb69589a0639cbb61ef7cde3004/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba917249486310985a34a5250bb570ca18821322",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba917249486310985a34a5250bb570ca18821322",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ba917249486310985a34a5250bb570ca18821322"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "9f61989a266c1aaf37a622bff175edd3ee2a75e9",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08272671d2218eb69589a0639cbb61ef7cde3004/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08272671d2218eb69589a0639cbb61ef7cde3004/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=08272671d2218eb69589a0639cbb61ef7cde3004",
        "patch": "@@ -1665,7 +1665,7 @@ bool AppInitMain()\n     LogPrintf(\"nBestHeight = %d\\n\", chain_active_height);\n \n     if (gArgs.GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION))\n-        StartTorControl(threadGroup, scheduler);\n+        StartTorControl();\n \n     Discover();\n "
      },
      {
        "sha": "717d1cf7e54140406fbfe0c1b2134bcd98c361a5",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08272671d2218eb69589a0639cbb61ef7cde3004/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08272671d2218eb69589a0639cbb61ef7cde3004/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=08272671d2218eb69589a0639cbb61ef7cde3004",
        "patch": "@@ -731,7 +731,7 @@ void TorController::reconnect_cb(evutil_socket_t fd, short what, void *arg)\n \n /****** Thread ********/\n static struct event_base *gBase;\n-static boost::thread torControlThread;\n+static std::thread torControlThread;\n \n static void TorControlThread()\n {\n@@ -740,7 +740,7 @@ static void TorControlThread()\n     event_base_dispatch(gBase);\n }\n \n-void StartTorControl(boost::thread_group& threadGroup, CScheduler& scheduler)\n+void StartTorControl()\n {\n     assert(!gBase);\n #ifdef WIN32\n@@ -754,7 +754,7 @@ void StartTorControl(boost::thread_group& threadGroup, CScheduler& scheduler)\n         return;\n     }\n \n-    torControlThread = boost::thread(boost::bind(&TraceThread<void (*)()>, \"torcontrol\", &TorControlThread));\n+    torControlThread = std::thread(std::bind(&TraceThread<void (*)()>, \"torcontrol\", &TorControlThread));\n }\n \n void InterruptTorControl()"
      },
      {
        "sha": "2be6701fa5263fe5c8e85ce7b22904d4a0772268",
        "filename": "src/torcontrol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08272671d2218eb69589a0639cbb61ef7cde3004/src/torcontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08272671d2218eb69589a0639cbb61ef7cde3004/src/torcontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.h?ref=08272671d2218eb69589a0639cbb61ef7cde3004",
        "patch": "@@ -13,7 +13,7 @@\n extern const std::string DEFAULT_TOR_CONTROL;\n static const bool DEFAULT_LISTEN_ONION = true;\n \n-void StartTorControl(boost::thread_group& threadGroup, CScheduler& scheduler);\n+void StartTorControl();\n void InterruptTorControl();\n void StopTorControl();\n "
      }
    ]
  },
  {
    "sha": "004f9999464c7ef4a57b281dcbb407e5d193e798",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDRmOTk5OTQ2NGM3ZWY0YTU3YjI4MWRjYmI0MDdlNWQxOTNlNzk4",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-02-08T00:19:34Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2018-02-08T19:35:29Z"
      },
      "message": "boost: drop boost threads for [alert|block|wallet]notify",
      "tree": {
        "sha": "2fd9df9f73784808f615402cc1a182f53f3f6abd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2fd9df9f73784808f615402cc1a182f53f3f6abd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/004f9999464c7ef4a57b281dcbb407e5d193e798",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/004f9999464c7ef4a57b281dcbb407e5d193e798",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/004f9999464c7ef4a57b281dcbb407e5d193e798",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/004f9999464c7ef4a57b281dcbb407e5d193e798/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08272671d2218eb69589a0639cbb61ef7cde3004",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08272671d2218eb69589a0639cbb61ef7cde3004",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08272671d2218eb69589a0639cbb61ef7cde3004"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "ec2edd9cac1b625db4a875d9be8aebb386634986",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/004f9999464c7ef4a57b281dcbb407e5d193e798/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/004f9999464c7ef4a57b281dcbb407e5d193e798/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=004f9999464c7ef4a57b281dcbb407e5d193e798",
        "patch": "@@ -546,7 +546,8 @@ static void BlockNotifyCallback(bool initialSync, const CBlockIndex *pBlockIndex\n     std::string strCmd = gArgs.GetArg(\"-blocknotify\", \"\");\n     if (!strCmd.empty()) {\n         boost::replace_all(strCmd, \"%s\", pBlockIndex->GetBlockHash().GetHex());\n-        boost::thread t(runCommand, strCmd); // thread runs free\n+        std::thread t(runCommand, strCmd);\n+        t.detach(); // thread runs free\n     }\n }\n "
      },
      {
        "sha": "6b02c0920c6a8b9e572a116b4e0b164f8d84d352",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/004f9999464c7ef4a57b281dcbb407e5d193e798/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/004f9999464c7ef4a57b281dcbb407e5d193e798/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=004f9999464c7ef4a57b281dcbb407e5d193e798",
        "patch": "@@ -1188,7 +1188,8 @@ static void AlertNotify(const std::string& strMessage)\n     safeStatus = singleQuote+safeStatus+singleQuote;\n     boost::replace_all(strCmd, \"%s\", safeStatus);\n \n-    boost::thread t(runCommand, strCmd); // thread runs free\n+    std::thread t(runCommand, strCmd);\n+    t.detach(); // thread runs free\n }\n \n static void CheckForkWarningConditions()"
      },
      {
        "sha": "3b8ecce6da470f7037e289f080b41f3eb82d253a",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/004f9999464c7ef4a57b281dcbb407e5d193e798/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/004f9999464c7ef4a57b281dcbb407e5d193e798/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=004f9999464c7ef4a57b281dcbb407e5d193e798",
        "patch": "@@ -34,7 +34,6 @@\n #include <future>\n \n #include <boost/algorithm/string/replace.hpp>\n-#include <boost/thread.hpp>\n \n std::vector<CWalletRef> vpwallets;\n /** Transaction fee set by the user */\n@@ -976,7 +975,8 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     if (!strCmd.empty())\n     {\n         boost::replace_all(strCmd, \"%s\", wtxIn.GetHash().GetHex());\n-        boost::thread t(runCommand, strCmd); // thread runs free\n+        std::thread t(runCommand, strCmd);\n+        t.detach(); // thread runs free\n     }\n \n     return true;"
      }
    ]
  }
]