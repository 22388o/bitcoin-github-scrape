practicalswift,2017-08-10T17:16:48Z,"**Note to reviewers:** Let me know if this cleanup is better placed somewhere else (i.e. outside of `OldDecrypt(…)` to avoid doing it more than once). One alternative would be to put it in `~BasicTestingSetup()`, but then it'll run for unrelated tests as well.",https://github.com/bitcoin/bitcoin/pull/11024#issuecomment-321616451,321616451,
gmaxwell,2017-08-10T22:23:54Z,"Alternatively we could drop this test. I think it's served its purpose now (our implementation is fine even across many systems) and hopefully OpenSSL will not be required to build without the GUI in 0.16.\n",https://github.com/bitcoin/bitcoin/pull/11024#issuecomment-321689810,321689810,
gmaxwell,2017-08-10T23:00:46Z,@sipa @theuni ,https://github.com/bitcoin/bitcoin/pull/11024#issuecomment-321696030,321696030,
sipa,2017-08-10T23:02:53Z,I'd rather just get rid of OpenSSL... we're very close to the point that it doesn't have much added benefit over our internal RNG.,https://github.com/bitcoin/bitcoin/pull/11024#issuecomment-321696351,321696351,
practicalswift,2017-08-11T08:08:28Z,"@gmaxwell I've now added a commit that removes `Old{SetKeyFromPassphrase,Encrypt,Decrypt}`. Is that in accordance with your suggestion? :-)\n\nLet me know if it looks good and I'll squash it into one commit.",https://github.com/bitcoin/bitcoin/pull/11024#issuecomment-321753369,321753369,
gmaxwell,2017-08-11T16:15:14Z,Looks good to me.,https://github.com/bitcoin/bitcoin/pull/11024#issuecomment-321855625,321855625,
practicalswift,2017-08-11T17:21:08Z,Squashed into one commit. Please review :-),https://github.com/bitcoin/bitcoin/pull/11024#issuecomment-321870539,321870539,
practicalswift,2017-08-14T15:52:22Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/11024#issuecomment-322228981,322228981,
theuni,2017-08-16T22:11:55Z,"I have no issue with removing the old comparisons, as I think it's safe to say by now that our implementation lines up well enough with the old openssl one.\n\nHowever, I don't think it'd be a terrible idea to snapshot our _current_ implementation and compare against that. That way future changes are checked against something.\n\nI suppose that's really not necessary until those future changes",https://github.com/bitcoin/bitcoin/pull/11024#issuecomment-322914155,322914155,
MarcoFalke,2017-08-23T14:25:09Z,post-merge utACK a897d0e37a02d29907c3a3f0f6536a26a155751d,https://github.com/bitcoin/bitcoin/pull/11024#issuecomment-324350670,324350670,
laanwj,2017-08-10T18:49:12Z,"I'm not sure I understand this. OpenSSL API is confusing, where is the symmetric ""create"" for this remove/free?\nSurprised that this needs `ERR_*` just to deallocate a structure that comes out of the blue.\nIs this related to cleanup in `~CInit()` in util.cpp?\n",https://github.com/bitcoin/bitcoin/pull/11024#discussion_r132537260,132537260,src/wallet/test/crypto_tests.cpp
practicalswift,2017-08-10T21:02:24Z,"Yes, the OpenSSL API is full of surprises! :-)\n\nThis is my understanding:\n\n`OldDecrypt(…)` (in `crypto_tests.cpp`) [calls OpenSSL's `EVP_DecryptFinal_ex(…)`](https://github.com/practicalswift/bitcoin/blob/b3afb6242ec64b7c1f161ff6125b6c1faa801652/src/wallet/test/crypto_tests.cpp#L82).\n\nIf `EVP_DecryptFinal_ex(…)` encounters any errors [then `EVPerr(…)` is called](https://github.com/open",https://github.com/bitcoin/bitcoin/pull/11024#discussion_r132566921,132566921,src/wallet/test/crypto_tests.cpp
practicalswift,2017-08-10T21:47:40Z,"`ERR_remove_thread_state(nullptr)` must be run for each thread as I've understood it, so I don't think putting it in `~CInit()` would be the right thing to do?",https://github.com/bitcoin/bitcoin/pull/11024#discussion_r132576551,132576551,src/wallet/test/crypto_tests.cpp
