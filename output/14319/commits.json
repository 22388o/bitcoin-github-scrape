[
  {
    "sha": "78542a3f36381fe96f60708834c8378042e3bab6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ODU0MmEzZjM2MzgxZmU5NmY2MDcwODgzNGM4Mzc4MDQyZTNiYWI2",
    "commit": {
      "author": {
        "name": "priscoan",
        "email": "39646804+priscoan@users.noreply.github.com",
        "date": "2018-09-25T12:16:05Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-12-05T22:19:25Z"
      },
      "message": "doc: Fix PSBT howto and example parameters\n\n* Remove outdated reference to replaceable parameter\n* Fix address reference\n* Unify quotation and italicization of parameters\n* Fix PSBT reference",
      "tree": {
        "sha": "d55ee2545c481578adbed16a91680954e1ead317",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d55ee2545c481578adbed16a91680954e1ead317"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78542a3f36381fe96f60708834c8378042e3bab6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78542a3f36381fe96f60708834c8378042e3bab6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78542a3f36381fe96f60708834c8378042e3bab6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78542a3f36381fe96f60708834c8378042e3bab6/comments",
    "author": {
      "login": "priscoan",
      "id": 39646804,
      "node_id": "MDQ6VXNlcjM5NjQ2ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/39646804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/priscoan",
      "html_url": "https://github.com/priscoan",
      "followers_url": "https://api.github.com/users/priscoan/followers",
      "following_url": "https://api.github.com/users/priscoan/following{/other_user}",
      "gists_url": "https://api.github.com/users/priscoan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/priscoan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/priscoan/subscriptions",
      "organizations_url": "https://api.github.com/users/priscoan/orgs",
      "repos_url": "https://api.github.com/users/priscoan/repos",
      "events_url": "https://api.github.com/users/priscoan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/priscoan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4dac24db23d121ec21080f04e210227c4ff5d281",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4dac24db23d121ec21080f04e210227c4ff5d281",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4dac24db23d121ec21080f04e210227c4ff5d281"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "7e6a93714d54377d84a3d2aff867147417fb73fe",
        "filename": "doc/psbt.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78542a3f36381fe96f60708834c8378042e3bab6/doc/psbt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78542a3f36381fe96f60708834c8378042e3bab6/doc/psbt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/psbt.md?ref=78542a3f36381fe96f60708834c8378042e3bab6",
        "patch": "@@ -90,7 +90,7 @@ the command line in case `bitcoin-cli` is used.\n Setup:\n - All three call `getnewaddress` to create a new address; call these addresses\n   *Aalice*, *Abob*, and *Acarol*.\n-- All three call `getaddressinfo X`, with *X* their respective address, and\n+- All three call `getaddressinfo \"X\"`, with *X* their respective address, and\n   remember the corresponding public keys. Call these public keys *Kalice*,\n   *Kbob*, and *Kcarol*.\n - All three now run `addmultisigaddress 2 [\"Kalice\",\"Kbob\",\"Kcarol\"]` to teach\n@@ -105,28 +105,28 @@ Setup:\n   output. Again, it may be necessary to explicitly specify the addresstype\n   in order to get a result that matches. This command won't enable them to\n   initiate transactions later, however.\n-- They can now give out *D* as address others can pay to.\n+- They can now give out *Amulti* as address others can pay to.\n \n Later, when *V* BTC has been received on *Amulti*, and Bob and Carol want to\n move the coins in their entirety to address *Asend*, with no change. Alice\n does not need to be involved.\n - One of them - let's assume Carol here - initiates the creation. She runs\n-  `walletcreatefundedpsbt [] {\"Asend\":V} 0 false {\"subtractFeeFromOutputs\":[0], \"includeWatching\":true}`.\n-  We call the resulting PSBT *P*. P does not contain any signatures.\n+  `walletcreatefundedpsbt [] {\"Asend\":V} 0 {\"subtractFeeFromOutputs\":[0], \"includeWatching\":true}`.\n+  We call the resulting PSBT *P*. *P* does not contain any signatures.\n - Carol needs to sign the transaction herself. In order to do so, she runs\n-  `walletprocesspsbt P`, and gives the resulting PSBT *P2* to Bob.\n+  `walletprocesspsbt \"P\"`, and gives the resulting PSBT *P2* to Bob.\n - Bob inspects the PSBT using `decodepsbt \"P2\"` to determine if the transaction\n   has indeed just the expected input, and an output to *Asend*, and the fee is\n   reasonable. If he agrees, he calls `walletprocesspsbt \"P2\"` to sign. The\n   resulting PSBT *P3* contains both Carol's and Bob's signature.\n-- Now anyone can call `finalizepsbt \"P2\"` to extract a fully signed transaction\n+- Now anyone can call `finalizepsbt \"P3\"` to extract a fully signed transaction\n   *T*.\n - Finally anyone can broadcast the transaction using `sendrawtransaction \"T\"`.\n \n In case there are more signers, it may be advantageous to let them all sign in\n parallel, rather passing the PSBT from one signer to the next one. In the\n above example this would translate to Carol handing a copy of *P* to each signer\n-separately. They can then all invoke `walletprocesspsbt P`, and end up with\n+separately. They can then all invoke `walletprocesspsbt \"P\"`, and end up with\n their individually-signed PSBT structures. They then all send those back to\n Carol (or anyone) who can combine them using `combinepsbt`. The last two steps\n (`finalizepsbt` and `sendrawtransaction`) remain unchanged."
      }
    ]
  }
]