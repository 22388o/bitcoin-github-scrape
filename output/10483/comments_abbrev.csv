jonasschnelli,2017-05-31T08:37:09Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-305123912,305123912,
laanwj,2017-06-01T08:27:53Z,"Concept ACK. I think we can all agree that this needs to be done at some point, though we'll have to discuss when to do this with the least impact. This change probably means every single PR needs to be rebased.",https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-305425904,305425904,
practicalswift,2017-06-04T16:53:41Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-306052175,306052175,
sipa,2017-06-04T18:20:20Z,"Can you rewrite this as a series of scripted diffs (possibly mixed with a few manual commits to fix things up)? See #10189 #10193 #10502 #10321 for examples.\n\nAs for timing, possibly immediately after the feature freeze?",https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-306057347,306057347,
practicalswift,2017-06-08T14:29:52Z,@sipa Great idea! Now re-implemented as a scripted-diff. Looks good? :-),https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-307121088,307121088,
sipa,2017-06-08T20:12:56Z,@practicalswift You can use `sed -i 's/\<NULL\>/nullptr/g'` for the main operation. `\<` and `\>` denote begin and end of word.,https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-307214215,307214215,
practicalswift,2017-06-09T15:26:50Z,@sipa Good point! Now using `s/\<NULL\>/nullptr/g`. Looks good? :-),https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-307420077,307420077,
practicalswift,2017-06-11T13:53:20Z,Merge conflicts resolved!,https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-307630400,307630400,
practicalswift,2017-06-13T09:23:26Z,"What is the correct protocol to follow w.r.t. rebasing a large scripted-diff PR such as this one?\n\nShould I rebase periodically myself to keep it mergeable, or should I wait until I'm asked to rebase prior to the suggested time for merge (@sipa suggested: ""possibly immediately after the feature freeze"").",https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-308058726,308058726,
MarcoFalke,2017-06-13T10:20:29Z,@practicalswift It is sufficient to rebase only once. Please refer to https://github.com/bitcoin/bitcoin/issues/9961#issue-212976673 for the preliminary date of feature freeze.,https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-308072843,308072843,
practicalswift,2017-06-13T10:36:30Z,@MarcoFalke Great! Thanks for clarifying!,https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-308076417,308076417,
theuni,2017-06-13T20:54:00Z,Concept ACK. It'd be helpful to compare before/after binaries.,https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-308245457,308245457,
jtimon,2017-06-22T01:24:06Z,"utACK\nBut after revieweing the code, the script seems to be more complicated than it needs to be, wouldn't the following do the same?\n```\nsed -i 's/NULL/nullptr/g' ./src/*.h ./src/*.cpp ./src/*/*.h ./src/*/*.cpp ./src/*/*/*.h ./src/*/*/*.cpp ;\n```\n",https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-310249415,310249415,
practicalswift,2017-06-22T02:17:25Z,"@jtimon Unfortunately that command is a bit too broad which leads to the following problems:\n* It would match dependencies such as `src/leveldb/`, `src/secp256k1/`, `src/univalue/`, etc.\n* It would match unrelated constants such as `TX_NULL_DATA`, `SCRIPT_VERIFY_NULLDUMMY`, `SCRIPT_VERIFY_NULLFAIL`, `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY`, `SCRIPT_ERR_SIG_NULLDUMMY`, `SCRIPT_ERR_SIG_N",https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-310256663,310256663,
jtimon,2017-06-23T21:04:22Z,"What about ?\n```\nsed -i 's/ NULL/ nullptr/g' ./src/*.h ./src/*.cpp ./src/*/*.h ./src/*/*.cpp ./src/*/*/*.h ./src/*/*/*.cpp ;\nsed -i 's/ nullptr/ NULL/g' ./src/leveldb/*.*  ./src/secp256k1/.*.*;\n```\n\nAnyway, no big deal, probably not worth it to change it. I looked at the changes and they do what I expect.",https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-310772604,310772604,
practicalswift,2017-06-26T07:30:04Z,"@jtimon Unfortunately that one is too broad â€“ it will replace `NULLDUMMY` with `nullptrDUMMY`, etc. `'s/\<NULL\>/nullptr/g'` is the narrowest replacement I can think of :-)",https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-310983862,310983862,
jtimon,2017-06-27T01:59:06Z,"No worries, what you have seems to work. Needs rebase.\n",https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-311230948,311230948,
practicalswift,2017-06-27T05:17:00Z,Rebased! :-),https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-311255440,311255440,
practicalswift,2017-07-15T13:00:50Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-315532521,315532521,
TheBlueMatt,2017-07-16T19:44:29Z,"utACK 2f2ac6fc76c966b6174d9df647648d0573d2ac41. I read through the diff but not thoroughly, the script looks good :).",https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-315632150,315632150,
practicalswift,2017-07-17T08:00:26Z,Rebased! :-),https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-315689588,315689588,
jtimon,2017-07-18T01:23:30Z,"Fast scroll-down re-review ACK.\nDidn't checked the rebase.\n",https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-315930828,315930828,
practicalswift,2017-08-01T17:05:14Z,Rebased! :-),https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-319433633,319433633,
promag,2017-08-06T15:17:25Z,"utACK 2f2ac6f.\n\nNit, while rebasing, reword to something short, like `scripted-diff: Replace NULL macro with C++11 nullptr keyword`.",https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-320513219,320513219,
sipa,2017-08-06T22:08:22Z,Let's try to merge this right before branching off 0.15.,https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-320536080,320536080,
practicalswift,2017-08-07T05:38:12Z,"Rebased!\n\n@sipa That's great! When is that expected to happen? I'll keep this PR rebased :-)",https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-320573107,320573107,
practicalswift,2017-08-07T05:42:21Z,"What about merging the related PR #10645 (""Use nullptr (C++11) instead of zero (0) as the null pointer constant "") at the same time? :-)",https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-320573583,320573583,
MarcoFalke,2017-08-08T13:03:30Z,"90d4d89 conflicts with #10882, which is tagged for 0.15.",https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-320949358,320949358,
practicalswift,2017-08-08T13:42:13Z,@MarcoFalke Thanks for the notification! Should I wait until #10882 is merged and then rebase on `master` or what is the preferred way to handle it?,https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-320959478,320959478,
practicalswift,2017-08-14T14:35:14Z,@laanwj Excellent! Thanks for merging! :-),https://github.com/bitcoin/bitcoin/pull/10483#issuecomment-322207214,322207214,
