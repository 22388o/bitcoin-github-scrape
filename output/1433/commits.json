[
  {
    "sha": "c4443c2be141e5f45bb10376056f3083e97cde50",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDQ0M2MyYmUxNDFlNWY0NWJiMTAzNzYwNTZmMzA4M2U5N2NkZTUw",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-06-08T13:21:55Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-06-13T14:24:25Z"
      },
      "message": "re-work optionsdialog to a tabbed UI based on an ui-file\n\n- extend network options with a SOCKS version selection\n- changing \"Unit to show amounts in:\" now also updates the unit used in the transaction fee box\n- string updates\n- link Apply button and OK button when enabling or disabling them\n- use LookupNumeric() from netbase to verify proxy address (via an EventFilter)\n- change proxy address field to QValidatedLineEdit and add visual feedback\n- add a status label used for displaying a message for invalid proxy addresses\n- allow usage of IPv6 address as proxy address\n- added warning message when enabling / disabling SOCKS proxy",
      "tree": {
        "sha": "437bad1af7dccf5ced0f0056757d134334f4b056",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/437bad1af7dccf5ced0f0056757d134334f4b056"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4443c2be141e5f45bb10376056f3083e97cde50",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4443c2be141e5f45bb10376056f3083e97cde50",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c4443c2be141e5f45bb10376056f3083e97cde50",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4443c2be141e5f45bb10376056f3083e97cde50/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "c4879a0c2fea705b6ad7956502acc7897838e841",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4879a0c2fea705b6ad7956502acc7897838e841",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c4879a0c2fea705b6ad7956502acc7897838e841"
      }
    ],
    "stats": {
      "total": 991,
      "additions": 646,
      "deletions": 345
    },
    "files": [
      {
        "sha": "f1ebec6bccab284e7e297afbc413179cd55f7d33",
        "filename": "bitcoin-qt.pro",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4443c2be141e5f45bb10376056f3083e97cde50/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4443c2be141e5f45bb10376056f3083e97cde50/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=c4443c2be141e5f45bb10376056f3083e97cde50",
        "patch": "@@ -234,7 +234,8 @@ FORMS += \\\n     src/qt/forms/sendcoinsentry.ui \\\n     src/qt/forms/askpassphrasedialog.ui \\\n     src/qt/forms/rpcconsole.ui \\\n-    src/qt/forms/verifymessagedialog.ui\n+    src/qt/forms/verifymessagedialog.ui \\\n+    src/qt/forms/optionsdialog.ui\n \n contains(USE_QRCODE, 1) {\n HEADERS += src/qt/qrcodedialog.h"
      },
      {
        "sha": "07e2324edbda72f626be8eef5bacc1fd37d7f6b1",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "added",
        "additions": 466,
        "deletions": 0,
        "changes": 466,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4443c2be141e5f45bb10376056f3083e97cde50/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4443c2be141e5f45bb10376056f3083e97cde50/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=c4443c2be141e5f45bb10376056f3083e97cde50",
        "patch": "@@ -0,0 +1,466 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<ui version=\"4.0\">\n+ <class>OptionsDialog</class>\n+ <widget class=\"QDialog\" name=\"OptionsDialog\">\n+  <property name=\"geometry\">\n+   <rect>\n+    <x>0</x>\n+    <y>0</y>\n+    <width>540</width>\n+    <height>380</height>\n+   </rect>\n+  </property>\n+  <property name=\"windowTitle\">\n+   <string>Options</string>\n+  </property>\n+  <property name=\"modal\">\n+   <bool>true</bool>\n+  </property>\n+  <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n+   <item>\n+    <widget class=\"QTabWidget\" name=\"tabWidget\">\n+     <property name=\"tabPosition\">\n+      <enum>QTabWidget::North</enum>\n+     </property>\n+     <property name=\"currentIndex\">\n+      <number>0</number>\n+     </property>\n+     <widget class=\"QWidget\" name=\"tabMain\">\n+      <attribute name=\"title\">\n+       <string>&amp;Main</string>\n+      </attribute>\n+      <layout class=\"QVBoxLayout\" name=\"verticalLayout_Main\">\n+       <item>\n+        <widget class=\"QLabel\" name=\"transactionFeeInfoLabel\">\n+         <property name=\"text\">\n+          <string>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</string>\n+         </property>\n+         <property name=\"textFormat\">\n+          <enum>Qt::PlainText</enum>\n+         </property>\n+         <property name=\"wordWrap\">\n+          <bool>true</bool>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_Main\">\n+         <item>\n+          <widget class=\"QLabel\" name=\"transactionFeeLabel\">\n+           <property name=\"text\">\n+            <string>Pay transaction &amp;fee</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>transactionFee</cstring>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"BitcoinAmountField\" name=\"transactionFee\"/>\n+         </item>\n+         <item>\n+          <spacer name=\"horizontalSpacer_Main\">\n+           <property name=\"orientation\">\n+            <enum>Qt::Horizontal</enum>\n+           </property>\n+           <property name=\"sizeHint\" stdset=\"0\">\n+            <size>\n+             <width>40</width>\n+             <height>20</height>\n+            </size>\n+           </property>\n+          </spacer>\n+         </item>\n+        </layout>\n+       </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"bitcoinAtStartup\">\n+         <property name=\"toolTip\">\n+          <string>Automatically start Bitcoin after logging in to the system.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>&amp;Start Bitcoin on system login</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"detachDatabases\">\n+         <property name=\"toolTip\">\n+          <string>Detach block and address databases at shutdown. This means they can be moved to another data directory, but it slows down shutdown. The wallet is always detached.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>&amp;Detach databases at shutdown</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <spacer name=\"verticalSpacer_Main\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Vertical</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>20</width>\n+           <height>40</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n+      </layout>\n+     </widget>\n+     <widget class=\"QWidget\" name=\"tabNetwork\">\n+      <attribute name=\"title\">\n+       <string>&amp;Network</string>\n+      </attribute>\n+      <layout class=\"QVBoxLayout\" name=\"verticalLayout_Network\">\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"mapPortUpnp\">\n+         <property name=\"toolTip\">\n+          <string>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>Map port using &amp;UPnP</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"connectSocks\">\n+         <property name=\"toolTip\">\n+          <string>Connect to the Bitcon network through a SOCKS proxy (e.g. when connecting through Tor).</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>&amp;Connect through SOCKS proxy:</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_Network\">\n+         <item>\n+          <widget class=\"QLabel\" name=\"proxyIpLabel\">\n+           <property name=\"text\">\n+            <string>Proxy &amp;IP:</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>proxyIp</cstring>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QValidatedLineEdit\" name=\"proxyIp\">\n+           <property name=\"maximumSize\">\n+            <size>\n+             <width>140</width>\n+             <height>16777215</height>\n+            </size>\n+           </property>\n+           <property name=\"toolTip\">\n+            <string>IP address of the proxy (e.g. 127.0.0.1)</string>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QLabel\" name=\"proxyPortLabel\">\n+           <property name=\"text\">\n+            <string>&amp;Port:</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>proxyPort</cstring>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QLineEdit\" name=\"proxyPort\">\n+           <property name=\"maximumSize\">\n+            <size>\n+             <width>55</width>\n+             <height>16777215</height>\n+            </size>\n+           </property>\n+           <property name=\"toolTip\">\n+            <string>Port of the proxy (e.g. 9050)</string>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QLabel\" name=\"socksVersionLabel\">\n+           <property name=\"text\">\n+            <string>SOCKS &amp;Version:</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>socksVersion</cstring>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QValueComboBox\" name=\"socksVersion\">\n+           <property name=\"toolTip\">\n+            <string>SOCKS version of the proxy (e.g. 5)</string>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <spacer name=\"horizontalSpacer_Network\">\n+           <property name=\"orientation\">\n+            <enum>Qt::Horizontal</enum>\n+           </property>\n+           <property name=\"sizeHint\" stdset=\"0\">\n+            <size>\n+             <width>40</width>\n+             <height>20</height>\n+            </size>\n+           </property>\n+          </spacer>\n+         </item>\n+        </layout>\n+       </item>\n+       <item>\n+        <spacer name=\"verticalSpacer_Network\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Vertical</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>20</width>\n+           <height>40</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n+      </layout>\n+     </widget>\n+     <widget class=\"QWidget\" name=\"tabWindow\">\n+      <attribute name=\"title\">\n+       <string>&amp;Window</string>\n+      </attribute>\n+      <layout class=\"QVBoxLayout\" name=\"verticalLayout_Window\">\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"minimizeToTray\">\n+         <property name=\"toolTip\">\n+          <string>Show only a tray icon after minimizing the window.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>&amp;Minimize to the tray instead of the taskbar</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"minimizeOnClose\">\n+         <property name=\"toolTip\">\n+          <string>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Quit in the menu.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>M&amp;inimize on close</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <spacer name=\"verticalSpacer_Window\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Vertical</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>20</width>\n+           <height>40</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n+      </layout>\n+     </widget>\n+     <widget class=\"QWidget\" name=\"tabDisplay\">\n+      <attribute name=\"title\">\n+       <string>&amp;Display</string>\n+      </attribute>\n+      <layout class=\"QVBoxLayout\" name=\"verticalLayout_Display\">\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_1_Display\">\n+         <item>\n+          <widget class=\"QLabel\" name=\"langLabel\">\n+           <property name=\"text\">\n+            <string>User Interface &amp;language:</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>lang</cstring>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QValueComboBox\" name=\"lang\">\n+           <property name=\"toolTip\">\n+            <string>The user interface language can be set here. This setting will take effect after restarting Bitcoin.</string>\n+           </property>\n+          </widget>\n+         </item>\n+        </layout>\n+       </item>\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2_Display\">\n+         <item>\n+          <widget class=\"QLabel\" name=\"unitLabel\">\n+           <property name=\"text\">\n+            <string>&amp;Unit to show amounts in:</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>unit</cstring>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QValueComboBox\" name=\"unit\">\n+           <property name=\"toolTip\">\n+            <string>Choose the default subdivision unit to show in the interface and when sending coins.</string>\n+           </property>\n+          </widget>\n+         </item>\n+        </layout>\n+       </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"displayAddresses\">\n+         <property name=\"toolTip\">\n+          <string>Whether to show Bitcoin addresses in the transaction list or not.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>&amp;Display addresses in transaction list</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <spacer name=\"verticalSpacer_Display\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Vertical</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>20</width>\n+           <height>40</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n+      </layout>\n+     </widget>\n+    </widget>\n+   </item>\n+   <item>\n+    <layout class=\"QHBoxLayout\" name=\"horizontalLayout_Buttons\">\n+     <item>\n+      <spacer name=\"horizontalSpacer_1\">\n+       <property name=\"orientation\">\n+        <enum>Qt::Horizontal</enum>\n+       </property>\n+       <property name=\"sizeHint\" stdset=\"0\">\n+        <size>\n+         <width>40</width>\n+         <height>48</height>\n+        </size>\n+       </property>\n+      </spacer>\n+     </item>\n+     <item>\n+      <widget class=\"QLabel\" name=\"statusLabel\">\n+       <property name=\"font\">\n+        <font>\n+         <weight>75</weight>\n+         <bold>true</bold>\n+        </font>\n+       </property>\n+       <property name=\"text\">\n+        <string/>\n+       </property>\n+       <property name=\"textFormat\">\n+        <enum>Qt::PlainText</enum>\n+       </property>\n+       <property name=\"wordWrap\">\n+        <bool>true</bool>\n+       </property>\n+      </widget>\n+     </item>\n+     <item>\n+      <spacer name=\"horizontalSpacer_2\">\n+       <property name=\"orientation\">\n+        <enum>Qt::Horizontal</enum>\n+       </property>\n+       <property name=\"sizeHint\" stdset=\"0\">\n+        <size>\n+         <width>40</width>\n+         <height>48</height>\n+        </size>\n+       </property>\n+      </spacer>\n+     </item>\n+     <item>\n+      <widget class=\"QPushButton\" name=\"okButton\">\n+       <property name=\"text\">\n+        <string>&amp;OK</string>\n+       </property>\n+      </widget>\n+     </item>\n+     <item>\n+      <widget class=\"QPushButton\" name=\"cancelButton\">\n+       <property name=\"text\">\n+        <string>&amp;Cancel</string>\n+       </property>\n+       <property name=\"autoDefault\">\n+        <bool>false</bool>\n+       </property>\n+      </widget>\n+     </item>\n+     <item>\n+      <widget class=\"QPushButton\" name=\"applyButton\">\n+       <property name=\"text\">\n+        <string>&amp;Apply</string>\n+       </property>\n+       <property name=\"autoDefault\">\n+        <bool>false</bool>\n+       </property>\n+       <property name=\"default\">\n+        <bool>false</bool>\n+       </property>\n+       <property name=\"flat\">\n+        <bool>false</bool>\n+       </property>\n+      </widget>\n+     </item>\n+    </layout>\n+   </item>\n+  </layout>\n+ </widget>\n+ <customwidgets>\n+  <customwidget>\n+   <class>BitcoinAmountField</class>\n+   <extends>QSpinBox</extends>\n+   <header>bitcoinamountfield.h</header>\n+  </customwidget>\n+  <customwidget>\n+   <class>QValueComboBox</class>\n+   <extends>QComboBox</extends>\n+   <header>qvaluecombobox.h</header>\n+  </customwidget>\n+  <customwidget>\n+   <class>QValidatedLineEdit</class>\n+   <extends>QLineEdit</extends>\n+   <header>qvalidatedlineedit.h</header>\n+  </customwidget>\n+ </customwidgets>\n+ <resources/>\n+ <connections/>\n+</ui>"
      },
      {
        "sha": "9c7b85451c6ff83f3d2b7c6f7523efa843b84a5c",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 140,
        "deletions": 318,
        "changes": 458,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4443c2be141e5f45bb10376056f3083e97cde50/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4443c2be141e5f45bb10376056f3083e97cde50/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=c4443c2be141e5f45bb10376056f3083e97cde50",
        "patch": "@@ -1,396 +1,218 @@\n #include \"optionsdialog.h\"\n-#include \"optionsmodel.h\"\n+#include \"ui_optionsdialog.h\"\n+\n #include \"bitcoinamountfield.h\"\n-#include \"monitoreddatamapper.h\"\n-#include \"guiutil.h\"\n #include \"bitcoinunits.h\"\n+#include \"monitoreddatamapper.h\"\n+#include \"netbase.h\"\n+#include \"optionsmodel.h\"\n+#include \"qvalidatedlineedit.h\"\n #include \"qvaluecombobox.h\"\n \n-#include <QHBoxLayout>\n-#include <QVBoxLayout>\n-#include <QPushButton>\n-#include <QListWidget>\n-#include <QStackedWidget>\n-\n #include <QCheckBox>\n+#include <QDir>\n+#include <QIntValidator>\n #include <QLabel>\n #include <QLineEdit>\n-#include <QIntValidator>\n-#include <QDoubleValidator>\n-#include <QRegExpValidator>\n-#include <QDialogButtonBox>\n-#include <QDir>\n #include <QMessageBox>\n+#include <QPushButton>\n+#include <QRegExp>\n+#include <QRegExpValidator>\n+#include <QTabWidget>\n+#include <QWidget>\n \n-class OptionsPage: public QWidget\n-{\n-    Q_OBJECT\n-public:\n-    explicit OptionsPage(QWidget *parent=0): QWidget(parent) {}\n-\n-    virtual void setMapper(MonitoredDataMapper *mapper) = 0;\n-};\n-\n-class MainOptionsPage: public OptionsPage\n-{\n-    Q_OBJECT\n-public:\n-    explicit MainOptionsPage(QWidget *parent=0);\n-\n-    virtual void setMapper(MonitoredDataMapper *mapper);\n-private:\n-    BitcoinAmountField *fee_edit;\n-    QCheckBox *bitcoin_at_startup;\n-    QCheckBox *detach_database;\n-};\n-\n-class WindowOptionsPage: public OptionsPage\n+OptionsDialog::OptionsDialog(QWidget *parent) :\n+    QDialog(parent),\n+    ui(new Ui::OptionsDialog),\n+    model(0),\n+    mapper(0),\n+    fRestartWarningDisplayed_Proxy(false),\n+    fRestartWarningDisplayed_Lang(false),\n+    fProxyIpValid(true)\n {\n-    Q_OBJECT\n-public:\n-    explicit WindowOptionsPage(QWidget *parent=0);\n+    ui->setupUi(this);\n \n-    virtual void setMapper(MonitoredDataMapper *mapper);\n-private:\n-#ifndef Q_WS_MAC\n-    QCheckBox *minimize_to_tray;\n-    QCheckBox *minimize_on_close;\n+    /* Network elements init */\n+#ifndef USE_UPNP\n+    ui->mapPortUpnp->setEnabled(false);\n #endif\n-};\n-\n-class DisplayOptionsPage: public OptionsPage\n-{\n-    Q_OBJECT\n-public:\n-    explicit DisplayOptionsPage(QWidget *parent=0);\n-\n-    virtual void setMapper(MonitoredDataMapper *mapper);\n-private:\n-    QValueComboBox *lang;\n-    QValueComboBox *unit;\n-    QCheckBox *display_addresses;\n-    bool restart_warning_displayed;\n-private slots:\n-    void showRestartWarning();\n-};\n-\n-class NetworkOptionsPage: public OptionsPage\n-{\n-    Q_OBJECT\n-public:\n-    explicit NetworkOptionsPage(QWidget *parent=0);\n-\n-    virtual void setMapper(MonitoredDataMapper *mapper);\n-private:\n-    QCheckBox *map_port_upnp;\n-    QCheckBox *connect_socks4;\n-    QLineEdit *proxy_ip;\n-    QLineEdit *proxy_port;\n-};\n \n+    ui->socksVersion->setEnabled(false);\n+    ui->socksVersion->addItem(\"5\", 5);\n+    ui->socksVersion->addItem(\"4\", 4);\n+    ui->socksVersion->setCurrentIndex(0);\n \n-#include \"optionsdialog.moc\"\n+    ui->proxyIp->setEnabled(false);\n+    ui->proxyPort->setEnabled(false);\n+    ui->proxyPort->setValidator(new QIntValidator(0, 65535, this));\n \n-OptionsDialog::OptionsDialog(QWidget *parent):\n-    QDialog(parent), contents_widget(0), pages_widget(0),\n-    model(0)\n-{\n-    contents_widget = new QListWidget();\n-    contents_widget->setMaximumWidth(128);\n+    connect(ui->connectSocks, SIGNAL(toggled(bool)), ui->socksVersion, SLOT(setEnabled(bool)));\n+    connect(ui->connectSocks, SIGNAL(toggled(bool)), ui->proxyIp, SLOT(setEnabled(bool)));\n+    connect(ui->connectSocks, SIGNAL(toggled(bool)), ui->proxyPort, SLOT(setEnabled(bool)));\n \n-    pages_widget = new QStackedWidget();\n-    pages_widget->setMinimumWidth(500);\n-    pages_widget->setMinimumHeight(300);\n+    ui->proxyIp->installEventFilter(this);\n \n-    pages.append(new MainOptionsPage(this));\n-    pages.append(new NetworkOptionsPage(this));\n-#ifndef Q_WS_MAC\n-    /* Hide Window options on Mac as there are currently none available */\n-    pages.append(new WindowOptionsPage(this));\n+    /* Window elements init */\n+#ifdef Q_WS_MAC\n+    ui->tabWindow->setVisible(false);\n #endif\n-    pages.append(new DisplayOptionsPage(this));\n \n-    foreach(OptionsPage *page, pages)\n+    /* Display elements init */\n+    QDir translations(\":translations\");\n+    ui->lang->addItem(QString(\"(\") + tr(\"default\") + QString(\")\"), QVariant(\"\"));\n+    foreach(const QString &langStr, translations.entryList())\n     {\n-        QListWidgetItem *item = new QListWidgetItem(page->windowTitle());\n-        contents_widget->addItem(item);\n-        pages_widget->addWidget(page);\n+        ui->lang->addItem(langStr, QVariant(langStr));\n     }\n \n-    contents_widget->setCurrentRow(0);\n-\n-    QHBoxLayout *main_layout = new QHBoxLayout();\n-    main_layout->addWidget(contents_widget);\n-    main_layout->addWidget(pages_widget, 1);\n-\n-    QVBoxLayout *layout = new QVBoxLayout();\n-    layout->addLayout(main_layout);\n+    ui->unit->setModel(new BitcoinUnits(this));\n \n-    QDialogButtonBox *buttonbox = new QDialogButtonBox();\n-    buttonbox->setStandardButtons(QDialogButtonBox::Apply|QDialogButtonBox::Ok|QDialogButtonBox::Cancel);\n-    apply_button = buttonbox->button(QDialogButtonBox::Apply);\n-    layout->addWidget(buttonbox);\n-\n-    setLayout(layout);\n-    setWindowTitle(tr(\"Options\"));\n+    connect(ui->connectSocks, SIGNAL(clicked(bool)), this, SLOT(showRestartWarning_Proxy()));\n+    connect(ui->lang, SIGNAL(activated(int)), this, SLOT(showRestartWarning_Lang()));\n \n     /* Widget-to-option mapper */\n     mapper = new MonitoredDataMapper(this);\n     mapper->setSubmitPolicy(QDataWidgetMapper::ManualSubmit);\n     mapper->setOrientation(Qt::Vertical);\n-    /* enable apply button when data modified */\n-    connect(mapper, SIGNAL(viewModified()), this, SLOT(enableApply()));\n-    /* disable apply button when new data loaded */\n-    connect(mapper, SIGNAL(currentIndexChanged(int)), this, SLOT(disableApply()));\n-\n-    /* Event bindings */\n-    connect(contents_widget, SIGNAL(currentRowChanged(int)), this, SLOT(changePage(int)));\n-    connect(buttonbox->button(QDialogButtonBox::Ok), SIGNAL(clicked()), this, SLOT(okClicked()));\n-    connect(buttonbox->button(QDialogButtonBox::Cancel), SIGNAL(clicked()), this, SLOT(cancelClicked()));\n-    connect(buttonbox->button(QDialogButtonBox::Apply), SIGNAL(clicked()), this, SLOT(applyClicked()));\n+\n+    /* enable save buttons when data modified */\n+    connect(mapper, SIGNAL(viewModified()), this, SLOT(enableSaveButtons()));\n+    /* disable save buttons when new data loaded */\n+    connect(mapper, SIGNAL(currentIndexChanged(int)), this, SLOT(disableSaveButtons()));\n+    /* disable/enable save buttons when proxy IP is invalid/valid */\n+    connect(this, SIGNAL(proxyIpValid(bool)), this, SLOT(setSaveButtonState(bool)));\n+}\n+\n+OptionsDialog::~OptionsDialog()\n+{\n+    delete ui;\n }\n \n void OptionsDialog::setModel(OptionsModel *model)\n {\n     this->model = model;\n \n-    mapper->setModel(model);\n-\n-    foreach(OptionsPage *page, pages)\n+    if(model)\n     {\n-        page->setMapper(mapper);\n+        connect(model, SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n+\n+        mapper->setModel(model);\n+        setMapper();\n+        mapper->toFirst();\n     }\n \n-    mapper->toFirst();\n+    // update the display unit, to not use the default (\"BTC\")\n+    updateDisplayUnit();\n }\n \n-void OptionsDialog::changePage(int index)\n+void OptionsDialog::setMapper()\n {\n-    pages_widget->setCurrentIndex(index);\n-}\n+    /* Main */\n+    mapper->addMapping(ui->transactionFee, OptionsModel::Fee);\n+    mapper->addMapping(ui->bitcoinAtStartup, OptionsModel::StartAtStartup);\n+    mapper->addMapping(ui->detachDatabases, OptionsModel::DetachDatabases);\n \n-void OptionsDialog::okClicked()\n-{\n-    mapper->submit();\n-    accept();\n-}\n+    /* Network */\n+    mapper->addMapping(ui->mapPortUpnp, OptionsModel::MapPortUPnP);\n+    mapper->addMapping(ui->connectSocks, OptionsModel::ProxyUse);\n+    mapper->addMapping(ui->socksVersion, OptionsModel::ProxySocksVersion);\n+    mapper->addMapping(ui->proxyIp, OptionsModel::ProxyIP);\n+    mapper->addMapping(ui->proxyPort, OptionsModel::ProxyPort);\n \n-void OptionsDialog::cancelClicked()\n-{\n-    reject();\n-}\n+    /* Window */\n+#ifndef Q_WS_MAC\n+    mapper->addMapping(ui->minimizeToTray, OptionsModel::MinimizeToTray);\n+    mapper->addMapping(ui->minimizeOnClose, OptionsModel::MinimizeOnClose);\n+#endif\n \n-void OptionsDialog::applyClicked()\n-{\n-    mapper->submit();\n-    apply_button->setEnabled(false);\n+    /* Display */\n+    mapper->addMapping(ui->lang, OptionsModel::Language);\n+    mapper->addMapping(ui->unit, OptionsModel::DisplayUnit);\n+    mapper->addMapping(ui->displayAddresses, OptionsModel::DisplayAddresses);\n }\n \n-void OptionsDialog::enableApply()\n+void OptionsDialog::enableSaveButtons()\n {\n-    apply_button->setEnabled(true);\n+    // prevent enabling of the save buttons when data modified, if there is an invalid proxy address present\n+    if(fProxyIpValid)\n+        setSaveButtonState(true);\n }\n \n-void OptionsDialog::disableApply()\n+void OptionsDialog::disableSaveButtons()\n {\n-    apply_button->setEnabled(false);\n+    setSaveButtonState(false);\n }\n \n-/* Main options */\n-MainOptionsPage::MainOptionsPage(QWidget *parent):\n-        OptionsPage(parent)\n+void OptionsDialog::setSaveButtonState(bool fState)\n {\n-    QVBoxLayout *layout = new QVBoxLayout();\n-    setWindowTitle(tr(\"Main\"));\n-\n-    QLabel *fee_help = new QLabel(tr(\"Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.\"));\n-    fee_help->setWordWrap(true);\n-    layout->addWidget(fee_help);\n-\n-    QHBoxLayout *fee_hbox = new QHBoxLayout();\n-    fee_hbox->addSpacing(18);\n-    QLabel *fee_label = new QLabel(tr(\"Pay transaction &fee\"));\n-    fee_hbox->addWidget(fee_label);\n-    fee_edit = new BitcoinAmountField();\n-\n-    fee_label->setBuddy(fee_edit);\n-    fee_hbox->addWidget(fee_edit);\n-    fee_hbox->addStretch(1);\n-\n-    layout->addLayout(fee_hbox);\n-\n-    bitcoin_at_startup = new QCheckBox(tr(\"&Start Bitcoin on system login\"));\n-    bitcoin_at_startup->setToolTip(tr(\"Automatically start Bitcoin after logging in to the system\"));\n-    layout->addWidget(bitcoin_at_startup);\n-\n-    detach_database = new QCheckBox(tr(\"&Detach databases at shutdown\"));\n-    detach_database->setToolTip(tr(\"Detach block and address databases at shutdown. This means they can be moved to another data directory, but it slows down shutdown. The wallet is always detached.\"));\n-    layout->addWidget(detach_database);\n-\n-    layout->addStretch(1); // Extra space at bottom\n-    setLayout(layout);\n+    ui->applyButton->setEnabled(fState);\n+    ui->okButton->setEnabled(fState);\n }\n \n-void MainOptionsPage::setMapper(MonitoredDataMapper *mapper)\n+void OptionsDialog::on_okButton_clicked()\n {\n-    // Map model to widgets\n-    mapper->addMapping(fee_edit, OptionsModel::Fee);\n-    mapper->addMapping(bitcoin_at_startup, OptionsModel::StartAtStartup);\n-    mapper->addMapping(detach_database, OptionsModel::DetachDatabases);\n+    mapper->submit();\n+    accept();\n }\n \n-/* Display options */\n-DisplayOptionsPage::DisplayOptionsPage(QWidget *parent):\n-    OptionsPage(parent), restart_warning_displayed(false)\n+void OptionsDialog::on_cancelButton_clicked()\n {\n-    setWindowTitle(tr(\"Display\"));\n-\n-    QVBoxLayout *layout = new QVBoxLayout();\n-\n-    QHBoxLayout *lang_hbox = new QHBoxLayout();\n-    lang_hbox->addSpacing(18);\n-    QLabel *lang_label = new QLabel(tr(\"User Interface &Language:\"));\n-    lang_hbox->addWidget(lang_label);\n-    lang = new QValueComboBox(this);\n-    // Make list of languages\n-    QDir translations(\":translations\");\n-    lang->addItem(QString(\"(\") + tr(\"default\") + QString(\")\"), QVariant(\"\"));\n-    foreach(const QString &langStr, translations.entryList())\n-    {\n-        lang->addItem(langStr, QVariant(langStr));\n-    }\n-\n-    lang->setToolTip(tr(\"The user interface language can be set here. This setting will only take effect after restarting Bitcoin.\"));\n-    connect(lang, SIGNAL(activated(int)), this, SLOT(showRestartWarning()));\n-\n-    lang_label->setBuddy(lang);\n-    lang_hbox->addWidget(lang);\n-\n-    layout->addLayout(lang_hbox);\n-\n-    QHBoxLayout *unit_hbox = new QHBoxLayout();\n-    unit_hbox->addSpacing(18);\n-    QLabel *unit_label = new QLabel(tr(\"&Unit to show amounts in:\"));\n-    unit_hbox->addWidget(unit_label);\n-    unit = new QValueComboBox(this);\n-    unit->setModel(new BitcoinUnits(this));\n-    unit->setToolTip(tr(\"Choose the default subdivision unit to show in the interface, and when sending coins\"));\n-\n-    unit_label->setBuddy(unit);\n-    unit_hbox->addWidget(unit);\n-\n-    layout->addLayout(unit_hbox);\n-\n-    display_addresses = new QCheckBox(tr(\"&Display addresses in transaction list\"), this);\n-    display_addresses->setToolTip(tr(\"Whether to show Bitcoin addresses in the transaction list\"));\n-    layout->addWidget(display_addresses);\n-\n-    layout->addStretch();\n-    setLayout(layout);\n+    reject();\n }\n \n-void DisplayOptionsPage::setMapper(MonitoredDataMapper *mapper)\n+void OptionsDialog::on_applyButton_clicked()\n {\n-    mapper->addMapping(lang, OptionsModel::Language);\n-    mapper->addMapping(unit, OptionsModel::DisplayUnit);\n-    mapper->addMapping(display_addresses, OptionsModel::DisplayAddresses);\n+    mapper->submit();\n+    ui->applyButton->setEnabled(false);\n }\n \n-void DisplayOptionsPage::showRestartWarning()\n+void OptionsDialog::showRestartWarning_Proxy()\n {\n-    if(!restart_warning_displayed)\n+    if(!fRestartWarningDisplayed_Proxy)\n     {\n         QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting Bitcoin.\"), QMessageBox::Ok);\n-        restart_warning_displayed = true;\n+        fRestartWarningDisplayed_Proxy = true;\n     }\n }\n \n-/* Window options */\n-WindowOptionsPage::WindowOptionsPage(QWidget *parent):\n-        OptionsPage(parent)\n-{\n-    QVBoxLayout *layout = new QVBoxLayout();\n-    setWindowTitle(tr(\"Window\"));\n-\n-#ifndef Q_WS_MAC\n-    minimize_to_tray = new QCheckBox(tr(\"&Minimize to the tray instead of the taskbar\"));\n-    minimize_to_tray->setToolTip(tr(\"Show only a tray icon after minimizing the window\"));\n-    layout->addWidget(minimize_to_tray);\n-\n-    minimize_on_close = new QCheckBox(tr(\"M&inimize on close\"));\n-    minimize_on_close->setToolTip(tr(\"Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Quit in the menu.\"));\n-    layout->addWidget(minimize_on_close);\n-#endif\n-\n-    layout->addStretch(1); // Extra space at bottom\n-    setLayout(layout);\n-}\n-\n-void WindowOptionsPage::setMapper(MonitoredDataMapper *mapper)\n+void OptionsDialog::showRestartWarning_Lang()\n {\n-    // Map model to widgets\n-#ifndef Q_WS_MAC\n-    mapper->addMapping(minimize_to_tray, OptionsModel::MinimizeToTray);\n-#endif\n-#ifndef Q_WS_MAC\n-    mapper->addMapping(minimize_on_close, OptionsModel::MinimizeOnClose);\n-#endif\n+    if(!fRestartWarningDisplayed_Lang)\n+    {\n+        QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting Bitcoin.\"), QMessageBox::Ok);\n+        fRestartWarningDisplayed_Lang = true;\n+    }\n }\n \n-/* Network options */\n-NetworkOptionsPage::NetworkOptionsPage(QWidget *parent):\n-        OptionsPage(parent)\n+void OptionsDialog::updateDisplayUnit()\n {\n-    QVBoxLayout *layout = new QVBoxLayout();\n-    setWindowTitle(tr(\"Network\"));\n-\n-    map_port_upnp = new QCheckBox(tr(\"Map port using &UPnP\"));\n-    map_port_upnp->setToolTip(tr(\"Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.\"));\n-    layout->addWidget(map_port_upnp);\n-\n-    connect_socks4 = new QCheckBox(tr(\"&Connect through SOCKS4 proxy:\"));\n-    connect_socks4->setToolTip(tr(\"Connect to the Bitcon network through a SOCKS4 proxy (e.g. when connecting through Tor)\"));\n-    layout->addWidget(connect_socks4);\n-\n-    QHBoxLayout *proxy_hbox = new QHBoxLayout();\n-    proxy_hbox->addSpacing(18);\n-    QLabel *proxy_ip_label = new QLabel(tr(\"Proxy &IP:\"));\n-    proxy_hbox->addWidget(proxy_ip_label);\n-    proxy_ip = new QLineEdit();\n-    proxy_ip->setMaximumWidth(140);\n-    proxy_ip->setEnabled(false);\n-    proxy_ip->setValidator(new QRegExpValidator(QRegExp(\"[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\"), this));\n-    proxy_ip->setToolTip(tr(\"IP address of the proxy (e.g. 127.0.0.1)\"));\n-    proxy_ip_label->setBuddy(proxy_ip);\n-    proxy_hbox->addWidget(proxy_ip);\n-    QLabel *proxy_port_label = new QLabel(tr(\"&Port:\"));\n-    proxy_hbox->addWidget(proxy_port_label);\n-    proxy_port = new QLineEdit();\n-    proxy_port->setMaximumWidth(55);\n-    proxy_port->setValidator(new QIntValidator(0, 65535, this));\n-    proxy_port->setEnabled(false);\n-    proxy_port->setToolTip(tr(\"Port of the proxy (e.g. 1234)\"));\n-    proxy_port_label->setBuddy(proxy_port);\n-    proxy_hbox->addWidget(proxy_port);\n-    proxy_hbox->addStretch(1);\n-    layout->addLayout(proxy_hbox);\n-\n-    layout->addStretch(1); // Extra space at bottom\n-    setLayout(layout);\n-\n-    connect(connect_socks4, SIGNAL(toggled(bool)), proxy_ip, SLOT(setEnabled(bool)));\n-    connect(connect_socks4, SIGNAL(toggled(bool)), proxy_port, SLOT(setEnabled(bool)));\n-\n-#ifndef USE_UPNP\n-    map_port_upnp->setDisabled(true);\n-#endif\n+    if(model)\n+    {\n+        // Update transactionFee with the current unit\n+        ui->transactionFee->setDisplayUnit(model->getDisplayUnit());\n+    }\n }\n \n-void NetworkOptionsPage::setMapper(MonitoredDataMapper *mapper)\n+bool OptionsDialog::eventFilter(QObject *object, QEvent *event)\n {\n-    // Map model to widgets\n-    mapper->addMapping(map_port_upnp, OptionsModel::MapPortUPnP);\n-    mapper->addMapping(connect_socks4, OptionsModel::ProxyUse);\n-    mapper->addMapping(proxy_ip, OptionsModel::ProxyIP);\n-    mapper->addMapping(proxy_port, OptionsModel::ProxyPort);\n+    if(object == ui->proxyIp && event->type() == QEvent::FocusOut)\n+    {\n+        // Check proxyIP for a valid IPv4/IPv6 address\n+        CService addr;\n+        if(!LookupNumeric(ui->proxyIp->text().toStdString().c_str(), addr))\n+        {\n+            ui->proxyIp->setValid(false);\n+            fProxyIpValid = false;\n+            ui->statusLabel->setStyleSheet(\"QLabel { color: red; }\");\n+            ui->statusLabel->setText(tr(\"The supplied proxy address is invalid.\"));\n+            emit proxyIpValid(false);\n+        }\n+        else\n+        {\n+            fProxyIpValid = true;\n+            ui->statusLabel->clear();\n+            emit proxyIpValid(true);\n+        }\n+    }\n+    return QDialog::eventFilter(object, event);\n }"
      },
      {
        "sha": "7e91c96475db72991149933a5c9bf731cd4bc204",
        "filename": "src/qt/optionsdialog.h",
        "status": "modified",
        "additions": 30,
        "deletions": 25,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4443c2be141e5f45bb10376056f3083e97cde50/src/qt/optionsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4443c2be141e5f45bb10376056f3083e97cde50/src/qt/optionsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.h?ref=c4443c2be141e5f45bb10376056f3083e97cde50",
        "patch": "@@ -2,48 +2,53 @@\n #define OPTIONSDIALOG_H\n \n #include <QDialog>\n-#include <QList>\n-\n-QT_BEGIN_NAMESPACE\n-class QStackedWidget;\n-class QListWidget;\n-class QListWidgetItem;\n-class QPushButton;\n-QT_END_NAMESPACE\n+\n+namespace Ui {\n+class OptionsDialog;\n+}\n class OptionsModel;\n-class OptionsPage;\n class MonitoredDataMapper;\n \n /** Preferences dialog. */\n class OptionsDialog : public QDialog\n {\n     Q_OBJECT\n+\n public:\n-    explicit OptionsDialog(QWidget *parent=0);\n+    explicit OptionsDialog(QWidget *parent = 0);\n+    ~OptionsDialog();\n \n     void setModel(OptionsModel *model);\n+    void setMapper();\n \n-signals:\n-\n-public slots:\n-    /** Change the current page to \\a index. */\n-    void changePage(int index);\n+protected:\n+    bool eventFilter(QObject *object, QEvent *event);\n \n private slots:\n-    void okClicked();\n-    void cancelClicked();\n-    void applyClicked();\n-    void enableApply();\n-    void disableApply();\n+    /* enable apply button and OK button */\n+    void enableSaveButtons();\n+    /* disable apply button and OK button */\n+    void disableSaveButtons();\n+    /* set apply button and OK button state (enabled / disabled) */\n+    void setSaveButtonState(bool fState);\n+    void on_okButton_clicked();\n+    void on_cancelButton_clicked();\n+    void on_applyButton_clicked();\n+\n+    void showRestartWarning_Proxy();\n+    void showRestartWarning_Lang();\n+    void updateDisplayUnit();\n+\n+signals:\n+    void proxyIpValid(bool fValid);\n \n private:\n-    QListWidget *contents_widget;\n-    QStackedWidget *pages_widget;\n+    Ui::OptionsDialog *ui;\n     OptionsModel *model;\n     MonitoredDataMapper *mapper;\n-    QPushButton *apply_button;\n-\n-    QList<OptionsPage*> pages;\n+    bool fRestartWarningDisplayed_Proxy;\n+    bool fRestartWarningDisplayed_Lang;\n+    bool fProxyIpValid;\n };\n \n #endif // OPTIONSDIALOG_H"
      },
      {
        "sha": "d6c6bbf40910ca5bd6e760690e7f03a0d24118c2",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4443c2be141e5f45bb10376056f3083e97cde50/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4443c2be141e5f45bb10376056f3083e97cde50/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=c4443c2be141e5f45bb10376056f3083e97cde50",
        "patch": "@@ -20,6 +20,7 @@ bool static ApplyProxySettings()\n     if (!settings.value(\"fUseProxy\", false).toBool()) {\n         addrProxy = CService();\n         nSocksVersion = 0;\n+        return false;\n     }\n     if (nSocksVersion && !addrProxy.IsValid())\n         return false;\n@@ -53,6 +54,8 @@ void OptionsModel::Init()\n         SoftSetBoolArg(\"-upnp\", settings.value(\"fUseUPnP\").toBool());\n     if (settings.contains(\"addrProxy\") && settings.value(\"fUseProxy\").toBool())\n         SoftSetArg(\"-proxy\", settings.value(\"addrProxy\").toString().toStdString());\n+    if (settings.contains(\"nSocksVersion\") && settings.value(\"fUseProxy\").toBool())\n+        SoftSetArg(\"-socks\", settings.value(\"nSocksVersion\").toString().toStdString());\n     if (settings.contains(\"detachDB\"))\n         SoftSetBoolArg(\"-detachdb\", settings.value(\"detachDB\").toBool());\n     if (!language.isEmpty())\n@@ -142,7 +145,7 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n         case ProxyUse:\n             return settings.value(\"fUseProxy\", false);\n         case ProxySocksVersion:\n-            return settings.value(\"nSocksVersion\", false);\n+            return settings.value(\"nSocksVersion\", 5);\n         case ProxyIP: {\n             CService addrProxy;\n             if (GetProxy(NET_IPV4, addrProxy))\n@@ -203,6 +206,10 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             settings.setValue(\"fUseProxy\", value.toBool());\n             ApplyProxySettings();\n             break;\n+        case ProxySocksVersion:\n+            settings.setValue(\"nSocksVersion\", value.toInt());\n+            ApplyProxySettings();\n+            break;\n         case ProxyIP:\n             {\n                 CService addrProxy(\"127.0.0.1\", 9050);"
      }
    ]
  }
]