laanwj,2016-10-24T07:26:27Z,"Concept ACK.\n\nAlthough there looks to be a lot of code (as well as argument changes) to force powLimit to be interpreted as (""7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"").\n\nWhat would be the disadvantage of just changing ConsensusParams.powLimit to that value in this case?\n\nAlso: maybe this should be allowed for the test networks only, not mainnet?\n",https://github.com/bitcoin/bitcoin/pull/9000#issuecomment-255666800,255666800,
gmaxwell,2016-10-25T08:39:06Z,"This is sort of the idea behind block proposals, but what you're doing is more drop-in sounds useful to me.\n\nRe: pow limit, I have a proposal in progress to remove checkpoints completely that makes the powlimit an argument as a side effect. https://github.com/gmaxwell/bitcoin/commit/2db190b183c5204da23191ca642c7f6cad412ae3\n",https://github.com/bitcoin/bitcoin/pull/9000#issuecomment-255973336,255973336,
theuni,2016-10-25T19:20:26Z,"@laanwj Allowing this to work on mainnet is actually a key part.\n\nThere's a reasonable next target for miner/pool testing: block reward to p2sh/p2wpkh/p2wsh. Most mining/pool software at the moment has only hard-coded support for paying to a pubkey hash. Obviously it would be nice give them the ability to support the other formats, but as-is, it can be tough (and potentially very expensive) to s",https://github.com/bitcoin/bitcoin/pull/9000#issuecomment-256148203,256148203,
laanwj,2016-10-25T21:54:15Z,"Yes agreed - I misunderstood the goal here, due to it being a global\ncommand-line argument instead of a per-use RPC argument. But you explain\nwhy in the OP (though it may still make sense to be able to do this with an\nRPC too)\n",https://github.com/bitcoin/bitcoin/pull/9000#issuecomment-256187422,256187422,
jtimon,2016-10-27T22:51:18Z,"utACK besides the fCheckPOW nit.\nIf the goal is to relay an invalid block on mainnet, neither the custom chains nor the blocksigned ones will help.\nRegarding CheckProofOfWork changing to taking the powLimit instead of the whole consensus params, I think it's fine that both do it. Whatever gets merged first will force the other one to rebase, but in a more or less trivial way. What you shouldn't ",https://github.com/bitcoin/bitcoin/pull/9000#issuecomment-256792001,256792001,
theuni,2016-10-27T23:37:23Z,"@jtimon I believe if we end up with both of these going in, @gmaxwell's change can simply decide which value to use inside of AcceptBlockHeader() before passing it on. I haven't looked closely though, that may not be the case. Either way, I'm sure rebasing would be no problem.\n\nAnd the goal isn't to relay an invalid block, it is simply to validate an otherwise-valid block that doesn't provide en",https://github.com/bitcoin/bitcoin/pull/9000#issuecomment-256799686,256799686,
btcdrak,2016-11-29T09:03:01Z,needs rebase.,https://github.com/bitcoin/bitcoin/pull/9000#issuecomment-263514037,263514037,
theuni,2016-12-02T22:40:04Z,"Rebased and fixed up @jtimon's nit.\n\nThis can be easily tested with bfgminer, either on testnet or mainnet.\n\nTestnet example:\nRun bitcoind: ```./bitcoind -forceminerdifficulty=493944831 -testnet -daemon -debug```\n\nand bfgminer: ```./bfgminer --no-local-bitcoin -o 127.0.0.1:18332 -O <rpcuser>:<rpcpass> --generate-to <some address> --scan auto```\n",https://github.com/bitcoin/bitcoin/pull/9000#issuecomment-264581879,264581879,
jtimon,2016-12-02T22:48:04Z,"mhmm, it doesn't look like you solved any of my two nits (to reiterate I don't really care much about the syle nit).",https://github.com/bitcoin/bitcoin/pull/9000#issuecomment-264583371,264583371,
btcdrak,2016-12-23T12:44:24Z,"needs rebase\n",https://github.com/bitcoin/bitcoin/pull/9000#issuecomment-268984755,268984755,
bitkevin,2017-01-08T02:47:29Z,"Check out codes:\n\n```\ngit clone https://github.com/theuni/bitcoin.git\n\ncd bitcoin\ngit checkout origin/faux-mining\n\n./autogen.sh\n./configure --disable-wallet\n```\n\nbuild failure:\n\n```\nIn file included from ./streams.h:13:0,\n                 from ./net.h:19,\n                 from ./main.h:16,\n                 from bench/checkblock.cpp:8:\nbench/checkblock.cpp: In ",https://github.com/bitcoin/bitcoin/pull/9000#issuecomment-271125479,271125479,
btcdrak,2017-02-13T22:29:40Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/9000#issuecomment-279544444,279544444,
jtimon,2016-10-27T22:35:04Z,"Since you are touching CheckBlockHeader, perhaps you could use the opportunity to remove the param fCheckPOW.\nNow checking the pow is the only thing CheckBlockHeader does, so if you don't want to check it just don't call the function.\n",https://github.com/bitcoin/bitcoin/pull/9000#discussion_r85441813,85441813,src/main.cpp
jtimon,2016-10-27T22:43:32Z,Tiny style nit: you could be inconsistent in the ordering of declaration and assignments to nBits and powLimit (ie either powLimit or nBits first in the 3 places). Feel free to ignore.\n,https://github.com/bitcoin/bitcoin/pull/9000#discussion_r85442880,85442880,src/rpc/mining.cpp
