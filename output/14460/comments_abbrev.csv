promag,2018-10-11T06:39:31Z,"> explicit using of the CAmount type.\n\nWhy? Is there an advantage?",https://github.com/bitcoin/bitcoin/pull/14460#issuecomment-428838688,428838688,
hebasto,2018-10-11T06:53:47Z,"@promag \n\n> Why?\n\nhttps://github.com/bitcoin/bitcoin/blob/eb7daf4d600eeb631427c018a984a77a34aca66e/src/policy/feerate.h#L37\n\n>  Is there an advantage?\n\nIt clearly shows what type of return value we are expecting from the methods being testing.\n",https://github.com/bitcoin/bitcoin/pull/14460#issuecomment-428841865,428841865,
promag,2018-10-11T10:46:16Z,utACK 29ed2d6.,https://github.com/bitcoin/bitcoin/pull/14460#issuecomment-428909362,428909362,
sipa,2018-10-12T20:11:20Z,"utACK.\n\nIs the eventual goal to remove the implicit conversion from other types to CAmount?\n\n@arvidn perhaps you're interested in this?",https://github.com/bitcoin/bitcoin/pull/14460#issuecomment-429448592,429448592,
jb55,2018-10-12T21:09:48Z,"> Is the eventual goal to remove the implicit conversion from other types to CAmount\n\nI hope so, right now this would remove testing of implicit conversions... is that a good thing?",https://github.com/bitcoin/bitcoin/pull/14460#issuecomment-429463114,429463114,
hebasto,2018-10-13T11:42:44Z,"@sipa @jb55 \nThank you for your reviews.\n\nIs it worth to just add an explicit test case for type conversions like this:\n```\nBOOST_AUTO_TEST_CASE(CAmountTypeConversionTest)\n{\n    BOOST_CHECK_EQUAL(CAmount(-MAX_MONEY), -MAX_MONEY);\n    BOOST_CHECK_EQUAL(CAmount(-1), -1);\n    BOOST_CHECK_EQUAL(CAmount(0), 0);\n    BOOST_CHECK_EQUAL(CAmount(1), 1);\n    BOOST_CHECK_EQUAL(CAmount(MA",https://github.com/bitcoin/bitcoin/pull/14460#issuecomment-429535222,429535222,
laanwj,2018-10-18T18:25:17Z,"> Is it worth to just add an explicit test case for type conversions like this:\n\nI don't think soâ€”because at the same time that would be worth testing (e.g. CAmount becomes an actual type instead of typedef), implicit conversion will be no longer possible",https://github.com/bitcoin/bitcoin/pull/14460#issuecomment-431113214,431113214,
laanwj,2018-10-18T18:29:34Z,utACK 29ed2d64f6d03e242068589ba35805b3fd2ad05a,https://github.com/bitcoin/bitcoin/pull/14460#issuecomment-431114547,431114547,
sipa,2018-10-20T02:15:58Z,utACK 29ed2d64f6d03e242068589ba35805b3fd2ad05a,https://github.com/bitcoin/bitcoin/pull/14460#issuecomment-431540866,431540866,
