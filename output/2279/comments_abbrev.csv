gavinandresen,2013-02-06T16:38:56Z,"For belt-and-suspenders sanity, I think places where we rely on other methods to set state.Invalid should have asserts; e.g.:\n\n```\n// Check it again in case a previous version let a bad block in                                                     \nif (!CheckBlock(state, !fJustCheck, !fJustCheck))\n{\n    assert(!state.IsValid()); // Rely on CheckBlock to set invalid state\n    return false;\n}",https://github.com/bitcoin/bitcoin/pull/2279#issuecomment-13191066,13191066,
gavinandresen,2013-02-06T18:43:28Z,"After more code review:  ACK for 0.8\n\nBut I think some deeper thought would be good for a better approach to handling database corruption/loss.\n\nFor example:  if CBlock::DisconnectBlock() returns error(""DisconnectBlock() : no undo data available"");\n... then SetBestChain() will return false-but-with-a-valid-state\n... so ConnectBestBlock() will return etc...\n... so AddToBlockIndex() ...\n... ",https://github.com/bitcoin/bitcoin/pull/2279#issuecomment-13197845,13197845,
luke-jr,2013-02-06T18:54:41Z,I suppose an advantage of the return-CValidationResult model would be that we'd get the compiler yelling at us for any missing states...\n,https://github.com/bitcoin/bitcoin/pull/2279#issuecomment-13198418,13198418,
BitcoinPullTester,2013-02-06T20:40:34Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7cdc37c0a427a378944cf58798164320110efe39 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/2279#issuecomment-13203888,13203888,
