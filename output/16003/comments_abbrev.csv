DrahtBot,2019-05-10 10:00:38,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16362](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16362.html) (Add bilingual_str type by hebasto)\n* [#157",https://github.com/bitcoin/bitcoin/pull/16003#issuecomment-491233939,491233939,
Empact,2019-05-15 19:35:03,"Two requests to simplify review:\n* squash travis fixups into the appropriate commit\n* split fixes into 2 PRs, one addressing each",https://github.com/bitcoin/bitcoin/pull/16003#issuecomment-492793956,492793956,
tryphe,2019-05-17 05:05:00,"@Empact Thanks. I thought it would be crazy to open two PRs, because bug 1 fixes something for sure, and bug 2 isn't really reproducible. Any bad behavior from bug 2 could be confused for bug 1, and it would be hard to tell which one it is. Eg, things could go south if not enough FDs were allocated (maybe allocated is the wrong word) _or_ not enough were asserted. And since file descriptor problem",https://github.com/bitcoin/bitcoin/pull/16003#issuecomment-493320996,493320996,
tryphe,2019-07-18 21:41:27,"Maybe we can just implement `-extrafds=n` (or maybe just `fds` for the total and define the minimum somewhere) instead of modifying this code every time we realize something new or existing needs a file handle. It doesn't really make sense to modify this code if we can just modify a default config value, right (except of course for dynamic values that can't be known)?",https://github.com/bitcoin/bitcoin/pull/16003#issuecomment-512999371,512999371,
tryphe,2019-07-19 18:55:26,"I figured I should supply some pseudocode to show what happens differently in the code and how it's related to both Bug 1 and 2. There's a bit of redundant code, and lots of constants from other places, so I tried to reduce the amount of references needed to actually understand what's going on.\n\nSuppose you are running Mac OS X and listening on the network interface. The ulimit is 256. Suppose",https://github.com/bitcoin/bitcoin/pull/16003#issuecomment-513339232,513339232,
DrahtBot,2019-07-24 18:15:51,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/16003#issuecomment-514742342,514742342,
adamjonas,2020-05-06 01:51:52,Hi @tryphe - Wondering if you are going to continue with this PR or whether it should be closed. It looks like this has needed a rebase for some time. I'd also suggest you squash your commits in accordance with the [CONTRIBUTING](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits) guidelines and add tests as [suggested above](https://github.com/bitcoin/bitcoin/pull/16,https://github.com/bitcoin/bitcoin/pull/16003#issuecomment-624402364,624402364,
fanquake,2020-05-07 23:21:07,"Will close this for now. However I think the changes are worth following up on, so will open a new good first issue. Will also extract one change that can just be merged now.",https://github.com/bitcoin/bitcoin/pull/16003#issuecomment-625545233,625545233,
tryphe,2020-05-18 18:15:04,"Thanks for following up @adamjonas @fanquake!\n\nI certainly don't think this is the most correct way to proceed, especially with the large scope of changes with new sockets and threads. But it's closer than what we had before, in terms of knowing the [required, requested, allocated] counts of FDs. I think it makes much more sense to modularize the summing of FDs and make it easier to obtain the",https://github.com/bitcoin/bitcoin/pull/16003#issuecomment-630352434,630352434,
Empact,2019-05-15 19:33:32,"nit: `MAX_FEELER_CONNECTIONS` for consistency, and coherence with `nMaxFeeler`",https://github.com/bitcoin/bitcoin/pull/16003#discussion_r284417045,284417045,src/net.h
tryphe,2019-05-17 05:16:32,"Right, that makes sense. This essentially becomes 0 when -maxconnections <=MAX_OUTBOUND_CONNECTIONS, which I wasn't sure of initially.",https://github.com/bitcoin/bitcoin/pull/16003#discussion_r284980505,284980505,src/net.h
tryphe,2019-05-17 05:48:14,I wonder if we need `<int>` here? Both arguments are `int` now. But I didn't want to cover up this old fix.,https://github.com/bitcoin/bitcoin/pull/16003#discussion_r284984825,284984825,src/init.cpp
tryphe,2019-07-18 20:35:56,nit: maybe I should remove this change for log compatability,https://github.com/bitcoin/bitcoin/pull/16003#discussion_r305103809,305103809,src/init.cpp
