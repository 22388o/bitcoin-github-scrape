[
  {
    "sha": "fd55571f069640fc2733410061e82b8dd2ed9280",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDU1NTcxZjA2OTY0MGZjMjczMzQxMDA2MWU4MmI4ZGQyZWQ5Mjgw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2014-12-30T14:12:37Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-10-02T00:21:38Z"
      },
      "message": "wallet: Expose GUI labels in RPC",
      "tree": {
        "sha": "62238bb82daa943dff559d0d714e96cbfb332190",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/62238bb82daa943dff559d0d714e96cbfb332190"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd55571f069640fc2733410061e82b8dd2ed9280",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd55571f069640fc2733410061e82b8dd2ed9280",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd55571f069640fc2733410061e82b8dd2ed9280",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd55571f069640fc2733410061e82b8dd2ed9280/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9ca7857df74c52eb2c46be36c88a12879be6cf8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ca7857df74c52eb2c46be36c88a12879be6cf8c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ca7857df74c52eb2c46be36c88a12879be6cf8c"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 14,
      "deletions": 3
    },
    "files": [
      {
        "sha": "bbd376618d280979145d816bb351feee18c2a66b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd55571f069640fc2733410061e82b8dd2ed9280/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd55571f069640fc2733410061e82b8dd2ed9280/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fd55571f069640fc2733410061e82b8dd2ed9280",
        "patch": "@@ -1182,6 +1182,8 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n             obj.push_back(Pair(\"account\",       strAccount));\n             obj.push_back(Pair(\"amount\",        ValueFromAmount(nAmount)));\n             obj.push_back(Pair(\"confirmations\", (nConf == std::numeric_limits<int>::max() ? 0 : nConf)));\n+            if (!fByAccounts)\n+                obj.push_back(Pair(\"label\", strAccount));\n             UniValue transactions(UniValue::VARR);\n             if (it != mapTally.end())\n             {\n@@ -1235,7 +1237,8 @@ UniValue listreceivedbyaddress(const UniValue& params, bool fHelp)\n             \"    \\\"address\\\" : \\\"receivingaddress\\\",  (string) The receiving address\\n\"\n             \"    \\\"account\\\" : \\\"accountname\\\",       (string) DEPRECATED. The account of the receiving address. The default account is \\\"\\\".\\n\"\n             \"    \\\"amount\\\" : x.xxx,                  (numeric) The total amount in \" + CURRENCY_UNIT + \" received by the address\\n\"\n-            \"    \\\"confirmations\\\" : n                (numeric) The number of confirmations of the most recent transaction included\\n\"\n+            \"    \\\"confirmations\\\" : n,               (numeric) The number of confirmations of the most recent transaction included\\n\"\n+            \"    \\\"label\\\" : \\\"label\\\"                (string) A comment for the address/transaction, if any\\n\"\n             \"  }\\n\"\n             \"  ,...\\n\"\n             \"]\\n\"\n@@ -1271,7 +1274,8 @@ UniValue listreceivedbyaccount(const UniValue& params, bool fHelp)\n             \"    \\\"involvesWatchonly\\\" : true,   (bool) Only returned if imported addresses were involved in transaction\\n\"\n             \"    \\\"account\\\" : \\\"accountname\\\",  (string) The account name of the receiving account\\n\"\n             \"    \\\"amount\\\" : x.xxx,             (numeric) The total amount received by addresses with this account\\n\"\n-            \"    \\\"confirmations\\\" : n           (numeric) The number of confirmations of the most recent transaction included\\n\"\n+            \"    \\\"confirmations\\\" : n,          (numeric) The number of confirmations of the most recent transaction included\\n\"\n+            \"    \\\"label\\\" : \\\"label\\\"           (string) A comment for the address/transaction, if any\\n\"\n             \"  }\\n\"\n             \"  ,...\\n\"\n             \"]\\n\"\n@@ -1318,6 +1322,8 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n             MaybePushAddress(entry, s.destination);\n             entry.push_back(Pair(\"category\", \"send\"));\n             entry.push_back(Pair(\"amount\", ValueFromAmount(-s.amount)));\n+            if (pwalletMain->mapAddressBook.count(s.destination))\n+                entry.push_back(Pair(\"label\", pwalletMain->mapAddressBook[s.destination].name));\n             entry.push_back(Pair(\"vout\", s.vout));\n             entry.push_back(Pair(\"fee\", ValueFromAmount(-nFee)));\n             if (fLong)\n@@ -1355,6 +1361,8 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n                     entry.push_back(Pair(\"category\", \"receive\"));\n                 }\n                 entry.push_back(Pair(\"amount\", ValueFromAmount(r.amount)));\n+                if (pwalletMain->mapAddressBook.count(r.destination))\n+                    entry.push_back(Pair(\"label\", account));\n                 entry.push_back(Pair(\"vout\", r.vout));\n                 if (fLong)\n                     WalletTxToJSON(wtx, entry);\n@@ -1423,6 +1431,7 @@ UniValue listtransactions(const UniValue& params, bool fHelp)\n             \"    \\\"timereceived\\\": xxx,      (numeric) The time received in seconds since epoch (midnight Jan 1 1970 GMT). Available \\n\"\n             \"                                          for 'send' and 'receive' category of transactions.\\n\"\n             \"    \\\"comment\\\": \\\"...\\\",       (string) If a comment is associated with the transaction.\\n\"\n+            \"    \\\"label\\\" : \\\"label\\\"       (string) A comment for the address/transaction, if any\\n\"\n             \"    \\\"otheraccount\\\": \\\"accountname\\\",  (string) For the 'move' category of transactions, the account the funds came \\n\"\n             \"                                          from (for receiving funds, positive amounts), or went to (for sending funds,\\n\"\n             \"                                          negative amounts).\\n\"\n@@ -1613,6 +1622,7 @@ UniValue listsinceblock(const UniValue& params, bool fHelp)\n             \"    \\\"time\\\": xxx,              (numeric) The transaction time in seconds since epoch (Jan 1 1970 GMT).\\n\"\n             \"    \\\"timereceived\\\": xxx,      (numeric) The time received in seconds since epoch (Jan 1 1970 GMT). Available for 'send' and 'receive' category of transactions.\\n\"\n             \"    \\\"comment\\\": \\\"...\\\",       (string) If a comment is associated with the transaction.\\n\"\n+            \"    \\\"label\\\" : \\\"label\\\"       (string) A comment for the address/transaction, if any\\n\"\n             \"    \\\"to\\\": \\\"...\\\",            (string) If a comment to is associated with the transaction.\\n\"\n              \"  ],\\n\"\n             \"  \\\"lastblock\\\": \\\"lastblockhash\\\"     (string) The hash of the last block\\n\"\n@@ -1700,7 +1710,8 @@ UniValue gettransaction(const UniValue& params, bool fHelp)\n             \"      \\\"account\\\" : \\\"accountname\\\",  (string) DEPRECATED. The account name involved in the transaction, can be \\\"\\\" for the default account.\\n\"\n             \"      \\\"address\\\" : \\\"bitcoinaddress\\\",   (string) The bitcoin address involved in the transaction\\n\"\n             \"      \\\"category\\\" : \\\"send|receive\\\",    (string) The category, either 'send' or 'receive'\\n\"\n-            \"      \\\"amount\\\" : x.xxx                  (numeric) The amount in \" + CURRENCY_UNIT + \"\\n\"\n+            \"      \\\"amount\\\" : x.xxx,                 (numeric) The amount in \" + CURRENCY_UNIT + \"\\n\"\n+            \"      \\\"label\\\" : \\\"label\\\",              (string) A comment for the address/transaction, if any\\n\"\n             \"      \\\"vout\\\" : n,                       (numeric) the vout value\\n\"\n             \"    }\\n\"\n             \"    ,...\\n\""
      }
    ]
  }
]