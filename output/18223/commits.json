[
  {
    "sha": "42a93bba786f3ea81e48dd89466dc9bfb7e63645",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MmE5M2JiYTc4NmYzZWE4MWU0OGRkODk0NjZkYzliZmI3ZTYzNjQ1",
    "commit": {
      "author": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-02-27T18:07:58Z"
      },
      "committer": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-02-27T18:07:58Z"
      },
      "message": "Add nutrino filter for p2wpkh script types",
      "tree": {
        "sha": "93ecdebd34858d337c893397f2c02ac53b6f99f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/93ecdebd34858d337c893397f2c02ac53b6f99f2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42a93bba786f3ea81e48dd89466dc9bfb7e63645",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42a93bba786f3ea81e48dd89466dc9bfb7e63645",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/42a93bba786f3ea81e48dd89466dc9bfb7e63645",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42a93bba786f3ea81e48dd89466dc9bfb7e63645/comments",
    "author": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c3b471592346b98ae9aedf7cbc2a4058061b1ad8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3b471592346b98ae9aedf7cbc2a4058061b1ad8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c3b471592346b98ae9aedf7cbc2a4058061b1ad8"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 48,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b8761134fe69b81b8af0bec55fdd2143dd5067f3",
        "filename": "src/blockfilter.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 1,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42a93bba786f3ea81e48dd89466dc9bfb7e63645/src/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42a93bba786f3ea81e48dd89466dc9bfb7e63645/src/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.cpp?ref=42a93bba786f3ea81e48dd89466dc9bfb7e63645",
        "patch": "@@ -11,6 +11,7 @@\n #include <hash.h>\n #include <primitives/transaction.h>\n #include <script/script.h>\n+#include <script/standard.h>\n #include <streams.h>\n \n /// SerType used to serialize parameters in GCS filter encoding.\n@@ -21,6 +22,7 @@ static constexpr int GCS_SER_VERSION = 0;\n \n static const std::map<BlockFilterType, std::string> g_filter_types = {\n     {BlockFilterType::BASIC, \"basic\"},\n+    {BlockFilterType::P2WPKH, \"p2wpkh\"},\n };\n \n template <typename OStream>\n@@ -279,6 +281,34 @@ static GCSFilter::ElementSet BasicFilterElements(const CBlock& block,\n     return elements;\n }\n \n+static GCSFilter::ElementSet P2WPKHFilterElements(const CBlock& block,\n+    const CBlockUndo& block_undo)\n+{\n+    GCSFilter::ElementSet elements;\n+\n+    for (const CTransactionRef& tx : block.vtx) {\n+        for (const CTxOut& txout : tx->vout) {\n+            const CScript& scriptPubKey = txout.scriptPubKey;\n+            std::vector<std::vector<unsigned char>> solutions;\n+            txnouttype script_type = Solver(txout.scriptPubKey, solutions);\n+            if (scriptPubKey.empty() || script_type != TX_WITNESS_V0_KEYHASH) continue;\n+            elements.emplace(scriptPubKey.begin(), scriptPubKey.end());\n+        }\n+    }\n+\n+    for (const CTxUndo& tx_undo : block_undo.vtxundo) {\n+        for (const Coin& prevout : tx_undo.vprevout) {\n+            const CScript& scriptPubKey = prevout.out.scriptPubKey;\n+            std::vector<std::vector<unsigned char>> solutions;\n+            txnouttype script_type = Solver(scriptPubKey, solutions);\n+            if (scriptPubKey.empty() || script_type != TX_WITNESS_V0_KEYHASH) continue;\n+            elements.emplace(scriptPubKey.begin(), scriptPubKey.end());\n+        }\n+    }\n+\n+    return elements;\n+}\n+\n BlockFilter::BlockFilter(BlockFilterType filter_type, const uint256& block_hash,\n                          std::vector<unsigned char> filter)\n     : m_filter_type(filter_type), m_block_hash(block_hash)\n@@ -297,7 +327,15 @@ BlockFilter::BlockFilter(BlockFilterType filter_type, const CBlock& block, const\n     if (!BuildParams(params)) {\n         throw std::invalid_argument(\"unknown filter_type\");\n     }\n-    m_filter = GCSFilter(params, BasicFilterElements(block, block_undo));\n+\n+    switch (m_filter_type) {\n+    case BlockFilterType::BASIC:\n+        m_filter = GCSFilter(params, BasicFilterElements(block, block_undo));\n+        break;\n+    case BlockFilterType::P2WPKH:\n+        m_filter = GCSFilter(params, P2WPKHFilterElements(block, block_undo));\n+        break;\n+    }\n }\n \n bool BlockFilter::BuildParams(GCSFilter::Params& params) const\n@@ -309,6 +347,13 @@ bool BlockFilter::BuildParams(GCSFilter::Params& params) const\n         params.m_P = BASIC_FILTER_P;\n         params.m_M = BASIC_FILTER_M;\n         return true;\n+    case BlockFilterType::P2WPKH:\n+        params.m_siphash_k0 = m_block_hash.GetUint64(0);\n+        params.m_siphash_k1 = m_block_hash.GetUint64(1);\n+        // using the same filter params as basic type\n+        params.m_P = BASIC_FILTER_P;\n+        params.m_M = BASIC_FILTER_M;\n+        return true;\n     case BlockFilterType::INVALID:\n         return false;\n     }"
      },
      {
        "sha": "7eba568b72821689408698e699b465c5b60d941a",
        "filename": "src/blockfilter.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42a93bba786f3ea81e48dd89466dc9bfb7e63645/src/blockfilter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42a93bba786f3ea81e48dd89466dc9bfb7e63645/src/blockfilter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.h?ref=42a93bba786f3ea81e48dd89466dc9bfb7e63645",
        "patch": "@@ -88,6 +88,8 @@ constexpr uint32_t BASIC_FILTER_M = 784931;\n enum class BlockFilterType : uint8_t\n {\n     BASIC = 0,\n+    // Floter 1 is reserved as option to include all filters\n+    P2WPKH = 2,\n     INVALID = 255,\n };\n "
      }
    ]
  },
  {
    "sha": "19b9959a3c02dc9cb98740d5740e709b971e0c03",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOWI5OTU5YTNjMDJkYzljYjk4NzQwZDU3NDBlNzA5Yjk3MWUwYzAz",
    "commit": {
      "author": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-02-27T18:47:59Z"
      },
      "committer": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-02-27T18:47:59Z"
      },
      "message": "Add possible values to cli description",
      "tree": {
        "sha": "e2318ecbc12c78d0962242fa857772adba813ddf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2318ecbc12c78d0962242fa857772adba813ddf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19b9959a3c02dc9cb98740d5740e709b971e0c03",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19b9959a3c02dc9cb98740d5740e709b971e0c03",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/19b9959a3c02dc9cb98740d5740e709b971e0c03",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19b9959a3c02dc9cb98740d5740e709b971e0c03/comments",
    "author": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "42a93bba786f3ea81e48dd89466dc9bfb7e63645",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42a93bba786f3ea81e48dd89466dc9bfb7e63645",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42a93bba786f3ea81e48dd89466dc9bfb7e63645"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d394283702dfffc8417325fe487ccc54b9cae070",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19b9959a3c02dc9cb98740d5740e709b971e0c03/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19b9959a3c02dc9cb98740d5740e709b971e0c03/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=19b9959a3c02dc9cb98740d5740e709b971e0c03",
        "patch": "@@ -2195,7 +2195,7 @@ static UniValue getblockfilter(const JSONRPCRequest& request)\n                 \"\\nRetrieve a BIP 157 content filter for a particular block.\\n\",\n                 {\n                     {\"blockhash\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The hash of the block\"},\n-                    {\"filtertype\", RPCArg::Type::STR, /*default*/ \"basic\", \"The type name of the filter\"},\n+                    {\"filtertype\", RPCArg::Type::STR, /*default*/ \"basic\", \"The type name of the filter, values: \" + ListBlockFilterTypes()},\n                 },\n                 RPCResult{\n                     \"{\\n\""
      }
    ]
  },
  {
    "sha": "70448154c9a5d2d37916703d745ca2373afee730",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MDQ0ODE1NGM5YTVkMmQzNzkxNjcwM2Q3NDVjYTIzNzNhZmVlNzMw",
    "commit": {
      "author": {
        "name": "Dan Gershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-02-28T14:49:23Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2020-02-28T14:49:23Z"
      },
      "message": "Apply suggestions from code review\n\nCo-Authored-By: D\u00e1vid Moln\u00e1r <molnardavid84@gmail.com>",
      "tree": {
        "sha": "6b63081504b0990c431280c3b43330b6dc63c812",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b63081504b0990c431280c3b43330b6dc63c812"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70448154c9a5d2d37916703d745ca2373afee730",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWShzCRBK7hj4Ov3rIwAAdHIIAFckFjCytEQ+iUhT4CI3Yefu\nyAYOQvn+qWBQ8vYmh9zY51W1dkYDz2e/nf9nGuiDkp72qjjv9Q5/R6bjEIquKFMJ\nO1xeotP6Jtk6MwHLhtHBpYwCPQN33BXNyLu42NyNbLuuwoNofL1ootRH2onsz+Br\ntyDKRutb4VWTVM/53S4J87XYxaC2uUKA8RucDz4d4c7L6Cc7lmsQWeDNBIirTaYS\nP3vyKhv/Bq4vwWH3E6VqTlIQV/TyZ70UqV2NsmrjlMM2mnBkIg8W8THPA61FrCHy\nga6FsbFkHUr5cPV06tuoeoOIhIxxf9mEkLUgtcYmFhnCP1wOjImqMh3CwV2FJjQ=\n=aeMD\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 6b63081504b0990c431280c3b43330b6dc63c812\nparent 19b9959a3c02dc9cb98740d5740e709b971e0c03\nauthor Dan Gershony <dan.gershony@gmail.com> 1582901363 +0100\ncommitter GitHub <noreply@github.com> 1582901363 +0100\n\nApply suggestions from code review\n\nCo-Authored-By: D\u00e1vid Moln\u00e1r <molnardavid84@gmail.com>"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70448154c9a5d2d37916703d745ca2373afee730",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/70448154c9a5d2d37916703d745ca2373afee730",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70448154c9a5d2d37916703d745ca2373afee730/comments",
    "author": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19b9959a3c02dc9cb98740d5740e709b971e0c03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19b9959a3c02dc9cb98740d5740e709b971e0c03",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19b9959a3c02dc9cb98740d5740e709b971e0c03"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "77cb4662ddd1eb638b3ad7752fb3debebddf4d45",
        "filename": "src/blockfilter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70448154c9a5d2d37916703d745ca2373afee730/src/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70448154c9a5d2d37916703d745ca2373afee730/src/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.cpp?ref=70448154c9a5d2d37916703d745ca2373afee730",
        "patch": "@@ -350,7 +350,7 @@ bool BlockFilter::BuildParams(GCSFilter::Params& params) const\n     case BlockFilterType::P2WPKH:\n         params.m_siphash_k0 = m_block_hash.GetUint64(0);\n         params.m_siphash_k1 = m_block_hash.GetUint64(1);\n-        // using the same filter params as basic type\n+        // Using the same filter params as basic type.\n         params.m_P = BASIC_FILTER_P;\n         params.m_M = BASIC_FILTER_M;\n         return true;"
      },
      {
        "sha": "1160fc599e269da5ad651a906f19cfbfab771914",
        "filename": "src/blockfilter.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70448154c9a5d2d37916703d745ca2373afee730/src/blockfilter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70448154c9a5d2d37916703d745ca2373afee730/src/blockfilter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.h?ref=70448154c9a5d2d37916703d745ca2373afee730",
        "patch": "@@ -88,7 +88,7 @@ constexpr uint32_t BASIC_FILTER_M = 784931;\n enum class BlockFilterType : uint8_t\n {\n     BASIC = 0,\n-    // Floter 1 is reserved as option to include all filters\n+    // Filter 1 is reserved as an option to include all filters.\n     P2WPKH = 2,\n     INVALID = 255,\n };"
      }
    ]
  },
  {
    "sha": "fcb3690581c8aef3044d8527fc5a3c0e60b06933",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmY2IzNjkwNTgxYzhhZWYzMDQ0ZDg1MjdmYzVhM2MwZTYwYjA2OTMz",
    "commit": {
      "author": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-02-28T16:21:48Z"
      },
      "committer": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-02-28T16:21:48Z"
      },
      "message": "Adding tests for p2wpkh filter type",
      "tree": {
        "sha": "48922e263647f49cab1d299c8197f2a094221472",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48922e263647f49cab1d299c8197f2a094221472"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fcb3690581c8aef3044d8527fc5a3c0e60b06933",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcb3690581c8aef3044d8527fc5a3c0e60b06933",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fcb3690581c8aef3044d8527fc5a3c0e60b06933",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcb3690581c8aef3044d8527fc5a3c0e60b06933/comments",
    "author": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "70448154c9a5d2d37916703d745ca2373afee730",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70448154c9a5d2d37916703d745ca2373afee730",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/70448154c9a5d2d37916703d745ca2373afee730"
      }
    ],
    "stats": {
      "total": 82,
      "additions": 78,
      "deletions": 4
    },
    "files": [
      {
        "sha": "bc3daabf3ee8802ad99488b76e1291303651fa25",
        "filename": "src/test/blockfilter_tests.cpp",
        "status": "modified",
        "additions": 78,
        "deletions": 4,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcb3690581c8aef3044d8527fc5a3c0e60b06933/src/test/blockfilter_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcb3690581c8aef3044d8527fc5a3c0e60b06933/src/test/blockfilter_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockfilter_tests.cpp?ref=fcb3690581c8aef3044d8527fc5a3c0e60b06933",
        "patch": "@@ -14,6 +14,8 @@\n \n #include <boost/test/unit_test.hpp>\n \n+#include <script/standard.h>\n+\n BOOST_AUTO_TEST_SUITE(blockfilter_tests)\n \n BOOST_AUTO_TEST_CASE(gcsfilter_test)\n@@ -125,6 +127,72 @@ BOOST_AUTO_TEST_CASE(blockfilter_basic_test)\n     BOOST_CHECK(default_ctor_block_filter_1.GetEncodedFilter() == default_ctor_block_filter_2.GetEncodedFilter());\n }\n \n+BOOST_AUTO_TEST_CASE(blockfilter_p2wpkh_test)\n+{\n+    CScript included_scripts[2], excluded_scripts[9];\n+\n+    included_scripts[0] = GetScriptForDestination(WitnessV0KeyHash());  // p2wpkh \n+    included_scripts[1] = GetScriptForDestination(WitnessV0KeyHash()); // p2wpkh \n+\n+    excluded_scripts[0] << std::vector<unsigned char>(0, 65) << OP_CHECKSIG; // p2pk \n+    excluded_scripts[1] << OP_0 << OP_HASH160 << std::vector<unsigned char>(1, 20) << OP_EQUALVERIFY << OP_CHECKSIG; // p2pkh \n+    excluded_scripts[2] << OP_1 << std::vector<unsigned char>(2, 33) << OP_1 << OP_CHECKMULTISIG; // multisig \n+    excluded_scripts[3] << OP_0 << std::vector<unsigned char>(3, 32); // push data \n+    excluded_scripts[4] << OP_4 << OP_ADD << OP_8 << OP_EQUAL; // random script \n+    excluded_scripts[5] << OP_RETURN << std::vector<unsigned char>(4, 40); // opreturn \n+    excluded_scripts[6] = GetScriptForDestination(WitnessV0ScriptHash()); // p2wsh\n+    excluded_scripts[7] << OP_RETURN << OP_4 << OP_ADD << OP_8 << OP_EQUAL; // none standard opreturn\n+\n+    CMutableTransaction tx_1;\n+    tx_1.vout.emplace_back(100, included_scripts[0]);\n+    tx_1.vout.emplace_back(200, excluded_scripts[0]);\n+    tx_1.vout.emplace_back(300, excluded_scripts[1]);\n+    tx_1.vout.emplace_back(400, excluded_scripts[2]);\n+\n+    CMutableTransaction tx_2;\n+    tx_2.vout.emplace_back(100, excluded_scripts[3]);\n+    tx_2.vout.emplace_back(0, excluded_scripts[4]);\n+    tx_2.vout.emplace_back(400, excluded_scripts[5]);\n+    tx_2.vout.emplace_back(400, excluded_scripts[8]); // Script is empty\n+\n+    CBlock block;\n+    block.vtx.push_back(MakeTransactionRef(tx_1));\n+    block.vtx.push_back(MakeTransactionRef(tx_2));\n+\n+    CBlockUndo block_undo;\n+    block_undo.vtxundo.emplace_back();\n+    block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(500, included_scripts[1]), 1000, true);\n+    block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(600, excluded_scripts[6]), 10000, false);\n+    block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(700, excluded_scripts[7]), 100000, false);\n+\n+    BlockFilter block_filter(BlockFilterType::P2WPKH, block, block_undo);\n+    const GCSFilter& filter = block_filter.GetFilter();\n+\n+    for (const CScript& script : included_scripts) {\n+        BOOST_CHECK(filter.Match(GCSFilter::Element(script.begin(), script.end())));\n+    }\n+    for (const CScript& script : excluded_scripts) {\n+        BOOST_CHECK(!filter.Match(GCSFilter::Element(script.begin(), script.end())));\n+    }\n+\n+    // Test serialization/unserialization.\n+    BlockFilter block_filter2;\n+\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << block_filter;\n+    stream >> block_filter2;\n+\n+    BOOST_CHECK_EQUAL(block_filter.GetFilterType(), block_filter2.GetFilterType());\n+    BOOST_CHECK_EQUAL(block_filter.GetBlockHash(), block_filter2.GetBlockHash());\n+    BOOST_CHECK(block_filter.GetEncodedFilter() == block_filter2.GetEncodedFilter());\n+\n+    BlockFilter default_ctor_block_filter_1;\n+    BlockFilter default_ctor_block_filter_2;\n+    BOOST_CHECK_EQUAL(default_ctor_block_filter_1.GetFilterType(), default_ctor_block_filter_2.GetFilterType());\n+    BOOST_CHECK_EQUAL(default_ctor_block_filter_1.GetBlockHash(), default_ctor_block_filter_2.GetBlockHash());\n+    BOOST_CHECK(default_ctor_block_filter_1.GetEncodedFilter() == default_ctor_block_filter_2.GetEncodedFilter());\n+}\n+\n BOOST_AUTO_TEST_CASE(blockfilters_json_test)\n {\n     UniValue json;\n@@ -182,13 +250,19 @@ BOOST_AUTO_TEST_CASE(blockfilters_json_test)\n BOOST_AUTO_TEST_CASE(blockfilter_type_names)\n {\n     BOOST_CHECK_EQUAL(BlockFilterTypeName(BlockFilterType::BASIC), \"basic\");\n+    BOOST_CHECK_EQUAL(BlockFilterTypeName(BlockFilterType::P2WPKH), \"p2wpkh\");\n     BOOST_CHECK_EQUAL(BlockFilterTypeName(static_cast<BlockFilterType>(255)), \"\");\n \n-    BlockFilterType filter_type;\n-    BOOST_CHECK(BlockFilterTypeByName(\"basic\", filter_type));\n-    BOOST_CHECK_EQUAL(filter_type, BlockFilterType::BASIC);\n+    BlockFilterType filter_type_basic;\n+    BOOST_CHECK(BlockFilterTypeByName(\"basic\", filter_type_basic));\n+    BOOST_CHECK_EQUAL(filter_type_basic, BlockFilterType::BASIC);\n+\n+    BlockFilterType filter_type_p2wpkh;\n+    BOOST_CHECK(BlockFilterTypeByName(\"p2wpkh\", filter_type_p2wpkh));\n+    BOOST_CHECK_EQUAL(filter_type_p2wpkh, BlockFilterType::P2WPKH);\n \n-    BOOST_CHECK(!BlockFilterTypeByName(\"unknown\", filter_type));\n+    BlockFilterType filter_type_unknown;\n+    BOOST_CHECK(!BlockFilterTypeByName(\"unknown\", filter_type_unknown));\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMmIyYWM2YzM4YTg3MGQ1OWQxOGU4ZDJkN2EwMzM3ZGM2M2M4NmE1",
    "commit": {
      "author": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-02-29T15:24:14Z"
      },
      "committer": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-02-29T15:24:14Z"
      },
      "message": "Make the filter element for witness ver0",
      "tree": {
        "sha": "cca84bdb4563b77f9e981591f62bc292006a80e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cca84bdb4563b77f9e981591f62bc292006a80e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5/comments",
    "author": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fcb3690581c8aef3044d8527fc5a3c0e60b06933",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcb3690581c8aef3044d8527fc5a3c0e60b06933",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fcb3690581c8aef3044d8527fc5a3c0e60b06933"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 30,
      "deletions": 25
    },
    "files": [
      {
        "sha": "a0587dc1d4dd694f9eaa29c8e456a99f256978f2",
        "filename": "src/blockfilter.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 11,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5/src/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5/src/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.cpp?ref=22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5",
        "patch": "@@ -22,7 +22,7 @@ static constexpr int GCS_SER_VERSION = 0;\n \n static const std::map<BlockFilterType, std::string> g_filter_types = {\n     {BlockFilterType::BASIC, \"basic\"},\n-    {BlockFilterType::P2WPKH, \"p2wpkh\"},\n+    {BlockFilterType::V0, \"v0\"},\n };\n \n template <typename OStream>\n@@ -281,27 +281,29 @@ static GCSFilter::ElementSet BasicFilterElements(const CBlock& block,\n     return elements;\n }\n \n-static GCSFilter::ElementSet P2WPKHFilterElements(const CBlock& block,\n+static GCSFilter::ElementSet V0FilterElements(const CBlock& block,\n     const CBlockUndo& block_undo)\n {\n     GCSFilter::ElementSet elements;\n \n     for (const CTransactionRef& tx : block.vtx) {\n         for (const CTxOut& txout : tx->vout) {\n             const CScript& scriptPubKey = txout.scriptPubKey;\n-            std::vector<std::vector<unsigned char>> solutions;\n-            txnouttype script_type = Solver(txout.scriptPubKey, solutions);\n-            if (scriptPubKey.empty() || script_type != TX_WITNESS_V0_KEYHASH) continue;\n+            int witnessversion;\n+            std::vector<unsigned char> witnessprogram;\n+            if (scriptPubKey.empty() || !scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) continue;\n+            if (!(witnessversion == 0 && (witnessprogram.size() == WITNESS_V0_KEYHASH_SIZE || witnessprogram.size() == WITNESS_V0_SCRIPTHASH_SIZE)))  continue;\n             elements.emplace(scriptPubKey.begin(), scriptPubKey.end());\n         }\n     }\n \n     for (const CTxUndo& tx_undo : block_undo.vtxundo) {\n         for (const Coin& prevout : tx_undo.vprevout) {\n             const CScript& scriptPubKey = prevout.out.scriptPubKey;\n-            std::vector<std::vector<unsigned char>> solutions;\n-            txnouttype script_type = Solver(scriptPubKey, solutions);\n-            if (scriptPubKey.empty() || script_type != TX_WITNESS_V0_KEYHASH) continue;\n+            int witnessversion;\n+            std::vector<unsigned char> witnessprogram;\n+            if (scriptPubKey.empty() || !scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) continue;\n+            if (!(witnessversion == 0 && (witnessprogram.size() == WITNESS_V0_KEYHASH_SIZE || witnessprogram.size() == WITNESS_V0_SCRIPTHASH_SIZE))) continue;\n             elements.emplace(scriptPubKey.begin(), scriptPubKey.end());\n         }\n     }\n@@ -332,8 +334,8 @@ BlockFilter::BlockFilter(BlockFilterType filter_type, const CBlock& block, const\n     case BlockFilterType::BASIC:\n         m_filter = GCSFilter(params, BasicFilterElements(block, block_undo));\n         break;\n-    case BlockFilterType::P2WPKH:\n-        m_filter = GCSFilter(params, P2WPKHFilterElements(block, block_undo));\n+    case BlockFilterType::V0:\n+        m_filter = GCSFilter(params, V0FilterElements(block, block_undo));\n         break;\n     }\n }\n@@ -347,7 +349,7 @@ bool BlockFilter::BuildParams(GCSFilter::Params& params) const\n         params.m_P = BASIC_FILTER_P;\n         params.m_M = BASIC_FILTER_M;\n         return true;\n-    case BlockFilterType::P2WPKH:\n+    case BlockFilterType::V0:\n         params.m_siphash_k0 = m_block_hash.GetUint64(0);\n         params.m_siphash_k1 = m_block_hash.GetUint64(1);\n         // Using the same filter params as basic type."
      },
      {
        "sha": "6d672090cca89e38fa2236d6144cefae5ca5a696",
        "filename": "src/blockfilter.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5/src/blockfilter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5/src/blockfilter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.h?ref=22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5",
        "patch": "@@ -89,7 +89,7 @@ enum class BlockFilterType : uint8_t\n {\n     BASIC = 0,\n     // Filter 1 is reserved as an option to include all filters.\n-    P2WPKH = 2,\n+    V0 = 2,\n     INVALID = 255,\n };\n "
      },
      {
        "sha": "7d6cc6d8c09ce3970c19f16c2add66dffb6328af",
        "filename": "src/test/blockfilter_tests.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 13,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5/src/test/blockfilter_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5/src/test/blockfilter_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockfilter_tests.cpp?ref=22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5",
        "patch": "@@ -127,33 +127,36 @@ BOOST_AUTO_TEST_CASE(blockfilter_basic_test)\n     BOOST_CHECK(default_ctor_block_filter_1.GetEncodedFilter() == default_ctor_block_filter_2.GetEncodedFilter());\n }\n \n-BOOST_AUTO_TEST_CASE(blockfilter_p2wpkh_test)\n+BOOST_AUTO_TEST_CASE(blockfilter_v0_test)\n {\n-    CScript included_scripts[2], excluded_scripts[9];\n+    CScript included_scripts[4], excluded_scripts[8];\n \n     included_scripts[0] = GetScriptForDestination(WitnessV0KeyHash());  // p2wpkh \n     included_scripts[1] = GetScriptForDestination(WitnessV0KeyHash()); // p2wpkh \n+    included_scripts[2] = GetScriptForDestination(WitnessV0ScriptHash()); // p2wsh\n+    included_scripts[3] = GetScriptForDestination(WitnessV0ScriptHash()); // p2wsh\n+\n \n     excluded_scripts[0] << std::vector<unsigned char>(0, 65) << OP_CHECKSIG; // p2pk \n     excluded_scripts[1] << OP_0 << OP_HASH160 << std::vector<unsigned char>(1, 20) << OP_EQUALVERIFY << OP_CHECKSIG; // p2pkh \n     excluded_scripts[2] << OP_1 << std::vector<unsigned char>(2, 33) << OP_1 << OP_CHECKMULTISIG; // multisig \n     excluded_scripts[3] << OP_0 << std::vector<unsigned char>(3, 32); // push data \n     excluded_scripts[4] << OP_4 << OP_ADD << OP_8 << OP_EQUAL; // random script \n     excluded_scripts[5] << OP_RETURN << std::vector<unsigned char>(4, 40); // opreturn \n-    excluded_scripts[6] = GetScriptForDestination(WitnessV0ScriptHash()); // p2wsh\n-    excluded_scripts[7] << OP_RETURN << OP_4 << OP_ADD << OP_8 << OP_EQUAL; // none standard opreturn\n+    excluded_scripts[6] << OP_RETURN << OP_4 << OP_ADD << OP_8 << OP_EQUAL; // none standard opreturn\n \n     CMutableTransaction tx_1;\n     tx_1.vout.emplace_back(100, included_scripts[0]);\n+    tx_1.vout.emplace_back(100, included_scripts[2]);\n     tx_1.vout.emplace_back(200, excluded_scripts[0]);\n     tx_1.vout.emplace_back(300, excluded_scripts[1]);\n     tx_1.vout.emplace_back(400, excluded_scripts[2]);\n \n     CMutableTransaction tx_2;\n+    tx_2.vout.emplace_back(100, included_scripts[3]);\n     tx_2.vout.emplace_back(100, excluded_scripts[3]);\n     tx_2.vout.emplace_back(0, excluded_scripts[4]);\n-    tx_2.vout.emplace_back(400, excluded_scripts[5]);\n-    tx_2.vout.emplace_back(400, excluded_scripts[8]); // Script is empty\n+    tx_2.vout.emplace_back(400, excluded_scripts[7]); // Script is empty\n \n     CBlock block;\n     block.vtx.push_back(MakeTransactionRef(tx_1));\n@@ -162,10 +165,10 @@ BOOST_AUTO_TEST_CASE(blockfilter_p2wpkh_test)\n     CBlockUndo block_undo;\n     block_undo.vtxundo.emplace_back();\n     block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(500, included_scripts[1]), 1000, true);\n-    block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(600, excluded_scripts[6]), 10000, false);\n-    block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(700, excluded_scripts[7]), 100000, false);\n+    block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(600, excluded_scripts[5]), 10000, false);\n+    block_undo.vtxundo.back().vprevout.emplace_back(CTxOut(700, excluded_scripts[6]), 100000, false);\n \n-    BlockFilter block_filter(BlockFilterType::P2WPKH, block, block_undo);\n+    BlockFilter block_filter(BlockFilterType::V0, block, block_undo);\n     const GCSFilter& filter = block_filter.GetFilter();\n \n     for (const CScript& script : included_scripts) {\n@@ -250,16 +253,16 @@ BOOST_AUTO_TEST_CASE(blockfilters_json_test)\n BOOST_AUTO_TEST_CASE(blockfilter_type_names)\n {\n     BOOST_CHECK_EQUAL(BlockFilterTypeName(BlockFilterType::BASIC), \"basic\");\n-    BOOST_CHECK_EQUAL(BlockFilterTypeName(BlockFilterType::P2WPKH), \"p2wpkh\");\n+    BOOST_CHECK_EQUAL(BlockFilterTypeName(BlockFilterType::V0), \"v0\");\n     BOOST_CHECK_EQUAL(BlockFilterTypeName(static_cast<BlockFilterType>(255)), \"\");\n \n     BlockFilterType filter_type_basic;\n     BOOST_CHECK(BlockFilterTypeByName(\"basic\", filter_type_basic));\n     BOOST_CHECK_EQUAL(filter_type_basic, BlockFilterType::BASIC);\n \n-    BlockFilterType filter_type_p2wpkh;\n-    BOOST_CHECK(BlockFilterTypeByName(\"p2wpkh\", filter_type_p2wpkh));\n-    BOOST_CHECK_EQUAL(filter_type_p2wpkh, BlockFilterType::P2WPKH);\n+    BlockFilterType filter_type_v0;\n+    BOOST_CHECK(BlockFilterTypeByName(\"v0\", filter_type_v0));\n+    BOOST_CHECK_EQUAL(filter_type_v0, BlockFilterType::V0);\n \n     BlockFilterType filter_type_unknown;\n     BOOST_CHECK(!BlockFilterTypeByName(\"unknown\", filter_type_unknown));"
      }
    ]
  },
  {
    "sha": "dac4d5a74fa42c3b4efa21ffa019a3ff75375510",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYWM0ZDVhNzRmYTQyYzNiNGVmYTIxZmZhMDE5YTNmZjc1Mzc1NTEw",
    "commit": {
      "author": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-03-01T23:59:19Z"
      },
      "committer": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-03-01T23:59:19Z"
      },
      "message": "Act on review",
      "tree": {
        "sha": "2cb96cb396f8ec5e1b9f8475aab310ba6452c2e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2cb96cb396f8ec5e1b9f8475aab310ba6452c2e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dac4d5a74fa42c3b4efa21ffa019a3ff75375510",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dac4d5a74fa42c3b4efa21ffa019a3ff75375510",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dac4d5a74fa42c3b4efa21ffa019a3ff75375510",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dac4d5a74fa42c3b4efa21ffa019a3ff75375510/comments",
    "author": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/22b2ac6c38a870d59d18e8d2d7a0337dc63c86a5"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 10,
      "deletions": 16
    },
    "files": [
      {
        "sha": "a172272b1bb4fe08d073c7861ea44cf69f9c9add",
        "filename": "src/blockfilter.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dac4d5a74fa42c3b4efa21ffa019a3ff75375510/src/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dac4d5a74fa42c3b4efa21ffa019a3ff75375510/src/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.cpp?ref=dac4d5a74fa42c3b4efa21ffa019a3ff75375510",
        "patch": "@@ -337,22 +337,17 @@ BlockFilter::BlockFilter(BlockFilterType filter_type, const CBlock& block, const\n     case BlockFilterType::V0:\n         m_filter = GCSFilter(params, V0FilterElements(block, block_undo));\n         break;\n+    default: assert(false);\n     }\n }\n \n bool BlockFilter::BuildParams(GCSFilter::Params& params) const\n {\n     switch (m_filter_type) {\n-    case BlockFilterType::BASIC:\n-        params.m_siphash_k0 = m_block_hash.GetUint64(0);\n-        params.m_siphash_k1 = m_block_hash.GetUint64(1);\n-        params.m_P = BASIC_FILTER_P;\n-        params.m_M = BASIC_FILTER_M;\n-        return true;\n     case BlockFilterType::V0:\n+    case BlockFilterType::BASIC:\n         params.m_siphash_k0 = m_block_hash.GetUint64(0);\n         params.m_siphash_k1 = m_block_hash.GetUint64(1);\n-        // Using the same filter params as basic type.\n         params.m_P = BASIC_FILTER_P;\n         params.m_M = BASIC_FILTER_M;\n         return true;"
      },
      {
        "sha": "ac11c4b68b086bcef9cecb4dd92ad19b0bd58465",
        "filename": "src/test/blockfilter_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dac4d5a74fa42c3b4efa21ffa019a3ff75375510/src/test/blockfilter_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dac4d5a74fa42c3b4efa21ffa019a3ff75375510/src/test/blockfilter_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockfilter_tests.cpp?ref=dac4d5a74fa42c3b4efa21ffa019a3ff75375510",
        "patch": "@@ -131,18 +131,17 @@ BOOST_AUTO_TEST_CASE(blockfilter_v0_test)\n {\n     CScript included_scripts[4], excluded_scripts[8];\n \n-    included_scripts[0] = GetScriptForDestination(WitnessV0KeyHash());  // p2wpkh \n-    included_scripts[1] = GetScriptForDestination(WitnessV0KeyHash()); // p2wpkh \n+    included_scripts[0] = GetScriptForDestination(WitnessV0KeyHash());  // p2wpkh\n+    included_scripts[1] = GetScriptForDestination(WitnessV0KeyHash()); // p2wpkh\n     included_scripts[2] = GetScriptForDestination(WitnessV0ScriptHash()); // p2wsh\n     included_scripts[3] = GetScriptForDestination(WitnessV0ScriptHash()); // p2wsh\n \n-\n-    excluded_scripts[0] << std::vector<unsigned char>(0, 65) << OP_CHECKSIG; // p2pk \n-    excluded_scripts[1] << OP_0 << OP_HASH160 << std::vector<unsigned char>(1, 20) << OP_EQUALVERIFY << OP_CHECKSIG; // p2pkh \n-    excluded_scripts[2] << OP_1 << std::vector<unsigned char>(2, 33) << OP_1 << OP_CHECKMULTISIG; // multisig \n-    excluded_scripts[3] << OP_0 << std::vector<unsigned char>(3, 32); // push data \n-    excluded_scripts[4] << OP_4 << OP_ADD << OP_8 << OP_EQUAL; // random script \n-    excluded_scripts[5] << OP_RETURN << std::vector<unsigned char>(4, 40); // opreturn \n+    excluded_scripts[0] << std::vector<unsigned char>(0, 65) << OP_CHECKSIG; // p2pk\n+    excluded_scripts[1] << OP_0 << OP_HASH160 << std::vector<unsigned char>(1, 20) << OP_EQUALVERIFY << OP_CHECKSIG; // p2pkh\n+    excluded_scripts[2] << OP_1 << std::vector<unsigned char>(2, 33) << OP_1 << OP_CHECKMULTISIG; // multisig\n+    excluded_scripts[3] << OP_0 << std::vector<unsigned char>(3, 32); // push data\n+    excluded_scripts[4] << OP_4 << OP_ADD << OP_8 << OP_EQUAL; // random script\n+    excluded_scripts[5] << OP_RETURN << std::vector<unsigned char>(4, 40); // opreturn\n     excluded_scripts[6] << OP_RETURN << OP_4 << OP_ADD << OP_8 << OP_EQUAL; // none standard opreturn\n \n     CMutableTransaction tx_1;"
      }
    ]
  },
  {
    "sha": "3055ac89c1032c2e9f35e4894d6f61ef960a3ef8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDU1YWM4OWMxMDMyYzJlOWYzNWU0ODk0ZDZmNjFlZjk2MGEzZWY4",
    "commit": {
      "author": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-03-02T13:28:44Z"
      },
      "committer": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-03-02T13:28:44Z"
      },
      "message": "Move the filter logic to a single method named BuildFilterElements",
      "tree": {
        "sha": "bb64e0aa1caa5b95da4e5901b120f26270c3d703",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb64e0aa1caa5b95da4e5901b120f26270c3d703"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3055ac89c1032c2e9f35e4894d6f61ef960a3ef8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3055ac89c1032c2e9f35e4894d6f61ef960a3ef8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3055ac89c1032c2e9f35e4894d6f61ef960a3ef8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3055ac89c1032c2e9f35e4894d6f61ef960a3ef8/comments",
    "author": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dac4d5a74fa42c3b4efa21ffa019a3ff75375510",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dac4d5a74fa42c3b4efa21ffa019a3ff75375510",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dac4d5a74fa42c3b4efa21ffa019a3ff75375510"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 21,
      "deletions": 35
    },
    "files": [
      {
        "sha": "8ecf469750acd44a9c69396ef171f8992d68ad48",
        "filename": "src/blockfilter.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 35,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3055ac89c1032c2e9f35e4894d6f61ef960a3ef8/src/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3055ac89c1032c2e9f35e4894d6f61ef960a3ef8/src/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.cpp?ref=3055ac89c1032c2e9f35e4894d6f61ef960a3ef8",
        "patch": "@@ -257,60 +257,46 @@ const std::string& ListBlockFilterTypes()\n     return type_list;\n }\n \n-static GCSFilter::ElementSet BasicFilterElements(const CBlock& block,\n-                                                 const CBlockUndo& block_undo)\n+static GCSFilter::ElementSet BuildFilterElements(const CBlock& block,\n+                                                 const CBlockUndo& block_undo,\n+                                                 bool only_segwit = true,\n+                                                 int witness_version = 0)\n {\n     GCSFilter::ElementSet elements;\n \n     for (const CTransactionRef& tx : block.vtx) {\n         for (const CTxOut& txout : tx->vout) {\n             const CScript& script = txout.scriptPubKey;\n             if (script.empty() || script[0] == OP_RETURN) continue;\n+            if (only_segwit) {\n+                int witnessversion;\n+                std::vector<unsigned char> witnessprogram;\n+                if (!script.IsWitnessProgram(witnessversion, witnessprogram)) continue;\n+                if (witnessversion != witness_version) continue;\n+                if (!(witnessversion == 0 && (witnessprogram.size() == WITNESS_V0_KEYHASH_SIZE || witnessprogram.size() == WITNESS_V0_SCRIPTHASH_SIZE))) continue; // specific v0 checks\n+            }\n             elements.emplace(script.begin(), script.end());\n         }\n     }\n \n     for (const CTxUndo& tx_undo : block_undo.vtxundo) {\n         for (const Coin& prevout : tx_undo.vprevout) {\n             const CScript& script = prevout.out.scriptPubKey;\n-            if (script.empty()) continue;\n+            if (script.empty() || script[0] == OP_RETURN) continue;\n+            if (only_segwit) {\n+                int witnessversion;\n+                std::vector<unsigned char> witnessprogram;\n+                if (!script.IsWitnessProgram(witnessversion, witnessprogram)) continue;\n+                if (witnessversion != witness_version) continue;\n+                if (!(witnessversion == 0 && (witnessprogram.size() == WITNESS_V0_KEYHASH_SIZE || witnessprogram.size() == WITNESS_V0_SCRIPTHASH_SIZE))) continue; // specific v0 checks\n+            }\n             elements.emplace(script.begin(), script.end());\n         }\n     }\n \n     return elements;\n }\n \n-static GCSFilter::ElementSet V0FilterElements(const CBlock& block,\n-    const CBlockUndo& block_undo)\n-{\n-    GCSFilter::ElementSet elements;\n-\n-    for (const CTransactionRef& tx : block.vtx) {\n-        for (const CTxOut& txout : tx->vout) {\n-            const CScript& scriptPubKey = txout.scriptPubKey;\n-            int witnessversion;\n-            std::vector<unsigned char> witnessprogram;\n-            if (scriptPubKey.empty() || !scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) continue;\n-            if (!(witnessversion == 0 && (witnessprogram.size() == WITNESS_V0_KEYHASH_SIZE || witnessprogram.size() == WITNESS_V0_SCRIPTHASH_SIZE)))  continue;\n-            elements.emplace(scriptPubKey.begin(), scriptPubKey.end());\n-        }\n-    }\n-\n-    for (const CTxUndo& tx_undo : block_undo.vtxundo) {\n-        for (const Coin& prevout : tx_undo.vprevout) {\n-            const CScript& scriptPubKey = prevout.out.scriptPubKey;\n-            int witnessversion;\n-            std::vector<unsigned char> witnessprogram;\n-            if (scriptPubKey.empty() || !scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) continue;\n-            if (!(witnessversion == 0 && (witnessprogram.size() == WITNESS_V0_KEYHASH_SIZE || witnessprogram.size() == WITNESS_V0_SCRIPTHASH_SIZE))) continue;\n-            elements.emplace(scriptPubKey.begin(), scriptPubKey.end());\n-        }\n-    }\n-\n-    return elements;\n-}\n-\n BlockFilter::BlockFilter(BlockFilterType filter_type, const uint256& block_hash,\n                          std::vector<unsigned char> filter)\n     : m_filter_type(filter_type), m_block_hash(block_hash)\n@@ -332,10 +318,10 @@ BlockFilter::BlockFilter(BlockFilterType filter_type, const CBlock& block, const\n \n     switch (m_filter_type) {\n     case BlockFilterType::BASIC:\n-        m_filter = GCSFilter(params, BasicFilterElements(block, block_undo));\n+        m_filter = GCSFilter(params, BuildFilterElements(block, block_undo, false));\n         break;\n     case BlockFilterType::V0:\n-        m_filter = GCSFilter(params, V0FilterElements(block, block_undo));\n+        m_filter = GCSFilter(params, BuildFilterElements(block, block_undo));\n         break;\n     default: assert(false);\n     }"
      }
    ]
  },
  {
    "sha": "dc1fe756fc5148b467932fb76888393270134c1d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYzFmZTc1NmZjNTE0OGI0Njc5MzJmYjc2ODg4MzkzMjcwMTM0YzFk",
    "commit": {
      "author": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-03-02T21:38:56Z"
      },
      "committer": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-03-02T21:38:56Z"
      },
      "message": "Change the BuildFilterElements default args",
      "tree": {
        "sha": "891af71d1e161c1f5183e77e9e2e5a8dc35fc27e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/891af71d1e161c1f5183e77e9e2e5a8dc35fc27e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dc1fe756fc5148b467932fb76888393270134c1d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc1fe756fc5148b467932fb76888393270134c1d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dc1fe756fc5148b467932fb76888393270134c1d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc1fe756fc5148b467932fb76888393270134c1d/comments",
    "author": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3055ac89c1032c2e9f35e4894d6f61ef960a3ef8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3055ac89c1032c2e9f35e4894d6f61ef960a3ef8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3055ac89c1032c2e9f35e4894d6f61ef960a3ef8"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "98699a3493687807b611df140c26e171b201d40f",
        "filename": "src/blockfilter.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc1fe756fc5148b467932fb76888393270134c1d/src/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc1fe756fc5148b467932fb76888393270134c1d/src/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.cpp?ref=dc1fe756fc5148b467932fb76888393270134c1d",
        "patch": "@@ -259,7 +259,7 @@ const std::string& ListBlockFilterTypes()\n \n static GCSFilter::ElementSet BuildFilterElements(const CBlock& block,\n                                                  const CBlockUndo& block_undo,\n-                                                 bool only_segwit = true,\n+                                                 bool only_segwit = false,\n                                                  int witness_version = 0)\n {\n     GCSFilter::ElementSet elements;\n@@ -318,10 +318,10 @@ BlockFilter::BlockFilter(BlockFilterType filter_type, const CBlock& block, const\n \n     switch (m_filter_type) {\n     case BlockFilterType::BASIC:\n-        m_filter = GCSFilter(params, BuildFilterElements(block, block_undo, false));\n+        m_filter = GCSFilter(params, BuildFilterElements(block, block_undo));\n         break;\n     case BlockFilterType::V0:\n-        m_filter = GCSFilter(params, BuildFilterElements(block, block_undo));\n+        m_filter = GCSFilter(params, BuildFilterElements(block, block_undo, true));\n         break;\n     default: assert(false);\n     }"
      }
    ]
  },
  {
    "sha": "5561e7a0c79606e555ea9b986a9065d14ec40118",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NTYxZTdhMGM3OTYwNmU1NTVlYTliOTg2YTkwNjVkMTRlYzQwMTE4",
    "commit": {
      "author": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-03-04T21:10:07Z"
      },
      "committer": {
        "name": "dangershony",
        "email": "dan.gershony@gmail.com",
        "date": "2020-03-04T21:10:07Z"
      },
      "message": "Act on review",
      "tree": {
        "sha": "c1a511c48eb9b0eefccff5dae1a725e7925e7982",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c1a511c48eb9b0eefccff5dae1a725e7925e7982"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5561e7a0c79606e555ea9b986a9065d14ec40118",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5561e7a0c79606e555ea9b986a9065d14ec40118",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5561e7a0c79606e555ea9b986a9065d14ec40118",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5561e7a0c79606e555ea9b986a9065d14ec40118/comments",
    "author": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dangershony",
      "id": 7487930,
      "node_id": "MDQ6VXNlcjc0ODc5MzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7487930?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangershony",
      "html_url": "https://github.com/dangershony",
      "followers_url": "https://api.github.com/users/dangershony/followers",
      "following_url": "https://api.github.com/users/dangershony/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangershony/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangershony/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangershony/subscriptions",
      "organizations_url": "https://api.github.com/users/dangershony/orgs",
      "repos_url": "https://api.github.com/users/dangershony/repos",
      "events_url": "https://api.github.com/users/dangershony/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangershony/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dc1fe756fc5148b467932fb76888393270134c1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc1fe756fc5148b467932fb76888393270134c1d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dc1fe756fc5148b467932fb76888393270134c1d"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "5bdf1f80d9e5beb142d36a9ac12cb14df2f88518",
        "filename": "src/blockfilter.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5561e7a0c79606e555ea9b986a9065d14ec40118/src/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5561e7a0c79606e555ea9b986a9065d14ec40118/src/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.cpp?ref=5561e7a0c79606e555ea9b986a9065d14ec40118",
        "patch": "@@ -282,7 +282,7 @@ static GCSFilter::ElementSet BuildFilterElements(const CBlock& block,\n     for (const CTxUndo& tx_undo : block_undo.vtxundo) {\n         for (const Coin& prevout : tx_undo.vprevout) {\n             const CScript& script = prevout.out.scriptPubKey;\n-            if (script.empty() || script[0] == OP_RETURN) continue;\n+            if (script.empty()) continue;\n             if (only_segwit) {\n                 int witnessversion;\n                 std::vector<unsigned char> witnessprogram;\n@@ -323,15 +323,16 @@ BlockFilter::BlockFilter(BlockFilterType filter_type, const CBlock& block, const\n     case BlockFilterType::V0:\n         m_filter = GCSFilter(params, BuildFilterElements(block, block_undo, true));\n         break;\n-    default: assert(false);\n+    case BlockFilterType::INVALID:\n+        assert(false);\n     }\n }\n \n bool BlockFilter::BuildParams(GCSFilter::Params& params) const\n {\n     switch (m_filter_type) {\n-    case BlockFilterType::V0:\n     case BlockFilterType::BASIC:\n+    case BlockFilterType::V0:\n         params.m_siphash_k0 = m_block_hash.GetUint64(0);\n         params.m_siphash_k1 = m_block_hash.GetUint64(1);\n         params.m_P = BASIC_FILTER_P;"
      }
    ]
  }
]