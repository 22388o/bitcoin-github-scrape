BitcoinPullTester,2013-11-01T20:42:42Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ca1c5ddd53aaa73bcb667ca7756392f809108f05 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3192#issuecomment-27599260,27599260,
gavinandresen,2013-11-01T21:14:05Z,It is a reasonable belt-and-suspenders sanity check; we don't want to call ::GetSerializeSize if vtx.size() is something ridiculous.\n\nSo NACK from me.\n,https://github.com/bitcoin/bitcoin/pull/3192#issuecomment-27601605,27601605,
sarchar,2013-11-02T07:16:09Z,How about this: Define another constant MAX_TRANSACTIONS_PER_BLOCK and give it the same value as MAX_BLOCK_SIZE?  Doing this would give this code a more natural reading..\n,https://github.com/bitcoin/bitcoin/pull/3192#issuecomment-27617234,27617234,
sipa,2013-11-02T13:50:02Z,"I'd rather not have an explicit constant, but instead compute it on the fly if it is needed for belt-and-suspenders.\n\ne.g.:\n\n```\nstatic const int MINIMUM_TRANSACTION_SIZE = ::GetSerializeSize(CTransaction(), SER_NETWORK, 0);\nstatic const int MAXIMUM_TRANSACTIONS_PER_BLOCK = (MAX_BLOCK_SIZE - ::GetSerializeSize(CBlockHeader(), SER_NETWORK, 0)) / MINIMUM_TRANSACTION_SIZE;\n```\n",https://github.com/bitcoin/bitcoin/pull/3192#issuecomment-27622313,27622313,
