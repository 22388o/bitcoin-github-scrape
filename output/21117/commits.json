[
  {
    "sha": "fa0a4d6c605b8ed47796f68068d6273bef7fcaef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTBhNGQ2YzYwNWI4ZWQ0Nzc5NmY2ODA2OGQ2MjczYmVmN2ZjYWVm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-02-08T14:40:46Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-02-08T15:56:46Z"
      },
      "message": "test: remove assert_blockchain_height",
      "tree": {
        "sha": "affa2748d1dfd7e138b5721021fc5be42b2c1e06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/affa2748d1dfd7e138b5721021fc5be42b2c1e06"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa0a4d6c605b8ed47796f68068d6273bef7fcaef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjqQQv/ZrNFSg8euCsuQsrccysSpXy4QME8oBB+jGDd5Yb6lj3xtq6Hz2G6jjKe\n1BLHo0Dxq9AOYHQxuOsyScKEw+BGPm3/TW/xbTPXt0TMYaQfbasCA5thdjCvyWqj\nfMgmaRB1AsSn4vg7gQFr8c7LI7s+4/DY3ll1yOKVZdQyXHddCa4b7ZRy43SjN3bx\nysBCS2svu/s+5mCL+qBW+m7NoFvo4l3YTXXUSN8QF63H90UwWEQg9Q2ujzsZwYjG\nQiYtRPTBxX3sBfVipzEXJhQ6E1pJTgW7fEQSbgcoHiOYjzDd6F0Kxn2MlZQfTEfH\nLWho2q35ausL+Ltk2h0Lnvf6tWjRFRrO7RQyMeHtUhANr7dFteeOG/8YN8i1DOyz\n8nYH3sL2ZxHM6EfDX8yJw3IgR7Jpey/2RuJjchLMkZsMOKkaJWHefe3HftW3eBPv\n+cpy2G/QSKxNaSkbzMANpmeWbcndaiDrLHOwu/gONuU5LCyI9J9/u9qUESZT4vgW\nhWSu7Hs2\n=nIRb\n-----END PGP SIGNATURE-----",
        "payload": "tree affa2748d1dfd7e138b5721021fc5be42b2c1e06\nparent b401b093556f53023d1615f7cff3eb84807c6e8b\nauthor MarcoFalke <falke.marco@gmail.com> 1612795246 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1612799806 +0100\n\ntest: remove assert_blockchain_height\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0a4d6c605b8ed47796f68068d6273bef7fcaef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0a4d6c605b8ed47796f68068d6273bef7fcaef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0a4d6c605b8ed47796f68068d6273bef7fcaef/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b401b093556f53023d1615f7cff3eb84807c6e8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b401b093556f53023d1615f7cff3eb84807c6e8b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b401b093556f53023d1615f7cff3eb84807c6e8b"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 8,
      "deletions": 22
    },
    "files": [
      {
        "sha": "1a148f04f477292cbb76dd9778de5b2f42b212e5",
        "filename": "test/functional/feature_assumevalid.py",
        "status": "modified",
        "additions": 8,
        "deletions": 22,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0a4d6c605b8ed47796f68068d6273bef7fcaef/test/functional/feature_assumevalid.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0a4d6c605b8ed47796f68068d6273bef7fcaef/test/functional/feature_assumevalid.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_assumevalid.py?ref=fa0a4d6c605b8ed47796f68068d6273bef7fcaef",
        "patch": "@@ -29,9 +29,11 @@\n       block 200. node2 will reject block 102 since it's assumed valid, but it\n       isn't buried by at least two weeks' work.\n \"\"\"\n-import time\n \n-from test_framework.blocktools import (create_block, create_coinbase)\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+)\n from test_framework.key import ECKey\n from test_framework.messages import (\n     CBlockHeader,\n@@ -79,24 +81,6 @@ def send_blocks_until_disconnected(self, p2p_conn):\n                 assert not p2p_conn.is_connected\n                 break\n \n-    def assert_blockchain_height(self, node, height):\n-        \"\"\"Wait until the blockchain is no longer advancing and verify it's reached the expected height.\"\"\"\n-        last_height = node.getblock(node.getbestblockhash())['height']\n-        timeout = 10\n-        while True:\n-            time.sleep(0.25)\n-            current_height = node.getblock(node.getbestblockhash())['height']\n-            if current_height != last_height:\n-                last_height = current_height\n-                if timeout < 0:\n-                    assert False, \"blockchain too short after timeout: %d\" % current_height\n-                timeout -= 0.25\n-                continue\n-            elif current_height > height:\n-                assert False, \"blockchain too long: %d\" % current_height\n-            elif current_height == height:\n-                break\n-\n     def run_test(self):\n         p2p0 = self.nodes[0].add_p2p_connection(BaseNode())\n \n@@ -177,7 +161,8 @@ def run_test(self):\n \n         # Send blocks to node0. Block 102 will be rejected.\n         self.send_blocks_until_disconnected(p2p0)\n-        self.assert_blockchain_height(self.nodes[0], 101)\n+        self.wait_until(lambda: self.nodes[0].getblockcount() >= 101)\n+        assert_equal(self.nodes[0].getblockcount(), 101)\n \n         # Send all blocks to node1. All blocks will be accepted.\n         for i in range(2202):\n@@ -188,7 +173,8 @@ def run_test(self):\n \n         # Send blocks to node2. Block 102 will be rejected.\n         self.send_blocks_until_disconnected(p2p2)\n-        self.assert_blockchain_height(self.nodes[2], 101)\n+        self.wait_until(lambda: self.nodes[2].getblockcount() >= 101)\n+        assert_equal(self.nodes[2].getblockcount(), 101)\n \n \n if __name__ == '__main__':"
      }
    ]
  }
]