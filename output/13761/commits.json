[
  {
    "sha": "08def4b624d3eed928df24317b1f48dab44417e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOGRlZjRiNjI0ZDNlZWQ5MjhkZjI0MzE3YjFmNDhkYWI0NDQxN2Ux",
    "commit": {
      "author": {
        "name": "Alexander Leishman",
        "email": "leishman3@gmail.com",
        "date": "2018-07-26T02:08:14Z"
      },
      "committer": {
        "name": "Alexander Leishman",
        "email": "leishman3@gmail.com",
        "date": "2018-07-26T05:45:39Z"
      },
      "message": "Docs: Create default bitcoin.conf file on startup\n\nFixes #10746. If no -conf flag is passed and no bitcoin.conf file exists in the\ndatadir, then a bitcoin.conf template will be created in the datadir. This conf\nfile will have no configurations set, only explanatory comments. The default\nbitcoin.conf template was copied from contrib/debian/examples/bitcoin.conf.",
      "tree": {
        "sha": "ced037cabb10d37a095e4134e75292eedbefe5fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ced037cabb10d37a095e4134e75292eedbefe5fc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08def4b624d3eed928df24317b1f48dab44417e1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08def4b624d3eed928df24317b1f48dab44417e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/08def4b624d3eed928df24317b1f48dab44417e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08def4b624d3eed928df24317b1f48dab44417e1/comments",
    "author": {
      "login": "leishman",
      "id": 3648618,
      "node_id": "MDQ6VXNlcjM2NDg2MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3648618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leishman",
      "html_url": "https://github.com/leishman",
      "followers_url": "https://api.github.com/users/leishman/followers",
      "following_url": "https://api.github.com/users/leishman/following{/other_user}",
      "gists_url": "https://api.github.com/users/leishman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leishman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leishman/subscriptions",
      "organizations_url": "https://api.github.com/users/leishman/orgs",
      "repos_url": "https://api.github.com/users/leishman/repos",
      "events_url": "https://api.github.com/users/leishman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leishman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leishman",
      "id": 3648618,
      "node_id": "MDQ6VXNlcjM2NDg2MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3648618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leishman",
      "html_url": "https://github.com/leishman",
      "followers_url": "https://api.github.com/users/leishman/followers",
      "following_url": "https://api.github.com/users/leishman/following{/other_user}",
      "gists_url": "https://api.github.com/users/leishman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leishman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leishman/subscriptions",
      "organizations_url": "https://api.github.com/users/leishman/orgs",
      "repos_url": "https://api.github.com/users/leishman/repos",
      "events_url": "https://api.github.com/users/leishman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leishman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1211b15bf6c0b2904d90b96a9b3834c5cb9e7b4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1211b15bf6c0b2904d90b96a9b3834c5cb9e7b4e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1211b15bf6c0b2904d90b96a9b3834c5cb9e7b4e"
      }
    ],
    "stats": {
      "total": 178,
      "additions": 175,
      "deletions": 3
    },
    "files": [
      {
        "sha": "04cff375c62fc1a8ceff4e398b49c9ee259e6fa0",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08def4b624d3eed928df24317b1f48dab44417e1/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08def4b624d3eed928df24317b1f48dab44417e1/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=08def4b624d3eed928df24317b1f48dab44417e1",
        "patch": "@@ -109,6 +109,7 @@ BITCOIN_CORE_H = \\\n   compat/endian.h \\\n   compat/sanity.h \\\n   compressor.h \\\n+  conf_file.h \\\n   consensus/consensus.h \\\n   consensus/tx_verify.h \\\n   core_io.h \\"
      },
      {
        "sha": "ddb1638dd0ba6ca48fbc6e72cff3a72657c2ce55",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 3,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08def4b624d3eed928df24317b1f48dab44417e1/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08def4b624d3eed928df24317b1f48dab44417e1/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=08def4b624d3eed928df24317b1f48dab44417e1",
        "patch": "@@ -10,14 +10,15 @@\n #include <chainparams.h>\n #include <clientversion.h>\n #include <compat.h>\n+#include <conf_file.h>\n #include <fs.h>\n-#include <rpc/server.h>\n+#include <httprpc.h>\n+#include <httpserver.h>\n #include <init.h>\n #include <noui.h>\n+#include <rpc/server.h>\n #include <shutdown.h>\n #include <util.h>\n-#include <httpserver.h>\n-#include <httprpc.h>\n #include <utilstrencodings.h>\n #include <walletinitinterface.h>\n \n@@ -96,6 +97,20 @@ static bool AppInit(int argc, char* argv[])\n             fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", gArgs.GetArg(\"-datadir\", \"\").c_str());\n             return false;\n         }\n+\n+        // Create bitcoin.conf template in datadir if -conf flag is not set and there is no existing bitcoin.conf file in the datadir\n+        if (!gArgs.IsArgSet(\"-conf\") && !fs::exists(GetConfigFile(BITCOIN_CONF_FILENAME))) {\n+            try {\n+                // write default bitcoin.conf template\n+                std::ofstream conf_file(GetConfigFile(BITCOIN_CONF_FILENAME).string().c_str());\n+                conf_file << DEFAULT_BITCOIN_CONF_TEXT;\n+\n+                // fail gracefully\n+            } catch (std::ofstream::failure& writeErr) {\n+                LogPrintf(\"Failed to write bitcoin.conf file template to %s\\n\", GetConfigFile(BITCOIN_CONF_FILENAME).string());\n+            }\n+        }\n+\n         if (!gArgs.ReadConfigFiles(error)) {\n             fprintf(stderr, \"Error reading configuration file: %s\\n\", error.c_str());\n             return false;"
      },
      {
        "sha": "a62ae5523e98274a6b7334b308ba3d0dd5a4b21b",
        "filename": "src/conf_file.h",
        "status": "added",
        "additions": 156,
        "deletions": 0,
        "changes": 156,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08def4b624d3eed928df24317b1f48dab44417e1/src/conf_file.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08def4b624d3eed928df24317b1f48dab44417e1/src/conf_file.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/conf_file.h?ref=08def4b624d3eed928df24317b1f48dab44417e1",
        "patch": "@@ -0,0 +1,156 @@\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CONF_FILE_H\n+#define BITCOIN_CONF_FILE_H\n+\n+static const char* DEFAULT_BITCOIN_CONF_TEXT = R\"(##\n+## bitcoin.conf configuration file. Lines beginning with # are comments.\n+##\n+\n+# Network-related settings:\n+\n+# Run on the test network instead of the real bitcoin network.\n+#testnet=0\n+\n+# Run a regression test network\n+#regtest=0\n+\n+# Connect via a SOCKS5 proxy\n+#proxy=127.0.0.1:9050\n+\n+# Bind to given address and always listen on it. Use [host]:port notation for IPv6\n+#bind=<addr>\n+\n+# Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6\n+#whitebind=<addr>\n+\n+##############################################################\n+##            Quick Primer on addnode vs connect            ##\n+##  Let's say for instance you use addnode=4.2.2.4          ##\n+##  addnode will connect you to and tell you about the      ##\n+##    nodes connected to 4.2.2.4.  In addition it will tell ##\n+##    the other nodes connected to it that you exist so     ##\n+##    they can connect to you.                              ##\n+##  connect will not do the above when you 'connect' to it. ##\n+##    It will *only* connect you to 4.2.2.4 and no one else.##\n+##                                                          ##\n+##  So if you're behind a firewall, or have other problems  ##\n+##  finding nodes, add some using 'addnode'.                ##\n+##                                                          ##\n+##  If you want to stay private, use 'connect' to only      ##\n+##  connect to \"trusted\" nodes.                             ##\n+##                                                          ##\n+##  If you run multiple nodes on a LAN, there's no need for ##\n+##  all of them to open lots of connections.  Instead       ##\n+##  'connect' them all to one node that is port forwarded   ##\n+##  and has lots of connections.                            ##\n+##       Thanks goes to [Noodle] on Freenode.               ##\n+##############################################################\n+\n+# Use as many addnode= settings as you like to connect to specific peers\n+#addnode=69.164.218.197\n+#addnode=10.0.0.2:8333\n+\n+# Alternatively use as many connect= settings as you like to connect ONLY to specific peers\n+#connect=69.164.218.197\n+#connect=10.0.0.1:8333\n+\n+# Listening mode, enabled by default except when 'connect' is being used\n+#listen=1\n+\n+# Maximum number of inbound+outbound connections.\n+#maxconnections=\n+\n+#\n+# JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n+#\n+\n+# server=1 tells Bitcoin-Qt and bitcoind to accept JSON-RPC commands\n+#server=0\n+\n+# Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.\n+# This option can be specified multiple times (default: bind to all interfaces)\n+#rpcbind=<addr>\n+\n+# If no rpcpassword is set, rpc cookie auth is sought. The default `-rpccookiefile` name\n+# is .cookie and found in the `-datadir` being used for bitcoind. This option is typically used\n+# when the server and client are run as the same user.\n+#\n+# If not, you must set rpcuser and rpcpassword to secure the JSON-RPC api. The first\n+# method(DEPRECATED) is to set this pair for the server and client:\n+#rpcuser=Ulysseys\n+#rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n+#\n+# The second method `rpcauth` can be added to server startup argument. It is set at initialization time\n+# using the output from the script in share/rpcauth/rpcauth.py after providing a username:\n+#\n+# ./share/rpcauth/rpcauth.py alice\n+# String to be appended to bitcoin.conf:\n+# rpcauth=alice:f7efda5c189b999524f151318c0c86$d5b51b3beffbc02b724e5d095828e0bc8b2456e9ac8757ae3211a5d9b16a22ae\n+# Your password:\n+# DONT_USE_THIS_YOU_WILL_GET_ROBBED_8ak1gI25KFTvjovL3gAM967mies3E=\n+#\n+# On client-side, you add the normal user/password pair to send commands:\n+#rpcuser=alice\n+#rpcpassword=DONT_USE_THIS_YOU_WILL_GET_ROBBED_8ak1gI25KFTvjovL3gAM967mies3E=\n+#\n+# You can even add multiple entries of these to the server conf file, and client can use any of them:\n+# rpcauth=bob:b2dd077cb54591a2f3139e69a897ac$4e71f08d48b4347cf8eff3815c0e25ae2e9a4340474079f55705f40574f4ec99\n+\n+# How many seconds bitcoin will wait for a complete RPC HTTP request.\n+# after the HTTP connection is established.\n+#rpcclienttimeout=30\n+\n+# By default, only RPC connections from localhost are allowed.\n+# Specify as many rpcallowip= settings as you like to allow connections from other hosts,\n+# either as a single IPv4/IPv6 or with a subnet specification.\n+\n+# NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n+# because the rpcpassword is transmitted over the network unencrypted.\n+\n+# server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n+# it is also read by bitcoind to determine if RPC should be enabled\n+#rpcallowip=10.1.1.34/255.255.255.0\n+#rpcallowip=1.2.3.4/24\n+#rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n+\n+# Listen for RPC connections on this TCP port:\n+#rpcport=8332\n+\n+# You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind\n+# running on another host using this option:\n+#rpcconnect=127.0.0.1\n+\n+# Create transactions that have enough fees so they are likely to begin confirmation within n blocks (default: 6).\n+# This setting is over-ridden by the -paytxfee option.\n+#txconfirmtarget=n\n+\n+# Miscellaneous options\n+\n+# Pre-generate this many public/private key pairs, so wallet backups will be valid for\n+# both prior transactions and several dozen future transactions.\n+#keypool=100\n+\n+# Pay an optional transaction fee every time you send bitcoins.  Transactions with fees\n+# are more likely than free transactions to be included in generated blocks, so may\n+# be validated sooner.\n+#paytxfee=0.00\n+\n+# Enable pruning to reduce storage requirements by deleting old blocks.\n+# This mode is incompatible with -txindex and -rescan.\n+# 0 = default (no pruning).\n+# 1 = allows manual pruning via RPC.\n+# >=550 = target to stay under in MiB.\n+#prune=550\n+\n+# User interface options\n+\n+# Start Bitcoin minimized\n+#min=1\n+\n+# Minimize to the system tray\n+#minimizetotray=1)\";\n+\n+#endif // BITCOIN_CONF_FILE_H"
      }
    ]
  },
  {
    "sha": "77f10e6462ae0e75bfad349020be079f7b22f7f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3N2YxMGU2NDYyYWUwZTc1YmZhZDM0OTAyMGJlMDc5ZjdiMjJmN2Y0",
    "commit": {
      "author": {
        "name": "Alexander Leishman",
        "email": "leishman3@gmail.com",
        "date": "2018-07-27T06:30:49Z"
      },
      "committer": {
        "name": "Alexander Leishman",
        "email": "leishman3@gmail.com",
        "date": "2018-07-27T06:30:49Z"
      },
      "message": "move file creation to same function that creates datadir",
      "tree": {
        "sha": "e6e536b9623e9a60fded591ec4ae06ce5faa12bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6e536b9623e9a60fded591ec4ae06ce5faa12bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77f10e6462ae0e75bfad349020be079f7b22f7f4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77f10e6462ae0e75bfad349020be079f7b22f7f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/77f10e6462ae0e75bfad349020be079f7b22f7f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77f10e6462ae0e75bfad349020be079f7b22f7f4/comments",
    "author": {
      "login": "leishman",
      "id": 3648618,
      "node_id": "MDQ6VXNlcjM2NDg2MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3648618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leishman",
      "html_url": "https://github.com/leishman",
      "followers_url": "https://api.github.com/users/leishman/followers",
      "following_url": "https://api.github.com/users/leishman/following{/other_user}",
      "gists_url": "https://api.github.com/users/leishman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leishman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leishman/subscriptions",
      "organizations_url": "https://api.github.com/users/leishman/orgs",
      "repos_url": "https://api.github.com/users/leishman/repos",
      "events_url": "https://api.github.com/users/leishman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leishman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leishman",
      "id": 3648618,
      "node_id": "MDQ6VXNlcjM2NDg2MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3648618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leishman",
      "html_url": "https://github.com/leishman",
      "followers_url": "https://api.github.com/users/leishman/followers",
      "following_url": "https://api.github.com/users/leishman/following{/other_user}",
      "gists_url": "https://api.github.com/users/leishman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leishman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leishman/subscriptions",
      "organizations_url": "https://api.github.com/users/leishman/orgs",
      "repos_url": "https://api.github.com/users/leishman/repos",
      "events_url": "https://api.github.com/users/leishman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leishman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08def4b624d3eed928df24317b1f48dab44417e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08def4b624d3eed928df24317b1f48dab44417e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08def4b624d3eed928df24317b1f48dab44417e1"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 14,
      "deletions": 16
    },
    "files": [
      {
        "sha": "fc21fdef50ce26c48ab594823039979cc15a74a9",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77f10e6462ae0e75bfad349020be079f7b22f7f4/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77f10e6462ae0e75bfad349020be079f7b22f7f4/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=77f10e6462ae0e75bfad349020be079f7b22f7f4",
        "patch": "@@ -10,7 +10,6 @@\n #include <chainparams.h>\n #include <clientversion.h>\n #include <compat.h>\n-#include <conf_file.h>\n #include <fs.h>\n #include <httprpc.h>\n #include <httpserver.h>\n@@ -98,19 +97,6 @@ static bool AppInit(int argc, char* argv[])\n             return false;\n         }\n \n-        // Create bitcoin.conf template in datadir if -conf flag is not set and there is no existing bitcoin.conf file in the datadir\n-        if (!gArgs.IsArgSet(\"-conf\") && !fs::exists(GetConfigFile(BITCOIN_CONF_FILENAME))) {\n-            try {\n-                // write default bitcoin.conf template\n-                std::ofstream conf_file(GetConfigFile(BITCOIN_CONF_FILENAME).string().c_str());\n-                conf_file << DEFAULT_BITCOIN_CONF_TEXT;\n-\n-                // fail gracefully\n-            } catch (std::ofstream::failure& writeErr) {\n-                LogPrintf(\"Failed to write bitcoin.conf file template to %s\\n\", GetConfigFile(BITCOIN_CONF_FILENAME).string());\n-            }\n-        }\n-\n         if (!gArgs.ReadConfigFiles(error)) {\n             fprintf(stderr, \"Error reading configuration file: %s\\n\", error.c_str());\n             return false;"
      },
      {
        "sha": "082dd4b617feca4b64a3ce1cd51c67ac914a2338",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77f10e6462ae0e75bfad349020be079f7b22f7f4/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77f10e6462ae0e75bfad349020be079f7b22f7f4/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=77f10e6462ae0e75bfad349020be079f7b22f7f4",
        "patch": "@@ -6,6 +6,7 @@\n #include <util.h>\n \n #include <chainparamsbase.h>\n+#include <conf_file.h>\n #include <random.h>\n #include <serialize.h>\n #include <utilstrencodings.h>\n@@ -788,13 +789,23 @@ const fs::path &GetDataDir(bool fNetSpecific)\n         path /= BaseParams().DataDir();\n \n     if (fs::create_directories(path)) {\n-        // This is the first run, create wallets subdirectory too\n-        fs::create_directories(path / \"wallets\");\n+        // This is the first run, setup datadir\n+        SetupDatadir(path);\n     }\n \n     return path;\n }\n \n+void SetupDatadir(fs::path path)\n+{\n+    // create \"wallets\" subdirectory\n+    fs::create_directories(path / \"wallets\");\n+\n+    // write default bitcoin.conf template to datadir\n+    std::ofstream conf_file((path / BITCOIN_CONF_FILENAME).string().c_str());\n+    conf_file << DEFAULT_BITCOIN_CONF_TEXT << std::endl;\n+}\n+\n void ClearDatadirCache()\n {\n     LOCK(csPathCached);"
      },
      {
        "sha": "a2589c8a00c41039980871c3bc1ebceb4ac51b8e",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77f10e6462ae0e75bfad349020be079f7b22f7f4/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77f10e6462ae0e75bfad349020be079f7b22f7f4/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=77f10e6462ae0e75bfad349020be079f7b22f7f4",
        "patch": "@@ -88,6 +88,7 @@ bool TryCreateDirectories(const fs::path& p);\n fs::path GetDefaultDataDir();\n const fs::path &GetBlocksDir(bool fNetSpecific = true);\n const fs::path &GetDataDir(bool fNetSpecific = true);\n+void SetupDatadir(fs::path path);\n void ClearDatadirCache();\n fs::path GetConfigFile(const std::string& confPath);\n #ifndef WIN32"
      }
    ]
  },
  {
    "sha": "345425d08b93dbf898b22b52ae99391d9df59772",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDU0MjVkMDhiOTNkYmY4OThiMjJiNTJhZTk5MzkxZDlkZjU5Nzcy",
    "commit": {
      "author": {
        "name": "Alexander Leishman",
        "email": "leishman3@gmail.com",
        "date": "2018-07-27T06:52:29Z"
      },
      "committer": {
        "name": "Alexander Leishman",
        "email": "leishman3@gmail.com",
        "date": "2018-07-27T06:52:29Z"
      },
      "message": "revert changes to bitcoind.cpp",
      "tree": {
        "sha": "8424738143fbcb43ea625c06f290a02170d461eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8424738143fbcb43ea625c06f290a02170d461eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/345425d08b93dbf898b22b52ae99391d9df59772",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/345425d08b93dbf898b22b52ae99391d9df59772",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/345425d08b93dbf898b22b52ae99391d9df59772",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/345425d08b93dbf898b22b52ae99391d9df59772/comments",
    "author": {
      "login": "leishman",
      "id": 3648618,
      "node_id": "MDQ6VXNlcjM2NDg2MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3648618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leishman",
      "html_url": "https://github.com/leishman",
      "followers_url": "https://api.github.com/users/leishman/followers",
      "following_url": "https://api.github.com/users/leishman/following{/other_user}",
      "gists_url": "https://api.github.com/users/leishman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leishman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leishman/subscriptions",
      "organizations_url": "https://api.github.com/users/leishman/orgs",
      "repos_url": "https://api.github.com/users/leishman/repos",
      "events_url": "https://api.github.com/users/leishman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leishman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leishman",
      "id": 3648618,
      "node_id": "MDQ6VXNlcjM2NDg2MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3648618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leishman",
      "html_url": "https://github.com/leishman",
      "followers_url": "https://api.github.com/users/leishman/followers",
      "following_url": "https://api.github.com/users/leishman/following{/other_user}",
      "gists_url": "https://api.github.com/users/leishman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leishman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leishman/subscriptions",
      "organizations_url": "https://api.github.com/users/leishman/orgs",
      "repos_url": "https://api.github.com/users/leishman/repos",
      "events_url": "https://api.github.com/users/leishman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leishman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "77f10e6462ae0e75bfad349020be079f7b22f7f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77f10e6462ae0e75bfad349020be079f7b22f7f4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/77f10e6462ae0e75bfad349020be079f7b22f7f4"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "5c711c0773bed832a1dcc8f004e195fdc76c7477",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/345425d08b93dbf898b22b52ae99391d9df59772/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/345425d08b93dbf898b22b52ae99391d9df59772/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=345425d08b93dbf898b22b52ae99391d9df59772",
        "patch": "@@ -11,13 +11,13 @@\n #include <clientversion.h>\n #include <compat.h>\n #include <fs.h>\n-#include <httprpc.h>\n-#include <httpserver.h>\n+#include <rpc/server.h>\n #include <init.h>\n #include <noui.h>\n-#include <rpc/server.h>\n #include <shutdown.h>\n #include <util.h>\n+#include <httpserver.h>\n+#include <httprpc.h>\n #include <utilstrencodings.h>\n #include <walletinitinterface.h>\n \n@@ -96,7 +96,6 @@ static bool AppInit(int argc, char* argv[])\n             fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", gArgs.GetArg(\"-datadir\", \"\").c_str());\n             return false;\n         }\n-\n         if (!gArgs.ReadConfigFiles(error)) {\n             fprintf(stderr, \"Error reading configuration file: %s\\n\", error.c_str());\n             return false;"
      }
    ]
  },
  {
    "sha": "d88246a370049f64dd2aaef2b3cb3bd8e1e9fd68",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkODgyNDZhMzcwMDQ5ZjY0ZGQyYWFlZjJiM2NiM2JkOGUxZTlmZDY4",
    "commit": {
      "author": {
        "name": "Alexander Leishman",
        "email": "leishman3@gmail.com",
        "date": "2018-07-31T21:20:47Z"
      },
      "committer": {
        "name": "Alexander Leishman",
        "email": "leishman3@gmail.com",
        "date": "2018-07-31T21:20:47Z"
      },
      "message": "create bitcoin.conf.example and only log on startup if the conf file actually exists",
      "tree": {
        "sha": "0d8bb1c3c048fb621e456ac6e1030f77c75f4885",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d8bb1c3c048fb621e456ac6e1030f77c75f4885"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d88246a370049f64dd2aaef2b3cb3bd8e1e9fd68",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d88246a370049f64dd2aaef2b3cb3bd8e1e9fd68",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d88246a370049f64dd2aaef2b3cb3bd8e1e9fd68",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d88246a370049f64dd2aaef2b3cb3bd8e1e9fd68/comments",
    "author": {
      "login": "leishman",
      "id": 3648618,
      "node_id": "MDQ6VXNlcjM2NDg2MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3648618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leishman",
      "html_url": "https://github.com/leishman",
      "followers_url": "https://api.github.com/users/leishman/followers",
      "following_url": "https://api.github.com/users/leishman/following{/other_user}",
      "gists_url": "https://api.github.com/users/leishman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leishman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leishman/subscriptions",
      "organizations_url": "https://api.github.com/users/leishman/orgs",
      "repos_url": "https://api.github.com/users/leishman/repos",
      "events_url": "https://api.github.com/users/leishman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leishman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leishman",
      "id": 3648618,
      "node_id": "MDQ6VXNlcjM2NDg2MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3648618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leishman",
      "html_url": "https://github.com/leishman",
      "followers_url": "https://api.github.com/users/leishman/followers",
      "following_url": "https://api.github.com/users/leishman/following{/other_user}",
      "gists_url": "https://api.github.com/users/leishman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leishman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leishman/subscriptions",
      "organizations_url": "https://api.github.com/users/leishman/orgs",
      "repos_url": "https://api.github.com/users/leishman/repos",
      "events_url": "https://api.github.com/users/leishman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leishman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "345425d08b93dbf898b22b52ae99391d9df59772",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/345425d08b93dbf898b22b52ae99391d9df59772",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/345425d08b93dbf898b22b52ae99391d9df59772"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "872dfad32df7891c8719474ca54a700031d964dc",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d88246a370049f64dd2aaef2b3cb3bd8e1e9fd68/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d88246a370049f64dd2aaef2b3cb3bd8e1e9fd68/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d88246a370049f64dd2aaef2b3cb3bd8e1e9fd68",
        "patch": "@@ -1244,7 +1244,12 @@ bool AppInitMain()\n         LogPrintf(\"Startup time: %s\\n\", FormatISO8601DateTime(GetTime()));\n     LogPrintf(\"Default data directory %s\\n\", GetDefaultDataDir().string());\n     LogPrintf(\"Using data directory %s\\n\", GetDataDir().string());\n-    LogPrintf(\"Using config file %s\\n\", GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME)).string());\n+\n+    // Only log conf file usage message if conf file actually exists\n+    fs::path config_file_path = GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n+    if(fs::exists(config_file_path))\n+        LogPrintf(\"Using config file %s\\n\", config_file_path.string());\n+\n     LogPrintf(\"Using at most %i automatic connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n \n     // Warn about relative -datadir path."
      },
      {
        "sha": "7ca057b7af5b5b3884e78b9f7394bc5326af507a",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d88246a370049f64dd2aaef2b3cb3bd8e1e9fd68/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d88246a370049f64dd2aaef2b3cb3bd8e1e9fd68/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=d88246a370049f64dd2aaef2b3cb3bd8e1e9fd68",
        "patch": "@@ -802,7 +802,9 @@ void SetupDatadir(fs::path path)\n     fs::create_directories(path / \"wallets\");\n \n     // write default bitcoin.conf template to datadir\n-    std::ofstream conf_file((path / BITCOIN_CONF_FILENAME).string().c_str());\n+    std::string conf_filename(BITCOIN_CONF_FILENAME);\n+    std::string example_conf_filename = conf_filename + \".example\";\n+    std::ofstream conf_file((path / example_conf_filename).string().c_str());\n     conf_file << DEFAULT_BITCOIN_CONF_TEXT << std::endl;\n }\n "
      }
    ]
  },
  {
    "sha": "e39da69c3585d178cf25c177d71d32fc7db93ffc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMzlkYTY5YzM1ODVkMTc4Y2YyNWMxNzdkNzFkMzJmYzdkYjkzZmZj",
    "commit": {
      "author": {
        "name": "Alexander Leishman",
        "email": "leishman3@gmail.com",
        "date": "2018-08-02T12:59:08Z"
      },
      "committer": {
        "name": "Alexander Leishman",
        "email": "leishman3@gmail.com",
        "date": "2018-08-02T12:59:08Z"
      },
      "message": "widen the block explaining addnode vs connect and remove 'number' from the example pw",
      "tree": {
        "sha": "19eb549ae20454a955b3a12b4d5f6f71495744b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/19eb549ae20454a955b3a12b4d5f6f71495744b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e39da69c3585d178cf25c177d71d32fc7db93ffc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e39da69c3585d178cf25c177d71d32fc7db93ffc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e39da69c3585d178cf25c177d71d32fc7db93ffc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e39da69c3585d178cf25c177d71d32fc7db93ffc/comments",
    "author": {
      "login": "leishman",
      "id": 3648618,
      "node_id": "MDQ6VXNlcjM2NDg2MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3648618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leishman",
      "html_url": "https://github.com/leishman",
      "followers_url": "https://api.github.com/users/leishman/followers",
      "following_url": "https://api.github.com/users/leishman/following{/other_user}",
      "gists_url": "https://api.github.com/users/leishman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leishman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leishman/subscriptions",
      "organizations_url": "https://api.github.com/users/leishman/orgs",
      "repos_url": "https://api.github.com/users/leishman/repos",
      "events_url": "https://api.github.com/users/leishman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leishman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leishman",
      "id": 3648618,
      "node_id": "MDQ6VXNlcjM2NDg2MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3648618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leishman",
      "html_url": "https://github.com/leishman",
      "followers_url": "https://api.github.com/users/leishman/followers",
      "following_url": "https://api.github.com/users/leishman/following{/other_user}",
      "gists_url": "https://api.github.com/users/leishman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leishman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leishman/subscriptions",
      "organizations_url": "https://api.github.com/users/leishman/orgs",
      "repos_url": "https://api.github.com/users/leishman/repos",
      "events_url": "https://api.github.com/users/leishman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leishman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d88246a370049f64dd2aaef2b3cb3bd8e1e9fd68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d88246a370049f64dd2aaef2b3cb3bd8e1e9fd68",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d88246a370049f64dd2aaef2b3cb3bd8e1e9fd68"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 21,
      "deletions": 23
    },
    "files": [
      {
        "sha": "ef10ce110c4172b98e39929229c2ec881805b69d",
        "filename": "src/conf_file.h",
        "status": "modified",
        "additions": 21,
        "deletions": 23,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e39da69c3585d178cf25c177d71d32fc7db93ffc/src/conf_file.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e39da69c3585d178cf25c177d71d32fc7db93ffc/src/conf_file.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/conf_file.h?ref=e39da69c3585d178cf25c177d71d32fc7db93ffc",
        "patch": "@@ -26,28 +26,26 @@ static const char* DEFAULT_BITCOIN_CONF_TEXT = R\"(##\n # Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6\n #whitebind=<addr>\n \n-##############################################################\n-##            Quick Primer on addnode vs connect            ##\n-##  Let's say for instance you use addnode=4.2.2.4          ##\n-##  addnode will connect you to and tell you about the      ##\n-##    nodes connected to 4.2.2.4.  In addition it will tell ##\n-##    the other nodes connected to it that you exist so     ##\n-##    they can connect to you.                              ##\n-##  connect will not do the above when you 'connect' to it. ##\n-##    It will *only* connect you to 4.2.2.4 and no one else.##\n-##                                                          ##\n-##  So if you're behind a firewall, or have other problems  ##\n-##  finding nodes, add some using 'addnode'.                ##\n-##                                                          ##\n-##  If you want to stay private, use 'connect' to only      ##\n-##  connect to \"trusted\" nodes.                             ##\n-##                                                          ##\n-##  If you run multiple nodes on a LAN, there's no need for ##\n-##  all of them to open lots of connections.  Instead       ##\n-##  'connect' them all to one node that is port forwarded   ##\n-##  and has lots of connections.                            ##\n-##       Thanks goes to [Noodle] on Freenode.               ##\n-##############################################################\n+    #############################################################################\n+    ##            Quick Primer on addnode vs connect                           ##\n+    ##  Let's say for instance you use addnode=4.2.2.4 addnode will connect    ##\n+    ##  you to and tell you about the nodes connected to 4.2.2.4. In addition  ##\n+    ##  it will tell the other nodes connected to it that you exist so         ##\n+    ##  they can connect to you.                                               ##\n+    ##                                                                         ##\n+    ##  connect will not do the above when you 'connect' to it. It will        ##\n+    ##  *only* connect you to 4.2.2.4 and no one else.                         ##\n+    ##                                                                         ##\n+    ##  So if you're behind a firewall, or have other problems finding nodes,  ##\n+    ##  add some using 'addnode'.                                              ##\n+    ##                                                                         ##\n+    ##  If you want to stay private, use 'connect' to only connect to          ##\n+    ##  \"trusted\" nodes.                                                       ##\n+    ##                                                                         ##\n+    ##  If you run multiple nodes on a LAN, there's no need for all of them    ##\n+    ##  to open lots of connections.  Instead 'connect' them all to one node   ##\n+    ##  that is port forwarded and has lots of connections.                    ##\n+    #############################################################################\n \n # Use as many addnode= settings as you like to connect to specific peers\n #addnode=69.164.218.197\n@@ -81,7 +79,7 @@ static const char* DEFAULT_BITCOIN_CONF_TEXT = R\"(##\n # If not, you must set rpcuser and rpcpassword to secure the JSON-RPC api. The first\n # method(DEPRECATED) is to set this pair for the server and client:\n #rpcuser=Ulysseys\n-#rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n+#rpcpassword=YourSuperGreatPassword_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n #\n # The second method `rpcauth` can be added to server startup argument. It is set at initialization time\n # using the output from the script in share/rpcauth/rpcauth.py after providing a username:"
      }
    ]
  },
  {
    "sha": "d8018d811cb4b4646c91fa1835a8f0afd333c0c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkODAxOGQ4MTFjYjRiNDY0NmM5MWZhMTgzNWE4ZjBhZmQzMzNjMGM1",
    "commit": {
      "author": {
        "name": "Alexander Leishman",
        "email": "leishman3@gmail.com",
        "date": "2018-08-02T13:14:30Z"
      },
      "committer": {
        "name": "Alexander Leishman",
        "email": "leishman3@gmail.com",
        "date": "2018-08-02T13:14:30Z"
      },
      "message": "formatting fix",
      "tree": {
        "sha": "5369d210e7da42afbead3534ce1eaa0e1a6deb08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5369d210e7da42afbead3534ce1eaa0e1a6deb08"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8018d811cb4b4646c91fa1835a8f0afd333c0c5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8018d811cb4b4646c91fa1835a8f0afd333c0c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d8018d811cb4b4646c91fa1835a8f0afd333c0c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8018d811cb4b4646c91fa1835a8f0afd333c0c5/comments",
    "author": {
      "login": "leishman",
      "id": 3648618,
      "node_id": "MDQ6VXNlcjM2NDg2MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3648618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leishman",
      "html_url": "https://github.com/leishman",
      "followers_url": "https://api.github.com/users/leishman/followers",
      "following_url": "https://api.github.com/users/leishman/following{/other_user}",
      "gists_url": "https://api.github.com/users/leishman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leishman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leishman/subscriptions",
      "organizations_url": "https://api.github.com/users/leishman/orgs",
      "repos_url": "https://api.github.com/users/leishman/repos",
      "events_url": "https://api.github.com/users/leishman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leishman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "leishman",
      "id": 3648618,
      "node_id": "MDQ6VXNlcjM2NDg2MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3648618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leishman",
      "html_url": "https://github.com/leishman",
      "followers_url": "https://api.github.com/users/leishman/followers",
      "following_url": "https://api.github.com/users/leishman/following{/other_user}",
      "gists_url": "https://api.github.com/users/leishman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leishman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leishman/subscriptions",
      "organizations_url": "https://api.github.com/users/leishman/orgs",
      "repos_url": "https://api.github.com/users/leishman/repos",
      "events_url": "https://api.github.com/users/leishman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leishman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e39da69c3585d178cf25c177d71d32fc7db93ffc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e39da69c3585d178cf25c177d71d32fc7db93ffc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e39da69c3585d178cf25c177d71d32fc7db93ffc"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e5bd3ca25e8c71fe1270032b0c7e395a1ce8e708",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8018d811cb4b4646c91fa1835a8f0afd333c0c5/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8018d811cb4b4646c91fa1835a8f0afd333c0c5/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d8018d811cb4b4646c91fa1835a8f0afd333c0c5",
        "patch": "@@ -1247,7 +1247,7 @@ bool AppInitMain()\n \n     // Only log conf file usage message if conf file actually exists\n     fs::path config_file_path = GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n-    if(fs::exists(config_file_path))\n+    if (fs::exists(config_file_path))\n         LogPrintf(\"Using config file %s\\n\", config_file_path.string());\n \n     LogPrintf(\"Using at most %i automatic connections (%i file descriptors available)\\n\", nMaxConnections, nFD);"
      }
    ]
  }
]