[
  {
    "sha": "4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YjRlOWViMmU2NmQwMjYxZWYwOTk1ZjhlYWUxNDE5YzliMmEwMzU4",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-04-25T16:45:17Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-04-28T02:08:58Z"
      },
      "message": "[Qt] Client restart",
      "tree": {
        "sha": "549ceca07cae6df41039c41d6438976a96d6b27e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/549ceca07cae6df41039c41d6438976a96d6b27e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c63b2e25a59c602de182a376313ad5d3d62d5045",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c63b2e25a59c602de182a376313ad5d3d62d5045",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c63b2e25a59c602de182a376313ad5d3d62d5045"
      }
    ],
    "stats": {
      "total": 96,
      "additions": 81,
      "deletions": 15
    },
    "files": [
      {
        "sha": "5b26fde9876b580a95d35aeb8df1ec746fffa670",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
        "patch": "@@ -80,13 +80,18 @@ bool CDBEnv::Open(const boost::filesystem::path& pathIn)\n     if (GetBoolArg(\"-privdb\", true))\n         nEnvFlags |= DB_PRIVATE;\n \n+    FILE* errorFile = fopen(pathErrorFile.string().c_str(), \"a\");\n+#ifndef WIN32\n+    if (errorFile) fcntl(fileno(errorFile), F_SETFD, FD_CLOEXEC);\n+#endif\n+\n     dbenv.set_lg_dir(pathLogDir.string().c_str());\n     dbenv.set_cachesize(0, 0x100000, 1); // 1 MiB should be enough for just the wallet\n     dbenv.set_lg_bsize(0x10000);\n     dbenv.set_lg_max(1048576);\n     dbenv.set_lk_max_locks(40000);\n     dbenv.set_lk_max_objects(40000);\n-    dbenv.set_errfile(fopen(pathErrorFile.string().c_str(), \"a\")); /// debug\n+    dbenv.set_errfile(errorFile); /// debug\n     dbenv.set_flags(DB_AUTO_COMMIT, 1);\n     dbenv.set_flags(DB_TXN_WRITE_NOSYNC, 1);\n     dbenv.log_set_config(DB_LOG_AUTO_REMOVE, 1);"
      },
      {
        "sha": "e1891194152e086bd5493711f998731a7577c937",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
        "patch": "@@ -955,6 +955,9 @@ void ThreadSocketHandler()\n             }\n             else\n             {\n+#ifndef WIN32\n+                fcntl(hSocket, F_SETFD, FD_CLOEXEC);\n+#endif\n                 LogPrint(\"net\", \"accepted connection %s\\n\", addr.ToString());\n                 CNode* pnode = new CNode(hSocket, addr, \"\", true);\n                 pnode->AddRef();\n@@ -1619,6 +1622,11 @@ bool BindListenPort(const CService &addrBind, string& strError)\n     // Set to non-blocking, incoming connections will also inherit this\n     if (ioctlsocket(hListenSocket, FIONBIO, (u_long*)&nOne) == SOCKET_ERROR)\n #else\n+\n+    // do not inherit file descriptor to child processes (needed for the restart function in GUI)\n+    // on windows this is not an issue, because the GUI calls CreateProcess() with bInheritHandles=false there\n+    fcntl(hListenSocket, F_SETFD, FD_CLOEXEC);\n+\n     if (fcntl(hListenSocket, F_SETFL, O_NONBLOCK) == SOCKET_ERROR)\n #endif\n     {"
      },
      {
        "sha": "63a532c5ac9aae351a8c81c95a015f4fbb7c0ddc",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
        "patch": "@@ -345,6 +345,7 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n     if (ioctlsocket(hSocket, FIONBIO, &fNonblock) == SOCKET_ERROR)\n #else\n     int fFlags = fcntl(hSocket, F_GETFL, 0);\n+    fcntl(hSocket, F_SETFD, FD_CLOEXEC);\n     if (fcntl(hSocket, F_SETFL, fFlags | O_NONBLOCK) == -1)\n #endif\n     {"
      },
      {
        "sha": "599b6bdc2abda3bed73ace3cd80c283f2c166f5e",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
        "patch": "@@ -247,6 +247,7 @@ RES_ICONS = \\\n   res/icons/quit.png \\\n   res/icons/receive.png \\\n   res/icons/remove.png \\\n+  res/icons/restart.png \\\n   res/icons/send.png \\\n   res/icons/synced.png \\\n   res/icons/toolbar.png \\"
      },
      {
        "sha": "f6ff165975c2a8e63b431e13e25d66cf7db8087b",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
        "patch": "@@ -116,7 +116,7 @@ void AskPassphraseDialog::accept()\n                 {\n                     QMessageBox::warning(this, tr(\"Wallet encrypted\"),\n                                          \"<qt>\" +\n-                                         tr(\"Bitcoin will close now to finish the encryption process. \"\n+                                         tr(\"Bitcoin will restart now to finish the encryption process. \"\n                                          \"Remember that encrypting your wallet cannot fully protect \"\n                                          \"your bitcoins from being stolen by malware infecting your computer.\") +\n                                          \"<br><br><b>\" +\n@@ -125,7 +125,7 @@ void AskPassphraseDialog::accept()\n                                          \"For security reasons, previous backups of the unencrypted wallet file \"\n                                          \"will become useless as soon as you start using the new, encrypted wallet.\") +\n                                          \"</b></qt>\");\n-                    QApplication::quit();\n+                    qApp->exit(EXIT_CODE_RESTART);\n                 }\n                 else\n                 {"
      },
      {
        "sha": "1b47da250ab1cf2f6a8efc31807a9ae832bbe4b6",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 5,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
        "patch": "@@ -34,9 +34,11 @@\n \n #include <boost/filesystem/operations.hpp>\n #include <QApplication>\n+#include <QDir>\n #include <QLibraryInfo>\n #include <QLocale>\n #include <QMessageBox>\n+#include <QProcess>\n #include <QSettings>\n #include <QTimer>\n #include <QTranslator>\n@@ -185,7 +187,7 @@ class BitcoinApplication: public QApplication\n     /// Request core initialization\n     void requestInitialize();\n     /// Request core shutdown\n-    void requestShutdown();\n+    void requestShutdown(bool fRestart);\n \n     /// Get process return value\n     int getReturnValue() { return returnValue; }\n@@ -359,7 +361,7 @@ void BitcoinApplication::requestInitialize()\n     emit requestedInitialize();\n }\n \n-void BitcoinApplication::requestShutdown()\n+void BitcoinApplication::requestShutdown(bool fRestart)\n {\n     LogPrintf(\"Requesting shutdown\\n\");\n     window->hide();\n@@ -375,7 +377,7 @@ void BitcoinApplication::requestShutdown()\n     clientModel = 0;\n \n     // Show a simple window indicating shutdown status\n-    ShutdownWindow::showShutdownWindow(window);\n+    ShutdownWindow::showShutdownWindow(window, fRestart);\n \n     // Request shutdown from core thread\n     emit requestedShutdown();\n@@ -590,15 +592,16 @@ int main(int argc, char *argv[])\n     if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n         app.createSplashScreen(isaTestNet);\n \n+    int ret = 0;\n     try\n     {\n         app.createWindow(isaTestNet);\n         app.requestInitialize();\n #if defined(Q_OS_WIN) && QT_VERSION >= 0x050000\n         WinShutdownMonitor::registerShutdownBlockReason(QObject::tr(\"Bitcoin Core did't yet exit safely...\"), (HWND)app.getMainWinId());\n #endif\n-        app.exec();\n-        app.requestShutdown();\n+        ret = app.exec();\n+        app.requestShutdown(ret == EXIT_CODE_RESTART);\n         app.exec();\n     } catch (std::exception& e) {\n         PrintExceptionContinue(&e, \"Runaway exception\");\n@@ -607,6 +610,20 @@ int main(int argc, char *argv[])\n         PrintExceptionContinue(NULL, \"Runaway exception\");\n         app.handleRunawayException(QString::fromStdString(strMiscWarning));\n     }\n+\n+    // restart requested\n+    if (ret == EXIT_CODE_RESTART)\n+    {\n+        QStringList arguments, skiparguments;\n+        skiparguments << \"loadblock\" << \"reindex\" << \"rescan\" << \"salvagewallet\" << \"upgradewallet\" << \"zapwallettxes\";\n+        for (int i = 1; i < argc; i++)\n+            if (QString::fromLocal8Bit(argv[i]).left(1) == \"-\" || QString::fromLocal8Bit(argv[i]).lastIndexOf(\"/\") == 0)\n+                if (skiparguments.indexOf(QString::fromLocal8Bit(argv[i]).remove(QRegExp(\"[^a-z]\"))) == -1)\n+                    arguments += QString::fromLocal8Bit(argv[i]);\n+\n+        QProcess::startDetached(app.applicationFilePath(), arguments, QDir::currentPath());\n+    }\n+\n     return app.getReturnValue();\n }\n #endif // BITCOIN_QT_TEST"
      },
      {
        "sha": "6e1b905a62a8023eb0e9114f5c15fb9deb9d07cd",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
        "patch": "@@ -2,6 +2,7 @@\n     <qresource prefix=\"/icons\">\n         <file alias=\"bitcoin\">res/icons/bitcoin.png</file>\n         <file alias=\"address-book\">res/icons/address-book.png</file>\n+        <file alias=\"restart\">res/icons/restart.png</file>\n         <file alias=\"quit\">res/icons/quit.png</file>\n         <file alias=\"send\">res/icons/send.png</file>\n         <file alias=\"toolbar\">res/icons/toolbar.png</file>"
      },
      {
        "sha": "5adcf67056f36ff7940dddd14a83c4b29b6e58c0",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 1,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
        "patch": "@@ -189,6 +189,7 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n     connect(openRPCConsoleAction, SIGNAL(triggered()), rpcConsole, SLOT(show()));\n \n     // prevents an oben debug window from becoming stuck/unusable on client shutdown\n+    connect(restartAction, SIGNAL(triggered()), rpcConsole, SLOT(hide()));\n     connect(quitAction, SIGNAL(triggered()), rpcConsole, SLOT(hide()));\n \n     // Install event filter to be able to catch status tip events (QEvent::StatusTip)\n@@ -258,6 +259,10 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     connect(historyAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n     connect(historyAction, SIGNAL(triggered()), this, SLOT(gotoHistoryPage()));\n \n+    restartAction = new QAction(QIcon(\":/icons/restart\"), tr(\"R&estart\"), this);\n+    restartAction->setStatusTip(tr(\"Restart application\"));\n+    restartAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_R));\n+    restartAction->setMenuRole(QAction::QuitRole);\n     quitAction = new QAction(QIcon(\":/icons/quit\"), tr(\"E&xit\"), this);\n     quitAction->setStatusTip(tr(\"Quit application\"));\n     quitAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_Q));\n@@ -310,6 +315,7 @@ void BitcoinGUI::createActions(bool fIsTestnet)\n     showHelpMessageAction = new QAction(QApplication::style()->standardIcon(QStyle::SP_MessageBoxInformation), tr(\"&Command-line options\"), this);\n     showHelpMessageAction->setStatusTip(tr(\"Show the Bitcoin Core help message to get a list with possible Bitcoin command-line options\"));\n \n+    connect(restartAction, SIGNAL(triggered()), this, SLOT(restartApplication()));\n     connect(quitAction, SIGNAL(triggered()), qApp, SLOT(quit()));\n     connect(aboutAction, SIGNAL(triggered()), this, SLOT(aboutClicked()));\n     connect(aboutQtAction, SIGNAL(triggered()), qApp, SLOT(aboutQt()));\n@@ -354,6 +360,7 @@ void BitcoinGUI::createMenuBar()\n         file->addAction(usedReceivingAddressesAction);\n         file->addSeparator();\n     }\n+    file->addAction(restartAction);\n     file->addAction(quitAction);\n \n     QMenu *settings = appMenuBar->addMenu(tr(\"&Settings\"));\n@@ -513,8 +520,9 @@ void BitcoinGUI::createTrayIconMenu()\n     trayIconMenu->addSeparator();\n     trayIconMenu->addAction(optionsAction);\n     trayIconMenu->addAction(openRPCConsoleAction);\n-#ifndef Q_OS_MAC // This is built-in on Mac\n     trayIconMenu->addSeparator();\n+    trayIconMenu->addAction(restartAction);\n+#ifndef Q_OS_MAC // This is built-in on Mac\n     trayIconMenu->addAction(quitAction);\n #endif\n }\n@@ -946,6 +954,11 @@ void BitcoinGUI::toggleHidden()\n     showNormalIfMinimized(true);\n }\n \n+void BitcoinGUI::restartApplication()\n+{\n+    qApp->exit(EXIT_CODE_RESTART);\n+}\n+\n void BitcoinGUI::detectShutdown()\n {\n     if (ShutdownRequested())"
      },
      {
        "sha": "dde3cb800227554c0fb7698808e826f8275b7ca6",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
        "patch": "@@ -77,6 +77,7 @@ class BitcoinGUI : public QMainWindow\n     QMenuBar *appMenuBar;\n     QAction *overviewAction;\n     QAction *historyAction;\n+    QAction *restartAction;\n     QAction *quitAction;\n     QAction *sendCoinsAction;\n     QAction *usedSendingAddressesAction;\n@@ -191,6 +192,9 @@ private slots:\n \n     /** called by a timer to check if fRequestShutdown has been set **/\n     void detectShutdown();\n+\n+    /** Called when the user clicks on \"Restart\" in the file or tray menu */\n+    void restartApplication();\n };\n \n #endif // BITCOINGUI_H"
      },
      {
        "sha": "594cef480903365ad55724b944578229b8e9c495",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
        "patch": "@@ -5,6 +5,9 @@\n #ifndef GUICONSTANTS_H\n #define GUICONSTANTS_H\n \n+/* Exit code passed by qApp->exit() to restart the application */\n+static const int EXIT_CODE_RESTART = -1234567890;\n+\n /* Milliseconds between model updates */\n static const int MODEL_UPDATE_DELAY = 250;\n "
      },
      {
        "sha": "21a5872914d47302886cd5b9beaf5ee7c4e05e39",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 3,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
        "patch": "@@ -10,6 +10,7 @@\n #include \"ui_optionsdialog.h\"\n \n #include \"bitcoinunits.h\"\n+#include \"guiconstants.h\"\n #include \"guiutil.h\"\n #include \"monitoreddatamapper.h\"\n #include \"optionsmodel.h\"\n@@ -208,22 +209,31 @@ void OptionsDialog::on_resetButton_clicked()\n     {\n         // confirmation dialog\n         QMessageBox::StandardButton btnRetVal = QMessageBox::question(this, tr(\"Confirm options reset\"),\n-            tr(\"Client restart required to activate changes.\") + \"<br><br>\" + tr(\"Client will be shutdown, do you want to proceed?\"),\n+            tr(\"Client restart required to activate changes.\") + \"<br><br>\" + tr(\"Restart now?\"),\n             QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Cancel);\n \n         if(btnRetVal == QMessageBox::Cancel)\n             return;\n \n-        /* reset all options and close GUI */\n+        /* reset all options and restart GUI */\n         model->Reset();\n-        QApplication::quit();\n+        qApp->exit(EXIT_CODE_RESTART);\n     }\n }\n \n void OptionsDialog::on_okButton_clicked()\n {\n     mapper->submit();\n     accept();\n+    if (model->isRestartRequired())\n+    {\n+        QMessageBox::StandardButton btnRetVal = QMessageBox::question(this, tr(\"Confirm restart\"),\n+            tr(\"Client restart required to activate changes.\") + \"<br><br>\" + tr(\"Restart now?\"),\n+            QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Cancel);\n+\n+        if(btnRetVal == QMessageBox::Yes)\n+            qApp->exit(EXIT_CODE_RESTART);\n+    }\n }\n \n void OptionsDialog::on_cancelButton_clicked()"
      },
      {
        "sha": "fc63bb8083c8535c58f8ef08c2495536973ea3bc",
        "filename": "src/qt/res/icons/restart.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/res/icons/restart.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/res/icons/restart.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/restart.png?ref=4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358"
      },
      {
        "sha": "74555dfee464755aca0aae292bd281a19927da1f",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
        "patch": "@@ -115,7 +115,7 @@ void HelpMessageDialog::on_okButton_accepted()\n \n \n /** \"Shutdown\" window */\n-void ShutdownWindow::showShutdownWindow(BitcoinGUI *window)\n+void ShutdownWindow::showShutdownWindow(BitcoinGUI *window, bool fRestart)\n {\n     if (!window)\n         return;\n@@ -124,7 +124,7 @@ void ShutdownWindow::showShutdownWindow(BitcoinGUI *window)\n     QWidget *shutdownWindow = new QWidget();\n     QVBoxLayout *layout = new QVBoxLayout();\n     layout->addWidget(new QLabel(\n-        tr(\"Bitcoin Core is shutting down...\") + \"<br /><br />\" +\n+        (fRestart ? tr(\"Bitcoin Core is restarting...\") : tr(\"Bitcoin Core is shutting down...\")) + \"<br /><br />\" +\n         tr(\"Do not shut down the computer until this window disappears.\")));\n     shutdownWindow->setLayout(layout);\n "
      },
      {
        "sha": "bd7a822bc0b88a8930d036ea3a860482cc55b9a9",
        "filename": "src/qt/utilitydialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/utilitydialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/qt/utilitydialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.h?ref=4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
        "patch": "@@ -63,7 +63,7 @@ class ShutdownWindow : public QObject\n     Q_OBJECT\n \n public:\n-    static void showShutdownWindow(BitcoinGUI *window);\n+    static void showShutdownWindow(BitcoinGUI *window, bool fRestart);\n };\n \n #endif // UTILITYDIALOG_H"
      },
      {
        "sha": "ecc388fc8f97b9f357303e7ad52bc7a239723975",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=4b4e9eb2e66d0261ef0995f8eae1419c9b2a0358",
        "patch": "@@ -231,6 +231,9 @@ static void DebugPrintInit()\n     boost::filesystem::path pathDebug = GetDataDir() / \"debug.log\";\n     fileout = fopen(pathDebug.string().c_str(), \"a\");\n     if (fileout) setbuf(fileout, NULL); // unbuffered\n+#ifndef WIN32\n+    if (fileout) fcntl(fileno(fileout), F_SETFD, FD_CLOEXEC);\n+#endif\n \n     mutexDebugLog = new boost::mutex();\n }"
      }
    ]
  }
]