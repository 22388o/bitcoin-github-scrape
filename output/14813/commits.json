[
  {
    "sha": "fa739d4bd735c21bc530f97272007e8695cb0ba3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTczOWQ0YmQ3MzVjMjFiYzUzMGY5NzI3MjAwN2U4Njk1Y2IwYmEz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-11-26T21:19:06Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-11-26T21:12:13Z"
      },
      "message": "qa: Add wallet_encryption error tests",
      "tree": {
        "sha": "42cf13599d3cfc76df77315ce5209c219dd2f63e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/42cf13599d3cfc76df77315ce5209c219dd2f63e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa739d4bd735c21bc530f97272007e8695cb0ba3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJb/GGtAAoJEM4rdWl+aaVIDBEL/ihhZ7Rl4r0RGXztb2aVL+Db\ngmT0dzRi+tJwxExuDzKORkjdsf9+uSPxt1n1jQStg6/RUx1XZc/WFB4XPITBudzc\nZUNXA+N1wTBc7CJkvEnE8UGDRH+awsDPBNP8LLo7HZWBzLPdCoHN0nZCWaxvzU4G\naPu5La2X50palRJLC3+dEhqaJsYLCRWDRC/FB+HrSCopJJtE/0vmRhucwafb1uEB\nuEcxCJpyxgbBlPncIBL/YGWaCR7CgIoXN9BCI74hsFNZ3S3dQgKLt2zCTiTPVx/w\nznOyqughYlhoxGW8axZQOSXMHTJ+IuRCA1BdGPjIM3Dpf1HQsFOpjnmyW5Tw/MoD\nr+K1nLfZTjzGy3IZxO3tVkfbk84Qp0TLlV4HmWoJN6YNwVJ/u25Re2ZKe+IO22f5\nu9/vxbO4/CRgZ0ZnvwB7n4oEHDrQc/I64cFj1f/KJeVNm0GjqvZLCQyclGwGtUah\nHUrKVQnAL00B6jPj8IY5Y/JGJ0o15Z0pZlzdKbUZng==\n=C5O1\n-----END PGP SIGNATURE-----",
        "payload": "tree 42cf13599d3cfc76df77315ce5209c219dd2f63e\nparent 327129f7a6440e3bbd0a0ea415ea5f8907cf3233\nauthor MarcoFalke <falke.marco@gmail.com> 1543267146 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1543266733 -0500\n\nqa: Add wallet_encryption error tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa739d4bd735c21bc530f97272007e8695cb0ba3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa739d4bd735c21bc530f97272007e8695cb0ba3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa739d4bd735c21bc530f97272007e8695cb0ba3/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "327129f7a6440e3bbd0a0ea415ea5f8907cf3233",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/327129f7a6440e3bbd0a0ea415ea5f8907cf3233",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/327129f7a6440e3bbd0a0ea415ea5f8907cf3233"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 18,
      "deletions": 31
    },
    "files": [
      {
        "sha": "d4806b4c6bc1733cf7344b7ff2f6e740293ca79e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 31,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa739d4bd735c21bc530f97272007e8695cb0ba3/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa739d4bd735c21bc530f97272007e8695cb0ba3/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fa739d4bd735c21bc530f97272007e8695cb0ba3",
        "patch": "@@ -2009,21 +2009,13 @@ static UniValue walletpassphrase(const JSONRPCRequest& request)\n         nSleepTime = MAX_SLEEP_TIME;\n     }\n \n-    if (strWalletPass.length() > 0)\n-    {\n-        if (!pwallet->Unlock(strWalletPass)) {\n-            throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n-        }\n+    if (strWalletPass.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n+    }\n+\n+    if (!pwallet->Unlock(strWalletPass)) {\n+        throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n     }\n-    else\n-        throw std::runtime_error(\n-            RPCHelpMan{\"walletpassphrase\",\n-                \"Stores the wallet decryption key in memory for <timeout> seconds.\",\n-                {\n-                    {\"passphrase\", RPCArg::Type::STR, false},\n-                    {\"timeout\", RPCArg::Type::NUM, false},\n-                }}\n-                .ToString());\n \n     pwallet->TopUpKeyPool();\n \n@@ -2089,15 +2081,9 @@ static UniValue walletpassphrasechange(const JSONRPCRequest& request)\n     strNewWalletPass.reserve(100);\n     strNewWalletPass = request.params[1].get_str().c_str();\n \n-    if (strOldWalletPass.length() < 1 || strNewWalletPass.length() < 1)\n-        throw std::runtime_error(\n-            RPCHelpMan{\"walletpassphrasechange\",\n-                \"Changes the wallet passphrase from <oldpassphrase> to <newpassphrase>.\",\n-                {\n-                    {\"oldpassphrase\", RPCArg::Type::STR, false},\n-                    {\"newpassphrase\", RPCArg::Type::STR, false},\n-                }}\n-                .ToString());\n+    if (strOldWalletPass.empty() || strNewWalletPass.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n+    }\n \n     if (!pwallet->ChangeWalletPassphrase(strOldWalletPass, strNewWalletPass)) {\n         throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n@@ -2200,14 +2186,9 @@ static UniValue encryptwallet(const JSONRPCRequest& request)\n     strWalletPass.reserve(100);\n     strWalletPass = request.params[0].get_str().c_str();\n \n-    if (strWalletPass.length() < 1)\n-        throw std::runtime_error(\n-            RPCHelpMan{\"encryptwallet\",\n-                \"Encrypts the wallet with <passphrase>.\",\n-                {\n-                    {\"passphrase\", RPCArg::Type::STR, false},\n-                }}\n-                .ToString());\n+    if (strWalletPass.empty()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n+    }\n \n     if (!pwallet->EncryptWallet(strWalletPass)) {\n         throw JSONRPCError(RPC_WALLET_ENCRYPTION_FAILED, \"Error: Failed to encrypt the wallet.\");"
      },
      {
        "sha": "c514b7e0b402eddf5d237ba65b996a9cf22294f3",
        "filename": "test/functional/wallet_encryption.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa739d4bd735c21bc530f97272007e8695cb0ba3/test/functional/wallet_encryption.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa739d4bd735c21bc530f97272007e8695cb0ba3/test/functional/wallet_encryption.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_encryption.py?ref=fa739d4bd735c21bc530f97272007e8695cb0ba3",
        "patch": "@@ -31,12 +31,18 @@ def run_test(self):\n         privkey = self.nodes[0].dumpprivkey(address)\n         assert_equal(privkey[:1], \"c\")\n         assert_equal(len(privkey), 52)\n+        assert_raises_rpc_error(-15, \"Error: running with an unencrypted wallet, but walletpassphrase was called\", self.nodes[0].walletpassphrase, 'ff', 1)\n+        assert_raises_rpc_error(-15, \"Error: running with an unencrypted wallet, but walletpassphrasechange was called.\", self.nodes[0].walletpassphrasechange, 'ff', 'ff')\n \n         # Encrypt the wallet\n+        assert_raises_rpc_error(-8, \"passphrase can not be empty\", self.nodes[0].encryptwallet, '')\n         self.nodes[0].encryptwallet(passphrase)\n \n         # Test that the wallet is encrypted\n         assert_raises_rpc_error(-13, \"Please enter the wallet passphrase with walletpassphrase first\", self.nodes[0].dumpprivkey, address)\n+        assert_raises_rpc_error(-15, \"Error: running with an encrypted wallet, but encryptwallet was called.\", self.nodes[0].encryptwallet, 'ff')\n+        assert_raises_rpc_error(-8, \"passphrase can not be empty\", self.nodes[0].walletpassphrase, '', 1)\n+        assert_raises_rpc_error(-8, \"passphrase can not be empty\", self.nodes[0].walletpassphrasechange, '', 'ff')\n \n         # Check that walletpassphrase works\n         self.nodes[0].walletpassphrase(passphrase, 2)"
      }
    ]
  }
]