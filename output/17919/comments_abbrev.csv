DrahtBot,2020-01-13 23:48:19,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19124 (doc: Document ALLOW_HOST_PACKAGES dependency option by skmcontrib)\n* #18077 (net: Add NAT-PMP port forwarding sup",https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-573929108,573929108,
MarcoFalke,2020-02-11 19:22:34,"wen rebase, sir?",https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-584806675,584806675,
MarcoFalke,2020-02-11 19:24:39,"To give some context, I am still running into issues cross-compiling for mac on non-x86 arch. So I am hoping that this pull improves it for me.\n\n\n```\nPreprocessing native_cctools...\n-- The C compiler identification is unknown\n-- The CXX compiler identification is unknown\n-- The ASM compiler identification is unknown\n-- Found assembler: /home/travis/build/MarcoFalke/bitcoin-core/dep",https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-584807646,584807646,
dongcarl,2020-02-11 20:31:47,Rebased over #18072 and updated PR description.,https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-584837038,584837038,
dongcarl,2020-02-11 20:51:00,"@MarcoFalke This will definitely improve the situation for you (as I think the error you encounter is because we download a clang from llvm.org that's meant to be run on an x86_64 machine), but not sure if it will solve _everything_.",https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-584844988,584844988,
dongcarl,2020-06-10 20:42:26,Rebased over #19240 and made some simplifications. I think it's ready for review!,https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-642246909,642246909,
MarcoFalke,2020-06-11 11:36:02,"Looks like travis may be unable to compile mac depends, but the depends stderr is not shown. See https://github.com/bitcoin/bitcoin/issues/16368#issuecomment-638219853",https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-642585854,642585854,
dongcarl,2020-06-11 15:01:08,"> Looks like travis may be unable to compile mac depends, but the depends stderr is not shown. See [#16368 (comment)](https://github.com/bitcoin/bitcoin/issues/16368#issuecomment-638219853)\n\nI think it's cuz we need the regenerated macOS SDK with the libc++ headers",https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-642717604,642717604,
theuni,2020-06-12 20:56:12,"Concept ACK and this looks to be in good shape once rebased on top of feedback/fixups in #19240.\n\nThe changes in native_cctools.mk are pretty ugly but straightforward, and current behavior is unchanged as long as FORCE_USE_SYSTEM_CLANG remains unused. Though I think @dongcarl has finally convinced me that we'll probably move on to system-clang by default at some point and drop our weird pinned",https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-643479784,643479784,
theuni,2020-06-12 21:13:24,Travis should be able to find MacOSX10.14-with-libcxx-headers.sdk.tar.gz now :),https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-643485620,643485620,
fanquake,2020-06-15 05:37:16,"Given that we are going to be using a system Clang, I had a bit of a look into what patching Ubuntu and Guix are doing with their Clang packages to see if there was anything we needed to consider; i.e similar to #18921.\n\n#### Guix\n\nThe Clang and LLVM patches are [here](https://git.savannah.gnu.org/cgit/guix.git/tree/gnu/packages/patches). They seem fairly mundane. Mostly adjusting include/",https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-643913274,643913274,
dongcarl,2020-06-23 16:47:09,"PR rebased, Gitian build succeeded:\n```yml\n- out_manifest: |\n    7e218500ca12ba66d808041c2bfb46bcc2edfefa9a7d4518bf920f6665e39d73  bitcoin-842e81503b3b-osx-unsigned.dmg\n    4619e5b8cbf9d09c02a4d10fb1ac0c8d36acb59d42f32ded743f604e66ac9072  bitcoin-842e81503b3b-osx-unsigned.tar.gz\n    e1f8727102431a6a441b05d14c6fcc3e5b4d7017e709c3744379f8c0187a6e61  bitcoin-842e81503b3b-osx64.tar.gz\n    ",https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-648283755,648283755,
dongcarl,2020-07-07 20:53:24,"PR rebased again, Gitian build results:\n```yml\n- out_manifest: |\n    98649e59d846ffcd56837b9128a9c4c5bd98684f4c8b6051ebf1f2f4dded4c17  bitcoin-03a7aaab8409-osx-unsigned.dmg\n    ecbc41ac5b513fb87d802b1167288e1821f60db89359771091770fe8150e5c0c  bitcoin-03a7aaab8409-osx-unsigned.tar.gz\n    a5d6b02187573e494b3eb1d613082ba6a225a70725c6bb2d332502ab9ccc9ed2  bitcoin-03a7aaab8409-osx64.tar.gz\n",https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-655128125,655128125,
DrahtBot,2020-07-10 08:49:40,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit e3b31255c5ad8841023231ce843a27789d996ff6<br>(master) | commit 65163db57e8b6f55aa458e114436e5a52721fbc6<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`28e39cffd299f54d...`](https://drahtbot.space/guix/bitcoin/bitcoin/e3b31255c5ad8841023231ce843a27789d996ff6/bitcoin-e3b31255c5ad-aarch64-linux,https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-656564175,656564175,
theuni,2020-07-10 17:09:21,"I noticed that this didn't work with vanilla clang 10 from llvm.org. I'm unsure if there's some difference in paths, but vanilla clang picks up the libc++ that it's shipped with over the SDK's libc++. I suspect that distro-shipped clang's are patching default paths, which could explain why it works on some systems and not others.\n\nI was able to fix that like this: https://github.com/theuni/bit",https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-656785034,656785034,
dongcarl,2020-07-10 21:42:18,"Pushed with theuni's patch and an additional commit explaining our long list of macOS clang options. Although this PR worked before theuni's patch, the inclusion of this patch makes our `depends` system more robust on more systems and custom builds of clang, which is great! :relaxed: \n\nGitian build results:\n```yml\n- out_manifest: |\n    458cff604e842f65271a82543dc1daffd28f183bbef2fbf8c2b5",https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-656904519,656904519,
DrahtBot,2020-07-11 05:50:11,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit a4eb6a51a7f6eb68c35a90436739e0a7d884ed94<br>(master) | commit 1605cd7b2a01b31daf5e56bcf6abf69578268c91<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`ff553bc3ffbee22d...`](https://drahtbot.space/gitian/bitcoin/bitcoin/a4eb6a51a7f6eb68c35a90436739e0a7d884ed94/bitcoin-a4eb6a51a7f6-aarch64-l,https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-656996068,656996068,
hebasto,2020-08-15 14:25:48,"@dongcarl \n\nMultiple warnings observed on Travis macOS 10.12 [build](https://travis-ci.org/github/bitcoin/bitcoin/jobs/718179790#L3561):\n`clang: warning: argument unused during compilation: '-nostdinc++' [-Wunused-command-line-argument]`",https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-674404780,674404780,
dongcarl,2020-08-18 16:29:51,"@fanquake You mentioned on IRC that [hebasto's observation](https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-674404780) was known about. I'm not 100% sure I know what you're talking about though, is there an open issue?",https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-675582815,675582815,
fanquake,2020-08-19 00:53:54,"> I'm not 100% sure I know what you're talking about though, is there an open issue?\n\nThere's no issue, but it was discussed offline IIRC. I'll mention it in #19683, as I think documenting it as part of those changes is probably the easiest thing to do right now.",https://github.com/bitcoin/bitcoin/pull/17919#issuecomment-675790206,675790206,
theuni,2020-07-10 22:14:45,"Sorry, I realize this was my commit..\n\nIn testing, I noticed that we need to add this to the build string too. Because for darwin builds it uses the weird trick of compiling the native builds with the downloaded compiler, we need to redo those builds when we go back and forth between system-clang and non.\n\n```diff\ndiff --git a/depends/Makefile b/depends/Makefile\nindex b1d929d8dd..2bc5d",https://github.com/bitcoin/bitcoin/pull/17919#discussion_r453101110,453101110,depends/Makefile
theuni,2020-07-10 22:19:26,Please add FORCE_USE_SYSTEM_CLANG to the options in README.md (preferably with an expert disclaimer).,https://github.com/bitcoin/bitcoin/pull/17919#discussion_r453102546,453102546,depends/Makefile
dongcarl,2020-07-11 01:08:30,See: de4fedb6c3a45e6a23f1bccd28045d76b5830afc,https://github.com/bitcoin/bitcoin/pull/17919#discussion_r453136099,453136099,depends/Makefile
dongcarl,2020-07-11 01:08:49,Added to: 156b604203ef17b2b77ee9dacf15e375c809242a,https://github.com/bitcoin/bitcoin/pull/17919#discussion_r453136148,453136148,depends/Makefile
