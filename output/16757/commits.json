[
  {
    "sha": "fa99efd054c57cd6717391f9ae8ce32b06986ff8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTk5ZWZkMDU0YzU3Y2Q2NzE3MzkxZjlhZThjZTMyYjA2OTg2ZmY4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-29T16:42:00Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-09-03T11:32:33Z"
      },
      "message": "doc: ActivateBestChainStep return value",
      "tree": {
        "sha": "f70a63fa9144a720415528008c87011f78875859",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f70a63fa9144a720415528008c87011f78875859"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa99efd054c57cd6717391f9ae8ce32b06986ff8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgdgwwAoZAgpruPDXAoqjQI2x8DEsA3mvNvaofjQbGE9PiEWrEGkGQ1RqzGZ/LA\nbSZS0qbLQ3TIWRgJm83g/ZAFtNkkmIS0lomGAOgox2mADMjZZySmxfdpxPGzJxdf\nq/oqW8VjH0VhWAWZkGyB4GCTXg0Ld+s/DTvqrP/rq6/0sDNnpK/oEgnygdXm8XHG\nrpCLG2DS1/1DJ8zqF+zEgbQdsIxSo0fWLWcxINAEbuDsPvMHJdIHNRc1rr5wgVHF\ncf7cLBsc0zeevtJV1H8u9AAhCzyJeNgTDGh2hhnI9M2vmJZNlt1/A/UF11AX4xAF\nKi79JuiUZtiOXrH7SO79stK0ZzyVXL5OXwEVcaSIS1QrOTWduSmEggNXVe4jXIot\ncMucOuDa332f3cxf5SGNyh1POjV0pz2EusNJvh8qh9DE+w/Qk6+7pmTmUd+gVKu7\no+CNVobamyX/EVixSObyD9wv49fC36M3hQEV75KG+sd+LTEJEkEmnGCob4SSjPun\nlnn2dpDI\n=pQEY\n-----END PGP SIGNATURE-----",
        "payload": "tree f70a63fa9144a720415528008c87011f78875859\nparent 119e97ae2d805fc29ef3744fff401ef289a19f8e\nauthor MarcoFalke <falke.marco@gmail.com> 1567096920 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1567510353 -0400\n\ndoc: ActivateBestChainStep return value\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa99efd054c57cd6717391f9ae8ce32b06986ff8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa99efd054c57cd6717391f9ae8ce32b06986ff8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa99efd054c57cd6717391f9ae8ce32b06986ff8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "119e97ae2d805fc29ef3744fff401ef289a19f8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/119e97ae2d805fc29ef3744fff401ef289a19f8e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/119e97ae2d805fc29ef3744fff401ef289a19f8e"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 10,
      "deletions": 2
    },
    "files": [
      {
        "sha": "57028fa669e70f2b8f7044ecb802c6c64d76828c",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa99efd054c57cd6717391f9ae8ce32b06986ff8/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa99efd054c57cd6717391f9ae8ce32b06986ff8/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fa99efd054c57cd6717391f9ae8ce32b06986ff8",
        "patch": "@@ -2472,6 +2472,8 @@ void CChainState::PruneBlockIndexCandidates() {\n /**\n  * Try to make some progress towards making pindexMostWork the active block.\n  * pblock is either nullptr or a pointer to a CBlock corresponding to pindexMostWork.\n+ *\n+ * @returns true unless a system error occurred\n  */\n bool CChainState::ActivateBestChainStep(CValidationState& state, const CChainParams& chainparams, CBlockIndex* pindexMostWork, const std::shared_ptr<const CBlock>& pblock, bool& fInvalidFound, ConnectTrace& connectTrace)\n {\n@@ -2598,6 +2600,8 @@ static void LimitValidationInterfaceQueue() LOCKS_EXCLUDED(cs_main) {\n  * ActivateBestChain is split into steps (see ActivateBestChainStep) so that\n  * we avoid holding cs_main for an extended period of time; the length of this\n  * call may be quite long during reindexing or a substantial reorg.\n+ *\n+ * @returns true unless a system error occurred\n  */\n bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams& chainparams, std::shared_ptr<const CBlock> pblock) {\n     // Note that while we're often called here from ProcessNewBlock, this is\n@@ -2646,8 +2650,10 @@ bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams&\n \n                 bool fInvalidFound = false;\n                 std::shared_ptr<const CBlock> nullBlockPtr;\n-                if (!ActivateBestChainStep(state, chainparams, pindexMostWork, pblock && pblock->GetHash() == pindexMostWork->GetBlockHash() ? pblock : nullBlockPtr, fInvalidFound, connectTrace))\n+                if (!ActivateBestChainStep(state, chainparams, pindexMostWork, pblock && pblock->GetHash() == pindexMostWork->GetBlockHash() ? pblock : nullBlockPtr, fInvalidFound, connectTrace)) {\n+                    // A system error occurred\n                     return false;\n+                }\n                 blocks_connected = true;\n \n                 if (fInvalidFound) {"
      },
      {
        "sha": "3b1109628236cc49b3f5706428f9decae98e3b5f",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa99efd054c57cd6717391f9ae8ce32b06986ff8/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa99efd054c57cd6717391f9ae8ce32b06986ff8/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=fa99efd054c57cd6717391f9ae8ce32b06986ff8",
        "patch": "@@ -211,7 +211,7 @@ static const uint64_t MIN_DISK_SPACE_FOR_BLOCK_FILES = 550 * 1024 * 1024;\n  * @param[in]   pblock  The block we want to process.\n  * @param[in]   fForceProcessing Process this block even if unrequested; used for non-network block sources and whitelisted peers.\n  * @param[out]  fNewBlock A boolean which is set to indicate if the block was first received via this call\n- * @return True if state.IsValid()\n+ * @returns     If the block was processed, independently of block validity\n  */\n bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool* fNewBlock) LOCKS_EXCLUDED(cs_main);\n \n@@ -653,6 +653,8 @@ class CChainState {\n      *\n      * If FlushStateMode::NONE is used, then FlushStateToDisk(...) won't do anything\n      * besides checking if we need to prune.\n+     *\n+     * @returns true unless a system error occurred\n      */\n     bool FlushStateToDisk(\n         const CChainParams& chainparams,"
      }
    ]
  },
  {
    "sha": "fa912a8ad5a94cd2bdc149400b1befb346621f03",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTkxMmE4YWQ1YTk0Y2QyYmRjMTQ5NDAwYjFiZWZiMzQ2NjIxZjAz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-09-10T12:50:16Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-09-10T12:48:23Z"
      },
      "message": "doc: move-only ActivateBestChain doxygen comment to header",
      "tree": {
        "sha": "80d492cd096ee565ba8a72207f1ef7c35e20d0b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80d492cd096ee565ba8a72207f1ef7c35e20d0b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa912a8ad5a94cd2bdc149400b1befb346621f03",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgVtgv/cpxHSRs4C5VC85fnuFCqgn+oe6fHumumc/h0xo/EPxOkqwHERBcZuFQ8\nGzcHsZM1dBT1e6hMdVipB7J/YuFgIPqt4kwGtxODDva3L1acWJwNpZEeHfibjftW\ngBgLOPMGMfe4yNz9dmTEzJUk/+/y87bBEiICbcPjgyp7kCMhOhPkw0iPDu6CsBXP\nUEa9hlwNJhoE8oYRAGyI72LTghNxFYKHEQSK9oi36hP7V6WvzthXcNKlWJdSBmJz\nukJWVsbzBKywAr/jSB/lNtuf0bfwv+C21AI03Tf4a89b86htIUCBAX2dC9qCNiuC\nbrzkgv1RF9vjQjcvg0F5HEz0r13VRSZSNEe3xF6EhfTw52GrHax0iVt2eGMtpFPL\nVly5VkjU6/wO4I86GXnklcXcQh64fEI00y8u759EyelPA7OIaJSxQHySzApgoEMK\nO9iJ19Xg7xVC0yNGnU9545uSZyOPPy0BvgklaZzE1NkZtuJqIJOWrJkFuxrzKOO6\ni8MeLtKr\n=l7j+\n-----END PGP SIGNATURE-----",
        "payload": "tree 80d492cd096ee565ba8a72207f1ef7c35e20d0b9\nparent fa99efd054c57cd6717391f9ae8ce32b06986ff8\nauthor MarcoFalke <falke.marco@gmail.com> 1568119816 +0300\ncommitter MarcoFalke <falke.marco@gmail.com> 1568119703 +0300\n\ndoc: move-only ActivateBestChain doxygen comment to header\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa912a8ad5a94cd2bdc149400b1befb346621f03",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa912a8ad5a94cd2bdc149400b1befb346621f03",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa912a8ad5a94cd2bdc149400b1befb346621f03/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa99efd054c57cd6717391f9ae8ce32b06986ff8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa99efd054c57cd6717391f9ae8ce32b06986ff8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa99efd054c57cd6717391f9ae8ce32b06986ff8"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 14,
      "deletions": 12
    },
    "files": [
      {
        "sha": "8b842553c6ea09bdb76855d7b91ea0e5baec27b6",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa912a8ad5a94cd2bdc149400b1befb346621f03/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa912a8ad5a94cd2bdc149400b1befb346621f03/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fa912a8ad5a94cd2bdc149400b1befb346621f03",
        "patch": "@@ -2592,17 +2592,6 @@ static void LimitValidationInterfaceQueue() LOCKS_EXCLUDED(cs_main) {\n     }\n }\n \n-/**\n- * Make the best chain active, in multiple steps. The result is either failure\n- * or an activated best chain. pblock is either nullptr or a pointer to a block\n- * that is already loaded (to avoid loading it again from disk).\n- *\n- * ActivateBestChain is split into steps (see ActivateBestChainStep) so that\n- * we avoid holding cs_main for an extended period of time; the length of this\n- * call may be quite long during reindexing or a substantial reorg.\n- *\n- * @returns true unless a system error occurred\n- */\n bool CChainState::ActivateBestChain(CValidationState &state, const CChainParams& chainparams, std::shared_ptr<const CBlock> pblock) {\n     // Note that while we're often called here from ProcessNewBlock, this is\n     // far from a guarantee. Things in the P2P/RPC will often end up calling"
      },
      {
        "sha": "06252b6bc8ccb2275af0964882b19a4071bf310c",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 14,
        "deletions": 1,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa912a8ad5a94cd2bdc149400b1befb346621f03/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa912a8ad5a94cd2bdc149400b1befb346621f03/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=fa912a8ad5a94cd2bdc149400b1befb346621f03",
        "patch": "@@ -669,7 +669,20 @@ class CChainState {\n     //! if we pruned.\n     void PruneAndFlush();\n \n-    bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams, std::shared_ptr<const CBlock> pblock) LOCKS_EXCLUDED(cs_main);\n+    /**\n+     * Make the best chain active, in multiple steps. The result is either failure\n+     * or an activated best chain. pblock is either nullptr or a pointer to a block\n+     * that is already loaded (to avoid loading it again from disk).\n+     *\n+     * ActivateBestChain is split into steps (see ActivateBestChainStep) so that\n+     * we avoid holding cs_main for an extended period of time; the length of this\n+     * call may be quite long during reindexing or a substantial reorg.\n+     *\n+     * @returns true unless a system error occurred\n+     */\n+    bool ActivateBestChain(CValidationState& state,\n+        const CChainParams& chainparams,\n+        std::shared_ptr<const CBlock> pblock) LOCKS_EXCLUDED(cs_main);\n \n     bool AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CValidationState& state, const CChainParams& chainparams, CBlockIndex** ppindex, bool fRequested, const FlatFilePos* dbp, bool* fNewBlock) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n "
      }
    ]
  }
]