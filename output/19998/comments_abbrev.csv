DrahtBot,2020-09-23 05:18:38,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20002 (net, rpc, cli: expose peer network in getpeerinfo; simplify/improve -netinfo by jonatack)\n* #19911 (net: guard vR",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-697139663,697139663,
practicalswift,2020-09-23 05:35:06,"Concept ACK\n\nNice! :)",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-697144220,697144220,
laanwj,2020-09-23 11:05:19,"Concept ACK\n\nWhat about a multiple-choice option that more generally specifies the network that the connection (comes in/goes out) through, instead of specializing it for Tor? Might want to have the same for I2P later, for example.\n\nAlso this should be 'onion' to be consistent with our other uses.\n",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-697292952,697292952,
hebasto,2020-09-23 11:21:41,"@laanwj \n> What about a multiple-choice option that more generally specifies the network that the connection (comes in/goes out) through, instead of specializing it for Tor? Might want to have the same for I2P later, for example.\n\nDo I understand you correctly that smth following is expected:\n```\n$ src/bitcoin-cli help getpeerinfo | grep network_type\n    ""network_type"" : clearnet|onion",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-697300466,697300466,
naumenkogs,2020-09-23 14:12:48,"Concept ACK.\nI agree with wladimir's suggestions.\n@hebasto I think your understanding is correct.",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-697419848,697419848,
jonatack,2020-09-23 14:21:03,"> Concept ACK\n> \n> What about a multiple-choice option that more generally specifies the network that the connection (comes in/goes out) through, instead of specializing it for Tor? Might want to have the same for I2P later, for example.\n> \n> Also this should be 'onion' to be consistent with our other uses.\n\nThis was the goal in #20002, which exposes the `GetNetClass()` index (allowing",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-697433454,697433454,
hebasto,2020-09-23 14:33:26,"@jonatack \n> This was the goal in #20002, which exposes the `GetNetClass()` index (allowing for a significant code simplification in -netinfo). Feedback welcome if it should also expose the network class name.\n\nWhat about limiting this PR to introducing `CNode::GetNetClass()` in addition to `CNetAddr::GetNetClass()` as the latter does not work for inbound connections via Tor?\n\nOr just dr",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-697453528,697453528,
jonatack,2020-09-23 16:03:29,"@hebasto after chatting offline, that makes sense, will look at building on your commit ""net: Add CNode::ConnectedViaTor() member function"".\n\nConcept ACK in any case, will test your inbound onions detection.",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-697602462,697602462,
hebasto,2020-09-23 16:09:33,"Updated fcd938e80abe634ccd0c0a289a8bdd339c186d24 -> 911a3f9929e2c10493c1ad525ad592dd6859df3f ([pr19998.02](https://github.com/hebasto/bitcoin/commits/pr19998.02) -> [pr19998.03](https://github.com/hebasto/bitcoin/commits/pr19998.03), [diff](https://github.com/hebasto/bitcoin/compare/pr19998.02..pr19998.03)):\n\n- dropped the last commit ""rpc: Add `via_tor` to `getpeerinfo` output"" in favor of mo",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-697612804,697612804,
laanwj,2020-09-30 09:02:03,"Haven't reveiewed the code, but conceptually, for future-readyness I'd prefer this to be called `ConnectedThroughNetwork` and return an enumeration instead of have a Tor-specific call one the API.\n\nEdit: oh, I suggested this before. Apparently I feel strongly about this :smile: .\n\n> $ src/bitcoin-cli help getpeerinfo | grep network_type\n>    ""network_type"" : clearnet|onion|I2P,        Ty",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-701261700,701261700,
jonatack,2020-09-30 10:07:14,"Yes, ATM returning an enum is delegated to the follow-up #20002, where the `Network` enum is returned using the existing `GetNetworkName()` function for the enum-to-string conversion. New networks like I2P and CJDNS can be added to that function when they are supported.\n\nFeel free to combine the two steps into one if that is better.",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-701295073,701295073,
hebasto,2020-09-30 18:13:52,"Updated 911a3f9929e2c10493c1ad525ad592dd6859df3f -> cf532ae5d68c2e35e73c793923398e01ee7bca7f ([pr19998.03](https://github.com/hebasto/bitcoin/commits/pr19998.03) -> [pr19998.06](https://github.com/hebasto/bitcoin/commits/pr19998.06)):\n\n- rebased on top of the recent #19991\n\n- addressed @laanwj's [comment](https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-701261700):\n\n> Haven't",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-701557196,701557196,
hebasto,2020-10-01 16:37:55,Updated cf532ae5d68c2e35e73c793923398e01ee7bca7f -> c972792511f764ff300602bd3c71df1fea90ddcc ([pr19998.06](https://github.com/hebasto/bitcoin/commits/pr19998.06) -> [pr19998.07](https://github.com/hebasto/bitcoin/commits/pr19998.07)) to the recent #19991.,https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-702257559,702257559,
Sjors,2020-10-01 18:25:10,"utACK c972792\n\nThis will be easier to test after #20002 is refreshed (don't forget to mention it in the description) \n\nThe asmap test failure on macOS Travis seems spurious (it passes on my machine)",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-702316618,702316618,
hebasto,2020-10-02 11:43:34,Updated c972792511f764ff300602bd3c71df1fea90ddcc -> ac0f4975fe00f2f72c408cbd6b642b29b0e2f8ce ([pr19998.07](https://github.com/hebasto/bitcoin/commits/pr19998.07) -> [pr19998.08](https://github.com/hebasto/bitcoin/commits/pr19998.08)) due to the conflict with #19991.,https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-702687034,702687034,
jonatack,2020-10-02 12:05:49,Do you plan to add test coverage for the changes here (and in #19991?),https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-702696905,702696905,
hebasto,2020-10-02 12:10:25,"@jonatack \n> Do you plan to add test coverage for the changes here (and in #19991?)\n\nI thought [your tests](https://github.com/bitcoin/bitcoin/pull/19991#issuecomment-702685460) could cover all aspects, right?",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-702698912,702698912,
jonatack,2020-10-02 12:39:49,@hebasto I don't plan to open a PR just for follow-up tests. I think it's easiest when the coverage accompanies the changes.,https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-702711137,702711137,
jonatack,2020-10-02 17:04:26,"Starting to see inbound onions while testing this on #20002 (Edit: WIP update now pushed if anyone wants to use it for testing).\n```text\n<-> relay   net mping   ping send recv  txn  blk uptime  asmap  id address\n in  full onion   358    469    0   90               49         35 127.0.0.1:43064\n in block onion   450    722   29  104               35         66 127.0.0.1:45118\n```\n\nThe",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-702848285,702848285,
hebasto,2020-10-03 09:45:11,Added test coverage.,https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-703077457,703077457,
hebasto,2020-10-03 11:40:27,"Updated 5fc8f155549b1ad39aeef1c3220ebd6026d7f845 -> 3989fcfb6713b074c6c6be143db3aaa33e50525a ([pr19998.10](https://github.com/hebasto/bitcoin/commits/pr19998.10) -> [pr19998.11](https://github.com/hebasto/bitcoin/commits/pr19998.11)):\n\n- addressed all of the recent @jonatack's comments\n- rebased to avoid a weird CI [error message](https://travis-ci.org/github/bitcoin/bitcoin/jobs/732481553)",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-703090033,703090033,
hebasto,2020-10-03 12:41:51,"Updated 3989fcfb6713b074c6c6be143db3aaa33e50525a -> 3984b78cd7f49e409377f2175a56e8e4bd71d1d8 ([pr19998.11](https://github.com/hebasto/bitcoin/commits/pr19998.11) -> [pr19998.12](https://github.com/hebasto/bitcoin/commits/pr19998.12), [diff](https://github.com/hebasto/bitcoin/compare/pr19998.11..pr19998.12)):\n\n- addressed @jonatack's [comment](https://github.com/bitcoin/bitcoin/pull/19998#discu",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-703097616,703097616,
jonatack,2020-10-03 13:12:42,"Thanks for your patience with the suggestions.\n\nre-ACK 3984b78cd7f49e409377f2175a56e8e4bd71d1d8 per `git diff 3989fcf 3984b78c`\n\nEdit: testing with #20002 (inbound onions detected server-side) vs on master (inbound onions detected client-side), I'm seeing the same ones detected.",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-703101654,703101654,
laanwj,2020-10-12 16:37:27,"Code review ACK 3984b78cd7f49e409377f2175a56e8e4bd71d1d8\nThanks for addressing my suggestion. And making `CNode::ConnectedThroughNetwork()` return a `Network` enum directly is a nice touch.",https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-707226178,707226178,
jonatack,2020-09-23 20:38:07,"```suggestion\n    if (IsInboundConn()) {\n```\n",https://github.com/bitcoin/bitcoin/pull/19998#discussion_r493880359,493880359,src/net.cpp
hebasto,2020-09-30 17:28:31,[Updated](https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-701533052).,https://github.com/bitcoin/bitcoin/pull/19998#discussion_r497682335,497682335,src/net.cpp
jonatack,2020-10-03 09:13:56,"- this documentation is good to provide but a bit succinct; maybe also describe what `m_onion_binds` is\n- could use the `/**` doxygen formatting like `m_try_another_outbound_peer` just above",https://github.com/bitcoin/bitcoin/pull/19998#discussion_r499131295,499131295,src/net.h
jonatack,2020-10-03 09:29:58,"optional style nit, could just simplify to a straight ternary\n```diff\n-    if (IsInboundConn() && m_inbound_onion) {\n-        return NET_ONION;\n-    }\n-    return addr.GetNetClass();\n+    return IsInboundConn() && m_inbound_onion ? NET_ONION : addr.GetNetClass();\n```\nor a one-line guard conditional\n```diff\n-    if (IsInboundConn() && m_inbound_onion) {\n-        return NET_ONI",https://github.com/bitcoin/bitcoin/pull/19998#discussion_r499132404,499132404,src/net.cpp
jonatack,2020-10-03 09:42:24,"Can you add a doxygen comment here? Maybe provide a quick context on the difference between this and `GetNetClass()` or why it's needed, for future readers of this code.",https://github.com/bitcoin/bitcoin/pull/19998#discussion_r499133251,499133251,src/net.h
hebasto,2020-10-03 09:51:23,[Developer Notes](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-doxygen-compatible-comments) suggest `//!` style to describe a member.,https://github.com/bitcoin/bitcoin/pull/19998#discussion_r499133876,499133876,src/net.h
jonatack,2020-10-03 10:26:35,"here and lines 206 and 215\n```suggestion\n    std::unique_ptr<CNode> pnode2 = MakeUnique<CNode>(id++, NODE_NETWORK, height, hSocket, addr, 1, 1, CAddress(), pszDest, ConnectionType::INBOUND, /* inbound_onion= */ false);\n```\ncould optionally also add `/*nKeyedNetGroupIn=*/ 1` and `/*nLocalHostNonceIn=*/ 1`",https://github.com/bitcoin/bitcoin/pull/19998#discussion_r499136130,499136130,src/test/net_tests.cpp
hebasto,2020-10-03 11:41:04,[Updated](https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-703090033).,https://github.com/bitcoin/bitcoin/pull/19998#discussion_r499140810,499140810,src/net.h
hebasto,2020-10-03 11:41:12,[Updated](https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-703090033).,https://github.com/bitcoin/bitcoin/pull/19998#discussion_r499140814,499140814,src/net.cpp
hebasto,2020-10-03 11:41:22,[Updated](https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-703090033).,https://github.com/bitcoin/bitcoin/pull/19998#discussion_r499140821,499140821,src/net.h
hebasto,2020-10-03 11:41:37,Thanks! [Updated](https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-703090033).,https://github.com/bitcoin/bitcoin/pull/19998#discussion_r499140828,499140828,src/test/net_tests.cpp
jonatack,2020-10-03 11:54:38,"It's much better. Perhaps:\n\n`Returns Network::NET_ONION for *inbound* onion connections that CNetAddr::GetNetClass() does not currently detect. Otherwise, returns CNetAddr::GetNetClass().`\n",https://github.com/bitcoin/bitcoin/pull/19998#discussion_r499141620,499141620,src/net.h
hebasto,2020-10-03 12:12:51,"It's for sure that my comment could be improved, but I don't think that it is a correct assumption that it's responsibility of `CNetAddr` class to detect the network a peer is connected through. I mean ""CNetAddr::GetNetClass() does not currently detect"" part.",https://github.com/bitcoin/bitcoin/pull/19998#discussion_r499142753,499142753,src/net.h
jonatack,2020-10-03 12:30:38,"Yes. That seems like a worthwhile clarification. Maybe something ~like:\n\n`Returns Network::NET_ONION for *inbound* onion connections, and CNetAddr::GetNetClass() otherwise. The latter cannot be used directly because it doesn't detect the former, and it's not the responsability of the CNetAddr class to know the actual network a peer is connected through.`",https://github.com/bitcoin/bitcoin/pull/19998#discussion_r499143917,499143917,src/net.h
hebasto,2020-10-03 12:42:19,Thanks! [Updated](https://github.com/bitcoin/bitcoin/pull/19998#issuecomment-703097616).,https://github.com/bitcoin/bitcoin/pull/19998#discussion_r499144704,499144704,src/net.h
