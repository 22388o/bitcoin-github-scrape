sipa,2017-07-16T18:57:50Z,utACK 2e737cf996336fbf74ceb56d3f105fd7fcc13a3b,https://github.com/bitcoin/bitcoin/pull/10843#issuecomment-315629434,315629434,
paveljanik,2017-07-17T08:56:23Z,ACK 2e737cf,https://github.com/bitcoin/bitcoin/pull/10843#issuecomment-315700123,315700123,
laanwj,2017-07-17T13:03:29Z,"The PR description mention 'functions' where this changes only one function. Is that intentional, or did you miss something while pushing?\n",https://github.com/bitcoin/bitcoin/pull/10843#issuecomment-315749239,315749239,
gmaxwell,2017-07-17T13:22:16Z,There were more before...,https://github.com/bitcoin/bitcoin/pull/10843#issuecomment-315753807,315753807,
practicalswift,2017-07-17T13:27:50Z,"@laanwj Yes, originally I aimed to add the `[[noreturn]]` attribute also to:\n* `BitcoinApplication::handleRunawayException(const QString &message)` (in `qt/bitcoin.cpp`)\n* `Shutdown()`/`StartShutdown()` (in `test/test_bitcoin_main.cpp`)\n\nBut I ran into some compilation issues that I didn't have time to follow up on, so I excluded them from this PR.",https://github.com/bitcoin/bitcoin/pull/10843#issuecomment-315755212,315755212,
practicalswift,2017-07-17T16:55:26Z,"I've now added the `[[noreturn]]` attribute to `Shutdown()`/`StartShutdown()` (in `test/test_bitcoin_main.cpp`).\n\nHowever, after some digging it appears that `[[noreturn]]` might not be correct for `BitcoinApplication::handleRunawayException(const QString &message)`. If I understand it correctly it calls [`QCoreApplication::exit(…)`](https://doc.qt.io/qt-5/qcoreapplication.html#exit) which *do",https://github.com/bitcoin/bitcoin/pull/10843#issuecomment-315813613,315813613,
laanwj,2017-07-17T18:12:16Z,">  If I understand it correctly it calls QCoreApplication::exit(…) which does return to the caller (it is event processing that stops).\n\nAgreed - if you're not 100% sure that a function doesn't return, it's much better to err on the safe side and not specify it. From experience, functions with noreturn returning can result in some awful things, which might even be security critical (but at the",https://github.com/bitcoin/bitcoin/pull/10843#issuecomment-315836030,315836030,
TheBlueMatt,2017-07-17T19:19:09Z,"@practicalswift I'm confused, then, BitcoinApplication::handleRunawayException ends by calling ::exit (the global exit, not QCoreApplication::exit, no?)?",https://github.com/bitcoin/bitcoin/pull/10843#issuecomment-315854536,315854536,
practicalswift,2017-07-17T23:48:07Z,"@TheBlueMatt You're absolutely right! I was wrong about `QCoreApplication::exit(…)` being called. Sorry :-)\n\nAfter applying 536504c8bef776902fa071dd76a37ef7037c1945 `make check` passes for all build configurations except `HOST=x86_64-apple-darwin11`, see https://travis-ci.org/bitcoin/bitcoin/builds/254651379. I don't understand why that is.\n\n",https://github.com/bitcoin/bitcoin/pull/10843#issuecomment-315917159,315917159,
theuni,2017-07-18T00:57:17Z,The attribute needs to be on the declaration rather than the definition.,https://github.com/bitcoin/bitcoin/pull/10843#issuecomment-315927119,315927119,
practicalswift,2017-07-18T03:58:00Z,"@theuni Yes, I thought so but when applying d52e345a6e7526f516425b7547dbca534a884172 I got the parsing error `qt/bitcoin.cpp:[…]: Parse error at "";""` for all Qt-enabled builds, see https://travis-ci.org/bitcoin/bitcoin/jobs/254702626#L2290.\n\n```\n$ make V=1\n[…]\nQT_SELECT=qt5 /usr/lib/x86_64-linux-gnu/qt5/bin/moc -I. -I../src/config -I/usr/include/x86_64-linux-gnu/qt5/QtNetwork -I/usr/incl",https://github.com/bitcoin/bitcoin/pull/10843#issuecomment-315951359,315951359,
practicalswift,2017-07-18T15:13:02Z,"I've now excluded the commit touching `handleRunawayException(…)` (`src/qt/bitcoin.cpp`). Qt's `moc` is doing too much stuff behind the scenes for me to be comfortable doing that change :-)\n\nThis PR should now be ready for review.",https://github.com/bitcoin/bitcoin/pull/10843#issuecomment-316096132,316096132,
TheBlueMatt,2017-07-19T20:47:44Z,utACK b82c55af78738258b56bd8fe7b5f8d5ccf85f832,https://github.com/bitcoin/bitcoin/pull/10843#issuecomment-316512304,316512304,
TheBlueMatt,2017-07-16T18:39:06Z,Maybe change this to std::abort() so that its clearer that we're really [[noreturn]]ing?,https://github.com/bitcoin/bitcoin/pull/10843#discussion_r127613673,127613673,src/random.cpp
practicalswift,2017-07-16T18:54:32Z,Good point! Fixed! :-),https://github.com/bitcoin/bitcoin/pull/10843#discussion_r127613968,127613968,src/random.cpp
TheBlueMatt,2017-07-17T15:11:53Z,std::exit?,https://github.com/bitcoin/bitcoin/pull/10843#discussion_r127735704,127735704,src/qt/bitcoin.cpp
