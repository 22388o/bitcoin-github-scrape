[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575411753",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17944#issuecomment-575411753",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17944",
    "id": 575411753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTQxMTc1Mw==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-17T00:32:48Z",
    "updated_at": "2020-01-17T00:32:48Z",
    "author_association": "MEMBER",
    "body": "cc @EthanHeilman ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575411753/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631800540",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17944#issuecomment-631800540",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17944",
    "id": 631800540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTgwMDU0MA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-21T00:03:25Z",
    "updated_at": "2021-01-22T16:56:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/631800540/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/633669856",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17944#issuecomment-633669856",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17944",
    "id": 633669856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzY2OTg1Ng==",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?u=a30a777c2bbc67ca0edc534f6676bb0506b4c1d4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-25T17:59:11Z",
    "updated_at": "2020-05-25T17:59:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "This cleanup looks very helpful! I organized the old reachability logic flow in this table (vertically listed are our networks), and it looks like the handling for Teredo is changed. The bolded grid values are now all changed to REACH_DEFAULT in the simplified logic. Is this the intended effect of \r\n\r\n> In particular, we would prefer advertising our IPv4 services\r\n> for peers on Toredo, which would most likely just result in us sending\r\n> packets to their Toredo provider.\r\n\r\n?\r\n\r\n\u00a0 | IPv4 | IPv6 | Onion | Teredo | Unknown | Unroutable\r\n-- | -- | -- | -- | -- | -- | --\r\nIPv4 | REACH_IPV4 | REACH_IPV4 | **REACH_IPV4** | REACH_IPV4 | REACH_IPV4 | REACH_IPV4\r\nIPv6 | REACH_DEFAULT | REACH_IPV6 WEAK/STRONG | REACH_DEFAULT | REACH_IPV6_WEAK | REACH_IPV6_WEAK | REACH_IPV6_WEAK\r\nOnion | REACH_DEFAULT | REACH_DEFAULT | **REACH_PRIVATE** | REACH_DEFAULT | REACH_PRIVATE | REACH_PRIVATE\r\nTeredo | REACH_DEFAULT | **REACH_TEREDO** | REACH_DEFAULT | **REACH_TEREDO** | **REACH_TEREDO** | **REACH_TEREDO**\r\n\r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/633669856/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/765638526",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17944#issuecomment-765638526",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17944",
    "id": 765638526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTYzODUyNg==",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?u=62e3204f6586795420395a7059ec7dc7c4a40c7d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-22T19:34:17Z",
    "updated_at": "2021-01-22T19:34:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not going to work on this in the immediate future, closing",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/765638526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369183147",
    "pull_request_review_id": 346113931,
    "id": 369183147,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE4MzE0Nw==",
    "diff_hunk": "@@ -494,76 +494,46 @@ uint64_t CNetAddr::GetHash() const\n     return nRet;\n }\n \n-// private extensions to enum Network, only returned by GetExtNetwork,\n-// and only used in GetReachabilityFrom\n-static const int NET_UNKNOWN = NET_MAX + 0;\n-static const int NET_TEREDO  = NET_MAX + 1;\n-int static GetExtNetwork(const CNetAddr *addr)\n-{\n-    if (addr == nullptr)\n-        return NET_UNKNOWN;\n-    if (addr->IsRFC4380())\n-        return NET_TEREDO;\n-    return addr->GetNetwork();\n-}\n+// private extension to enum Network, only returned by GetExtNetwork, and only\n+// used in GetReachabilityFrom\n+#define NET_UNKNOWN NET_MAX\n \n /** Calculates a metric for how reachable (*this) is from a given partner */\n int CNetAddr::GetReachabilityFrom(const CNetAddr *paddrPartner) const\n {\n     enum Reachability {\n         REACH_UNREACHABLE,\n         REACH_DEFAULT,\n-        REACH_TEREDO,\n-        REACH_IPV6_WEAK,\n         REACH_IPV4,\n-        REACH_IPV6_STRONG,\n+        REACH_IPV6,\n         REACH_PRIVATE\n     };\n \n     if (!IsRoutable() || IsInternal())\n         return REACH_UNREACHABLE;\n \n-    int ourNet = GetExtNetwork(this);\n-    int theirNet = GetExtNetwork(paddrPartner);\n-    bool fTunnel = IsRFC3964() || IsRFC6052() || IsRFC6145();\n+    int ourNet = GetNetwork();\n+    int theirNet = paddrPartner == nullptr ? NET_UNKNOWN : paddrPartner->GetNetwork();\n \n-    switch(theirNet) {\n+    switch(ourNet) {\n     case NET_IPV4:\n-        switch(ourNet) {\n-        default:       return REACH_DEFAULT;\n-        case NET_IPV4: return REACH_IPV4;\n-        }\n+        return REACH_IPV4;\n     case NET_IPV6:\n-        switch(ourNet) {\n-        default:         return REACH_DEFAULT;\n-        case NET_TEREDO: return REACH_TEREDO;\n-        case NET_IPV4:   return REACH_IPV4;\n-        case NET_IPV6:   return fTunnel ? REACH_IPV6_WEAK : REACH_IPV6_STRONG; // only prefer giving our IPv6 address if it's not tunnelled",
    "path": "src/netaddress.cpp",
    "position": 56,
    "original_position": 56,
    "commit_id": "2120989b9cdc3cc4e132183f4fdb2124b8a90141",
    "original_commit_id": "2120989b9cdc3cc4e132183f4fdb2124b8a90141",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Isn't the bias to favor IPv4 announcement over IPv6-tunneled lost with the change ? It may make connection relying on 6to4 routers less reliable..",
    "created_at": "2020-01-21T18:56:57Z",
    "updated_at": "2020-01-21T19:17:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17944#discussion_r369183147",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17944",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369183147"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17944#discussion_r369183147"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17944"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369183147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 541,
    "original_line": 541,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369191513",
    "pull_request_review_id": 346113931,
    "id": 369191513,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE5MTUxMw==",
    "diff_hunk": "@@ -494,76 +494,46 @@ uint64_t CNetAddr::GetHash() const\n     return nRet;\n }\n \n-// private extensions to enum Network, only returned by GetExtNetwork,\n-// and only used in GetReachabilityFrom\n-static const int NET_UNKNOWN = NET_MAX + 0;\n-static const int NET_TEREDO  = NET_MAX + 1;\n-int static GetExtNetwork(const CNetAddr *addr)\n-{\n-    if (addr == nullptr)\n-        return NET_UNKNOWN;\n-    if (addr->IsRFC4380())\n-        return NET_TEREDO;\n-    return addr->GetNetwork();\n-}\n+// private extension to enum Network, only returned by GetExtNetwork, and only\n+// used in GetReachabilityFrom\n+#define NET_UNKNOWN NET_MAX\n \n /** Calculates a metric for how reachable (*this) is from a given partner */\n int CNetAddr::GetReachabilityFrom(const CNetAddr *paddrPartner) const\n {\n     enum Reachability {\n         REACH_UNREACHABLE,\n         REACH_DEFAULT,\n-        REACH_TEREDO,\n-        REACH_IPV6_WEAK,\n         REACH_IPV4,\n-        REACH_IPV6_STRONG,\n+        REACH_IPV6,\n         REACH_PRIVATE\n     };\n \n     if (!IsRoutable() || IsInternal())\n         return REACH_UNREACHABLE;\n \n-    int ourNet = GetExtNetwork(this);\n-    int theirNet = GetExtNetwork(paddrPartner);\n-    bool fTunnel = IsRFC3964() || IsRFC6052() || IsRFC6145();\n+    int ourNet = GetNetwork();",
    "path": "src/netaddress.cpp",
    "position": 40,
    "original_position": 40,
    "commit_id": "2120989b9cdc3cc4e132183f4fdb2124b8a90141",
    "original_commit_id": "2120989b9cdc3cc4e132183f4fdb2124b8a90141",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If ourNet is `nullptr` you will now mark its reachability to NET_IPV6 which may be the highest-scored one and announce this one (but can we have null entries in mapLocalHost anyway ?)",
    "created_at": "2020-01-21T19:14:31Z",
    "updated_at": "2020-01-21T19:17:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17944#discussion_r369191513",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17944",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369191513"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17944#discussion_r369191513"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17944"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/369191513/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 515,
    "original_line": 515,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370337904",
    "pull_request_review_id": 347585655,
    "id": 370337904,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMzNzkwNA==",
    "diff_hunk": "@@ -494,76 +494,46 @@ uint64_t CNetAddr::GetHash() const\n     return nRet;\n }\n \n-// private extensions to enum Network, only returned by GetExtNetwork,\n-// and only used in GetReachabilityFrom\n-static const int NET_UNKNOWN = NET_MAX + 0;\n-static const int NET_TEREDO  = NET_MAX + 1;\n-int static GetExtNetwork(const CNetAddr *addr)\n-{\n-    if (addr == nullptr)\n-        return NET_UNKNOWN;\n-    if (addr->IsRFC4380())\n-        return NET_TEREDO;\n-    return addr->GetNetwork();\n-}\n+// private extension to enum Network, only returned by GetExtNetwork, and only\n+// used in GetReachabilityFrom\n+#define NET_UNKNOWN NET_MAX\n \n /** Calculates a metric for how reachable (*this) is from a given partner */\n int CNetAddr::GetReachabilityFrom(const CNetAddr *paddrPartner) const\n {\n     enum Reachability {\n         REACH_UNREACHABLE,\n         REACH_DEFAULT,\n-        REACH_TEREDO,\n-        REACH_IPV6_WEAK,\n         REACH_IPV4,\n-        REACH_IPV6_STRONG,\n+        REACH_IPV6,\n         REACH_PRIVATE\n     };\n \n     if (!IsRoutable() || IsInternal())\n         return REACH_UNREACHABLE;\n \n-    int ourNet = GetExtNetwork(this);\n-    int theirNet = GetExtNetwork(paddrPartner);\n-    bool fTunnel = IsRFC3964() || IsRFC6052() || IsRFC6145();\n+    int ourNet = GetNetwork();",
    "path": "src/netaddress.cpp",
    "position": 40,
    "original_position": 40,
    "commit_id": "2120989b9cdc3cc4e132183f4fdb2124b8a90141",
    "original_commit_id": "2120989b9cdc3cc4e132183f4fdb2124b8a90141",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Perhaps I don't understand C++ well enough but from my understanding, `this` cannot be `nullptr`?",
    "created_at": "2020-01-23T20:28:12Z",
    "updated_at": "2020-01-23T20:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17944#discussion_r370337904",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17944",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370337904"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17944#discussion_r370337904"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17944"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370337904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 515,
    "original_line": 515,
    "side": "RIGHT",
    "in_reply_to_id": 369191513
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370338770",
    "pull_request_review_id": 347586781,
    "id": 370338770,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMzODc3MA==",
    "diff_hunk": "@@ -494,76 +494,46 @@ uint64_t CNetAddr::GetHash() const\n     return nRet;\n }\n \n-// private extensions to enum Network, only returned by GetExtNetwork,\n-// and only used in GetReachabilityFrom\n-static const int NET_UNKNOWN = NET_MAX + 0;\n-static const int NET_TEREDO  = NET_MAX + 1;\n-int static GetExtNetwork(const CNetAddr *addr)\n-{\n-    if (addr == nullptr)\n-        return NET_UNKNOWN;\n-    if (addr->IsRFC4380())\n-        return NET_TEREDO;\n-    return addr->GetNetwork();\n-}\n+// private extension to enum Network, only returned by GetExtNetwork, and only\n+// used in GetReachabilityFrom\n+#define NET_UNKNOWN NET_MAX\n \n /** Calculates a metric for how reachable (*this) is from a given partner */\n int CNetAddr::GetReachabilityFrom(const CNetAddr *paddrPartner) const\n {\n     enum Reachability {\n         REACH_UNREACHABLE,\n         REACH_DEFAULT,\n-        REACH_TEREDO,\n-        REACH_IPV6_WEAK,\n         REACH_IPV4,\n-        REACH_IPV6_STRONG,\n+        REACH_IPV6,\n         REACH_PRIVATE\n     };\n \n     if (!IsRoutable() || IsInternal())\n         return REACH_UNREACHABLE;\n \n-    int ourNet = GetExtNetwork(this);\n-    int theirNet = GetExtNetwork(paddrPartner);\n-    bool fTunnel = IsRFC3964() || IsRFC6052() || IsRFC6145();\n+    int ourNet = GetNetwork();\n+    int theirNet = paddrPartner == nullptr ? NET_UNKNOWN : paddrPartner->GetNetwork();\n \n-    switch(theirNet) {\n+    switch(ourNet) {\n     case NET_IPV4:\n-        switch(ourNet) {\n-        default:       return REACH_DEFAULT;\n-        case NET_IPV4: return REACH_IPV4;\n-        }\n+        return REACH_IPV4;\n     case NET_IPV6:\n-        switch(ourNet) {\n-        default:         return REACH_DEFAULT;\n-        case NET_TEREDO: return REACH_TEREDO;\n-        case NET_IPV4:   return REACH_IPV4;\n-        case NET_IPV6:   return fTunnel ? REACH_IPV6_WEAK : REACH_IPV6_STRONG; // only prefer giving our IPv6 address if it's not tunnelled",
    "path": "src/netaddress.cpp",
    "position": 56,
    "original_position": 56,
    "commit_id": "2120989b9cdc3cc4e132183f4fdb2124b8a90141",
    "original_commit_id": "2120989b9cdc3cc4e132183f4fdb2124b8a90141",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, I think we don't want to favor IPv4 over IPv6-tunneled, because it might be the case that the only connection they have is thru IPv6-tunneled.",
    "created_at": "2020-01-23T20:30:09Z",
    "updated_at": "2020-01-23T20:30:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17944#discussion_r370338770",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17944",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370338770"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17944#discussion_r370338770"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17944"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370338770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 541,
    "original_line": 541,
    "side": "LEFT",
    "in_reply_to_id": 369183147
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370344620",
    "pull_request_review_id": 347594429,
    "id": 370344620,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM0NDYyMA==",
    "diff_hunk": "@@ -494,76 +494,46 @@ uint64_t CNetAddr::GetHash() const\n     return nRet;\n }\n \n-// private extensions to enum Network, only returned by GetExtNetwork,\n-// and only used in GetReachabilityFrom\n-static const int NET_UNKNOWN = NET_MAX + 0;\n-static const int NET_TEREDO  = NET_MAX + 1;\n-int static GetExtNetwork(const CNetAddr *addr)\n-{\n-    if (addr == nullptr)\n-        return NET_UNKNOWN;\n-    if (addr->IsRFC4380())\n-        return NET_TEREDO;\n-    return addr->GetNetwork();\n-}\n+// private extension to enum Network, only returned by GetExtNetwork, and only\n+// used in GetReachabilityFrom\n+#define NET_UNKNOWN NET_MAX\n \n /** Calculates a metric for how reachable (*this) is from a given partner */\n int CNetAddr::GetReachabilityFrom(const CNetAddr *paddrPartner) const\n {\n     enum Reachability {\n         REACH_UNREACHABLE,\n         REACH_DEFAULT,\n-        REACH_TEREDO,\n-        REACH_IPV6_WEAK,\n         REACH_IPV4,\n-        REACH_IPV6_STRONG,\n+        REACH_IPV6,\n         REACH_PRIVATE\n     };\n \n     if (!IsRoutable() || IsInternal())\n         return REACH_UNREACHABLE;\n \n-    int ourNet = GetExtNetwork(this);\n-    int theirNet = GetExtNetwork(paddrPartner);\n-    bool fTunnel = IsRFC3964() || IsRFC6052() || IsRFC6145();\n+    int ourNet = GetNetwork();",
    "path": "src/netaddress.cpp",
    "position": 40,
    "original_position": 40,
    "commit_id": "2120989b9cdc3cc4e132183f4fdb2124b8a90141",
    "original_commit_id": "2120989b9cdc3cc4e132183f4fdb2124b8a90141",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`this` cannot be `nullptr`, because if it was, you're invoking a member of `nullptr` which is UB.",
    "created_at": "2020-01-23T20:44:19Z",
    "updated_at": "2020-01-23T20:44:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17944#discussion_r370344620",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17944",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370344620"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17944#discussion_r370344620"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17944"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370344620/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 515,
    "original_line": 515,
    "side": "RIGHT",
    "in_reply_to_id": 369191513
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379185039",
    "pull_request_review_id": 358634464,
    "id": 379185039,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE4NTAzOQ==",
    "diff_hunk": "@@ -494,76 +494,46 @@ uint64_t CNetAddr::GetHash() const\n     return nRet;\n }\n \n-// private extensions to enum Network, only returned by GetExtNetwork,\n-// and only used in GetReachabilityFrom\n-static const int NET_UNKNOWN = NET_MAX + 0;\n-static const int NET_TEREDO  = NET_MAX + 1;\n-int static GetExtNetwork(const CNetAddr *addr)\n-{\n-    if (addr == nullptr)\n-        return NET_UNKNOWN;\n-    if (addr->IsRFC4380())\n-        return NET_TEREDO;\n-    return addr->GetNetwork();\n-}\n+// private extension to enum Network, only returned by GetExtNetwork, and only\n+// used in GetReachabilityFrom\n+#define NET_UNKNOWN NET_MAX\n \n /** Calculates a metric for how reachable (*this) is from a given partner */\n int CNetAddr::GetReachabilityFrom(const CNetAddr *paddrPartner) const\n {\n     enum Reachability {\n         REACH_UNREACHABLE,\n         REACH_DEFAULT,\n-        REACH_TEREDO,\n-        REACH_IPV6_WEAK,\n         REACH_IPV4,\n-        REACH_IPV6_STRONG,\n+        REACH_IPV6,\n         REACH_PRIVATE\n     };\n \n     if (!IsRoutable() || IsInternal())\n         return REACH_UNREACHABLE;\n \n-    int ourNet = GetExtNetwork(this);\n-    int theirNet = GetExtNetwork(paddrPartner);\n-    bool fTunnel = IsRFC3964() || IsRFC6052() || IsRFC6145();\n+    int ourNet = GetNetwork();\n+    int theirNet = paddrPartner == nullptr ? NET_UNKNOWN : paddrPartner->GetNetwork();\n \n-    switch(theirNet) {\n+    switch(ourNet) {\n     case NET_IPV4:\n-        switch(ourNet) {\n-        default:       return REACH_DEFAULT;\n-        case NET_IPV4: return REACH_IPV4;\n-        }\n+        return REACH_IPV4;\n     case NET_IPV6:\n-        switch(ourNet) {\n-        default:         return REACH_DEFAULT;\n-        case NET_TEREDO: return REACH_TEREDO;\n-        case NET_IPV4:   return REACH_IPV4;\n-        case NET_IPV6:   return fTunnel ? REACH_IPV6_WEAK : REACH_IPV6_STRONG; // only prefer giving our IPv6 address if it's not tunnelled",
    "path": "src/netaddress.cpp",
    "position": 56,
    "original_position": 56,
    "commit_id": "2120989b9cdc3cc4e132183f4fdb2124b8a90141",
    "original_commit_id": "2120989b9cdc3cc4e132183f4fdb2124b8a90141",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Okay to be clear we do want to favor connection through IPv6-tunneled, this is behavior change. Maybe code should be better documented but I think commit description is right \"IPv6 peers can reach through IPV6\"",
    "created_at": "2020-02-13T23:55:36Z",
    "updated_at": "2020-02-13T23:55:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17944#discussion_r379185039",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17944",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379185039"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17944#discussion_r379185039"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17944"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379185039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 541,
    "original_line": 541,
    "side": "LEFT",
    "in_reply_to_id": 369183147
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430034784",
    "pull_request_review_id": 417830428,
    "id": 430034784,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzNDc4NA==",
    "diff_hunk": "@@ -494,76 +494,46 @@ uint64_t CNetAddr::GetHash() const\n     return nRet;\n }\n \n-// private extensions to enum Network, only returned by GetExtNetwork,\n-// and only used in GetReachabilityFrom\n-static const int NET_UNKNOWN = NET_MAX + 0;\n-static const int NET_TEREDO  = NET_MAX + 1;\n-int static GetExtNetwork(const CNetAddr *addr)\n-{\n-    if (addr == nullptr)\n-        return NET_UNKNOWN;\n-    if (addr->IsRFC4380())\n-        return NET_TEREDO;\n-    return addr->GetNetwork();\n-}\n+// private extension to enum Network, only returned by GetExtNetwork, and only\n+// used in GetReachabilityFrom\n+#define NET_UNKNOWN NET_MAX\n \n /** Calculates a metric for how reachable (*this) is from a given partner */\n int CNetAddr::GetReachabilityFrom(const CNetAddr *paddrPartner) const\n {\n     enum Reachability {\n         REACH_UNREACHABLE,\n         REACH_DEFAULT,\n-        REACH_TEREDO,\n-        REACH_IPV6_WEAK,\n         REACH_IPV4,\n-        REACH_IPV6_STRONG,\n+        REACH_IPV6,",
    "path": "src/netaddress.cpp",
    "position": 30,
    "original_position": 30,
    "commit_id": "2120989b9cdc3cc4e132183f4fdb2124b8a90141",
    "original_commit_id": "2120989b9cdc3cc4e132183f4fdb2124b8a90141",
    "user": {
      "login": "glowang",
      "id": 38899812,
      "node_id": "MDQ6VXNlcjM4ODk5ODEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/38899812?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glowang",
      "html_url": "https://github.com/glowang",
      "followers_url": "https://api.github.com/users/glowang/followers",
      "following_url": "https://api.github.com/users/glowang/following{/other_user}",
      "gists_url": "https://api.github.com/users/glowang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glowang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glowang/subscriptions",
      "organizations_url": "https://api.github.com/users/glowang/orgs",
      "repos_url": "https://api.github.com/users/glowang/repos",
      "events_url": "https://api.github.com/users/glowang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glowang/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could you provide some reasoning behind merging IPv6 WEAK and STRONG into one case? ",
    "created_at": "2020-05-25T18:00:05Z",
    "updated_at": "2020-05-25T18:00:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17944#discussion_r430034784",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17944",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430034784"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/17944#discussion_r430034784"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17944"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/430034784/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 508,
    "original_line": 508,
    "side": "RIGHT"
  }
]