[
  {
    "sha": "cfc412ab292cced1347997a085e9bb4526559933",
    "node_id": "C_kwDOABII59oAKGNmYzQxMmFiMjkyY2NlZDEzNDc5OTdhMDg1ZTliYjQ1MjY1NTk5MzM",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-04-27T20:57:39Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-09-29T18:23:27Z"
      },
      "message": "qt: Add Create Unsigned button to SendConfirmationDialog\n\nInstead of having different buttons or changing button behavior for\nmaking a PSBT, just have SendConfirmationDialog return whether the user\nwants a PSBT or a broadcasted transaction. Since this dialog is used\nby both the bumpFeeAction and the SendCoinsDialog, changes to both\nto support the different behavior is needed. They will check\nthe return value of the SendConfirmationDialog for whether a PSBT\nneeds to be created instead of checking whether private keys are\ndisabled.\n\nStrings used in this dialog are being slightly modified to work with\nboth private keys enabled and disabled wallets.",
      "tree": {
        "sha": "1a7aad5edecf1c066f729973b9c00c202c8bae4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a7aad5edecf1c066f729973b9c00c202c8bae4c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cfc412ab292cced1347997a085e9bb4526559933",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfc412ab292cced1347997a085e9bb4526559933",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cfc412ab292cced1347997a085e9bb4526559933",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfc412ab292cced1347997a085e9bb4526559933/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "419afa93419e6840f78cb94b4a39d826eb10e139",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/419afa93419e6840f78cb94b4a39d826eb10e139",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/419afa93419e6840f78cb94b4a39d826eb10e139"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 36,
      "deletions": 28
    },
    "files": [
      {
        "sha": "172b7513d1b9b38edfe3df0c30e0f998b2c4cb4f",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 20,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfc412ab292cced1347997a085e9bb4526559933/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfc412ab292cced1347997a085e9bb4526559933/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=cfc412ab292cced1347997a085e9bb4526559933",
        "patch": "@@ -324,13 +324,10 @@ bool SendCoinsDialog::PrepareSendText(QString& question_string, QString& informa\n         formatted.append(recipientElement);\n     }\n \n-    if (model->wallet().privateKeysDisabled() && !model->wallet().hasExternalSigner()) {\n-        question_string.append(tr(\"Do you want to draft this transaction?\"));\n-    } else {\n-        question_string.append(tr(\"Are you sure you want to send?\"));\n-    }\n-\n     question_string.append(\"<br /><span style='font-size:10pt;'>\");\n+    /*: Message displayed when attempting to create a transaction. Cautionary text to prompt the user to verify\n+        that the displayed transaction details represent the transaction the user intends to create. */\n+    question_string.append(tr(\"Do you want to create this transaction?\"));\n     if (model->wallet().privateKeysDisabled() && !model->wallet().hasExternalSigner()) {\n         question_string.append(tr(\"Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can save or copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.\").arg(PACKAGE_NAME));\n     } else {\n@@ -397,20 +394,21 @@ void SendCoinsDialog::sendButtonClicked([[maybe_unused]] bool checked)\n     if (!PrepareSendText(question_string, informative_text, detailed_text)) return;\n     assert(m_current_transaction);\n \n-    const QString confirmation = model->wallet().privateKeysDisabled() && !model->wallet().hasExternalSigner() ? tr(\"Confirm transaction proposal\") : tr(\"Confirm send coins\");\n-    const QString confirmButtonText = model->wallet().privateKeysDisabled() && !model->wallet().hasExternalSigner() ? tr(\"Create Unsigned\") : tr(\"Sign and send\");\n-    SendConfirmationDialog confirmationDialog(confirmation, question_string, informative_text, detailed_text, SEND_CONFIRM_DELAY, confirmButtonText, this);\n+    const QString confirmation = tr(\"Confirm send coins\");\n+    const QString confirmButtonText = tr(\"Send\");\n+    const QString psbt_button_text = tr(\"Create Unsigned\");\n+    SendConfirmationDialog confirmationDialog(confirmation, question_string, informative_text, detailed_text, SEND_CONFIRM_DELAY, confirmButtonText, !model->wallet().privateKeysDisabled(), psbt_button_text, this);\n     confirmationDialog.exec();\n     QMessageBox::StandardButton retval = static_cast<QMessageBox::StandardButton>(confirmationDialog.result());\n \n-    if(retval != QMessageBox::Yes)\n+    if(retval != QMessageBox::Yes && retval != QMessageBox::Save)\n     {\n         fNewRecipientAllowed = true;\n         return;\n     }\n \n     bool send_failure = false;\n-    if (model->wallet().privateKeysDisabled()) {\n+    if (retval == QMessageBox::Save) {\n         CMutableTransaction mtx = CMutableTransaction{*(m_current_transaction->getWtx())};\n         PartiallySignedTransaction psbtx(mtx);\n         bool complete = false;\n@@ -511,6 +509,7 @@ void SendCoinsDialog::sendButtonClicked([[maybe_unused]] bool checked)\n             assert(false);\n         } // msgBox.exec()\n     } else {\n+        assert(!model->wallet().privateKeysDisabled());\n         // now send the prepared transaction\n         WalletModel::SendCoinsReturn sendStatus = model->sendCoins(*m_current_transaction);\n         // process sendStatus and on error generate message shown to user\n@@ -1030,52 +1029,57 @@ void SendCoinsDialog::coinControlUpdateLabels()\n     }\n }\n \n-SendConfirmationDialog::SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text, const QString& detailed_text, int _secDelay, const QString& _confirmButtonText, QWidget* parent)\n-    : QMessageBox(parent), secDelay(_secDelay), confirmButtonText(_confirmButtonText)\n+SendConfirmationDialog::SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text, const QString& detailed_text, int _secDelay, const QString& _confirmButtonText, bool enable_send, const QString& psbt_button_text, QWidget* parent)\n+    : QMessageBox(parent), secDelay(_secDelay), confirmButtonText(_confirmButtonText), m_enable_send(enable_send), m_psbt_button_text(psbt_button_text)\n {\n     setIcon(QMessageBox::Question);\n     setWindowTitle(title); // On macOS, the window title is ignored (as required by the macOS Guidelines).\n     setText(text);\n     setInformativeText(informative_text);\n     setDetailedText(detailed_text);\n-    setStandardButtons(QMessageBox::Yes | QMessageBox::Cancel);\n+    setStandardButtons(QMessageBox::Save | QMessageBox::Yes | QMessageBox::Cancel);\n     setDefaultButton(QMessageBox::Cancel);\n     yesButton = button(QMessageBox::Yes);\n     if (confirmButtonText.isEmpty()) {\n         confirmButtonText = yesButton->text();\n     }\n-    updateYesButton();\n+    m_psbt_button = button(QMessageBox::Save);\n+    updateButtons();\n     connect(&countDownTimer, &QTimer::timeout, this, &SendConfirmationDialog::countDown);\n }\n \n int SendConfirmationDialog::exec()\n {\n-    updateYesButton();\n+    updateButtons();\n     countDownTimer.start(1000);\n     return QMessageBox::exec();\n }\n \n void SendConfirmationDialog::countDown()\n {\n     secDelay--;\n-    updateYesButton();\n+    updateButtons();\n \n     if(secDelay <= 0)\n     {\n         countDownTimer.stop();\n     }\n }\n \n-void SendConfirmationDialog::updateYesButton()\n+void SendConfirmationDialog::updateButtons()\n {\n     if(secDelay > 0)\n     {\n         yesButton->setEnabled(false);\n-        yesButton->setText(confirmButtonText + \" (\" + QString::number(secDelay) + \")\");\n+        yesButton->setText(confirmButtonText + (m_enable_send ? (\" (\" + QString::number(secDelay) + \")\") : QString(\"\")));\n+        m_psbt_button->setEnabled(false);\n+        m_psbt_button->setText(m_psbt_button_text + \" (\" + QString::number(secDelay) + \")\");\n     }\n     else\n     {\n-        yesButton->setEnabled(true);\n+        yesButton->setEnabled(m_enable_send);\n         yesButton->setText(confirmButtonText);\n+        m_psbt_button->setEnabled(true);\n+        m_psbt_button->setText(m_psbt_button_text);\n     }\n }"
      },
      {
        "sha": "7a1294fb236acd89fe00bc70d681dc7e64fae175",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfc412ab292cced1347997a085e9bb4526559933/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfc412ab292cced1347997a085e9bb4526559933/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=cfc412ab292cced1347997a085e9bb4526559933",
        "patch": "@@ -114,18 +114,21 @@ class SendConfirmationDialog : public QMessageBox\n     Q_OBJECT\n \n public:\n-    SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text = \"\", const QString& detailed_text = \"\", int secDelay = SEND_CONFIRM_DELAY, const QString& confirmText = \"\", QWidget* parent = nullptr);\n+    SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text = \"\", const QString& detailed_text = \"\", int secDelay = SEND_CONFIRM_DELAY, const QString& confirmText = \"\", bool enable_send = true, const QString& psbt_text = \"Create Unsigned\", QWidget* parent = nullptr);\n     int exec() override;\n \n private Q_SLOTS:\n     void countDown();\n-    void updateYesButton();\n+    void updateButtons();\n \n private:\n     QAbstractButton *yesButton;\n+    QAbstractButton *m_psbt_button;\n     QTimer countDownTimer;\n     int secDelay;\n     QString confirmButtonText;\n+    bool m_enable_send;\n+    QString m_psbt_button_text;\n };\n \n #endif // BITCOIN_QT_SENDCOINSDIALOG_H"
      },
      {
        "sha": "36557d424830e10309eb29edb1950dd937c6b2f5",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfc412ab292cced1347997a085e9bb4526559933/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfc412ab292cced1347997a085e9bb4526559933/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=cfc412ab292cced1347997a085e9bb4526559933",
        "patch": "@@ -480,10 +480,9 @@ bool WalletModel::bumpFee(uint256 hash, uint256& new_hash)\n         return false;\n     }\n \n-    const bool create_psbt = m_wallet->privateKeysDisabled();\n-\n     // allow a user based fee verification\n-    QString questionString = create_psbt ? tr(\"Do you want to draft a transaction with fee increase?\") : tr(\"Do you want to increase the fee?\");\n+    /*: Asks a user if they would like to manually increase the fee of a transaction that has already been created. */\n+    QString questionString = tr(\"Do you want to increase the fee?\");\n     questionString.append(\"<br />\");\n     questionString.append(\"<table style=\\\"text-align: left;\\\">\");\n     questionString.append(\"<tr><td>\");\n@@ -506,12 +505,12 @@ bool WalletModel::bumpFee(uint256 hash, uint256& new_hash)\n         questionString.append(tr(\"Warning: This may pay the additional fee by reducing change outputs or adding inputs, when necessary. It may add a new change output if one does not already exist. These changes may potentially leak privacy.\"));\n     }\n \n-    SendConfirmationDialog confirmationDialog(tr(\"Confirm fee bump\"), questionString);\n+    SendConfirmationDialog confirmationDialog(tr(\"Confirm fee bump\"), questionString, \"\", \"\", SEND_CONFIRM_DELAY, tr(\"Send\"), !m_wallet->privateKeysDisabled(), tr(\"Create Unsgiend\"), nullptr);\n     confirmationDialog.exec();\n     QMessageBox::StandardButton retval = static_cast<QMessageBox::StandardButton>(confirmationDialog.result());\n \n     // cancel sign&broadcast if user doesn't want to bump the fee\n-    if (retval != QMessageBox::Yes) {\n+    if (retval != QMessageBox::Yes && retval != QMessageBox::Save) {\n         return false;\n     }\n \n@@ -522,7 +521,7 @@ bool WalletModel::bumpFee(uint256 hash, uint256& new_hash)\n     }\n \n     // Short-circuit if we are returning a bumped transaction PSBT to clipboard\n-    if (create_psbt) {\n+    if (retval == QMessageBox::Save) {\n         PartiallySignedTransaction psbtx(mtx);\n         bool complete = false;\n         const TransactionError err = wallet().fillPSBT(SIGHASH_ALL, false /* sign */, true /* bip32derivs */, nullptr, psbtx, complete);\n@@ -538,6 +537,8 @@ bool WalletModel::bumpFee(uint256 hash, uint256& new_hash)\n         return true;\n     }\n \n+    assert(!m_wallet->privateKeysDisabled());\n+\n     // sign bumped transaction\n     if (!m_wallet->signBumpTransaction(mtx)) {\n         QMessageBox::critical(nullptr, tr(\"Fee bump error\"), tr(\"Can't sign transaction.\"));"
      }
    ]
  },
  {
    "sha": "55c19f91919a1514297f7286e3a02ae13438769b",
    "node_id": "C_kwDOABII59oAKDU1YzE5ZjkxOTE5YTE1MTQyOTdmNzI4NmUzYTAyYWUxMzQzODc2OWI",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-04-28T19:29:12Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-09-29T18:24:17Z"
      },
      "message": "qt: hide Create Unsigned button behind an expert mode option",
      "tree": {
        "sha": "5be24812397a6dbe8249b87179686f2828ed7971",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5be24812397a6dbe8249b87179686f2828ed7971"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/55c19f91919a1514297f7286e3a02ae13438769b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55c19f91919a1514297f7286e3a02ae13438769b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/55c19f91919a1514297f7286e3a02ae13438769b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55c19f91919a1514297f7286e3a02ae13438769b/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cfc412ab292cced1347997a085e9bb4526559933",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfc412ab292cced1347997a085e9bb4526559933",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cfc412ab292cced1347997a085e9bb4526559933"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 55,
      "deletions": 9
    },
    "files": [
      {
        "sha": "5355c9bc8dc1452d810050f1b27c9fb33229521e",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55c19f91919a1514297f7286e3a02ae13438769b/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55c19f91919a1514297f7286e3a02ae13438769b/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=55c19f91919a1514297f7286e3a02ae13438769b",
        "patch": "@@ -252,6 +252,16 @@\n             </property>\n            </widget>\n           </item>\n+          <item>\n+           <widget class=\"QCheckBox\" name=\"m_enable_psbt_controls\">\n+            <property name=\"text\">\n+             <string extracomment=\"An options window setting to enable advanced PSBT controls.\">Enable advanced &amp;PSBT controls</string>\n+            </property>\n+            <property name=\"toolTip\">\n+             <string extracomment=\"Tooltip text for options window setting that enables advanced PSBT controls.\">Whether to show advanced PSBT controls.</string>\n+            </property>\n+           </widget>\n+          </item>\n          </layout>\n         </widget>\n        </item>"
      },
      {
        "sha": "85e42cd0d638c6d770d1166cfa1507216fa2c1c8",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55c19f91919a1514297f7286e3a02ae13438769b/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55c19f91919a1514297f7286e3a02ae13438769b/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=55c19f91919a1514297f7286e3a02ae13438769b",
        "patch": "@@ -242,6 +242,7 @@ void OptionsDialog::setMapper()\n     mapper->addMapping(ui->coinControlFeatures, OptionsModel::CoinControlFeatures);\n     mapper->addMapping(ui->subFeeFromAmount, OptionsModel::SubFeeFromAmount);\n     mapper->addMapping(ui->externalSignerPath, OptionsModel::ExternalSignerPath);\n+    mapper->addMapping(ui->m_enable_psbt_controls, OptionsModel::EnablePSBTControls);\n \n     /* Network */\n     mapper->addMapping(ui->mapPortUpnp, OptionsModel::MapPortUPnP);"
      },
      {
        "sha": "74044031a50d003bee1f299ffc2f1edc4f71c985",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55c19f91919a1514297f7286e3a02ae13438769b/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55c19f91919a1514297f7286e3a02ae13438769b/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=55c19f91919a1514297f7286e3a02ae13438769b",
        "patch": "@@ -83,6 +83,11 @@ void OptionsModel::Init(bool resetSettings)\n         settings.setValue(\"fCoinControlFeatures\", false);\n     fCoinControlFeatures = settings.value(\"fCoinControlFeatures\", false).toBool();\n \n+    if (!settings.contains(\"fEnablePSBTControls\")) {\n+        settings.setValue(\"fEnablePSBTControls\", false);\n+    }\n+    fEnablePSBTControls = settings.value(\"fEnablePSBTControls\", false).toBool();\n+\n     // These are shared with the core or have a command-line parameter\n     // and we want command-line parameters to overwrite the GUI settings.\n     //\n@@ -372,6 +377,8 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             return settings.value(\"fListen\");\n         case Server:\n             return settings.value(\"server\");\n+        case EnablePSBTControls:\n+            return settings.value(\"fEnablePSBTControls\");\n         default:\n             return QVariant();\n         }\n@@ -543,6 +550,10 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n                 setRestartRequired(true);\n             }\n             break;\n+        case EnablePSBTControls:\n+            fEnablePSBTControls = value.toBool();\n+            settings.setValue(\"fEnablePSBTControls\", fEnablePSBTControls);\n+            break;\n         default:\n             break;\n         }"
      },
      {
        "sha": "03faf45896816680b8e4813ee29048a41cc688ac",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55c19f91919a1514297f7286e3a02ae13438769b/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55c19f91919a1514297f7286e3a02ae13438769b/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=55c19f91919a1514297f7286e3a02ae13438769b",
        "patch": "@@ -70,6 +70,7 @@ class OptionsModel : public QAbstractListModel\n         SpendZeroConfChange,    // bool\n         Listen,                 // bool\n         Server,                 // bool\n+        EnablePSBTControls,     // bool\n         OptionIDRowCount,\n     };\n \n@@ -91,6 +92,7 @@ class OptionsModel : public QAbstractListModel\n     bool getUseEmbeddedMonospacedFont() const { return m_use_embedded_monospaced_font; }\n     bool getCoinControlFeatures() const { return fCoinControlFeatures; }\n     bool getSubFeeFromAmount() const { return m_sub_fee_from_amount; }\n+    bool getEnablePSBTControls() const { return fEnablePSBTControls; }\n     const QString& getOverriddenByCommandLine() { return strOverriddenByCommandLine; }\n \n     /* Explicit setters */\n@@ -116,6 +118,7 @@ class OptionsModel : public QAbstractListModel\n     bool m_use_embedded_monospaced_font;\n     bool fCoinControlFeatures;\n     bool m_sub_fee_from_amount;\n+    bool fEnablePSBTControls;\n     /* settings that were overridden by command-line */\n     QString strOverriddenByCommandLine;\n "
      },
      {
        "sha": "57948a55a58d16c2bc7b00d12c9b9c2f7cacf5ad",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 7,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55c19f91919a1514297f7286e3a02ae13438769b/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55c19f91919a1514297f7286e3a02ae13438769b/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=55c19f91919a1514297f7286e3a02ae13438769b",
        "patch": "@@ -329,8 +329,17 @@ bool SendCoinsDialog::PrepareSendText(QString& question_string, QString& informa\n         that the displayed transaction details represent the transaction the user intends to create. */\n     question_string.append(tr(\"Do you want to create this transaction?\"));\n     if (model->wallet().privateKeysDisabled() && !model->wallet().hasExternalSigner()) {\n+        /*: Text to inform a user attempting to create a transaction of their current options. At this stage,\n+            a user can only create a PSBT. This string is displayed when private keys are disabled and an external\n+            signer is not available. */\n         question_string.append(tr(\"Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can save or copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.\").arg(PACKAGE_NAME));\n+    } else if (model->getOptionsModel()->getEnablePSBTControls()) {\n+        /*: Text to inform a user attempting to create a transaction of their current options. At this stage,\n+            a user can send their transaction or create a PSBT. This string is displayed when both private keys\n+            and PSBT controls are enabled. */\n+        question_string.append(tr(\"Please, review your transaction. You can create and send this transaction or create a Partially Signed Bitcoin Transaction (PSBT), which you can save or copy and then sign with, e.g., an offline %1 wallet, or a PSBT-compatible hardware wallet.\").arg(PACKAGE_NAME));\n     } else {\n+        /*: Text to prompt a user to review the details of the transaction they are attempting to send. */\n         question_string.append(tr(\"Please, review your transaction.\"));\n     }\n     question_string.append(\"</span>%1\");\n@@ -397,7 +406,11 @@ void SendCoinsDialog::sendButtonClicked([[maybe_unused]] bool checked)\n     const QString confirmation = tr(\"Confirm send coins\");\n     const QString confirmButtonText = tr(\"Send\");\n     const QString psbt_button_text = tr(\"Create Unsigned\");\n-    SendConfirmationDialog confirmationDialog(confirmation, question_string, informative_text, detailed_text, SEND_CONFIRM_DELAY, confirmButtonText, !model->wallet().privateKeysDisabled(), psbt_button_text, this);\n+\n+    // Show the Create Unsigned button if set in the options or if private keys are disabled.\n+    bool show_unsigned_button = model->getOptionsModel()->getEnablePSBTControls() || model->wallet().privateKeysDisabled();\n+\n+    SendConfirmationDialog confirmationDialog(confirmation, question_string, informative_text, detailed_text, SEND_CONFIRM_DELAY, confirmButtonText, !model->wallet().privateKeysDisabled(), psbt_button_text, show_unsigned_button, this);\n     confirmationDialog.exec();\n     QMessageBox::StandardButton retval = static_cast<QMessageBox::StandardButton>(confirmationDialog.result());\n \n@@ -1029,15 +1042,16 @@ void SendCoinsDialog::coinControlUpdateLabels()\n     }\n }\n \n-SendConfirmationDialog::SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text, const QString& detailed_text, int _secDelay, const QString& _confirmButtonText, bool enable_send, const QString& psbt_button_text, QWidget* parent)\n+SendConfirmationDialog::SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text, const QString& detailed_text, int _secDelay, const QString& _confirmButtonText, bool enable_send, const QString& psbt_button_text, bool show_unsigned, QWidget* parent)\n     : QMessageBox(parent), secDelay(_secDelay), confirmButtonText(_confirmButtonText), m_enable_send(enable_send), m_psbt_button_text(psbt_button_text)\n {\n     setIcon(QMessageBox::Question);\n     setWindowTitle(title); // On macOS, the window title is ignored (as required by the macOS Guidelines).\n     setText(text);\n     setInformativeText(informative_text);\n     setDetailedText(detailed_text);\n-    setStandardButtons(QMessageBox::Save | QMessageBox::Yes | QMessageBox::Cancel);\n+    setStandardButtons(QMessageBox::Yes | QMessageBox::Cancel);\n+    if (show_unsigned) addButton(QMessageBox::Save);\n     setDefaultButton(QMessageBox::Cancel);\n     yesButton = button(QMessageBox::Yes);\n     if (confirmButtonText.isEmpty()) {\n@@ -1072,14 +1086,18 @@ void SendConfirmationDialog::updateButtons()\n     {\n         yesButton->setEnabled(false);\n         yesButton->setText(confirmButtonText + (m_enable_send ? (\" (\" + QString::number(secDelay) + \")\") : QString(\"\")));\n-        m_psbt_button->setEnabled(false);\n-        m_psbt_button->setText(m_psbt_button_text + \" (\" + QString::number(secDelay) + \")\");\n+        if (m_psbt_button) {\n+            m_psbt_button->setEnabled(false);\n+            m_psbt_button->setText(m_psbt_button_text + \" (\" + QString::number(secDelay) + \")\");\n+        }\n     }\n     else\n     {\n         yesButton->setEnabled(m_enable_send);\n         yesButton->setText(confirmButtonText);\n-        m_psbt_button->setEnabled(true);\n-        m_psbt_button->setText(m_psbt_button_text);\n+        if (m_psbt_button) {\n+            m_psbt_button->setEnabled(true);\n+            m_psbt_button->setText(m_psbt_button_text);\n+        }\n     }\n }"
      },
      {
        "sha": "0525a0721e9ea515724ed46bfc0b4097f4fabe11",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55c19f91919a1514297f7286e3a02ae13438769b/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55c19f91919a1514297f7286e3a02ae13438769b/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=55c19f91919a1514297f7286e3a02ae13438769b",
        "patch": "@@ -114,7 +114,7 @@ class SendConfirmationDialog : public QMessageBox\n     Q_OBJECT\n \n public:\n-    SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text = \"\", const QString& detailed_text = \"\", int secDelay = SEND_CONFIRM_DELAY, const QString& confirmText = \"\", bool enable_send = true, const QString& psbt_text = \"Create Unsigned\", QWidget* parent = nullptr);\n+    SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text = \"\", const QString& detailed_text = \"\", int secDelay = SEND_CONFIRM_DELAY, const QString& confirmText = \"\", bool enable_send = true, const QString& psbt_text = \"Create Unsigned\", bool show_unsigned = false, QWidget* parent = nullptr);\n     int exec() override;\n \n private Q_SLOTS:"
      },
      {
        "sha": "0ef3dd757c71422f707f6fd2ece3dfb115e7909b",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55c19f91919a1514297f7286e3a02ae13438769b/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55c19f91919a1514297f7286e3a02ae13438769b/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=55c19f91919a1514297f7286e3a02ae13438769b",
        "patch": "@@ -505,7 +505,10 @@ bool WalletModel::bumpFee(uint256 hash, uint256& new_hash)\n         questionString.append(tr(\"Warning: This may pay the additional fee by reducing change outputs or adding inputs, when necessary. It may add a new change output if one does not already exist. These changes may potentially leak privacy.\"));\n     }\n \n-    SendConfirmationDialog confirmationDialog(tr(\"Confirm fee bump\"), questionString, \"\", \"\", SEND_CONFIRM_DELAY, tr(\"Send\"), !m_wallet->privateKeysDisabled(), tr(\"Create Unsgiend\"), nullptr);\n+    // Show the \"Create Unsigned\" button if the option is set or private keys are disabled\n+    bool show_unsigned_button = getOptionsModel()->getEnablePSBTControls() || m_wallet->privateKeysDisabled();\n+\n+    SendConfirmationDialog confirmationDialog(tr(\"Confirm fee bump\"), questionString, \"\", \"\", SEND_CONFIRM_DELAY, tr(\"Send\"), !m_wallet->privateKeysDisabled(), tr(\"Create Unsigned\"), show_unsigned_button, nullptr);\n     confirmationDialog.exec();\n     QMessageBox::StandardButton retval = static_cast<QMessageBox::StandardButton>(confirmationDialog.result());\n "
      }
    ]
  }
]