MarcoFalke,2020-02-18 19:51:48,ACK 0730ac98c61f895893d40cb0fdff4cd7339a11b0,https://github.com/bitcoin/bitcoin/pull/18176#issuecomment-587740372,587740372,
DrahtBot,2020-02-18 21:30:05,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18176#issuecomment-587882514,587882514,
practicalswift,2020-02-19 16:52:58,@MarcoFalke Added `CScriptNum` fuzzer too. Moved common functions to `fuzz.h`. Please re-review :),https://github.com/bitcoin/bitcoin/pull/18176#issuecomment-588323310,588323310,
practicalswift,2020-03-09 16:58:45,@MarcoFalke Thanks for reviewing. All feedback addressed. Please re-review :),https://github.com/bitcoin/bitcoin/pull/18176#issuecomment-596651902,596651902,
practicalswift,2020-03-09 19:25:28,Rebased again :),https://github.com/bitcoin/bitcoin/pull/18176#issuecomment-596734966,596734966,
MarcoFalke,2020-03-10 03:01:15,"ACK e37f53648e3acc6aea75adafec4de2bdbd8cb293 ðŸ¦‚\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK e37f53648e3acc6aea75adafec4de2bdbd8cb293 ðŸ¦‚\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiTxwv/fFqtr5Cy14W/HZr4I58Tpz3S86mobLUDaulSWhFpMz8b38ilBC",https://github.com/bitcoin/bitcoin/pull/18176#issuecomment-596876979,596876979,
MarcoFalke,2020-03-07 22:19:08,"Can combine case 0 and 1?\n\n```cpp\nconst auto int = fuzzed_data_provider.ConsumeIntegral<int64_t>()\n(script_num == int) != (script_num != int)\n```",https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389316359,389316359,src/test/fuzz/scriptnum_ops.cpp
MarcoFalke,2020-03-07 22:19:59,"Same here:\n\n```cpp\n(s_n < int) != (s_n >= int)",https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389316389,389316389,src/test/fuzz/scriptnum_ops.cpp
MarcoFalke,2020-03-07 22:20:24,"Same here:\n\n```cpp\n(s_n > int ) != (s_n <= int)",https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389316417,389316417,src/test/fuzz/scriptnum_ops.cpp
MarcoFalke,2020-03-07 22:20:46,Same for all of these,https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389316438,389316438,src/test/fuzz/scriptnum_ops.cpp
MarcoFalke,2020-03-07 22:22:43,"Could combine these?\n\n```cpp\n(script_num - int ) + int == script_num\n(script_num + int ) - int == script_num",https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389316534,389316534,src/test/fuzz/scriptnum_ops.cpp
MarcoFalke,2020-03-07 22:23:03,Same here and below?,https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389316558,389316558,src/test/fuzz/scriptnum_ops.cpp
practicalswift,2020-03-09 16:57:17,Fixed!,https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389825552,389825552,src/test/fuzz/scriptnum_ops.cpp
practicalswift,2020-03-09 16:57:23,Fixed!,https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389825611,389825611,src/test/fuzz/scriptnum_ops.cpp
practicalswift,2020-03-09 16:57:30,Fixed!,https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389825711,389825711,src/test/fuzz/scriptnum_ops.cpp
practicalswift,2020-03-09 16:57:49,Fixed!,https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389825897,389825897,src/test/fuzz/scriptnum_ops.cpp
practicalswift,2020-03-09 16:58:01,Fixed!,https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389826034,389826034,src/test/fuzz/scriptnum_ops.cpp
practicalswift,2020-03-09 16:58:16,Fixed!,https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389826191,389826191,src/test/fuzz/scriptnum_ops.cpp
MarcoFalke,2020-03-09 20:08:12,"in commit 4532649328ad5056f9ae2bf99f3aba2212bdc785:\n\nAny reason those are separate cases for the fuzzer to find? They can all be executed in the same case:\n\n```cpp\n             assert((script_num == i) != (script_num != i));\n             assert((script_num <= i) != script_num > i);\n             assert((script_num >= i) != (script_num < i));",https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389932248,389932248,src/test/fuzz/scriptnum_ops.cpp
MarcoFalke,2020-03-09 20:08:22,Same here,https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389932341,389932341,src/test/fuzz/scriptnum_ops.cpp
MarcoFalke,2020-03-09 20:11:26,Same here,https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389933947,389933947,src/test/fuzz/scriptnum_ops.cpp
MarcoFalke,2020-03-09 20:13:02,"Also in commit 4532649:\n\nNo input is consumed from the fuzzer, so this doesn't need to be special cased and can be executed unconditionally?",https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389934739,389934739,src/test/fuzz/scriptnum_ops.cpp
practicalswift,2020-03-09 20:40:36,"Oh, of course. Now fixed. Thanks!",https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389948687,389948687,src/test/fuzz/scriptnum_ops.cpp
practicalswift,2020-03-09 20:40:47,True! Fixed.,https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389948796,389948796,src/test/fuzz/scriptnum_ops.cpp
