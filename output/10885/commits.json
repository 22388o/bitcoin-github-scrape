[
  {
    "sha": "3ef77a0c1288df524fdf0c90ca70c986f473b787",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZWY3N2EwYzEyODhkZjUyNGZkZjBjOTBjYTcwYzk4NmY0NzNiNzg3",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-07-26T23:56:30Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-07-28T10:23:42Z"
      },
      "message": "Reject duplicate wallet filenames",
      "tree": {
        "sha": "8a1a1d39c81ee168e32ff2ffc6a0a7fc81cdcc1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a1a1d39c81ee168e32ff2ffc6a0a7fc81cdcc1d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ef77a0c1288df524fdf0c90ca70c986f473b787",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ef77a0c1288df524fdf0c90ca70c986f473b787",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3ef77a0c1288df524fdf0c90ca70c986f473b787",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ef77a0c1288df524fdf0c90ca70c986f473b787/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b11a07848754347add990a2b2cff4828ffa2be0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b11a07848754347add990a2b2cff4828ffa2be0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b11a07848754347add990a2b2cff4828ffa2be0"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 19,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ccf5353eb7a9641eb945767c3051d38328d1a5f5",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ef77a0c1288df524fdf0c90ca70c986f473b787/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ef77a0c1288df524fdf0c90ca70c986f473b787/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=3ef77a0c1288df524fdf0c90ca70c986f473b787",
        "patch": "@@ -468,13 +468,24 @@ bool CWallet::Verify()\n \n     uiInterface.InitMessage(_(\"Verifying wallet(s)...\"));\n \n+    // Keep track of each wallet absolute path to detect duplicates.\n+    std::set<fs::path> wallet_paths;\n+\n     for (const std::string& walletFile : gArgs.GetArgs(\"-wallet\")) {\n         if (boost::filesystem::path(walletFile).filename() != walletFile) {\n             return InitError(_(\"-wallet parameter must only specify a filename (not a path)\"));\n-        } else if (SanitizeString(walletFile, SAFE_CHARS_FILENAME) != walletFile) {\n+        }\n+\n+        if (SanitizeString(walletFile, SAFE_CHARS_FILENAME) != walletFile) {\n             return InitError(_(\"Invalid characters in -wallet filename\"));\n         }\n \n+        fs::path wallet_path = fs::absolute(walletFile, GetDataDir());\n+\n+        if (!wallet_paths.insert(wallet_path).second) {\n+            return InitError(_(\"Duplicate -wallet filename\"));\n+        }\n+\n         std::string strError;\n         if (!CWalletDB::VerifyEnvironment(walletFile, GetDataDir().string(), strError)) {\n             return InitError(strError);"
      },
      {
        "sha": "5844d99139722e0a98207f53f99487bd7f0c256b",
        "filename": "test/functional/multiwallet.py",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ef77a0c1288df524fdf0c90ca70c986f473b787/test/functional/multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ef77a0c1288df524fdf0c90ca70c986f473b787/test/functional/multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/multiwallet.py?ref=3ef77a0c1288df524fdf0c90ca70c986f473b787",
        "patch": "@@ -18,6 +18,13 @@ def __init__(self):\n         self.extra_args = [['-wallet=w1', '-wallet=w2', '-wallet=w3']]\n \n     def run_test(self):\n+        self.stop_node(0)\n+\n+        # should not initialize if there are duplicate wallets\n+        self.assert_start_raises_init_error(0, self.options.tmpdir, ['-wallet=w1', '-wallet=w1'], 'Duplicate -wallet filename')\n+\n+        self.nodes[0] = self.start_node(0, self.options.tmpdir, self.extra_args[0])\n+\n         w1 = self.nodes[0] / \"wallet/w1\"\n         w1.generate(1)\n "
      }
    ]
  },
  {
    "sha": "a6da027d83e48f05c933149ff89c9b9ad5ced915",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNmRhMDI3ZDgzZTQ4ZjA1YzkzMzE0OWZmODljOWI5YWQ1Y2VkOTE1",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-07-26T23:57:02Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-07-28T10:23:43Z"
      },
      "message": "Reject invalid wallet files",
      "tree": {
        "sha": "4a1b394b8304dc6f1163e8e6ed96e4a19bf08fe6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a1b394b8304dc6f1163e8e6ed96e4a19bf08fe6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6da027d83e48f05c933149ff89c9b9ad5ced915",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6da027d83e48f05c933149ff89c9b9ad5ced915",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a6da027d83e48f05c933149ff89c9b9ad5ced915",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6da027d83e48f05c933149ff89c9b9ad5ced915/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ef77a0c1288df524fdf0c90ca70c986f473b787",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ef77a0c1288df524fdf0c90ca70c986f473b787",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ef77a0c1288df524fdf0c90ca70c986f473b787"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ef1d764146c7f309da8d78ebbbd81d8de4d4a5ba",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6da027d83e48f05c933149ff89c9b9ad5ced915/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6da027d83e48f05c933149ff89c9b9ad5ced915/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=a6da027d83e48f05c933149ff89c9b9ad5ced915",
        "patch": "@@ -482,6 +482,10 @@ bool CWallet::Verify()\n \n         fs::path wallet_path = fs::absolute(walletFile, GetDataDir());\n \n+        if (fs::exists(wallet_path) && (!fs::is_regular_file(wallet_path) || fs::is_symlink(wallet_path))) {\n+            return InitError(_(\"Invalid -wallet file\"));\n+        }\n+\n         if (!wallet_paths.insert(wallet_path).second) {\n             return InitError(_(\"Duplicate -wallet filename\"));\n         }"
      },
      {
        "sha": "c60d345acb56b2c5e5c2da1e5d861b13750af7a3",
        "filename": "test/functional/multiwallet.py",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6da027d83e48f05c933149ff89c9b9ad5ced915/test/functional/multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6da027d83e48f05c933149ff89c9b9ad5ced915/test/functional/multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/multiwallet.py?ref=a6da027d83e48f05c933149ff89c9b9ad5ced915",
        "patch": "@@ -6,6 +6,8 @@\n \n Verify that a bitcoind node can load multiple wallet files\n \"\"\"\n+import os\n+\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_jsonrpc\n \n@@ -23,6 +25,14 @@ def run_test(self):\n         # should not initialize if there are duplicate wallets\n         self.assert_start_raises_init_error(0, self.options.tmpdir, ['-wallet=w1', '-wallet=w1'], 'Duplicate -wallet filename')\n \n+        # should not initialize if wallet file is a directory\n+        os.mkdir(os.path.join(self.options.tmpdir, 'node0', 'regtest', 'w11'))\n+        self.assert_start_raises_init_error(0, self.options.tmpdir, ['-wallet=w11'], 'Invalid -wallet file')\n+\n+        # should not initialize if wallet file is a symlink\n+        os.symlink(os.path.join(self.options.tmpdir, 'node0', 'regtest', 'w1'), os.path.join(self.options.tmpdir, 'node0', 'regtest', 'w12'))\n+        self.assert_start_raises_init_error(0, self.options.tmpdir, ['-wallet=w12'], 'Invalid -wallet file')\n+\n         self.nodes[0] = self.start_node(0, self.options.tmpdir, self.extra_args[0])\n \n         w1 = self.nodes[0] / \"wallet/w1\""
      }
    ]
  },
  {
    "sha": "d84e78ec393049cb067170a4905a1679ff794368",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkODRlNzhlYzM5MzA0OWNiMDY3MTcwYTQ5MDVhMTY3OWZmNzk0MzY4",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-07-28T10:03:03Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-07-28T10:25:38Z"
      },
      "message": "[wallet] Specify wallet name in wallet loading errors",
      "tree": {
        "sha": "c51cb8511a1a658503de6796f497a5112be73f8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c51cb8511a1a658503de6796f497a5112be73f8c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d84e78ec393049cb067170a4905a1679ff794368",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d84e78ec393049cb067170a4905a1679ff794368",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d84e78ec393049cb067170a4905a1679ff794368",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d84e78ec393049cb067170a4905a1679ff794368/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6da027d83e48f05c933149ff89c9b9ad5ced915",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6da027d83e48f05c933149ff89c9b9ad5ced915",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6da027d83e48f05c933149ff89c9b9ad5ced915"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "36c295e5d85eaef0126d937013fedd6f9c429f02",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d84e78ec393049cb067170a4905a1679ff794368/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d84e78ec393049cb067170a4905a1679ff794368/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d84e78ec393049cb067170a4905a1679ff794368",
        "patch": "@@ -473,21 +473,21 @@ bool CWallet::Verify()\n \n     for (const std::string& walletFile : gArgs.GetArgs(\"-wallet\")) {\n         if (boost::filesystem::path(walletFile).filename() != walletFile) {\n-            return InitError(_(\"-wallet parameter must only specify a filename (not a path)\"));\n+            return InitError(strprintf(_(\"Error loading wallet %s. -wallet parameter must only specify a filename (not a path).\"), walletFile));\n         }\n \n         if (SanitizeString(walletFile, SAFE_CHARS_FILENAME) != walletFile) {\n-            return InitError(_(\"Invalid characters in -wallet filename\"));\n+            return InitError(strprintf(_(\"Error loading wallet %s. Invalid characters in -wallet filename.\"), walletFile));\n         }\n \n         fs::path wallet_path = fs::absolute(walletFile, GetDataDir());\n \n         if (fs::exists(wallet_path) && (!fs::is_regular_file(wallet_path) || fs::is_symlink(wallet_path))) {\n-            return InitError(_(\"Invalid -wallet file\"));\n+            return InitError(strprintf(_(\"Error loading wallet %s. -wallet filename must be a regular file.\"), walletFile));\n         }\n \n         if (!wallet_paths.insert(wallet_path).second) {\n-            return InitError(_(\"Duplicate -wallet filename\"));\n+            return InitError(strprintf(_(\"Error loading wallet %s. Duplicate -wallet filename specified.\"), walletFile));\n         }\n \n         std::string strError;"
      },
      {
        "sha": "5679f405037628bfb60a796aede103e0a265f672",
        "filename": "test/functional/multiwallet.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d84e78ec393049cb067170a4905a1679ff794368/test/functional/multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d84e78ec393049cb067170a4905a1679ff794368/test/functional/multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/multiwallet.py?ref=d84e78ec393049cb067170a4905a1679ff794368",
        "patch": "@@ -23,15 +23,15 @@ def run_test(self):\n         self.stop_node(0)\n \n         # should not initialize if there are duplicate wallets\n-        self.assert_start_raises_init_error(0, self.options.tmpdir, ['-wallet=w1', '-wallet=w1'], 'Duplicate -wallet filename')\n+        self.assert_start_raises_init_error(0, self.options.tmpdir, ['-wallet=w1', '-wallet=w1'], 'Error loading wallet w1. Duplicate -wallet filename specified.')\n \n         # should not initialize if wallet file is a directory\n         os.mkdir(os.path.join(self.options.tmpdir, 'node0', 'regtest', 'w11'))\n-        self.assert_start_raises_init_error(0, self.options.tmpdir, ['-wallet=w11'], 'Invalid -wallet file')\n+        self.assert_start_raises_init_error(0, self.options.tmpdir, ['-wallet=w11'], 'Error loading wallet w11. -wallet filename must be a regular file.')\n \n         # should not initialize if wallet file is a symlink\n         os.symlink(os.path.join(self.options.tmpdir, 'node0', 'regtest', 'w1'), os.path.join(self.options.tmpdir, 'node0', 'regtest', 'w12'))\n-        self.assert_start_raises_init_error(0, self.options.tmpdir, ['-wallet=w12'], 'Invalid -wallet file')\n+        self.assert_start_raises_init_error(0, self.options.tmpdir, ['-wallet=w12'], 'Error loading wallet w12. -wallet filename must be a regular file.')\n \n         self.nodes[0] = self.start_node(0, self.options.tmpdir, self.extra_args[0])\n "
      }
    ]
  }
]