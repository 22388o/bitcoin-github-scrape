[
  {
    "sha": "1ac454a3844b9b8389de0f660fa9455c0efa7140",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYWM0NTRhMzg0NGI5YjgzODlkZTBmNjYwZmE5NDU1YzBlZmE3MTQw",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-07-02T16:48:08Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-07-04T16:35:25Z"
      },
      "message": "Enable ShellCheck rules\n\nEnabled ShellCheck rules:\n  SC1087\n  SC2001\n  SC2004\n  SC2005\n  SC2006\n  SC2016\n  SC2028\n  SC2048\n  SC2066 (note that IFS already contains only a line feed)\n  SC2116\n  SC2166\n  SC2181\n  SC2206\n  SC2207\n  SC2230\n  SC2236",
      "tree": {
        "sha": "25912907998366914c0e0328eb53e214e35af13c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25912907998366914c0e0328eb53e214e35af13c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ac454a3844b9b8389de0f660fa9455c0efa7140",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl0eKzYACgkQQQEIES5+\nqB968w//aevru5v34aYHNQ0YnRQe9w1gt0FfuP2agjoNCMuhduSaTddfLtBBVNWG\nJas2xcaOHr6fZbjxCLHUJOgxhxiZneLTbPwHTEUwYY8azJOQZeSskShsj6mdn/4l\nMqRcJc6l+H9o4wVKzly+IxwbfA0pbzT77Zlt6mr09o4jBbuTMrOHp0FE9bIa6psu\niMKHNJU0l6IMoYcY2QtlaNTb4ZdK6eVcOvgI5gd+OC/34tlwuiNxdmEOhMZmhSJE\nOj2vRQpnvxodBflpVtwQ7fNHOOL8O9BlPoEAOPUh5yxiw/LB5vuc2ilf1TbN6XbI\nJVirEHDtGZXAM8toGxWzbfPxH6XoxxLjHfpl+tLaLXWzzzsFXftSZznOY+bfO6Rw\ny8w+5gMdNfBTnjufFNCXKxP9O7JyaqOTKwyUufeLyOhK++Lx9nF4ScPxTFyDTv7z\nIF7on4g0nekKIC/aTBJSy4nnhfPQOhKf/VDLQdRpNxYdQSApgmWX7gYOQ5WBNb01\nM3kKX+v5Q3TFNnaXX/xNYogs2R8adn5MfTjJYUtpNJS/597YWDFWTV1hPd+xixnd\nA0RY6oRhqGNGcoobDPeGU9E/GnvoZK/vCdl1yBXsDuKAY81G1MpSCVcPGEPfqz9s\nnsAESwPEfw6k8L2oHzaDUx3dnu38GUlqdS28fleB7ArC8ImLIVw=\n=J+vp\n-----END PGP SIGNATURE-----",
        "payload": "tree 25912907998366914c0e0328eb53e214e35af13c\nparent 6c21a801f3df4942d09d5a33d3dab04807f7bb37\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1562086088 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1562258125 +0300\n\nEnable ShellCheck rules\n\nEnabled ShellCheck rules:\n  SC1087\n  SC2001\n  SC2004\n  SC2005\n  SC2006\n  SC2016\n  SC2028\n  SC2048\n  SC2066 (note that IFS already contains only a line feed)\n  SC2116\n  SC2166\n  SC2181\n  SC2206\n  SC2207\n  SC2230\n  SC2236\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ac454a3844b9b8389de0f660fa9455c0efa7140",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1ac454a3844b9b8389de0f660fa9455c0efa7140",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ac454a3844b9b8389de0f660fa9455c0efa7140/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c21a801f3df4942d09d5a33d3dab04807f7bb37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c21a801f3df4942d09d5a33d3dab04807f7bb37",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c21a801f3df4942d09d5a33d3dab04807f7bb37"
      }
    ],
    "stats": {
      "total": 99,
      "additions": 42,
      "deletions": 57
    },
    "files": [
      {
        "sha": "c7dea599dcd7e8769e088a561372195986a3693b",
        "filename": ".travis/lint_06_script.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/.travis/lint_06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/.travis/lint_06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/lint_06_script.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -18,7 +18,7 @@ test/lint/check-doc.py\n test/lint/check-rpc-mappings.py .\n test/lint/lint-all.sh\n \n-if [ \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then\n+if [ \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" ] && [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then\n     git log --merges --before=\"2 days ago\" -1 --format='%H' > ./contrib/verify-commits/trusted-sha512-root-commit\n     travis_retry gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys $(<contrib/verify-commits/trusted-keys) &&\n     ./contrib/verify-commits/verify-commits.py --clean-merge=2;"
      },
      {
        "sha": "516d3fc0428ba30588a1be864be324551318dcd4",
        "filename": ".travis/test_05_before_script.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/.travis/test_05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/.travis/test_05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/test_05_before_script.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -10,10 +10,10 @@ DOCKER_EXEC echo \\> \\$HOME/.bitcoin  # Make sure default datadir does not exist\n \n mkdir -p depends/SDKs depends/sdk-sources\n \n-if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n+if [ -n \"$OSX_SDK\" ] && [ ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n   curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n fi\n-if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n+if [ -n \"$OSX_SDK\" ] && [ -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n   tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n fi\n if [[ $HOST = *-mingw32 ]]; then\n@@ -22,4 +22,3 @@ fi\n if [ -z \"$NO_DEPENDS\" ]; then\n   DOCKER_EXEC CONFIG_SHELL= make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n fi\n-"
      },
      {
        "sha": "2c434e9ef057c7649f35fc93550540bec0f48f97",
        "filename": "autogen.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -7,10 +7,10 @@ export LC_ALL=C\n set -e\n srcdir=\"$(dirname $0)\"\n cd \"$srcdir\"\n-if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"`which glibtoolize 2>/dev/null`\"; then\n+if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"$(command -v glibtoolize)\"; then\n   LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n   export LIBTOOLIZE\n fi\n-which autoreconf >/dev/null || \\\n+command -v autoreconf >/dev/null || \\\n   (echo \"configuration failed, please install autoconf first\" && exit 1)\n autoreconf --install --force --warnings=all"
      },
      {
        "sha": "dbdb6228775994a327dcb4dc5aed533831365bed",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -16,7 +16,7 @@ BITCOINQT=${BITCOINQT:-$BINDIR/qt/bitcoin-qt}\n [ ! -x $BITCOIND ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n \n # The autodetected version git tag can screw up manpage output a little bit\n-BTCVER=($($BITCOINCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }'))\n+read -r -a BTCVER <<< \"$($BITCOINCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }')\"\n \n # Create a footer file with copyright content.\n # This gets autodetected fine for bitcoind if --version-string is not set,"
      },
      {
        "sha": "4b848dda99ee78c784765299c2abe0747f928d6b",
        "filename": "contrib/install_db4.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/install_db4.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/install_db4.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/install_db4.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -14,7 +14,7 @@ if [ -z \"${1}\" ]; then\n fi\n \n expand_path() {\n-  echo \"$(cd \"${1}\" && pwd -P)\"\n+  cd \"${1}\" && pwd -P\n }\n \n BDB_PREFIX=\"$(expand_path ${1})/db4\"; shift;\n@@ -23,7 +23,7 @@ BDB_HASH='12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef'\n BDB_URL=\"https://download.oracle.com/berkeley-db/${BDB_VERSION}.tar.gz\"\n \n check_exists() {\n-  which \"$1\" >/dev/null 2>&1\n+  command -v \"$1\" >/dev/null\n }\n \n sha256_check() {\n@@ -95,7 +95,9 @@ make install\n echo\n echo \"db4 build complete.\"\n echo\n+# shellcheck disable=SC2016\n echo 'When compiling bitcoind, run `./configure` in the following way:'\n echo\n echo \"  export BDB_PREFIX='${BDB_PREFIX}'\"\n+# shellcheck disable=SC2016\n echo '  ./configure BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" ...'"
      },
      {
        "sha": "af2b11fa0db07ed83318133e92ce4655e8dac88f",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -36,13 +36,13 @@ if [ -z \"${CODESIGN_ALLOCATE}\" ]; then\n fi\n \n find ${TEMPDIR} -name \"*.sign\" | while read i; do\n-  SIZE=`stat -c %s \"${i}\"`\n-  TARGET_FILE=\"`echo \"${i}\" | sed 's/\\.sign$//'`\"\n+  SIZE=$(stat -c %s \"${i}\")\n+  TARGET_FILE=\"$(echo \"${i}\" | sed 's/\\.sign$//')\"\n \n   echo \"Allocating space for the signature of size ${SIZE} in ${TARGET_FILE}\"\n   ${CODESIGN_ALLOCATE} -i \"${TARGET_FILE}\" -a ${ARCH} ${SIZE} -o \"${i}.tmp\"\n \n-  OFFSET=`${PAGESTUFF} \"${i}.tmp\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n+  OFFSET=$(${PAGESTUFF} \"${i}.tmp\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g')\n   if [ -z ${QUIET} ]; then\n     echo \"Attaching signature at offset ${OFFSET}\"\n   fi"
      },
      {
        "sha": "938bcd163869e592c1ff9169a26a9cf07ee4d5a5",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -14,7 +14,7 @@ TEMPLIST=${TEMPDIR}/signatures.txt\n OUT=signature-osx.tar.gz\n OUTROOT=osx\n \n-if [ ! -n \"$1\" ]; then\n+if [ -z \"$1\" ]; then\n   echo \"usage: $0 <codesign args>\"\n   echo \"example: $0 -s MyIdentity\"\n   exit 1\n@@ -26,20 +26,20 @@ mkdir -p ${TEMPDIR}\n ${CODESIGN} -f --file-list ${TEMPLIST} \"$@\" \"${BUNDLE}\"\n \n grep -v CodeResources < \"${TEMPLIST}\" | while read i; do\n-  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n-  SIZE=`pagestuff \"$i\" -p | tail -2 | grep size | sed 's/[^0-9]*//g'`\n-  OFFSET=`pagestuff \"$i\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n+  TARGETFILE=\"${BUNDLE}/$(echo \"${i}\" | sed \"s|.*${BUNDLE}/||\")\"\n+  SIZE=$(pagestuff \"$i\" -p | tail -2 | grep size | sed 's/[^0-9]*//g')\n+  OFFSET=$(pagestuff \"$i\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g')\n   SIGNFILE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}.sign\"\n-  DIRNAME=\"`dirname \"${SIGNFILE}\"`\"\n+  DIRNAME=\"$(dirname \"${SIGNFILE}\")\"\n   mkdir -p \"${DIRNAME}\"\n   echo \"Adding detached signature for: ${TARGETFILE}. Size: ${SIZE}. Offset: ${OFFSET}\"\n   dd if=\"$i\" of=\"${SIGNFILE}\" bs=1 skip=${OFFSET} count=${SIZE} 2>/dev/null\n done\n \n grep CodeResources < \"${TEMPLIST}\" | while read i; do\n-  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n+  TARGETFILE=\"${BUNDLE}/$(echo \"${i}\" | sed \"s|.*${BUNDLE}/||\")\"\n   RESOURCE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}\"\n-  DIRNAME=\"`dirname \"${RESOURCE}\"`\"\n+  DIRNAME=\"$(dirname \"${RESOURCE}\")\"\n   mkdir -p \"${DIRNAME}\"\n   echo \"Adding resource for: \\\"${TARGETFILE}\\\"\"\n   cp \"${i}\" \"${RESOURCE}\""
      },
      {
        "sha": "ccb0f4f8958eef33b9f7138a00108222e3fa189d",
        "filename": "contrib/qos/tc.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -33,7 +33,7 @@ tc class add dev ${IF} parent 1:1 classid 1:11 htb rate ${LIMIT} ceil ${LIMIT} p\n tc filter add dev ${IF} parent 1: protocol ip prio 1 handle 1 fw classid 1:10\n tc filter add dev ${IF} parent 1: protocol ip prio 2 handle 2 fw classid 1:11\n \n-if [ ! -z \"${LOCALNET_V6}\" ] ; then\n+if [ -n \"${LOCALNET_V6}\" ] ; then\n \t# v6 cannot have the same priority value as v4\n \ttc filter add dev ${IF} parent 1: protocol ipv6 prio 3 handle 1 fw classid 1:10\n \ttc filter add dev ${IF} parent 1: protocol ipv6 prio 4 handle 2 fw classid 1:11\n@@ -56,7 +56,7 @@ fi\n iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n \n-if [ ! -z \"${LOCALNET_V6}\" ] ; then\n+if [ -n \"${LOCALNET_V6}\" ] ; then\n \tip6tables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n \tip6tables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n fi"
      },
      {
        "sha": "288e4ccacb8611e8bd5c7cec78ed10bb8ffe5930",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -21,7 +21,7 @@ else\n \t# they've created a collision for. Not the most likely attack, but preventing\n \t# it is pretty easy so we do so as a \"belt-and-suspenders\" measure.\n \tGPG_RES=\"\"\n-\tfor LINE in \"$(gpg --version)\"; do\n+\tfor LINE in $(gpg --version); do\n \t\tcase \"$LINE\" in\n \t\t\t\"gpg (GnuPG) 1.4.1\"*|\"gpg (GnuPG) 2.0.\"*)\n \t\t\t\techo \"Please upgrade to at least gpg 2.1.10 to check for weak signatures\" > /dev/stderr\n@@ -35,7 +35,7 @@ else\n \tdone\n \t[ \"$GPG_RES\" = \"\" ] && GPG_RES=\"$(printf '%s\\n' \"$INPUT\" | gpg --trust-model always --weak-digest sha1 \"$@\" 2>/dev/null)\"\n fi\n-for LINE in $(echo \"$GPG_RES\"); do\n+for LINE in $GPG_RES; do\n \tcase \"$LINE\" in\n \t\"[GNUPG:] VALIDSIG \"*)\n \t\twhile read KEY; do"
      },
      {
        "sha": "bfe74aa4fa57edead96528037d0e2d855fdb7150",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -13,7 +13,7 @@\n \n export LC_ALL=C\n function clean_up {\n-   for file in $*\n+   for file in \"$@\"\n    do\n       rm \"$file\" 2> /dev/null\n    done\n@@ -82,22 +82,20 @@ else\n    exit 2\n fi\n \n-#first we fetch the file containing the signature\n-WGETOUT=$(wget -N \"$HOST1$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n-\n-#and then see if wget completed successfully\n-if [ $? -ne 0 ]; then\n+if ! WGETOUT=$(wget -N \"$HOST1$BASEDIR$SIGNATUREFILENAME\" 2>&1); then\n    echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n+   # shellcheck disable=SC1087\n    echo \"[$VERSIONPREFIX]<version>-[$RCVERSIONSTRING[0-9]] (example: ${VERSIONPREFIX}0.10.4-${RCVERSIONSTRING}1)\"\n    echo \"wget output:\"\n+   # shellcheck disable=SC2001\n    echo \"$WGETOUT\"|sed 's/^/\\t/g'\n    exit 2\n fi\n \n-WGETOUT=$(wget -N -O \"$SIGNATUREFILENAME.2\" \"$HOST2$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n-if [ $? -ne 0 ]; then\n+if ! WGETOUT=$(wget -N -O \"$SIGNATUREFILENAME.2\" \"$HOST2$BASEDIR$SIGNATUREFILENAME\" 2>&1); then\n    echo \"bitcoin.org failed to provide signature file, but bitcoincore.org did?\"\n    echo \"wget output:\"\n+   # shellcheck disable=SC2001\n    echo \"$WGETOUT\"|sed 's/^/\\t/g'\n    clean_up $SIGNATUREFILENAME\n    exit 3\n@@ -128,6 +126,7 @@ if [ $RET -ne 0 ]; then\n    fi\n \n    echo \"gpg output:\"\n+   # shellcheck disable=SC2001\n    echo \"$GPGOUT\"|sed 's/^/\\t/g'\n    clean_up $SIGNATUREFILENAME $SIGNATUREFILENAME.2 $TMPFILE\n    exit \"$RET\""
      },
      {
        "sha": "cc42422b23f437b063d9b916996a882807defc34",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -8,7 +8,7 @@ if [ -z \"$OSSLSIGNCODE\" ]; then\n   OSSLSIGNCODE=osslsigncode\n fi\n \n-if [ ! -n \"$1\" ]; then\n+if [ -z \"$1\" ]; then\n   echo \"usage: $0 <osslcodesign args>\"\n   echo \"example: $0 -key codesign.key\"\n   exit 1\n@@ -23,7 +23,7 @@ TIMESERVER=http://timestamp.comodoca.com\n CERTFILE=\"win-codesign.cert\"\n \n mkdir -p \"${OUTSUBDIR}\"\n-basename -a `ls -1 \"${SRCDIR}\"/*-unsigned.exe` | while read UNSIGNED; do\n+basename -a $(ls -1 \"${SRCDIR}\"/*-unsigned.exe) | while read UNSIGNED; do\n   echo Signing \"${UNSIGNED}\"\n   \"${OSSLSIGNCODE}\" sign -certs \"${CERTFILE}\" -t \"${TIMESERVER}\" -in \"${SRCDIR}/${UNSIGNED}\" -out \"${WORKDIR}/${UNSIGNED}\" \"$@\"\n   \"${OSSLSIGNCODE}\" extract-signature -pem -in \"${WORKDIR}/${UNSIGNED}\" -out \"${OUTSUBDIR}/${UNSIGNED}.pem\" && rm \"${WORKDIR}/${UNSIGNED}\""
      },
      {
        "sha": "cd6214d5fab259ecc8e9cbaa883c35dd06e31b39",
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -24,9 +24,9 @@ git_check_in_repo() {\n \n DESC=\"\"\n SUFFIX=\"\"\n-if [ \"${BITCOIN_GENBUILD_NO_GIT}\" != \"1\" -a -e \"$(which git 2>/dev/null)\" -a \"$(git rev-parse --is-inside-work-tree 2>/dev/null)\" = \"true\" ] && git_check_in_repo share/genbuild.sh; then\n+if [ \"${BITCOIN_GENBUILD_NO_GIT}\" != \"1\" ] && [ -e \"$(command -v git)\" ] && [ \"$(git rev-parse --is-inside-work-tree 2>/dev/null)\" = \"true\" ] && git_check_in_repo share/genbuild.sh; then\n     # clean 'dirty' status of touched files that haven't been modified\n-    git diff >/dev/null 2>/dev/null \n+    git diff >/dev/null 2>/dev/null\n \n     # if latest commit is tagged and not dirty, then override using the tag name\n     RAWDESC=$(git describe --abbrev=0 2>/dev/null)"
      },
      {
        "sha": "3507837da944f8f2fa5853a34ecd28c0ae6c0fe7",
        "filename": "src/qt/res/movies/makespinner.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/src/qt/res/movies/makespinner.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/src/qt/res/movies/makespinner.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/movies/makespinner.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -9,6 +9,6 @@ FRAMEDIR=$(dirname $0)\n for i in {0..35}\n do\n     frame=$(printf \"%03d\" $i)\n-    angle=$(($i * 10))\n+    angle=$((i * 10))\n     convert $FRAMEDIR/../src/spinner.png -background \"rgba(0,0,0,0.0)\" -distort SRT $angle $FRAMEDIR/spinner-$frame.png\n done"
      },
      {
        "sha": "5603456e62e96401b03b730d2cfc90cf9e727821",
        "filename": "test/lint/commit-script-check.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/test/lint/commit-script-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/test/lint/commit-script-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/commit-script-check.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -18,12 +18,12 @@ if test \"x$1\" = \"x\"; then\n fi\n \n RET=0\n-PREV_BRANCH=`git name-rev --name-only HEAD`\n-PREV_HEAD=`git rev-parse HEAD`\n-for commit in `git rev-list --reverse $1`; do\n+PREV_BRANCH=$(git name-rev --name-only HEAD)\n+PREV_HEAD=$(git rev-parse HEAD)\n+for commit in $(git rev-list --reverse $1); do\n     if git rev-list -n 1 --pretty=\"%s\" $commit | grep -q \"^scripted-diff:\"; then\n         git checkout --quiet $commit^ || exit\n-        SCRIPT=\"`git rev-list --format=%b -n1 $commit | sed '/^-BEGIN VERIFY SCRIPT-$/,/^-END VERIFY SCRIPT-$/{//!b};d'`\"\n+        SCRIPT=\"$(git rev-list --format=%b -n1 $commit | sed '/^-BEGIN VERIFY SCRIPT-$/,/^-END VERIFY SCRIPT-$/{//!b};d')\"\n         if test \"x$SCRIPT\" = \"x\"; then\n             echo \"Error: missing script for: $commit\"\n             echo \"Failed\""
      },
      {
        "sha": "8607fc437139aa57a318fd06effd3f531134f847",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -39,7 +39,7 @@ CIRCULAR_DEPENDENCIES=()\n \n IFS=$'\\n'\n for CIRC in $(cd src && ../contrib/devtools/circular-dependencies.py {*,*/*,*/*/*}.{h,cpp} | sed -e 's/^Circular dependency: //'); do\n-    CIRCULAR_DEPENDENCIES+=($CIRC)\n+    CIRCULAR_DEPENDENCIES+=( \"$CIRC\" )\n     IS_EXPECTED_CIRC=0\n     for EXPECTED_CIRC in \"${EXPECTED_CIRCULAR_DEPENDENCIES[@]}\"; do\n         if [[ \"${CIRC}\" == \"${EXPECTED_CIRC}\" ]]; then"
      },
      {
        "sha": "632ed7c812879b1c5e815422c8cb39f1cfd75e1c",
        "filename": "test/lint/lint-logs.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/test/lint/lint-logs.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/test/lint/lint-logs.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-logs.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -19,6 +19,7 @@ UNTERMINATED_LOGS=$(git grep --extended-regexp \"LogPrintf?\\(\" -- \"*.cpp\" | \\\n     grep -v \"LogPrint()\" | \\\n     grep -v \"LogPrintf()\")\n if [[ ${UNTERMINATED_LOGS} != \"\" ]]; then\n+    # shellcheck disable=SC2028\n     echo \"All calls to LogPrintf() and LogPrint() should be terminated with \\\\n\"\n     echo\n     echo \"${UNTERMINATED_LOGS}\""
      },
      {
        "sha": "69fc3cf36833ce4cdbb6a4da2e2cffa83c7255dd",
        "filename": "test/lint/lint-shell.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac454a3844b9b8389de0f660fa9455c0efa7140/test/lint/lint-shell.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac454a3844b9b8389de0f660fa9455c0efa7140/test/lint/lint-shell.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-shell.sh?ref=1ac454a3844b9b8389de0f660fa9455c0efa7140",
        "patch": "@@ -23,25 +23,9 @@ fi\n \n # Disabled warnings:\n disabled=(\n-    SC1087 # Use braces when expanding arrays, e.g. ${array[idx]} (or ${var}[.. to quiet).\n-    SC2001 # See if you can use ${variable//search/replace} instead.\n-    SC2004 # $/${} is unnecessary on arithmetic variables.\n-    SC2005 # Useless echo? Instead of 'echo $(cmd)', just use 'cmd'.\n-    SC2006 # Use $(..) instead of legacy `..`.\n-    SC2016 # Expressions don't expand in single quotes, use double quotes for that.\n-    SC2028 # echo won't expand escape sequences. Consider printf.\n     SC2046 # Quote this to prevent word splitting.\n-    SC2048 # Use \"$@\" (with quotes) to prevent whitespace problems.\n-    SC2066 # Since you double quoted this, it will not word split, and the loop will only run once.\n     SC2086 # Double quote to prevent globbing and word splitting.\n-    SC2116 # Useless echo? Instead of 'cmd $(echo foo)', just use 'cmd foo'.\n     SC2162 # read without -r will mangle backslashes.\n-    SC2166 # Prefer [ p ] {&&,||} [ q ] as [ p -{a,o} q ] is not well defined.\n-    SC2181 # Check exit code directly with e.g. 'if mycmd;', not indirectly with $?.\n-    SC2206 # Quote to prevent word splitting, or split robustly with mapfile or read -a.\n-    SC2207 # Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n-    SC2230 # which is non-standard. Use builtin 'command -v' instead.\n-    SC2236 # Don't force -n instead of ! -z.\n )\n shellcheck -e \"$(IFS=\",\"; echo \"${disabled[*]}\")\" \\\n     $(git ls-files -- \"*.sh\" | grep -vE 'src/(secp256k1|univalue)/')"
      }
    ]
  }
]