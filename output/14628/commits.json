[
  {
    "sha": "4ed730802f9ec3d65477a29a318dd78216ef7085",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWQ3MzA4MDJmOWVjM2Q2NTQ3N2EyOWEzMThkZDc4MjE2ZWY3MDg1",
    "commit": {
      "author": {
        "name": "Murray Nesbitt",
        "email": "github@nesbitt.ca",
        "date": "2018-11-01T09:19:55Z"
      },
      "committer": {
        "name": "Murray Nesbitt",
        "email": "github@nesbitt.ca",
        "date": "2018-11-05T12:01:47Z"
      },
      "message": "scripted-diff: Rename misleading 'defaultPort' to 'http_port'\n\n-BEGIN VERIFY SCRIPT-\nsed -i -e 's/\\<defaultPort\\>/http_port/g' src/httpserver.cpp\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "5adda1f90219308f2f5ffca355d5832a1f743b1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5adda1f90219308f2f5ffca355d5832a1f743b1a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ed730802f9ec3d65477a29a318dd78216ef7085",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ed730802f9ec3d65477a29a318dd78216ef7085",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4ed730802f9ec3d65477a29a318dd78216ef7085",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ed730802f9ec3d65477a29a318dd78216ef7085/comments",
    "author": {
      "login": "murrayn",
      "id": 5404807,
      "node_id": "MDQ6VXNlcjU0MDQ4MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5404807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murrayn",
      "html_url": "https://github.com/murrayn",
      "followers_url": "https://api.github.com/users/murrayn/followers",
      "following_url": "https://api.github.com/users/murrayn/following{/other_user}",
      "gists_url": "https://api.github.com/users/murrayn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murrayn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murrayn/subscriptions",
      "organizations_url": "https://api.github.com/users/murrayn/orgs",
      "repos_url": "https://api.github.com/users/murrayn/repos",
      "events_url": "https://api.github.com/users/murrayn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murrayn/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "murrayn",
      "id": 5404807,
      "node_id": "MDQ6VXNlcjU0MDQ4MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5404807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murrayn",
      "html_url": "https://github.com/murrayn",
      "followers_url": "https://api.github.com/users/murrayn/followers",
      "following_url": "https://api.github.com/users/murrayn/following{/other_user}",
      "gists_url": "https://api.github.com/users/murrayn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murrayn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murrayn/subscriptions",
      "organizations_url": "https://api.github.com/users/murrayn/orgs",
      "repos_url": "https://api.github.com/users/murrayn/repos",
      "events_url": "https://api.github.com/users/murrayn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murrayn/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b312579c69f10f23f62934b8f860cef89c2ffe87",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b312579c69f10f23f62934b8f860cef89c2ffe87",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b312579c69f10f23f62934b8f860cef89c2ffe87"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "3e4a060bcc03e28ed5e3a54defc5e63569b03db9",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ed730802f9ec3d65477a29a318dd78216ef7085/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ed730802f9ec3d65477a29a318dd78216ef7085/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=4ed730802f9ec3d65477a29a318dd78216ef7085",
        "patch": "@@ -292,26 +292,26 @@ static bool ThreadHTTP(struct event_base* base)\n /** Bind HTTP server to specified addresses */\n static bool HTTPBindAddresses(struct evhttp* http)\n {\n-    int defaultPort = gArgs.GetArg(\"-rpcport\", BaseParams().RPCPort());\n+    int http_port = gArgs.GetArg(\"-rpcport\", BaseParams().RPCPort());\n     std::vector<std::pair<std::string, uint16_t> > endpoints;\n \n     // Determine what addresses to bind to\n     if (!gArgs.IsArgSet(\"-rpcallowip\")) { // Default to loopback if not allowing external IPs\n-        endpoints.push_back(std::make_pair(\"::1\", defaultPort));\n-        endpoints.push_back(std::make_pair(\"127.0.0.1\", defaultPort));\n+        endpoints.push_back(std::make_pair(\"::1\", http_port));\n+        endpoints.push_back(std::make_pair(\"127.0.0.1\", http_port));\n         if (gArgs.IsArgSet(\"-rpcbind\")) {\n             LogPrintf(\"WARNING: option -rpcbind was ignored because -rpcallowip was not specified, refusing to allow everyone to connect\\n\");\n         }\n     } else if (gArgs.IsArgSet(\"-rpcbind\")) { // Specific bind address\n         for (const std::string& strRPCBind : gArgs.GetArgs(\"-rpcbind\")) {\n-            int port = defaultPort;\n+            int port = http_port;\n             std::string host;\n             SplitHostPort(strRPCBind, port, host);\n             endpoints.push_back(std::make_pair(host, port));\n         }\n     } else { // No specific bind address specified, bind to any\n-        endpoints.push_back(std::make_pair(\"::\", defaultPort));\n-        endpoints.push_back(std::make_pair(\"0.0.0.0\", defaultPort));\n+        endpoints.push_back(std::make_pair(\"::\", http_port));\n+        endpoints.push_back(std::make_pair(\"0.0.0.0\", http_port));\n     }\n \n     // Bind addresses"
      }
    ]
  }
]