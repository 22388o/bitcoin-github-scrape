[
  {
    "sha": "82fc4017b774aaff8799c2b6e8ba5370d94dbf4d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MmZjNDAxN2I3NzRhYWZmODc5OWMyYjZlOGJhNTM3MGQ5NGRiZjRk",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-07-31T01:43:45Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-07-31T01:45:53Z"
      },
      "message": "test: Catch decimal.InvalidOperation from TestNodeCLI#send_cli\n\ndecimal.InvalidOperation is a special case of a float parsing error, which\npresumably should be handled in the same way as a general parsing error,\nrather than blow up.\n\nAlternatives include: logging the error, or re-raising with more information.\n\nExample log output:\n    File \"/home/travis/build/bitcoin/bitcoin/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 603, in sync_all\n      self.sync_blocks(nodes)\n    File \"/home/travis/build/bitcoin/bitcoin/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 568, in sync_blocks\n      best_hash = [x.getbestblockhash() for x in rpc_connections]\n    File \"/home/travis/build/bitcoin/bitcoin/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 568, in <listcomp>\n      best_hash = [x.getbestblockhash() for x in rpc_connections]\n    File \"/home/travis/build/bitcoin/bitcoin/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/test_framework/test_node.py\", line 571, in __call__\n      return self.cli.send_cli(self.command, *args, **kwargs)\n    File \"/home/travis/build/bitcoin/bitcoin/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/test_framework/test_node.py\", line 639, in send_cli\n      return json.loads(cli_stdout, parse_float=decimal.Decimal)\n    File \"/usr/lib64/python3.6/json/__init__.py\", line 367, in loads\n      return cls(**kw).decode(s)\n    File \"/usr/lib64/python3.6/json/decoder.py\", line 339, in decode\n      obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n    File \"/usr/lib64/python3.6/json/decoder.py\", line 355, in raw_decode\n      obj, end = self.scan_once(s, idx)\n  decimal.InvalidOperation: [<class 'decimal.InvalidOperation'>]",
      "tree": {
        "sha": "84c4b6fa2fc9746e16e99cf0e6d74f66f338647a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84c4b6fa2fc9746e16e99cf0e6d74f66f338647a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82fc4017b774aaff8799c2b6e8ba5370d94dbf4d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+XLHXoy4Dim7e8hvTYykuhgECQYFAl8jeHUACgkQTYykuhgE\nCQYhfBAAm8XykW7jdHRQzR8zmTwPMEso25enp3sj5LLAAt9KhckfeMJPSwyKxm+j\nxPANsvfCKuXtVFEAFf79n6TX7z/F4zJEzAOoPqewBUnmDni+zK2aYGpK1a+NoRGw\n1cN3lZ+Ghtguk4NlNJ1nmpVmzIn84t7Xij2+SqAGCGEw0OBQc6ju5ltYwYOhFZIE\n3jW641GQuuFpjOQfCki6ot0WjPME+8OhVJ06ujUg5vQzBXJ6Tq7UGUHYPNNF5rOv\nZKADw3EqqJli3DKHsoShdaf2eaASxVEvspc3sT6QVVaYZRvJoDI8JdnyOZhnY8Zo\nsrpP+rNtxnVdZSApY/Lcnw3GgTLo+iYnqdvMCt2wWVqvBP7J+vSULOYLWJaLAeM+\nqqXQT96ffuZIYe3DCttc9Ayyl4iovpNm9WoPZZUHHa56C9VjV9yNEQhcF7j3c2Hl\n7qKW6arnB0a/c1QrbFQGJk3xy8nft56w4ZlqQTo7tkMhflc9annZDUjVcZi7nrld\nfNclKxZMr9wHWErNSSILEZx4Xwr9tIF37hYy4Yc5juw/E/+wOPLJbgC3xbBnkpF1\nEsx28P69zWmpLyWpLVckadN1WiXpbo4oagpOxBeNcbaSeyTQyN6sJXLDXfAI0mtY\nwKbMk0iOQjg9pPSdD3bSAO0DekDcBqvKJ1qpmFPUeSPdc71nlZU=\n=LVTx\n-----END PGP SIGNATURE-----",
        "payload": "tree 84c4b6fa2fc9746e16e99cf0e6d74f66f338647a\nparent a4a279b4f368661ea7d2507dd963469f432f916c\nauthor Ben Woosley <ben.woosley@gmail.com> 1596159825 -0700\ncommitter Ben Woosley <ben.woosley@gmail.com> 1596159953 -0700\n\ntest: Catch decimal.InvalidOperation from TestNodeCLI#send_cli\n\ndecimal.InvalidOperation is a special case of a float parsing error, which\npresumably should be handled in the same way as a general parsing error,\nrather than blow up.\n\nAlternatives include: logging the error, or re-raising with more information.\n\nExample log output:\n    File \"/home/travis/build/bitcoin/bitcoin/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 603, in sync_all\n      self.sync_blocks(nodes)\n    File \"/home/travis/build/bitcoin/bitcoin/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 568, in sync_blocks\n      best_hash = [x.getbestblockhash() for x in rpc_connections]\n    File \"/home/travis/build/bitcoin/bitcoin/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 568, in <listcomp>\n      best_hash = [x.getbestblockhash() for x in rpc_connections]\n    File \"/home/travis/build/bitcoin/bitcoin/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/test_framework/test_node.py\", line 571, in __call__\n      return self.cli.send_cli(self.command, *args, **kwargs)\n    File \"/home/travis/build/bitcoin/bitcoin/ci/scratch/build/bitcoin-i686-pc-linux-gnu/test/functional/test_framework/test_node.py\", line 639, in send_cli\n      return json.loads(cli_stdout, parse_float=decimal.Decimal)\n    File \"/usr/lib64/python3.6/json/__init__.py\", line 367, in loads\n      return cls(**kw).decode(s)\n    File \"/usr/lib64/python3.6/json/decoder.py\", line 339, in decode\n      obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n    File \"/usr/lib64/python3.6/json/decoder.py\", line 355, in raw_decode\n      obj, end = self.scan_once(s, idx)\n  decimal.InvalidOperation: [<class 'decimal.InvalidOperation'>]\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82fc4017b774aaff8799c2b6e8ba5370d94dbf4d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/82fc4017b774aaff8799c2b6e8ba5370d94dbf4d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/82fc4017b774aaff8799c2b6e8ba5370d94dbf4d/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a4a279b4f368661ea7d2507dd963469f432f916c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4a279b4f368661ea7d2507dd963469f432f916c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a4a279b4f368661ea7d2507dd963469f432f916c"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a5abe77870147c76b637e21b4ae67feeea246f5f",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/82fc4017b774aaff8799c2b6e8ba5370d94dbf4d/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/82fc4017b774aaff8799c2b6e8ba5370d94dbf4d/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=82fc4017b774aaff8799c2b6e8ba5370d94dbf4d",
        "patch": "@@ -637,7 +637,7 @@ def send_cli(self, command=None, *args, **kwargs):\n             raise subprocess.CalledProcessError(returncode, self.binary, output=cli_stderr)\n         try:\n             return json.loads(cli_stdout, parse_float=decimal.Decimal)\n-        except json.JSONDecodeError:\n+        except (json.JSONDecodeError, decimal.InvalidOperation):\n             return cli_stdout.rstrip(\"\\n\")\n \n class RPCOverloadWrapper():"
      }
    ]
  }
]