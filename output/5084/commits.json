[
  {
    "sha": "0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZWFjYzY3YjI2YzllOWVjMGUzMWI3OWVkNzBiMmJjYjZhNThjMDBj",
    "commit": {
      "author": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-10-09T02:06:03Z"
      },
      "committer": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-10-13T23:21:34Z"
      },
      "message": "allow compiling of libbitcoind.so.",
      "tree": {
        "sha": "6c472c3114381219d861adc9d6b76ed0463c72ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c472c3114381219d861adc9d6b76ed0463c72ef"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/comments",
    "author": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5505a1b13f75af9f0f6421b42d97c06e079db345",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5505a1b13f75af9f0f6421b42d97c06e079db345",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5505a1b13f75af9f0f6421b42d97c06e079db345"
      }
    ],
    "stats": {
      "total": 333,
      "additions": 308,
      "deletions": 25
    },
    "files": [
      {
        "sha": "3ac3d5c205a6245b48945fdd911517f69bd35381",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
        "patch": "@@ -33,6 +33,11 @@ COVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \\\n   baseline_filtered.info block_test_filtered.info \\\n   leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n \n+if ENABLE_DAEMONLIB\n+all:\n+\t$(MAKE) -C src\n+endif\n+\n dist-hook:\n \t-$(MAKE) -C $(top_distdir)/src/leveldb clean\n \t-$(MAKE) -C $(top_distdir)/src/secp256k1 distclean"
      },
      {
        "sha": "59adc0d3414870f71fe890f10bf1aa4b7d13df72",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 27,
        "deletions": 2,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
        "patch": "@@ -122,6 +122,12 @@ AC_ARG_ENABLE([reduce-exports],\n   [use_reduce_exports=$enableval],\n   [use_reduce_exports=auto])\n \n+AC_ARG_ENABLE([daemonlib],\n+  [AS_HELP_STRING([--enable-daemonlib],\n+  [compile all of bitcoind as a library (default is no)])],\n+  [use_daemonlib=$enableval],\n+  [use_daemonlib=no])\n+\n AC_ARG_ENABLE([ccache],\n   [AS_HELP_STRING([--enable-ccache],\n   [use ccache for building (default is yes if ccache is found)])],\n@@ -364,6 +370,9 @@ fi\n if test x$use_hardening != xno; then\n   AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n   AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n+  if test x$use_daemonlib = xno; then\n+    AX_CHECK_COMPILE_FLAG([-fPIE],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fPIE\"])\n+  fi\n \n   AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n     AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n@@ -377,7 +386,7 @@ if test x$use_hardening != xno; then\n   AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"])\n   AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n \n-  if test x$TARGET_OS != xwindows; then\n+  if test x$TARGET_OS != xwindows -a x$use_daemonlib = xno; then\n     # All windows code is PIC, forcing it on just adds useless compile warnings\n     AX_CHECK_COMPILE_FLAG([-fPIE],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fPIE\"])\n     AX_CHECK_LINK_FLAG([[-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\n@@ -389,6 +398,15 @@ if test x$use_hardening != xno; then\n   OBJCXXFLAGS=\"$CXXFLAGS\"\n fi\n \n+AM_CONDITIONAL(ENABLE_DAEMONLIB, [false])\n+if test x$use_daemonlib != xno; then\n+  AX_CHECK_COMPILE_FLAG([-fPIE],[DAEMONLIB_CXXFLAGS=\"$DAEMONLIB_CXXFLAGS -fPIC\"])\n+  AM_CONDITIONAL(ENABLE_DAEMONLIB, [true])\n+  CXXFLAGS=\"$CXXFLAGS $DAEMONLIB_CXXFLAGS\"\n+  CPPFLAGS=\"$CPPFLAGS $DAEMONLIB_CPPFLAGS\"\n+  OBJCXXFLAGS=\"$CXXFLAGS\"\n+fi\n+\n dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n if test x$TARGET_OS = xdarwin; then\n   AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n@@ -432,7 +450,7 @@ AC_LINK_IFELSE([AC_LANG_SOURCE([\n   ]\n )\n \n-if test x$use_reduce_exports != xno; then\n+if test x$use_reduce_exports != xno -a x$use_daemonlib = xno; then\n   AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n   [\n     if test x$use_reduce_exports = xyes; then\n@@ -763,6 +781,13 @@ else\n   AC_MSG_RESULT([no])\n fi\n \n+AC_MSG_CHECKING([whether to compile as daemonlib])\n+if test x$use_daemonlib != xno; then\n+  AC_MSG_RESULT([yes])\n+else\n+  AC_MSG_RESULT([no])\n+fi\n+\n if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\n   AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-daemon --with-gui or --enable-tests])\n fi"
      },
      {
        "sha": "26917c05abdf85c32eb8dc68aac0603e801746cb",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
        "patch": "@@ -235,3 +235,42 @@ In this case there is no dependency on Berkeley DB 4.8.\n Mining is also possible in disable-wallet mode, but only using the `getblocktemplate` RPC\n call not `getwork`.\n \n+Compiling bitcoind as a shared object (`libbitcoind.so`)\n+--------------------------------------------------------\n+\n+### Compiling as a library\n+\n+``` bash\n+# ensure clean up\n+$ make clean\n+\n+# create configure file\n+$ ./autogen.sh\n+\n+# configure as a library with -fPIC on all object files\n+# use --with-incompatible-bdb if necessary\n+# use --prefix=/usr if necessary\n+$ ./configure --enable-daemonlib\n+\n+# build libbitcoind.so\n+$ time make\n+...\n+real    31m33.128s\n+user    16m23.930s\n+sys     2m52.310s\n+```\n+\n+`--enable-daemonlib` will compile all object files with `-fPIC` (Position\n+Independent Code - needed to create a shared object).\n+\n+`make` will then compile `./src/libbitcoind.so` (with `-shared -fPIC`), linking\n+to all the freshly compiled PIC object files. This will completely ignore\n+compiling tests and the QT object files.\n+\n+Without `--enable-daemonlib`, the Makefile with compile bitcoind with -fPIE\n+(Position Independent for Executable), this allows compiling of bitcoind.\n+\n+#### Todo\n+\n+- Find a way to compile bitcoind and libbitcoind.so at the same time without\n+  recompiling object files each time? Possibly use libtool's .lo/.la."
      },
      {
        "sha": "9112c585666943ee7e4858b4d84af94c1b1db95c",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 18,
        "deletions": 1,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
        "patch": "@@ -35,7 +35,9 @@ LIBBITCOIN_UTIL=libbitcoin_util.a\n LIBBITCOIN_CRYPTO=crypto/libbitcoin_crypto.a\n LIBBITCOIN_UNIVALUE=univalue/libbitcoin_univalue.a\n LIBBITCOINQT=qt/libbitcoinqt.a\n+LIBBITCOIND=libbitcoind.so\n \n+if !ENABLE_DAEMONLIB\n noinst_LIBRARIES = \\\n   libbitcoin_server.a \\\n   libbitcoin_common.a \\\n@@ -68,6 +70,7 @@ BITCOIN_CORE_H = \\\n   amount.h \\\n   base58.h \\\n   bloom.h \\\n+  bitcoind.h \\\n   chain.h \\\n   chainparams.h \\\n   chainparamsbase.h \\\n@@ -100,6 +103,7 @@ BITCOIN_CORE_H = \\\n   rpcclient.h \\\n   rpcprotocol.h \\\n   rpcserver.h \\\n+  rpcwallet.h \\\n   script/compressor.h \\\n   script/interpreter.h \\\n   script/script.h \\\n@@ -136,10 +140,17 @@ JSON_H = \\\n   json/json_spirit_writer.h \\\n   json/json_spirit_writer_template.h\n \n+else\n+.PHONY: FORCE\n+BITCOIN_INCLUDES += $(BDB_CPPFLAGS)\n+endif\n+\n obj/build.h: FORCE\n \t@$(MKDIR_P) $(builddir)/obj\n \t@$(top_srcdir)/share/genbuild.sh $(abs_top_builddir)/src/obj/build.h \\\n \t  $(abs_top_srcdir)\n+\n+if !ENABLE_DAEMONLIB\n libbitcoin_util_a-version.$(OBJEXT): obj/build.h\n \n # server: shared between bitcoind and bitcoin-qt\n@@ -149,6 +160,7 @@ libbitcoin_server_a_SOURCES = \\\n   alert.cpp \\\n   bloom.cpp \\\n   chain.cpp \\\n+  bitcoind.cpp \\\n   checkpoints.cpp \\\n   init.cpp \\\n   leveldbwrapper.cpp \\\n@@ -274,7 +286,7 @@ endif\n if ENABLE_WALLET\n bitcoind_LDADD += libbitcoin_wallet.a\n endif\n-bitcoind_SOURCES = bitcoind.cpp\n+bitcoind_SOURCES = bitcoind_main.cpp\n #\n \n if TARGET_WINDOWS\n@@ -327,6 +339,7 @@ if TARGET_WINDOWS\n bitcoin_cli_SOURCES += bitcoin-cli-res.rc\n endif\n bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS)\n+endif\n \n CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno\n \n@@ -352,6 +365,9 @@ clean-local:\n \t@test -f $(PROTOC)\n \t$(AM_V_GEN) $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)\n \n+if ENABLE_DAEMONLIB\n+include Makefile.daemon.include\n+else\n if ENABLE_TESTS\n include Makefile.test.include\n endif\n@@ -363,3 +379,4 @@ endif\n if ENABLE_QT_TESTS\n include Makefile.qttest.include\n endif\n+endif"
      },
      {
        "sha": "6ec015be29d2fea0db0ee56e87ee41f20884b518",
        "filename": "src/Makefile.daemon.include",
        "status": "added",
        "additions": 151,
        "deletions": 0,
        "changes": 151,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/Makefile.daemon.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/Makefile.daemon.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.daemon.include?ref=0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
        "patch": "@@ -0,0 +1,151 @@\n+all: $(LIBBITCOIND)\n+\n+leveldb_objects = \\\n+  leveldb/db/builder.o \\\n+  leveldb/db/c.o \\\n+  leveldb/db/dbformat.o \\\n+  leveldb/db/db_impl.o \\\n+  leveldb/db/db_iter.o \\\n+  leveldb/db/filename.o \\\n+  leveldb/db/log_reader.o \\\n+  leveldb/db/log_writer.o \\\n+  leveldb/db/memtable.o \\\n+  leveldb/db/repair.o \\\n+  leveldb/db/table_cache.o \\\n+  leveldb/db/version_edit.o \\\n+  leveldb/db/version_set.o \\\n+  leveldb/db/write_batch.o \\\n+  leveldb/table/block_builder.o \\\n+  leveldb/table/block.o \\\n+  leveldb/table/filter_block.o \\\n+  leveldb/table/format.o \\\n+  leveldb/table/iterator.o \\\n+  leveldb/table/merger.o \\\n+  leveldb/table/table_builder.o \\\n+  leveldb/table/table.o \\\n+  leveldb/table/two_level_iterator.o \\\n+  leveldb/util/arena.o \\\n+  leveldb/util/bloom.o \\\n+  leveldb/util/cache.o \\\n+  leveldb/util/coding.o \\\n+  leveldb/util/comparator.o \\\n+  leveldb/util/crc32c.o \\\n+  leveldb/util/env.o \\\n+  leveldb/util/env_posix.o \\\n+  leveldb/util/env_win.o \\\n+  leveldb/util/filter_policy.o \\\n+  leveldb/util/hash.o \\\n+  leveldb/util/histogram.o \\\n+  leveldb/util/logging.o \\\n+  leveldb/util/options.o \\\n+  leveldb/util/status.o \\\n+  leveldb/port/port_posix.o \\\n+  leveldb/helpers/memenv/memenv.o\n+\n+libbitcoind_json_objects = \\\n+  json/json_spirit_reader.o \\\n+  json/json_spirit_value.o \\\n+  json/json_spirit_writer.o\n+\n+libbitcoind_server_objects = \\\n+  addrman.o \\\n+  alert.o \\\n+  bloom.o \\\n+  chain.o \\\n+  bitcoind.o \\\n+  checkpoints.o \\\n+  init.o \\\n+  leveldbwrapper.o \\\n+  main.o \\\n+  miner.o \\\n+  net.o \\\n+  noui.o \\\n+  pow.o \\\n+  rpcblockchain.o \\\n+  rpcmining.o \\\n+  rpcmisc.o \\\n+  rpcnet.o \\\n+  rpcrawtransaction.o \\\n+  rpcserver.o \\\n+  timedata.o \\\n+  txdb.o \\\n+  txmempool.o\n+\n+libbitcoind_wallet_objects = \\\n+  db.o \\\n+  crypter.o \\\n+  rpcdump.o \\\n+  rpcwallet.o \\\n+  wallet.o \\\n+  wallet_ismine.o \\\n+  walletdb.o\n+\n+libbitcoind_crypto_objects = \\\n+  crypto/sha1.o \\\n+  crypto/sha2.o \\\n+  crypto/ripemd160.o\n+\n+libbitcoind_univalue_objects = \\\n+  univalue/gen.o \\\n+  univalue/univalue.o \\\n+  univalue/univalue_read.o \\\n+  univalue/univalue_write.o\n+\n+libbitcoind_common_objects = \\\n+  allocators.o \\\n+  base58.o \\\n+  chainparams.o \\\n+  coins.o \\\n+  core.o \\\n+  core_read.o \\\n+  core_write.o \\\n+  hash.o \\\n+  key.o \\\n+  keystore.o \\\n+  netbase.o \\\n+  protocol.o \\\n+  script/compressor.o \\\n+  script/interpreter.o \\\n+  script/script.o \\\n+  script/sigcache.o \\\n+  script/sign.o \\\n+  script/standard.o\n+\n+libbitcoind_util_objects = \\\n+  compat/glibc_sanity.o \\\n+  compat/glibcxx_sanity.o \\\n+  chainparamsbase.o \\\n+  random.o \\\n+  rpcprotocol.o \\\n+  sync.o \\\n+  uint256.o \\\n+  util.o \\\n+  utilstrencodings.o \\\n+  utilmoneystr.o \\\n+  utiltime.o \\\n+  version.o\n+\n+if GLIBC_BACK_COMPAT\n+libbitcoind_util_objects += compat/glibc_compat.o\n+libbitcoind_util_objects += compat/glibcxx_compat.o\n+endif\n+\n+libbitcoind_cli_objects = \\\n+  rpcclient.o\n+\n+libbitcoind_all_objects = \\\n+  $(libbitcoind_server_objects) \\\n+  $(libbitcoind_wallet_objects) \\\n+  $(libbitcoind_crypto_objects) \\\n+  $(libbitcoind_univalue_objects) \\\n+  $(libbitcoind_common_objects) \\\n+  $(libbitcoind_util_objects) \\\n+  $(libbitcoind_cli_objects)\n+\n+version.o: version.cpp obj/build.h\n+\t$(AM_V_CXX) $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n+\t  $(BITCOIN_INCLUDES) $(BITCOIN_CONFIG_INCLUDES) $(AM_CPPFLAGS) \\\n+\t  $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c $< -o $@\n+\n+$(LIBBITCOIND): $(LIBLEVELDB) $(LIBMEMENV) $(libbitcoind_all_objects)\n+\t$(CC) -shared $(CXXFLAGS) $(CPPFLAGS) $(DEFS) $(BITCOIN_INCLUDES) $(BITCOIN_CONFIG_INCLUDES) -o $@ $(BOOST_LIBS) $(BDB_LIBS) $(PROTOBUF_LIBS) $(SSL_LIBS) $(LIBS) $(leveldb_objects) $(libbitcoind_all_objects)"
      },
      {
        "sha": "53de91d7e3f1ceba0de26858205635f554d97e5e",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 20,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
        "patch": "@@ -3,16 +3,7 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include \"rpcserver.h\"\n-#include \"init.h\"\n-#include \"main.h\"\n-#include \"noui.h\"\n-#include \"ui_interface.h\"\n-#include \"util.h\"\n-\n-#include <boost/algorithm/string/predicate.hpp>\n-#include <boost/filesystem.hpp>\n-#include <boost/thread.hpp>\n+#include \"bitcoind.h\"\n \n /* Introduction text for doxygen: */\n \n@@ -170,13 +161,3 @@ bool AppInit(int argc, char* argv[])\n \n     return fRet;\n }\n-\n-int main(int argc, char* argv[])\n-{\n-    SetupEnvironment();\n-\n-    // Connect bitcoind signal handlers\n-    noui_connect();\n-\n-    return (AppInit(argc, argv) ? 0 : 1);\n-}"
      },
      {
        "sha": "1920b8aa5ee23c09ae08ecca7fdc56d33dc739e5",
        "filename": "src/bitcoind.h",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/bitcoind.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/bitcoind.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.h?ref=0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
        "patch": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef _BITCOIN_BITCOIND\n+#define _BITCOIN_BITCOIND 1\n+\n+#include \"rpcserver.h\"\n+#include \"rpcclient.h\"\n+#include \"init.h\"\n+#include \"main.h\"\n+#include \"noui.h\"\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+\n+#include <boost/algorithm/string/predicate.hpp>\n+#include <boost/filesystem.hpp>\n+#include <boost/thread.hpp>\n+\n+extern void DetectShutdownThread(boost::thread_group* threadGroup);\n+extern bool AppInit(int argc, char* argv[]);\n+\n+#endif"
      },
      {
        "sha": "b37f9cf4f703c0dc45bba5642b62a7dad73168c0",
        "filename": "src/bitcoind_main.cpp",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/bitcoind_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/bitcoind_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind_main.cpp?ref=0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
        "patch": "@@ -0,0 +1,15 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"bitcoind.h\"\n+\n+int main(int argc, char* argv[]) {\n+    SetupEnvironment();\n+\n+    // Connect bitcoind signal handlers\n+    noui_connect();\n+\n+    return (AppInit(argc, argv) ? 0 : 1);\n+}"
      },
      {
        "sha": "dd60da2a6d47c7ee6e428a066fb60022ec846866",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
        "patch": "@@ -15,7 +15,15 @@ namespace boost\n class thread_group;\n } // namespace boost\n \n+#ifdef ENABLE_WALLET\n+extern std::string strWalletFile;\n extern CWallet* pwalletMain;\n+#endif\n+\n+#include <boost/filesystem/path.hpp>\n+#include <boost/thread/mutex.hpp>\n+\n+void ThreadImport(std::vector<boost::filesystem::path> vImportFiles);\n \n void StartShutdown();\n bool ShutdownRequested();"
      },
      {
        "sha": "832ff84ea235a127e2bfef781478ffdc70c3c967",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
        "patch": "@@ -3,6 +3,8 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"rpcwallet.h\"\n+\n #include \"base58.h\"\n #include \"core_io.h\"\n #include \"rpcserver.h\""
      },
      {
        "sha": "2b532414efed53a91bafbc2567da76cb104f3866",
        "filename": "src/rpcwallet.h",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/rpcwallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/rpcwallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.h?ref=0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
        "patch": "@@ -0,0 +1,17 @@\n+// Copyright (c) 2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef _BITCOINRPC_WALLET_H_\n+#define _BITCOINRPC_WALLET_H_ 1\n+\n+#include \"wallet.h\"\n+#include \"walletdb.h\"\n+\n+#include <stdint.h>\n+\n+CAmount GetAccountBalance(CWalletDB& walletdb, const std::string& strAccount, int nMinDepth, const isminefilter& filter);\n+CAmount GetAccountBalance(const std::string& strAccount, int nMinDepth, const isminefilter& filter);\n+\n+#endif"
      },
      {
        "sha": "e881fec12484b38951489c589d1bc408ccc75c6c",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
        "patch": "@@ -98,8 +98,6 @@ class CAddressBookData\n class CWallet : public CCryptoKeyStore, public CWalletInterface\n {\n private:\n-    bool SelectCoins(const CAmount& nTargetValue, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, CAmount& nValueRet, const CCoinControl *coinControl = NULL) const;\n-\n     CWalletDB *pwalletdbEncryption;\n \n     // the current wallet version: clients below this version are not able to load the wallet\n@@ -182,6 +180,7 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     bool CanSupportFeature(enum WalletFeature wf) { AssertLockHeld(cs_wallet); return nWalletMaxVersion >= wf; }\n \n     void AvailableCoins(std::vector<COutput>& vCoins, bool fOnlyConfirmed=true, const CCoinControl *coinControl = NULL) const;\n+    bool SelectCoins(const CAmount& nTargetValue, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, CAmount& nValueRet, const CCoinControl *coinControl = NULL) const;\n     bool SelectCoinsMinConf(const CAmount& nTargetValue, int nConfMine, int nConfTheirs, std::vector<COutput> vCoins, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, CAmount& nValueRet) const;\n \n     bool IsSpent(const uint256& hash, unsigned int n) const;"
      }
    ]
  },
  {
    "sha": "f0e920773a542077db770fee0a62fcf2fa184fd0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMGU5MjA3NzNhNTQyMDc3ZGI3NzBmZWUwYTYyZmNmMmZhMTg0ZmQw",
    "commit": {
      "author": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-10-16T18:28:30Z"
      },
      "committer": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-10-16T18:28:30Z"
      },
      "message": "fix fPIE typo in configure.ac.",
      "tree": {
        "sha": "0686f0186c9f0d2b63a2384578bd9951c620c182",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0686f0186c9f0d2b63a2384578bd9951c620c182"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f0e920773a542077db770fee0a62fcf2fa184fd0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0e920773a542077db770fee0a62fcf2fa184fd0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f0e920773a542077db770fee0a62fcf2fa184fd0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0e920773a542077db770fee0a62fcf2fa184fd0/comments",
    "author": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0eacc67b26c9e9ec0e31b79ed70b2bcb6a58c00c"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "30c9d19e8a61594e835fdb251010757b3a5c9e4e",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f0e920773a542077db770fee0a62fcf2fa184fd0/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f0e920773a542077db770fee0a62fcf2fa184fd0/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=f0e920773a542077db770fee0a62fcf2fa184fd0",
        "patch": "@@ -400,7 +400,7 @@ fi\n \n AM_CONDITIONAL(ENABLE_DAEMONLIB, [false])\n if test x$use_daemonlib != xno; then\n-  AX_CHECK_COMPILE_FLAG([-fPIE],[DAEMONLIB_CXXFLAGS=\"$DAEMONLIB_CXXFLAGS -fPIC\"])\n+  AX_CHECK_COMPILE_FLAG([-fPIC],[DAEMONLIB_CXXFLAGS=\"$DAEMONLIB_CXXFLAGS -fPIC\"])\n   AM_CONDITIONAL(ENABLE_DAEMONLIB, [true])\n   CXXFLAGS=\"$CXXFLAGS $DAEMONLIB_CXXFLAGS\"\n   CPPFLAGS=\"$CPPFLAGS $DAEMONLIB_CPPFLAGS\""
      }
    ]
  },
  {
    "sha": "30526259027da3351c5ba64de4ddfecdc44c0507",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDUyNjI1OTAyN2RhMzM1MWM1YmE2NGRlNGRkZmVjZGM0NGMwNTA3",
    "commit": {
      "author": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-10-20T23:41:22Z"
      },
      "committer": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-10-20T23:50:11Z"
      },
      "message": "build: make libbitcoind more concise.",
      "tree": {
        "sha": "e743eacf7bcf51de24f9749fa368c505c7ca929e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e743eacf7bcf51de24f9749fa368c505c7ca929e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30526259027da3351c5ba64de4ddfecdc44c0507",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30526259027da3351c5ba64de4ddfecdc44c0507",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/30526259027da3351c5ba64de4ddfecdc44c0507",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30526259027da3351c5ba64de4ddfecdc44c0507/comments",
    "author": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f0e920773a542077db770fee0a62fcf2fa184fd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0e920773a542077db770fee0a62fcf2fa184fd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f0e920773a542077db770fee0a62fcf2fa184fd0"
      }
    ],
    "stats": {
      "total": 159,
      "additions": 19,
      "deletions": 140
    },
    "files": [
      {
        "sha": "ad38416d7dfa6bb31997be9cb65c620a514f318b",
        "filename": "src/Makefile.daemon.include",
        "status": "modified",
        "additions": 19,
        "deletions": 140,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30526259027da3351c5ba64de4ddfecdc44c0507/src/Makefile.daemon.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30526259027da3351c5ba64de4ddfecdc44c0507/src/Makefile.daemon.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.daemon.include?ref=30526259027da3351c5ba64de4ddfecdc44c0507",
        "patch": "@@ -1,151 +1,30 @@\n all: $(LIBBITCOIND)\n \n-leveldb_objects = \\\n-  leveldb/db/builder.o \\\n-  leveldb/db/c.o \\\n-  leveldb/db/dbformat.o \\\n-  leveldb/db/db_impl.o \\\n-  leveldb/db/db_iter.o \\\n-  leveldb/db/filename.o \\\n-  leveldb/db/log_reader.o \\\n-  leveldb/db/log_writer.o \\\n-  leveldb/db/memtable.o \\\n-  leveldb/db/repair.o \\\n-  leveldb/db/table_cache.o \\\n-  leveldb/db/version_edit.o \\\n-  leveldb/db/version_set.o \\\n-  leveldb/db/write_batch.o \\\n-  leveldb/table/block_builder.o \\\n-  leveldb/table/block.o \\\n-  leveldb/table/filter_block.o \\\n-  leveldb/table/format.o \\\n-  leveldb/table/iterator.o \\\n-  leveldb/table/merger.o \\\n-  leveldb/table/table_builder.o \\\n-  leveldb/table/table.o \\\n-  leveldb/table/two_level_iterator.o \\\n-  leveldb/util/arena.o \\\n-  leveldb/util/bloom.o \\\n-  leveldb/util/cache.o \\\n-  leveldb/util/coding.o \\\n-  leveldb/util/comparator.o \\\n-  leveldb/util/crc32c.o \\\n-  leveldb/util/env.o \\\n-  leveldb/util/env_posix.o \\\n-  leveldb/util/env_win.o \\\n-  leveldb/util/filter_policy.o \\\n-  leveldb/util/hash.o \\\n-  leveldb/util/histogram.o \\\n-  leveldb/util/logging.o \\\n-  leveldb/util/options.o \\\n-  leveldb/util/status.o \\\n-  leveldb/port/port_posix.o \\\n-  leveldb/helpers/memenv/memenv.o\n-\n-libbitcoind_json_objects = \\\n-  json/json_spirit_reader.o \\\n-  json/json_spirit_value.o \\\n-  json/json_spirit_writer.o\n-\n-libbitcoind_server_objects = \\\n-  addrman.o \\\n-  alert.o \\\n-  bloom.o \\\n-  chain.o \\\n-  bitcoind.o \\\n-  checkpoints.o \\\n-  init.o \\\n-  leveldbwrapper.o \\\n-  main.o \\\n-  miner.o \\\n-  net.o \\\n-  noui.o \\\n-  pow.o \\\n-  rpcblockchain.o \\\n-  rpcmining.o \\\n-  rpcmisc.o \\\n-  rpcnet.o \\\n-  rpcrawtransaction.o \\\n-  rpcserver.o \\\n-  timedata.o \\\n-  txdb.o \\\n-  txmempool.o\n-\n-libbitcoind_wallet_objects = \\\n-  db.o \\\n-  crypter.o \\\n-  rpcdump.o \\\n-  rpcwallet.o \\\n-  wallet.o \\\n-  wallet_ismine.o \\\n-  walletdb.o\n-\n-libbitcoind_crypto_objects = \\\n-  crypto/sha1.o \\\n-  crypto/sha2.o \\\n-  crypto/ripemd160.o\n-\n-libbitcoind_univalue_objects = \\\n-  univalue/gen.o \\\n-  univalue/univalue.o \\\n-  univalue/univalue_read.o \\\n-  univalue/univalue_write.o\n-\n-libbitcoind_common_objects = \\\n-  allocators.o \\\n-  base58.o \\\n-  chainparams.o \\\n-  coins.o \\\n-  core.o \\\n-  core_read.o \\\n-  core_write.o \\\n-  hash.o \\\n-  key.o \\\n-  keystore.o \\\n-  netbase.o \\\n-  protocol.o \\\n-  script/compressor.o \\\n-  script/interpreter.o \\\n-  script/script.o \\\n-  script/sigcache.o \\\n-  script/sign.o \\\n-  script/standard.o\n-\n-libbitcoind_util_objects = \\\n-  compat/glibc_sanity.o \\\n-  compat/glibcxx_sanity.o \\\n-  chainparamsbase.o \\\n-  random.o \\\n-  rpcprotocol.o \\\n-  sync.o \\\n-  uint256.o \\\n-  util.o \\\n-  utilstrencodings.o \\\n-  utilmoneystr.o \\\n-  utiltime.o \\\n-  version.o\n+libbitcoind_obj = \\\n+\t$(subst bitcoind_main.o,, \\\n+\t\t$(subst bitcoin-cli.o,, \\\n+\t\t$(subst bitcoin-tx.o,, \\\n+\t\t$(subst .cpp,.o,$(wildcard *.cpp))))) \\\n+\t$(subst compat/glibcxx_compat.o,, \\\n+\t\t$(subst compat/glibc_compat.o,, \\\n+\t\t$(subst .cpp,.o,$(wildcard compat/*.cpp)))) \\\n+\t$(subst .cpp,.o,$(wildcard crypto/*.cpp)) \\\n+\t$(subst .cpp,.o,$(wildcard script/*.cpp)) \\\n+\t$(subst .cpp,.o,$(wildcard secp256k1/*.cpp)) \\\n+\t$(subst univalue/gen.o,, \\\n+\t\t$(subst .cpp,.o,$(wildcard univalue/*.cpp)))\n \n if GLIBC_BACK_COMPAT\n-libbitcoind_util_objects += compat/glibc_compat.o\n-libbitcoind_util_objects += compat/glibcxx_compat.o\n+libbitcoind_obj += compat/glibc_compat.o\n+libbitcoind_obj += compat/glibcxx_compat.o\n endif\n \n-libbitcoind_cli_objects = \\\n-  rpcclient.o\n-\n-libbitcoind_all_objects = \\\n-  $(libbitcoind_server_objects) \\\n-  $(libbitcoind_wallet_objects) \\\n-  $(libbitcoind_crypto_objects) \\\n-  $(libbitcoind_univalue_objects) \\\n-  $(libbitcoind_common_objects) \\\n-  $(libbitcoind_util_objects) \\\n-  $(libbitcoind_cli_objects)\n-\n version.o: version.cpp obj/build.h\n \t$(AM_V_CXX) $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n \t  $(BITCOIN_INCLUDES) $(BITCOIN_CONFIG_INCLUDES) $(AM_CPPFLAGS) \\\n \t  $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c $< -o $@\n \n-$(LIBBITCOIND): $(LIBLEVELDB) $(LIBMEMENV) $(libbitcoind_all_objects)\n-\t$(CC) -shared $(CXXFLAGS) $(CPPFLAGS) $(DEFS) $(BITCOIN_INCLUDES) $(BITCOIN_CONFIG_INCLUDES) -o $@ $(BOOST_LIBS) $(BDB_LIBS) $(PROTOBUF_LIBS) $(SSL_LIBS) $(LIBS) $(leveldb_objects) $(libbitcoind_all_objects)\n+$(LIBBITCOIND): $(LIBLEVELDB) $(LIBMEMENV) $(libbitcoind_obj)\n+\t$(CC) -shared -fPIC $(DEFS) $(CPPFLAGS) $(BITCOIN_CONFIG_INCLUDES) \\\n+\t$(BITCOIN_INCLUDES) -o $@ $(BOOST_LIBS) $(BDB_LIBS) \\\n+\t$(PROTOBUF_LIBS) $(SSL_LIBS) $(LIBS) $^"
      }
    ]
  },
  {
    "sha": "0b774fbaa3056ec2f8cdb5e3775e24c48b55c75b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjc3NGZiYWEzMDU2ZWMyZjhjZGI1ZTM3NzVlMjRjNDhiNTVjNzVi",
    "commit": {
      "author": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-10-20T23:52:20Z"
      },
      "committer": {
        "name": "Christopher Jeffrey",
        "email": "chjjeffrey@gmail.com",
        "date": "2014-10-20T23:52:20Z"
      },
      "message": "build: rename bitcoind_main.cpp to bitcoin-main.cpp.",
      "tree": {
        "sha": "df9ee9195a808891f1d49470c4d0a6e114331d9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df9ee9195a808891f1d49470c4d0a6e114331d9e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b774fbaa3056ec2f8cdb5e3775e24c48b55c75b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b774fbaa3056ec2f8cdb5e3775e24c48b55c75b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b774fbaa3056ec2f8cdb5e3775e24c48b55c75b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b774fbaa3056ec2f8cdb5e3775e24c48b55c75b/comments",
    "author": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "chjj",
      "id": 470564,
      "node_id": "MDQ6VXNlcjQ3MDU2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/470564?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chjj",
      "html_url": "https://github.com/chjj",
      "followers_url": "https://api.github.com/users/chjj/followers",
      "following_url": "https://api.github.com/users/chjj/following{/other_user}",
      "gists_url": "https://api.github.com/users/chjj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chjj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chjj/subscriptions",
      "organizations_url": "https://api.github.com/users/chjj/orgs",
      "repos_url": "https://api.github.com/users/chjj/repos",
      "events_url": "https://api.github.com/users/chjj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chjj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30526259027da3351c5ba64de4ddfecdc44c0507",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30526259027da3351c5ba64de4ddfecdc44c0507",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30526259027da3351c5ba64de4ddfecdc44c0507"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a8b1e98db8f3b857915c8d77816df040cc88c39a",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b774fbaa3056ec2f8cdb5e3775e24c48b55c75b/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b774fbaa3056ec2f8cdb5e3775e24c48b55c75b/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=0b774fbaa3056ec2f8cdb5e3775e24c48b55c75b",
        "patch": "@@ -286,7 +286,7 @@ endif\n if ENABLE_WALLET\n bitcoind_LDADD += libbitcoin_wallet.a\n endif\n-bitcoind_SOURCES = bitcoind_main.cpp\n+bitcoind_SOURCES = bitcoin-main.cpp\n #\n \n if TARGET_WINDOWS"
      },
      {
        "sha": "393d1f17a1a72ed013a2b1ed0bbf49748ad73111",
        "filename": "src/Makefile.daemon.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b774fbaa3056ec2f8cdb5e3775e24c48b55c75b/src/Makefile.daemon.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b774fbaa3056ec2f8cdb5e3775e24c48b55c75b/src/Makefile.daemon.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.daemon.include?ref=0b774fbaa3056ec2f8cdb5e3775e24c48b55c75b",
        "patch": "@@ -1,7 +1,7 @@\n all: $(LIBBITCOIND)\n \n libbitcoind_obj = \\\n-\t$(subst bitcoind_main.o,, \\\n+\t$(subst bitcoin-main.o,, \\\n \t\t$(subst bitcoin-cli.o,, \\\n \t\t$(subst bitcoin-tx.o,, \\\n \t\t$(subst .cpp,.o,$(wildcard *.cpp))))) \\"
      },
      {
        "sha": "b37f9cf4f703c0dc45bba5642b62a7dad73168c0",
        "filename": "src/bitcoin-main.cpp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b774fbaa3056ec2f8cdb5e3775e24c48b55c75b/src/bitcoin-main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b774fbaa3056ec2f8cdb5e3775e24c48b55c75b/src/bitcoin-main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-main.cpp?ref=0b774fbaa3056ec2f8cdb5e3775e24c48b55c75b",
        "previous_filename": "src/bitcoind_main.cpp"
      }
    ]
  }
]