[
  {
    "sha": "39034f1ee628dae0bc9da5b1b30b8a424e66d968",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOTAzNGYxZWU2MjhkYWUwYmM5ZGE1YjFiMzBiOGE0MjRlNjZkOTY4",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-07-05T21:39:31Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-09-03T19:49:19Z"
      },
      "message": "Refactor rawtransaction_util's SignTransaction to have previous tx parsing be separate",
      "tree": {
        "sha": "9ab0166fd8e4000175fb702d7adfd53d6251728e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ab0166fd8e4000175fb702d7adfd53d6251728e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39034f1ee628dae0bc9da5b1b30b8a424e66d968",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39034f1ee628dae0bc9da5b1b30b8a424e66d968",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/39034f1ee628dae0bc9da5b1b30b8a424e66d968",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39034f1ee628dae0bc9da5b1b30b8a424e66d968/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7d6f63cc2c2b9c4f07a43619eef0b7314474fffd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d6f63cc2c2b9c4f07a43619eef0b7314474fffd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7d6f63cc2c2b9c4f07a43619eef0b7314474fffd"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 24,
      "deletions": 8
    },
    "files": [
      {
        "sha": "fb8ea8c2273ed6caf8689cdb9c06d9ef8b1bad46",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39034f1ee628dae0bc9da5b1b30b8a424e66d968/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39034f1ee628dae0bc9da5b1b30b8a424e66d968/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=39034f1ee628dae0bc9da5b1b30b8a424e66d968",
        "patch": "@@ -758,7 +758,10 @@ static UniValue signrawtransactionwithkey(const JSONRPCRequest& request)\n     }\n     FindCoins(coins);\n \n-    return SignTransaction(mtx, request.params[2], &keystore, coins, true, request.params[3]);\n+    // Parse the prevtxs array\n+    ParsePrevouts(request.params[2], &keystore, coins);\n+\n+    return SignTransaction(mtx, &keystore, coins, request.params[3]);\n }\n \n static UniValue sendrawtransaction(const JSONRPCRequest& request)"
      },
      {
        "sha": "697c6d45c4adede46132e75b708d49fd1e6e07aa",
        "filename": "src/rpc/rawtransaction_util.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39034f1ee628dae0bc9da5b1b30b8a424e66d968/src/rpc/rawtransaction_util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39034f1ee628dae0bc9da5b1b30b8a424e66d968/src/rpc/rawtransaction_util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.cpp?ref=39034f1ee628dae0bc9da5b1b30b8a424e66d968",
        "patch": "@@ -147,9 +147,8 @@ static void TxInErrorToJSON(const CTxIn& txin, UniValue& vErrorsRet, const std::\n     vErrorsRet.push_back(entry);\n }\n \n-UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival, FillableSigningProvider* keystore, std::map<COutPoint, Coin>& coins, bool is_temp_keystore, const UniValue& hashType)\n+void ParsePrevouts(const UniValue& prevTxsUnival, FillableSigningProvider* keystore, std::map<COutPoint, Coin>& coins)\n {\n-    // Add previous txouts given in the RPC call:\n     if (!prevTxsUnival.isNull()) {\n         UniValue prevTxs = prevTxsUnival.get_array();\n         for (unsigned int idx = 0; idx < prevTxs.size(); ++idx) {\n@@ -197,7 +196,7 @@ UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival\n             }\n \n             // if redeemScript and private keys were given, add redeemScript to the keystore so it can be signed\n-            if (is_temp_keystore && (scriptPubKey.IsPayToScriptHash() || scriptPubKey.IsPayToWitnessScriptHash())) {\n+            if (keystore && (scriptPubKey.IsPayToScriptHash() || scriptPubKey.IsPayToWitnessScriptHash())) {\n                 RPCTypeCheckObj(prevOut,\n                     {\n                         {\"redeemScript\", UniValueType(UniValue::VSTR)},\n@@ -226,7 +225,10 @@ UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival\n             }\n         }\n     }\n+}\n \n+UniValue SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, std::map<COutPoint, Coin>& coins, const UniValue& hashType)\n+{\n     int nHashType = ParseSighashString(hashType);\n \n     bool fHashSingle = ((nHashType & ~SIGHASH_ANYONECANPAY) == SIGHASH_SINGLE);"
      },
      {
        "sha": "b35e6da4cae664084553301581ed0393e13c5242",
        "filename": "src/rpc/rawtransaction_util.h",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39034f1ee628dae0bc9da5b1b30b8a424e66d968/src/rpc/rawtransaction_util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39034f1ee628dae0bc9da5b1b30b8a424e66d968/src/rpc/rawtransaction_util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.h?ref=39034f1ee628dae0bc9da5b1b30b8a424e66d968",
        "patch": "@@ -12,19 +12,27 @@ class UniValue;\n struct CMutableTransaction;\n class Coin;\n class COutPoint;\n+class SigningProvider;\n \n /**\n  * Sign a transaction with the given keystore and previous transactions\n  *\n  * @param  mtx           The transaction to-be-signed\n- * @param  prevTxs       Array of previous txns outputs that tx depends on but may not yet be in the block chain\n  * @param  keystore      Temporary keystore containing signing keys\n  * @param  coins         Map of unspent outputs - coins in mempool and current chain UTXO set, may be extended by previous txns outputs after call\n- * @param  tempKeystore  Whether to use temporary keystore\n  * @param  hashType      The signature hash type\n  * @returns JSON object with details of signed transaction\n  */\n-UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxs, FillableSigningProvider* keystore, std::map<COutPoint, Coin>& coins, bool tempKeystore, const UniValue& hashType);\n+UniValue SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, std::map<COutPoint, Coin>& coins, const UniValue& hashType);\n+\n+/**\n+  * Parse a prevtxs UniValue array and get the map of coins from it\n+  *\n+  * @param  prevTxs       Array of previous txns outputs that tx depends on but may not yet be in the block chain\n+  * @param  keystore      A pointer to the temprorary keystore if there is one\n+  * @param  coins         Map of unspent outputs - coins in mempool and current chain UTXO set, may be extended by previous txns outputs after call\n+  */\n+void ParsePrevouts(const UniValue& prevTxsUnival, FillableSigningProvider* keystore, std::map<COutPoint, Coin>& coins);\n \n /** Create a transaction from univalue parameters */\n CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniValue& outputs_in, const UniValue& locktime, bool rbf);"
      },
      {
        "sha": "551657c37364d75c982e8474650f81ce71e43cb7",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39034f1ee628dae0bc9da5b1b30b8a424e66d968/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39034f1ee628dae0bc9da5b1b30b8a424e66d968/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=39034f1ee628dae0bc9da5b1b30b8a424e66d968",
        "patch": "@@ -3269,7 +3269,10 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n     }\n     pwallet->chain().findCoins(coins);\n \n-    return SignTransaction(mtx, request.params[1], pwallet, coins, false, request.params[2]);\n+    // Parse the prevtxs array\n+    ParsePrevouts(request.params[1], nullptr, coins);\n+\n+    return SignTransaction(mtx, pwallet, coins, request.params[2]);\n }\n \n static UniValue bumpfee(const JSONRPCRequest& request)"
      }
    ]
  }
]