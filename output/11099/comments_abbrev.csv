promag,2017-08-20T22:46:30Z,"Suggestion, reword `Add dumpmempool RPC`.",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-323616955,323616955,
greenaddress,2017-08-21T01:45:31Z,"@promag thanks, updated as for feedback and squashed",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-323627960,323627960,
greenaddress,2017-08-21T11:26:13Z,"@promag thanks, updated as for feedback and split in two commits\n\nre: RPC_INTERNAL_ERROR - didn't immediately found something better, very open to suggestions\n\nAnything else you would add to the test?",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-323719469,323719469,
promag,2017-08-21T21:37:56Z,"I meant maybe not throw, and have the bool in the response.",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-323859945,323859945,
greenaddress,2017-08-21T22:02:58Z,I think the condition is exceptional and deserve a throw of an exception & consistent with the other rpcs (though I don't know if there's a more appropriate exception for it),https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-323864706,323864706,
promag,2017-08-21T22:13:14Z,"I almost agree with that if it wasn't the fact that the function doesn't throw.. but I have no strong opinion on that.\n\nIf the throw stays, then maybe `RPC_MISC_ERROR`. See what causes `RPC_INTERNAL_ERROR`, sound like really bad excpetions.",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-323866570,323866570,
greenaddress,2017-08-22T12:43:31Z,"thanks @jonasschnelli - good points\n\nadded a commit (which i think should be squashed at some point together with ""Add dumpmempool RPC"")",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-324014364,324014364,
jonasschnelli,2017-08-23T10:57:37Z,"utACK ~~cd0ea487422028bec1f5df62ab4c57909c2bcc90~~\n\nMaybe add an rational (possible use-cases) to the PR description. ",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-324294605,324294605,
greenaddress,2017-08-23T11:56:12Z,"@promag updated the exception, thanks\n\n@jonasschnelli updated the description. Please note your utACK points to a commit from @TheBlueMatt. GitHub also tells me there's some changes required, should I ignore that?",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-324306305,324306305,
MarcoFalke,2017-08-23T12:08:18Z,You might even combine the tests with the existing mempool persist test.,https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-324308923,324308923,
greenaddress,2017-08-23T12:17:45Z,"@MarcoFalke I tried with permissions and didn't work. I couldn't find another way to trigger the error.\n\nWill address the other feedback now",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-324311213,324311213,
jnewbery,2017-08-23T17:30:52Z,"> If the throw stays, then maybe RPC_MISC_ERROR. See what causes RPC_INTERNAL_ERROR, sound like really bad excpetions.\n\nI think either is fine. bitcoind should always be able to write to its data directory, so I would say failure to do so counts as an internal error.\n\n> Concept ACK, but I don't like the tests.\n\nI also don't like the test framework messing with bitcoind's data directory",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-324406691,324406691,
greenaddress,2017-08-23T18:57:56Z,"@jnewbery thanks, addressed some feedback. \n\nRe: testing I also don't like messing with the datadir but unless someone has better suggestions the options are keeping it or removing it. \n\n",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-324430795,324430795,
jnewbery,2017-08-23T19:52:12Z,"> the options are keeping it or removing it.\n\nI vote for removing it",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-324443871,324443871,
promag,2017-08-23T21:20:44Z,"> bitcoind should always be able to write to its data directory\n\n@jnewbery `DumpMempool()` ignores failures, treats them irrelevant, hence my initial point of removing the throw in the RPC.",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-324465985,324465985,
greenaddress,2017-08-24T11:55:35Z,"@MarcoFalke I've merged the tests and added your suggestion ""copy the dumped mempool from node0 to node1 and check that it can be loaded. (The nodes are not connected, but share the same blockchain)""\n\nI left in the exception test for now.",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-324614261,324614261,
greenaddress,2017-08-27T20:32:36Z,"Updated slightly the tests only: removed the ugly rename of the node directory in favor of using permissions to make it fail in the test\n\n@MarcoFalke Permissions initially didn't work because there was a rename involved from a tmp file but it works if I use permissions on the tmp file that gets renamed ('mempool.dat.new') so switched to that\n\nI also removed from the test some redundant ass",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-325222936,325222936,
sipa,2017-08-28T06:13:31Z,"utACK d0bfa6a11a66a8c08fe2630472546d0e60175fe3\n\n@jonasschnelli Have your concerns been addressed?",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-325268658,325268658,
greenaddress,2017-08-29T19:09:30Z,@jnewbery thanks! Keep in mind we are not doing permissions on the mempool.dat file as that doesn't work (the dump gets done on a tmp file which then replace the mempool.dat and ignores permissions so we are acting on the tmp file instead),https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-325765186,325765186,
jnewbery,2017-08-29T20:32:07Z,"> Keep in mind we are not doing permissions on the mempool.dat file as that doesn't work (the dump gets done on a tmp file which then replace the mempool.dat and ignores permissions so we are acting on the tmp file instead)\n\nAh. Very crafty! Can you add a comment to the test to explain that (`mempool.dat.new` is an implementation detail - it could potentially be changed in future, breaking thi",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-325794795,325794795,
greenaddress,2017-08-30T00:26:28Z,"@jnewbery I added the comment and removed the sleep. \nI didn't change the logging debug vs info as that imho should be done in a separate PR for all the log statements in the file (i.e. better to be consistent for now)",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-325842089,325842089,
jnewbery,2017-08-31T18:51:49Z,New commits look great. Can you squash?,https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-326388431,326388431,
greenaddress,2017-08-31T20:12:48Z,"@jnewbery done, didn't rebase however happy to if needed",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-326407741,326407741,
ghost,2017-08-31T20:30:41Z,"strictly q\nOn Aug 20, 2017 9:46 PM, ""GreenAddress"" <notifications@github.com> wrote:\n\n> @promag <https://github.com/promag> thanks, updated as for feedback and\n> squashed\n>\n> â€”\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-323627960>,\n> or mute the thread\",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-326412144,326412144,
jnewbery,2017-09-01T18:53:47Z,"Needed slight rebase changes after #11121 (apologies - I keep making changes to the test_framework API).\n\nI've done that and pushed here: https://github.com/jnewbery/bitcoin/tree/pr11099 . Feel free to reset your branch onto that commit.",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-326658130,326658130,
greenaddress,2017-09-01T19:43:24Z,"@jnewbery thank you! I've updated the PR with your rebase, no need to apologize especially as you did all the work :) ",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-326668186,326668186,
jnewbery,2017-09-01T19:53:49Z,"Tested ACK 67d307f606f54a01b8dd6d79ca45d08171d20ccc. Looks great. Thanks for sticking with this.\n\nExpect Travis to fail (for this and all other PRs) until #11215 is merged.",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-326670175,326670175,
meshcollider,2017-09-01T23:25:41Z,utACK https://github.com/bitcoin/bitcoin/commit/67d307f606f54a01b8dd6d79ca45d08171d20ccc,https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-326703735,326703735,
luke-jr,2017-09-02T06:52:09Z,"Suggest renaming it to `savemempool` or something.\n\nThe name `dumpmempool` to me suggested the same outcome as `getrawmempool`...",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-326726702,326726702,
greenaddress,2017-09-02T18:49:27Z,"@luke-jr changed the name, savemempool sounds better to me too.\n\n@promag added brackets.\n\ndidn't squash and rename one commit  yet but happy to when people are happy with the changes",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-326762897,326762897,
jnewbery,2017-09-04T16:03:32Z,utACK 8ef87d253c88c2e19e875f9fec601159fb6da32f,https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-326994447,326994447,
MarcoFalke,2017-09-05T19:18:38Z,@greenaddress Will review after rebase,https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-327275841,327275841,
greenaddress,2017-09-06T07:52:19Z,"rebased & squashed  and reworded the second commit to the new `savemempool` name - a lot of thanks for all feedback\n\n@promag @jnewbery @MarcoFalke I changed the return value to NullUniValue (and accordingly updated the test)",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-327404777,327404777,
promag,2017-09-06T12:44:15Z,utACK 1aa97ee.,https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-327471567,327471567,
jnewbery,2017-09-06T19:29:44Z,utACK 1aa97ee088ea03dd208be054c5ad9198c1f13329,https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-327589084,327589084,
MarcoFalke,2017-09-06T20:52:33Z,@greenaddress Thanks for sticking with the pull. Quite a pain to go through so much review iterations.,https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-327609446,327609446,
promag,2017-09-06T21:03:31Z,"> Quite a pain to go through so much review iterations.\n\nYou mean fun? :trollface: ",https://github.com/bitcoin/bitcoin/pull/11099#issuecomment-327612111,327612111,
promag,2017-08-20T22:40:59Z,This is not correct since it can fail.,https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134128377,134128377,src/rpc/blockchain.cpp
promag,2017-08-20T22:41:38Z,Remove the filename?,https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134128392,134128392,src/rpc/blockchain.cpp
promag,2017-08-21T08:25:29Z,"Sort, move before `getblockchaininfo `.",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134171209,134171209,src/rpc/blockchain.cpp
promag,2017-08-21T08:26:52Z,Missing `{ }`.,https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134171514,134171514,src/rpc/blockchain.cpp
promag,2017-08-21T08:27:06Z,"Nit, new line before `return`.",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134171596,134171596,src/rpc/blockchain.cpp
jonasschnelli,2017-08-22T09:41:38Z,"I'm not the one to complain about this: but should it be `""Dumps the mempool to disk""?",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134432363,134432363,src/rpc/blockchain.cpp
jonasschnelli,2017-08-22T09:42:13Z,"Because this is machine to machine communication, use `true` as ret val at this point?",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134432492,134432492,src/rpc/blockchain.cpp
promag,2017-08-23T03:28:21Z,"Maybe `RPC_MISC_ERROR`. See what causes `RPC_INTERNAL_ERROR`, sounds like really bad exceptions.",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134650130,134650130,src/rpc/blockchain.cpp
MarcoFalke,2017-08-23T12:00:57Z,"Use `os.path.join`, so that it works on other operating systems as well.",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134730881,134730881,test/functional/mempool_dump.py
MarcoFalke,2017-08-23T12:02:57Z,Might use `os.path.isfile` for better readability.,https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134731366,134731366,test/functional/mempool_dump.py
MarcoFalke,2017-08-23T12:03:43Z,"nit: No need for assert_equal, you can just `assert dumpmempool()`",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134731519,134731519,test/functional/mempool_dump.py
MarcoFalke,2017-08-23T12:04:44Z,I don't think we allow the datadir to be moved while running. The tests should not rely on this.,https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134731692,134731692,test/functional/mempool_dump.py
MarcoFalke,2017-08-23T12:05:51Z,"You might be able to achieve the same error condition by changing the file permissions, though.",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134731914,134731914,test/functional/mempool_dump.py
jnewbery,2017-08-23T15:58:13Z,"Not sure what the convention is, or what's best practice, but to me having the `return false` statement within the catch block is more obvious.",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134795037,134795037,src/validation.cpp
jnewbery,2017-08-23T16:00:32Z,"nit: PEP8 import ordering please: std library imports first, then local project imports.",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134795723,134795723,test/functional/mempool_dump.py
jnewbery,2017-08-23T17:27:04Z,"I'm not sure if this failure test is necessary. If bitcoind can't write to its data directory, I'm sure all kinds of bad things happen.",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134816629,134816629,test/functional/mempool_dump.py
greenaddress,2017-08-23T18:57:28Z,"I think it makes sense to check that there is no file, you dump and there is a file.",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134841186,134841186,test/functional/mempool_dump.py
MarcoFalke,2017-08-23T21:32:47Z,">  I think it makes sense to check that there is no file, you dump and there is a file.\n\nYou do exactly this in the lines above. The comment is about `assert_raises_jsonrpc`, which raises due to the missing datadir. As mentioned earlier, this will likely introduce hard to reproduce test failures now or in the future.\n\nWith the current flakiness of the test framework in mind I am against ad",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134876748,134876748,test/functional/mempool_dump.py
MarcoFalke,2017-08-23T21:35:12Z,"What you might try instead is to copy the dumped mempool from node0 to node1 and check that it can be loaded. (The nodes are not connected, but share the same blockchain)\n\nAnyway, I just noticed you are using a clean blockchain and dump the empty mempool. Might be better to populate it a bit.",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134877224,134877224,test/functional/mempool_dump.py
promag,2017-08-23T21:45:14Z,A bit as in 1 transaction is enough? ðŸ˜„ ,https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134879376,134879376,test/functional/mempool_dump.py
greenaddress,2017-08-24T11:53:33Z,"@MarcoFalke I made that change (about to push commit) and moved the test to mempool_persist as advised - however your suggestion still doesn't test the exception so I left that in, can easily remove the last 4 lines of the test if other agrees is better to not have it.",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r134994627,134994627,test/functional/mempool_dump.py
jnewbery,2017-08-28T13:40:40Z,"Intermediate `regtestdir0` variable not required. `os.path.join()` can take any number of arguments.\n\nSame for `regtestdir1` below.",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r135527309,135527309,test/functional/mempool_persist.py
jnewbery,2017-08-28T13:41:36Z,"Supernit: I like logging in the test script to be 'info' level, so when running the test locally, progress can be seen on the console by default.",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r135527587,135527587,test/functional/mempool_persist.py
jnewbery,2017-08-28T13:42:36Z,No need for `time.sleep()` if using `wait_until()` below.,https://github.com/bitcoin/bitcoin/pull/11099#discussion_r135527790,135527790,test/functional/mempool_persist.py
greenaddress,2017-08-29T19:06:33Z,Makes sense. Will submit a fix for it,https://github.com/bitcoin/bitcoin/pull/11099#discussion_r135884319,135884319,test/functional/mempool_persist.py
greenaddress,2017-08-29T19:06:45Z,All the other logs in the test are debug. Either we change them all or I don't think it makes sense for me to just change mine.,https://github.com/bitcoin/bitcoin/pull/11099#discussion_r135884379,135884379,test/functional/mempool_persist.py
greenaddress,2017-08-29T19:07:02Z,I thought so too (and indeed it works without time.sleep()) - however the test has that as a pattern and I think we either remove it for the rest of the calls (at least within the same test) or it's inconsistent.,https://github.com/bitcoin/bitcoin/pull/11099#discussion_r135884452,135884452,test/functional/mempool_persist.py
jnewbery,2017-08-29T20:28:01Z,"I'm all for trying to match local style, but there's no benefit in copying bad patterns.\n\nThe `time.sleep` in L76 should be removed (and the `assert_equal()` in L78 replaced with a `wait_until()`) in a different PR.\n\nThe `time.sleep` in L85 serves a purpose - the mempool takes a while to load so we want to give it time before asserting it's empty. There's probably a better way of testing t",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r135902613,135902613,test/functional/mempool_persist.py
jnewbery,2017-09-01T14:00:04Z,"I think the intent of this section of the tests is to verify that the dumped mempool from the `dumpmempool` RPC contains all the transactions. Correct? The way it's written right now doesn't test this. The act of stopping node0 causes it to dump its mempool on shutdown, and hence this test is just a repeat of the test on line 77. I think you need to:\n\n- run `dumpmempool` on a running node\n- ",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r136581173,136581173,test/functional/mempool_persist.py
jnewbery,2017-09-01T14:01:43Z,"nit: debug message could be clearer. Perhaps:\n\n```\n""Prevent bitcoind from writing mempool.dat to disk. Verify that `dumpmempool` fails""\n```",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r136581508,136581508,test/functional/mempool_persist.py
promag,2017-09-01T22:31:33Z,"Nit, add braces. ",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r136676253,136676253,src/rpc/blockchain.cpp
MarcoFalke,2017-09-05T19:21:57Z,This return value is not documented. And I think we shouldn't return anything on this rpc.,https://github.com/bitcoin/bitcoin/pull/11099#discussion_r137089529,137089529,src/rpc/blockchain.cpp
promag,2017-09-05T19:35:57Z,Remove assert.,https://github.com/bitcoin/bitcoin/pull/11099#discussion_r137092723,137092723,test/functional/mempool_persist.py
promag,2017-09-05T19:36:53Z,"Right, since on failure an exception is raised, on success it can be void.",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r137092918,137092918,src/rpc/blockchain.cpp
jnewbery,2017-09-06T00:05:46Z,"Yes, it appears that many RPCs that perform an action which is expected to succeed return `NullUniValue` on success. See several of the methods in src/rpc/net.cpp for example.",https://github.com/bitcoin/bitcoin/pull/11099#discussion_r137144350,137144350,src/rpc/blockchain.cpp
