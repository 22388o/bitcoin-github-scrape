[
  {
    "sha": "467cbbcbfc8876ae0955aaf82f2af83c352ad27f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NjdjYmJjYmZjODg3NmFlMDk1NWFhZjgyZjJhZjgzYzM1MmFkMjdm",
    "commit": {
      "author": {
        "name": "Lawrence Nahum",
        "email": "lawrence@greenaddress.it",
        "date": "2017-08-21T11:22:23Z"
      },
      "committer": {
        "name": "Lawrence Nahum",
        "email": "lawrence@greenaddress.it",
        "date": "2017-09-06T07:25:00Z"
      },
      "message": "Add return value to DumpMempool",
      "tree": {
        "sha": "e7d717271b2f5d6fcd6350cce74607c6ee513a6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7d717271b2f5d6fcd6350cce74607c6ee513a6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/467cbbcbfc8876ae0955aaf82f2af83c352ad27f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEs3VJeyGdexbujr8sF6uLwyCxUdgFAlmvoswACgkQF6uLwyCx\nUdjClAf/fM9Jwv44s0YwQ66gClTNv3pLwavhBxfYP6eR9dp6jjNKaeq6E/K7wfzC\n2jwdHGrScq+ti/Xc3KFlzZfLXsJcsR2IPvxSAu2LZe04zM/thmdw32x3NDGL/HAH\nQ/pwUHz3kPwtWJIu76JxHYU44ojg/dBMB5Cs2Z0bZN/kNA+iYQdiMne9JevmT7yV\nE/WgNoNz+X4OZTurhDJapBsA0wMCuYQmcXZ74l+55tJm1Pp496CYc/cD3BLZoihm\nEFDb1JdSeSPJ4TxQ4P6sdjrfci9S7Ljvd6GVxDfaOgc23thx95SBj5zNywHWE5NJ\nfGpxFIfG2Pvii1gs1oluAPH1xPf0Eg==\n=TY9m\n-----END PGP SIGNATURE-----",
        "payload": "tree e7d717271b2f5d6fcd6350cce74607c6ee513a6e\nparent 6866b4912b8013ed748d12250209f7079a3c92e6\nauthor Lawrence Nahum <lawrence@greenaddress.it> 1503314543 +0200\ncommitter Lawrence Nahum <lawrence@greenaddress.it> 1504682700 +0200\n\nAdd return value to DumpMempool\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/467cbbcbfc8876ae0955aaf82f2af83c352ad27f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/467cbbcbfc8876ae0955aaf82f2af83c352ad27f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/467cbbcbfc8876ae0955aaf82f2af83c352ad27f/comments",
    "author": {
      "login": "greenaddress",
      "id": 5269298,
      "node_id": "MDQ6VXNlcjUyNjkyOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5269298?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greenaddress",
      "html_url": "https://github.com/greenaddress",
      "followers_url": "https://api.github.com/users/greenaddress/followers",
      "following_url": "https://api.github.com/users/greenaddress/following{/other_user}",
      "gists_url": "https://api.github.com/users/greenaddress/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greenaddress/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greenaddress/subscriptions",
      "organizations_url": "https://api.github.com/users/greenaddress/orgs",
      "repos_url": "https://api.github.com/users/greenaddress/repos",
      "events_url": "https://api.github.com/users/greenaddress/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greenaddress/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "greenaddress",
      "id": 5269298,
      "node_id": "MDQ6VXNlcjUyNjkyOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5269298?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greenaddress",
      "html_url": "https://github.com/greenaddress",
      "followers_url": "https://api.github.com/users/greenaddress/followers",
      "following_url": "https://api.github.com/users/greenaddress/following{/other_user}",
      "gists_url": "https://api.github.com/users/greenaddress/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greenaddress/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greenaddress/subscriptions",
      "organizations_url": "https://api.github.com/users/greenaddress/orgs",
      "repos_url": "https://api.github.com/users/greenaddress/repos",
      "events_url": "https://api.github.com/users/greenaddress/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greenaddress/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6866b4912b8013ed748d12250209f7079a3c92e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6866b4912b8013ed748d12250209f7079a3c92e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6866b4912b8013ed748d12250209f7079a3c92e6"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 5,
      "deletions": 3
    },
    "files": [
      {
        "sha": "ca0d6a8713be87ec44dce72e64b036e45aca3e39",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/467cbbcbfc8876ae0955aaf82f2af83c352ad27f/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/467cbbcbfc8876ae0955aaf82f2af83c352ad27f/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=467cbbcbfc8876ae0955aaf82f2af83c352ad27f",
        "patch": "@@ -4332,7 +4332,7 @@ bool LoadMempool(void)\n     return true;\n }\n \n-void DumpMempool(void)\n+bool DumpMempool(void)\n {\n     int64_t start = GetTimeMicros();\n \n@@ -4352,7 +4352,7 @@ void DumpMempool(void)\n     try {\n         FILE* filestr = fsbridge::fopen(GetDataDir() / \"mempool.dat.new\", \"wb\");\n         if (!filestr) {\n-            return;\n+            return false;\n         }\n \n         CAutoFile file(filestr, SER_DISK, CLIENT_VERSION);\n@@ -4376,7 +4376,9 @@ void DumpMempool(void)\n         LogPrintf(\"Dumped mempool: %gs to copy, %gs to dump\\n\", (mid-start)*MICRO, (last-mid)*MICRO);\n     } catch (const std::exception& e) {\n         LogPrintf(\"Failed to dump mempool: %s. Continuing anyway.\\n\", e.what());\n+        return false;\n     }\n+    return true;\n }\n \n //! Guess how far we are in the verification process at the given block index"
      },
      {
        "sha": "d7f7b99ef836da7c399ab4f0f96a31a5285d12a5",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/467cbbcbfc8876ae0955aaf82f2af83c352ad27f/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/467cbbcbfc8876ae0955aaf82f2af83c352ad27f/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=467cbbcbfc8876ae0955aaf82f2af83c352ad27f",
        "patch": "@@ -475,7 +475,7 @@ static const unsigned int REJECT_HIGHFEE = 0x100;\n CBlockFileInfo* GetBlockFileInfo(size_t n);\n \n /** Dump the mempool to disk. */\n-void DumpMempool();\n+bool DumpMempool();\n \n /** Load the mempool from disk. */\n bool LoadMempool();"
      }
    ]
  },
  {
    "sha": "1aa97ee088ea03dd208be054c5ad9198c1f13329",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYWE5N2VlMDg4ZWEwM2RkMjA4YmUwNTRjNWFkOTE5OGMxZjEzMzI5",
    "commit": {
      "author": {
        "name": "Lawrence Nahum",
        "email": "lawrence@greenaddress.it",
        "date": "2017-08-21T11:23:18Z"
      },
      "committer": {
        "name": "Lawrence Nahum",
        "email": "lawrence@greenaddress.it",
        "date": "2017-09-06T07:44:36Z"
      },
      "message": "Add savemempool RPC",
      "tree": {
        "sha": "6b01b565a368f2100f2446c9a605a1d7e63b6b9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b01b565a368f2100f2446c9a605a1d7e63b6b9f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1aa97ee088ea03dd208be054c5ad9198c1f13329",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEs3VJeyGdexbujr8sF6uLwyCxUdgFAlmvp2QACgkQF6uLwyCx\nUdj3/gf/VAHk9dpOTdhY9Z/2CQjEC8FSuNPWXLjqeOOR6tfYOZFoWQbuYnQxxgQB\nSPloJNLqkNXWXa+W4LXt5eUgYW3+Z1XD/05WzvQryjqz3NIHGQWXU5lxI+jJhpc+\nfKTmFtQE0K8E3AsnQ+edXe4CfuZxuQioX09G/QAfTYAZj3aSDpnLBo9B+xhfFapx\nQyAkhkMyqd26KPlce/6+EJWAReCu4pdWUbVFJfCbXSVbfCXrcWRyJg1MPOCDvfYo\n9TTUYivGMP0F/FubLTWjvbai3RqYyOLo4+x06x55DN9r5BrGj/ojZ1UHW3ZltJ5F\n7NWPDCBihaCLsfNUWOIYP1wQ8FK9vA==\n=fs1X\n-----END PGP SIGNATURE-----",
        "payload": "tree 6b01b565a368f2100f2446c9a605a1d7e63b6b9f\nparent 467cbbcbfc8876ae0955aaf82f2af83c352ad27f\nauthor Lawrence Nahum <lawrence@greenaddress.it> 1503314598 +0200\ncommitter Lawrence Nahum <lawrence@greenaddress.it> 1504683876 +0200\n\nAdd savemempool RPC\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1aa97ee088ea03dd208be054c5ad9198c1f13329",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1aa97ee088ea03dd208be054c5ad9198c1f13329",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1aa97ee088ea03dd208be054c5ad9198c1f13329/comments",
    "author": {
      "login": "greenaddress",
      "id": 5269298,
      "node_id": "MDQ6VXNlcjUyNjkyOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5269298?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greenaddress",
      "html_url": "https://github.com/greenaddress",
      "followers_url": "https://api.github.com/users/greenaddress/followers",
      "following_url": "https://api.github.com/users/greenaddress/following{/other_user}",
      "gists_url": "https://api.github.com/users/greenaddress/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greenaddress/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greenaddress/subscriptions",
      "organizations_url": "https://api.github.com/users/greenaddress/orgs",
      "repos_url": "https://api.github.com/users/greenaddress/repos",
      "events_url": "https://api.github.com/users/greenaddress/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greenaddress/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "greenaddress",
      "id": 5269298,
      "node_id": "MDQ6VXNlcjUyNjkyOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5269298?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greenaddress",
      "html_url": "https://github.com/greenaddress",
      "followers_url": "https://api.github.com/users/greenaddress/followers",
      "following_url": "https://api.github.com/users/greenaddress/following{/other_user}",
      "gists_url": "https://api.github.com/users/greenaddress/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greenaddress/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greenaddress/subscriptions",
      "organizations_url": "https://api.github.com/users/greenaddress/orgs",
      "repos_url": "https://api.github.com/users/greenaddress/repos",
      "events_url": "https://api.github.com/users/greenaddress/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greenaddress/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "467cbbcbfc8876ae0955aaf82f2af83c352ad27f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/467cbbcbfc8876ae0955aaf82f2af83c352ad27f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/467cbbcbfc8876ae0955aaf82f2af83c352ad27f"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 48,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0acaf8aedbd6215ad3c4faac2de81f29042edb9f",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1aa97ee088ea03dd208be054c5ad9198c1f13329/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1aa97ee088ea03dd208be054c5ad9198c1f13329/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=1aa97ee088ea03dd208be054c5ad9198c1f13329",
        "patch": "@@ -1532,6 +1532,25 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue savemempool(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 0) {\n+        throw std::runtime_error(\n+            \"savemempool\\n\"\n+            \"\\nDumps the mempool to disk.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"savemempool\", \"\")\n+            + HelpExampleRpc(\"savemempool\", \"\")\n+        );\n+    }\n+\n+    if (!DumpMempool()) {\n+        throw JSONRPCError(RPC_MISC_ERROR, \"Unable to dump mempool to disk\");\n+    }\n+\n+    return NullUniValue;\n+}\n+\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n@@ -1552,6 +1571,7 @@ static const CRPCCommand commands[] =\n     { \"blockchain\",         \"gettxout\",               &gettxout,               {\"txid\",\"n\",\"include_mempool\"} },\n     { \"blockchain\",         \"gettxoutsetinfo\",        &gettxoutsetinfo,        {} },\n     { \"blockchain\",         \"pruneblockchain\",        &pruneblockchain,        {\"height\"} },\n+    { \"blockchain\",         \"savemempool\",            &savemempool,            {} },\n     { \"blockchain\",         \"verifychain\",            &verifychain,            {\"checklevel\",\"nblocks\"} },\n \n     { \"blockchain\",         \"preciousblock\",          &preciousblock,          {\"blockhash\"} },"
      },
      {
        "sha": "149a01870d7752e0e73de83c4db4631b861be922",
        "filename": "test/functional/mempool_persist.py",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1aa97ee088ea03dd208be054c5ad9198c1f13329/test/functional/mempool_persist.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1aa97ee088ea03dd208be054c5ad9198c1f13329/test/functional/mempool_persist.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_persist.py?ref=1aa97ee088ea03dd208be054c5ad9198c1f13329",
        "patch": "@@ -28,8 +28,14 @@\n   - Restart node0 with -persistmempool. Verify that it has 5\n     transactions in its mempool. This tests that -persistmempool=0\n     does not overwrite a previously valid mempool stored on disk.\n+  - Remove node0 mempool.dat and verify savemempool RPC recreates it\n+    and verify that node1 can load it and has 5 transaction in its\n+    mempool.\n+  - Verify that savemempool throws when the RPC is called if\n+    node1 can't write to disk.\n \n \"\"\"\n+import os\n import time\n \n from test_framework.test_framework import BitcoinTestFramework\n@@ -78,5 +84,27 @@ def run_test(self):\n         self.start_node(0)\n         wait_until(lambda: len(self.nodes[0].getrawmempool()) == 5)\n \n+        mempooldat0 = os.path.join(self.options.tmpdir, 'node0', 'regtest', 'mempool.dat')\n+        mempooldat1 = os.path.join(self.options.tmpdir, 'node1', 'regtest', 'mempool.dat')\n+        self.log.debug(\"Remove the mempool.dat file. Verify that savemempool to disk via RPC re-creates it\")\n+        os.remove(mempooldat0)\n+        self.nodes[0].savemempool()\n+        assert os.path.isfile(mempooldat0)\n+\n+        self.log.debug(\"Stop nodes, make node1 use mempool.dat from node0. Verify it has 5 transactions\")\n+        os.rename(mempooldat0, mempooldat1)\n+        self.stop_nodes()\n+        self.start_node(1, extra_args=[])\n+        wait_until(lambda: len(self.nodes[1].getrawmempool()) == 5)\n+\n+        self.log.debug(\"Prevent bitcoind from writing mempool.dat to disk. Verify that `savemempool` fails\")\n+        # to test the exception we are setting bad permissions on a tmp file called mempool.dat.new\n+        # which is an implementation detail that could change and break this test\n+        mempooldotnew1 = mempooldat1 + '.new'\n+        with os.fdopen(os.open(mempooldotnew1, os.O_CREAT, 0o000), 'w'):\n+            pass\n+        assert_raises_jsonrpc(-1, \"Unable to dump mempool to disk\", self.nodes[1].savemempool)\n+        os.remove(mempooldotnew1)\n+\n if __name__ == '__main__':\n     MempoolPersistTest().main()"
      }
    ]
  }
]