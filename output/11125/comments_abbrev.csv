laanwj,2017-08-24T18:30:27Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/11125#issuecomment-324718696,324718696,
jnewbery,2017-08-24T18:32:17Z,"Concept ACK, but I recommend you build on top of #10798 which already adds `bitcoin-cli` interface to TestNode.",https://github.com/bitcoin/bitcoin/pull/11125#issuecomment-324719181,324719181,
promag,2017-08-24T20:16:08Z,I'll refactor now that #10798 is merged.,https://github.com/bitcoin/bitcoin/pull/11125#issuecomment-324744967,324744967,
promag,2017-08-25T03:16:27Z,"@jnewbery take a look at f275cf6, it allows to pass `-stdin` and `-stdinrpcpass`. Also, `TestNodeCLI` instances are only created when necessary.\n\nUpdated PR title and description accordingly.\n",https://github.com/bitcoin/bitcoin/pull/11125#issuecomment-324813366,324813366,
jnewbery,2017-08-25T15:42:45Z,"See commit here for an alternative way of doing this: https://github.com/jnewbery/bitcoin/commit/5bfd5e0d47f89f4c2e9becf266876c0c6cc62787\n\nA few advantages:\n\n- bitcoin-cli command line arguments are passed in as a string and fed through to `subprocess`, rather than being parsed by python\n- It avoids the cludgy `input` magic key\n- it maintains the `-datadir` argument, which I think we w",https://github.com/bitcoin/bitcoin/pull/11125#issuecomment-324958311,324958311,
promag,2017-08-25T18:02:04Z,"> It avoids the cludgy input magic key\n\n@jnewbery how do you pass the stdin content?",https://github.com/bitcoin/bitcoin/pull/11125#issuecomment-324995210,324995210,
jnewbery,2017-08-25T18:08:31Z,"ah sorry, I just looked at the commit at https://github.com/bitcoin/bitcoin/commit/f275cf65018681689e711af6bca202125557c434 and misunderstood how `input` was used. I'll re-review.",https://github.com/bitcoin/bitcoin/pull/11125#issuecomment-324996999,324996999,
MarcoFalke,2017-08-25T19:54:56Z,utACK 5b4e3391f6a7dc9e7148eaee05e285f200f46927,https://github.com/bitcoin/bitcoin/pull/11125#issuecomment-325020361,325020361,
promag,2017-08-28T07:55:00Z,Agree!,https://github.com/bitcoin/bitcoin/pull/11125#issuecomment-325285984,325285984,
MarcoFalke,2017-09-05T19:41:08Z,@promag Are you still working on this. I think what is missing is setting up the temp datadir and addressing @ryanofsky feedback..,https://github.com/bitcoin/bitcoin/pull/11125#issuecomment-327281546,327281546,
promag,2017-09-06T15:59:23Z,"Thanks all for the great feedback. These are the relevant changes:\n- keep `-datadir`\n- `input=...` moved to `.cli()`, although `-input` is not `bitcoin-cli` argument ðŸ™„ \n- added tests for invalid authentication",https://github.com/bitcoin/bitcoin/pull/11125#issuecomment-327530721,327530721,
laanwj,2017-08-24T18:30:00Z,"We need a way to override what bitcoin-cli to use, akin to `BITCOIND` environment variable.\n\nWhich reminds me, didn't we have another PR to add bitcoin-cli testing support at some point?\n(if so, might be better to do it on top of that)",https://github.com/bitcoin/bitcoin/pull/11125#discussion_r135094721,135094721,test/functional/test_framework/test_node.py
MarcoFalke,2017-08-24T20:13:14Z,You might be able to hack something up based on `TestNodeCLI` from current `master` branch.,https://github.com/bitcoin/bitcoin/pull/11125#discussion_r135118430,135118430,test/functional/test_framework/test_node.py
jnewbery,2017-08-24T20:16:04Z,This should already be possible with #10798 merged,https://github.com/bitcoin/bitcoin/pull/11125#discussion_r135119088,135119088,test/functional/test_framework/test_node.py
laanwj,2017-08-28T07:49:47Z,"I would prefer to make a temporary, empty datadir here instead of make it use the default. The tests should not touch `~/.bitcoin`.\n",https://github.com/bitcoin/bitcoin/pull/11125#discussion_r135460995,135460995,test/functional/bitcoin_cli.py
jnewbery,2017-08-28T14:21:43Z,"I think you should add an error here. If args is specified, then `datadir` must be one of the args (otherwise `bitcoin-cli` will look in `~/.bitcoin`).",https://github.com/bitcoin/bitcoin/pull/11125#discussion_r135537238,135537238,test/functional/test_framework/test_node.py
jnewbery,2017-08-28T14:50:43Z,"It seems weird to me that `input` is an argument to the RPC, rather than an argument to the bitcoin-cli instance.\n\nIt seems possible that an RPC will have `input` as a parameter. Rather less likely that bitcoin-cli will add an argument called `input`.",https://github.com/bitcoin/bitcoin/pull/11125#discussion_r135544523,135544523,test/functional/bitcoin_cli.py
laanwj,2017-08-28T14:56:18Z,"Another option would be to set `datadir=self.datadir` if it isn't overridden otherwise. As you say, there is no reason the argument should ever be *missing*.",https://github.com/bitcoin/bitcoin/pull/11125#discussion_r135545990,135545990,test/functional/test_framework/test_node.py
MarcoFalke,2017-08-28T19:50:04Z,"Thinking more about this, I think we should keep `TestNode.cli` to be the corresponding interface to `TestNode.rpc`. The logic to hack a different datadir can be placed in the test that checks for `-stdinrpcpass`. This makes the TestNode code easier to understand, as the datadir overwrite is rarely needed... Likely only once?",https://github.com/bitcoin/bitcoin/pull/11125#discussion_r135616247,135616247,test/functional/test_framework/test_node.py
ryanofsky,2017-08-29T18:24:43Z,"In commit ""[test] Add support for custom arguments to TestNodeCLI""\n\nYou could replace these four lines with `input = kwargs.pop(""input"", None)`, or change the function signature to `def send_cli(self, command, *args, input=None, **kwargs)` to get the same result.\n\nProbably though it is better just to pass input to the TestNodeCLI constructor as John suggests.",https://github.com/bitcoin/bitcoin/pull/11125#discussion_r135873337,135873337,test/functional/test_framework/test_node.py
jnewbery,2017-08-29T18:37:41Z,I think either approach is fine. Making it an error to not include it in args makes it more explicit to the test writer (ie datadir doesn't get set magically for them).,https://github.com/bitcoin/bitcoin/pull/11125#discussion_r135876910,135876910,test/functional/test_framework/test_node.py
jnewbery,2017-08-29T18:43:21Z,"I also think I prefer keeping `TestNode.cli` as a class (and making it callable as per https://github.com/jnewbery/bitcoin/commit/5bfd5e0d47f89f4c2e9becf266876c0c6cc62787), but I'm happy to be convinced the other way.\n\n@MarcoFalke - I'm not sure I fully understand your comment though. As things currently stand with this PR, the interface for changing `datadir` is to add an argument to `TestNod",https://github.com/bitcoin/bitcoin/pull/11125#discussion_r135878332,135878332,test/functional/test_framework/test_node.py
MarcoFalke,2017-08-30T07:11:59Z,"In python every member is public, so changing the datadir is as easy as `self.nodes[0].cli.datadir = './new'  # Overwrite datadir, so we pass in rpcuser and password through stdin`",https://github.com/bitcoin/bitcoin/pull/11125#discussion_r135986533,135986533,test/functional/test_framework/test_node.py
jnewbery,2017-08-30T14:01:11Z,"yes, that works. I think I still prefer making `TestNodeCLI` callable and adding `datadir` as an argument.",https://github.com/bitcoin/bitcoin/pull/11125#discussion_r136076102,136076102,test/functional/test_framework/test_node.py
MarcoFalke,2017-08-30T14:10:57Z,It is not like we need to pass in anything to `TestNodeCLI`. The `datadir` change is only needed for the test in this pull.,https://github.com/bitcoin/bitcoin/pull/11125#discussion_r136078881,136078881,test/functional/test_framework/test_node.py
jnewbery,2017-08-30T14:15:21Z,"Have you looked at https://github.com/jnewbery/bitcoin/commit/5bfd5e0d47f89f4c2e9becf266876c0c6cc62787 ?\nPassing arguments to `TestNodeCLI` seems like a good way to pass `bitcoin-cli` command line arguments.\n\n(I'm not arguing forcefully for the change in https://github.com/jnewbery/bitcoin/commit/5bfd5e0d47f89f4c2e9becf266876c0c6cc62787 and I'm happy to be shown a different way to do this)",https://github.com/bitcoin/bitcoin/pull/11125#discussion_r136080248,136080248,test/functional/test_framework/test_node.py
MarcoFalke,2017-08-30T14:25:51Z,"I did not.\n\nThis also help with selecting the rpcwallet, so making it callable is more useful than I thought.",https://github.com/bitcoin/bitcoin/pull/11125#discussion_r136083569,136083569,test/functional/test_framework/test_node.py
jnewbery,2017-09-06T19:14:29Z,"You can remove `(returncode is not None)` here and `(output is not None)` below. The only reason I allowed `assert_raises_jsonrpc()` callers to not specify `returncode` or `output` was to be backwards compatible with existing tests which didn't specify those. As far as I'm concerned, tests should always assert return codes and error messages if they're expecting.\n\n(we can probably remove the s",https://github.com/bitcoin/bitcoin/pull/11125#discussion_r137364104,137364104,test/functional/test_framework/util.py
jnewbery,2017-09-06T19:15:57Z,nit: my personal preference is for imports to be sorted by module name (ie `from subprocess...` should be between `import re` and `import time`),https://github.com/bitcoin/bitcoin/pull/11125#discussion_r137364402,137364402,test/functional/test_framework/util.py
jnewbery,2017-09-06T19:17:01Z,nit: perhaps `assert_raises_process_error()`?,https://github.com/bitcoin/bitcoin/pull/11125#discussion_r137364635,137364635,test/functional/test_framework/util.py
jnewbery,2017-09-06T19:19:46Z,Thanks for teaching me some Portuguese: https://pt.wikipedia.org/wiki/X.P.T.O. ðŸ™‚ ,https://github.com/bitcoin/bitcoin/pull/11125#discussion_r137365171,137365171,test/functional/bitcoin_cli.py
promag,2017-09-06T19:52:34Z,"My bad, that's also my preference.",https://github.com/bitcoin/bitcoin/pull/11125#discussion_r137372415,137372415,test/functional/test_framework/util.py
promag,2017-09-06T19:52:42Z,No problem.,https://github.com/bitcoin/bitcoin/pull/11125#discussion_r137372441,137372441,test/functional/test_framework/util.py
promag,2017-09-06T19:56:17Z,"Great, will do.",https://github.com/bitcoin/bitcoin/pull/11125#discussion_r137373246,137373246,test/functional/test_framework/util.py
