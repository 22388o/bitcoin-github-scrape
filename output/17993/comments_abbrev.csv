ryanofsky,2020-01-23 19:17:17,"Concept ACK. Will look more closely but I think this change seems good. It would also be good to follow up with https://github.com/bitcoin/bitcoin/pull/17905#issuecomment-577324304 and switch to hashes instead of heights, so GUI is updated reliably if there are reorgs",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-577832245,577832245,
DrahtBot,2020-01-23 19:32:13,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19101 (refactor: remove ::vpwallets and related global variables by ryanofsky)\n* #19099 (refactor: Move wallet methods o",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-577838590,577838590,
furszy,2020-01-23 19:38:47,"agree @ryanofsky . Once you cache the best tip hash in `clientModel`, I can just code a getter there and replace the `cachedNumBlocks` here for the hash.\n\n",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-577841247,577841247,
ryanofsky,2020-01-23 19:51:36,"> Once you cache the best tip hash in clientModel\n\nTo be sure, I didn't start to implement this at all. It'd be a welcome followup to this PR and #17905, or something that could be done alongside",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-577846318,577846318,
furszy,2020-01-23 20:10:35,"k. if you didn't start it (and want me doing it), i can tackle it over night. Just give me green light to not end up with both doing the same work. ",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-577854632,577854632,
ryanofsky,2020-01-23 20:17:48,"> k. if you didn't start it, i can tackle it over night. Just give me green light to not end up with both doing the same work.\n\nüö•\n\nFeel free to go ahead! I don't have immediate plans to work on this, and have no problem closing/rebasing/replacing my other PR if your changes supercede or conflict with it",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-577857532,577857532,
furszy,2020-01-24 00:57:45,"Done. \nThe last commit is not really needed, it's just wrapping the tip data. I looked for a more manageable structure than continue adding arguments to the functions.\n\n[Edit: seems that travis is still failing, will check it tomorrow]",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-577947880,577947880,
promag,2020-01-26 19:14:35,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-578533168,578533168,
hebasto,2020-04-22 13:49:54,@furszy Mind rebasing if you are still working on it?,https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-617791089,617791089,
furszy,2020-04-22 22:20:42,"Yep sure, will check the PRs that have been merged over the area and update/rebase this one. If my memory doesn't fail me, the first commit will not be needed anymore and this PR will be mainly focused on moving the best tip cached height to the block hash.",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-618070557,618070557,
furszy,2020-04-23 01:39:36,"Work rebased and updated to latest master changes. Plus, PR title and description updated too.",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-618126625,618126625,
furszy,2020-04-25 20:27:20,@ryanofsky @promag would you mind re reviewing this? .,https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-619436189,619436189,
hebasto,2020-05-16 13:25:02,"In the 5db27e3fcc7dc0154869291482a324672eb7a251 ""[WalletModel] Balance and Txrecord status..."" commit `uint256 hash` is passed by value to some functions, and as const reference to others.\nA suggest consistently pass `uint256 hash` as const reference.",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-629645331,629645331,
hebasto,2020-05-16 13:41:36,"The motivation of the de8221e6c0d7e360caa62baf7591bd2ee3670e79 ""[ClientModel][Interfaces] BlockTip struct created and connected to notifyHeaderTip and notifyBlockTip signals."" commit is not clear for me. Could elaborate?",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-629647630,629647630,
ryanofsky,2020-05-18 19:00:04,"Travis error https://travis-ci.org/github/bitcoin/bitcoin/jobs/678420543#L3130 ""AssertionError: Mempool sync timed out after 60s"" in mempool_reorg.py in native_valgrind build a seems like it might have been already reported and fixed in https://github.com/bitcoin/bitcoin/pull/18617#issuecomment-613413830",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-630376974,630376974,
furszy,2020-05-18 23:13:44,"Hey guys, thanks for the feedback. All of the code comments were addressed.\n \nGoing through @hebasto's feedback first. Answering the remaining unanswered questions:\n\n> if you decided to inline with the WITH_LOCK macro in getLastBlockTime(), why do not make the same in the getVerificationProgress()?\n\nBecause the `GuessVerificationProgress` internal method accepts a `CblockIndex` and not",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-630482489,630482489,
ryanofsky,2020-05-20 11:12:11,"re: https://github.com/bitcoin/bitcoin/pull/17993#pullrequestreview-414386972\n\n> but I think this needs to bring back the dropped shutdownrequested commit [ae5775a](https://github.com/bitcoin/bitcoin/commit/ae5775a16e85144e73e999ef87dec26e22236a86), contra [#17993 (comment)](https://github.com/bitcoin/bitcoin/pull/17993#discussion_r426702660), because now address sanitizer is failing in `Walle",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-631409098,631409098,
furszy,2020-05-21 14:46:24,"Done, feedback + rebased on top of master (there were lot of conflicts :p). Travis should be happy now too.\n\n@ryanofsky @hebasto all yours. If you need anything else shoot.\n",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-632127029,632127029,
hebasto,2020-05-22 18:42:49,"@furszy I've collected my suggestions into [this](https://github.com/hebasto/bitcoin/commits/pr17993-0522) branch -- feel free to use it :)\n\nAlso I think the latest 03ef9300e8514896e44b070c4c009ceacd36d39b commit changes behavior as `return` statement is not protected by the `::cs_main` mutex now.",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-632849467,632849467,
furszy,2020-05-22 23:31:41,"k checked üëç . Cherry-picked few code styling changes and left the other name changes for another PR as @ryanofsky wrote above https://github.com/bitcoin/bitcoin/pull/17993#pullrequestreview-413693885 . \nI agree with him there about the overall members naming needing further discussion to follow the same convention everywhere.\n\nPlus, didn't cherry-picked the getBestBloskHash rename to getLast",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-632943286,632943286,
furszy,2020-05-23 23:08:54,Thanks for the quick feedback @hebasto. PR updated per repo's conventions suggestions üëç .,https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-633152012,633152012,
jonasschnelli,2020-05-29 08:36:19,"utACK a06e845e826acaeb0db7cf02b2519c177e94dee5 - it would be great to have QT unit tests  (in this case for a reorg) that either automatically inspect the window content based on accessibility and tests for expected values or at least allow for quick manual re-testing (screenshots, automatically create UI situations).",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-635848638,635848638,
hebasto,2020-06-19 13:16:28,"The regression, that was supposedly introduced by this PR, has been detected in https://github.com/bitcoin-core/gui/issues/7.",https://github.com/bitcoin/bitcoin/pull/17993#issuecomment-646630213,646630213,
ryanofsky,2020-01-24 18:10:29,"In commit ""Added best block hash to the NotifyHeaderTip and NotifyBlockTip signals."" (4948d4ee50d9960b23f43e14938845b0bb21772b)\n\nShould remove extra newlines between methods (here and below) for consistency with existing code",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370769697,370769697,src/interfaces/node.cpp
ryanofsky,2020-01-24 18:11:06,"In commit ""Added best block hash to the NotifyHeaderTip and NotifyBlockTip signals."" (4948d4ee50d9960b23f43e14938845b0bb21772b)\n\nMaybe shorten these lines to\n\n```c++\nconst CBlockIndex* tip = WITH_LOCK(::cs_main,  return ::ChainActive().Tip());\n```",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370769965,370769965,src/interfaces/node.cpp
ryanofsky,2020-01-24 18:11:54,"In commit ""Added best block hash to the NotifyHeaderTip and NotifyBlockTip signals."" (4948d4ee50d9960b23f43e14938845b0bb21772b)\n\nMaybe drop extra parentheses around (tip)",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370770284,370770284,src/interfaces/node.cpp
ryanofsky,2020-01-24 18:13:45,"In commit ""Added best block hash to the NotifyHeaderTip and NotifyBlockTip signals."" (4948d4ee50d9960b23f43e14938845b0bb21772b)\n\nMaybe use reference type `const uint256&` to be a little more efficient and avoid a copy here and below",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370771096,370771096,src/interfaces/node.h
ryanofsky,2020-01-24 18:16:21,"In commit ""Added best block hash to the NotifyHeaderTip and NotifyBlockTip signals."" (4948d4ee50d9960b23f43e14938845b0bb21772b)\n\nMaybe use reference type `const uint256&` to be a little more efficient and avoid a copy here",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370772166,370772166,src/qt/clientmodel.cpp
ryanofsky,2020-01-24 18:20:50,"In commit ""Added best block hash to the NotifyHeaderTip and NotifyBlockTip signals."" (4948d4ee50d9960b23f43e14938845b0bb21772b)\n\nThese lines don't seem to work with my compiler version (clang version 6.0.0-1ubuntu2). I don't think it's possible to use std::atomic with the `uint256` class because it will only work for primitive int and pointer types. You probably need something like:\n\n```c+",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370774085,370774085,src/qt/clientmodel.h
ryanofsky,2020-01-24 18:24:52,"In commit ""[WalletModel] Balance and Txrecord status change polling check based on the block hash and not the height."" (997129bdb45c01390bffce991b680d58c9e7d18b)\n\nMaybe use `const uint256&` type to avoid copy here, similarly for other functions in this commit",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370775871,370775871,src/qt/transactionrecord.cpp
ryanofsky,2020-01-24 18:27:54,"In commit ""[WalletModel] Balance and Txrecord status change polling check based on the block hash and not the height."" (997129bdb45c01390bffce991b680d58c9e7d18b)\n\nSuggest dropping initialization in the constructor body and using member initialization",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370777192,370777192,src/qt/walletmodel.cpp
ryanofsky,2020-01-24 18:29:21,"In commit ""[WalletModel] Balance and Txrecord status change polling check based on the block hash and not the height."" (997129bdb45c01390bffce991b680d58c9e7d18b)\n\nAgain `std::atomic<uint256>` doesn't seem to be a valid type. You probably need something like\n\n```c++\nMutex m_cached_tip_mutex;\nuint256 m_cached_tip;\n```",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370777825,370777825,src/qt/walletmodel.h
ryanofsky,2020-01-24 18:46:53,"In commit ""[WalletModel] Balance and Txrecord status change polling check based on the block hash and not the height."" (997129bdb45c01390bffce991b680d58c9e7d18b)\n\nI don't think you need this function, since you can create instances just as easily with `BlockHash{height, time, hash}`",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370785497,370785497,src/interfaces/node.h
furszy,2020-01-25 04:51:50,"I'm thinking on this one. \n\nNo synchronization is needed here. Only `pollBalanceChanged` modifies the cached tip, which is launched by the timer only. And, If the execution takes longer than the timer schedule, the new event will be queued. So, no parallel code execution.",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370914011,370914011,src/qt/walletmodel.h
furszy,2020-01-25 04:52:28,done,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370914019,370914019,src/interfaces/node.h
furszy,2020-01-25 04:53:15,done,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370914052,370914052,src/qt/transactionrecord.cpp
furszy,2020-01-25 04:53:52,done,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370914083,370914083,src/qt/clientmodel.h
furszy,2020-01-25 04:54:10,done,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370914104,370914104,src/qt/clientmodel.cpp
furszy,2020-01-25 04:54:48,done,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370914116,370914116,src/interfaces/node.cpp
furszy,2020-01-25 04:54:59,done,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370914119,370914119,src/interfaces/node.cpp
furszy,2020-01-25 04:55:08,done,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r370914123,370914123,src/interfaces/node.cpp
promag,2020-01-30 13:08:20,These changes to the timer are unnecessary. The timer is stopped and destroyed automatically on `WalletModel` destruction.,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r372936738,372936738,src/qt/walletmodel.cpp
furszy,2020-01-30 17:42:57,"double checked and yep, cleaning them üëç .",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r373095559,373095559,src/qt/walletmodel.cpp
promag,2020-01-31 15:54:38,nit double space,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r373550666,373550666,src/interfaces/node.cpp
promag,2020-01-31 15:54:52,When can tip be null?,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r373550792,373550792,src/interfaces/node.cpp
furszy,2020-02-06 13:36:20,"The else path is stating it, only can be null when no blocks were connected to the chain a.k.a genesis block.",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r375836099,375836099,src/interfaces/node.cpp
furszy,2020-02-06 14:15:54,done.,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r375857230,375857230,src/interfaces/node.cpp
hebasto,2020-05-16 13:08:58,"6002d1185db89af124a257c894195a7f1b04c1f2\n\nMind using a default member initializer:\n```\n    uint256 m_cached_tip_blocks GUARDED_BY(m_cached_tip_mutex) {};\n```\n\n?",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r426152285,426152285,src/qt/clientmodel.cpp
hebasto,2020-05-16 13:09:47,Not sure if the comment is required here.,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r426152332,426152332,src/qt/clientmodel.h
hebasto,2020-05-16 13:32:47,Mind using a default member initializer?,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r426153967,426153967,src/qt/walletmodel.cpp
ryanofsky,2020-05-18 15:16:52,"In commit ""[WalletModel] Stop polling balance if shutdown was requested."" (ae5775a16e85144e73e999ef87dec26e22236a86)\n\nIs it necessary to include this change in the PR? I think it'd be nicer to drop this commit if it's not strictly necessary. Reasons:\n\n- I think it is cleaner to cancel the poll timer outright when shutdown is initiated instead of continuing to poll but just returning immedi",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r426702660,426702660,src/qt/walletmodel.cpp
furszy,2020-05-18 21:53:35,sure np. Can move the other members initializations (cachedBestHeaderXXX) if that is needed in another commit too.,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r426913546,426913546,src/qt/clientmodel.cpp
furszy,2020-05-18 23:07:13,"Yeah absolutely, will drop it. it's not necessary anymore and fully agree on the timer cancel from outside and performance reasons (and well, because it's an ugly patch too..).\n\nIf my memory doesn't fail me, i made it because there was a race condition over the shutdown process before (for the first commit of this PR, the one that was removed due #17905 merge) and even closing the timer proper",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r426939728,426939728,src/qt/walletmodel.cpp
ryanofsky,2020-05-19 12:20:01,"In commit ""Added best block hash to the NotifyHeaderTip and NotifyBlockTip signals."" (6002d1185db89af124a257c894195a7f1b04c1f2)\n\nProbably unintended change this line",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r427257232,427257232,src/qt/clientmodel.cpp
ryanofsky,2020-05-19 12:22:22,"In commit ""Added best block hash to the NotifyHeaderTip and NotifyBlockTip signals."" (20049ec7eac1f555dde04026594c4da4b1b80c8b)\n\nWould recommend squashing the two commits to a single one\n\n- 6002d1185db89af124a257c894195a7f1b04c1f2 Added best block hash to the NotifyHeaderTip and NotifyBlockTip signals. (1/5)\n- 20049ec7eac1f555dde04026594c4da4b1b80c8b Added best block hash to the NotifyHe",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r427258711,427258711,src/qt/clientmodel.h
furszy,2020-05-21 13:23:45,"yeah, rebase issue. Good catch.",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r428648062,428648062,src/qt/clientmodel.cpp
furszy,2020-05-21 13:38:17,"yeah absolutely. Same as the other point, rebase issue that i totally missed. Squashing it.",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r428656233,428656233,src/qt/clientmodel.h
hebasto,2020-05-23 04:35:46,"@furszy may I suggest the default member initialization again\n```suggestion\n    /** Current block hash (to know whether cached status is still valid) */\n    uint256 cur_block_hash{};\n```\n?\nAnd drop `cur_block_hash(uint256())` in the ctor initialization list.",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r429513440,429513440,src/qt/transactionrecord.h
hebasto,2020-05-23 04:47:44,And use `m_` prefix for the data member `cur_block_hash` name?,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r429514034,429514034,src/qt/transactionrecord.h
furszy,2020-05-23 23:04:35,yeah done.,https://github.com/bitcoin/bitcoin/pull/17993#discussion_r429584744,429584744,src/qt/transactionrecord.h
ryanofsky,2020-05-26 19:31:59,"In commit ""Added best block hash to the NotifyHeaderTip and NotifyBlockTip signals."" (2f867203b0c7a4438ce484be4cfa2b29dbf1abf0)\n\nNote: there is a change in behavior here. Previously the transaction would be updated when WalletModel::cachedNumBlocks changed (when the wallet model balance polling timer detected the wallet processed a new block). Now the transaction will get updated ClientModel::",https://github.com/bitcoin/bitcoin/pull/17993#discussion_r430655941,430655941,src/qt/transactiontablemodel.cpp
