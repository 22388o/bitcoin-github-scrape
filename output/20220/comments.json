[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/715268966",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#issuecomment-715268966",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20220",
    "id": 715268966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNTI2ODk2Ng==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-23T10:57:10Z",
    "updated_at": "2020-10-23T10:57:10Z",
    "author_association": "MEMBER",
    "body": "Pushed a few improvements. Should be ready for review.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/715268966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716813756",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#issuecomment-716813756",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20220",
    "id": 716813756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNjgxMzc1Ng==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-26T20:47:28Z",
    "updated_at": "2020-10-26T20:47:28Z",
    "author_association": "MEMBER",
    "body": "@Xekyo thanks for the excellent feedback--I have been building on it, writing more tests, finding a few more things, will push an update tomorrow.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/716813756/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/717000109",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#issuecomment-717000109",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20220",
    "id": 717000109,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzAwMDEwOQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-27T05:48:46Z",
    "updated_at": "2020-10-31T16:35:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20250 (Bugfix: RPC/Wallet: Make BTC/kB and sat/B fee modes work sanely by luke-jr)\n* #17211 (Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/717000109/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/717549366",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#issuecomment-717549366",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20220",
    "id": 717549366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzU0OTM2Ng==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-27T21:25:21Z",
    "updated_at": "2020-10-27T21:25:21Z",
    "author_association": "MEMBER",
    "body": "Hopefully addressed the (excellent) review feedback and also added missing explicit fee rate coverage in `wallet_basic.py` for RPCs sendtoaddress and sendmany and in `wallet_send.py` for RPC send. Found some bugs and inconsistent behavior in RPC send, some of which I notated with `TODO` comments in the tests, but left the fixes for follow-ups as I've spent a ton of time here already going through all these RPCs and the release branch-off isn't far away.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/717549366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/717675094",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#issuecomment-717675094",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20220",
    "id": 717675094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzY3NTA5NA==",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?u=d924616c3b45bdda9c3b78d1697f1fe6a92b49c5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-28T03:38:09Z",
    "updated_at": "2020-10-28T03:38:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just seeing this now. Aiming to take a look tomorrow.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/717675094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718265863",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#issuecomment-718265863",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20220",
    "id": 718265863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODI2NTg2Mw==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-28T23:27:44Z",
    "updated_at": "2020-10-28T23:27:44Z",
    "author_association": "MEMBER",
    "body": "Thanks @Xekyo, updated units and comments per `git diff c80e227 0be2900`.\r\n\r\n<details><summary><code>git diff c80e227 0be2900</code></summary><p>\r\n\r\n```diff\r\ndiff --git a/test/functional/rpc_fundrawtransaction.py b/test/functional/rpc_fundrawtransaction.py\r\nindex a0e1d1b8a3..85ecb40354 100755\r\n--- a/test/functional/rpc_fundrawtransaction.py\r\n+++ b/test/functional/rpc_fundrawtransaction.py\r\n@@ -721,7 +721,7 @@ class RawTransactionsTest(BitcoinTestFramework):\r\n                     assert_raises_rpc_error(-8, \"Invalid conf_target, must be between 1 and 1008\",\r\n                         lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": n}))\r\n \r\n-        for unit, fee_rate in {\"SAT/B\": 0.99999999, \"BTC/KB\": 0.00000999}.items():\r\n+        for unit, fee_rate in {\"sat/B\": 0.99999999, \"BTC/kB\": 0.00000999}.items():\r\n             self.log.info(\"- raises RPC error 'fee rate too low' if conf_target {} and estimate_mode {} are passed\".format(fee_rate, unit))\r\n             assert_raises_rpc_error(-4, \"Fee rate (0.00000999 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\r\n                 lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": unit, \"conf_target\": fee_rate, \"add_inputs\": True}))\r\ndiff --git a/test/functional/rpc_psbt.py b/test/functional/rpc_psbt.py\r\nindex 31a28d6ae7..28bcc516c6 100755\r\n--- a/test/functional/rpc_psbt.py\r\n+++ b/test/functional/rpc_psbt.py\r\n@@ -238,7 +238,7 @@ class PSBTTest(BitcoinTestFramework):\r\n             assert_raises_rpc_error(-4, \"Fee rate (0.00000999 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\r\n                 lambda: self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"estimate_mode\": unit, \"conf_target\": fee_rate, \"add_inputs\": True}))\r\n \r\n-        self.log.info(\"Test walletcreatefundedpsbt feeRate of 10 BTC/KB produces total fee well above -maxtxfee and raises RPC error\")\r\n+        self.log.info(\"Test walletcreatefundedpsbt feeRate of 10 BTC/kB produces total fee well above -maxtxfee and raises RPC error\")\r\n         # previously this was silently capped at -maxtxfee\r\n         for bool_add, outputs_array in {True: outputs, False: [{self.nodes[1].getnewaddress(): 1}]}.items():\r\n             assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\",\r\ndiff --git a/test/functional/wallet_basic.py b/test/functional/wallet_basic.py\r\nindex 584be1da94..411ae3db29 100755\r\n--- a/test/functional/wallet_basic.py\r\n+++ b/test/functional/wallet_basic.py\r\n@@ -228,7 +228,7 @@ class WalletTest(BitcoinTestFramework):\r\n         assert_equal(self.nodes[2].getbalance(), node_2_bal)\r\n         node_0_bal = self.check_fee_amount(self.nodes[0].getbalance(), node_0_bal + Decimal('10'), fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\r\n \r\n-        self.log.info(\"Test explicit fee (sendmany as BTC/kB)\")\r\n+        self.log.info(\"Test case-insensitive explicit fee rate (sendmany as BTC/kB)\")\r\n         # Throw if no conf_target provided\r\n         assert_raises_rpc_error(-8, \"Selected estimate_mode bTc/kB requires a fee rate to be specified in conf_target\",\r\n             self.nodes[2].sendmany,\r\n@@ -254,7 +254,7 @@ class WalletTest(BitcoinTestFramework):\r\n         node_0_bal += Decimal('10')\r\n         assert_equal(self.nodes[0].getbalance(), node_0_bal)\r\n \r\n-        self.log.info(\"Test explicit fee (sendmany as sat/B)\")\r\n+        self.log.info(\"Test case-insensitive explicit fee rate (sendmany as sat/B)\")\r\n         # Throw if no conf_target provided\r\n         assert_raises_rpc_error(-8, \"Selected estimate_mode sat/b requires a fee rate to be specified in conf_target\",\r\n             self.nodes[2].sendmany,\r\n@@ -283,7 +283,7 @@ class WalletTest(BitcoinTestFramework):\r\n         assert_equal(self.nodes[0].getbalance(), node_0_bal)\r\n \r\n         # Test setting explicit fee rate just below the minimum.\r\n-        for unit, fee_rate in {\"BTC/KB\": 0.00000999, \"SAT/B\": 0.99999999}.items():\r\n+        for unit, fee_rate in {\"BTC/kB\": 0.00000999, \"sat/B\": 0.99999999}.items():\r\n             self.log.info(\"Test sendmany raises 'fee rate too low' if conf_target {} and estimate_mode {} are passed\".format(fee_rate, unit))\r\n             assert_raises_rpc_error(-6, \"Fee rate (0.00000999 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\r\n                 self.nodes[2].sendmany, amounts={address: 10}, estimate_mode=unit, conf_target=fee_rate)\r\n@@ -421,7 +421,7 @@ class WalletTest(BitcoinTestFramework):\r\n             self.nodes[0].generate(1)\r\n             self.sync_all(self.nodes[0:3])\r\n \r\n-            self.log.info(\"Test explicit fee (sendtoaddress as BTC/kB)\")\r\n+            self.log.info(\"Test case-insensitive explicit fee rate (sendtoaddress as BTC/kB)\")\r\n             self.nodes[0].generate(1)\r\n             self.sync_all(self.nodes[0:3])\r\n             prebalance = self.nodes[2].getbalance()\r\n@@ -456,7 +456,7 @@ class WalletTest(BitcoinTestFramework):\r\n \r\n             self.sync_all(self.nodes[0:3])\r\n \r\n-            self.log.info(\"Test explicit fee (sendtoaddress as sat/B)\")\r\n+            self.log.info(\"Test case-insensitive explicit fee rate (sendtoaddress as sat/B)\")\r\n             self.nodes[0].generate(1)\r\n             prebalance = self.nodes[2].getbalance()\r\n             assert prebalance > 2\r\n@@ -489,7 +489,7 @@ class WalletTest(BitcoinTestFramework):\r\n             assert_fee_amount(fee, tx_size, Decimal('0.00002000'))\r\n \r\n             # Test setting explicit fee rate just below the minimum.\r\n-            for unit, fee_rate in {\"BTC/KB\": 0.00000999, \"SAT/B\": 0.99999999}.items():\r\n+            for unit, fee_rate in {\"BTC/kB\": 0.00000999, \"sat/B\": 0.99999999}.items():\r\n                 self.log.info(\"Test sendtoaddress raises 'fee rate too low' if conf_target {} and estimate_mode {} are passed\".format(fee_rate, unit))\r\n                 assert_raises_rpc_error(-6, \"Fee rate (0.00000999 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\r\n                     self.nodes[2].sendtoaddress, address=address, amount=1, estimate_mode=unit, conf_target=fee_rate)\r\ndiff --git a/test/functional/wallet_send.py b/test/functional/wallet_send.py\r\nindex a6002b67f0..5840a24404 100755\r\n--- a/test/functional/wallet_send.py\r\n+++ b/test/functional/wallet_send.py\r\n@@ -271,7 +271,7 @@ class WalletSendTest(BitcoinTestFramework):\r\n         fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\r\n         assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00003\"))\r\n \r\n-        # TODO: This test should pass with all modes, e.g. with the next line uncommented.\r\n+        # TODO: This test should pass with all modes, e.g. with the next line uncommented, for consistency with the other explicit feerate RPCs.\r\n         # for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\r\n         for mode in [\"btc/kb\", \"sat/b\"]:\r\n             self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=-1, estimate_mode=mode,\r\n@@ -285,24 +285,24 @@ class WalletSendTest(BitcoinTestFramework):\r\n             # TODO: these 2 equivalent sends with an invalid estimate_mode arg should both fail, but they do not...why?\r\n             # self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=0.1, arg_estimate_mode=mode,\r\n             #     expect_error=(-8, \"Invalid estimate_mode parameter\"))\r\n-            # assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\", lambda: w0.send({w0.getnewaddress(): 1}, 0.1, mode))\r\n+            # assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\", lambda: w0.send({w1.getnewaddress(): 1}, 0.1, mode))\r\n \r\n-        # TODO: These tests should pass but they do not.\r\n+        # TODO: These tests should pass for consistency with the other explicit feerate RPCs, but they do not.\r\n         # for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\r\n         #     self.log.debug(\"{}\".format(mode))\r\n         #     for k, v in {\"string\": \"\", \"object\": {\"foo\": \"bar\"}}.items():\r\n         #         self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=v, estimate_mode=mode,\r\n         #             expect_error=(-3, \"Expected type number for conf_target, got {}\".format(k)))\r\n \r\n-        # TODO: error should use sat/b\r\n+        # TODO: error should use sat/B instead of BTC/kB if sat/B is selected.\r\n         # Test setting explicit fee rate just below the minimum.\r\n-        for unit, fee_rate in {\"SAT/B\": 0.99999999, \"BTC/KB\": 0.00000999}.items():\r\n+        for unit, fee_rate in {\"sat/B\": 0.99999999, \"BTC/kB\": 0.00000999}.items():\r\n             self.log.info(\"Explicit fee rate raises RPC error 'fee rate too low' if conf_target {} and estimate_mode {} are passed\".format(fee_rate, unit))\r\n             self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=fee_rate, estimate_mode=unit,\r\n                 expect_error=(-4, \"Fee rate (0.00000999 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\"))\r\n \r\n         self.log.info(\"Explicit fee rate raises RPC error if estimate_mode is passed without a conf_target\")\r\n-        for unit, fee_rate in {\"SAT/B\": 100, \"BTC/KB\": 0.001}.items():\r\n+        for unit, fee_rate in {\"sat/B\": 100, \"BTC/kB\": 0.001}.items():\r\n             self.test_send(from_wallet=w0, to_wallet=w1, amount=1, estimate_mode=unit,\r\n                 expect_error=(-8, \"Selected estimate_mode {} requires a fee rate to be specified in conf_target\".format(unit)))\r\n\r\n```\r\n</p></details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718265863/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718278451",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#issuecomment-718278451",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20220",
    "id": 718278451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODI3ODQ1MQ==",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?u=d924616c3b45bdda9c3b78d1697f1fe6a92b49c5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T00:09:29Z",
    "updated_at": "2020-10-29T00:09:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just ran the functional tests (for the previous commit I reviewed), which takes a surprisingly long time. Luckily, the first hit on an internet search for how to run the functional tests was this guide by some Jon Atack, made it really easy to get set up. :laughing: ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718278451/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718280719",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#issuecomment-718280719",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20220",
    "id": 718280719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODI4MDcxOQ==",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?u=d924616c3b45bdda9c3b78d1697f1fe6a92b49c5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T00:17:01Z",
    "updated_at": "2020-10-29T00:17:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Changes look great to me. \r\nutack `0be2900` \r\ncurrently running functional tests.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718280719/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718283509",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#issuecomment-718283509",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20220",
    "id": 718283509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODI4MzUwOQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T00:25:35Z",
    "updated_at": "2020-10-29T00:35:26Z",
    "author_association": "MEMBER",
    "body": "@Xekyo You can run them in parallel; if you have sufficient RAM pretty extremely even. `test_runner.py -j60` works fine on my 4-core 32 GiB RAM system, taking 3m46s. A lot of the time consists of processes waiting for each other, so it's not actually CPU bound.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718283509/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718286085",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#issuecomment-718286085",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20220",
    "id": 718286085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODI4NjA4NQ==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T00:34:06Z",
    "updated_at": "2020-10-29T00:34:06Z",
    "author_association": "MEMBER",
    "body": "> You can run them in parallel; if you have sufficient RAM pretty extremely even. `test_runner.py -j60` works fine on my 4-core 32 GIB RAM system\n\nGood point; I'll mention that in the guide.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718286085/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718287029",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#issuecomment-718287029",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20220",
    "id": 718287029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODI4NzAyOQ==",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?u=d924616c3b45bdda9c3b78d1697f1fe6a92b49c5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-29T00:37:33Z",
    "updated_at": "2020-10-29T00:37:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "tack (functional tests only) 0be29000c011dec0722481dbebb159873da6fa54",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718287029/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/720452130",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#issuecomment-720452130",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20220",
    "id": 720452130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDQ1MjEzMA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-02T12:50:52Z",
    "updated_at": "2020-11-02T12:50:52Z",
    "author_association": "MEMBER",
    "body": "> @Xekyo You can run them in parallel; if you have sufficient RAM pretty extremely even. `test_runner.py -j60` works fine on my 4-core 32 GiB RAM system, taking 3m46s. A lot of the time consists of processes waiting for each other, so it's not actually CPU bound.\r\n\r\nI have a sloow 4-core 32GB RAM laptop and `test/functional/test_runner.py -j60` does run much faster--good tip.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/720452130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721593631",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#issuecomment-721593631",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20220",
    "id": 721593631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTU5MzYzMQ==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-04T08:42:07Z",
    "updated_at": "2020-11-04T08:42:07Z",
    "author_association": "MEMBER",
    "body": "Thank you @Xekyo, @kallewoof and @meshcollider!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721593631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510322471",
    "pull_request_review_id": 514943224,
    "id": 510322471,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMyMjQ3MQ==",
    "diff_hunk": "@@ -3461,7 +3461,6 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n             if (options.exists(\"fee_rate\")) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\");\n             }\n-            coin_control.m_confirm_target = ParseConfirmTarget(conf_target, pwallet->chain().estimateMaxBlocks());",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 79,
    "original_position": 4,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "59222c6e22349b26baebd707a7174848130c653f",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This action is performed in `SetFeeEstimateMode()` and calling it in bumpfee beforehand causes an error when explicit feerates are used (issue #20219).",
    "created_at": "2020-10-22T17:06:14Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r510322471",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510322471"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r510322471"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510322471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3464,
    "original_line": 3464,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511134364",
    "pull_request_review_id": 515982840,
    "id": 511134364,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEzNDM2NA==",
    "diff_hunk": "@@ -132,6 +134,13 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n     if mode == \"fee_rate\":\n         bumped_psbt = rbf_node.psbtbumpfee(rbfid, {\"fee_rate\": NORMAL})\n         bumped_tx = rbf_node.bumpfee(rbfid, {\"fee_rate\": NORMAL})\n+    elif mode == BTC_MODE:",
    "path": "test/functional/wallet_bumpfee.py",
    "position": 115,
    "original_position": 33,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "995dd4a6e7c21665472e71d7aac0251f379e3420",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Isn't the `BTC_MODE then essentially a duplicate of the `{\"fee_rate\": \u2026}` option?",
    "created_at": "2020-10-23T20:13:59Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511134364",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511134364"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511134364"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511134364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 164,
    "original_line": 164,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511135422",
    "pull_request_review_id": 515982840,
    "id": 511135422,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEzNTQyMg==",
    "diff_hunk": "@@ -168,24 +168,54 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n \n \n def test_feerate_args(self, rbf_node, peer_node, dest_address):\n-    self.log.info('Test fee_rate args')\n+    self.log.info('Test feerate args')",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 5,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't understand this change. Is this not referring to the \"fee_rate\" argument below?",
    "created_at": "2020-10-23T20:16:29Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511135422",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511135422"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511135422"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511135422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 171,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511136927",
    "pull_request_review_id": 515982840,
    "id": 511136927,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEzNjkyNw==",
    "diff_hunk": "@@ -3459,7 +3459,7 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n \n         if (!conf_target.isNull()) {\n             if (options.exists(\"fee_rate\")) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\");\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\");",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 77,
    "original_position": 14,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "So much clearer! :+1: ",
    "created_at": "2020-10-23T20:20:13Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511136927",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511136927"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511136927"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511136927/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3466,
    "original_line": 3466,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511139081",
    "pull_request_review_id": 515982840,
    "id": 511139081,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTEzOTA4MQ==",
    "diff_hunk": "@@ -168,24 +168,54 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n \n \n def test_feerate_args(self, rbf_node, peer_node, dest_address):\n-    self.log.info('Test fee_rate args')\n+    self.log.info('Test feerate args')\n     rbfid = spend_one_input(rbf_node, dest_address)\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"confTarget\": 1})\n-\n     assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\":0.00001, \"confTarget\": 1})\n \n     # Bumping to just above minrelay should fail to increase total fee enough, at least\n     assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n-\n     assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n-\n     assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n-    self.clear_mempool()\n \n+    self.log.info(\"Test explicit feerate raises RPC error if estimate_mode is passed without a conf_target\")\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"estimate_mode\": BTC_MODE})",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 24,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Style nit: line 183 uses \"feerate\", 184 uses \"fee rate\". I'd prefer \"feerate\" per Optech style guide, but if the error message currently is \"fee rate\", it might be nicer to keep it homogeneous.",
    "created_at": "2020-10-23T20:25:22Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511139081",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511139081"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511139081"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511139081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 184,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511142032",
    "pull_request_review_id": 515982840,
    "id": 511142032,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0MjAzMg==",
    "diff_hunk": "@@ -168,24 +168,54 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n \n \n def test_feerate_args(self, rbf_node, peer_node, dest_address):\n-    self.log.info('Test fee_rate args')\n+    self.log.info('Test feerate args')\n     rbfid = spend_one_input(rbf_node, dest_address)\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"confTarget\": 1})\n-\n     assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\":0.00001, \"confTarget\": 1})\n \n     # Bumping to just above minrelay should fail to increase total fee enough, at least\n     assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n-\n     assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n-\n     assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n-    self.clear_mempool()\n \n+    self.log.info(\"Test explicit feerate raises RPC error if estimate_mode is passed without a conf_target\")\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"estimate_mode\": BTC_MODE})\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 10, \"estimate_mode\": SAT_MODE})",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 25,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That's an odd name clash, that the error complains about the missing \"fee rate\", but it's actually `conf_target` that's missing. I assume that was part of the items that #19543 was meant to address?",
    "created_at": "2020-10-23T20:32:37Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511142032",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511142032"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511142032"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511142032/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 185,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511143512",
    "pull_request_review_id": 515982840,
    "id": 511143512,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0MzUxMg==",
    "diff_hunk": "@@ -168,24 +168,54 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n \n \n def test_feerate_args(self, rbf_node, peer_node, dest_address):\n-    self.log.info('Test fee_rate args')\n+    self.log.info('Test feerate args')\n     rbfid = spend_one_input(rbf_node, dest_address)\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"confTarget\": 1})\n-\n     assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\":0.00001, \"confTarget\": 1})\n \n     # Bumping to just above minrelay should fail to increase total fee enough, at least\n     assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n-\n     assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n-\n     assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n-    self.clear_mempool()\n \n+    self.log.info(\"Test explicit feerate raises RPC error if estimate_mode is passed without a conf_target\")\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"estimate_mode\": BTC_MODE})\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 10, \"estimate_mode\": SAT_MODE})\n+\n+    self.log.info(\"Test explicit feerate raises RPC error if both fee_rate and conf_target are passed\")\n+    msg = \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation \" \\\n+          \"target in blocks for automatic fee estimation, or an explicit fee rate.\"\n+    assert_raises_rpc_error(-8, msg, rbf_node.bumpfee, rbfid, {\"conf_target\": NORMAL, \"fee_rate\": NORMAL})",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 30,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Okay, I guess this is a prime example of what is meant to get addressed in #19543. `conf_target` actually being a feerate is fairly icky.",
    "created_at": "2020-10-23T20:36:15Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511143512",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511143512"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511143512"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511143512/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 190,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511145359",
    "pull_request_review_id": 515982840,
    "id": 511145359,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NTM1OQ==",
    "diff_hunk": "@@ -168,24 +168,54 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n \n \n def test_feerate_args(self, rbf_node, peer_node, dest_address):\n-    self.log.info('Test fee_rate args')\n+    self.log.info('Test feerate args')\n     rbfid = spend_one_input(rbf_node, dest_address)\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"confTarget\": 1})\n-\n     assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\":0.00001, \"confTarget\": 1})\n \n     # Bumping to just above minrelay should fail to increase total fee enough, at least\n     assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n-\n     assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n-\n     assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n-    self.clear_mempool()\n \n+    self.log.info(\"Test explicit feerate raises RPC error if estimate_mode is passed without a conf_target\")\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"estimate_mode\": BTC_MODE})\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 10, \"estimate_mode\": SAT_MODE})\n+\n+    self.log.info(\"Test explicit feerate raises RPC error if both fee_rate and conf_target are passed\")\n+    msg = \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation \" \\",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 28,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: `msg` is a bit unspecific. Could be for example `msg_both` or `error_both`",
    "created_at": "2020-10-23T20:40:58Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511145359",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511145359"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511145359"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511145359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 188,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511146854",
    "pull_request_review_id": 515982840,
    "id": 511146854,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0Njg1NA==",
    "diff_hunk": "@@ -168,24 +168,54 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n \n \n def test_feerate_args(self, rbf_node, peer_node, dest_address):\n-    self.log.info('Test fee_rate args')\n+    self.log.info('Test feerate args')\n     rbfid = spend_one_input(rbf_node, dest_address)\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"confTarget\": 1})\n-\n     assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\":0.00001, \"confTarget\": 1})\n \n     # Bumping to just above minrelay should fail to increase total fee enough, at least\n     assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n-\n     assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n-\n     assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n-    self.clear_mempool()\n \n+    self.log.info(\"Test explicit feerate raises RPC error if estimate_mode is passed without a conf_target\")\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"estimate_mode\": BTC_MODE})\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 10, \"estimate_mode\": SAT_MODE})\n+\n+    self.log.info(\"Test explicit feerate raises RPC error if both fee_rate and conf_target are passed\")\n+    msg = \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation \" \\\n+          \"target in blocks for automatic fee estimation, or an explicit fee rate.\"\n+    assert_raises_rpc_error(-8, msg, rbf_node.bumpfee, rbfid, {\"conf_target\": NORMAL, \"fee_rate\": NORMAL})\n+\n+    self.log.info(\"Test invalid conf_target settings\")\n+    for field in [\"confTarget\", \"conf_target\"]:\n+        assert_raises_rpc_error(-8, msg, rbf_node.bumpfee, rbfid, {field: 1, \"fee_rate\": NORMAL})\n+    too_high = \"is too high (cannot be higher than -maxtxfee\"\n+    assert_raises_rpc_error(-4, too_high, lambda: rbf_node.bumpfee(rbfid, {\"estimate_mode\": BTC_MODE, \"conf_target\": 2009}))\n+    assert_raises_rpc_error(-4, too_high, lambda: rbf_node.bumpfee(rbfid, {\"estimate_mode\": SAT_MODE, \"conf_target\": 2009 * 10000}))",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 37,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Potential missing test case: what would happen if we specified something lower than `minRelayTxFeerate` here?",
    "created_at": "2020-10-23T20:44:29Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511146854",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511146854"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511146854"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511146854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 197,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511148504",
    "pull_request_review_id": 515982840,
    "id": 511148504,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0ODUwNA==",
    "diff_hunk": "@@ -168,24 +168,54 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n \n \n def test_feerate_args(self, rbf_node, peer_node, dest_address):\n-    self.log.info('Test fee_rate args')\n+    self.log.info('Test feerate args')\n     rbfid = spend_one_input(rbf_node, dest_address)\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"confTarget\": 1})\n-\n     assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\":0.00001, \"confTarget\": 1})\n \n     # Bumping to just above minrelay should fail to increase total fee enough, at least\n     assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n-\n     assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n-\n     assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n-    self.clear_mempool()\n \n+    self.log.info(\"Test explicit feerate raises RPC error if estimate_mode is passed without a conf_target\")\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"estimate_mode\": BTC_MODE})\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 10, \"estimate_mode\": SAT_MODE})\n+\n+    self.log.info(\"Test explicit feerate raises RPC error if both fee_rate and conf_target are passed\")\n+    msg = \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation \" \\\n+          \"target in blocks for automatic fee estimation, or an explicit fee rate.\"\n+    assert_raises_rpc_error(-8, msg, rbf_node.bumpfee, rbfid, {\"conf_target\": NORMAL, \"fee_rate\": NORMAL})\n+\n+    self.log.info(\"Test invalid conf_target settings\")\n+    for field in [\"confTarget\", \"conf_target\"]:\n+        assert_raises_rpc_error(-8, msg, rbf_node.bumpfee, rbfid, {field: 1, \"fee_rate\": NORMAL})\n+    too_high = \"is too high (cannot be higher than -maxtxfee\"\n+    assert_raises_rpc_error(-4, too_high, lambda: rbf_node.bumpfee(rbfid, {\"estimate_mode\": BTC_MODE, \"conf_target\": 2009}))\n+    assert_raises_rpc_error(-4, too_high, lambda: rbf_node.bumpfee(rbfid, {\"estimate_mode\": SAT_MODE, \"conf_target\": 2009 * 10000}))\n+\n+    self.log.info(\"Test invalid estimate_mode settings\")\n+    for k, v in {\"number\": 42, \"object\": {\"foo\": \"bar\"}}.items():",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 40,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "TIL how to iterate through a dictionary in python. :)",
    "created_at": "2020-10-23T20:48:31Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511148504",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511148504"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511148504"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511148504/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 200,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511153062",
    "pull_request_review_id": 515982840,
    "id": 511153062,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MzA2Mg==",
    "diff_hunk": "@@ -100,28 +99,55 @@ def run_test(self):\n         test_small_output_with_feerate_succeeds(self, rbf_node, dest_address)\n         test_no_more_inputs_fails(self, rbf_node, dest_address)\n \n-    def test_invalid_parameters(self, node, dest_address):\n-        txid = spend_one_input(node, dest_address)\n-        # invalid estimate mode\n-        assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\", node.bumpfee, txid, {\n-            \"estimate_mode\": \"moo\",\n-        })\n-        assert_raises_rpc_error(-3, \"Expected type string\", node.bumpfee, txid, {\n-            \"estimate_mode\": 38,\n-        })\n-        assert_raises_rpc_error(-3, \"Expected type string\", node.bumpfee, txid, {\n-            \"estimate_mode\": {\n-                \"foo\": \"bar\",\n-            },\n-        })\n-        assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\", node.bumpfee, txid, {\n-            \"estimate_mode\": Decimal(\"3.141592\"),\n-        })\n-        # confTarget and conf_target\n-        assert_raises_rpc_error(-8, \"confTarget and conf_target options should not both be set\", node.bumpfee, txid, {\n-            \"confTarget\": 123,\n-            \"conf_target\": 456,\n-        })\n+    def test_invalid_parameters(self, rbf_node, peer_node, dest_address):",
    "path": "test/functional/wallet_bumpfee.py",
    "position": 58,
    "original_position": 38,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "9ea6d390c26975c98a9cf28cf816bcbded9aa3d1",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a bit hard to review. My approach would currently be to check line by line whether all test cases are accounted for but that would probably be easier if the reordering of code and the refactoring to traverse the test cases had been separated into two commits. What would a reviewer usually be expected to do here?\r\n\r\nAlternatively, I suspect that there might be better diff tools that can follow a change like this. :thinking: ",
    "created_at": "2020-10-23T21:00:05Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511153062",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511153062"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511153062"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511153062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 102,
    "original_line": 102,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511153839",
    "pull_request_review_id": 515982840,
    "id": 511153839,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MzgzOQ==",
    "diff_hunk": "@@ -272,11 +272,12 @@ UniValue DescribeAddress(const CTxDestination& dest)\n \n unsigned int ParseConfirmTarget(const UniValue& value, unsigned int max_target)\n {\n-    int target = value.get_int();\n-    if (target < 1 || (unsigned int)target > max_target) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid conf_target, must be between %u - %u\", 1, max_target));\n+    const int target{value.get_int()};",
    "path": "src/rpc/util.cpp",
    "position": 7,
    "original_position": 7,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "84fc42f32c8f649918e3db55d1dcc62d9f402224",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What is the advantage of this construction over the previous line?",
    "created_at": "2020-10-23T21:02:04Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511153839",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511153839"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511153839"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511153839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 275,
    "original_line": 275,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511156476",
    "pull_request_review_id": 515982840,
    "id": 511156476,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1NjQ3Ng==",
    "diff_hunk": "@@ -272,11 +272,12 @@ UniValue DescribeAddress(const CTxDestination& dest)\n \n unsigned int ParseConfirmTarget(const UniValue& value, unsigned int max_target)\n {\n-    int target = value.get_int();\n-    if (target < 1 || (unsigned int)target > max_target) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid conf_target, must be between %u - %u\", 1, max_target));\n+    const int target{value.get_int()};\n+    const unsigned int unsigned_target{static_cast<unsigned int>(target)};\n+    if (target < 1 || unsigned_target > max_target) {",
    "path": "src/rpc/util.cpp",
    "position": 9,
    "original_position": 9,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "84fc42f32c8f649918e3db55d1dcc62d9f402224",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Would this not fail if the value of the input was between `MAX_INT` if `max_target` were between `MAX_INT` and `MAX_UNSIGNED_INT`?",
    "created_at": "2020-10-23T21:09:21Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511156476",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511156476"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511156476"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511156476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 277,
    "original_line": 277,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511157014",
    "pull_request_review_id": 515982840,
    "id": 511157014,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1NzAxNA==",
    "diff_hunk": "@@ -272,11 +272,12 @@ UniValue DescribeAddress(const CTxDestination& dest)\n \n unsigned int ParseConfirmTarget(const UniValue& value, unsigned int max_target)\n {\n-    int target = value.get_int();\n-    if (target < 1 || (unsigned int)target > max_target) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid conf_target, must be between %u - %u\", 1, max_target));\n+    const int target{value.get_int()};\n+    const unsigned int unsigned_target{static_cast<unsigned int>(target)};\n+    if (target < 1 || unsigned_target > max_target) {",
    "path": "src/rpc/util.cpp",
    "position": 9,
    "original_position": 9,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "84fc42f32c8f649918e3db55d1dcc62d9f402224",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I assume this is safe, because `max_target` is 1000 blocks, but I did spend a few minutes staring at this.",
    "created_at": "2020-10-23T21:10:47Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511157014",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511157014"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511157014"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511157014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 277,
    "original_line": 277,
    "side": "RIGHT",
    "in_reply_to_id": 511156476
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511158281",
    "pull_request_review_id": 515982840,
    "id": 511158281,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1ODI4MQ==",
    "diff_hunk": "@@ -672,6 +674,53 @@ def test_option_feerate(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+    def test_feerate_with_conf_target_and_estimate_mode(self):\n+        self.log.info(\"Test fundrawtxn passing an explicit feerate using conf_target and estimate_mode\")\n+        node = self.nodes[3]\n+        # Make sure there is exactly one input so coin selection can't skew the result.\n+        assert_equal(len(node.listunspent(1)), 1)\n+        inputs = []\n+        outputs = {node.getnewaddress() : 1}\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+\n+        for unit, feerate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n+            self.log.info(\"Test fundrawtxn with conf_target {} estimate_mode {} produces expected fee\".format(feerate, unit))\n+            # With no arguments passed, expect fee of 141 sats/b.\n+            assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n+            # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n+            result = node.fundrawtransaction(rawtx, {\"conf_target\": feerate, \"estimate_mode\": unit})\n+            assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n+\n+        for field, feerate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n+            self.log.info(\"Test fundrawtxn raises RPC error if both feeRate and {} are passed\".format(field))\n+            assert_raises_rpc_error(\n+                -8, \"Cannot specify both {} and feeRate\".format(field),",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": 40,
    "original_position": 40,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "84fc42f32c8f649918e3db55d1dcc62d9f402224",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "So now we have `fee rate`, `feeRate` and `fee_rate` in one PR. The horrors. :sweat_smile: ",
    "created_at": "2020-10-23T21:14:19Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511158281",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511158281"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511158281"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511158281/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 697,
    "original_line": 697,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511159365",
    "pull_request_review_id": 515982840,
    "id": 511159365,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1OTM2NQ==",
    "diff_hunk": "@@ -174,8 +174,11 @@ def run_test(self):\n             elif out['scriptPubKey']['addresses'][0] == p2pkh:\n                 p2pkh_pos = out['n']\n \n+        inputs = [{\"txid\": txid, \"vout\": p2wpkh_pos}, {\"txid\": txid, \"vout\": p2sh_p2wpkh_pos}, {\"txid\": txid, \"vout\": p2pkh_pos}]\n+        addr = {self.nodes[1].getnewaddress(): 29.99}",
    "path": "test/functional/rpc_psbt.py",
    "position": null,
    "original_position": 5,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "1b498b9b6aa4d2d7c1d316f9ab4bc4c96728cd6a",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: since this is an address and amount, how about \"receiver_output\"?",
    "created_at": "2020-10-23T21:17:12Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511159365",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511159365"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511159365"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511159365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 178,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511160072",
    "pull_request_review_id": 515982840,
    "id": 511160072,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE2MDA3Mg==",
    "diff_hunk": "@@ -186,14 +189,15 @@ def run_test(self):\n         assert_equal(walletprocesspsbt_out['complete'], True)\n         self.nodes[1].sendrawtransaction(self.nodes[1].finalizepsbt(walletprocesspsbt_out['psbt'])['hex'])\n \n-        # feeRate of 0.1 BTC / KB produces a total fee slightly below -maxtxfee (~0.05280000):\n-        res = self.nodes[1].walletcreatefundedpsbt([{\"txid\":txid,\"vout\":p2wpkh_pos},{\"txid\":txid,\"vout\":p2sh_p2wpkh_pos},{\"txid\":txid,\"vout\":p2pkh_pos}], {self.nodes[1].getnewaddress():29.99}, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n+        self.log.info(\"Test feeRate of 0.1 BTC / KB produces a total fee slightly below -maxtxfee (~0.05280000)\")",
    "path": "test/functional/rpc_psbt.py",
    "position": null,
    "original_position": 19,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "1b498b9b6aa4d2d7c1d316f9ab4bc4c96728cd6a",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: \"K\" is the symbol for Kelvin, it's \"kB\", also remove spacing like below for consistency. :nerd_face: ",
    "created_at": "2020-10-23T21:19:17Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511160072",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511160072"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511160072"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511160072/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 192,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511161360",
    "pull_request_review_id": 515982840,
    "id": 511161360,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE2MTM2MA==",
    "diff_hunk": "@@ -186,14 +189,15 @@ def run_test(self):\n         assert_equal(walletprocesspsbt_out['complete'], True)\n         self.nodes[1].sendrawtransaction(self.nodes[1].finalizepsbt(walletprocesspsbt_out['psbt'])['hex'])\n \n-        # feeRate of 0.1 BTC / KB produces a total fee slightly below -maxtxfee (~0.05280000):\n-        res = self.nodes[1].walletcreatefundedpsbt([{\"txid\":txid,\"vout\":p2wpkh_pos},{\"txid\":txid,\"vout\":p2sh_p2wpkh_pos},{\"txid\":txid,\"vout\":p2pkh_pos}], {self.nodes[1].getnewaddress():29.99}, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n+        self.log.info(\"Test feeRate of 0.1 BTC / KB produces a total fee slightly below -maxtxfee (~0.05280000)\")\n+        res = self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n         assert_approx(res[\"fee\"], 0.055, 0.005)\n \n-        # feeRate of 10 BTC / KB produces a total fee well above -maxtxfee\n+        self.log.info(\"Test feeRate of 10 BTC/KB produces total fee well above -maxtxfee and raises RPC error\")\n         # previously this was silently capped at -maxtxfee\n-        assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\", self.nodes[1].walletcreatefundedpsbt, [{\"txid\":txid,\"vout\":p2wpkh_pos},{\"txid\":txid,\"vout\":p2sh_p2wpkh_pos},{\"txid\":txid,\"vout\":p2pkh_pos}], {self.nodes[1].getnewaddress():29.99}, 0, {\"feeRate\": 10, \"add_inputs\": True})\n-        assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\", self.nodes[1].walletcreatefundedpsbt, [{\"txid\":txid,\"vout\":p2wpkh_pos},{\"txid\":txid,\"vout\":p2sh_p2wpkh_pos},{\"txid\":txid,\"vout\":p2pkh_pos}], {self.nodes[1].getnewaddress():1}, 0, {\"feeRate\": 10, \"add_inputs\": False})\n+        for bool_add, addr in {True: addr, False: {self.nodes[1].getnewaddress(): 1}}.items():",
    "path": "test/functional/rpc_psbt.py",
    "position": null,
    "original_position": 28,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "1b498b9b6aa4d2d7c1d316f9ab4bc4c96728cd6a",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Still getting used to this, but totally see what you're doing now. :)",
    "created_at": "2020-10-23T21:22:52Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511161360",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511161360"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511161360"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511161360/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 198,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511163315",
    "pull_request_review_id": 515982840,
    "id": 511163315,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE2MzMxNQ==",
    "diff_hunk": "@@ -189,10 +189,46 @@ def run_test(self):\n         assert_equal(walletprocesspsbt_out['complete'], True)\n         self.nodes[1].sendrawtransaction(self.nodes[1].finalizepsbt(walletprocesspsbt_out['psbt'])['hex'])\n \n-        self.log.info(\"Test feeRate of 0.1 BTC / KB produces a total fee slightly below -maxtxfee (~0.05280000)\")\n+        self.log.info(\"Test feeRate of 0.1 BTC / KB produces a total fee at or slightly below -maxtxfee (~0.05290000)\")\n         res = self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n         assert_approx(res[\"fee\"], 0.055, 0.005)\n \n+        self.log.info(\"Test passing walletcreatefundedpsbt explicit feerate with conf_target and estimate_mode\")\n+        for unit, feerate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():",
    "path": "test/functional/rpc_psbt.py",
    "position": null,
    "original_position": 10,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "6ad143c294858af93d22012c2d52997b05db0028",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Probably not the right place to bring this up, but the explicit specifying of the unit does seem really error prone as mentioned in the comments of #19543 before. ",
    "created_at": "2020-10-23T21:28:43Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511163315",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511163315"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511163315"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511163315/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 197,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511165359",
    "pull_request_review_id": 515982840,
    "id": 511165359,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE2NTM1OQ==",
    "diff_hunk": "@@ -189,10 +189,46 @@ def run_test(self):\n         assert_equal(walletprocesspsbt_out['complete'], True)\n         self.nodes[1].sendrawtransaction(self.nodes[1].finalizepsbt(walletprocesspsbt_out['psbt'])['hex'])\n \n-        self.log.info(\"Test feeRate of 0.1 BTC / KB produces a total fee slightly below -maxtxfee (~0.05280000)\")\n+        self.log.info(\"Test feeRate of 0.1 BTC / KB produces a total fee at or slightly below -maxtxfee (~0.05290000)\")\n         res = self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n         assert_approx(res[\"fee\"], 0.055, 0.005)\n \n+        self.log.info(\"Test passing walletcreatefundedpsbt explicit feerate with conf_target and estimate_mode\")\n+        for unit, feerate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n+            fee = self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"conf_target\": feerate, \"estimate_mode\": unit, \"add_inputs\": True})[\"fee\"]\n+            self.log.info(\"- conf_target {}, estimate_mode {} produces fee {} at or slightly below -maxtxfee (~0.05290000)\".format(feerate, unit, fee))\n+            assert_approx(fee, vexp=0.055, vspan=0.005)\n+\n+        for field, feerate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n+            self.log.info(\"Test walletcreatefundedpsbt raises RPC error if both feeRate and {} are passed\".format(field))\n+            assert_raises_rpc_error(\n+                -8, \"Cannot specify both {} and feeRate\".format(field),\n+                lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"feeRate\": 0.1, field: feerate, \"add_inputs\": True}))\n+\n+        self.log.info(\"Test walletcreatefundedpsbt with invalid estimate_mode settings\")\n+        for k, v in {\"number\": 42, \"object\": {\"foo\": \"bar\"}}.items():\n+            assert_raises_rpc_error(-3, \"Expected type string for estimate_mode, got {}\".format(k),\n+                lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"estimate_mode\": v, \"conf_target\": 0.1, \"add_inputs\": True}))\n+        for mode in [\"foo\", Decimal(\"3.141592\")]:\n+            assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\",\n+                lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"estimate_mode\": mode, \"conf_target\": 0.1, \"add_inputs\": True}))\n+\n+        self.log.info(\"Test walletcreatefundedpsbt with invalid conf_target settings\")\n+        for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+            self.log.debug(\"{}\".format(mode))\n+            for k, v in {\"string\": \"\", \"object\": {\"foo\": \"bar\"}}.items():\n+                assert_raises_rpc_error(-3, \"Expected type number for conf_target, got {}\".format(k),\n+                    lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"estimate_mode\": mode, \"conf_target\": v, \"add_inputs\": True}))\n+            if mode in [\"btc/kb\", \"sat/b\"]:\n+                assert_raises_rpc_error(-3, \"Amount out of range\",\n+                    lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"estimate_mode\": mode, \"conf_target\": -1, \"add_inputs\": True}))\n+                assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n+                    lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"estimate_mode\": mode, \"conf_target\": 0, \"add_inputs\": True}))",
    "path": "test/functional/rpc_psbt.py",
    "position": null,
    "original_position": 39,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "6ad143c294858af93d22012c2d52997b05db0028",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Zero often being some sort of special case, what happens with values between 0 and 0.00001000? Maybe we should also test `0.00000999`.",
    "created_at": "2020-10-23T21:34:44Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511165359",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511165359"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511165359"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511165359/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 222,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 226,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511165699",
    "pull_request_review_id": 515982840,
    "id": 511165699,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE2NTY5OQ==",
    "diff_hunk": "@@ -4034,7 +4034,7 @@ static RPCHelpMan send()\n                     {\"locktime\", RPCArg::Type::NUM, /* default */ \"0\", \"Raw locktime. Non-0 value also locktime-activates inputs\"},\n                     {\"lock_unspents\", RPCArg::Type::BOOL, /* default */ \"false\", \"Lock selected unspent outputs\"},\n                     {\"psbt\", RPCArg::Type::BOOL,  /* default */ \"automatic\", \"Always return a PSBT, implies add_to_wallet=false.\"},\n-                    {\"subtract_fee_from_outputs\", RPCArg::Type::ARR, /* default */ \"empty array\", \"A JSON array of integers.\\n\"\n+                    {\"subtract_fee_from_outputs\", RPCArg::Type::ARR, /* default */ \"empty array\", \"Outputs to subtract the fee from, specified as integer indices.\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 108,
    "original_position": 5,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "77a4f98897ab4430311cff3f2226f274fad20d6a",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh my, great improvement!",
    "created_at": "2020-10-23T21:35:37Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511165699",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511165699"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511165699"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511165699/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4043,
    "original_line": 4043,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511170366",
    "pull_request_review_id": 516029047,
    "id": 511170366,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE3MDM2Ng==",
    "diff_hunk": "@@ -272,11 +272,12 @@ UniValue DescribeAddress(const CTxDestination& dest)\n \n unsigned int ParseConfirmTarget(const UniValue& value, unsigned int max_target)\n {\n-    int target = value.get_int();\n-    if (target < 1 || (unsigned int)target > max_target) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid conf_target, must be between %u - %u\", 1, max_target));\n+    const int target{value.get_int()};",
    "path": "src/rpc/util.cpp",
    "position": 7,
    "original_position": 7,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "84fc42f32c8f649918e3db55d1dcc62d9f402224",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Little: constness, and while changing the line, updated the style. It's not essential, to be sure. Initially, the function was touched to fix the error message. Then, I saw the function has two C-style type conversions and replaced them with one preferred static cast (per https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#es49-if-you-must-use-a-cast-use-a-named-cast). Then, made the non-mutated variables const.",
    "created_at": "2020-10-23T21:49:02Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511170366",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511170366"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511170366"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511170366/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 275,
    "original_line": 275,
    "side": "RIGHT",
    "in_reply_to_id": 511153839
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511172152",
    "pull_request_review_id": 516031240,
    "id": 511172152,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE3MjE1Mg==",
    "diff_hunk": "@@ -189,10 +189,46 @@ def run_test(self):\n         assert_equal(walletprocesspsbt_out['complete'], True)\n         self.nodes[1].sendrawtransaction(self.nodes[1].finalizepsbt(walletprocesspsbt_out['psbt'])['hex'])\n \n-        self.log.info(\"Test feeRate of 0.1 BTC / KB produces a total fee slightly below -maxtxfee (~0.05280000)\")\n+        self.log.info(\"Test feeRate of 0.1 BTC / KB produces a total fee at or slightly below -maxtxfee (~0.05290000)\")\n         res = self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n         assert_approx(res[\"fee\"], 0.055, 0.005)\n \n+        self.log.info(\"Test passing walletcreatefundedpsbt explicit feerate with conf_target and estimate_mode\")\n+        for unit, feerate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():",
    "path": "test/functional/rpc_psbt.py",
    "position": null,
    "original_position": 10,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "6ad143c294858af93d22012c2d52997b05db0028",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes. It would be good to replace this with the fixed-unit `feerate_sat_vb` argument before the 0.21 branch-off. Edit: I have a changeset for that but I guess it's too late though.",
    "created_at": "2020-10-23T21:54:29Z",
    "updated_at": "2020-11-01T22:53:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511172152",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511172152"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511172152"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511172152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 197,
    "side": "RIGHT",
    "in_reply_to_id": 511163315
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511172884",
    "pull_request_review_id": 516032102,
    "id": 511172884,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE3Mjg4NA==",
    "diff_hunk": "@@ -189,10 +189,46 @@ def run_test(self):\n         assert_equal(walletprocesspsbt_out['complete'], True)\n         self.nodes[1].sendrawtransaction(self.nodes[1].finalizepsbt(walletprocesspsbt_out['psbt'])['hex'])\n \n-        self.log.info(\"Test feeRate of 0.1 BTC / KB produces a total fee slightly below -maxtxfee (~0.05280000)\")\n+        self.log.info(\"Test feeRate of 0.1 BTC / KB produces a total fee at or slightly below -maxtxfee (~0.05290000)\")\n         res = self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n         assert_approx(res[\"fee\"], 0.055, 0.005)\n \n+        self.log.info(\"Test passing walletcreatefundedpsbt explicit feerate with conf_target and estimate_mode\")\n+        for unit, feerate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n+            fee = self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"conf_target\": feerate, \"estimate_mode\": unit, \"add_inputs\": True})[\"fee\"]\n+            self.log.info(\"- conf_target {}, estimate_mode {} produces fee {} at or slightly below -maxtxfee (~0.05290000)\".format(feerate, unit, fee))\n+            assert_approx(fee, vexp=0.055, vspan=0.005)\n+\n+        for field, feerate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n+            self.log.info(\"Test walletcreatefundedpsbt raises RPC error if both feeRate and {} are passed\".format(field))\n+            assert_raises_rpc_error(\n+                -8, \"Cannot specify both {} and feeRate\".format(field),\n+                lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"feeRate\": 0.1, field: feerate, \"add_inputs\": True}))\n+\n+        self.log.info(\"Test walletcreatefundedpsbt with invalid estimate_mode settings\")\n+        for k, v in {\"number\": 42, \"object\": {\"foo\": \"bar\"}}.items():\n+            assert_raises_rpc_error(-3, \"Expected type string for estimate_mode, got {}\".format(k),\n+                lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"estimate_mode\": v, \"conf_target\": 0.1, \"add_inputs\": True}))\n+        for mode in [\"foo\", Decimal(\"3.141592\")]:\n+            assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\",\n+                lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"estimate_mode\": mode, \"conf_target\": 0.1, \"add_inputs\": True}))\n+\n+        self.log.info(\"Test walletcreatefundedpsbt with invalid conf_target settings\")\n+        for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+            self.log.debug(\"{}\".format(mode))\n+            for k, v in {\"string\": \"\", \"object\": {\"foo\": \"bar\"}}.items():\n+                assert_raises_rpc_error(-3, \"Expected type number for conf_target, got {}\".format(k),\n+                    lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"estimate_mode\": mode, \"conf_target\": v, \"add_inputs\": True}))\n+            if mode in [\"btc/kb\", \"sat/b\"]:\n+                assert_raises_rpc_error(-3, \"Amount out of range\",\n+                    lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"estimate_mode\": mode, \"conf_target\": -1, \"add_inputs\": True}))\n+                assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n+                    lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"estimate_mode\": mode, \"conf_target\": 0, \"add_inputs\": True}))",
    "path": "test/functional/rpc_psbt.py",
    "position": null,
    "original_position": 39,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "6ad143c294858af93d22012c2d52997b05db0028",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agreed--started doing just that today for the new arg in [`0f2eb16` (#20231)](https://github.com/bitcoin/bitcoin/pull/20231/commits/0f2eb167ddfa7d2612708d09e05189f969699121#diff-047f185450ff2093df390b522db9b6aa1c87353abf7e7a99c00390db8c707f6eR375), will update here.",
    "created_at": "2020-10-23T21:56:39Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511172884",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511172884"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511172884"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511172884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 222,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 226,
    "side": "RIGHT",
    "in_reply_to_id": 511165359
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511469087",
    "pull_request_review_id": 516281174,
    "id": 511469087,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ2OTA4Nw==",
    "diff_hunk": "@@ -132,6 +134,13 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n     if mode == \"fee_rate\":\n         bumped_psbt = rbf_node.psbtbumpfee(rbfid, {\"fee_rate\": NORMAL})\n         bumped_tx = rbf_node.bumpfee(rbfid, {\"fee_rate\": NORMAL})\n+    elif mode == BTC_MODE:",
    "path": "test/functional/wallet_bumpfee.py",
    "position": 115,
    "original_position": 33,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "995dd4a6e7c21665472e71d7aac0251f379e3420",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree, it's a redundant feature here that adds to the confusion...and it also uses a different code path so the test is needed. ",
    "created_at": "2020-10-24T14:20:03Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511469087",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511469087"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511469087"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511469087/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 164,
    "original_line": 164,
    "side": "RIGHT",
    "in_reply_to_id": 511134364
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511474549",
    "pull_request_review_id": 516282625,
    "id": 511474549,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ3NDU0OQ==",
    "diff_hunk": "@@ -100,28 +99,55 @@ def run_test(self):\n         test_small_output_with_feerate_succeeds(self, rbf_node, dest_address)\n         test_no_more_inputs_fails(self, rbf_node, dest_address)\n \n-    def test_invalid_parameters(self, node, dest_address):\n-        txid = spend_one_input(node, dest_address)\n-        # invalid estimate mode\n-        assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\", node.bumpfee, txid, {\n-            \"estimate_mode\": \"moo\",\n-        })\n-        assert_raises_rpc_error(-3, \"Expected type string\", node.bumpfee, txid, {\n-            \"estimate_mode\": 38,\n-        })\n-        assert_raises_rpc_error(-3, \"Expected type string\", node.bumpfee, txid, {\n-            \"estimate_mode\": {\n-                \"foo\": \"bar\",\n-            },\n-        })\n-        assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\", node.bumpfee, txid, {\n-            \"estimate_mode\": Decimal(\"3.141592\"),\n-        })\n-        # confTarget and conf_target\n-        assert_raises_rpc_error(-8, \"confTarget and conf_target options should not both be set\", node.bumpfee, txid, {\n-            \"confTarget\": 123,\n-            \"conf_target\": 456,\n-        })\n+    def test_invalid_parameters(self, rbf_node, peer_node, dest_address):",
    "path": "test/functional/wallet_bumpfee.py",
    "position": 58,
    "original_position": 38,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "9ea6d390c26975c98a9cf28cf816bcbded9aa3d1",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sorry about that. Yes, there are a few options. In this case, a helpful one might be\r\n\r\n`git show 6fa5686 -w --color-moved=dimmed-zebra`\r\n\r\nFor other cases, maybe git show or git diff with `--word-diff`.\r\n\r\nOr to ignore all added lines having a matching identical removed line (empty result proves move-only):\r\n\r\n`git diff 6fa5686f~1..6fa5686f | grep -E '^[+-][^+-]' | cut -b2- | sort | uniq -c | grep -v '^ *2'`\r\n\r\nPeople like practicalswift, promag, MarcoFalke, jnewbery, and harding likely know some more good ones.\r\n",
    "created_at": "2020-10-24T14:41:40Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511474549",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511474549"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511474549"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511474549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 102,
    "original_line": 102,
    "side": "RIGHT",
    "in_reply_to_id": 511153062
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511476668",
    "pull_request_review_id": 516283205,
    "id": 511476668,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ3NjY2OA==",
    "diff_hunk": "@@ -174,8 +174,11 @@ def run_test(self):\n             elif out['scriptPubKey']['addresses'][0] == p2pkh:\n                 p2pkh_pos = out['n']\n \n+        inputs = [{\"txid\": txid, \"vout\": p2wpkh_pos}, {\"txid\": txid, \"vout\": p2sh_p2wpkh_pos}, {\"txid\": txid, \"vout\": p2pkh_pos}]\n+        addr = {self.nodes[1].getnewaddress(): 29.99}",
    "path": "test/functional/rpc_psbt.py",
    "position": null,
    "original_position": 5,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "1b498b9b6aa4d2d7c1d316f9ab4bc4c96728cd6a",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good idea. Changed it to an `outputs` array like in the help:\r\n```diff\r\n         inputs = [{\"txid\": txid, \"vout\": p2wpkh_pos}, {\"txid\": txid, \"vout\": p2sh_p2wpkh_pos}, {\"txid\": txid, \"vout\": p2pkh_pos}]\r\n-        addr = {self.nodes[1].getnewaddress(): 29.99}\r\n+        outputs = [{self.nodes[1].getnewaddress(): 29.99}]\r\n```\r\n",
    "created_at": "2020-10-24T14:50:29Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511476668",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511476668"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511476668"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511476668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 178,
    "side": "RIGHT",
    "in_reply_to_id": 511159365
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511477245",
    "pull_request_review_id": 516283363,
    "id": 511477245,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ3NzI0NQ==",
    "diff_hunk": "@@ -186,14 +189,15 @@ def run_test(self):\n         assert_equal(walletprocesspsbt_out['complete'], True)\n         self.nodes[1].sendrawtransaction(self.nodes[1].finalizepsbt(walletprocesspsbt_out['psbt'])['hex'])\n \n-        # feeRate of 0.1 BTC / KB produces a total fee slightly below -maxtxfee (~0.05280000):\n-        res = self.nodes[1].walletcreatefundedpsbt([{\"txid\":txid,\"vout\":p2wpkh_pos},{\"txid\":txid,\"vout\":p2sh_p2wpkh_pos},{\"txid\":txid,\"vout\":p2pkh_pos}], {self.nodes[1].getnewaddress():29.99}, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n+        self.log.info(\"Test feeRate of 0.1 BTC / KB produces a total fee slightly below -maxtxfee (~0.05280000)\")",
    "path": "test/functional/rpc_psbt.py",
    "position": null,
    "original_position": 19,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "1b498b9b6aa4d2d7c1d316f9ab4bc4c96728cd6a",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2020-10-24T14:52:45Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511477245",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511477245"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511477245"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511477245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 192,
    "side": "RIGHT",
    "in_reply_to_id": 511160072
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511477688",
    "pull_request_review_id": 516283470,
    "id": 511477688,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ3NzY4OA==",
    "diff_hunk": "@@ -168,24 +168,54 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n \n \n def test_feerate_args(self, rbf_node, peer_node, dest_address):\n-    self.log.info('Test fee_rate args')\n+    self.log.info('Test feerate args')",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 5,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Reverted. This line goes away in the following commit.",
    "created_at": "2020-10-24T14:54:24Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511477688",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511477688"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511477688"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511477688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 171,
    "side": "RIGHT",
    "in_reply_to_id": 511135422
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511478300",
    "pull_request_review_id": 516283716,
    "id": 511478300,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ3ODMwMA==",
    "diff_hunk": "@@ -168,24 +168,54 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n \n \n def test_feerate_args(self, rbf_node, peer_node, dest_address):\n-    self.log.info('Test fee_rate args')\n+    self.log.info('Test feerate args')\n     rbfid = spend_one_input(rbf_node, dest_address)\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"confTarget\": 1})\n-\n     assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\":0.00001, \"confTarget\": 1})\n \n     # Bumping to just above minrelay should fail to increase total fee enough, at least\n     assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n-\n     assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n-\n     assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n-    self.clear_mempool()\n \n+    self.log.info(\"Test explicit feerate raises RPC error if estimate_mode is passed without a conf_target\")\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"estimate_mode\": BTC_MODE})\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 10, \"estimate_mode\": SAT_MODE})\n+\n+    self.log.info(\"Test explicit feerate raises RPC error if both fee_rate and conf_target are passed\")\n+    msg = \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation \" \\",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 28,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done, changed to `error_both`.",
    "created_at": "2020-10-24T14:58:34Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511478300",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511478300"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511478300"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511478300/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 188,
    "side": "RIGHT",
    "in_reply_to_id": 511145359
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511479304",
    "pull_request_review_id": 516283957,
    "id": 511479304,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ3OTMwNA==",
    "diff_hunk": "@@ -189,10 +189,46 @@ def run_test(self):\n         assert_equal(walletprocesspsbt_out['complete'], True)\n         self.nodes[1].sendrawtransaction(self.nodes[1].finalizepsbt(walletprocesspsbt_out['psbt'])['hex'])\n \n-        self.log.info(\"Test feeRate of 0.1 BTC / KB produces a total fee slightly below -maxtxfee (~0.05280000)\")\n+        self.log.info(\"Test feeRate of 0.1 BTC / KB produces a total fee at or slightly below -maxtxfee (~0.05290000)\")\n         res = self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n         assert_approx(res[\"fee\"], 0.055, 0.005)\n \n+        self.log.info(\"Test passing walletcreatefundedpsbt explicit feerate with conf_target and estimate_mode\")\n+        for unit, feerate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n+            fee = self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"conf_target\": feerate, \"estimate_mode\": unit, \"add_inputs\": True})[\"fee\"]\n+            self.log.info(\"- conf_target {}, estimate_mode {} produces fee {} at or slightly below -maxtxfee (~0.05290000)\".format(feerate, unit, fee))\n+            assert_approx(fee, vexp=0.055, vspan=0.005)\n+\n+        for field, feerate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n+            self.log.info(\"Test walletcreatefundedpsbt raises RPC error if both feeRate and {} are passed\".format(field))\n+            assert_raises_rpc_error(\n+                -8, \"Cannot specify both {} and feeRate\".format(field),\n+                lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"feeRate\": 0.1, field: feerate, \"add_inputs\": True}))\n+\n+        self.log.info(\"Test walletcreatefundedpsbt with invalid estimate_mode settings\")\n+        for k, v in {\"number\": 42, \"object\": {\"foo\": \"bar\"}}.items():\n+            assert_raises_rpc_error(-3, \"Expected type string for estimate_mode, got {}\".format(k),\n+                lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"estimate_mode\": v, \"conf_target\": 0.1, \"add_inputs\": True}))\n+        for mode in [\"foo\", Decimal(\"3.141592\")]:\n+            assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\",\n+                lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"estimate_mode\": mode, \"conf_target\": 0.1, \"add_inputs\": True}))\n+\n+        self.log.info(\"Test walletcreatefundedpsbt with invalid conf_target settings\")\n+        for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+            self.log.debug(\"{}\".format(mode))\n+            for k, v in {\"string\": \"\", \"object\": {\"foo\": \"bar\"}}.items():\n+                assert_raises_rpc_error(-3, \"Expected type number for conf_target, got {}\".format(k),\n+                    lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"estimate_mode\": mode, \"conf_target\": v, \"add_inputs\": True}))\n+            if mode in [\"btc/kb\", \"sat/b\"]:\n+                assert_raises_rpc_error(-3, \"Amount out of range\",\n+                    lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"estimate_mode\": mode, \"conf_target\": -1, \"add_inputs\": True}))\n+                assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n+                    lambda: self.nodes[1].walletcreatefundedpsbt(inputs, addr, 0, {\"estimate_mode\": mode, \"conf_target\": 0, \"add_inputs\": True}))",
    "path": "test/functional/rpc_psbt.py",
    "position": null,
    "original_position": 39,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "6ad143c294858af93d22012c2d52997b05db0028",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added\r\n```python\r\nfor unit, feerate in {\"SAT/B\": 0.99999999, \"BTC/KB\": 0.00000999}.items():\r\n    self.log.info(\"- raises RPC error 'fee rate too low' if conf_target {} and estimate_mode {} are passed\".format(feerate, unit))\r\n    assert_raises_rpc_error(-4, \"Fee rate (0.00000999 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\r\n        lambda: self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"estimate_mode\": unit, \"conf_target\": feerate, \"add_inputs\": True}))\r\n```\r\n",
    "created_at": "2020-10-24T15:01:55Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511479304",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511479304"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511479304"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511479304/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 222,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 226,
    "side": "RIGHT",
    "in_reply_to_id": 511165359
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511482368",
    "pull_request_review_id": 516284821,
    "id": 511482368,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ4MjM2OA==",
    "diff_hunk": "@@ -168,24 +168,54 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n \n \n def test_feerate_args(self, rbf_node, peer_node, dest_address):\n-    self.log.info('Test fee_rate args')\n+    self.log.info('Test feerate args')\n     rbfid = spend_one_input(rbf_node, dest_address)\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"confTarget\": 1})\n-\n     assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\":0.00001, \"confTarget\": 1})\n \n     # Bumping to just above minrelay should fail to increase total fee enough, at least\n     assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n-\n     assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n-\n     assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n-    self.clear_mempool()\n \n+    self.log.info(\"Test explicit feerate raises RPC error if estimate_mode is passed without a conf_target\")\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"estimate_mode\": BTC_MODE})\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 10, \"estimate_mode\": SAT_MODE})\n+\n+    self.log.info(\"Test explicit feerate raises RPC error if both fee_rate and conf_target are passed\")\n+    msg = \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation \" \\\n+          \"target in blocks for automatic fee estimation, or an explicit fee rate.\"\n+    assert_raises_rpc_error(-8, msg, rbf_node.bumpfee, rbfid, {\"conf_target\": NORMAL, \"fee_rate\": NORMAL})\n+\n+    self.log.info(\"Test invalid conf_target settings\")\n+    for field in [\"confTarget\", \"conf_target\"]:\n+        assert_raises_rpc_error(-8, msg, rbf_node.bumpfee, rbfid, {field: 1, \"fee_rate\": NORMAL})\n+    too_high = \"is too high (cannot be higher than -maxtxfee\"\n+    assert_raises_rpc_error(-4, too_high, lambda: rbf_node.bumpfee(rbfid, {\"estimate_mode\": BTC_MODE, \"conf_target\": 2009}))\n+    assert_raises_rpc_error(-4, too_high, lambda: rbf_node.bumpfee(rbfid, {\"estimate_mode\": SAT_MODE, \"conf_target\": 2009 * 10000}))",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 37,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nice find! added:\r\n```diff\r\n-        assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\r\n+        for options in [{\"fee_rate\": INSUFFICIENT}, {\"conf_target\": INSUFFICIENT, \"estimate_mode\": BTC_MODE}, {\"conf_target\": 1, \"estimate_mode\": SAT_MODE}]:\r\n+            assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, options)\r\n```",
    "created_at": "2020-10-24T15:14:46Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511482368",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511482368"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511482368"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511482368/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 197,
    "side": "RIGHT",
    "in_reply_to_id": 511146854
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511486145",
    "pull_request_review_id": 516287338,
    "id": 511486145,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ4NjE0NQ==",
    "diff_hunk": "@@ -168,24 +168,54 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n \n \n def test_feerate_args(self, rbf_node, peer_node, dest_address):\n-    self.log.info('Test fee_rate args')\n+    self.log.info('Test feerate args')\n     rbfid = spend_one_input(rbf_node, dest_address)\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"confTarget\": 1})\n-\n     assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\":0.00001, \"confTarget\": 1})\n \n     # Bumping to just above minrelay should fail to increase total fee enough, at least\n     assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n-\n     assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n-\n     assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n-    self.clear_mempool()\n \n+    self.log.info(\"Test explicit feerate raises RPC error if estimate_mode is passed without a conf_target\")\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"estimate_mode\": BTC_MODE})\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 10, \"estimate_mode\": SAT_MODE})",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 25,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good find. Fixed the error message to now print `Selected estimate_mode <MODE> requires a fee rate to be specified in conf_target` and updated the tests.\r\n```diff\r\n+++ b/src/wallet/rpcwallet.cpp\r\n@@ -214,7 +214,7 @@ static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const U\r\n \r\n     if (cc.m_fee_mode == FeeEstimateMode::BTC_KB || cc.m_fee_mode == FeeEstimateMode::SAT_B) {\r\n         if (estimate_param.isNull()) {\r\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Selected estimate_mode requires a fee rate\");\r\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Selected estimate_mode %s requires a fee rate to be specified in conf_target\", estimate_mode.get_str()));\r\n         }\r\n```\r\n```diff\r\n+++ b/test/functional/wallet_bumpfee.py\r\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": HIGH, \"estimate_mode\": BTC_MODE})\r\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 1000, \"estimate_mode\": SAT_MODE})\r\n+        for unit, fee_rate in {\"SAT/B\": 100, \"BTC/KB\": NORMAL}.items():\r\n+            assert_raises_rpc_error(-8, \"Selected estimate_mode {} requires a fee rate to be specified in conf_target\".format(unit),\r\n+                                    rbf_node.bumpfee, rbfid, {\"fee_rate\": fee_rate, \"estimate_mode\": unit})\r\n```",
    "created_at": "2020-10-24T15:52:46Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511486145",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511486145"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511486145"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511486145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 185,
    "side": "RIGHT",
    "in_reply_to_id": 511142032
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511493888",
    "pull_request_review_id": 516292935,
    "id": 511493888,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ5Mzg4OA==",
    "diff_hunk": "@@ -168,24 +168,54 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n \n \n def test_feerate_args(self, rbf_node, peer_node, dest_address):\n-    self.log.info('Test fee_rate args')\n+    self.log.info('Test feerate args')\n     rbfid = spend_one_input(rbf_node, dest_address)\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"confTarget\": 1})\n-\n     assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\":0.00001, \"confTarget\": 1})\n \n     # Bumping to just above minrelay should fail to increase total fee enough, at least\n     assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n-\n     assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n-\n     assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n-    self.clear_mempool()\n \n+    self.log.info(\"Test explicit feerate raises RPC error if estimate_mode is passed without a conf_target\")\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"estimate_mode\": BTC_MODE})",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 24,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Updated the log message to \"fee rate\".",
    "created_at": "2020-10-24T17:16:50Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511493888",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511493888"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r511493888"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/511493888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 184,
    "side": "RIGHT",
    "in_reply_to_id": 511139081
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513038521",
    "pull_request_review_id": 518158729,
    "id": 513038521,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAzODUyMQ==",
    "diff_hunk": "@@ -168,24 +168,54 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n \n \n def test_feerate_args(self, rbf_node, peer_node, dest_address):\n-    self.log.info('Test fee_rate args')\n+    self.log.info('Test feerate args')\n     rbfid = spend_one_input(rbf_node, dest_address)\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"confTarget\": 1})\n-\n     assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\":0.00001, \"confTarget\": 1})\n \n     # Bumping to just above minrelay should fail to increase total fee enough, at least\n     assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n-\n     assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n-\n     assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n-    self.clear_mempool()\n \n+    self.log.info(\"Test explicit feerate raises RPC error if estimate_mode is passed without a conf_target\")\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"estimate_mode\": BTC_MODE})\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 10, \"estimate_mode\": SAT_MODE})",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 25,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done in fc572172",
    "created_at": "2020-10-27T21:18:15Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513038521",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513038521"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513038521"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513038521/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 185,
    "side": "RIGHT",
    "in_reply_to_id": 511142032
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513039023",
    "pull_request_review_id": 518159395,
    "id": 513039023,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAzOTAyMw==",
    "diff_hunk": "@@ -168,24 +168,54 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n \n \n def test_feerate_args(self, rbf_node, peer_node, dest_address):\n-    self.log.info('Test fee_rate args')\n+    self.log.info('Test feerate args')\n     rbfid = spend_one_input(rbf_node, dest_address)\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"confTarget\": 1})\n-\n     assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\":0.00001, \"confTarget\": 1})\n \n     # Bumping to just above minrelay should fail to increase total fee enough, at least\n     assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n-\n     assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n-\n     assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n-    self.clear_mempool()\n \n+    self.log.info(\"Test explicit feerate raises RPC error if estimate_mode is passed without a conf_target\")\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"estimate_mode\": BTC_MODE})\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 10, \"estimate_mode\": SAT_MODE})\n+\n+    self.log.info(\"Test explicit feerate raises RPC error if both fee_rate and conf_target are passed\")\n+    msg = \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation \" \\\n+          \"target in blocks for automatic fee estimation, or an explicit fee rate.\"\n+    assert_raises_rpc_error(-8, msg, rbf_node.bumpfee, rbfid, {\"conf_target\": NORMAL, \"fee_rate\": NORMAL})\n+\n+    self.log.info(\"Test invalid conf_target settings\")\n+    for field in [\"confTarget\", \"conf_target\"]:\n+        assert_raises_rpc_error(-8, msg, rbf_node.bumpfee, rbfid, {field: 1, \"fee_rate\": NORMAL})\n+    too_high = \"is too high (cannot be higher than -maxtxfee\"\n+    assert_raises_rpc_error(-4, too_high, lambda: rbf_node.bumpfee(rbfid, {\"estimate_mode\": BTC_MODE, \"conf_target\": 2009}))\n+    assert_raises_rpc_error(-4, too_high, lambda: rbf_node.bumpfee(rbfid, {\"estimate_mode\": SAT_MODE, \"conf_target\": 2009 * 10000}))",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 37,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done in 1697a40",
    "created_at": "2020-10-27T21:19:18Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513039023",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513039023"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513039023"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513039023/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 197,
    "side": "RIGHT",
    "in_reply_to_id": 511146854
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513700393",
    "pull_request_review_id": 519005534,
    "id": 513700393,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcwMDM5Mw==",
    "diff_hunk": "@@ -226,9 +228,9 @@ def run_test(self):\n         assert_equal(self.nodes[2].getbalance(), node_2_bal)\n         node_0_bal = self.check_fee_amount(self.nodes[0].getbalance(), node_0_bal + Decimal('10'), fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n \n-        # Sendmany with explicit fee (BTC/kB)\n+        self.log.info(\"Test explicit fee (sendmany as BTC/kB)\")\n         # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\",\n+        assert_raises_rpc_error(-8, \"Selected estimate_mode bTc/kB requires a fee rate to be specified in conf_target\",",
    "path": "test/functional/wallet_basic.py",
    "position": 17,
    "original_position": 17,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: `bTc`?",
    "created_at": "2020-10-28T19:17:48Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513700393",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513700393"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513700393"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513700393/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 233,
    "original_line": 233,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513701195",
    "pull_request_review_id": 519005534,
    "id": 513701195,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcwMTE5NQ==",
    "diff_hunk": "@@ -226,9 +228,9 @@ def run_test(self):\n         assert_equal(self.nodes[2].getbalance(), node_2_bal)\n         node_0_bal = self.check_fee_amount(self.nodes[0].getbalance(), node_0_bal + Decimal('10'), fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n \n-        # Sendmany with explicit fee (BTC/kB)",
    "path": "test/functional/wallet_basic.py",
    "position": 13,
    "original_position": 13,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: I think that's a fee rate, not an absolute fee.",
    "created_at": "2020-10-28T19:19:17Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513701195",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513701195"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513701195"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513701195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 229,
    "original_line": 229,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513701478",
    "pull_request_review_id": 519005534,
    "id": 513701478,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcwMTQ3OA==",
    "diff_hunk": "@@ -252,9 +254,9 @@ def run_test(self):\n         node_0_bal += Decimal('10')\n         assert_equal(self.nodes[0].getbalance(), node_0_bal)\n \n-        # Sendmany with explicit fee (SAT/B)\n+        self.log.info(\"Test explicit fee (sendmany as sat/B)\")",
    "path": "test/functional/wallet_basic.py",
    "position": null,
    "original_position": 26,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This should say \"fee rate\" rather than \"fee\".",
    "created_at": "2020-10-28T19:19:48Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513701478",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513701478"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513701478"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513701478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 257,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513701599",
    "pull_request_review_id": 519005534,
    "id": 513701599,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcwMTU5OQ==",
    "diff_hunk": "@@ -413,15 +421,14 @@ def run_test(self):\n             self.nodes[0].generate(1)\n             self.sync_all(self.nodes[0:3])\n \n-            # send with explicit btc/kb fee\n-            self.log.info(\"test explicit fee (sendtoaddress as btc/kb)\")\n+            self.log.info(\"Test explicit fee (sendtoaddress as BTC/kB)\")",
    "path": "test/functional/wallet_basic.py",
    "position": null,
    "original_position": 52,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This should say \"fee rate\" rather than \"fee\".",
    "created_at": "2020-10-28T19:20:00Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513701599",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513701599"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513701599"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513701599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 424,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513702864",
    "pull_request_review_id": 519005534,
    "id": 513702864,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcwMjg2NA==",
    "diff_hunk": "@@ -252,9 +254,9 @@ def run_test(self):\n         node_0_bal += Decimal('10')\n         assert_equal(self.nodes[0].getbalance(), node_0_bal)\n \n-        # Sendmany with explicit fee (SAT/B)\n+        self.log.info(\"Test explicit fee (sendmany as sat/B)\")\n         # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\",\n+        assert_raises_rpc_error(-8, \"Selected estimate_mode sat/b requires a fee rate to be specified in conf_target\",",
    "path": "test/functional/wallet_basic.py",
    "position": 29,
    "original_position": 29,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: Inconsistency between 257 and 259, once it's `sat/B` once `sat/b`. \r\n\r\nThere seem to be a lot of case variations in the following code on the `sat/b` and `BTc/Kb`. I'm not sure whether that is on purpose to test the case insensitivity. I'll err on pointing them out when I notice. Feel free to ignore if that's on purpose and I'm just not grokking the reason.",
    "created_at": "2020-10-28T19:22:20Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513702864",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513702864"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513702864"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513702864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 259,
    "original_line": 259,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513703330",
    "pull_request_review_id": 519005534,
    "id": 513703330,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcwMzMzMA==",
    "diff_hunk": "@@ -447,15 +454,15 @@ def run_test(self):\n             fee = prebalance - postbalance - Decimal('1')\n             assert_fee_amount(fee, tx_size, Decimal('0.00002500'))\n \n-            # send with explicit sat/b fee\n             self.sync_all(self.nodes[0:3])\n-            self.log.info(\"test explicit fee (sendtoaddress as sat/b)\")\n+\n+            self.log.info(\"Test explicit fee (sendtoaddress as sat/B)\")",
    "path": "test/functional/wallet_basic.py",
    "position": null,
    "original_position": 72,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This should say \"fee rate\" rather than \"fee\".\r\n\r\nThe phrase \"explicit fee\" would imply to me that an absolute amount of satoshis is used rather than a fee rate. That's why I'm pointing it out.",
    "created_at": "2020-10-28T19:23:15Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513703330",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513703330"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513703330"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513703330/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 459,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513703918",
    "pull_request_review_id": 519005534,
    "id": 513703918,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcwMzkxOA==",
    "diff_hunk": "@@ -447,15 +454,15 @@ def run_test(self):\n             fee = prebalance - postbalance - Decimal('1')\n             assert_fee_amount(fee, tx_size, Decimal('0.00002500'))\n \n-            # send with explicit sat/b fee\n             self.sync_all(self.nodes[0:3])\n-            self.log.info(\"test explicit fee (sendtoaddress as sat/b)\")\n+\n+            self.log.info(\"Test explicit fee (sendtoaddress as sat/B)\")\n             self.nodes[0].generate(1)\n             prebalance = self.nodes[2].getbalance()\n             assert prebalance > 2\n             address = self.nodes[1].getnewaddress()\n             # Throw if no conf_target provided\n-            assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\",\n+            assert_raises_rpc_error(-8, \"Selected estimate_mode SAT/b requires a fee rate to be specified in conf_target\",",
    "path": "test/functional/wallet_basic.py",
    "position": 79,
    "original_position": 79,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: `SAT/b`",
    "created_at": "2020-10-28T19:24:15Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513703918",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513703918"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513703918"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513703918/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 465,
    "original_line": 465,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513705249",
    "pull_request_review_id": 519005534,
    "id": 513705249,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcwNTI0OQ==",
    "diff_hunk": "@@ -100,28 +99,55 @@ def run_test(self):\n         test_small_output_with_feerate_succeeds(self, rbf_node, dest_address)\n         test_no_more_inputs_fails(self, rbf_node, dest_address)\n \n-    def test_invalid_parameters(self, node, dest_address):\n-        txid = spend_one_input(node, dest_address)\n-        # invalid estimate mode\n-        assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\", node.bumpfee, txid, {\n-            \"estimate_mode\": \"moo\",\n-        })\n-        assert_raises_rpc_error(-3, \"Expected type string\", node.bumpfee, txid, {\n-            \"estimate_mode\": 38,\n-        })\n-        assert_raises_rpc_error(-3, \"Expected type string\", node.bumpfee, txid, {\n-            \"estimate_mode\": {\n-                \"foo\": \"bar\",\n-            },\n-        })\n-        assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\", node.bumpfee, txid, {\n-            \"estimate_mode\": Decimal(\"3.141592\"),\n-        })\n-        # confTarget and conf_target\n-        assert_raises_rpc_error(-8, \"confTarget and conf_target options should not both be set\", node.bumpfee, txid, {\n-            \"confTarget\": 123,\n-            \"conf_target\": 456,\n-        })\n+    def test_invalid_parameters(self, rbf_node, peer_node, dest_address):",
    "path": "test/functional/wallet_bumpfee.py",
    "position": 58,
    "original_position": 38,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "9ea6d390c26975c98a9cf28cf816bcbded9aa3d1",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Okay, lemme check this out locally and run this incantation on it. :)",
    "created_at": "2020-10-28T19:26:29Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513705249",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513705249"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513705249"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513705249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 102,
    "original_line": 102,
    "side": "RIGHT",
    "in_reply_to_id": 511153062
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513717032",
    "pull_request_review_id": 519005534,
    "id": 513717032,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcxNzAzMg==",
    "diff_hunk": "@@ -100,28 +99,55 @@ def run_test(self):\n         test_small_output_with_feerate_succeeds(self, rbf_node, dest_address)\n         test_no_more_inputs_fails(self, rbf_node, dest_address)\n \n-    def test_invalid_parameters(self, node, dest_address):\n-        txid = spend_one_input(node, dest_address)\n-        # invalid estimate mode\n-        assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\", node.bumpfee, txid, {\n-            \"estimate_mode\": \"moo\",\n-        })\n-        assert_raises_rpc_error(-3, \"Expected type string\", node.bumpfee, txid, {\n-            \"estimate_mode\": 38,\n-        })\n-        assert_raises_rpc_error(-3, \"Expected type string\", node.bumpfee, txid, {\n-            \"estimate_mode\": {\n-                \"foo\": \"bar\",\n-            },\n-        })\n-        assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\", node.bumpfee, txid, {\n-            \"estimate_mode\": Decimal(\"3.141592\"),\n-        })\n-        # confTarget and conf_target\n-        assert_raises_rpc_error(-8, \"confTarget and conf_target options should not both be set\", node.bumpfee, txid, {\n-            \"confTarget\": 123,\n-            \"conf_target\": 456,\n-        })\n+    def test_invalid_parameters(self, rbf_node, peer_node, dest_address):",
    "path": "test/functional/wallet_bumpfee.py",
    "position": 58,
    "original_position": 38,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "9ea6d390c26975c98a9cf28cf816bcbded9aa3d1",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`git diff 2d8eba8~1..2d8eba8 | grep -E '^[+-][^+-]' | cut -b2- | sort | uniq -c | grep -v '^ *2'` led to weird output for me. It appears to break the new diff viewer I'm currently trying. I also hope I didn't accidentally summon an imp. :sweat_smile: \r\n\r\nAlright, the `git show 2d8eba8 -w --color-moved=dimmed_zebra` did the trick for me. Thanks for teaching me!\r\n",
    "created_at": "2020-10-28T19:48:08Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513717032",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513717032"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513717032"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513717032/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 102,
    "original_line": 102,
    "side": "RIGHT",
    "in_reply_to_id": 511153062
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513721009",
    "pull_request_review_id": 519005534,
    "id": 513721009,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcyMTAwOQ==",
    "diff_hunk": "@@ -421,7 +421,7 @@ def run_test(self):\n             assert prebalance > 2\n             address = self.nodes[1].getnewaddress()\n             # Throw if no conf_target provided\n-            assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\",\n+            assert_raises_rpc_error(-8, \"Selected estimate_mode BTc/Kb requires a fee rate to be specified in conf_target\",",
    "path": "test/functional/wallet_basic.py",
    "position": 60,
    "original_position": 23,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "fc5721723d34f76f9e1ffd2e31f274ea6b22f894",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: `BTc/Kb`?",
    "created_at": "2020-10-28T19:55:01Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513721009",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513721009"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513721009"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513721009/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 431,
    "original_line": 424,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513724524",
    "pull_request_review_id": 519005534,
    "id": 513724524,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcyNDUyNA==",
    "diff_hunk": "@@ -252,9 +254,9 @@ def run_test(self):\n         node_0_bal += Decimal('10')\n         assert_equal(self.nodes[0].getbalance(), node_0_bal)\n \n-        # Sendmany with explicit fee (SAT/B)\n+        self.log.info(\"Test explicit fee (sendmany as sat/B)\")\n         # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\",\n+        assert_raises_rpc_error(-8, \"Selected estimate_mode sat/b requires a fee rate to be specified in conf_target\",",
    "path": "test/functional/wallet_basic.py",
    "position": 29,
    "original_position": 29,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I just saw the value below in the `estimate_mode` the input in 260 is matching. I conclude that the string is case-insensitive, and the purpose was to test the insensitivity. I'd prefer an approach where a single style was used across all tests, and then one test checked the case insensitivity of the estimate_mode explicitly, but I don't think it's pertinent to make the actual change in this PR.",
    "created_at": "2020-10-28T20:01:01Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513724524",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513724524"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513724524"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513724524/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 259,
    "original_line": 259,
    "side": "RIGHT",
    "in_reply_to_id": 513702864
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513725954",
    "pull_request_review_id": 519005534,
    "id": 513725954,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcyNTk1NA==",
    "diff_hunk": "@@ -168,24 +168,54 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n \n \n def test_feerate_args(self, rbf_node, peer_node, dest_address):\n-    self.log.info('Test fee_rate args')\n+    self.log.info('Test feerate args')\n     rbfid = spend_one_input(rbf_node, dest_address)\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"confTarget\": 1})\n-\n     assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\":0.00001, \"confTarget\": 1})\n \n     # Bumping to just above minrelay should fail to increase total fee enough, at least\n     assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n-\n     assert_raises_rpc_error(-3, \"Amount out of range\", rbf_node.bumpfee, rbfid, {\"fee_rate\": -1})\n-\n     assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n-    self.clear_mempool()\n \n+    self.log.info(\"Test explicit feerate raises RPC error if estimate_mode is passed without a conf_target\")\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"estimate_mode\": BTC_MODE})\n+    assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\", rbf_node.bumpfee, rbfid, {\"fee_rate\": 10, \"estimate_mode\": SAT_MODE})\n+\n+    self.log.info(\"Test explicit feerate raises RPC error if both fee_rate and conf_target are passed\")\n+    msg = \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation \" \\\n+          \"target in blocks for automatic fee estimation, or an explicit fee rate.\"\n+    assert_raises_rpc_error(-8, msg, rbf_node.bumpfee, rbfid, {\"conf_target\": NORMAL, \"fee_rate\": NORMAL})\n+\n+    self.log.info(\"Test invalid conf_target settings\")\n+    for field in [\"confTarget\", \"conf_target\"]:\n+        assert_raises_rpc_error(-8, msg, rbf_node.bumpfee, rbfid, {field: 1, \"fee_rate\": NORMAL})\n+    too_high = \"is too high (cannot be higher than -maxtxfee\"\n+    assert_raises_rpc_error(-4, too_high, lambda: rbf_node.bumpfee(rbfid, {\"estimate_mode\": BTC_MODE, \"conf_target\": 2009}))\n+    assert_raises_rpc_error(-4, too_high, lambda: rbf_node.bumpfee(rbfid, {\"estimate_mode\": SAT_MODE, \"conf_target\": 2009 * 10000}))",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 37,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "70b793c2b3b91b012316292cd87a093871dd714a",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Wonderful, thanks!",
    "created_at": "2020-10-28T20:03:36Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513725954",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513725954"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513725954"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513725954/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 197,
    "side": "RIGHT",
    "in_reply_to_id": 511146854
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513730504",
    "pull_request_review_id": 519005534,
    "id": 513730504,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzczMDUwNA==",
    "diff_hunk": "@@ -173,19 +173,50 @@ def test_feerate_args(self, rbf_node, peer_node, dest_address):\n     self.sync_mempools((rbf_node, peer_node))\n     assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\": NORMAL, \"confTarget\": 1})\n-\n     assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-    assert_raises_rpc_error(-8, \"conf_target can't be set with fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\", rbf_node.bumpfee, rbfid, {\"fee_rate\":0.00001, \"confTarget\": 1})\n-\n-    # Bumping to just above minrelay should fail to increase total fee enough, at least\n-    assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n \n+    # For each fee mode, bumping to just above minrelay should fail to increase the total fee enough.\n+    for options in [{\"fee_rate\": INSUFFICIENT}, {\"conf_target\": INSUFFICIENT, \"estimate_mode\": BTC_MODE}, {\"conf_target\": 1, \"estimate_mode\": SAT_MODE}]:",
    "path": "test/functional/wallet_bumpfee.py",
    "position": null,
    "original_position": 13,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "1697a40b6f841a54ee0d9744ed7fd09034b0ddad",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I was originally thinking here:\r\n\r\n> I'm confused by the ` {\"conf_target\": 1, \"estimate_mode\": SAT_MODE}`. Fitting the theme, I would expect the `conf_target` to be below `minRelayTxFeeRate`. But IIUC, 1 sat/B would be exactly the `minRelayTxFeeRate`. Is it possible that this should be \u2026 oh. \u2026 `INSUFFICIENT` also appears to be exactly the `minRelayTxFeeRate`. \u2026 Oh, this is for bumping. Duh.\r\n\r\nNevermind, carry on! :ok_hand: Thanks for adding this.",
    "created_at": "2020-10-28T20:12:02Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513730504",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513730504"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513730504"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513730504/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 179,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513737635",
    "pull_request_review_id": 519005534,
    "id": 513737635,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzczNzYzNQ==",
    "diff_hunk": "@@ -672,6 +674,59 @@ def test_option_feerate(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+    def test_feerate_with_conf_target_and_estimate_mode(self):\n+        self.log.info(\"Test fundrawtxn passing an explicit fee rate using conf_target and estimate_mode\")\n+        node = self.nodes[3]\n+        # Make sure there is exactly one input so coin selection can't skew the result.\n+        assert_equal(len(node.listunspent(1)), 1)\n+        inputs = []\n+        outputs = {node.getnewaddress() : 1}\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+\n+        for unit, fee_rate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n+            self.log.info(\"Test fundrawtxn with conf_target {} estimate_mode {} produces expected fee\".format(fee_rate, unit))\n+            # With no arguments passed, expect fee of 141 sats/b.\n+            assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n+            # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n+            result = node.fundrawtransaction(rawtx, {\"conf_target\": fee_rate, \"estimate_mode\": unit})\n+            assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n+\n+        for field, fee_rate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n+            self.log.info(\"Test fundrawtxn raises RPC error if both feeRate and {} are passed\".format(field))\n+            assert_raises_rpc_error(\n+                -8, \"Cannot specify both {} and feeRate\".format(field),\n+                lambda: node.fundrawtransaction(rawtx, {\"feeRate\": 0.1, field: fee_rate}))\n+\n+        self.log.info(\"Test fundrawtxn with invalid estimate_mode settings\")\n+        for k, v in {\"number\": 42, \"object\": {\"foo\": \"bar\"}}.items():\n+            assert_raises_rpc_error(-3, \"Expected type string for estimate_mode, got {}\".format(k),\n+                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": v, \"conf_target\": 0.1}))\n+        for mode in [\"foo\", Decimal(\"3.141592\")]:\n+            assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\",\n+                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0.1}))\n+\n+        self.log.info(\"Test fundrawtxn with invalid conf_target settings\")\n+        for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+            self.log.debug(\"{}\".format(mode))\n+            for k, v in {\"string\": \"\", \"object\": {\"foo\": \"bar\"}}.items():\n+                assert_raises_rpc_error(-3, \"Expected type number for conf_target, got {}\".format(k),\n+                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": v}))\n+            if mode in [\"btc/kb\", \"sat/b\"]:\n+                assert_raises_rpc_error(-3, \"Amount out of range\",\n+                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": -1}))\n+                assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n+                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0}))\n+            else:\n+                for n in [-1, 0, 1009]:\n+                    assert_raises_rpc_error(-8, \"Invalid conf_target, must be between 1 and 1008\",\n+                        lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": n}))\n+\n+        for unit, fee_rate in {\"SAT/B\": 0.99999999, \"BTC/KB\": 0.00000999}.items():",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": null,
    "original_position": 67,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "3f52eafa405c5e05b2b2fadcbccc84c815951974",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: Since this is new code, I'm surprised by the variations in the estimate_mode case, but not feeling strongly about it.",
    "created_at": "2020-10-28T20:25:13Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513737635",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513737635"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513737635"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513737635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 724,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513738107",
    "pull_request_review_id": 519005534,
    "id": 513738107,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzczODEwNw==",
    "diff_hunk": "@@ -672,6 +674,59 @@ def test_option_feerate(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+    def test_feerate_with_conf_target_and_estimate_mode(self):\n+        self.log.info(\"Test fundrawtxn passing an explicit fee rate using conf_target and estimate_mode\")\n+        node = self.nodes[3]\n+        # Make sure there is exactly one input so coin selection can't skew the result.\n+        assert_equal(len(node.listunspent(1)), 1)\n+        inputs = []\n+        outputs = {node.getnewaddress() : 1}\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+\n+        for unit, fee_rate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n+            self.log.info(\"Test fundrawtxn with conf_target {} estimate_mode {} produces expected fee\".format(fee_rate, unit))\n+            # With no arguments passed, expect fee of 141 sats/b.\n+            assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n+            # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n+            result = node.fundrawtransaction(rawtx, {\"conf_target\": fee_rate, \"estimate_mode\": unit})\n+            assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n+\n+        for field, fee_rate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n+            self.log.info(\"Test fundrawtxn raises RPC error if both feeRate and {} are passed\".format(field))\n+            assert_raises_rpc_error(\n+                -8, \"Cannot specify both {} and feeRate\".format(field),\n+                lambda: node.fundrawtransaction(rawtx, {\"feeRate\": 0.1, field: fee_rate}))\n+\n+        self.log.info(\"Test fundrawtxn with invalid estimate_mode settings\")\n+        for k, v in {\"number\": 42, \"object\": {\"foo\": \"bar\"}}.items():\n+            assert_raises_rpc_error(-3, \"Expected type string for estimate_mode, got {}\".format(k),\n+                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": v, \"conf_target\": 0.1}))\n+        for mode in [\"foo\", Decimal(\"3.141592\")]:\n+            assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\",\n+                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0.1}))\n+\n+        self.log.info(\"Test fundrawtxn with invalid conf_target settings\")\n+        for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+            self.log.debug(\"{}\".format(mode))\n+            for k, v in {\"string\": \"\", \"object\": {\"foo\": \"bar\"}}.items():\n+                assert_raises_rpc_error(-3, \"Expected type number for conf_target, got {}\".format(k),\n+                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": v}))\n+            if mode in [\"btc/kb\", \"sat/b\"]:\n+                assert_raises_rpc_error(-3, \"Amount out of range\",\n+                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": -1}))\n+                assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n+                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0}))\n+            else:\n+                for n in [-1, 0, 1009]:\n+                    assert_raises_rpc_error(-8, \"Invalid conf_target, must be between 1 and 1008\",\n+                        lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": n}))\n+\n+        for unit, fee_rate in {\"SAT/B\": 0.99999999, \"BTC/KB\": 0.00000999}.items():\n+            self.log.info(\"- raises RPC error 'fee rate too low' if conf_target {} and estimate_mode {} are passed\".format(fee_rate, unit))\n+            assert_raises_rpc_error(-4, \"Fee rate (0.00000999 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": 69,
    "original_position": 69,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "3f52eafa405c5e05b2b2fadcbccc84c815951974",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": ":+1: ",
    "created_at": "2020-10-28T20:26:07Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513738107",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513738107"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513738107"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513738107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 726,
    "original_line": 726,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513739278",
    "pull_request_review_id": 519005534,
    "id": 513739278,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzczOTI3OA==",
    "diff_hunk": "@@ -186,15 +189,17 @@ def run_test(self):\n         assert_equal(walletprocesspsbt_out['complete'], True)\n         self.nodes[1].sendrawtransaction(self.nodes[1].finalizepsbt(walletprocesspsbt_out['psbt'])['hex'])\n \n-        # feeRate of 0.1 BTC / KB produces a total fee slightly below -maxtxfee (~0.05280000):\n-        res = self.nodes[1].walletcreatefundedpsbt([{\"txid\":txid,\"vout\":p2wpkh_pos},{\"txid\":txid,\"vout\":p2sh_p2wpkh_pos},{\"txid\":txid,\"vout\":p2pkh_pos}], {self.nodes[1].getnewaddress():29.99}, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n+        self.log.info(\"Test walletcreatefundedpsbt feeRate of 0.1 BTC/kB produces a total fee at or slightly below -maxtxfee (~0.05290000)\")\n+        res = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n         assert_approx(res[\"fee\"], 0.055, 0.005)\n \n-        # feeRate of 10 BTC / KB produces a total fee well above -maxtxfee\n+        self.log.info(\"Test walletcreatefundedpsbt feeRate of 10 BTC/KB produces total fee well above -maxtxfee and raises RPC error\")",
    "path": "test/functional/rpc_psbt.py",
    "position": null,
    "original_position": 24,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "36b6ab749457fb43727bc180588978a4d946b856",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: kelvinbytes\r\n\r\nI know, I know, \"kilo\" is the odd one out because generally the prefixes for multiples are capitalized. Just being a bit of a unit nerd here.\r\n\r\n(To be clear, when I mark a comment with \"Nit:\" I consider it optional for the author to address it.)",
    "created_at": "2020-10-28T20:27:54Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513739278",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513739278"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513739278"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513739278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 196,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513741651",
    "pull_request_review_id": 519005534,
    "id": 513741651,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc0MTY1MQ==",
    "diff_hunk": "@@ -174,8 +174,11 @@ def run_test(self):\n             elif out['scriptPubKey']['addresses'][0] == p2pkh:\n                 p2pkh_pos = out['n']\n \n+        inputs = [{\"txid\": txid, \"vout\": p2wpkh_pos}, {\"txid\": txid, \"vout\": p2sh_p2wpkh_pos}, {\"txid\": txid, \"vout\": p2pkh_pos}]\n+        outputs = [{self.nodes[1].getnewaddress(): 29.99}]",
    "path": "test/functional/rpc_psbt.py",
    "position": 5,
    "original_position": 5,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "36b6ab749457fb43727bc180588978a4d946b856",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Love how much more readable the tests below become. Good improvement.",
    "created_at": "2020-10-28T20:32:04Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513741651",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513741651"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513741651"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513741651/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 177,
    "original_start_line": 177,
    "start_side": "RIGHT",
    "line": 178,
    "original_line": 178,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513745170",
    "pull_request_review_id": 519005534,
    "id": 513745170,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc0NTE3MA==",
    "diff_hunk": "@@ -224,8 +226,10 @@ def run_test(self):\n         assert_equal(self.nodes[1].decodepsbt(res1[\"psbt\"])[\"fee\"],\n                      self.nodes[1].decodepsbt(res2[\"psbt\"])[\"fee\"])\n         # but not at the same time\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=1, arg_estimate_mode=\"economical\",\n-                       conf_target=1, estimate_mode=\"economical\", add_to_wallet=False, expect_error=(-8,\"Use either conf_target and estimate_mode or the options dictionary to control fee rate\"))\n+        for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=1, arg_estimate_mode=\"economical\",",
    "path": "test/functional/wallet_send.py",
    "position": 16,
    "original_position": 16,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "328ac2b0a32d2fa3696778681e71813a4deda663",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I noticed that both `arg_estimate_mode` and `estimate_mode` appear in these test parameters. That seems odd. I wonder whether both pertain to the same value. If one of them would supersede the other, and that happened to be `arg_estimate_mode`, we would actually only be testing for `economical` here. If they actually do refer both to the same value, they should probably both be set to `=mode`.",
    "created_at": "2020-10-28T20:38:56Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513745170",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513745170"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513745170"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513745170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 230,
    "original_line": 230,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513747612",
    "pull_request_review_id": 519005534,
    "id": 513747612,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc0NzYxMg==",
    "diff_hunk": "@@ -246,19 +250,61 @@ def run_test(self):\n         res = w2.walletprocesspsbt(res[\"psbt\"])\n         assert res[\"complete\"]\n \n-        self.log.info(\"Set fee rate...\")\n+        self.log.info(\"Test setting explicit fee rate\")\n+        res1 = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=1, arg_estimate_mode=\"economical\", add_to_wallet=False)\n+        res2 = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=1, estimate_mode=\"economical\", add_to_wallet=False)\n+        assert_equal(self.nodes[1].decodepsbt(res1[\"psbt\"])[\"fee\"], self.nodes[1].decodepsbt(res2[\"psbt\"])[\"fee\"])\n+\n+        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.00007, estimate_mode=\"btc/kb\", add_to_wallet=False)\n+        fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\n+        assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00007\"))\n+\n         res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=2, estimate_mode=\"sat/b\", add_to_wallet=False)\n         fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\n         assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00002\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=-1, estimate_mode=\"sat/b\",\n-                       expect_error=(-3, \"Amount out of range\"))\n-        # Fee rate of 0.1 satoshi per byte should throw an error\n-        # TODO: error should use sat/b\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.1, estimate_mode=\"sat/b\",\n-                       expect_error=(-4, \"Fee rate (0.00000100 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\"))\n \n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.000001, estimate_mode=\"BTC/KB\",\n-                       expect_error=(-4, \"Fee rate (0.00000100 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\"))\n+        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=0.00004531, arg_estimate_mode=\"btc/kb\", add_to_wallet=False)\n+        fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\n+        assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00004531\"))\n+\n+        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=3, arg_estimate_mode=\"sat/b\", add_to_wallet=False)\n+        fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\n+        assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00003\"))\n+\n+        # TODO: This test should pass with all modes, e.g. with the next line uncommented.\n+        # for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+        for mode in [\"btc/kb\", \"sat/b\"]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=-1, estimate_mode=mode,\n+                expect_error=(-3, \"Amount out of range\"))\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0, estimate_mode=mode,\n+                expect_error=(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\"))\n+\n+        for mode in [\"foo\", Decimal(\"3.141592\")]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.1, estimate_mode=mode,\n+                expect_error=(-8, \"Invalid estimate_mode parameter\"))\n+            # TODO: these 2 equivalent sends with an invalid estimate_mode arg should both fail, but they do not...why?\n+            # self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=0.1, arg_estimate_mode=mode,",
    "path": "test/functional/wallet_send.py",
    "position": 69,
    "original_position": 68,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "328ac2b0a32d2fa3696778681e71813a4deda663",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The only difference I see in this line is that it now uses `arg_conf_target` where `conf_target` was used in 284 and `arg_estimate_mode` where `estimate_mode` was used. Potentially, the sanitation for those parameters are different?",
    "created_at": "2020-10-28T20:43:32Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513747612",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513747612"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513747612"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513747612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 286,
    "original_line": 286,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513749048",
    "pull_request_review_id": 519005534,
    "id": 513749048,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc0OTA0OA==",
    "diff_hunk": "@@ -440,7 +440,8 @@ static RPCHelpMan sendtoaddress()\n                     {\"subtractfeefromamount\", RPCArg::Type::BOOL, /* default */ \"false\", \"The fee will be deducted from the amount being sent.\\n\"\n                                          \"The recipient will receive less bitcoins than you enter in the amount field.\"},\n                     {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"wallet default\", \"Allow this transaction to be replaced by a transaction with higher fees via BIP 125\"},\n-                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet default\", \"Confirmation target (in blocks), or fee rate (for \" + CURRENCY_UNIT + \"/kB or \" + CURRENCY_ATOM + \"/B estimate modes)\"},\n+                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet -txconfirmtarget\", \"Confirmation target (in blocks)\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 14,
    "original_position": 5,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I see that the third argument here has changed from `\"wallet default\"` to `\"wallet -txconfirmtarget\"`, but it's not clear to me what the effect of that would be.",
    "created_at": "2020-10-28T20:46:14Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513749048",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513749048"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513749048"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513749048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 443,
    "original_line": 443,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513788941",
    "pull_request_review_id": 519118726,
    "id": 513788941,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc4ODk0MQ==",
    "diff_hunk": "@@ -224,8 +226,10 @@ def run_test(self):\n         assert_equal(self.nodes[1].decodepsbt(res1[\"psbt\"])[\"fee\"],\n                      self.nodes[1].decodepsbt(res2[\"psbt\"])[\"fee\"])\n         # but not at the same time\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=1, arg_estimate_mode=\"economical\",\n-                       conf_target=1, estimate_mode=\"economical\", add_to_wallet=False, expect_error=(-8,\"Use either conf_target and estimate_mode or the options dictionary to control fee rate\"))\n+        for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=1, arg_estimate_mode=\"economical\",",
    "path": "test/functional/wallet_send.py",
    "position": 16,
    "original_position": 16,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "328ac2b0a32d2fa3696778681e71813a4deda663",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good point. In the `send` RPC, `conf_target` and `estimate_mode` can be both args (`arg_estimate_mode` in this test file) and options (`estimate_mode` in this test file).\r\n\r\nThere seem to be some oddities or bugs in the `send` RPC related to this, as described in https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513789526. The send RPC is marked as experimental, but these should be fixed or made consistent with the other RPCs after this is merged. I started to look into it but didn't find a fix quickly, and the PR is already quite large and the deadline for 0.21 branch-off this weekend is looming.",
    "created_at": "2020-10-28T22:03:00Z",
    "updated_at": "2020-10-29T08:27:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513788941",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513788941"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513788941"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513788941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 230,
    "original_line": 230,
    "side": "RIGHT",
    "in_reply_to_id": 513745170
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513789526",
    "pull_request_review_id": 519119478,
    "id": 513789526,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc4OTUyNg==",
    "diff_hunk": "@@ -246,19 +250,61 @@ def run_test(self):\n         res = w2.walletprocesspsbt(res[\"psbt\"])\n         assert res[\"complete\"]\n \n-        self.log.info(\"Set fee rate...\")\n+        self.log.info(\"Test setting explicit fee rate\")\n+        res1 = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=1, arg_estimate_mode=\"economical\", add_to_wallet=False)\n+        res2 = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=1, estimate_mode=\"economical\", add_to_wallet=False)\n+        assert_equal(self.nodes[1].decodepsbt(res1[\"psbt\"])[\"fee\"], self.nodes[1].decodepsbt(res2[\"psbt\"])[\"fee\"])\n+\n+        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.00007, estimate_mode=\"btc/kb\", add_to_wallet=False)\n+        fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\n+        assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00007\"))\n+\n         res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=2, estimate_mode=\"sat/b\", add_to_wallet=False)\n         fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\n         assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00002\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=-1, estimate_mode=\"sat/b\",\n-                       expect_error=(-3, \"Amount out of range\"))\n-        # Fee rate of 0.1 satoshi per byte should throw an error\n-        # TODO: error should use sat/b\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.1, estimate_mode=\"sat/b\",\n-                       expect_error=(-4, \"Fee rate (0.00000100 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\"))\n \n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.000001, estimate_mode=\"BTC/KB\",\n-                       expect_error=(-4, \"Fee rate (0.00000100 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\"))\n+        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=0.00004531, arg_estimate_mode=\"btc/kb\", add_to_wallet=False)\n+        fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\n+        assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00004531\"))\n+\n+        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=3, arg_estimate_mode=\"sat/b\", add_to_wallet=False)\n+        fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\n+        assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00003\"))\n+\n+        # TODO: This test should pass with all modes, e.g. with the next line uncommented.\n+        # for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+        for mode in [\"btc/kb\", \"sat/b\"]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=-1, estimate_mode=mode,\n+                expect_error=(-3, \"Amount out of range\"))\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0, estimate_mode=mode,\n+                expect_error=(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\"))\n+\n+        for mode in [\"foo\", Decimal(\"3.141592\")]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.1, estimate_mode=mode,\n+                expect_error=(-8, \"Invalid estimate_mode parameter\"))\n+            # TODO: these 2 equivalent sends with an invalid estimate_mode arg should both fail, but they do not...why?\n+            # self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=0.1, arg_estimate_mode=mode,",
    "path": "test/functional/wallet_send.py",
    "position": 69,
    "original_position": 68,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "328ac2b0a32d2fa3696778681e71813a4deda663",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, there seems to be a bug in the `send` RPC: per the code in `wallet/rpcwallet.cpp`, these should behave the same whether passed as an arg or an option, but they do not.",
    "created_at": "2020-10-28T22:04:27Z",
    "updated_at": "2020-10-28T23:29:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513789526",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513789526"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513789526"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513789526/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 286,
    "original_line": 286,
    "side": "RIGHT",
    "in_reply_to_id": 513747612
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513791924",
    "pull_request_review_id": 519122471,
    "id": 513791924,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5MTkyNA==",
    "diff_hunk": "@@ -440,7 +440,8 @@ static RPCHelpMan sendtoaddress()\n                     {\"subtractfeefromamount\", RPCArg::Type::BOOL, /* default */ \"false\", \"The fee will be deducted from the amount being sent.\\n\"\n                                          \"The recipient will receive less bitcoins than you enter in the amount field.\"},\n                     {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"wallet default\", \"Allow this transaction to be replaced by a transaction with higher fees via BIP 125\"},\n-                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet default\", \"Confirmation target (in blocks), or fee rate (for \" + CURRENCY_UNIT + \"/kB or \" + CURRENCY_ATOM + \"/B estimate modes)\"},\n+                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet -txconfirmtarget\", \"Confirmation target (in blocks)\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 14,
    "original_position": 5,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is the RPC help output the user sees. The idea was to make the `conf_target` help correct (some were missing the sat/B mention), consistent and helpful across the 6 RPCs. The txconfirmtarget mention in some of the `conf_target` helps seems more useful info than just \"wallet default\", so I made them all the same/consistent. Open to disagreement about that :) ",
    "created_at": "2020-10-28T22:09:52Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513791924",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513791924"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513791924"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513791924/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 443,
    "original_line": 443,
    "side": "RIGHT",
    "in_reply_to_id": 513749048
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513792048",
    "pull_request_review_id": 519122599,
    "id": 513792048,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5MjA0OA==",
    "diff_hunk": "@@ -186,15 +189,17 @@ def run_test(self):\n         assert_equal(walletprocesspsbt_out['complete'], True)\n         self.nodes[1].sendrawtransaction(self.nodes[1].finalizepsbt(walletprocesspsbt_out['psbt'])['hex'])\n \n-        # feeRate of 0.1 BTC / KB produces a total fee slightly below -maxtxfee (~0.05280000):\n-        res = self.nodes[1].walletcreatefundedpsbt([{\"txid\":txid,\"vout\":p2wpkh_pos},{\"txid\":txid,\"vout\":p2sh_p2wpkh_pos},{\"txid\":txid,\"vout\":p2pkh_pos}], {self.nodes[1].getnewaddress():29.99}, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n+        self.log.info(\"Test walletcreatefundedpsbt feeRate of 0.1 BTC/kB produces a total fee at or slightly below -maxtxfee (~0.05290000)\")\n+        res = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n         assert_approx(res[\"fee\"], 0.055, 0.005)\n \n-        # feeRate of 10 BTC / KB produces a total fee well above -maxtxfee\n+        self.log.info(\"Test walletcreatefundedpsbt feeRate of 10 BTC/KB produces total fee well above -maxtxfee and raises RPC error\")",
    "path": "test/functional/rpc_psbt.py",
    "position": null,
    "original_position": 24,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "36b6ab749457fb43727bc180588978a4d946b856",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2020-10-28T22:10:07Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513792048",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513792048"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513792048"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513792048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 196,
    "side": "RIGHT",
    "in_reply_to_id": 513739278
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513792227",
    "pull_request_review_id": 519122797,
    "id": 513792227,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5MjIyNw==",
    "diff_hunk": "@@ -672,6 +674,59 @@ def test_option_feerate(self):\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n+    def test_feerate_with_conf_target_and_estimate_mode(self):\n+        self.log.info(\"Test fundrawtxn passing an explicit fee rate using conf_target and estimate_mode\")\n+        node = self.nodes[3]\n+        # Make sure there is exactly one input so coin selection can't skew the result.\n+        assert_equal(len(node.listunspent(1)), 1)\n+        inputs = []\n+        outputs = {node.getnewaddress() : 1}\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+\n+        for unit, fee_rate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n+            self.log.info(\"Test fundrawtxn with conf_target {} estimate_mode {} produces expected fee\".format(fee_rate, unit))\n+            # With no arguments passed, expect fee of 141 sats/b.\n+            assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n+            # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n+            result = node.fundrawtransaction(rawtx, {\"conf_target\": fee_rate, \"estimate_mode\": unit})\n+            assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n+\n+        for field, fee_rate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n+            self.log.info(\"Test fundrawtxn raises RPC error if both feeRate and {} are passed\".format(field))\n+            assert_raises_rpc_error(\n+                -8, \"Cannot specify both {} and feeRate\".format(field),\n+                lambda: node.fundrawtransaction(rawtx, {\"feeRate\": 0.1, field: fee_rate}))\n+\n+        self.log.info(\"Test fundrawtxn with invalid estimate_mode settings\")\n+        for k, v in {\"number\": 42, \"object\": {\"foo\": \"bar\"}}.items():\n+            assert_raises_rpc_error(-3, \"Expected type string for estimate_mode, got {}\".format(k),\n+                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": v, \"conf_target\": 0.1}))\n+        for mode in [\"foo\", Decimal(\"3.141592\")]:\n+            assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\",\n+                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0.1}))\n+\n+        self.log.info(\"Test fundrawtxn with invalid conf_target settings\")\n+        for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+            self.log.debug(\"{}\".format(mode))\n+            for k, v in {\"string\": \"\", \"object\": {\"foo\": \"bar\"}}.items():\n+                assert_raises_rpc_error(-3, \"Expected type number for conf_target, got {}\".format(k),\n+                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": v}))\n+            if mode in [\"btc/kb\", \"sat/b\"]:\n+                assert_raises_rpc_error(-3, \"Amount out of range\",\n+                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": -1}))\n+                assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n+                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0}))\n+            else:\n+                for n in [-1, 0, 1009]:\n+                    assert_raises_rpc_error(-8, \"Invalid conf_target, must be between 1 and 1008\",\n+                        lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": n}))\n+\n+        for unit, fee_rate in {\"SAT/B\": 0.99999999, \"BTC/KB\": 0.00000999}.items():",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": null,
    "original_position": 67,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "3f52eafa405c5e05b2b2fadcbccc84c815951974",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "made them all the same",
    "created_at": "2020-10-28T22:10:30Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513792227",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513792227"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513792227"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513792227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 724,
    "side": "RIGHT",
    "in_reply_to_id": 513737635
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793167",
    "pull_request_review_id": 519124046,
    "id": 513793167,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5MzE2Nw==",
    "diff_hunk": "@@ -421,7 +421,7 @@ def run_test(self):\n             assert prebalance > 2\n             address = self.nodes[1].getnewaddress()\n             # Throw if no conf_target provided\n-            assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\",\n+            assert_raises_rpc_error(-8, \"Selected estimate_mode BTc/Kb requires a fee rate to be specified in conf_target\",",
    "path": "test/functional/wallet_basic.py",
    "position": 60,
    "original_position": 23,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "fc5721723d34f76f9e1ffd2e31f274ea6b22f894",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I suppose I'll make them all proper-cased in wallet_basic, and lowercased in fundrawtransaction, so they are less jarring while still testing the case insensitivity.",
    "created_at": "2020-10-28T22:12:53Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513793167",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793167"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513793167"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793167/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 431,
    "original_line": 424,
    "side": "RIGHT",
    "in_reply_to_id": 513721009
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793418",
    "pull_request_review_id": 519124382,
    "id": 513793418,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5MzQxOA==",
    "diff_hunk": "@@ -447,15 +454,15 @@ def run_test(self):\n             fee = prebalance - postbalance - Decimal('1')\n             assert_fee_amount(fee, tx_size, Decimal('0.00002500'))\n \n-            # send with explicit sat/b fee\n             self.sync_all(self.nodes[0:3])\n-            self.log.info(\"test explicit fee (sendtoaddress as sat/b)\")\n+\n+            self.log.info(\"Test explicit fee (sendtoaddress as sat/B)\")",
    "path": "test/functional/wallet_basic.py",
    "position": null,
    "original_position": 72,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "agree, done",
    "created_at": "2020-10-28T22:13:31Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513793418",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793418"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513793418"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793418/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 459,
    "side": "RIGHT",
    "in_reply_to_id": 513703330
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793536",
    "pull_request_review_id": 519124543,
    "id": 513793536,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5MzUzNg==",
    "diff_hunk": "@@ -252,9 +254,9 @@ def run_test(self):\n         node_0_bal += Decimal('10')\n         assert_equal(self.nodes[0].getbalance(), node_0_bal)\n \n-        # Sendmany with explicit fee (SAT/B)\n+        self.log.info(\"Test explicit fee (sendmany as sat/B)\")\n         # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\",\n+        assert_raises_rpc_error(-8, \"Selected estimate_mode sat/b requires a fee rate to be specified in conf_target\",",
    "path": "test/functional/wallet_basic.py",
    "position": 29,
    "original_position": 29,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "good eye, done",
    "created_at": "2020-10-28T22:13:50Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513793536",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793536"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513793536"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793536/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 259,
    "original_line": 259,
    "side": "RIGHT",
    "in_reply_to_id": 513702864
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793606",
    "pull_request_review_id": 519124655,
    "id": 513793606,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5MzYwNg==",
    "diff_hunk": "@@ -413,15 +421,14 @@ def run_test(self):\n             self.nodes[0].generate(1)\n             self.sync_all(self.nodes[0:3])\n \n-            # send with explicit btc/kb fee\n-            self.log.info(\"test explicit fee (sendtoaddress as btc/kb)\")\n+            self.log.info(\"Test explicit fee (sendtoaddress as BTC/kB)\")",
    "path": "test/functional/wallet_basic.py",
    "position": null,
    "original_position": 52,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2020-10-28T22:14:05Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513793606",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793606"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513793606"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793606/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 424,
    "side": "RIGHT",
    "in_reply_to_id": 513701599
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793675",
    "pull_request_review_id": 519124723,
    "id": 513793675,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5MzY3NQ==",
    "diff_hunk": "@@ -252,9 +254,9 @@ def run_test(self):\n         node_0_bal += Decimal('10')\n         assert_equal(self.nodes[0].getbalance(), node_0_bal)\n \n-        # Sendmany with explicit fee (SAT/B)\n+        self.log.info(\"Test explicit fee (sendmany as sat/B)\")",
    "path": "test/functional/wallet_basic.py",
    "position": null,
    "original_position": 26,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2020-10-28T22:14:13Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513793675",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793675"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513793675"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793675/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 257,
    "side": "RIGHT",
    "in_reply_to_id": 513701478
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793717",
    "pull_request_review_id": 519124773,
    "id": 513793717,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc5MzcxNw==",
    "diff_hunk": "@@ -226,9 +228,9 @@ def run_test(self):\n         assert_equal(self.nodes[2].getbalance(), node_2_bal)\n         node_0_bal = self.check_fee_amount(self.nodes[0].getbalance(), node_0_bal + Decimal('10'), fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n \n-        # Sendmany with explicit fee (BTC/kB)",
    "path": "test/functional/wallet_basic.py",
    "position": 13,
    "original_position": 13,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good eye! Done",
    "created_at": "2020-10-28T22:14:19Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513793717",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793717"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513793717"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513793717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 229,
    "original_line": 229,
    "side": "LEFT",
    "in_reply_to_id": 513701195
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513800841",
    "pull_request_review_id": 519133341,
    "id": 513800841,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwMDg0MQ==",
    "diff_hunk": "@@ -440,7 +440,8 @@ static RPCHelpMan sendtoaddress()\n                     {\"subtractfeefromamount\", RPCArg::Type::BOOL, /* default */ \"false\", \"The fee will be deducted from the amount being sent.\\n\"\n                                          \"The recipient will receive less bitcoins than you enter in the amount field.\"},\n                     {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"wallet default\", \"Allow this transaction to be replaced by a transaction with higher fees via BIP 125\"},\n-                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet default\", \"Confirmation target (in blocks), or fee rate (for \" + CURRENCY_UNIT + \"/kB or \" + CURRENCY_ATOM + \"/B estimate modes)\"},\n+                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet -txconfirmtarget\", \"Confirmation target (in blocks)\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 14,
    "original_position": 5,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "e.g. before\r\n```\r\n7. conf_target      (numeric, optional, default=wallet default) Confirmation target (in blocks), or fee rate (for BTC/kB or sat/B estimate modes)\r\n```\r\nafter\r\n```\r\n7. conf_target      (numeric, optional, default=wallet -txconfirmtarget) Confirmation target (in blocks)\r\n                    or fee rate (for BTC/kB and sat/B estimate modes)\r\n```",
    "created_at": "2020-10-28T22:31:44Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513800841",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513800841"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513800841"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513800841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 443,
    "original_line": 443,
    "side": "RIGHT",
    "in_reply_to_id": 513749048
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513808799",
    "pull_request_review_id": 519142723,
    "id": 513808799,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwODc5OQ==",
    "diff_hunk": "@@ -421,7 +421,7 @@ def run_test(self):\n             assert prebalance > 2\n             address = self.nodes[1].getnewaddress()\n             # Throw if no conf_target provided\n-            assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\",\n+            assert_raises_rpc_error(-8, \"Selected estimate_mode BTc/Kb requires a fee rate to be specified in conf_target\",",
    "path": "test/functional/wallet_basic.py",
    "position": 60,
    "original_position": 23,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "fc5721723d34f76f9e1ffd2e31f274ea6b22f894",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh wait, in wallet_basic.py I'd rather not touch the units in the original tests by @kallewoof. They were set this way on purpose. See closed PR #20041 that wanted to change them.",
    "created_at": "2020-10-28T22:53:00Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513808799",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513808799"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513808799"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513808799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 431,
    "original_line": 424,
    "side": "RIGHT",
    "in_reply_to_id": 513721009
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513809879",
    "pull_request_review_id": 519144005,
    "id": 513809879,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwOTg3OQ==",
    "diff_hunk": "@@ -421,7 +421,7 @@ def run_test(self):\n             assert prebalance > 2\n             address = self.nodes[1].getnewaddress()\n             # Throw if no conf_target provided\n-            assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\",\n+            assert_raises_rpc_error(-8, \"Selected estimate_mode BTc/Kb requires a fee rate to be specified in conf_target\",",
    "path": "test/functional/wallet_basic.py",
    "position": 60,
    "original_position": 23,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "fc5721723d34f76f9e1ffd2e31f274ea6b22f894",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'll add \"case insensitive\" to the logging so it's clear to future readers of the test code.",
    "created_at": "2020-10-28T22:55:55Z",
    "updated_at": "2020-10-28T23:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513809879",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513809879"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513809879"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513809879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 431,
    "original_line": 424,
    "side": "RIGHT",
    "in_reply_to_id": 513721009
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513832017",
    "pull_request_review_id": 519179640,
    "id": 513832017,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgzMjAxNw==",
    "diff_hunk": "@@ -224,8 +226,10 @@ def run_test(self):\n         assert_equal(self.nodes[1].decodepsbt(res1[\"psbt\"])[\"fee\"],\n                      self.nodes[1].decodepsbt(res2[\"psbt\"])[\"fee\"])\n         # but not at the same time\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=1, arg_estimate_mode=\"economical\",\n-                       conf_target=1, estimate_mode=\"economical\", add_to_wallet=False, expect_error=(-8,\"Use either conf_target and estimate_mode or the options dictionary to control fee rate\"))\n+        for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=1, arg_estimate_mode=\"economical\",",
    "path": "test/functional/wallet_send.py",
    "position": 16,
    "original_position": 16,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "328ac2b0a32d2fa3696778681e71813a4deda663",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Okay, since this is only in a test, it may be fine to keep track of it, but not get too hung up on fixing every little bit before the merge.",
    "created_at": "2020-10-29T00:01:52Z",
    "updated_at": "2020-10-29T00:01:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513832017",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513832017"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513832017"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513832017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 230,
    "original_line": 230,
    "side": "RIGHT",
    "in_reply_to_id": 513745170
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513832348",
    "pull_request_review_id": 519181074,
    "id": 513832348,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgzMjM0OA==",
    "diff_hunk": "@@ -440,7 +440,8 @@ static RPCHelpMan sendtoaddress()\n                     {\"subtractfeefromamount\", RPCArg::Type::BOOL, /* default */ \"false\", \"The fee will be deducted from the amount being sent.\\n\"\n                                          \"The recipient will receive less bitcoins than you enter in the amount field.\"},\n                     {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"wallet default\", \"Allow this transaction to be replaced by a transaction with higher fees via BIP 125\"},\n-                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet default\", \"Confirmation target (in blocks), or fee rate (for \" + CURRENCY_UNIT + \"/kB or \" + CURRENCY_ATOM + \"/B estimate modes)\"},\n+                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet -txconfirmtarget\", \"Confirmation target (in blocks)\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 14,
    "original_position": 5,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "c80e2276fbf39667b59bbb801864c0dd1398d69b",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I see. That looks like a good change to me.",
    "created_at": "2020-10-29T00:03:15Z",
    "updated_at": "2020-10-29T00:03:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513832348",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513832348"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513832348"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513832348/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 443,
    "original_line": 443,
    "side": "RIGHT",
    "in_reply_to_id": 513749048
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513836967",
    "pull_request_review_id": 519200915,
    "id": 513836967,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgzNjk2Nw==",
    "diff_hunk": "@@ -421,7 +421,7 @@ def run_test(self):\n             assert prebalance > 2\n             address = self.nodes[1].getnewaddress()\n             # Throw if no conf_target provided\n-            assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\",\n+            assert_raises_rpc_error(-8, \"Selected estimate_mode BTc/Kb requires a fee rate to be specified in conf_target\",",
    "path": "test/functional/wallet_basic.py",
    "position": 60,
    "original_position": 23,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "fc5721723d34f76f9e1ffd2e31f274ea6b22f894",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Cool, thanks for digging up the context. I still think it would be better to test case insensitivity of an argument in one dedicated test and then make all the other tests use the canonical writing, but it's definitely out of scope here.",
    "created_at": "2020-10-29T00:19:12Z",
    "updated_at": "2020-10-29T00:19:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513836967",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513836967"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513836967"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513836967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 431,
    "original_line": 424,
    "side": "RIGHT",
    "in_reply_to_id": 513721009
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513840343",
    "pull_request_review_id": 519215365,
    "id": 513840343,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg0MDM0Mw==",
    "diff_hunk": "@@ -421,7 +421,7 @@ def run_test(self):\n             assert prebalance > 2\n             address = self.nodes[1].getnewaddress()\n             # Throw if no conf_target provided\n-            assert_raises_rpc_error(-8, \"Selected estimate_mode requires a fee rate\",\n+            assert_raises_rpc_error(-8, \"Selected estimate_mode BTc/Kb requires a fee rate to be specified in conf_target\",",
    "path": "test/functional/wallet_basic.py",
    "position": 60,
    "original_position": 23,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "fc5721723d34f76f9e1ffd2e31f274ea6b22f894",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree, and in a way that's what we've done: The added tests use canonical units and the original tests in wallet_basic.py do case insensitive testing of the units and are now described as such.",
    "created_at": "2020-10-29T00:31:06Z",
    "updated_at": "2020-10-29T08:28:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513840343",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513840343"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513840343"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/513840343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 431,
    "original_line": 424,
    "side": "RIGHT",
    "in_reply_to_id": 513721009
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515729855",
    "pull_request_review_id": 521319710,
    "id": 515729855,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTcyOTg1NQ==",
    "diff_hunk": "@@ -3373,7 +3376,7 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n         \"The command will pay the additional fee by reducing change outputs or adding inputs when necessary. It may add a new change output if one does not already exist.\\n\"\n         \"All inputs in the original transaction will be included in the replacement transaction.\\n\"\n         \"The command will fail if the wallet or mempool contains a transaction that spends one of T's outputs.\\n\"\n-        \"By default, the new fee will be calculated automatically using estimatesmartfee.\\n\"\n+        \"By default, the new fee will be calculated automatically using the estimatesmartfee RPC.\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 53,
    "original_position": 53,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I like the original better on this one, but I'm fine with the change.",
    "created_at": "2020-11-02T04:01:04Z",
    "updated_at": "2020-11-02T11:55:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r515729855",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515729855"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r515729855"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515729855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3379,
    "original_line": 3379,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515946353",
    "pull_request_review_id": 521594655,
    "id": 515946353,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk0NjM1Mw==",
    "diff_hunk": "@@ -3373,7 +3376,7 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n         \"The command will pay the additional fee by reducing change outputs or adding inputs when necessary. It may add a new change output if one does not already exist.\\n\"\n         \"All inputs in the original transaction will be included in the replacement transaction.\\n\"\n         \"The command will fail if the wallet or mempool contains a transaction that spends one of T's outputs.\\n\"\n-        \"By default, the new fee will be calculated automatically using estimatesmartfee.\\n\"\n+        \"By default, the new fee will be calculated automatically using the estimatesmartfee RPC.\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 53,
    "original_position": 53,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks @kallewoof--the idea was to help users know what estimatesmartfee is and where to look for more info without grepping the codebase, even though it's less exact than writing, say, \"using CBlockPolicyEstimator::estimateSmartFee in src/fees.cpp\". I don't feel strongly about it though. ",
    "created_at": "2020-11-02T12:45:26Z",
    "updated_at": "2020-11-02T12:45:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r515946353",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515946353"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r515946353"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515946353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3379,
    "original_line": 3379,
    "side": "RIGHT",
    "in_reply_to_id": 515729855
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517817389",
    "pull_request_review_id": 523955849,
    "id": 517817389,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgxNzM4OQ==",
    "diff_hunk": "@@ -246,19 +250,61 @@ def run_test(self):\n         res = w2.walletprocesspsbt(res[\"psbt\"])\n         assert res[\"complete\"]\n \n-        self.log.info(\"Set fee rate...\")\n+        self.log.info(\"Test setting explicit fee rate\")\n+        res1 = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=1, arg_estimate_mode=\"economical\", add_to_wallet=False)\n+        res2 = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=1, estimate_mode=\"economical\", add_to_wallet=False)\n+        assert_equal(self.nodes[1].decodepsbt(res1[\"psbt\"])[\"fee\"], self.nodes[1].decodepsbt(res2[\"psbt\"])[\"fee\"])\n+\n+        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.00007, estimate_mode=\"btc/kb\", add_to_wallet=False)\n+        fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\n+        assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00007\"))\n+\n         res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=2, estimate_mode=\"sat/b\", add_to_wallet=False)\n         fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\n         assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00002\"))\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=-1, estimate_mode=\"sat/b\",\n-                       expect_error=(-3, \"Amount out of range\"))\n-        # Fee rate of 0.1 satoshi per byte should throw an error\n-        # TODO: error should use sat/b\n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.1, estimate_mode=\"sat/b\",\n-                       expect_error=(-4, \"Fee rate (0.00000100 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\"))\n \n-        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.000001, estimate_mode=\"BTC/KB\",\n-                       expect_error=(-4, \"Fee rate (0.00000100 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\"))\n+        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=0.00004531, arg_estimate_mode=\"btc/kb\", add_to_wallet=False)\n+        fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\n+        assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00004531\"))\n+\n+        res = self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=3, arg_estimate_mode=\"sat/b\", add_to_wallet=False)\n+        fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\n+        assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00003\"))\n+\n+        # TODO: This test should pass with all modes, e.g. with the next line uncommented.\n+        # for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+        for mode in [\"btc/kb\", \"sat/b\"]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=-1, estimate_mode=mode,\n+                expect_error=(-3, \"Amount out of range\"))\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0, estimate_mode=mode,\n+                expect_error=(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\"))\n+\n+        for mode in [\"foo\", Decimal(\"3.141592\")]:\n+            self.test_send(from_wallet=w0, to_wallet=w1, amount=1, conf_target=0.1, estimate_mode=mode,\n+                expect_error=(-8, \"Invalid estimate_mode parameter\"))\n+            # TODO: these 2 equivalent sends with an invalid estimate_mode arg should both fail, but they do not...why?\n+            # self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=0.1, arg_estimate_mode=mode,",
    "path": "test/functional/wallet_send.py",
    "position": 69,
    "original_position": 68,
    "commit_id": "0be29000c011dec0722481dbebb159873da6fa54",
    "original_commit_id": "328ac2b0a32d2fa3696778681e71813a4deda663",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Yes, there seems to be a bug in the `send` RPC: per the code in `wallet/rpcwallet.cpp`, these should behave the same whether passed as an arg or an option, but they do not.\r\n\r\nFixed in #20305.",
    "created_at": "2020-11-05T06:26:53Z",
    "updated_at": "2020-11-05T06:26:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r517817389",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517817389"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20220#discussion_r517817389"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20220"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517817389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 286,
    "original_line": 286,
    "side": "RIGHT",
    "in_reply_to_id": 513747612
  }
]