[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/466042732",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15458#issuecomment-466042732",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15458",
    "id": 466042732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjA0MjczMg==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T15:29:19Z",
    "updated_at": "2019-02-21T15:29:19Z",
    "author_association": "MEMBER",
    "body": "Suggested by @ryanofsky in https://github.com/bitcoin/bitcoin/pull/15195#issuecomment-463791974.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/466042732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/466076190",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15458#issuecomment-466076190",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15458",
    "id": 466076190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjA3NjE5MA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T16:52:14Z",
    "updated_at": "2019-02-21T16:52:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15288](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15288.html) (Remove wallet -> node global function calls by ryanofsky)\n* [#12096](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/12096.html) ([rpc] [wallet] Allow specifying the output index when using bumpfee by kallewoof)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/466076190/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/466119289",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15458#issuecomment-466119289",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15458",
    "id": 466119289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjExOTI4OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T18:49:03Z",
    "updated_at": "2019-02-21T18:49:03Z",
    "author_association": "MEMBER",
    "body": "utACK 53b310390cc72a034911a8d6236b472a22c62227",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/466119289/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/466291408",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15458#issuecomment-466291408",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15458",
    "id": 466291408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjI5MTQwOA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-22T06:42:06Z",
    "updated_at": "2019-02-22T06:42:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 53b310390cc72a034911a8d6236b472a22c62227",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/466291408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/258988654",
    "pull_request_review_id": 206381772,
    "id": 258988654,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODk4ODY1NA==",
    "diff_hunk": "@@ -135,55 +135,55 @@ WalletTxOut MakeWalletTxOut(interfaces::Chain::Lock& locked_chain,\n class WalletImpl : public Wallet\n {\n public:\n-    explicit WalletImpl(const std::shared_ptr<CWallet>& wallet) : m_shared_wallet(wallet), m_wallet(*wallet.get()) {}\n+    explicit WalletImpl(const std::shared_ptr<CWallet>& wallet) : m_wallet(wallet) {}\n \n     bool encryptWallet(const SecureString& wallet_passphrase) override\n     {\n-        return m_wallet.EncryptWallet(wallet_passphrase);\n+        return m_wallet->EncryptWallet(wallet_passphrase);\n     }\n-    bool isCrypted() override { return m_wallet.IsCrypted(); }\n-    bool lock() override { return m_wallet.Lock(); }\n-    bool unlock(const SecureString& wallet_passphrase) override { return m_wallet.Unlock(wallet_passphrase); }\n-    bool isLocked() override { return m_wallet.IsLocked(); }\n+    bool isCrypted() override { return m_wallet->IsCrypted(); }\n+    bool lock() override { return m_wallet->Lock(); }\n+    bool unlock(const SecureString& wallet_passphrase) override { return m_wallet->Unlock(wallet_passphrase); }\n+    bool isLocked() override { return m_wallet->IsLocked(); }\n     bool changeWalletPassphrase(const SecureString& old_wallet_passphrase,\n         const SecureString& new_wallet_passphrase) override\n     {\n-        return m_wallet.ChangeWalletPassphrase(old_wallet_passphrase, new_wallet_passphrase);\n+        return m_wallet->ChangeWalletPassphrase(old_wallet_passphrase, new_wallet_passphrase);\n     }\n-    void abortRescan() override { m_wallet.AbortRescan(); }\n-    bool backupWallet(const std::string& filename) override { return m_wallet.BackupWallet(filename); }\n-    std::string getWalletName() override { return m_wallet.GetName(); }\n+    void abortRescan() override { m_wallet->AbortRescan(); }\n+    bool backupWallet(const std::string& filename) override { return m_wallet->BackupWallet(filename); }\n+    std::string getWalletName() override { return m_wallet->GetName(); }\n     bool getKeyFromPool(bool internal, CPubKey& pub_key) override\n     {\n-        return m_wallet.GetKeyFromPool(pub_key, internal);\n+        return m_wallet->GetKeyFromPool(pub_key, internal);\n     }\n-    bool getPubKey(const CKeyID& address, CPubKey& pub_key) override { return m_wallet.GetPubKey(address, pub_key); }\n-    bool getPrivKey(const CKeyID& address, CKey& key) override { return m_wallet.GetKey(address, key); }\n-    bool isSpendable(const CTxDestination& dest) override { return IsMine(m_wallet, dest) & ISMINE_SPENDABLE; }\n-    bool haveWatchOnly() override { return m_wallet.HaveWatchOnly(); };\n+    bool getPubKey(const CKeyID& address, CPubKey& pub_key) override { return m_wallet->GetPubKey(address, pub_key); }\n+    bool getPrivKey(const CKeyID& address, CKey& key) override { return m_wallet->GetKey(address, key); }\n+    bool isSpendable(const CTxDestination& dest) override { return IsMine(*m_wallet.get(), dest) & ISMINE_SPENDABLE; }",
    "path": "src/interfaces/wallet.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "53b310390cc72a034911a8d6236b472a22c62227",
    "original_commit_id": "526c5670d6fd866dfa0fb17ff40356d6fd089262",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Here and other places, this should change to `*m_wallet` instead of `*m_wallet.get()`. It's shorter, more readable, and potentially allows better error checking since the overloaded method can detect a null dereference.",
    "created_at": "2019-02-21T15:49:10Z",
    "updated_at": "2019-02-21T16:19:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15458#discussion_r258988654",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15458",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/258988654"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15458#discussion_r258988654"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15458"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/258988654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 162,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/258996398",
    "pull_request_review_id": 206391623,
    "id": 258996398,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1ODk5NjM5OA==",
    "diff_hunk": "@@ -135,55 +135,55 @@ WalletTxOut MakeWalletTxOut(interfaces::Chain::Lock& locked_chain,\n class WalletImpl : public Wallet\n {\n public:\n-    explicit WalletImpl(const std::shared_ptr<CWallet>& wallet) : m_shared_wallet(wallet), m_wallet(*wallet.get()) {}\n+    explicit WalletImpl(const std::shared_ptr<CWallet>& wallet) : m_wallet(wallet) {}\n \n     bool encryptWallet(const SecureString& wallet_passphrase) override\n     {\n-        return m_wallet.EncryptWallet(wallet_passphrase);\n+        return m_wallet->EncryptWallet(wallet_passphrase);\n     }\n-    bool isCrypted() override { return m_wallet.IsCrypted(); }\n-    bool lock() override { return m_wallet.Lock(); }\n-    bool unlock(const SecureString& wallet_passphrase) override { return m_wallet.Unlock(wallet_passphrase); }\n-    bool isLocked() override { return m_wallet.IsLocked(); }\n+    bool isCrypted() override { return m_wallet->IsCrypted(); }\n+    bool lock() override { return m_wallet->Lock(); }\n+    bool unlock(const SecureString& wallet_passphrase) override { return m_wallet->Unlock(wallet_passphrase); }\n+    bool isLocked() override { return m_wallet->IsLocked(); }\n     bool changeWalletPassphrase(const SecureString& old_wallet_passphrase,\n         const SecureString& new_wallet_passphrase) override\n     {\n-        return m_wallet.ChangeWalletPassphrase(old_wallet_passphrase, new_wallet_passphrase);\n+        return m_wallet->ChangeWalletPassphrase(old_wallet_passphrase, new_wallet_passphrase);\n     }\n-    void abortRescan() override { m_wallet.AbortRescan(); }\n-    bool backupWallet(const std::string& filename) override { return m_wallet.BackupWallet(filename); }\n-    std::string getWalletName() override { return m_wallet.GetName(); }\n+    void abortRescan() override { m_wallet->AbortRescan(); }\n+    bool backupWallet(const std::string& filename) override { return m_wallet->BackupWallet(filename); }\n+    std::string getWalletName() override { return m_wallet->GetName(); }\n     bool getKeyFromPool(bool internal, CPubKey& pub_key) override\n     {\n-        return m_wallet.GetKeyFromPool(pub_key, internal);\n+        return m_wallet->GetKeyFromPool(pub_key, internal);\n     }\n-    bool getPubKey(const CKeyID& address, CPubKey& pub_key) override { return m_wallet.GetPubKey(address, pub_key); }\n-    bool getPrivKey(const CKeyID& address, CKey& key) override { return m_wallet.GetKey(address, key); }\n-    bool isSpendable(const CTxDestination& dest) override { return IsMine(m_wallet, dest) & ISMINE_SPENDABLE; }\n-    bool haveWatchOnly() override { return m_wallet.HaveWatchOnly(); };\n+    bool getPubKey(const CKeyID& address, CPubKey& pub_key) override { return m_wallet->GetPubKey(address, pub_key); }\n+    bool getPrivKey(const CKeyID& address, CKey& key) override { return m_wallet->GetKey(address, key); }\n+    bool isSpendable(const CTxDestination& dest) override { return IsMine(*m_wallet.get(), dest) & ISMINE_SPENDABLE; }",
    "path": "src/interfaces/wallet.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "53b310390cc72a034911a8d6236b472a22c62227",
    "original_commit_id": "526c5670d6fd866dfa0fb17ff40356d6fd089262",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh I forgot about that operator, thanks.",
    "created_at": "2019-02-21T16:04:42Z",
    "updated_at": "2019-02-21T16:19:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15458#discussion_r258996398",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15458",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/258996398"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15458#discussion_r258996398"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15458"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/258996398/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 162,
    "side": "RIGHT",
    "in_reply_to_id": 258988654
  }
]