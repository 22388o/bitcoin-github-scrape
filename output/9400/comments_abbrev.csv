rebroad,2016-12-21T16:18:33Z,Is it still the case that the first peer to send us the header is the only peer we'll request the block from (with a timeout for non-response of 10 minutes)? ,https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-268564171,268564171,
instagibbs,2016-12-21T16:21:57Z,@rebroad This code doesn't change any inv behavior.,https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-268565152,268565152,
TheBlueMatt,2016-12-22T08:54:24Z,"On second thought, I suppose I could be convinced that using BlockChecked here was OK if there were very explicit documentation on when it is/isn't called in validationinterface.h and maybe some flags passed in to further disambiguate.\n\nOn December 21, 2016 8:22:02 AM PST, Gregory Sanders <notifications@github.com> wrote:\n>@rebroad This code doesn't change any inv behavior.\n>\n>-- \n>You are r",https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-268750400,268750400,
TheBlueMatt,2016-12-23T00:05:15Z,"Changing the lifetime is hard, as only BlockChecked is guaranteed to be called if the block's PoW is invalid.\n\nOn December 22, 2016 5:53:40 AM PST, Gregory Sanders <notifications@github.com> wrote:\n>instagibbs commented on this pull request.\n>\n>\n>\n>> @@ -798,6 +803,11 @@ void PeerLogicValidation::BlockChecked(const\n>CBlock& block, const CValidationSta\n>                 Misbehavin",https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-268917873,268917873,
rebroad,2016-12-26T17:19:20Z,"Not sure if this is behaving as it's supposed to:-\n\n```\n2016-12-26 17:13:12.258123 UpdateTip: new best=00000000000000000153e83f7511f8b104912bc578ad69d5ee5f138bd418a4cf (445158) ver=0x20000000 age=10.2h workage=9.3h tx=448\n2016-12-26 17:13:13.525927 send sendcmpct (no announce) ver=1 peer=2\n2016-12-26 17:13:13.526175 send sendcmpct (announce) ver=1 peer=9\n2016-12-26 17:13:13.583144 Upda",https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-269228342,269228342,
TheBlueMatt,2016-12-26T17:39:15Z,"@rebroad can you try adding a mapBlocksInFlight.empty() check prior to sending the sendcmpct message in the function? I believe that should (at least mostly) fix the issue.\n\nOn December 26, 2016 12:19:27 PM EST, R E Broadley <notifications@github.com> wrote:\n>Not sure if this is behaving as it's supposed to:-\n>\n>```\n>2016-12-26 17:13:12.258123 UpdateTip: new\n>best=00000000000000000153e83f75",https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-269229597,269229597,
instagibbs,2016-12-26T18:14:51Z,Updated to hopefully fix issue @rebroad ,https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-269232183,269232183,
sipa,2016-12-27T19:04:00Z,utACK bbdf9563b41ce9a7f032e19afbba1f38fabefa7e,https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-269368231,269368231,
morcos,2016-12-27T20:32:54Z,"I think we should have more discussion on whether this is the right logic to implement and not just is the code correct for implementing it.  My guess is there is little benefit from this code and its maybe  not worth the risk of introducing a change until we have something that will provide a more significant benefit.  \n\nIt's already the case that the first peer to announce anything to you is",https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-269378936,269378936,
rebroad,2016-12-28T02:31:37Z,"@morcos completely agree - and I think I'm testing this code only because it potentially compliments other code I have added myself (e.g. requesting blocktxns from more then one node), but without such further changes, this code alone, at this stage, doesn't really provide any benefit from what I can see either, and needs to be combined with other improvements (i.e. more refined versions of what I",https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-269415139,269415139,
rebroad,2016-12-28T11:15:18Z,"@instagibbs ok, looking at this debug.log output:-\n```\n2016-12-28 09:05:41.928636 recv new best header 00000000000000000320a325788953e769b47205654f55ea80a4c2e108a1189a (445473) age=21s peer=813\n2016-12-28 09:05:41.928868 send getdata cmpctblock 00000000000000000320a325788953e769b47205654f55ea80a4c2e108a1189a (445473) age=21s peer=813\n2016-12-28 09:05:42.085294 recv best cmpctblock 00000000",https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-269463315,269463315,
morcos,2016-12-28T12:50:06Z,"@rebroad are you also running modified logic above?  In master, we would not have requested blocktxn from peer 736 in your example.",https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-269472862,269472862,
rebroad,2016-12-29T07:58:04Z,"@morcos Yes, I am running this PR combined with some of my changes - in an aim to make the changes this PR provides more useful, although I think further refinement is still needed as mentioned in my previous comment.\n\n...ah. I see what you are saying now... yes without my changes, peer 813 would have provided the block and therefore been requested to announce as compact blocks going forward, ",https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-269594628,269594628,
gmaxwell,2016-12-30T02:39:12Z,"@morcos I think this is the right logic: We should pick for HB usage peers that actually helped us get the block, not one that merely said they would.\n\nBeyond the slightly improved misbehavior resistance, this should reduce a small bias towards non-HB (or non-predicting HB) peers that arises because their announcement has less bytes on the wire, so it transmits somewhat faster even though it r",https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-269724606,269724606,
morcos,2016-12-30T14:23:14Z,"@gmaxwell @instagibbs Yes, after spending more time reviewing this, I agree it is the right approach, and its simpler than I thought.  Still suggest the fix above, but otherwise ACK.",https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-269776978,269776978,
instagibbs,2016-12-30T19:29:09Z,@morcos fixed and squashed,https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-269812305,269812305,
morcos,2017-01-14T15:54:44Z,"tested ACK d4781ac\n\nI think this would be nice for 0.14",https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-272632584,272632584,
TheBlueMatt,2017-01-14T20:47:57Z,utACK d4781ac6c26399d316a2b25f656d9a4c0990c419,https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-272651935,272651935,
gmaxwell,2017-01-15T15:48:24Z,utACK.,https://github.com/bitcoin/bitcoin/pull/9400#issuecomment-272703405,272703405,
TheBlueMatt,2016-12-22T08:12:13Z,nit: maybe move the State() check inside MaybeSet...?,https://github.com/bitcoin/bitcoin/pull/9400#discussion_r93580736,93580736,src/net_processing.cpp
TheBlueMatt,2016-12-22T08:27:37Z,"Ideally this would go in UpdatedBlockTip instead. mapBlockSource wouldn't be available there, but BlockChecked isnt really capturing where we want this - we want to know that this is actually the best currently available block, not just a block that was just checked.\n\nNot really sure how to fix this - maybe just a mapBlocksInFlight.empty() is sufficient, but its still super ugly.",https://github.com/bitcoin/bitcoin/pull/9400#discussion_r93582234,93582234,src/net_processing.cpp
instagibbs,2016-12-22T13:53:36Z,Could we change the lifetime of mapBlockSource to keep it around until then? We could sweep it later.,https://github.com/bitcoin/bitcoin/pull/9400#discussion_r93626388,93626388,src/net_processing.cpp
rebroad,2016-12-26T02:54:23Z,why return true? it's a void function.,https://github.com/bitcoin/bitcoin/pull/9400#discussion_r93839025,93839025,src/net_processing.cpp
MarcoFalke,2016-12-26T12:57:58Z,@rebroad It is not a void function https://dev.visucore.com/bitcoin/doxygen/class_c_connman.html#a16958796bb02ef0151b5b5544316c048,https://github.com/bitcoin/bitcoin/pull/9400#discussion_r93865800,93865800,src/net_processing.cpp
rebroad,2016-12-27T03:31:26Z,I was referring to MaybeSetPeerAsAnnouncingHeaderAndIDs()... was misreading the flow of the code. Sorry.,https://github.com/bitcoin/bitcoin/pull/9400#discussion_r93893454,93893454,src/net_processing.cpp
rebroad,2016-12-27T03:52:10Z,nodestate can be NULL...?,https://github.com/bitcoin/bitcoin/pull/9400#discussion_r93894156,93894156,src/net_processing.cpp
instagibbs,2016-12-27T14:01:49Z,yes?,https://github.com/bitcoin/bitcoin/pull/9400#discussion_r93933640,93933640,src/net_processing.cpp
TheBlueMatt,2016-12-27T14:06:16Z,"If the peer is disconnected between when it provides the block and when the block is connected it can, sure.",https://github.com/bitcoin/bitcoin/pull/9400#discussion_r93933988,93933988,src/net_processing.cpp
morcos,2016-12-29T17:27:40Z,I don't think this check of mapBlocksInFlight.empty() will play nicely with #9352 which doesn't MarkBlockReceived until after ProcessNewBlock,https://github.com/bitcoin/bitcoin/pull/9400#discussion_r94159503,94159503,src/net_processing.cpp
morcos,2016-12-29T19:49:46Z,perhaps `mapBlocksInFlight.count(hash) == mapBlocksInFlight.size()` instead?,https://github.com/bitcoin/bitcoin/pull/9400#discussion_r94173438,94173438,src/net_processing.cpp
