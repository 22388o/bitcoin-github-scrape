amadeuszpawlik,2021-05-27 14:14:57,Should this be done with `-zmqpub...` options as well?,https://github.com/bitcoin/bitcoin/pull/22087#issuecomment-849671181,849671181,
jonatack,2021-05-27 14:18:14,I'd suggest searching for and looking at a previous pull request proposal to do this. Consider also unit testing and Doxygen docs.,https://github.com/bitcoin/bitcoin/pull/22087#issuecomment-849673891,849673891,
jonatack,2021-05-27 14:18:53,Consider also the various places in the codebase where users can input port numbers.,https://github.com/bitcoin/bitcoin/pull/22087#issuecomment-849674444,849674444,
DrahtBot,2021-05-27 15:07:14,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23035](https://github.com/bitcoin/bitcoin/pull/23035) (p2p, rpc, test: expose tried and refcount in getnodeaddresses, up",https://github.com/bitcoin/bitcoin/pull/22087#issuecomment-849712765,849712765,
amadeuszpawlik,2021-05-29 09:43:15,"Added doxygen descriptions\nAdded/updated test for `SplitHostPort`\n@jonatack could you clarify \n>Consider also the various places in the codebase where users can input port numbers.\n\nHave I missed something, like a config?",https://github.com/bitcoin/bitcoin/pull/22087#issuecomment-850805216,850805216,
amadeuszpawlik,2021-06-03 16:09:09,"Thanks for your input, @klementtan !\nI addressed your comment in a1c591453fbd3f28772a230720675f4e9ff74978 ",https://github.com/bitcoin/bitcoin/pull/22087#issuecomment-853989210,853989210,
amadeuszpawlik,2021-06-04 13:08:56,"@klementtan \n> think you might have missed out the scenario where the user enters -1 as the port.\n\nYou are absolutely right, fixed that. I also added a couple negative port numbers in the tests, thanks.\n",https://github.com/bitcoin/bitcoin/pull/22087#issuecomment-854711906,854711906,
laanwj,2021-08-02 12:08:06,"Concept ACK. I would personally call this ""validate"" (as in input validation), not ""santize"". In the source base we use ""sanitize"" only in the context of removing invalid characters from strings in logging.",https://github.com/bitcoin/bitcoin/pull/22087#issuecomment-890972635,890972635,
amadeuszpawlik,2021-08-27 13:58:12,"@laanwj \n> Concept ACK. I would personally call this ""validate"" (as in input validation), not ""santize"". In the source base we use ""sanitize"" only in the context of removing invalid characters from strings in logging.\n\nI have changed the wording, thanks üëç\n",https://github.com/bitcoin/bitcoin/pull/22087#issuecomment-907223654,907223654,
DrahtBot,2021-09-21 10:32:09,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/22087#issuecomment-923850261,923850261,
klementtan,2021-06-03 18:01:29,"<strike> The value `portOut` will be undefined behavior if `portStr = ""-1""` as `ParseUInt16` will return false before assigning a value to `n` </strike>",https://github.com/bitcoin/bitcoin/pull/22087#discussion_r645017999,645017999,src/util/strencodings.cpp
amadeuszpawlik,2021-06-04 11:05:31,"I don't know if I agree with you on this point:\nMy intention here was not to change the behaviour of `SplitHostPort(...)` (rather to gain access to the port portion of a socket address as a string).\nIf you for example take a look at [src/httpserver.cpp](https://github.com/bitcoin/bitcoin/blob/a748782a11f0b23f8dcdf167f45d68c863524887/src/httpserver.cpp#L307&L308&L309) in `HTTPBindAddresses(...)",https://github.com/bitcoin/bitcoin/pull/22087#discussion_r645486220,645486220,src/util/strencodings.cpp
klementtan,2021-06-05 00:46:03,"That makes sense thanks! Additionally, I was wrong about `portOut` having an undefined behavior as `portOut = n` only if `portStr` is valid",https://github.com/bitcoin/bitcoin/pull/22087#discussion_r645916752,645916752,src/util/strencodings.cpp
laanwj,2021-08-02 12:13:18,"I would prefer this to be more explicit about parse errors. For example:\n\n- Return a boolean `true` if valid `false` otherwise\n- Return `std::optional<uint16_t>` (or even `std:::optional<std::pair<string, uint16_t>>`)\n\nEither is a lot clearer than ""we don't assign anything if the port is invalid"", which is somewhat indirect behavior.",https://github.com/bitcoin/bitcoin/pull/22087#discussion_r680918989,680918989,src/util/strencodings.h
amadeuszpawlik,2021-08-27 13:44:53,"I'm unsure if I agree, I think that a return in this case can be misleading, which is why I instead implemented [`HasInvalidPort(...)`](https://github.com/bitcoin/bitcoin/blob/96942e85051553366dea65a9474049097631fbe3/src/util/strencodings.h#L86-L93).\nI think that the range of thinkable input strings would call for a much more involved error handling in order to not be misleading (Is missing port",https://github.com/bitcoin/bitcoin/pull/22087#discussion_r697453053,697453053,src/util/strencodings.h
