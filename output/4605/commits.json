[
  {
    "sha": "60dc8e4208058814494b301c355a5996af9517a9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGRjOGU0MjA4MDU4ODE0NDk0YjMwMWMzNTVhNTk5NmFmOTUxN2E5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-07-30T13:27:03Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-07-30T13:38:58Z"
      },
      "message": "Allow -onlynet=onion to be used\n\nJust an alias for onlynet=tor, but matches the new name\nof the proxy option -onion= better.",
      "tree": {
        "sha": "685b3bd681e74621ef154a52b2d70478a54df101",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/685b3bd681e74621ef154a52b2d70478a54df101"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60dc8e4208058814494b301c355a5996af9517a9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60dc8e4208058814494b301c355a5996af9517a9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60dc8e4208058814494b301c355a5996af9517a9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60dc8e4208058814494b301c355a5996af9517a9/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1de2992e0786f4de0f0cae10eb27a3b69ec6e3de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1de2992e0786f4de0f0cae10eb27a3b69ec6e3de",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1de2992e0786f4de0f0cae10eb27a3b69ec6e3de"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a908169cd9aac24bff31485660c6092915b33b63",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60dc8e4208058814494b301c355a5996af9517a9/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60dc8e4208058814494b301c355a5996af9517a9/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=60dc8e4208058814494b301c355a5996af9517a9",
        "patch": "@@ -248,7 +248,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += \"  -maxreceivebuffer=<n>  \" + _(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)\") + \"\\n\";\n     strUsage += \"  -maxsendbuffer=<n>     \" + _(\"Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)\") + \"\\n\";\n     strUsage += \"  -onion=<ip:port>       \" + _(\"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)\") + \"\\n\";\n-    strUsage += \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\") + \"\\n\";\n+    strUsage += \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Onion)\") + \"\\n\";\n     strUsage += \"  -permitbaremultisig    \" + _(\"Relay non-P2SH multisig (default: 1)\") + \"\\n\";\n     strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n     strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through SOCKS5 proxy\") + \"\\n\";"
      },
      {
        "sha": "f9f4755f7b80b841eda1458c8540ad2de06c3b73",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60dc8e4208058814494b301c355a5996af9517a9/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60dc8e4208058814494b301c355a5996af9517a9/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=60dc8e4208058814494b301c355a5996af9517a9",
        "patch": "@@ -47,7 +47,7 @@ enum Network ParseNetwork(std::string net) {\n     boost::to_lower(net);\n     if (net == \"ipv4\") return NET_IPV4;\n     if (net == \"ipv6\") return NET_IPV6;\n-    if (net == \"tor\")  return NET_TOR;\n+    if (net == \"tor\" || net == \"onion\")  return NET_TOR;\n     return NET_UNROUTABLE;\n }\n "
      }
    ]
  },
  {
    "sha": "c91a9471be7a96311a7e1452a3624aa557bc185d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOTFhOTQ3MWJlN2E5NjMxMWE3ZTE0NTJhMzYyNGFhNTU3YmMxODVk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-07-30T13:31:36Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-07-30T13:41:17Z"
      },
      "message": "Add IsReachable(net) function\n\nAllows other parts of the program to query for reachable\nstatus of a network. Similar to IsLimited(net).",
      "tree": {
        "sha": "c95261b710c16db57073975196de5cdd33d647be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c95261b710c16db57073975196de5cdd33d647be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c91a9471be7a96311a7e1452a3624aa557bc185d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c91a9471be7a96311a7e1452a3624aa557bc185d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c91a9471be7a96311a7e1452a3624aa557bc185d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c91a9471be7a96311a7e1452a3624aa557bc185d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "60dc8e4208058814494b301c355a5996af9517a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60dc8e4208058814494b301c355a5996af9517a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60dc8e4208058814494b301c355a5996af9517a9"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "27f71e45dc4824fd93b62ac4a000b990b6cc4c63",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c91a9471be7a96311a7e1452a3624aa557bc185d/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c91a9471be7a96311a7e1452a3624aa557bc185d/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=c91a9471be7a96311a7e1452a3624aa557bc185d",
        "patch": "@@ -307,12 +307,18 @@ bool IsLocal(const CService& addr)\n     return mapLocalHost.count(addr) > 0;\n }\n \n+/** check whether a given network is one we can probably connect to */\n+bool IsReachable(enum Network net)\n+{\n+    LOCK(cs_mapLocalHost);\n+    return vfReachable[net] && !vfLimited[net];\n+}\n+\n /** check whether a given address is in a network we can probably connect to */\n bool IsReachable(const CNetAddr& addr)\n {\n-    LOCK(cs_mapLocalHost);\n     enum Network net = addr.GetNetwork();\n-    return vfReachable[net] && !vfLimited[net];\n+    return IsReachable(net);\n }\n \n bool GetMyExternalIP2(const CService& addrConnect, const char* pszGet, const char* pszKeyword, CNetAddr& ipRet)"
      },
      {
        "sha": "8656766e2695c6c0539424af059db077fc9e42cc",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c91a9471be7a96311a7e1452a3624aa557bc185d/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c91a9471be7a96311a7e1452a3624aa557bc185d/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=c91a9471be7a96311a7e1452a3624aa557bc185d",
        "patch": "@@ -106,6 +106,7 @@ bool AddLocal(const CNetAddr& addr, int nScore = LOCAL_NONE);\n bool SeenLocal(const CService& addr);\n bool IsLocal(const CService& addr);\n bool GetLocal(CService &addr, const CNetAddr *paddrPeer = NULL);\n+bool IsReachable(enum Network net);\n bool IsReachable(const CNetAddr &addr);\n void SetReachable(enum Network net, bool fFlag = true);\n CAddress GetLocalAddress(const CNetAddr *paddrPeer = NULL);"
      }
    ]
  },
  {
    "sha": "075cf49e593025030c8b3572e606960f15de424e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzVjZjQ5ZTU5MzAyNTAzMGM4YjM1NzJlNjA2OTYwZjE1ZGU0MjRl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-07-30T13:32:36Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-07-30T13:41:17Z"
      },
      "message": "Add GetNetworkName function\n\nReturns the network name for an Network enum.",
      "tree": {
        "sha": "307aa1741874c20e3118bcbc5488a89cddc81ec0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/307aa1741874c20e3118bcbc5488a89cddc81ec0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/075cf49e593025030c8b3572e606960f15de424e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/075cf49e593025030c8b3572e606960f15de424e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/075cf49e593025030c8b3572e606960f15de424e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/075cf49e593025030c8b3572e606960f15de424e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c91a9471be7a96311a7e1452a3624aa557bc185d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c91a9471be7a96311a7e1452a3624aa557bc185d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c91a9471be7a96311a7e1452a3624aa557bc185d"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 12,
      "deletions": 1
    },
    "files": [
      {
        "sha": "4e109a8bc916520fd034879685bb939cce1b1359",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/075cf49e593025030c8b3572e606960f15de424e/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/075cf49e593025030c8b3572e606960f15de424e/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=075cf49e593025030c8b3572e606960f15de424e",
        "patch": "@@ -51,6 +51,16 @@ enum Network ParseNetwork(std::string net) {\n     return NET_UNROUTABLE;\n }\n \n+std::string GetNetworkName(enum Network net) {\n+    switch(net)\n+    {\n+    case NET_IPV4: return \"ipv4\";\n+    case NET_IPV6: return \"ipv6\";\n+    case NET_TOR: return \"onion\";\n+    default: return \"\";\n+    }\n+}\n+\n void SplitHostPort(std::string in, int &portOut, std::string &hostOut) {\n     size_t colon = in.find_last_of(':');\n     // if a : is found, and it either follows a [...], or no other : is in the string, treat it as port separator"
      },
      {
        "sha": "bd8dbf9695f01676da9bcf63d9504811c51e381b",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/075cf49e593025030c8b3572e606960f15de424e/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/075cf49e593025030c8b3572e606960f15de424e/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=075cf49e593025030c8b3572e606960f15de424e",
        "patch": "@@ -26,7 +26,7 @@ extern bool fNameLookup;\n \n enum Network\n {\n-    NET_UNROUTABLE,\n+    NET_UNROUTABLE = 0,\n     NET_IPV4,\n     NET_IPV6,\n     NET_TOR,\n@@ -164,6 +164,7 @@ class CService : public CNetAddr\n typedef CService proxyType;\n \n enum Network ParseNetwork(std::string net);\n+std::string GetNetworkName(enum Network net);\n void SplitHostPort(std::string in, int &portOut, std::string &hostOut);\n bool SetProxy(enum Network net, CService addrProxy);\n bool GetProxy(enum Network net, proxyType &proxyInfoOut);"
      }
    ]
  },
  {
    "sha": "aa8279513b5d206c172d3da3d5e3034c61d47b39",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYTgyNzk1MTNiNWQyMDZjMTcyZDNkYTNkNWUzMDM0YzYxZDQ3YjM5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-07-30T13:35:14Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-08-18T11:36:10Z"
      },
      "message": "Add detailed network info to getnetworkinfo RPC\n\nThis commit adds per-network information to the\ngetnetworkinfo RPC call:\n\n- Is the network limited?\n- Is the network reachable\n- Which proxy is used for this network, if any\n\nInspired by #2575.",
      "tree": {
        "sha": "e95049734970cf53a9659ff67926f12a0ed26997",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e95049734970cf53a9659ff67926f12a0ed26997"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aa8279513b5d206c172d3da3d5e3034c61d47b39",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJT8eUrAAoJEHSBCwEjRsmmufkH/iYMrj6UtVBXXnhXXjph31go\nkjXEE2vAukTcLIHkczqXIUqpxHTa9du4+JEyiICJUm5fVF/lnw7I04MXclF5eCN+\n7b5VvZckE2QL/+60WC/90cvMXHEaHl3/JudT2KnxABac+NzU6RU+wS4edFUd4yDf\n9C6vLYjWMAMXGOpXsdQzCC2EV40Xou557qN5ILS+vgjoqCBrgStcbac8j4Yw6EOu\nsxjvxNA2jzSiFOR7bEvAf4Wnk+MYQko4CbYwlSCxe1AbdDBG1WJqagjRFkTwKICL\nxbIxsA1HHYLZNRUaHVAtu+O800ExTwkkildAlNG0UXyiK0frGhvWg+ZcMI/eIwk=\n=nn2V\n-----END PGP SIGNATURE-----",
        "payload": "tree e95049734970cf53a9659ff67926f12a0ed26997\nparent 075cf49e593025030c8b3572e606960f15de424e\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1406727314 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1408361770 +0200\n\nAdd detailed network info to getnetworkinfo RPC\n\nThis commit adds per-network information to the\ngetnetworkinfo RPC call:\n\n- Is the network limited?\n- Is the network reachable\n- Which proxy is used for this network, if any\n\nInspired by #2575.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa8279513b5d206c172d3da3d5e3034c61d47b39",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aa8279513b5d206c172d3da3d5e3034c61d47b39",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa8279513b5d206c172d3da3d5e3034c61d47b39/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "075cf49e593025030c8b3572e606960f15de424e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/075cf49e593025030c8b3572e606960f15de424e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/075cf49e593025030c8b3572e606960f15de424e"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 29,
      "deletions": 6
    },
    "files": [
      {
        "sha": "b20b940b86efd2a1a25849566182aa81b481f0c1",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa8279513b5d206c172d3da3d5e3034c61d47b39/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa8279513b5d206c172d3da3d5e3034c61d47b39/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=aa8279513b5d206c172d3da3d5e3034c61d47b39",
        "patch": "@@ -248,7 +248,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += \"  -maxreceivebuffer=<n>  \" + _(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)\") + \"\\n\";\n     strUsage += \"  -maxsendbuffer=<n>     \" + _(\"Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)\") + \"\\n\";\n     strUsage += \"  -onion=<ip:port>       \" + _(\"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)\") + \"\\n\";\n-    strUsage += \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Onion)\") + \"\\n\";\n+    strUsage += \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (ipv4, ipv6 or onion)\") + \"\\n\";\n     strUsage += \"  -permitbaremultisig    \" + _(\"Relay non-P2SH multisig (default: 1)\") + \"\\n\";\n     strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n     strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through SOCKS5 proxy\") + \"\\n\";"
      },
      {
        "sha": "2baa481c4e4da5a320d89ce9c473d98cf3487a2f",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 5,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa8279513b5d206c172d3da3d5e3034c61d47b39/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa8279513b5d206c172d3da3d5e3034c61d47b39/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=aa8279513b5d206c172d3da3d5e3034c61d47b39",
        "patch": "@@ -338,6 +338,26 @@ Value getnettotals(const Array& params, bool fHelp)\n     return obj;\n }\n \n+static Array GetNetworksInfo()\n+{\n+    Array networks;\n+    for(int n=0; n<NET_MAX; ++n)\n+    {\n+        enum Network network = static_cast<enum Network>(n);\n+        if(network == NET_UNROUTABLE)\n+            continue;\n+        proxyType proxy;\n+        Object obj;\n+        GetProxy(network, proxy);\n+        obj.push_back(Pair(\"name\", GetNetworkName(network)));\n+        obj.push_back(Pair(\"limited\", IsLimited(network)));\n+        obj.push_back(Pair(\"reachable\", IsReachable(network)));\n+        obj.push_back(Pair(\"proxy\", proxy.IsValid() ? proxy.ToStringIPPort() : string()));\n+        networks.push_back(obj);\n+    }\n+    return networks;\n+}\n+\n Value getnetworkinfo(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 0)\n@@ -351,7 +371,13 @@ Value getnetworkinfo(const Array& params, bool fHelp)\n             \"  \\\"localservices\\\": \\\"xxxxxxxxxxxxxxxx\\\",   (string) the services we offer to the network\\n\"\n             \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n             \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n-            \"  \\\"proxy\\\": \\\"host:port\\\",     (string, optional) the proxy used by the server\\n\"\n+            \"  \\\"networks\\\": [               (array) information per network\\n\"\n+            \"      \\\"name\\\": \\\"xxx\\\",        (string) network (ipv4, ipv6 or onion)\\n\"\n+            \"      \\\"limited\\\": xxx,         (boolean) is the network limited using -onlynet?\\n\"\n+            \"      \\\"reachable\\\": xxx,       (boolean) is the network reachable?\\n\"\n+            \"      \\\"proxy\\\": \\\"host:port\\\"  (string) the proxy that is used for this network, or empty if none\\n\"\n+            \"    },\\n\"\n+            \"  ],\\n\"\n             \"  \\\"relayfee\\\": x.xxxx,         (numeric) minimum relay fee for non-free transactions in btc/kb\\n\"\n             \"  \\\"localaddresses\\\": [,        (array) list of local addresses\\n\"\n             \"    \\\"address\\\": \\\"xxxx\\\",      (string) network address\\n\"\n@@ -364,16 +390,13 @@ Value getnetworkinfo(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getnetworkinfo\", \"\")\n         );\n \n-    proxyType proxy;\n-    GetProxy(NET_IPV4, proxy);\n-\n     Object obj;\n     obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n     obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n     obj.push_back(Pair(\"localservices\",       strprintf(\"%016x\", nLocalServices)));\n     obj.push_back(Pair(\"timeoffset\",    GetTimeOffset()));\n     obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n-    obj.push_back(Pair(\"proxy\",         (proxy.IsValid() ? proxy.ToStringIPPort() : string())));\n+    obj.push_back(Pair(\"networks\",      GetNetworksInfo()));\n     obj.push_back(Pair(\"relayfee\",      ValueFromAmount(::minRelayTxFee.GetFeePerK())));\n     Array localAddresses;\n     {"
      }
    ]
  }
]