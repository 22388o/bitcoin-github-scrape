luke-jr,2019-11-02 18:41:48,Addresses are used when they receive. Not when the UTXO created is later spent.,https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-549070150,549070150,
za-kk,2019-11-04 10:50:09,"> Addresses are used when they receive. Not when the UTXO created is later spent.\n\nUnderstood, I can update it to grey out just addresses that have received (Used) and not ones that have received and been spent if desired?\n",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-549301599,549301599,
luke-jr,2019-11-04 12:30:18,"> Understood, I can update it to grey out just addresses that have received (Used) and not ones that have received and been spent if desired?\n\nYes (it would be meaningless/erroneous to grey out addresses based on actions of the UTXOs created when they receive).",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-549332456,549332456,
jonasschnelli,2019-11-04 19:30:01,Agree with @luke-jr. This is currently conceptual wrong.,https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-549510432,549510432,
MarcoFalke,2019-11-04 19:51:37,"So if the existing used-flag is supposed to do what it does (indicate true when the coin sent to that destination has been spent), it could make sense to add a new flag (indicate true when a tx has been received that has the destination in one of its outputs).",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-549518925,549518925,
luke-jr,2019-11-04 21:36:58,"See also #15987, but I'm not sure it's the best approach to use here. If we're going to check *every address* (as this does), we should probably save a flag in the wallet/address book when we see an address used...",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-549558387,549558387,
za-kk,2020-02-11 00:08:56,"Revisiting this pr...\n\nI have now re-implemented by saving a flag in the address book (`address_used`) when we see an address used. I took the same approach as the `IsUsedDestination` methods and therefor this will only work when the `avoid_reuse` flag is set on the wallet.\n\nThis essentially checks the outputs when a transaction is added to the wallet (`AddToWallet`) and if it belongs to u",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-584420413,584420413,
dannmat,2020-02-11 08:08:12,ack,https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-584517915,584517915,
DrahtBot,2020-02-11 08:35:34,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22100](https://github.com/bitcoin/bitcoin/pull/22100) (refactor: Clean up new wallet spend, receive files added #21207 b",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-584525803,584525803,
luke-jr,2020-02-23 01:55:53,"IMO this should work for all wallets, and when loading an old wallet (or one that has been loaded by an older version since the last use of a supporting version), should populate the flag as necessary.",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-590017742,590017742,
za-kk,2020-02-24 20:41:02,"> IMO this should work for all wallets, and when loading an old wallet (or one that has been loaded by an older version since the last use of a supporting version), should populate the flag as necessary.\n\n@luke-jr I would be inclined to agree with you on this, it was only initially constrained to `avoid_reuse` wallets as `IsUsedDestination` was used in the first integration (although wrongly u",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-590538175,590538175,
za-kk,2020-05-26 23:05:25,"Rebased with master and squashed commits.\n\nThinking of picking this back up if it is still a desirable change/feature? Currently it's limited to watch only wallets but as @luke-jr mentioned, this may be desirable to all wallet types",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-634326248,634326248,
jonasschnelli,2020-05-29 07:48:41,"Concept ACK on how this works today. Slightly reviewed the code and it looks good.\n\nCan you please review @luke-jr, @promag?",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-635819180,635819180,
MarcoFalke,2020-05-29 11:57:56,Open-Close to re-run ci. See https://github.com/bitcoin/bitcoin/issues/15847#issuecomment-487591130,https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-635932973,635932973,
za-kk,2020-06-06 22:24:52,"> Maybe add a tooltip on the greyed rows?\n\nAdded tooltip as suggested, not sure on suitable wording so suggestions welcome (I went with ""This address has been used"" followed by the original tooltip in brackets (screenshot below).\n\n![address-tooltip](https://user-images.githubusercontent.com/31032215/83955638-d69fd000-a84c-11ea-95bf-4d1d365b51e8.png)\n",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-640125886,640125886,
za-kk,2020-06-07 13:34:15,Thanks for reviewing the code @jonatack! I have now made the changes suggested and squashed my commits.,https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-640220095,640220095,
jonatack,2020-06-07 13:53:10,Thanks for the color change. I only use the GUI in dark mode :). I don't think you needed to squash the two commits and `git diff 94cbeaa 481d3df` would have been cleaner and easier to re-review by not squashing. But wait until someone else reviews before re-touching.,https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-640222516,640222516,
promag,2020-06-08 09:17:57,"I'm sorry to NACK current approach. You shouldn't be adding blocking calls in `AddressTableModel::data`, these will make the GUI unresponsive. I think you should add a `is_used` member to `AddressTableEntry` and keep it updated accordingly.\n\nEdit: I mean blocking mainly because of process separation - in that case some IPC is necessary between the GUI process and wallet process. But even witho",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-640480797,640480797,
za-kk,2020-06-08 18:55:57,"Thanks for reviewing @promag! makes sense to avoid locking up the GUI wherever possible, I will look into updating the code to follow the process you mentioned instead.",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-640810254,640810254,
hebasto,2020-06-29 14:05:20,"Concept ACK.\n\n@za-kk Are you still working on this? Are you going to implement @promag's [suggestion](https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-640480797)?",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-651144775,651144775,
za-kk,2020-06-29 14:09:20,"Thanks for the ACK @hebasto, yes I am still working on this and plan to implement the suggestions made by @promag soon 👍🏻",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-651147029,651147029,
jonatack,2020-07-12 17:23:25,"Hi @za-kk, let us know if you're having any issue with progress here :rocket: ",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-657251933,657251933,
jarolrod,2020-11-19 01:46:03,"@za-kk  are you going to implement promags suggestion, or can I pick this up?",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-730071159,730071159,
hebasto,2020-11-19 05:36:44,"> @za-kk are you going to implement promags suggestion, or can I pick this up?\n\nProbably, the better approach is to split this change into two PRs:\n- introduce new `CWallet` member functions and _add tests_ for them (in this repo)\n- GUI changes (in the gui repo)",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-730141573,730141573,
za-kk,2020-11-19 11:07:10,"Sorry, this PR has been quite stale from me over the last several months as I haven't had the chance to take a look yet. I do still plan on implementing the suggestions over the next week or so but always willing to accept help on this!\n\nThanks @hebasto, I was wondering what the preferred way of doing this would be now that we have the GUI repo. I will look into introducing the initial `CWalle",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-730299307,730299307,
promag,2020-11-19 11:47:12,"@hebasto I don't quite agree with that approach. The goal is to add a GUI change and that PR should be in gui repo. If that PR requires `CWallet` changes then I think they belong there. It might make sense to do what you suggest but not in this early stage - too much effort to sync both PR's, to have split discussions etc.",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-730320625,730320625,
hebasto,2020-11-19 13:24:07,"@promag \n> @hebasto I don't quite agree with that approach. The goal is to add a GUI change and that PR should be in gui repo. If that PR requires `CWallet` changes then I think they belong there. It might make sense to do what you suggest but not in this early stage - too much effort to sync both PR's, to have split discussions etc.\n\nI'm fine with keeping all changes and discussion here.\n",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-730372049,730372049,
hebasto,2020-12-26 21:20:56,"> Hi @za-kk, let us know if you're having any issue with progress here",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-751397234,751397234,
za-kk,2021-02-07 00:31:18,"Hi All, I finally had chance to implement the changes suggested by @promag. I notice that the test `wallet_avoidreuse.py` is currently failing in CI, I will look into resolving this.",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-774566162,774566162,
hebasto,2021-03-26 03:15:35,"> @za-kk Are you still working on this?\n\nAny update?",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-807905521,807905521,
hebasto,2021-05-29 19:55:45,"@MarcoFalke @meshcollider \n\nUp for grabs?",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-850890282,850890282,
za-kk,2021-05-29 20:03:11,"Apologies for the delay on this PR, I do plan on picking it back up very shortly. \n\nAlways willing to accept help/advice to move things forward @hebasto 👍🏻",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-850891111,850891111,
za-kk,2021-07-04 17:24:02,"This should now be ready for review again, I have implemented the suggested changes made by @promag.",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-873629357,873629357,
prayank23,2021-07-04 18:05:52,"Concept ACK\n\nnit: grey if used once and red if used twice or more would have been better\n\nWill test by tomorrow",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-873635043,873635043,
za-kk,2021-07-05 11:51:57,Thanks for taking a look @jonatack! seems that some latest merges to master has resulted in changes to destdata (#21353)  which was causing the build issues. I have now refactored the code to deal with this (bb4790816d84f850367c99134ea6a16659fbb180),https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-874052192,874052192,
prayank23,2021-07-05 18:25:32,"Compiled successfully on Linux (Pop!_OS). Works as expected. Addresses were greyed out once I sent bitcoin to first 2 addresses from the 'receiving addresses':\n\n![image](https://user-images.githubusercontent.com/13405205/124507507-86969280-ddeb-11eb-8035-cf554a82b209.png)\n\n\nAlthough if a user cares about privacy, should never open 'received addresses' for using. Once a receiving address ",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-874272237,874272237,
prayank23,2021-07-06 14:10:26,"> It seems like SetAddressReceivedState should be called in LoadToWallet as well as AddToWallet, not just AddToWallet so old and new addresses are displayed correctly, not just old addresses.\n\nI relaunched `bitcoin-qt` today and my old addresses which had received bitcoin, were marked [grey yesterday](https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-874272237) are not greyed out now:",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-874794806,874794806,
DrahtBot,2021-09-03 09:28:47,"<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-912398268,912398268,
za-kk,2021-11-14 15:02:54,"Thanks for the feedback everyone! Closing this PR for now until I have more time to come back and implement the changes, anyone else is welcome to pick it up in the meantime if desired 😀",https://github.com/bitcoin/bitcoin/pull/17355#issuecomment-968307242,968307242,
promag,2019-11-02 18:37:36,"There was some discussion elsewhere which, IIRC, say you should use `isUsedDestination` instead.",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r341821415,341821415,src/interfaces/wallet.cpp
promag,2019-11-02 18:39:29,"The comment is not clear to me, what you mean by ""this""?",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r341821471,341821471,src/interfaces/wallet.h
promag,2019-11-02 18:39:48,Why are you locking this?,https://github.com/bitcoin/bitcoin/pull/17355#discussion_r341821483,341821483,src/interfaces/wallet.cpp
promag,2019-11-02 18:41:03,"nit, here and below `if (...) {`.",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r341821521,341821521,src/qt/addresstablemodel.cpp
promag,2019-11-02 18:41:23,"nit, space after `if`.",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r341821537,341821537,src/qt/addresstablemodel.cpp
za-kk,2019-11-02 19:07:12,this comment was carried over from the original `IsUsedDestination` method in the `wallet/wallet.h` file,https://github.com/bitcoin/bitcoin/pull/17355#discussion_r341822383,341822383,src/interfaces/wallet.h
za-kk,2019-11-02 19:25:43,"yes, makes sense as it follows the same convention as the rest of the file. will update along with other nits",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r341822995,341822995,src/interfaces/wallet.cpp
za-kk,2019-11-02 19:28:15,"sorry, think i misunderstood what this line did, will remove ",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r341823076,341823076,src/interfaces/wallet.cpp
za-kk,2019-11-02 20:11:01,fixed,https://github.com/bitcoin/bitcoin/pull/17355#discussion_r341824473,341824473,src/interfaces/wallet.cpp
za-kk,2019-11-02 20:11:36,fixed,https://github.com/bitcoin/bitcoin/pull/17355#discussion_r341824485,341824485,src/qt/addresstablemodel.cpp
za-kk,2019-11-02 20:11:44,fixed,https://github.com/bitcoin/bitcoin/pull/17355#discussion_r341824488,341824488,src/qt/addresstablemodel.cpp
za-kk,2019-11-02 20:11:58,this has now been removed,https://github.com/bitcoin/bitcoin/pull/17355#discussion_r341824495,341824495,src/interfaces/wallet.cpp
promag,2020-06-01 00:29:48,Please update code format accordingly to developer notes.,https://github.com/bitcoin/bitcoin/pull/17355#discussion_r433000850,433000850,src/wallet/wallet.cpp
promag,2020-06-01 00:31:28,"Is it me or `IsMine` is irrelevant?\n\nEither way call `GetDestData` since it's faster and most likely to fail.",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r433001075,433001075,src/wallet/wallet.cpp
za-kk,2020-06-06 21:11:04,"Yes `IsMine` would be irrelevant in this case, have now removed to just return the output of `GetDestData` as suggested, Thanks!",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r436300938,436300938,src/wallet/wallet.cpp
za-kk,2020-06-06 21:12:29,"Updated according to developer notes (added space after `if`), hopefully I haven't missed anything, Thanks!",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r436301029,436301029,src/wallet/wallet.cpp
jonatack,2020-06-07 07:13:19,"If helpful, you can use Clang in the future to check for some things:\n\n    Use Clang formatting to clean up a file:\n    clang-format -i <file>\n\n    To format the last commit with 0 lines of context, call the\n    clang-format-diff.py script from root as follows:\n    git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r436333413,436333413,src/wallet/wallet.cpp
jonatack,2020-06-07 08:23:20,"perhaps simplify\n```diff\n {\n     AssertLockHeld(cs_wallet);\n     CTxDestination dst;\n-    if (ExtractDestination(cout.scriptPubKey, dst)) {\n-        if (IsMine(dst)) {\n-            if (used && !GetDestData(dst, ""address_used"", nullptr)) {\n-                AddDestData(batch, dst, ""address_used"", ""p""); // p for ""present"", opposite of absent (null)\n-            } else if (!used && G",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r436338427,436338427,src/wallet/wallet.cpp
jonatack,2020-06-07 08:37:05,"Suggestion: perhaps `gray` to be more compatible with dark mode.\n\ngray:\n![Screenshot from 2020-06-07 10-47-18](https://user-images.githubusercontent.com/2415484/83964322-d1b63d00-a89b-11ea-8294-f365f60395ae.jpg)\n\nlight gray:\n![Screenshot from 2020-06-07 10-41-39](https://user-images.githubusercontent.com/2415484/83964324-d4b12d80-a89b-11ea-86a7-39b2845ac950.jpg)\n\n",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r436339496,436339496,src/qt/addresstablemodel.cpp
jonatack,2020-06-07 08:51:58,Is this lock needed?,https://github.com/bitcoin/bitcoin/pull/17355#discussion_r436340632,436340632,src/wallet/wallet.cpp
za-kk,2020-06-07 13:22:39,"Thanks @jonatack, that will definitely be useful for me to use in the future!",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r436362856,436362856,src/wallet/wallet.cpp
za-kk,2020-06-07 13:28:09,"Yes makes sense, this has now been simplified as suggested",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r436363365,436363365,src/wallet/wallet.cpp
za-kk,2020-06-07 13:29:56,Thanks for testing with dark mode! have now updated the code to use `gray` instead of `lightGray` to accommodate both light and dark modes,https://github.com/bitcoin/bitcoin/pull/17355#discussion_r436363517,436363517,src/qt/addresstablemodel.cpp
za-kk,2020-06-07 13:32:14,Probably not needed as `GetDestData` is just accessing the address book data. I have now removed the lock.,https://github.com/bitcoin/bitcoin/pull/17355#discussion_r436363760,436363760,src/wallet/wallet.cpp
jonatack,2020-06-08 09:05:11,"Sorry about that; it appears to be needed. Clang build output:\n```\nwallet/wallet.cpp:803:12: error: calling function 'GetDestData' requires\nholding mutex 'cs_wallet' exclusively [-Werror,-Wthread-safety-analysis]\n    return GetDestData(dst, ""address_used"", nullptr);\n           ^\n1 error generated.\n```",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r436553965,436553965,src/wallet/wallet.cpp
za-kk,2020-06-08 18:54:30,"My bad, should have checked properly myself before removing! This has now been updated to include the lock again.",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r436922822,436922822,src/wallet/wallet.cpp
adamjonas,2020-12-09 22:36:17,"I'm getting compiler warnings consistent with the CI:\n\n```\nwallet/wallet.cpp:847:5: warning: calling function 'AssertLockHeldInternal<AnnotatedMixin<std::__1::recursive_mutex> >' requires holding mutex 'cs_wallet' exclusively [-Wthread-safety-analysis]\n    AssertLockHeld(cs_wallet);\n    ^\n./sync.h:81:28: note: expanded from macro 'AssertLockHeld'\n#define AssertLockHeld(cs) AssertLock",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r539700220,539700220,src/wallet/wallet.cpp
promag,2020-12-12 00:04:19,"Could save txid instead of ""p"" and maybe reword the key to ""first_txid"" so that we could show the user that transaction.\n\n",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r541437329,541437329,src/wallet/wallet.cpp
promag,2020-12-12 00:04:40,"`used` is always `true`, maybe drop it?",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r541437599,541437599,src/wallet/wallet.cpp
promag,2020-12-12 00:06:03,"An existing wallet will not have these set, ignore this fact? Or just add a release note saying that a rescan fixes this?",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r541438627,541438627,src/wallet/wallet.cpp
za-kk,2021-02-07 00:32:08,"Thanks for taking a look @adamjonas, this should now be resolved in latest commit ",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r571508659,571508659,src/wallet/wallet.cpp
za-kk,2021-02-07 00:32:33,This should be implemented in latest commit,https://github.com/bitcoin/bitcoin/pull/17355#discussion_r571508695,571508695,src/wallet/wallet.cpp
za-kk,2021-02-07 00:33:42,"Yes I think the best solution would be adding a release note as you suggested, I will look into doing this shortly",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r571508766,571508766,src/wallet/wallet.cpp
za-kk,2021-07-04 17:22:54,"This has been resolved in the latest commit, thanks!",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r663533464,663533464,src/wallet/wallet.cpp
jonatack,2021-07-04 22:07:14,"Here and in the definition in the .cpp file, `uint256 hash` ought to be passed by reference to const, as it is not a cheaply passed type (see usage elsewhere in the codebase). \n```suggestion\n    void SetUsedAddressState(WalletBatch& batch, const CTxOut& cout, const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n```\nhttps://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#f16-for-i",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r663562530,663562530,src/wallet/wallet.h
jonatack,2021-07-04 22:08:08,"```suggestion\nvoid CWallet::SetUsedAddressState(WalletBatch& batch, const CTxOut& cout, const uint256& hash)\n```",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r663562648,663562648,src/wallet/wallet.cpp
za-kk,2021-07-05 11:43:53,"Thanks @jonatack, this should now be resolved in bb4790816d84f850367c99134ea6a16659fbb180",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r663866163,663866163,src/wallet/wallet.h
za-kk,2021-07-05 11:44:07,"Thanks @jonatack, this should now be resolved in bb4790816d84f850367c99134ea6a16659fbb180",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r663866290,663866290,src/wallet/wallet.cpp
jonatack,2021-07-06 12:09:21,"```suggestion\n        m_address_book[dst].destdata.emplace(std::make_pair(""first_txid"", hash.ToString()));\n```",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r664495972,664495972,src/wallet/wallet.cpp
jonatack,2021-07-06 12:09:44,"```suggestion\n        if (rec->is_used) {\n```",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r664496211,664496211,src/qt/addresstablemodel.cpp
jonatack,2021-07-06 12:09:53,"```suggestion\n        if (rec->is_used) {\n```",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r664496319,664496319,src/qt/addresstablemodel.cpp
jonatack,2021-07-06 12:18:34,"The first argument of `SetAddressReceivedState()` seems unused unless I'm missing something.\n```suggestion\n    void SetAddressReceivedState(const CTxOut& cout, const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n```",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r664502134,664502134,src/wallet/wallet.h
jonatack,2021-07-06 12:21:28,"style nit: clang format and also can simplify\n```diff\n bool CWallet::HasAddressReceived(const CTxDestination& dst) const\n {\n-\n     const std::string key{""first_txid""};\n-    std::map<CTxDestination, CAddressBookData>::const_iterator i = m_address_book.find(dst);\n-    if(i != m_address_book.end())\n-    {\n-        CAddressBookData::StringMap::const_iterator j = i->second.destdata.fi",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r664504193,664504193,src/wallet/wallet.cpp
jonatack,2021-07-06 12:39:55,"nit, omit extra line break here and also line 891 below",https://github.com/bitcoin/bitcoin/pull/17355#discussion_r664517030,664517030,src/wallet/wallet.cpp
