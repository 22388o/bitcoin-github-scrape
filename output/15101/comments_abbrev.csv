promag,2019-01-04T21:23:36Z,Split in multiple commits for easier review.,https://github.com/bitcoin/bitcoin/pull/15101#issuecomment-451572553,451572553,
DrahtBot,2019-01-05T16:42:45Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/15101#issuecomment-451670247,451670247,
Sjors,2019-01-09T13:33:23Z,"re-tACK 5e4cb35, it seems to fix the crashes we discussed on IRC.\n\nI noticed you removed the `qRegisterMetaType<WalletModel>` line completely. What was its purpose? And why can this one be removed but not the other ones?",https://github.com/bitcoin/bitcoin/pull/15101#issuecomment-452697722,452697722,
promag,2019-01-12T11:02:42Z,"Rebased with #15149 to avoid conflicts.\n",https://github.com/bitcoin/bitcoin/pull/15101#issuecomment-453738651,453738651,
promag,2019-01-14T22:27:56Z,@jnewbery done.,https://github.com/bitcoin/bitcoin/pull/15101#issuecomment-454185717,454185717,
Sjors,2019-01-15T19:08:24Z,"Will re-test after  #15149 rebase, but looking good.",https://github.com/bitcoin/bitcoin/pull/15101#issuecomment-454512698,454512698,
promag,2019-01-16T00:58:42Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/15101#issuecomment-454610408,454610408,
promag,2019-01-16T16:16:26Z,"@Sjors in #15150 https://github.com/bitcoin/bitcoin/pull/15150/commits/b669ba6bd86a7808e4692bb0cf692b1c95d8d32d that warning is removed.\n\nThanks for reviewing!",https://github.com/bitcoin/bitcoin/pull/15101#issuecomment-454839428,454839428,
jnewbery,2019-01-17T16:18:48Z,"Tested ACK 1316f5706891bb94428078e874e761931ff0e087\n\nOnly difference is rebasing on master and removing the unused `WalletController::getWalletsAvailableToLoad()`\n\nEDIT: pasted incorrect commit id. Now fixed",https://github.com/bitcoin/bitcoin/pull/15101#issuecomment-455232779,455232779,
promag,2019-01-18T00:51:18Z,Refactored a bit to simplify follow ups.,https://github.com/bitcoin/bitcoin/pull/15101#issuecomment-455387031,455387031,
jnewbery,2019-01-18T18:18:15Z,utACK 0dd9bdefa1427746ae94b4dd3da1a5257c1ec68e,https://github.com/bitcoin/bitcoin/pull/15101#issuecomment-455639550,455639550,
jonasschnelli,2019-01-18T20:20:45Z,Tested ACK 0dd9bdefa1427746ae94b4dd3da1a5257c1ec68e,https://github.com/bitcoin/bitcoin/pull/15101#issuecomment-455675419,455675419,
Sjors,2019-01-07T15:16:37Z,Why was this `2` in the past?,https://github.com/bitcoin/bitcoin/pull/15101#discussion_r245687054,245687054,src/qt/rpcconsole.cpp
Sjors,2019-01-07T15:55:17Z,"I'm confused, what is this `m_history`?",https://github.com/bitcoin/bitcoin/pull/15101#discussion_r245701745,245701745,src/qt/walletcontroller.h
promag,2019-01-07T16:23:07Z,Before the wallet selector would be visible with only 2 wallets. However I think it makes sense to show the selector even with 1 wallet only because otherwise you can't decide to execute `unloadwallet` with or without a wallet.,https://github.com/bitcoin/bitcoin/pull/15101#discussion_r245712601,245712601,src/qt/rpcconsole.cpp
promag,2019-01-07T16:33:22Z,"Sorry, should have some comment there. I'm also willing to remove this now and add it later.\n\nThis is like the stack of wallets, the smaller the index the most recent viewed wallet. With this when the user closes a the current wallet it goes to the previous used wallet.",https://github.com/bitcoin/bitcoin/pull/15101#discussion_r245716463,245716463,src/qt/walletcontroller.h
Sjors,2019-01-09T13:16:13Z,"I have a light preference for dropping that functionality, unless someone is willing to write tests for it. I don't expect users to be loading and unloading so often that a lack of history gets annoying.",https://github.com/bitcoin/bitcoin/pull/15101#discussion_r246377053,246377053,src/qt/walletcontroller.h
jnewbery,2019-01-09T18:20:47Z,"I *think* this and the other assertions are ok (I've gone through and checked where `walletFrame` is set and where `addWallet()` is called), but why not just return early to minimize code change?",https://github.com/bitcoin/bitcoin/pull/15101#discussion_r246488701,246488701,src/qt/bitcoingui.cpp
jnewbery,2019-01-09T18:46:25Z,I'm not sure if this lambda makes this any clearer. What's the motivation for this change?,https://github.com/bitcoin/bitcoin/pull/15101#discussion_r246496599,246496599,src/qt/bitcoingui.cpp
jnewbery,2019-01-09T18:58:58Z,Agree that this is unnecessary.,https://github.com/bitcoin/bitcoin/pull/15101#discussion_r246500596,246500596,src/qt/walletcontroller.h
jnewbery,2019-01-09T18:59:27Z,is this used?,https://github.com/bitcoin/bitcoin/pull/15101#discussion_r246500730,246500730,src/qt/walletcontroller.h
jnewbery,2019-01-09T19:20:35Z,"do `m_node`, `m_platform_style`, `m_options_model` and `m_handler_load_wallet` need to be member variables?",https://github.com/bitcoin/bitcoin/pull/15101#discussion_r246507075,246507075,src/qt/walletcontroller.h
promag,2019-01-12T11:03:49Z,"Yes, to create `WalletModel` instances. And `m_handler_load_wallet` is needed to keep the signal/slot connection.",https://github.com/bitcoin/bitcoin/pull/15101#discussion_r247309733,247309733,src/qt/walletcontroller.h
promag,2019-01-12T11:05:28Z,I'll leave these changes for later with a good rationale.,https://github.com/bitcoin/bitcoin/pull/15101#discussion_r247309755,247309755,src/qt/bitcoingui.cpp
promag,2019-01-12T11:06:19Z,Moved this to #15150.,https://github.com/bitcoin/bitcoin/pull/15101#discussion_r247309775,247309775,src/qt/rpcconsole.cpp
jnewbery,2019-01-14T17:30:14Z,Is this unused?,https://github.com/bitcoin/bitcoin/pull/15101#discussion_r247584912,247584912,src/qt/walletcontroller.cpp
promag,2019-01-14T17:40:00Z,"Used in #15153, I can move there if you prefer?",https://github.com/bitcoin/bitcoin/pull/15101#discussion_r247588157,247588157,src/qt/walletcontroller.cpp
jnewbery,2019-01-14T17:56:37Z,I'd recommend moving it there. I think it's best not to have unused code in PRs.,https://github.com/bitcoin/bitcoin/pull/15101#discussion_r247593876,247593876,src/qt/walletcontroller.cpp
Sjors,2019-01-16T15:55:48Z,"Nit: `->itemData()` can give you an iterator, which you can use for the loop, to prevent out of bounds accidents: http://doc.qt.io/qt-5/qvariant.html \n\nMaybe it also has a helper to just find the index you need directly.",https://github.com/bitcoin/bitcoin/pull/15101#discussion_r248339770,248339770,src/qt/bitcoingui.cpp
Sjors,2019-01-16T16:00:38Z,Explain in more detail (in a followup PR) what this controller is for.,https://github.com/bitcoin/bitcoin/pull/15101#discussion_r248341853,248341853,src/qt/walletcontroller.h
Sjors,2019-01-16T16:01:26Z,Nit: Wallet**s**Controller?,https://github.com/bitcoin/bitcoin/pull/15101#discussion_r248342177,248342177,src/qt/walletcontroller.h
promag,2019-01-16T16:14:02Z,heh ðŸ˜›avoid plural?,https://github.com/bitcoin/bitcoin/pull/15101#discussion_r248347641,248347641,src/qt/walletcontroller.h
promag,2019-01-16T16:14:46Z,"Fair enough, I'll bring more code here so I can also improve this.",https://github.com/bitcoin/bitcoin/pull/15101#discussion_r248347935,248347935,src/qt/walletcontroller.h
Sjors,2019-01-16T17:26:22Z,"Plural makes it clear that this controls multiple wallets, rather than one controller per wallet.",https://github.com/bitcoin/bitcoin/pull/15101#discussion_r248377327,248377327,src/qt/walletcontroller.h
promag,2019-01-16T17:31:57Z,"I prefer to interpret it as the ""gui controller of the wallet related things"". Let's see what others say and I'll happily rename.",https://github.com/bitcoin/bitcoin/pull/15101#discussion_r248379411,248379411,src/qt/walletcontroller.h
jnewbery,2019-01-17T16:18:44Z,I think either is fine.,https://github.com/bitcoin/bitcoin/pull/15101#discussion_r248738360,248738360,src/qt/walletcontroller.h
jonasschnelli,2019-01-17T19:38:54Z,Is it safe to transport the iterator from outside the lambda to this point? Assume `m_wallet_models` did had additions or deletions during time of iteration creation and inner-usage?,https://github.com/bitcoin/bitcoin/pull/15101#discussion_r248812698,248812698,src/qt/walletcontroller.cpp
promag,2019-01-17T20:09:06Z,"From https://stackoverflow.com/a/6442829 I think it is safe, map iterator aren't invalidated.",https://github.com/bitcoin/bitcoin/pull/15101#discussion_r248823031,248823031,src/qt/walletcontroller.cpp
promag,2019-01-17T22:31:27Z,I'm going to change this to simplify other PR (close wallet action) I'm about to submit.,https://github.com/bitcoin/bitcoin/pull/15101#discussion_r248866640,248866640,src/qt/walletcontroller.cpp
Sjors,2019-01-18T10:14:18Z,"Can you elaborate on why this is safe? I'm still wrapping my head around how QT deals with threads: http://doc.qt.io/qt-5/qobject.html#thread-affinity \n\nIs it similar to iOs where the UI can only be touched from the main thread, but notifications tend to arrive on different threads, leading to nasty crashes if you don't pay attention? How do you know which thread `NotifyUnload` is called on?",https://github.com/bitcoin/bitcoin/pull/15101#discussion_r248989819,248989819,src/qt/walletmodel.cpp
promag,2019-01-18T10:46:46Z,"I think https://woboq.com/blog/how-qt-signals-slots-work.html is a good read.\n\nEach `QObject` belongs to one thread which must have one event loop spinning. With the default `AutoConnection` Qt ensures that the slot is executed in the receiver thread, so it either calls the slot directly (if the emit happens in the same thread) or enqueues an event (with all signal arguments) in the receiver e",https://github.com/bitcoin/bitcoin/pull/15101#discussion_r248999779,248999779,src/qt/walletmodel.cpp
hebasto,2019-01-18T18:40:06Z,"Tech language prefers a singular form; e.g., ""window manager"", ""file manager"" etc.",https://github.com/bitcoin/bitcoin/pull/15101#discussion_r249145279,249145279,src/qt/walletcontroller.h
