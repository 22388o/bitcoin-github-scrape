[
  {
    "sha": "c9376ae34cb9ab9e1634fefb080ecdbe33c2656b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOTM3NmFlMzRjYjlhYjllMTYzNGZlZmIwODBlY2RiZTMzYzI2NTZi",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-02-28T20:24:31Z"
      },
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-03-06T08:38:15Z"
      },
      "message": "build: Optionally include dependency headers with -isystem\n\nWhen configured with --enable-isystem.\n\nWas necessary to split QT_INCLUDES into QT_INCLUDES and\nQT_MOC_INCLUDES because moc does not understand -isystem, e.g.:\n\n    Unknown options: isystem/usr/local/Cellar/qt/5.10.0_1/include/QtNetwork[...]\n\nThis patch treats just Boost and QT headers. The other external headers could be\nadded as well, should it be necessary.\n\nNote -isystem should not be applied to /usr/include, see BITCOIN_SYSTEM_INCLUDE\nfor a helper to convert -I to -isystem with /usr/include excepted.",
      "tree": {
        "sha": "44297b59d6ac85f86c4af3a05dc7f56cbc96ff29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44297b59d6ac85f86c4af3a05dc7f56cbc96ff29"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c9376ae34cb9ab9e1634fefb080ecdbe33c2656b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAl5iC/cACgkQVN8G9ktV\ny7/0DR/9F/7ZDRSk+LSgdYz7EZTXbn3SVJa1sX/KmYu+u1NL6Y3tCisaJ7fUYF4n\ng2LTG28Lu0jaWYbmheIUE5fc0J/vfrMrc3sO8LlwkJpD3g7gfViW6FMqxXTvtcKc\n1EBUZI6izcbkEgTE0d6Px56k6I3a7LFrd6iP2PuhbdT1nrg5aU7dfxQgWu/8CDSl\n2NUxJnBtbYg8T6QuKw02YqwCarByAkbfBebIR6BhqtBN9eEylucWFgHIyZ6QTxDH\nZ/OolwIWsaT6k1DZnGo3zcSeIiUCB1X/19o6X0lxNzgCIH/KJx21oQBZG+hKODfA\n8IKsLqJj2enpL64rOKqeI5HiHW3T8Oa5hn4gn+EVuyCsnmAk6UEphpgxxOLhxss1\nnjfOLKyBYq7UFRnX8YpUmLWjmICGIk5BYBL4JGwpTjgjS6xz0oKFAlc9NVxtL1TQ\nCl0unElXJsIDU8NRGjfg5rA1pyfdj86AF6zBM5ptsfJr1IrCdUZSffI2cFVwPNZ8\nXeFL38VClPjU05F2wYg9dNtQDUC9nADuS7vXbWOwVfCzRb9SEXs/mqI/dis839wH\nuTUBEy9rjYaoQfjXfroE4Q8vVIcKzEqunV1Ad6J1OfZUfVjUlqlyK9FUsBF3DOhm\nTIuAlsvI7T6JF2Jal60EH8eXmCR4g+G6FXsCAgYYO8UinKRoXc7HG4hqtAK6TOPu\nJVNERDkCHpFnI/CBfUUJ0gTDbT6jC+4fLwnmaJFDVNGaF0iDytAuYqvmoYRDAtEN\n0yu2TTRGMtxBqGbnoi85IWft+9DHeBSxvY31sZbbC8Li0bR/rECxIkwsxHi5UHni\niDrqVvVPocycGZt1Oqx39c6rbhkUhbnx6MVCVfXVenhZfjMZWRTB5FJsk26ZERiB\nWZ77BPfa7eLN8xLm38p1o8PdDtfVX9G/hzmCIfz7g4XIiTdLhNRpt3Mj4joThEpo\nPdCyXE+mAFAnJtDNCKObVkaxXjDLcf/iv6YkC3A3Cl1c3JTqBodePeKopr+EejJR\nRuw9IJUNNrpqEnOtGY2fBpPCdTwbCv5YpYbpWylDOXBzMVRXNXvn4CDgmdcrXYuK\nCxJ6/38BlV24EpPQB4pIWsqbUPapDlCcUDpbj5mRzS5H+3lvdyirqi7yhZDiCnuK\n69AR4I842C49GQJA2SxZ8aukcB9jsYwlbL7F1Azx+YNl7xCa9kNzuORiTQUOCasq\nKxP/M4L6D6DW5yn9Q/BX7hwqw7CMx7+dSUf1lerqrX8ob+bUscwqAsXqpDh6wcT6\nU2zjQpTg29RayLDS+TArVqRu04LeQalEoz0j8aZGT8nP4GXX+aLwWULLMOnRjHQG\nFbFjP++3gg9Xn65Ye6qWi253bfV8EQ==\n=Rpnv\n-----END PGP SIGNATURE-----",
        "payload": "tree 44297b59d6ac85f86c4af3a05dc7f56cbc96ff29\nparent 97aadf98d0b890e09eff45535fa13a663f27334d\nauthor Ben Woosley <ben.woosley@gmail.com> 1582921471 -0800\ncommitter Vasil Dimov <vd@FreeBSD.org> 1583483895 +0100\n\nbuild: Optionally include dependency headers with -isystem\n\nWhen configured with --enable-isystem.\n\nWas necessary to split QT_INCLUDES into QT_INCLUDES and\nQT_MOC_INCLUDES because moc does not understand -isystem, e.g.:\n\n    Unknown options: isystem/usr/local/Cellar/qt/5.10.0_1/include/QtNetwork[...]\n\nThis patch treats just Boost and QT headers. The other external headers could be\nadded as well, should it be necessary.\n\nNote -isystem should not be applied to /usr/include, see BITCOIN_SYSTEM_INCLUDE\nfor a helper to convert -I to -isystem with /usr/include excepted.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9376ae34cb9ab9e1634fefb080ecdbe33c2656b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c9376ae34cb9ab9e1634fefb080ecdbe33c2656b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9376ae34cb9ab9e1634fefb080ecdbe33c2656b/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "97aadf98d0b890e09eff45535fa13a663f27334d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97aadf98d0b890e09eff45535fa13a663f27334d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/97aadf98d0b890e09eff45535fa13a663f27334d"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 36,
      "deletions": 6
    },
    "files": [
      {
        "sha": "9a01d7b00dbf674ca9e813a0299f844901a76705",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c9376ae34cb9ab9e1634fefb080ecdbe33c2656b/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c9376ae34cb9ab9e1634fefb080ecdbe33c2656b/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=c9376ae34cb9ab9e1634fefb080ecdbe33c2656b",
        "patch": "@@ -421,17 +421,17 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n     QT_LIB_PREFIX=Qt5\n     qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n     BITCOIN_QT_CHECK([\n-      PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" have_qt=yes],[have_qt=no])\n+      PKG_CHECK_MODULES([QT5], [$qt5_modules], [have_qt=yes; BITCOIN_SYSTEM_INCLUDE([QT_INCLUDES], [$QT5_CFLAGS]) QT_MOC_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\"],[have_qt=no])\n \n       if test \"x$have_qt\" != xyes; then\n         have_qt=no\n         BITCOIN_QT_FAIL([Qt dependencies not found])\n       fi\n     ])\n     BITCOIN_QT_CHECK([\n-      PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n+      PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [have_qt_test=yes; BITCOIN_SYSTEM_INCLUDE([QT_TEST_INCLUDES], [$QT_TEST_CFLAGS])], [have_qt_test=no])\n       if test \"x$use_dbus\" != xno; then\n-        PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n+        PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [have_qt_dbus=yes; BITCOIN_SYSTEM_INCLUDE([QT_DBUS_INCLUDES], [$QT_DBUS_CFLAGS])], [have_qt_dbus=no])\n       fi\n     ])\n   ])\n@@ -451,7 +451,8 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   TEMP_LIBS=\"$LIBS\"\n   BITCOIN_QT_CHECK([\n     if test \"x$qt_include_path\" != x; then\n-      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n+      QT_MOC_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n+      BITCOIN_SYSTEM_INCLUDE([QT_INCLUDES], [$QT_MOC_INCLUDES])\n       CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n     fi\n   ])"
      },
      {
        "sha": "f626f26e93b18fc440817b557453bea601ee86ce",
        "filename": "build-aux/m4/bitcoin_system_include.m4",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c9376ae34cb9ab9e1634fefb080ecdbe33c2656b/build-aux/m4/bitcoin_system_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c9376ae34cb9ab9e1634fefb080ecdbe33c2656b/build-aux/m4/bitcoin_system_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_system_include.m4?ref=c9376ae34cb9ab9e1634fefb080ecdbe33c2656b",
        "patch": "@@ -0,0 +1,19 @@\n+dnl Copyright (c) 2018 The Bitcoin Core developers\n+dnl Distributed under the MIT software license, see the accompanying\n+dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+dnl BITCOIN_SYSTEM_INCLUDE([DESTINATION-VARIABLE-NAME], [INCLUDES-STRING])\n+dnl Populates the variable DESTINATION with the value from INCLUDES but\n+dnl with -I includes switched to -isystem, with the exception of -I/usr/include,\n+dnl which is left unmodified to avoid order issues with /usr/include. See:\n+dnl https://stackoverflow.com/questions/37218953/isystem-on-a-system-include-directory-causes-errors\n+AC_DEFUN([BITCOIN_SYSTEM_INCLUDE],[\n+  if test \"x$use_isystem\" = \"xyes\" && test \"x$2\" != \"x\"; then\n+    dnl Including /usr/include with -isystem is known to cause problems, e.g.\n+    dnl breaking include_next due to, the directive changing inclusion order.\n+    dnl https://bugreports.qt.io/browse/QTBUG-53367\n+    $1=$(echo $2 | sed -e 's| -I| -isystem|g' -e 's|^-I|-isystem|g' -e 's|-isystem/usr/include|-I/usr/include|g')\n+  else\n+    $1=$2\n+  fi\n+])"
      },
      {
        "sha": "8baa78d0e0d399f7cb88165d81f06f90732e4f4d",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c9376ae34cb9ab9e1634fefb080ecdbe33c2656b/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c9376ae34cb9ab9e1634fefb080ecdbe33c2656b/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=c9376ae34cb9ab9e1634fefb080ecdbe33c2656b",
        "patch": "@@ -180,6 +180,12 @@ AC_ARG_ENABLE([ccache],\n   [use_ccache=$enableval],\n   [use_ccache=auto])\n \n+AC_ARG_ENABLE([isystem],\n+  [AS_HELP_STRING([--enable-isystem],\n+  [enable isystem includes for dependencies (default is no)])],\n+  [use_isystem=$enableval],\n+  [use_isystem=no])\n+\n AC_ARG_ENABLE([lcov],\n   [AS_HELP_STRING([--enable-lcov],\n   [enable lcov testing (default is no)])],\n@@ -1246,6 +1252,9 @@ CPPFLAGS=\"$TEMP_CPPFLAGS\"\n \n fi\n \n+dnl Treat boost includes with isystem if applicable\n+BITCOIN_SYSTEM_INCLUDE([BOOST_CPPFLAGS], [$BOOST_CPPFLAGS])\n+\n if test x$use_pkgconfig = xyes; then\n   : dnl\n   m4_ifdef(\n@@ -1667,6 +1676,7 @@ fi\n echo \"  with bench    = $use_bench\"\n echo \"  with upnp     = $use_upnp\"\n echo \"  use asm       = $use_asm\"\n+echo \"  isystem       = $use_isystem\"\n echo \"  sanitizers    = $use_sanitizers\"\n echo \"  debug enabled = $enable_debug\"\n echo \"  gprof enabled = $enable_gprof\""
      },
      {
        "sha": "4dbc28e36a4a7bbbc6d49efb4e56469f304546d0",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c9376ae34cb9ab9e1634fefb080ecdbe33c2656b/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c9376ae34cb9ab9e1634fefb080ecdbe33c2656b/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=c9376ae34cb9ab9e1634fefb080ecdbe33c2656b",
        "patch": "@@ -358,11 +358,11 @@ ui_%.h: %.ui\n \t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo \"Error creating $@\"; false)\n \n %.moc: %.cpp\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \\\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_MOC_INCLUDES) $(MOC_DEFS) $< | \\\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n \n moc_%.cpp: %.h\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \\\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_MOC_INCLUDES) $(MOC_DEFS) $< | \\\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n \n %.qm: %.ts"
      }
    ]
  },
  {
    "sha": "9553271a7facb12350254177a206ab4e492cdfaf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTUzMjcxYTdmYWNiMTIzNTAyNTQxNzdhMjA2YWI0ZTQ5MmNkZmFm",
    "commit": {
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-02-14T19:46:09Z"
      },
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-03-06T08:38:16Z"
      },
      "message": "build: change --enable-werror to enable -Werror\n\nBefore this patch `./configure --enable-werror` would selectively\nturn only some warnings into errors, not all, by using\n`-Werror=foo -Werror=bar` instead of a plain `-Werror` which turns all\nwarnings into errors.\n\nTo accommodate the new stricter build config, use --enable-isystem to\nsuppress warnings from external headers (e.g. boost, qt) on systems\nthat have them installed outside of /usr/include. On Linux the external\nheaders are typically installed in /usr/include and so warnings from\nthem are suppressed by default.",
      "tree": {
        "sha": "75d035f6d73db16307f9a7be4d8636733b8c7a8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75d035f6d73db16307f9a7be4d8636733b8c7a8c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9553271a7facb12350254177a206ab4e492cdfaf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAl5iC/gACgkQVN8G9ktV\ny7+EeB//asHQ5tLnwtTG2XPN5+J/QOXWhIzSUUq7rdWG5iYws3EMigL+Aj+aOQBb\nMGcFFv9eaddg18RLNJ3TPDldhCBJrnAvfr6/B+cHP8aEeVjOsTjdvdh3B4jFVPiv\nySjiosNvKVVOuc0RybkyAQcbcHyEcv7pkge9To7KFefQw+FPFaC2m2Ja8W7wJYOt\not96QGik1qDvmT6lPMJGdJlO4Bdejoaq4DBMEo9o5aB9Xl4nRCEf6xezDzLpKVJn\n75rBgIEqn8qTGXOtOoLz5HQYXxycxlO1m3fvEKtDARqyok6Qb0WPmbZ+Qk9x/Pga\n3DaARIdMgqqKHkjwmInVp18b8G5cgx78Y0KdLgbmQQrI8TqHNdv4YIyxBwQEKyp+\nStsm63k+KAzU6q/+y240jG+6Dlj1USQx0S7jq2ucLZw4edgdzUFTKWaEmAzzF4Gl\nDdhqVUE4GFxebGhUx7rMTEHxqrSMMEv66YEXn3ZuovFz72ZKhLDiobHHc9WELbsc\nx7jMDIsntcn8j14MUjOCH/E9pqeMMG3RQ4QPIhlAMvJP7L5ejU6clFywGWldR5Ma\npRjswS5fJTJqo2GIkOd3wa8uS1bXqsp1Gwmeq5HvHQdwfIpf8DVIFRJ8wvQ+Qm4t\nJChtyPuR4E+QPH9kCc+EUFy/ulHz3hatu/qGmpJ+JfN2/EiyT75qvrLc10oQn7le\nE/igbvzcuqDV2FJ4RLpG8+jdNaHuE3N+qWzDA4vex5CT6SKU21gcnvZafXblfStk\n65wVRL/Ot/+ZSUt1ZNSbh4pDbsv137kOH1MqBOPDeEYGdQApES0eKkLg1G00fGEN\n6vc40H4JmeG9eil4FITyHp57MUBoC/4yDqPMN3KZRimBcBoM67NinWSlGMFnfJw4\nVae5AjrMp0bWsfLjQTzTdsnWi8e0HFcQagvV7oXQ+uk34i1jKUVLLh7t581cfiDU\nya0bb2Fhcla65wxzFkejpXO0MFtb34JXNczVV8EyGZoUPj7sJvkKGFZ/rV4OXEfD\npPUUEXexZtwhee0W/dCELpH7lKyJfketkAFpM4TLAJUHY7lqeEYID69fIuETVAes\nlrtyZFxtbdRfIQtVK3cvhBxv2puV1fpYQiQjIlNanNFMim2ZVnW78DaDpq6GqQAW\nD8pyEBxnpNY6vdP0Fv5Jofq5qCgO5OkOHubzmDaY/TbFMN0oPUOnLrZLJfJsBN43\nluegrS0gfTutDNvld4ffx84E8wEMBgE6WiOdoKBdGnycucCxB9HLVvKfsgZPfhcl\nAN+e2w/WjGDx39IS1tKWurHEI5S3H1maHE25rJxHvefBqhjb7hiAR4MvZ4uBXJiW\ni8WrJPozX26KrOcLJz/JUrcMArB3cQ==\n=T6NA\n-----END PGP SIGNATURE-----",
        "payload": "tree 75d035f6d73db16307f9a7be4d8636733b8c7a8c\nparent c9376ae34cb9ab9e1634fefb080ecdbe33c2656b\nauthor Vasil Dimov <vd@FreeBSD.org> 1581709569 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1583483896 +0100\n\nbuild: change --enable-werror to enable -Werror\n\nBefore this patch `./configure --enable-werror` would selectively\nturn only some warnings into errors, not all, by using\n`-Werror=foo -Werror=bar` instead of a plain `-Werror` which turns all\nwarnings into errors.\n\nTo accommodate the new stricter build config, use --enable-isystem to\nsuppress warnings from external headers (e.g. boost, qt) on systems\nthat have them installed outside of /usr/include. On Linux the external\nheaders are typically installed in /usr/include and so warnings from\nthem are suppressed by default.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9553271a7facb12350254177a206ab4e492cdfaf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9553271a7facb12350254177a206ab4e492cdfaf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9553271a7facb12350254177a206ab4e492cdfaf/comments",
    "author": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c9376ae34cb9ab9e1634fefb080ecdbe33c2656b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9376ae34cb9ab9e1634fefb080ecdbe33c2656b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c9376ae34cb9ab9e1634fefb080ecdbe33c2656b"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 4,
      "deletions": 9
    },
    "files": [
      {
        "sha": "7e66ccd30eb3c569f5ab729a7357a7ecefac8542",
        "filename": "ci/test/00_setup_env_mac.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9553271a7facb12350254177a206ab4e492cdfaf/ci/test/00_setup_env_mac.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9553271a7facb12350254177a206ab4e492cdfaf/ci/test/00_setup_env_mac.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac.sh?ref=9553271a7facb12350254177a206ab4e492cdfaf",
        "patch": "@@ -13,4 +13,4 @@ export OSX_SDK=10.14\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false\n export GOAL=\"deploy\"\n-export BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\"\n+export BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror --enable-isystem\""
      },
      {
        "sha": "cdbaaf7c904fef17438013eeab398dc25e35480b",
        "filename": "ci/test/00_setup_env_mac_host.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9553271a7facb12350254177a206ab4e492cdfaf/ci/test/00_setup_env_mac_host.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9553271a7facb12350254177a206ab4e492cdfaf/ci/test/00_setup_env_mac_host.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac_host.sh?ref=9553271a7facb12350254177a206ab4e492cdfaf",
        "patch": "@@ -13,7 +13,7 @@ export RUN_CI_ON_HOST=true\n export RUN_UNIT_TESTS=true\n export RUN_FUNCTIONAL_TESTS=false\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\"\n+export BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror --enable-isystem\"\n # Run without depends\n export NO_DEPENDS=1\n export OSX_SDK=\"\""
      },
      {
        "sha": "8eb1bca6a4d3501f042d6fa401bec012323532d6",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9553271a7facb12350254177a206ab4e492cdfaf/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9553271a7facb12350254177a206ab4e492cdfaf/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=9553271a7facb12350254177a206ab4e492cdfaf",
        "patch": "@@ -278,7 +278,7 @@ AC_ARG_ENABLE([determinism],\n dnl Turn warnings into errors\n AC_ARG_ENABLE([werror],\n     [AS_HELP_STRING([--enable-werror],\n-                    [Treat certain compiler warnings as errors (default is no)])],\n+                    [Treat compiler warnings as errors (default is no)])],\n     [enable_werror=$enableval],\n     [enable_werror=no])\n \n@@ -338,12 +338,7 @@ if test \"x$enable_werror\" = \"xyes\"; then\n   if test \"x$CXXFLAG_WERROR\" = \"x\"; then\n     AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\n   fi\n-  AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=switch],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=switch\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=unused-variable],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unused-variable\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=date-time],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=date-time\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=return-type],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=return-type\"],,[[$CXXFLAG_WERROR]])\n+  ERROR_CXXFLAGS=$CXXFLAG_WERROR\n fi\n \n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then"
      }
    ]
  }
]