jnewbery,2019-04-10T14:02:23Z,Concept ACK. Thanks @ariard!,https://github.com/bitcoin/bitcoin/pull/15784#issuecomment-481704031,481704031,
DrahtBot,2019-04-11T18:01:22Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15810](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15810.html) ([WIP] Remove nAbsurdFee fee from AcceptToMe",https://github.com/bitcoin/bitcoin/pull/15784#issuecomment-482228841,482228841,
meshcollider,2019-04-14T04:14:49Z,"Thanks, utACK https://github.com/bitcoin/bitcoin/pull/15784/commits/0f4b200443092422e6a924a76c848f92df1db534",https://github.com/bitcoin/bitcoin/pull/15784#issuecomment-482918418,482918418,
ariard,2019-04-16T13:34:22Z,"Got this on travis failure : ""Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved.""",https://github.com/bitcoin/bitcoin/pull/15784#issuecomment-483661407,483661407,
jnewbery,2019-04-16T15:39:33Z,utACK c98aeb00c9eaeb12623dc8f6a644ee5f0044f3fa one you've removed that unnecessary `interfaces::Chain` forward declaration.,https://github.com/bitcoin/bitcoin/pull/15784#issuecomment-483715797,483715797,
ariard,2019-04-17T12:23:13Z,99e88a3 removed unnecessary interfaces::Chain forward declaration,https://github.com/bitcoin/bitcoin/pull/15784#issuecomment-484060293,484060293,
jnewbery,2019-04-17T12:52:05Z,utACK 99e88a3726c2325e3a3a35c0a750bde25bd58ad0,https://github.com/bitcoin/bitcoin/pull/15784#issuecomment-484070803,484070803,
promag,2019-04-17T13:11:43Z,utACK 99e88a3.,https://github.com/bitcoin/bitcoin/pull/15784#issuecomment-484078153,484078153,
jnewbery,2019-04-11T18:25:53Z,"You should just be able to forward declare the `Coin` object and leave this include in the .cpp file if you change the coins argument into a reference.\n\n(thanks to @ryanofsky for answering my question about this)",https://github.com/bitcoin/bitcoin/pull/15784#discussion_r274572777,274572777,src/rpc/rawtransaction_util.h
ariard,2019-04-12T12:41:21Z,Just forward declaration seems to do the job without gcc complaints,https://github.com/bitcoin/bitcoin/pull/15784#discussion_r274888398,274888398,src/rpc/rawtransaction_util.h
jnewbery,2019-04-12T21:05:24Z,"Thanks. You should pass by reference anyway, otherwise this will make a copy of the entire map.",https://github.com/bitcoin/bitcoin/pull/15784#discussion_r275064358,275064358,src/rpc/rawtransaction_util.h
promag,2019-04-12T22:12:33Z,"Like @jnewbery said, could be `const std::map<COutPoint, Coin>& coins)`.",https://github.com/bitcoin/bitcoin/pull/15784#discussion_r275078986,275078986,src/rpc/rawtransaction_util.cpp
ariard,2019-04-13T13:18:13Z,Updated to pass-by-reference but I think can't be const due to ```coins[out] = std::move(newcoin)``` L198 ?,https://github.com/bitcoin/bitcoin/pull/15784#discussion_r275117710,275117710,src/rpc/rawtransaction_util.cpp
jnewbery,2019-04-13T16:50:59Z,I think you're right that it can't be `const`,https://github.com/bitcoin/bitcoin/pull/15784#discussion_r275124682,275124682,src/rpc/rawtransaction_util.cpp
promag,2019-04-14T10:22:50Z,Then I think it should not pass by reference or you could comment that `coins` is modified after the call.,https://github.com/bitcoin/bitcoin/pull/15784#discussion_r275149861,275149861,src/rpc/rawtransaction_util.cpp
ariard,2019-04-16T12:40:14Z,@promag followed your suggestion and also took the opportunity to add comments for all SignTransaction params,https://github.com/bitcoin/bitcoin/pull/15784#discussion_r275775183,275775183,src/rpc/rawtransaction_util.cpp
promag,2019-04-16T13:38:12Z,"nit, could sorted.",https://github.com/bitcoin/bitcoin/pull/15784#discussion_r275800995,275800995,src/rpc/rawtransaction.cpp
promag,2019-04-16T13:38:41Z,`@returns JSON object with details of the signed transaction` or something along that.,https://github.com/bitcoin/bitcoin/pull/15784#discussion_r275801235,275801235,src/rpc/rawtransaction_util.h
promag,2019-04-16T13:42:48Z,Remove.,https://github.com/bitcoin/bitcoin/pull/15784#discussion_r275803343,275803343,src/rpc/rawtransaction_util.h
ariard,2019-04-16T15:14:58Z,Seems I need to forward declare both Coin and COutPoint objects there ?,https://github.com/bitcoin/bitcoin/pull/15784#discussion_r275851561,275851561,src/rpc/rawtransaction_util.h
promag,2019-04-16T15:23:18Z,I mean you can remove the interfaces namespace.,https://github.com/bitcoin/bitcoin/pull/15784#discussion_r275855746,275855746,src/rpc/rawtransaction_util.h
jnewbery,2019-04-16T15:36:17Z,promag is saying you can remove the forward declaration of the `interfaces::Chain` class.,https://github.com/bitcoin/bitcoin/pull/15784#discussion_r275862421,275862421,src/rpc/rawtransaction_util.h
ryanofsky,2019-04-17T16:55:29Z,Could sort these between CBasicKeyStore and UniValue above (I normally just pipe these lines to `!sort` in vim),https://github.com/bitcoin/bitcoin/pull/15784#discussion_r276339655,276339655,src/rpc/rawtransaction_util.h
