[
  {
    "sha": "ca8549d2bd32f17f8b69d1edbe3f2976fba504b4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYTg1NDlkMmJkMzJmMTdmOGI2OWQxZWRiZTNmMjk3NmZiYTUwNGI0",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-11-22T02:50:24Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-11-22T02:54:32Z"
      },
      "message": "Always drop the least preferred HB peer when adding a new one.\n\nWhen a BIP152 HB-mode peer is in the least preferred position and\n disconnects, they will not be by ForNode on the next loop. They\n will continue to sit in that position and prevent deactivating\n HB mode for peers that are still connected.\n\nThere is no reason for them to stay in the list if already gone,\n so drop the first element unconditionally if there are too many.\n\nFixes issue #9163.",
      "tree": {
        "sha": "91b35fd941534add9632bb65b5f96a57eca037c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/91b35fd941534add9632bb65b5f96a57eca037c5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca8549d2bd32f17f8b69d1edbe3f2976fba504b4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca8549d2bd32f17f8b69d1edbe3f2976fba504b4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca8549d2bd32f17f8b69d1edbe3f2976fba504b4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca8549d2bd32f17f8b69d1edbe3f2976fba504b4/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0c577f2638b7f701e4b4b96c4c8df39dc097cf2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c577f2638b7f701e4b4b96c4c8df39dc097cf2f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0c577f2638b7f701e4b4b96c4c8df39dc097cf2f"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "dd57153eaeed05fe5dcc447353df84ac0d2b0c75",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca8549d2bd32f17f8b69d1edbe3f2976fba504b4/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca8549d2bd32f17f8b69d1edbe3f2976fba504b4/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ca8549d2bd32f17f8b69d1edbe3f2976fba504b4",
        "patch": "@@ -529,12 +529,11 @@ void MaybeSetPeerAsAnnouncingHeaderAndIDs(const CNodeState* nodestate, CNode* pf\n         if (lNodesAnnouncingHeaderAndIDs.size() >= 3) {\n             // As per BIP152, we only get 3 of our peers to announce\n             // blocks using compact encodings.\n-            bool found = connman.ForNode(lNodesAnnouncingHeaderAndIDs.front(), [&connman, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion](CNode* pnodeStop){\n+            connman.ForNode(lNodesAnnouncingHeaderAndIDs.front(), [&connman, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion](CNode* pnodeStop){\n                 connman.PushMessage(pnodeStop, NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion);\n                 return true;\n             });\n-            if(found)\n-                lNodesAnnouncingHeaderAndIDs.pop_front();\n+            lNodesAnnouncingHeaderAndIDs.pop_front();\n         }\n         fAnnounceUsingCMPCTBLOCK = true;\n         connman.PushMessage(pfrom, NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion);"
      }
    ]
  }
]