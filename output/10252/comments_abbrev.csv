kallewoof,2017-05-01T07:43:50Z,utACK 9852bf5f6660cb02fae89918cbf5b11bf6c4138e,https://github.com/bitcoin/bitcoin/pull/10252#issuecomment-298300316,298300316,
jnewbery,2017-05-01T21:23:13Z,"This was discussed in #9602 . I was on the fence about whether changing the prioritisetransaction RPC was an acceptable change, but group consensus seemed to be that it should be done. I'm still on the fence, but now that #9602 has been merged I don't think it makes sense to re-open this issue.\n\nAs for rationale, I don't think making RPC 'compatible' other implementations should be a considera",https://github.com/bitcoin/bitcoin/pull/10252#issuecomment-298436566,298436566,
MarcoFalke,2017-05-01T21:54:51Z,utACK 9852bf5. Can you try to use named args in the test such that you\ndon't need to provide the dummy argument?\n,https://github.com/bitcoin/bitcoin/pull/10252#issuecomment-298443207,298443207,
TheBlueMatt,2017-05-02T15:13:19Z,"If we're gonna re-add the dummy value, it should be called ""dummy"" and explained that its a useless API-compat value (and should make require it to be 0 to ensure people aren't confused).",https://github.com/bitcoin/bitcoin/pull/10252#issuecomment-298665437,298665437,
luke-jr,2017-05-02T17:37:29Z,"@TheBlueMatt Besides the name (which would break named-arg compat), I think this PR already satisfies that description: the description explains it isn't supported, and the code enforces it to be either null or 0.",https://github.com/bitcoin/bitcoin/pull/10252#issuecomment-298706617,298706617,
sdaftuar,2017-05-10T15:59:43Z,"I don't object if others think it's better to avoid breaking the RPC API immediately by keeping this dummy argument around, but I'd say we should update the help text to also say that support for this option will be removed in the future, so that users can expect a future API change.\n\nBut I tend to think that we might as well do the full RPC API break now; removal of priority is inherently bre",https://github.com/bitcoin/bitcoin/pull/10252#issuecomment-300529548,300529548,
MarcoFalke,2017-05-10T16:21:46Z,"I think it is preferable to break the API in a ""smooth"" way. I.e. allow\nthat Bitcoin Core version 0.xx and 0.(xx+1) can be switched back and forth\nwith minimal changes to the wrapper. This would allow faster upgrades to\nnew releases and comes with a grace period with the duration of a full\nrelease cycle to address any breaking API changes.\n\nOn Wed, May 10, 2017 at 6:00 PM, Suhas Daftuar <not",https://github.com/bitcoin/bitcoin/pull/10252#issuecomment-300536034,300536034,
luke-jr,2017-05-10T17:38:51Z,"@sdaftuar Priority still exists, even if Core doesn't support it. The option isn't obsolete, just not supported by Core. There's no reason to remove it in the future, as that would not only break backward compatibility, but also break cross-node compatibility, and for no gain.",https://github.com/bitcoin/bitcoin/pull/10252#issuecomment-300558384,300558384,
luke-jr,2017-05-22T20:55:42Z,Rebased,https://github.com/bitcoin/bitcoin/pull/10252#issuecomment-303217602,303217602,
sipa,2017-05-23T16:40:54Z,"Concept ACK, but tests need fixing.",https://github.com/bitcoin/bitcoin/pull/10252#issuecomment-303461231,303461231,
luke-jr,2017-05-24T05:07:04Z,Fixed,https://github.com/bitcoin/bitcoin/pull/10252#issuecomment-303618896,303618896,
MarcoFalke,2017-06-02T10:26:34Z,re-utACK 870824e919474c5b39da73fe73199f8453fd540f,https://github.com/bitcoin/bitcoin/pull/10252#issuecomment-305749990,305749990,
ryanofsky,2017-05-23T13:45:54Z,There's another prioritisetransaction call below that needs to be updated (it's causing travis tests to fail).,https://github.com/bitcoin/bitcoin/pull/10252#discussion_r117995058,117995058,test/functional/prioritise_transaction.py
laanwj,2017-06-06T13:45:17Z,Thanks for converting these to name-based arguments.,https://github.com/bitcoin/bitcoin/pull/10252#discussion_r120363975,120363975,test/functional/replace-by-fee.py
