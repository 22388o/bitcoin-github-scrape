[
  {
    "sha": "db5e9d3c88349f7e3b56f50f2e2862997e308fd9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYjVlOWQzYzg4MzQ5ZjdlM2I1NmY1MGYyZTI4NjI5OTdlMzA4ZmQ5",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-27T21:19:18Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-29T18:57:41Z"
      },
      "message": "Add missing locks (cs_args)",
      "tree": {
        "sha": "be0de6f6f5754aa86fa4298b3d811cd5488d2e6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/be0de6f6f5754aa86fa4298b3d811cd5488d2e6b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db5e9d3c88349f7e3b56f50f2e2862997e308fd9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db5e9d3c88349f7e3b56f50f2e2862997e308fd9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/db5e9d3c88349f7e3b56f50f2e2862997e308fd9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db5e9d3c88349f7e3b56f50f2e2862997e308fd9/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4e9a6f87b7d25d56fca4166bd929003cf15c9b58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e9a6f87b7d25d56fca4166bd929003cf15c9b58",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4e9a6f87b7d25d56fca4166bd929003cf15c9b58"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 15,
      "deletions": 10
    },
    "files": [
      {
        "sha": "ef5ea32ed127d0b38d46ec64ea9f1347f0c56d43",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 9,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db5e9d3c88349f7e3b56f50f2e2862997e308fd9/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db5e9d3c88349f7e3b56f50f2e2862997e308fd9/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=db5e9d3c88349f7e3b56f50f2e2862997e308fd9",
        "patch": "@@ -372,6 +372,8 @@ ArgsManager::ArgsManager() :\n \n void ArgsManager::WarnForSectionOnlyArgs()\n {\n+    LOCK(cs_args);\n+\n     // if there's no section selected, don't worry\n     if (m_network.empty()) return;\n \n@@ -400,6 +402,7 @@ void ArgsManager::WarnForSectionOnlyArgs()\n \n void ArgsManager::SelectConfigNetwork(const std::string& network)\n {\n+    LOCK(cs_args);\n     m_network = network;\n }\n \n@@ -468,6 +471,7 @@ bool ArgsManager::IsArgKnown(const std::string& key) const\n         arg_no_net = std::string(\"-\") + key.substr(option_index + 1, std::string::npos);\n     }\n \n+    LOCK(cs_args);\n     for (const auto& arg_map : m_available_args) {\n         if (arg_map.second.count(arg_no_net)) return true;\n     }\n@@ -571,6 +575,7 @@ void ArgsManager::AddArg(const std::string& name, const std::string& help, const\n         eq_index = name.size();\n     }\n \n+    LOCK(cs_args);\n     std::map<std::string, Arg>& arg_map = m_available_args[cat];\n     auto ret = arg_map.emplace(name.substr(0, eq_index), Arg(name.substr(eq_index, name.size() - eq_index), help, debug_only));\n     assert(ret.second); // Make sure an insertion actually happened\n@@ -588,6 +593,7 @@ std::string ArgsManager::GetHelpMessage() const\n     const bool show_debug = gArgs.GetBoolArg(\"-help-debug\", false);\n \n     std::string usage = \"\";\n+    LOCK(cs_args);\n     for (const auto& arg_map : m_available_args) {\n         switch(arg_map.first) {\n             case OptionsCategory::OPTIONS:\n@@ -865,10 +871,8 @@ bool ArgsManager::ReadConfigStream(std::istream& stream, std::string& error, boo\n \n bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n {\n-    {\n-        LOCK(cs_args);\n-        m_config_args.clear();\n-    }\n+    LOCK(cs_args);\n+    m_config_args.clear();\n \n     const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n@@ -892,11 +896,8 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n \n             // Remove -includeconf from configuration, so we can warn about recursion\n             // later\n-            {\n-                LOCK(cs_args);\n-                m_config_args.erase(\"-includeconf\");\n-                m_config_args.erase(std::string(\"-\") + chain_id + \".includeconf\");\n-            }\n+            m_config_args.erase(\"-includeconf\");\n+            m_config_args.erase(std::string(\"-\") + chain_id + \".includeconf\");\n \n             for (const std::string& to_include : includeconf) {\n                 fs::ifstream include_config(GetConfigFile(to_include));\n@@ -940,6 +941,7 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n \n std::string ArgsManager::GetChainName() const\n {\n+    LOCK(cs_args);\n     bool fRegTest = ArgsManagerHelper::GetNetBoolArg(*this, \"-regtest\");\n     bool fTestNet = ArgsManagerHelper::GetNetBoolArg(*this, \"-testnet\");\n "
      },
      {
        "sha": "e27e73089ed38f8cc2bdd4e2c838562bf062586f",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db5e9d3c88349f7e3b56f50f2e2862997e308fd9/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db5e9d3c88349f7e3b56f50f2e2862997e308fd9/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=db5e9d3c88349f7e3b56f50f2e2862997e308fd9",
        "patch": "@@ -262,7 +262,10 @@ class ArgsManager\n     /**\n      * Clear available arguments\n      */\n-    void ClearArgs() { m_available_args.clear(); }\n+    void ClearArgs() {\n+        LOCK(cs_args);\n+        m_available_args.clear();\n+    }\n \n     /**\n      * Get the help string"
      }
    ]
  },
  {
    "sha": "d58dc9f94365ba3f993594bab293915d79dbe117",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNThkYzlmOTQzNjViYTNmOTkzNTk0YmFiMjkzOTE1ZDc5ZGJlMTE3",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-29T20:33:33Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-29T20:33:33Z"
      },
      "message": "Add lock annotations (cs_args)",
      "tree": {
        "sha": "2b2aa8c2085fc7f7b6a1fe89a6cf89e4df4e837d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b2aa8c2085fc7f7b6a1fe89a6cf89e4df4e837d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d58dc9f94365ba3f993594bab293915d79dbe117",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d58dc9f94365ba3f993594bab293915d79dbe117",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d58dc9f94365ba3f993594bab293915d79dbe117",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d58dc9f94365ba3f993594bab293915d79dbe117/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "db5e9d3c88349f7e3b56f50f2e2862997e308fd9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db5e9d3c88349f7e3b56f50f2e2862997e308fd9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/db5e9d3c88349f7e3b56f50f2e2862997e308fd9"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "e58ff042e8adadc612586f32105790765e6ff0cb",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d58dc9f94365ba3f993594bab293915d79dbe117/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d58dc9f94365ba3f993594bab293915d79dbe117/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=d58dc9f94365ba3f993594bab293915d79dbe117",
        "patch": "@@ -216,7 +216,7 @@ class ArgsManagerHelper {\n \n     /** Determine whether to use config settings in the default section,\n      *  See also comments around ArgsManager::ArgsManager() below. */\n-    static inline bool UseDefaultSection(const ArgsManager& am, const std::string& arg)\n+    static inline bool UseDefaultSection(const ArgsManager& am, const std::string& arg) EXCLUSIVE_LOCKS_REQUIRED(am.cs_args)\n     {\n         return (am.m_network == CBaseChainParams::MAIN || am.m_network_only_args.count(arg) == 0);\n     }\n@@ -295,7 +295,7 @@ class ArgsManagerHelper {\n     /* Special test for -testnet and -regtest args, because we\n      * don't want to be confused by craziness like \"[regtest] testnet=1\"\n      */\n-    static inline bool GetNetBoolArg(const ArgsManager &am, const std::string& net_arg)\n+    static inline bool GetNetBoolArg(const ArgsManager &am, const std::string& net_arg) EXCLUSIVE_LOCKS_REQUIRED(am.cs_args)\n     {\n         std::pair<bool,std::string> found_result(false,std::string());\n         found_result = GetArgHelper(am.m_override_args, net_arg, true);"
      },
      {
        "sha": "7bf9fdbe12f52f621d329565945bbad0c6825486",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d58dc9f94365ba3f993594bab293915d79dbe117/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d58dc9f94365ba3f993594bab293915d79dbe117/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=d58dc9f94365ba3f993594bab293915d79dbe117",
        "patch": "@@ -142,11 +142,11 @@ class ArgsManager\n     };\n \n     mutable CCriticalSection cs_args;\n-    std::map<std::string, std::vector<std::string>> m_override_args;\n-    std::map<std::string, std::vector<std::string>> m_config_args;\n-    std::string m_network;\n-    std::set<std::string> m_network_only_args;\n-    std::map<OptionsCategory, std::map<std::string, Arg>> m_available_args;\n+    std::map<std::string, std::vector<std::string>> m_override_args GUARDED_BY(cs_args);\n+    std::map<std::string, std::vector<std::string>> m_config_args GUARDED_BY(cs_args);\n+    std::string m_network GUARDED_BY(cs_args);\n+    std::set<std::string> m_network_only_args GUARDED_BY(cs_args);\n+    std::map<OptionsCategory, std::map<std::string, Arg>> m_available_args GUARDED_BY(cs_args);\n \n     bool ReadConfigStream(std::istream& stream, std::string& error, bool ignore_invalid_keys = false);\n "
      }
    ]
  },
  {
    "sha": "1e29379d69a6db0820ae984733d1be98340e5ed0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTI5Mzc5ZDY5YTZkYjA4MjBhZTk4NDczM2QxYmU5ODM0MGU1ZWQw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-30T08:02:49Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-30T08:02:49Z"
      },
      "message": "Fix potential deadlock",
      "tree": {
        "sha": "9fc5d4028546458e35d172e2fec3372bb4b52f54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9fc5d4028546458e35d172e2fec3372bb4b52f54"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e29379d69a6db0820ae984733d1be98340e5ed0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e29379d69a6db0820ae984733d1be98340e5ed0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e29379d69a6db0820ae984733d1be98340e5ed0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e29379d69a6db0820ae984733d1be98340e5ed0/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d58dc9f94365ba3f993594bab293915d79dbe117",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d58dc9f94365ba3f993594bab293915d79dbe117",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d58dc9f94365ba3f993594bab293915d79dbe117"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 15,
      "deletions": 5
    },
    "files": [
      {
        "sha": "3bb52e9b3ddb76de46a6b4b3a78a0d5de360269c",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 5,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e29379d69a6db0820ae984733d1be98340e5ed0/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e29379d69a6db0820ae984733d1be98340e5ed0/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=1e29379d69a6db0820ae984733d1be98340e5ed0",
        "patch": "@@ -871,8 +871,10 @@ bool ArgsManager::ReadConfigStream(std::istream& stream, std::string& error, boo\n \n bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n {\n-    LOCK(cs_args);\n-    m_config_args.clear();\n+    {\n+        LOCK(cs_args);\n+        m_config_args.clear();\n+    }\n \n     const std::string confPath = GetArg(\"-conf\", BITCOIN_CONF_FILENAME);\n     fs::ifstream stream(GetConfigFile(confPath));\n@@ -884,7 +886,12 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n         }\n         // if there is an -includeconf in the override args, but it is empty, that means the user\n         // passed '-noincludeconf' on the command line, in which case we should not include anything\n-        if (m_override_args.count(\"-includeconf\") == 0) {\n+        bool emptyIncludeConf;\n+        {\n+            LOCK(cs_args);\n+            emptyIncludeConf = m_override_args.count(\"-includeconf\") == 0;\n+        }\n+        if (emptyIncludeConf) {\n             std::string chain_id = GetChainName();\n             std::vector<std::string> includeconf(GetArgs(\"-includeconf\"));\n             {\n@@ -896,8 +903,11 @@ bool ArgsManager::ReadConfigFiles(std::string& error, bool ignore_invalid_keys)\n \n             // Remove -includeconf from configuration, so we can warn about recursion\n             // later\n-            m_config_args.erase(\"-includeconf\");\n-            m_config_args.erase(std::string(\"-\") + chain_id + \".includeconf\");\n+            {\n+                LOCK(cs_args);\n+                m_config_args.erase(\"-includeconf\");\n+                m_config_args.erase(std::string(\"-\") + chain_id + \".includeconf\");\n+            }\n \n             for (const std::string& to_include : includeconf) {\n                 fs::ifstream include_config(GetConfigFile(to_include));"
      }
    ]
  }
]