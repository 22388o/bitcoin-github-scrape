[
  {
    "sha": "1936125671fbdb3411fcdf0d09fbd7ced32272e6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOTM2MTI1NjcxZmJkYjM0MTFmY2RmMGQwOWZiZDdjZWQzMjI3MmU2",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-04-13T13:02:59Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-04-13T13:02:59Z"
      },
      "message": "wallet: Make WalletInitInterface members const",
      "tree": {
        "sha": "b401fc0f2c1130ad508581ff4127f090ed14466f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b401fc0f2c1130ad508581ff4127f090ed14466f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1936125671fbdb3411fcdf0d09fbd7ced32272e6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1936125671fbdb3411fcdf0d09fbd7ced32272e6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1936125671fbdb3411fcdf0d09fbd7ced32272e6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1936125671fbdb3411fcdf0d09fbd7ced32272e6/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "39439e5ab4195bb1abebd2c8b1ac702bc33c2e60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39439e5ab4195bb1abebd2c8b1ac702bc33c2e60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/39439e5ab4195bb1abebd2c8b1ac702bc33c2e60"
      }
    ],
    "stats": {
      "total": 72,
      "additions": 36,
      "deletions": 36
    },
    "files": [
      {
        "sha": "0be5f7c4f78f2ce61aa26eb56f0640bb918f99b1",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1936125671fbdb3411fcdf0d09fbd7ced32272e6/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1936125671fbdb3411fcdf0d09fbd7ced32272e6/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1936125671fbdb3411fcdf0d09fbd7ced32272e6",
        "patch": "@@ -76,15 +76,15 @@ std::unique_ptr<PeerLogicValidation> peerLogic;\n class DummyWalletInit : public WalletInitInterface {\n public:\n \n-    std::string GetHelpString(bool showDebug) override {return std::string{};}\n-    bool ParameterInteraction() override {return true;}\n-    void RegisterRPC(CRPCTable &) override {}\n-    bool Verify() override {return true;}\n-    bool Open() override {LogPrintf(\"No wallet support compiled in!\\n\"); return true;}\n-    void Start(CScheduler& scheduler) override {}\n-    void Flush() override {}\n-    void Stop() override {}\n-    void Close() override {}\n+    std::string GetHelpString(bool showDebug) const override {return std::string{};}\n+    bool ParameterInteraction() const override {return true;}\n+    void RegisterRPC(CRPCTable &) const override {}\n+    bool Verify() const override {return true;}\n+    bool Open() const override {LogPrintf(\"No wallet support compiled in!\\n\"); return true;}\n+    void Start(CScheduler& scheduler) const override {}\n+    void Flush() const override {}\n+    void Stop() const override {}\n+    void Close() const override {}\n };\n \n static DummyWalletInit g_dummy_wallet_init;"
      },
      {
        "sha": "72d1fa3ec60215c5c638087e831bec1db8e8838e",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1936125671fbdb3411fcdf0d09fbd7ced32272e6/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1936125671fbdb3411fcdf0d09fbd7ced32272e6/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=1936125671fbdb3411fcdf0d09fbd7ced32272e6",
        "patch": "@@ -18,39 +18,39 @@ class WalletInit : public WalletInitInterface {\n public:\n \n     //! Return the wallets help message.\n-    std::string GetHelpString(bool showDebug) override;\n+    std::string GetHelpString(bool showDebug) const override;\n \n     //! Wallets parameter interaction\n-    bool ParameterInteraction() override;\n+    bool ParameterInteraction() const override;\n \n     //! Register wallet RPCs.\n-    void RegisterRPC(CRPCTable &tableRPC) override;\n+    void RegisterRPC(CRPCTable &tableRPC) const override;\n \n     //! Responsible for reading and validating the -wallet arguments and verifying the wallet database.\n     //  This function will perform salvage on the wallet if requested, as long as only one wallet is\n     //  being loaded (WalletParameterInteraction forbids -salvagewallet, -zapwallettxes or -upgradewallet with multiwallet).\n-    bool Verify() override;\n+    bool Verify() const override;\n \n     //! Load wallet databases.\n-    bool Open() override;\n+    bool Open() const override;\n \n     //! Complete startup of wallets.\n-    void Start(CScheduler& scheduler) override;\n+    void Start(CScheduler& scheduler) const override;\n \n     //! Flush all wallets in preparation for shutdown.\n-    void Flush() override;\n+    void Flush() const override;\n \n     //! Stop all wallets. Wallets will be flushed first.\n-    void Stop() override;\n+    void Stop() const override;\n \n     //! Close all wallets.\n-    void Close() override;\n+    void Close() const override;\n };\n \n static WalletInit g_wallet_init;\n WalletInitInterface* const g_wallet_init_interface = &g_wallet_init;\n \n-std::string WalletInit::GetHelpString(bool showDebug)\n+std::string WalletInit::GetHelpString(bool showDebug) const\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n     strUsage += HelpMessageOpt(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)));\n@@ -92,7 +92,7 @@ std::string WalletInit::GetHelpString(bool showDebug)\n     return strUsage;\n }\n \n-bool WalletInit::ParameterInteraction()\n+bool WalletInit::ParameterInteraction() const\n {\n     if (gArgs.GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET)) {\n         for (const std::string& wallet : gArgs.GetArgs(\"-wallet\")) {\n@@ -220,7 +220,7 @@ bool WalletInit::ParameterInteraction()\n     return true;\n }\n \n-void WalletInit::RegisterRPC(CRPCTable &t)\n+void WalletInit::RegisterRPC(CRPCTable &t) const\n {\n     if (gArgs.GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET)) {\n         return;\n@@ -229,7 +229,7 @@ void WalletInit::RegisterRPC(CRPCTable &t)\n     RegisterWalletRPCCommands(t);\n }\n \n-bool WalletInit::Verify()\n+bool WalletInit::Verify() const\n {\n     if (gArgs.GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET)) {\n         return true;\n@@ -304,7 +304,7 @@ bool WalletInit::Verify()\n     return true;\n }\n \n-bool WalletInit::Open()\n+bool WalletInit::Open() const\n {\n     if (gArgs.GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET)) {\n         LogPrintf(\"Wallet disabled!\\n\");\n@@ -322,28 +322,28 @@ bool WalletInit::Open()\n     return true;\n }\n \n-void WalletInit::Start(CScheduler& scheduler)\n+void WalletInit::Start(CScheduler& scheduler) const\n {\n     for (CWalletRef pwallet : vpwallets) {\n         pwallet->postInitProcess(scheduler);\n     }\n }\n \n-void WalletInit::Flush()\n+void WalletInit::Flush() const\n {\n     for (CWalletRef pwallet : vpwallets) {\n         pwallet->Flush(false);\n     }\n }\n \n-void WalletInit::Stop()\n+void WalletInit::Stop() const\n {\n     for (CWalletRef pwallet : vpwallets) {\n         pwallet->Flush(true);\n     }\n }\n \n-void WalletInit::Close()\n+void WalletInit::Close() const\n {\n     for (CWalletRef pwallet : vpwallets) {\n         delete pwallet;"
      },
      {
        "sha": "5bfde6faaf26e291c40f288e98a5357d412b6384",
        "filename": "src/walletinitinterface.h",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1936125671fbdb3411fcdf0d09fbd7ced32272e6/src/walletinitinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1936125671fbdb3411fcdf0d09fbd7ced32272e6/src/walletinitinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletinitinterface.h?ref=1936125671fbdb3411fcdf0d09fbd7ced32272e6",
        "patch": "@@ -13,23 +13,23 @@ class CRPCTable;\n class WalletInitInterface {\n public:\n     /** Get wallet help string */\n-    virtual std::string GetHelpString(bool showDebug) = 0;\n+    virtual std::string GetHelpString(bool showDebug) const = 0;\n     /** Check wallet parameter interaction */\n-    virtual bool ParameterInteraction() = 0;\n+    virtual bool ParameterInteraction() const = 0;\n     /** Register wallet RPC*/\n-    virtual void RegisterRPC(CRPCTable &) = 0;\n+    virtual void RegisterRPC(CRPCTable &) const = 0;\n     /** Verify wallets */\n-    virtual bool Verify() = 0;\n+    virtual bool Verify() const = 0;\n     /** Open wallets*/\n-    virtual bool Open() = 0;\n+    virtual bool Open() const = 0;\n     /** Start wallets*/\n-    virtual void Start(CScheduler& scheduler) = 0;\n+    virtual void Start(CScheduler& scheduler) const = 0;\n     /** Flush Wallets*/\n-    virtual void Flush() = 0;\n+    virtual void Flush() const = 0;\n     /** Stop Wallets*/\n-    virtual void Stop() = 0;\n+    virtual void Stop() const = 0;\n     /** Close wallets */\n-    virtual void Close() = 0;\n+    virtual void Close() const = 0;\n \n     virtual ~WalletInitInterface() {}\n };"
      }
    ]
  },
  {
    "sha": "6ec78f146134be7ee067a25a412d3c927f9ac353",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZWM3OGYxNDYxMzRiZTdlZTA2N2EyNWE0MTJkM2M5MjdmOWFjMzUz",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-04-13T13:05:55Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-04-13T13:07:21Z"
      },
      "message": "wallet: Refactor g_wallet_init_interface to const reference",
      "tree": {
        "sha": "acab1c29632640d007f051d052a6ef8fb7658f7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/acab1c29632640d007f051d052a6ef8fb7658f7c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ec78f146134be7ee067a25a412d3c927f9ac353",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ec78f146134be7ee067a25a412d3c927f9ac353",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6ec78f146134be7ee067a25a412d3c927f9ac353",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ec78f146134be7ee067a25a412d3c927f9ac353/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1936125671fbdb3411fcdf0d09fbd7ced32272e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1936125671fbdb3411fcdf0d09fbd7ced32272e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1936125671fbdb3411fcdf0d09fbd7ced32272e6"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 12,
      "deletions": 14
    },
    "files": [
      {
        "sha": "77dfe80e8196fd1765085a6ef2e4614e1a4d56a1",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 11,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ec78f146134be7ee067a25a412d3c927f9ac353/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ec78f146134be7ee067a25a412d3c927f9ac353/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6ec78f146134be7ee067a25a412d3c927f9ac353",
        "patch": "@@ -87,8 +87,7 @@ class DummyWalletInit : public WalletInitInterface {\n     void Close() const override {}\n };\n \n-static DummyWalletInit g_dummy_wallet_init;\n-WalletInitInterface* const g_wallet_init_interface = &g_dummy_wallet_init;\n+const WalletInitInterface& g_wallet_init_interface = DummyWalletInit();\n #endif\n \n #if ENABLE_ZMQ\n@@ -204,7 +203,7 @@ void Shutdown()\n     StopREST();\n     StopRPC();\n     StopHTTPServer();\n-    g_wallet_init_interface->Flush();\n+    g_wallet_init_interface.Flush();\n     StopMapPort();\n \n     // Because these depend on each-other, we make sure that neither can be\n@@ -262,7 +261,7 @@ void Shutdown()\n         pcoinsdbview.reset();\n         pblocktree.reset();\n     }\n-    g_wallet_init_interface->Stop();\n+    g_wallet_init_interface.Stop();\n \n #if ENABLE_ZMQ\n     if (pzmqNotificationInterface) {\n@@ -282,7 +281,7 @@ void Shutdown()\n     UnregisterAllValidationInterfaces();\n     GetMainSignals().UnregisterBackgroundSignalScheduler();\n     GetMainSignals().UnregisterWithMempoolSignals(mempool);\n-    g_wallet_init_interface->Close();\n+    g_wallet_init_interface.Close();\n     globalVerifyHandle.reset();\n     ECC_Stop();\n     LogPrintf(\"%s: done\\n\", __func__);\n@@ -425,7 +424,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-whitelist=<IP address or network>\", _(\"Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple times.\") +\n         \" \" + _(\"Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway\"));\n \n-    strUsage += g_wallet_init_interface->GetHelpString(showDebug);\n+    strUsage += g_wallet_init_interface.GetHelpString(showDebug);\n \n #if ENABLE_ZMQ\n     strUsage += HelpMessageGroup(_(\"ZeroMQ notification options:\"));\n@@ -1093,7 +1092,7 @@ bool AppInitParameterInteraction()\n         return InitError(strprintf(\"acceptnonstdtxn is not currently supported for %s chain\", chainparams.NetworkIDString()));\n     nBytesPerSigOp = gArgs.GetArg(\"-bytespersigop\", nBytesPerSigOp);\n \n-    if (!g_wallet_init_interface->ParameterInteraction()) return false;\n+    if (!g_wallet_init_interface.ParameterInteraction()) return false;\n \n     fIsBareMultisigStd = gArgs.GetBoolArg(\"-permitbaremultisig\", DEFAULT_PERMIT_BAREMULTISIG);\n     fAcceptDatacarrier = gArgs.GetBoolArg(\"-datacarrier\", DEFAULT_ACCEPT_DATACARRIER);\n@@ -1259,7 +1258,7 @@ bool AppInitMain()\n      * available in the GUI RPC console even if external calls are disabled.\n      */\n     RegisterAllCoreRPCCommands(tableRPC);\n-    g_wallet_init_interface->RegisterRPC(tableRPC);\n+    g_wallet_init_interface.RegisterRPC(tableRPC);\n \n     /* Start the RPC server already.  It will be started in \"warmup\" mode\n      * and not really process calls already (but it will signify connections\n@@ -1276,7 +1275,7 @@ bool AppInitMain()\n     int64_t nStart;\n \n     // ********************************************************* Step 5: verify wallet database integrity\n-    if (!g_wallet_init_interface->Verify()) return false;\n+    if (!g_wallet_init_interface.Verify()) return false;\n \n     // ********************************************************* Step 6: network initialization\n     // Note that we absolutely cannot open any actual connections\n@@ -1595,7 +1594,7 @@ bool AppInitMain()\n     fFeeEstimatesInitialized = true;\n \n     // ********************************************************* Step 8: load wallet\n-    if (!g_wallet_init_interface->Open()) return false;\n+    if (!g_wallet_init_interface.Open()) return false;\n \n     // ********************************************************* Step 9: data directory maintenance\n \n@@ -1741,7 +1740,7 @@ bool AppInitMain()\n     SetRPCWarmupFinished();\n     uiInterface.InitMessage(_(\"Done loading\"));\n \n-    g_wallet_init_interface->Start(scheduler);\n+    g_wallet_init_interface.Start(scheduler);\n \n     return true;\n }"
      },
      {
        "sha": "000c8c95e4115d2aa5334243c29331c51d46a7b6",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ec78f146134be7ee067a25a412d3c927f9ac353/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ec78f146134be7ee067a25a412d3c927f9ac353/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=6ec78f146134be7ee067a25a412d3c927f9ac353",
        "patch": "@@ -13,7 +13,7 @@ class CScheduler;\n class CWallet;\n \n class WalletInitInterface;\n-extern WalletInitInterface* const g_wallet_init_interface;\n+extern const WalletInitInterface& g_wallet_init_interface;\n \n namespace boost\n {"
      },
      {
        "sha": "2fd9aa1a6fe9e27f377f4b08d496157460d852d7",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ec78f146134be7ee067a25a412d3c927f9ac353/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ec78f146134be7ee067a25a412d3c927f9ac353/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=6ec78f146134be7ee067a25a412d3c927f9ac353",
        "patch": "@@ -47,8 +47,7 @@ class WalletInit : public WalletInitInterface {\n     void Close() const override;\n };\n \n-static WalletInit g_wallet_init;\n-WalletInitInterface* const g_wallet_init_interface = &g_wallet_init;\n+const WalletInitInterface& g_wallet_init_interface = WalletInit();\n \n std::string WalletInit::GetHelpString(bool showDebug) const\n {"
      }
    ]
  }
]