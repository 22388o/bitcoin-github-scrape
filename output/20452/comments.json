[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731738740",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-731738740",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 731738740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTczODc0MA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-22T12:15:15Z",
    "updated_at": "2020-11-22T12:25:19Z",
    "author_association": "MEMBER",
    "body": "Note that we have a function `ParseInt32` (as well as 64 and UInt variants) for this and I once tried to use it in more places, see #17385.\r\n\r\nHowever these didn't turn out to be actually locale-independent. Maybe this can replace them eventually.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731738740/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731739877",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-731739877",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 731739877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTczOTg3Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-22T12:23:57Z",
    "updated_at": "2020-11-22T12:28:17Z",
    "author_association": "MEMBER",
    "body": ">  locale-independent std::from_chars(\u2026) (C++17).\r\n\r\nThis is good to hear at least. From https://en.cppreference.com/w/cpp/utility/from_chars#Notes :\r\n\r\n> Unlike other parsing functions in C++ and C libraries, std::from_chars is locale-independent, non-allocating, and non-throwing.\r\n\r\nConcept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731739877/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 1,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731747267",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-731747267",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 731747267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTc0NzI2Nw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-22T13:18:44Z",
    "updated_at": "2021-10-02T08:07:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15936](https://github.com/bitcoin/bitcoin/pull/15936) (Unify bitcoin-qt and bitcoind persistent settings by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731747267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731748771",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-731748771",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 731748771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTc0ODc3MQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-22T13:29:25Z",
    "updated_at": "2020-11-22T13:31:14Z",
    "author_association": "MEMBER",
    "body": "I think we need to make a choice here (either one or both):\r\n\r\n- Make an emulation of all broken and surprising `atoi` behavior, but call it something else than `ToIntegral`, something like `LocaleIndependentAtoi`, make it clear it should not be used in new code, it's only meant for preserving `atoi` behavior for backward compatibility reasons.\r\n- Make a sane integer parsing function that can eventually replace `Parse[U]IntXX` or their contents in a locale-independent way. I'm fine with the name then.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731748771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731753699",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-731753699",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 731753699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTc1MzY5OQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-22T14:07:33Z",
    "updated_at": "2020-11-22T14:15:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@laanwj\r\n\r\n> I think we need to make a choice here (either one or both):\r\n> \r\n> * Make an emulation of all broken and surprising `atoi` behavior, but call it something else than `ToIntegral`, something like `LocaleIndependentAtoi`, make it clear it should not be used in new code, it's only meant for preserving `atoi` behavior for backward compatibility reasons.\r\n> * Make a sane integer parsing function that can eventually replace `Parse[U]IntXX` or their contents in a locale-independent way. I'm fine with the name then.\r\n\r\nGood point. I thought about those options as well. I think we should do both. This PR is meant as a pure refactoring: it is not meant to change any behaviour that is defined by `atoi`.\r\n\r\n I've now made it more clear that this PR is meant as a quirk-by-quirk compatible replacement for `atoi` by calling the function `LocaleIndependentAtoi` :)\r\n\r\nGood point about naming: we should keep the name `ToIntegral` for a future sane version that doesn't emulate `atoi` or any other legacy function.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731753699/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731783760",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-731783760",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 731783760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTc4Mzc2MA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-22T17:48:26Z",
    "updated_at": "2020-11-22T17:48:26Z",
    "author_association": "MEMBER",
    "body": "Okay, agree. I guess it could replace `atoi` as well as `atoi64` in that case (as it's parametrized on type)?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731783760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731834478",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-731834478",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 731834478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTgzNDQ3OA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-22T19:48:22Z",
    "updated_at": "2020-11-22T19:48:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@laanwj Done! I've now replaced all instances of `atoi64(s)` with `LocaleIndependentAtoi<int64_t>(s)`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/731834478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/732051748",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-732051748",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 732051748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjA1MTc0OA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T09:55:20Z",
    "updated_at": "2020-11-23T09:55:20Z",
    "author_association": "MEMBER",
    "body": "> @laanwj Done! I've now replaced all instances of atoi64(s) with LocaleIndependentAtoi<int64_t>(s).\r\n\r\nThanks, looks good to me now except the documentation nit.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/732051748/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/733740085",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-733740085",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 733740085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzc0MDA4NQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-25T14:28:35Z",
    "updated_at": "2020-11-25T14:28:35Z",
    "author_association": "MEMBER",
    "body": "I don't get the CI error. Is `charconv` non-standard in some way?\r\n```\r\nIn file included from primitives/transaction.cpp:10:0:\r\n./util/strencodings.h:16:10: fatal error: charconv: No such file or directory\r\n #include <charconv>\r\n          ^~~~~~~~~~\r\ncompilation terminated.\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/733740085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736613876",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-736613876",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 736613876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjYxMzg3Ng==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-01T15:09:50Z",
    "updated_at": "2020-12-01T15:10:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@laanwj I think the CI failures are from relatively older distros, and that C++17 library support lagged behind C++17 compiler support for a while in C++17 infancy. \r\n\r\nAccording to [cppreference](https://en.cppreference.com/w/cpp/compiler_support) the [elementary string conversions](https://wg21.link/P0067R5) (`<charconv>`) were added in GCC libstdc++ 8, Clang libc++ 7 and MSVC Standard Library 19.14. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736613876/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736640758",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-736640758",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 736640758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjY0MDc1OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-01T15:51:41Z",
    "updated_at": "2020-12-01T15:51:41Z",
    "author_association": "MEMBER",
    "body": "ok, this is blocked on #20460 ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736640758/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745270906",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-745270906",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 745270906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTI3MDkwNg==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-15T12:57:51Z",
    "updated_at": "2020-12-15T12:57:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could remove \"Waiting for author\"? I don't know if we have any \"Blocked on another PR/issue\" (or \"Waiting for toolchain upgrade\") tag, but this PR is blocked on #20460 :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745270906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/860172153",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-860172153",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 860172153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDE3MjE1Mw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-13T08:12:04Z",
    "updated_at": "2021-06-13T08:12:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased!\r\n\r\nCould this PR get a [23.0 milestone](https://github.com/bitcoin/bitcoin/milestone/52) like the related PR #20457 (\"util: Make Parse{Int,UInt}{32,64} use locale independent std::from_chars(\u2026) (C++17) instead of locale dependent strto{l,ll,ul,ull}\")? :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/860172153/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/930223139",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-930223139",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 930223139,
    "node_id": "IC_kwDOABII5843chQj",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-29T14:19:36Z",
    "updated_at": "2021-09-29T14:19:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Now that #20460 has been merged I think this PR should be ready for final review :)\r\n\r\nSee also related PR #20457.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/930223139/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/931433060",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-931433060",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 931433060,
    "node_id": "IC_kwDOABII5843hIpk",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-30T15:33:35Z",
    "updated_at": "2021-09-30T15:33:35Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/931433060/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/931498977",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-931498977",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 931498977,
    "node_id": "IC_kwDOABII5843hYvh",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-30T16:57:22Z",
    "updated_at": "2021-09-30T16:57:22Z",
    "author_association": "MEMBER",
    "body": "Code review ACK 4343f114cc661cf031ec915538c11b9b030e2e15",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/931498977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934309149",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#issuecomment-934309149",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20452",
    "id": 934309149,
    "node_id": "IC_kwDOABII5843sG0d",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-05T11:11:02Z",
    "updated_at": "2021-10-05T11:11:02Z",
    "author_association": "MEMBER",
    "body": "Follow up in #23184",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/934309149/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528326970",
    "pull_request_review_id": 536056110,
    "id": 528326970,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMyNjk3MA==",
    "diff_hunk": "@@ -69,7 +71,25 @@ std::string EncodeBase32(const std::string& str, bool pad = true);\n \n void SplitHostPort(std::string in, int& portOut, std::string& hostOut);\n int64_t atoi64(const std::string& str);\n-int atoi(const std::string& str);\n+\n+template <typename T>\n+T ToIntegral(const std::string& str)\n+{\n+    T result;\n+    // Emulate atoi(...) handling of white space and leading +/-.\n+    std::string s = TrimString(str);\n+    if (!s.empty() && s[0] == '+') {\n+        if (s.length() >= 2 && s[1] == '-') {\n+            return 0;\n+        }\n+        s = s.substr(1);\n+    }\n+    auto [_, error_condition] = std::from_chars(s.data(), s.data() + s.size(), result);\n+    if (error_condition != std::errc{}) {\n+        return 0;",
    "path": "src/util/strencodings.h",
    "position": 37,
    "original_position": 30,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "be0efcd2136a046a15efc207dfbab7bdba818849",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Please, do not just return 0 in case of a parse error (same comment above!) but use explicit error feedback. The current formulation encourages ignoring errors. Most C++17ish would be to return an `Option`.\r\n(then handle it at the call site, if it wants to squash any errors to 0, fine)",
    "created_at": "2020-11-22T12:16:12Z",
    "updated_at": "2021-04-24T07:54:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r528326970",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528326970"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r528326970"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528326970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 95,
    "original_line": 95,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528328860",
    "pull_request_review_id": 536057437,
    "id": 528328860,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMyODg2MA==",
    "diff_hunk": "@@ -69,7 +71,25 @@ std::string EncodeBase32(const std::string& str, bool pad = true);\n \n void SplitHostPort(std::string in, int& portOut, std::string& hostOut);\n int64_t atoi64(const std::string& str);\n-int atoi(const std::string& str);\n+\n+template <typename T>\n+T ToIntegral(const std::string& str)\n+{\n+    T result;\n+    // Emulate atoi(...) handling of white space and leading +/-.\n+    std::string s = TrimString(str);",
    "path": "src/util/strencodings.h",
    "position": 28,
    "original_position": 21,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "be0efcd2136a046a15efc207dfbab7bdba818849",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Making a copy of the string here, as well as below for the +/- check, is kind of efficient.\r\nNot sure it matters here, it's not like this function is used in any performance critical places at the moment.\r\n\r\nBut as the function takes a range, we could do better.",
    "created_at": "2020-11-22T12:32:37Z",
    "updated_at": "2021-04-24T07:54:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r528328860",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528328860"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r528328860"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528328860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 86,
    "original_line": 86,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528333055",
    "pull_request_review_id": 536060474,
    "id": 528333055,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzMzA1NQ==",
    "diff_hunk": "@@ -69,7 +71,25 @@ std::string EncodeBase32(const std::string& str, bool pad = true);\n \n void SplitHostPort(std::string in, int& portOut, std::string& hostOut);\n int64_t atoi64(const std::string& str);\n-int atoi(const std::string& str);\n+\n+template <typename T>\n+T ToIntegral(const std::string& str)\n+{\n+    T result;\n+    // Emulate atoi(...) handling of white space and leading +/-.\n+    std::string s = TrimString(str);\n+    if (!s.empty() && s[0] == '+') {\n+        if (s.length() >= 2 && s[1] == '-') {\n+            return 0;\n+        }\n+        s = s.substr(1);\n+    }\n+    auto [_, error_condition] = std::from_chars(s.data(), s.data() + s.size(), result);\n+    if (error_condition != std::errc{}) {\n+        return 0;",
    "path": "src/util/strencodings.h",
    "position": 37,
    "original_position": 30,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "be0efcd2136a046a15efc207dfbab7bdba818849",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think you need to check the returned pointer against `last` as well, otherwise it ignores any remainder.",
    "created_at": "2020-11-22T13:06:00Z",
    "updated_at": "2021-04-24T07:54:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r528333055",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528333055"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r528333055"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528333055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 95,
    "original_line": 95,
    "side": "RIGHT",
    "in_reply_to_id": 528326970
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528341227",
    "pull_request_review_id": 536066098,
    "id": 528341227,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODM0MTIyNw==",
    "diff_hunk": "@@ -69,7 +71,25 @@ std::string EncodeBase32(const std::string& str, bool pad = true);\n \n void SplitHostPort(std::string in, int& portOut, std::string& hostOut);\n int64_t atoi64(const std::string& str);\n-int atoi(const std::string& str);\n+\n+template <typename T>\n+T ToIntegral(const std::string& str)\n+{\n+    T result;\n+    // Emulate atoi(...) handling of white space and leading +/-.\n+    std::string s = TrimString(str);\n+    if (!s.empty() && s[0] == '+') {\n+        if (s.length() >= 2 && s[1] == '-') {\n+            return 0;\n+        }\n+        s = s.substr(1);\n+    }\n+    auto [_, error_condition] = std::from_chars(s.data(), s.data() + s.size(), result);\n+    if (error_condition != std::errc{}) {\n+        return 0;",
    "path": "src/util/strencodings.h",
    "position": 37,
    "original_position": 30,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "be0efcd2136a046a15efc207dfbab7bdba818849",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree on both for a sane safe interface, but since this function (`LocaleIndependentAtoi`) is meant as a quirk-by-quirk compatible to the not-entirely-sane `atoi(\u2026)` I'm afraid we need to return a `T` (instead of `std::optional<T>`) and ignore any remainder, no? :)",
    "created_at": "2020-11-22T14:12:08Z",
    "updated_at": "2021-04-24T07:54:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r528341227",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528341227"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r528341227"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528341227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 95,
    "original_line": 95,
    "side": "RIGHT",
    "in_reply_to_id": 528326970
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528582133",
    "pull_request_review_id": 536314464,
    "id": 528582133,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4MjEzMw==",
    "diff_hunk": "@@ -68,8 +70,25 @@ std::string EncodeBase32(Span<const unsigned char> input, bool pad = true);\n std::string EncodeBase32(const std::string& str, bool pad = true);\n \n void SplitHostPort(std::string in, int& portOut, std::string& hostOut);\n-int64_t atoi64(const std::string& str);\n-int atoi(const std::string& str);\n+\n+template <typename T>",
    "path": "src/util/strencodings.h",
    "position": 22,
    "original_position": 17,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "6a6a71e098ac4600c0e63410629f43191d65b9f5",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Please add a comment what this function does (e.g.: replicate the exact behavior of `atoi` for backwards compatibility) and that new code should use the `Parse[U]IntXX` functions with parse error feedback.",
    "created_at": "2020-11-23T09:54:55Z",
    "updated_at": "2021-04-24T07:54:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r528582133",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528582133"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r528582133"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528582133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 80,
    "original_line": 80,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528803662",
    "pull_request_review_id": 536604028,
    "id": 528803662,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgwMzY2Mg==",
    "diff_hunk": "@@ -68,8 +70,25 @@ std::string EncodeBase32(Span<const unsigned char> input, bool pad = true);\n std::string EncodeBase32(const std::string& str, bool pad = true);\n \n void SplitHostPort(std::string in, int& portOut, std::string& hostOut);\n-int64_t atoi64(const std::string& str);\n-int atoi(const std::string& str);\n+\n+template <typename T>",
    "path": "src/util/strencodings.h",
    "position": 22,
    "original_position": 17,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "6a6a71e098ac4600c0e63410629f43191d65b9f5",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done! :)",
    "created_at": "2020-11-23T15:50:49Z",
    "updated_at": "2021-04-24T07:54:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r528803662",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528803662"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r528803662"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528803662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 80,
    "original_line": 80,
    "side": "RIGHT",
    "in_reply_to_id": 528582133
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533538947",
    "pull_request_review_id": 542064853,
    "id": 533538947,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzUzODk0Nw==",
    "diff_hunk": "@@ -69,7 +71,25 @@ std::string EncodeBase32(const std::string& str, bool pad = true);\n \n void SplitHostPort(std::string in, int& portOut, std::string& hostOut);\n int64_t atoi64(const std::string& str);\n-int atoi(const std::string& str);\n+\n+template <typename T>\n+T ToIntegral(const std::string& str)\n+{\n+    T result;\n+    // Emulate atoi(...) handling of white space and leading +/-.\n+    std::string s = TrimString(str);",
    "path": "src/util/strencodings.h",
    "position": 28,
    "original_position": 21,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "be0efcd2136a046a15efc207dfbab7bdba818849",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "As a general rule I try to stay away from pointer arithmetic ([rationale here](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#es42-keep-use-of-pointers-simple-and-straightforward)): that's the reason for the technically extraneous copy which I think is insignificant in this context :)\r\n\r\nPersonally I find code that avoids pointer arithmetic _much_ easier to reason about from a safety perspective.\r\n\r\nThat said: I'll let other chime in :)",
    "created_at": "2020-12-01T16:15:18Z",
    "updated_at": "2021-04-24T07:54:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r533538947",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533538947"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r533538947"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533538947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 86,
    "original_line": 86,
    "side": "RIGHT",
    "in_reply_to_id": 528328860
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719729331",
    "pull_request_review_id": 768297946,
    "id": 719729331,
    "node_id": "PRRC_kwDOABII584q5jKz",
    "diff_hunk": "@@ -702,7 +702,7 @@ static RPCHelpMan getblocktemplate()\n             std::string lpstr = lpval.get_str();\n \n             hashWatchedChain = ParseHashV(lpstr.substr(0, 64), \"longpollid\");\n-            nTransactionsUpdatedLastLP = atoi64(lpstr.substr(64));\n+            nTransactionsUpdatedLastLP = LocaleIndependentAtoi<int64_t>(lpstr.substr(64));",
    "path": "src/rpc/mining.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`nTransactionsUpdatedLastLP` is `unsigned int`; should this be defined or cast to that?",
    "created_at": "2021-09-30T20:20:11Z",
    "updated_at": "2021-09-30T20:25:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r719729331",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719729331"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r719729331"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719729331/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 705,
    "original_line": 705,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719990550",
    "pull_request_review_id": 768622277,
    "id": 719990550,
    "node_id": "PRRC_kwDOABII584q6i8W",
    "diff_hunk": "@@ -68,8 +69,33 @@ std::string EncodeBase32(Span<const unsigned char> input, bool pad = true);\n std::string EncodeBase32(const std::string& str, bool pad = true);\n \n void SplitHostPort(std::string in, uint16_t& portOut, std::string& hostOut);\n-int64_t atoi64(const std::string& str);\n-int atoi(const std::string& str);\n+\n+// LocaleIndependentAtoi is provided for backwards compatibility reasons.\n+//\n+// New code should use the ParseInt64/ParseUInt64/ParseInt32/ParseUInt32 functions\n+// which provide parse error feedback.",
    "path": "src/util/strencodings.h",
    "position": 18,
    "original_position": 18,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a really important comment. I hope we can get rid of these functions entirely at some point. The implicit error handling behavior of `atoi` and `atoi64` is pretty much always undesirable.\r\n(so I would normally comment \"these function names are long and clunky, please shorten them\" but it's good in this case, we want using them to be ugly :smile:  )",
    "created_at": "2021-10-01T07:01:23Z",
    "updated_at": "2021-10-01T07:01:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r719990550",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719990550"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r719990550"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719990550/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 76,
    "original_line": 76,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719993368",
    "pull_request_review_id": 768626147,
    "id": 719993368,
    "node_id": "PRRC_kwDOABII584q6joY",
    "diff_hunk": "@@ -702,7 +702,7 @@ static RPCHelpMan getblocktemplate()\n             std::string lpstr = lpval.get_str();\n \n             hashWatchedChain = ParseHashV(lpstr.substr(0, 64), \"longpollid\");\n-            nTransactionsUpdatedLastLP = atoi64(lpstr.substr(64));\n+            nTransactionsUpdatedLastLP = LocaleIndependentAtoi<int64_t>(lpstr.substr(64));",
    "path": "src/rpc/mining.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes it probably needs the same kind of ugly cast as `nTimeSmart` in the wallet code. In the longer run the field should imo be converted to an explicitly sized type, and parsed as that, but keeping the behavior exactly the same makes sense here to keep it uncontroversial.",
    "created_at": "2021-10-01T07:07:03Z",
    "updated_at": "2021-10-01T07:07:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r719993368",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719993368"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r719993368"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/719993368/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 705,
    "original_line": 705,
    "side": "RIGHT",
    "in_reply_to_id": 719729331
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/720289301",
    "pull_request_review_id": 769032026,
    "id": 720289301,
    "node_id": "PRRC_kwDOABII584q7r4V",
    "diff_hunk": "@@ -702,7 +702,7 @@ static RPCHelpMan getblocktemplate()\n             std::string lpstr = lpval.get_str();\n \n             hashWatchedChain = ParseHashV(lpstr.substr(0, 64), \"longpollid\");\n-            nTransactionsUpdatedLastLP = atoi64(lpstr.substr(64));\n+            nTransactionsUpdatedLastLP = LocaleIndependentAtoi<int64_t>(lpstr.substr(64));",
    "path": "src/rpc/mining.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jonatack Good point! I suggest we tackle that in a follow-up PR to keep this PR pure refactoring only :)",
    "created_at": "2021-10-01T14:19:50Z",
    "updated_at": "2021-10-01T14:20:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r720289301",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/720289301"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r720289301"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/720289301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 705,
    "original_line": 705,
    "side": "RIGHT",
    "in_reply_to_id": 719729331
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722086011",
    "pull_request_review_id": 771236800,
    "id": 722086011,
    "node_id": "PRRC_kwDOABII584rCih7",
    "diff_hunk": "@@ -69,7 +69,7 @@ CScript ParseScript(const std::string& s)\n             (w->front() == '-' && w->size() > 1 && std::all_of(w->begin()+1, w->end(), ::IsDigit)))\n         {\n             // Number\n-            int64_t n = atoi64(*w);\n+            int64_t n = LocaleIndependentAtoi<int64_t>(*w);",
    "path": "src/core_read.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The condition literally checks for the required format for ParseIntegral<>, so why not use that?",
    "created_at": "2021-10-05T10:03:16Z",
    "updated_at": "2021-10-05T10:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722086011",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722086011"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722086011"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722086011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 72,
    "original_line": 72,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722086942",
    "pull_request_review_id": 771236800,
    "id": 722086942,
    "node_id": "PRRC_kwDOABII584rCiwe",
    "diff_hunk": "@@ -250,7 +250,7 @@ bool RPCConsole::RPCParseCommandLine(interfaces::Node* node, std::string &strRes\n                                     for(char argch: curarg)\n                                         if (!IsDigit(argch))\n                                             throw std::runtime_error(\"Invalid result query\");\n-                                    subelement = lastResult[atoi(curarg.c_str())];\n+                                    subelement = lastResult[LocaleIndependentAtoi<int>(curarg)];",
    "path": "src/qt/rpcconsole.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Same",
    "created_at": "2021-10-05T10:04:32Z",
    "updated_at": "2021-10-05T10:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722086942",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722086942"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722086942"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722086942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 253,
    "original_line": 253,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722096494",
    "pull_request_review_id": 771236800,
    "id": 722096494,
    "node_id": "PRRC_kwDOABII584rClFu",
    "diff_hunk": "@@ -68,8 +69,33 @@ std::string EncodeBase32(Span<const unsigned char> input, bool pad = true);\n std::string EncodeBase32(const std::string& str, bool pad = true);\n \n void SplitHostPort(std::string in, uint16_t& portOut, std::string& hostOut);\n-int64_t atoi64(const std::string& str);\n-int atoi(const std::string& str);\n+\n+// LocaleIndependentAtoi is provided for backwards compatibility reasons.\n+//\n+// New code should use the ParseInt64/ParseUInt64/ParseInt32/ParseUInt32 functions\n+// which provide parse error feedback.",
    "path": "src/util/strencodings.h",
    "position": 18,
    "original_position": 18,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The linter says to use `ToIntegral`, this contradicts by saying to use `ParseInt*`??",
    "created_at": "2021-10-05T10:17:04Z",
    "updated_at": "2021-10-05T10:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722096494",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722096494"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722096494"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722096494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 76,
    "original_line": 76,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722110536",
    "pull_request_review_id": 771236800,
    "id": 722110536,
    "node_id": "PRRC_kwDOABII584rCohI",
    "diff_hunk": "@@ -77,8 +77,7 @@ std::optional<CAmount> ParseMoney(const std::string& money_string)\n         return std::nullopt;\n     if (nUnits < 0 || nUnits > COIN)\n         return std::nullopt;\n-    int64_t nWhole = atoi64(strWhole);\n-\n+    int64_t nWhole = LocaleIndependentAtoi<int64_t>(strWhole);",
    "path": "src/util/moneystr.cpp",
    "position": 6,
    "original_position": 6,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "same",
    "created_at": "2021-10-05T10:36:30Z",
    "updated_at": "2021-10-05T10:37:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722110536",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722110536"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722110536"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722110536/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 80,
    "original_line": 80,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722163966",
    "pull_request_review_id": 771339481,
    "id": 722163966,
    "node_id": "PRRC_kwDOABII584rC1j-",
    "diff_hunk": "@@ -69,7 +69,7 @@ CScript ParseScript(const std::string& s)\n             (w->front() == '-' && w->size() > 1 && std::all_of(w->begin()+1, w->end(), ::IsDigit)))\n         {\n             // Number\n-            int64_t n = atoi64(*w);\n+            int64_t n = LocaleIndependentAtoi<int64_t>(*w);",
    "path": "src/core_read.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sounds like a good idea now that `ParseIntegral` is part of `master` :)",
    "created_at": "2021-10-05T11:54:38Z",
    "updated_at": "2021-10-05T11:54:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722163966",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722163966"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722163966"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722163966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 72,
    "original_line": 72,
    "side": "RIGHT",
    "in_reply_to_id": 722086011
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722164459",
    "pull_request_review_id": 771340121,
    "id": 722164459,
    "node_id": "PRRC_kwDOABII584rC1rr",
    "diff_hunk": "@@ -68,8 +69,33 @@ std::string EncodeBase32(Span<const unsigned char> input, bool pad = true);\n std::string EncodeBase32(const std::string& str, bool pad = true);\n \n void SplitHostPort(std::string in, uint16_t& portOut, std::string& hostOut);\n-int64_t atoi64(const std::string& str);\n-int atoi(const std::string& str);\n+\n+// LocaleIndependentAtoi is provided for backwards compatibility reasons.\n+//\n+// New code should use the ParseInt64/ParseUInt64/ParseInt32/ParseUInt32 functions\n+// which provide parse error feedback.",
    "path": "src/util/strencodings.h",
    "position": 18,
    "original_position": 18,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`ToIntegral` sounds like a good suggestion now that it is part of `master` :)",
    "created_at": "2021-10-05T11:55:20Z",
    "updated_at": "2021-10-05T11:55:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722164459",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722164459"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722164459"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722164459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 76,
    "original_line": 76,
    "side": "RIGHT",
    "in_reply_to_id": 722096494
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722170135",
    "pull_request_review_id": 771347867,
    "id": 722170135,
    "node_id": "PRRC_kwDOABII584rC3EX",
    "diff_hunk": "@@ -69,7 +69,7 @@ CScript ParseScript(const std::string& s)\n             (w->front() == '-' && w->size() > 1 && std::all_of(w->begin()+1, w->end(), ::IsDigit)))\n         {\n             // Number\n-            int64_t n = atoi64(*w);\n+            int64_t n = LocaleIndependentAtoi<int64_t>(*w);",
    "path": "src/core_read.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sorry, I was wrong. This is not a refactor.",
    "created_at": "2021-10-05T12:03:17Z",
    "updated_at": "2021-10-05T12:04:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722170135",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722170135"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722170135"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722170135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 72,
    "original_line": 72,
    "side": "RIGHT",
    "in_reply_to_id": 722086011
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722170354",
    "pull_request_review_id": 771347867,
    "id": 722170354,
    "node_id": "PRRC_kwDOABII584rC3Hy",
    "diff_hunk": "@@ -250,7 +250,7 @@ bool RPCConsole::RPCParseCommandLine(interfaces::Node* node, std::string &strRes\n                                     for(char argch: curarg)\n                                         if (!IsDigit(argch))\n                                             throw std::runtime_error(\"Invalid result query\");\n-                                    subelement = lastResult[atoi(curarg.c_str())];\n+                                    subelement = lastResult[LocaleIndependentAtoi<int>(curarg)];",
    "path": "src/qt/rpcconsole.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sorry, I was wrong. This is not a refactor.",
    "created_at": "2021-10-05T12:03:33Z",
    "updated_at": "2021-10-05T12:04:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722170354",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722170354"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722170354"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722170354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 253,
    "original_line": 253,
    "side": "RIGHT",
    "in_reply_to_id": 722086942
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722170522",
    "pull_request_review_id": 771347867,
    "id": 722170522,
    "node_id": "PRRC_kwDOABII584rC3Ka",
    "diff_hunk": "@@ -77,8 +77,7 @@ std::optional<CAmount> ParseMoney(const std::string& money_string)\n         return std::nullopt;\n     if (nUnits < 0 || nUnits > COIN)\n         return std::nullopt;\n-    int64_t nWhole = atoi64(strWhole);\n-\n+    int64_t nWhole = LocaleIndependentAtoi<int64_t>(strWhole);",
    "path": "src/util/moneystr.cpp",
    "position": 6,
    "original_position": 6,
    "commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "original_commit_id": "4343f114cc661cf031ec915538c11b9b030e2e15",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sorry, I was wrong. This is not a refactor.",
    "created_at": "2021-10-05T12:03:51Z",
    "updated_at": "2021-10-05T12:04:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722170522",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722170522"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20452#discussion_r722170522"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20452"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/722170522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 80,
    "original_line": 80,
    "side": "RIGHT",
    "in_reply_to_id": 722110536
  }
]