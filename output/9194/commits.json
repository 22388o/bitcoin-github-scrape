[
  {
    "sha": "bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYzdmZjhkYjk5ZGJjMjhmOGIyZDdhMjJmNDY1MGZhNTM0OWNiMjNi",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2016-11-20T14:54:51Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2016-12-05T12:43:22Z"
      },
      "message": "Add option to return non-segwit serialization via rpc",
      "tree": {
        "sha": "4860b28d599fe0fc96ad19d5a56133ddafb1a8cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4860b28d599fe0fc96ad19d5a56133ddafb1a8cd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7d5d44969b4ab46a5146a46b4ed1ed7704d71c63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d5d44969b4ab46a5146a46b4ed1ed7704d71c63",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7d5d44969b4ab46a5146a46b4ed1ed7704d71c63"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 40,
      "deletions": 9
    },
    "files": [
      {
        "sha": "7aa72cca34203183b6594e314e340b53cc970e95",
        "filename": "qa/rpc-tests/segwit.py",
        "status": "modified",
        "additions": 17,
        "deletions": 3,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/qa/rpc-tests/segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/qa/rpc-tests/segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/segwit.py?ref=bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b",
        "patch": "@@ -13,6 +13,7 @@\n from test_framework.address import script_to_p2sh, key_to_p2pkh\n from test_framework.script import CScript, OP_HASH160, OP_CHECKSIG, OP_0, hash160, OP_EQUAL, OP_DUP, OP_EQUALVERIFY, OP_1, OP_2, OP_CHECKMULTISIG\n from io import BytesIO\n+from test_framework.mininode import FromHex\n \n NODE_0 = 0\n NODE_1 = 1\n@@ -84,8 +85,8 @@ def __init__(self):\n \n     def setup_network(self):\n         self.nodes = []\n-        self.nodes.append(start_node(0, self.options.tmpdir, [\"-logtimemicros\", \"-debug\", \"-walletprematurewitness\"]))\n-        self.nodes.append(start_node(1, self.options.tmpdir, [\"-logtimemicros\", \"-debug\", \"-blockversion=4\", \"-promiscuousmempoolflags=517\", \"-prematurewitness\", \"-walletprematurewitness\"]))\n+        self.nodes.append(start_node(0, self.options.tmpdir, [\"-logtimemicros\", \"-debug\", \"-walletprematurewitness\", \"-rpcserialversion=0\"]))\n+        self.nodes.append(start_node(1, self.options.tmpdir, [\"-logtimemicros\", \"-debug\", \"-blockversion=4\", \"-promiscuousmempoolflags=517\", \"-prematurewitness\", \"-walletprematurewitness\", \"-rpcserialversion=2\"]))\n         self.nodes.append(start_node(2, self.options.tmpdir, [\"-logtimemicros\", \"-debug\", \"-blockversion=536870915\", \"-promiscuousmempoolflags=517\", \"-prematurewitness\", \"-walletprematurewitness\"]))\n         connect_nodes(self.nodes[1], 0)\n         connect_nodes(self.nodes[2], 1)\n@@ -211,7 +212,20 @@ def run_test(self):\n         block = self.nodes[2].generate(1) #block 432 (first block with new rules; 432 = 144 * 3)\n         sync_blocks(self.nodes)\n         assert_equal(len(self.nodes[2].getrawmempool()), 0)\n-        assert_equal(len(self.nodes[2].getblock(block[0])[\"tx\"]), 5)\n+        segwit_tx_list = self.nodes[2].getblock(block[0])[\"tx\"]\n+        assert_equal(len(segwit_tx_list), 5)\n+\n+        print(\"Verify block and transaction serialization rpcs return differing serializations depending on rpc serialization flag\")\n+        # Note: node1 has version 2, which is simply >0 and will catch future upgrades in tests\n+        assert(self.nodes[2].getblock(block[0], False) !=  self.nodes[0].getblock(block[0], False))\n+        assert(self.nodes[1].getblock(block[0], False) ==  self.nodes[2].getblock(block[0], False))\n+        for i in range(len(segwit_tx_list)):\n+            tx = FromHex(CTransaction(), self.nodes[2].gettransaction(segwit_tx_list[i])[\"hex\"])\n+            assert(self.nodes[2].getrawtransaction(segwit_tx_list[i]) != self.nodes[0].getrawtransaction(segwit_tx_list[i]))\n+            assert(self.nodes[1].getrawtransaction(segwit_tx_list[i], 0) == self.nodes[2].getrawtransaction(segwit_tx_list[i]))\n+            assert(self.nodes[0].getrawtransaction(segwit_tx_list[i]) != self.nodes[2].gettransaction(segwit_tx_list[i])[\"hex\"])\n+            assert(self.nodes[1].getrawtransaction(segwit_tx_list[i]) == self.nodes[2].gettransaction(segwit_tx_list[i])[\"hex\"])\n+            assert(self.nodes[0].getrawtransaction(segwit_tx_list[i]) == bytes_to_hex_str(tx.serialize_without_witness()))\n \n         print(\"Verify witness txs without witness data are invalid after the fork\")\n         self.fail_mine(self.nodes[2], wit_ids[NODE_2][WIT_V0][2], False)"
      },
      {
        "sha": "7642bc6d6e57cc63cb2f2834dce5f7456ee6faf4",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b",
        "patch": "@@ -26,7 +26,7 @@ std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strN\n \n // core_write.cpp\n std::string FormatScript(const CScript& script);\n-std::string EncodeHexTx(const CTransaction& tx);\n+std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags = 0);\n void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry);\n "
      },
      {
        "sha": "9f859ba9e12b12c3c524c8458654e473a54fd2cc",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b",
        "patch": "@@ -116,9 +116,9 @@ string ScriptToAsmStr(const CScript& script, const bool fAttemptSighashDecode)\n     return str;\n }\n \n-string EncodeHexTx(const CTransaction& tx)\n+string EncodeHexTx(const CTransaction& tx, const int serialFlags)\n {\n-    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n+    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION | serialFlags);\n     ssTx << tx;\n     return HexStr(ssTx.begin(), ssTx.end());\n }"
      },
      {
        "sha": "71971a76427b176f9879d3ea2ecc56aadc4bd661",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b",
        "patch": "@@ -380,6 +380,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-port=<port>\", strprintf(_(\"Listen for connections on <port> (default: %u or testnet: %u)\"), Params(CBaseChainParams::MAIN).GetDefaultPort(), Params(CBaseChainParams::TESTNET).GetDefaultPort()));\n     strUsage += HelpMessageOpt(\"-proxy=<ip:port>\", _(\"Connect through SOCKS5 proxy\"));\n     strUsage += HelpMessageOpt(\"-proxyrandomize\", strprintf(_(\"Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)\"), DEFAULT_PROXYRANDOMIZE));\n+    strUsage += HelpMessageOpt(\"-rpcserialversion\", strprintf(_(\"Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(>0) (default: %d)\"), DEFAULT_RPC_SERIALIZE_VERSION));\n     strUsage += HelpMessageOpt(\"-seednode=<ip>\", _(\"Connect to a node to retrieve peer addresses, and disconnect\"));\n     strUsage += HelpMessageOpt(\"-timeout=<n>\", strprintf(_(\"Specify connection timeout in milliseconds (minimum: 1, default: %d)\"), DEFAULT_CONNECT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-torcontrol=<ip>:<port>\", strprintf(_(\"Tor control port to use if onion listening enabled (default: %s)\"), DEFAULT_TOR_CONTROL));\n@@ -984,6 +985,9 @@ bool AppInitParameterInteraction()\n     if (GetBoolArg(\"-peerbloomfilters\", DEFAULT_PEERBLOOMFILTERS))\n         nLocalServices = ServiceFlags(nLocalServices | NODE_BLOOM);\n \n+    if (GetArg(\"-rpcserialversion\", DEFAULT_RPC_SERIALIZE_VERSION) < 0)\n+        return InitError(\"rpcserialversion must be non-negative.\");\n+\n     nMaxTipAge = GetArg(\"-maxtipage\", DEFAULT_MAX_TIP_AGE);\n \n     fEnableReplacement = GetBoolArg(\"-mempoolreplacement\", DEFAULT_ENABLE_REPLACEMENT);"
      },
      {
        "sha": "1139c2aa5cbaf7838fb66b1dd000cb554bb3b9bb",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b",
        "patch": "@@ -751,7 +751,7 @@ UniValue getblock(const JSONRPCRequest& request)\n \n     if (!fVerbose)\n     {\n-        CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION);\n+        CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n         ssBlock << block;\n         std::string strHex = HexStr(ssBlock.begin(), ssBlock.end());\n         return strHex;"
      },
      {
        "sha": "1229a00c5fab480abdd3e3cb93b25ae2a1e9d735",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b",
        "patch": "@@ -223,7 +223,7 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n     if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"No information available about transaction\");\n \n-    string strHex = EncodeHexTx(*tx);\n+    string strHex = EncodeHexTx(*tx, RPCSerializationFlags());\n \n     if (!fVerbose)\n         return strHex;"
      },
      {
        "sha": "212281939835c4731540b423e71e568381816c67",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b",
        "patch": "@@ -497,4 +497,12 @@ void RPCRunLater(const std::string& name, boost::function<void(void)> func, int6\n     deadlineTimers.emplace(name, std::unique_ptr<RPCTimerBase>(timerInterface->NewTimer(func, nSeconds*1000)));\n }\n \n+int RPCSerializationFlags()\n+{\n+    int flag = 0;\n+    if (GetArg(\"-rpcserialversion\", DEFAULT_RPC_SERIALIZE_VERSION) == 0)\n+        flag |= SERIALIZE_TRANSACTION_NO_WITNESS;\n+    return flag;\n+}\n+\n CRPCTable tableRPC;"
      },
      {
        "sha": "4fac68a51ff18cb7f15fb81399ca8b42ce071a48",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b",
        "patch": "@@ -19,6 +19,8 @@\n \n #include <univalue.h>\n \n+static const unsigned int DEFAULT_RPC_SERIALIZE_VERSION = 1;\n+\n class CRPCCommand;\n \n namespace RPCServer\n@@ -198,4 +200,7 @@ void StopRPC();\n std::string JSONRPCExecBatch(const UniValue& vReq);\n void RPCNotifyBlockChange(bool ibd, const CBlockIndex *);\n \n+// Retrieves any serialization flags requested in command line argument\n+int RPCSerializationFlags();\n+\n #endif // BITCOIN_RPCSERVER_H"
      },
      {
        "sha": "5a4fcc743cd24cb589358621411047e605c3e89e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b",
        "patch": "@@ -1792,7 +1792,7 @@ UniValue gettransaction(const JSONRPCRequest& request)\n     ListTransactions(wtx, \"*\", 0, false, details, filter);\n     entry.push_back(Pair(\"details\", details));\n \n-    string strHex = EncodeHexTx(static_cast<CTransaction>(wtx));\n+    string strHex = EncodeHexTx(static_cast<CTransaction>(wtx), RPCSerializationFlags());\n     entry.push_back(Pair(\"hex\", strHex));\n \n     return entry;"
      }
    ]
  },
  {
    "sha": "412bab22b23036962509d2655b68cccd726b6ba4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTJiYWIyMmIyMzAzNjk2MjUwOWQyNjU1YjY4Y2NjZDcyNmI2YmE0",
    "commit": {
      "author": {
        "name": "instagibbs",
        "email": "gsanders87@gmail.com",
        "date": "2016-11-22T20:47:07Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2016-12-05T12:43:22Z"
      },
      "message": "Adapt ZMQ/rest serialization to take rpcserialversion arg",
      "tree": {
        "sha": "62eadd8c5279b73c053b0704d5eae5ce7f2436f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/62eadd8c5279b73c053b0704d5eae5ce7f2436f4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/412bab22b23036962509d2655b68cccd726b6ba4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/412bab22b23036962509d2655b68cccd726b6ba4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/412bab22b23036962509d2655b68cccd726b6ba4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/412bab22b23036962509d2655b68cccd726b6ba4/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bc7ff8db99dbc28f8b2d7a22f4650fa5349cb23b"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "6b6b7401f6a3cfa8d004902f1ee023d5e05b8609",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/412bab22b23036962509d2655b68cccd726b6ba4/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/412bab22b23036962509d2655b68cccd726b6ba4/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=412bab22b23036962509d2655b68cccd726b6ba4",
        "patch": "@@ -228,7 +228,7 @@ static bool rest_block(HTTPRequest* req,\n             return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n     }\n \n-    CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION);\n+    CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n     ssBlock << block;\n \n     switch (rf) {\n@@ -368,7 +368,7 @@ static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\n     if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n         return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n \n-    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n+    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n     ssTx << tx;\n \n     switch (rf) {"
      },
      {
        "sha": "a11256dfd5b6b37531b462e7ed2041d582368adb",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/412bab22b23036962509d2655b68cccd726b6ba4/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/412bab22b23036962509d2655b68cccd726b6ba4/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=412bab22b23036962509d2655b68cccd726b6ba4",
        "patch": "@@ -7,6 +7,7 @@\n #include \"zmqpublishnotifier.h\"\n #include \"validation.h\"\n #include \"util.h\"\n+#include \"rpc/server.h\"\n \n static std::multimap<std::string, CZMQAbstractPublishNotifier*> mapPublishNotifiers;\n \n@@ -166,7 +167,7 @@ bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n     LogPrint(\"zmq\", \"zmq: Publish rawblock %s\\n\", pindex->GetBlockHash().GetHex());\n \n     const Consensus::Params& consensusParams = Params().GetConsensus();\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n     {\n         LOCK(cs_main);\n         CBlock block;\n@@ -186,7 +187,7 @@ bool CZMQPublishRawTransactionNotifier::NotifyTransaction(const CTransaction &tr\n {\n     uint256 hash = transaction.GetHash();\n     LogPrint(\"zmq\", \"zmq: Publish rawtx %s\\n\", hash.GetHex());\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n     ss << transaction;\n     return SendMessage(MSG_RAWTX, &(*ss.begin()), ss.size());\n }"
      }
    ]
  }
]