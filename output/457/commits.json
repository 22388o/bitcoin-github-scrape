[
  {
    "sha": "914dc01222c54206096cf5c066c834b27e61add0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MTRkYzAxMjIyYzU0MjA2MDk2Y2Y1YzA2NmM4MzRiMjdlNjFhZGQw",
    "commit": {
      "author": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2011-08-10T11:53:13Z"
      },
      "committer": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-05-25T05:27:24Z"
      },
      "message": "Use asynchronous I/O to handle RPC requests\n\nThis allows more flexibility in the RPC code, e.g. making it easier to\nhandle multiple simultaneous connections later on.\n\nCurrently asynchronous I/O is only used to listen for and accept\nincoming connections.  Asynchronous reading/writing is more involved.\n\nSigned-off-by: Giel van Schijndel <me@mortis.eu>",
      "tree": {
        "sha": "9a0cdf5c2cee9cc0636b8ebcaf902ad12fc92f08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9a0cdf5c2cee9cc0636b8ebcaf902ad12fc92f08"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/914dc01222c54206096cf5c066c834b27e61add0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/914dc01222c54206096cf5c066c834b27e61add0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/914dc01222c54206096cf5c066c834b27e61add0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/914dc01222c54206096cf5c066c834b27e61add0/comments",
    "author": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6b8a17119e30ddc5dd5b92ed77da49740c495ed6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b8a17119e30ddc5dd5b92ed77da49740c495ed6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6b8a17119e30ddc5dd5b92ed77da49740c495ed6"
      }
    ],
    "stats": {
      "total": 120,
      "additions": 82,
      "deletions": 38
    },
    "files": [
      {
        "sha": "efcb39d70d30a00ff53af6d0df87854b56affadb",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 82,
        "deletions": 38,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/914dc01222c54206096cf5c066c834b27e61add0/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/914dc01222c54206096cf5c066c834b27e61add0/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=914dc01222c54206096cf5c066c834b27e61add0",
        "patch": "@@ -14,13 +14,15 @@\n \n #undef printf\n #include <boost/asio.hpp>\n+#include <boost/bind.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/iostreams/concepts.hpp>\n #include <boost/iostreams/stream.hpp>\n #include <boost/algorithm/string.hpp>\n #include <boost/lexical_cast.hpp>\n #include <boost/asio/ssl.hpp> \n #include <boost/filesystem/fstream.hpp>\n+#include <boost/shared_ptr.hpp>\n typedef boost::asio::ssl::stream<boost::asio::ip::tcp::socket> SSLStream;\n \n #define printf OutputDebugStringF\n@@ -2641,6 +2643,75 @@ void ThreadRPCServer(void* parg)\n     printf(\"ThreadRPCServer exited\\n\");\n }\n \n+// Forward declaration required for RPCListen\n+static void RPCAcceptHandler(boost::shared_ptr<ip::tcp::acceptor> acceptor,\n+                             ssl::context& context,\n+                             bool fUseSSL,\n+                             AcceptedConnection* conn,\n+                             const boost::system::error_code& error);\n+\n+/**\n+ * Sets up I/O resources to accept and handle a new connection.\n+ */\n+static void RPCListen(boost::shared_ptr<ip::tcp::acceptor> acceptor,\n+                   ssl::context& context,\n+                   const bool fUseSSL)\n+{\n+\n+    // Accept connection\n+    AcceptedConnection* conn = new AcceptedConnection(acceptor->get_io_service(), context, fUseSSL);\n+\n+    acceptor->async_accept(\n+            conn->sslStream.lowest_layer(),\n+            conn->peer,\n+            boost::bind(&RPCAcceptHandler,\n+                acceptor,\n+                boost::ref(context),\n+                fUseSSL,\n+                conn,\n+                boost::asio::placeholders::error));\n+}\n+\n+/**\n+ * Accept and handle incoming connection.\n+ */\n+static void RPCAcceptHandler(boost::shared_ptr<ip::tcp::acceptor> acceptor,\n+                             ssl::context& context,\n+                             const bool fUseSSL,\n+                             AcceptedConnection* conn,\n+                             const boost::system::error_code& error)\n+{\n+    vnThreadsRunning[THREAD_RPCLISTENER]++;\n+\n+    // Immediately start accepting new connections\n+    RPCListen(acceptor, context, fUseSSL);\n+\n+    // TODO: Actually handle errors\n+    if (error)\n+    {\n+        delete conn;\n+    }\n+\n+    // Restrict callers by IP.  It is important to\n+    // do this before starting client thread, to filter out\n+    // certain DoS and misbehaving clients.\n+    else if (!ClientAllowed(conn->peer.address().to_string()))\n+    {\n+        // Only send a 403 if we're not using SSL to prevent a DoS during the SSL handshake.\n+        if (!fUseSSL)\n+            conn->stream << HTTPReply(403, \"\", false) << std::flush;\n+        delete conn;\n+    }\n+\n+    // start HTTP client thread\n+    else if (!CreateThread(ThreadRPCServer3, conn)) {\n+        printf(\"Failed to create RPC server client thread\\n\");\n+        delete conn;\n+    }\n+\n+    vnThreadsRunning[THREAD_RPCLISTENER]--;\n+}\n+\n void ThreadRPCServer2(void* parg)\n {\n     printf(\"ThreadRPCServer started\\n\");\n@@ -2670,18 +2741,18 @@ void ThreadRPCServer2(void* parg)\n         return;\n     }\n \n-    bool fUseSSL = GetBoolArg(\"-rpcssl\");\n+    const bool fUseSSL = GetBoolArg(\"-rpcssl\");\n     asio::ip::address bindAddress = mapArgs.count(\"-rpcallowip\") ? asio::ip::address_v4::any() : asio::ip::address_v4::loopback();\n \n     asio::io_service io_service;\n     ip::tcp::endpoint endpoint(bindAddress, GetArg(\"-rpcport\", 8332));\n-    ip::tcp::acceptor acceptor(io_service);\n+    boost::shared_ptr<ip::tcp::acceptor> acceptor(new ip::tcp::acceptor(io_service));\n     try\n     {\n-        acceptor.open(endpoint.protocol());\n-        acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));\n-        acceptor.bind(endpoint);\n-        acceptor.listen(socket_base::max_connections);\n+        acceptor->open(endpoint.protocol());\n+        acceptor->set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));\n+        acceptor->bind(endpoint);\n+        acceptor->listen(socket_base::max_connections);\n     }\n     catch(boost::system::system_error &e)\n     {\n@@ -2710,39 +2781,12 @@ void ThreadRPCServer2(void* parg)\n         SSL_CTX_set_cipher_list(context.impl(), strCiphers.c_str());\n     }\n \n-    loop\n-    {\n-        // Accept connection\n-        AcceptedConnection *conn =\n-                    new AcceptedConnection(io_service, context, fUseSSL);\n-\n-        vnThreadsRunning[THREAD_RPCLISTENER]--;\n-        acceptor.accept(conn->sslStream.lowest_layer(), conn->peer);\n-        vnThreadsRunning[THREAD_RPCLISTENER]++;\n-\n-        if (fShutdown)\n-        {\n-            delete conn;\n-            return;\n-        }\n-\n-        // Restrict callers by IP.  It is important to\n-        // do this before starting client thread, to filter out\n-        // certain DoS and misbehaving clients.\n-        if (!ClientAllowed(conn->peer.address().to_string()))\n-        {\n-            // Only send a 403 if we're not using SSL to prevent a DoS during the SSL handshake.\n-            if (!fUseSSL)\n-                conn->stream << HTTPReply(403, \"\", false) << std::flush;\n-            delete conn;\n-        }\n+    RPCListen(acceptor, context, fUseSSL);\n \n-        // start HTTP client thread\n-        else if (!CreateThread(ThreadRPCServer3, conn)) {\n-            printf(\"Failed to create RPC server client thread\\n\");\n-            delete conn;\n-        }\n-    }\n+    vnThreadsRunning[THREAD_RPCLISTENER]--;\n+    while (!fShutdown)\n+        io_service.run_one();\n+    vnThreadsRunning[THREAD_RPCLISTENER]++;\n }\n \n void ThreadRPCServer3(void* parg)"
      }
    ]
  },
  {
    "sha": "c1ecab818c3d26e49bb68111c31bd8bd68956e1e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMWVjYWI4MThjM2QyNmU0OWJiNjgxMTFjMzFiZDhiZDY4OTU2ZTFl",
    "commit": {
      "author": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2011-08-10T12:17:02Z"
      },
      "committer": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-05-25T05:27:24Z"
      },
      "message": "Add dual IPv4/IPv6 stack support to the RPC server\n\nThe RPC server now listens for, and handles, incoming connections on\nboth IPv4 as well as IPv6.\n\nIf available (and usable) it uses a dual IPv4/IPv6 socket on systems\nthat support it (e.g. Linux and BSDs) and falls back to separate\nIPv4/IPv6 sockets on systems that don't (e.g. Windows).\n\nSigned-off-by: Giel van Schijndel <me@mortis.eu>",
      "tree": {
        "sha": "9fc7bad0f3adf237beb6d9269f13e965638012d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9fc7bad0f3adf237beb6d9269f13e965638012d2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1ecab818c3d26e49bb68111c31bd8bd68956e1e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1ecab818c3d26e49bb68111c31bd8bd68956e1e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c1ecab818c3d26e49bb68111c31bd8bd68956e1e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1ecab818c3d26e49bb68111c31bd8bd68956e1e/comments",
    "author": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "914dc01222c54206096cf5c066c834b27e61add0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/914dc01222c54206096cf5c066c834b27e61add0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/914dc01222c54206096cf5c066c834b27e61add0"
      }
    ],
    "stats": {
      "total": 63,
      "additions": 44,
      "deletions": 19
    },
    "files": [
      {
        "sha": "293c3793de1cae2776be485e570d7f644653cde7",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 19,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1ecab818c3d26e49bb68111c31bd8bd68956e1e/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1ecab818c3d26e49bb68111c31bd8bd68956e1e/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=c1ecab818c3d26e49bb68111c31bd8bd68956e1e",
        "patch": "@@ -14,6 +14,7 @@\n \n #undef printf\n #include <boost/asio.hpp>\n+#include <boost/asio/ip/v6_only.hpp>\n #include <boost/bind.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/iostreams/concepts.hpp>\n@@ -2742,26 +2743,8 @@ void ThreadRPCServer2(void* parg)\n     }\n \n     const bool fUseSSL = GetBoolArg(\"-rpcssl\");\n-    asio::ip::address bindAddress = mapArgs.count(\"-rpcallowip\") ? asio::ip::address_v4::any() : asio::ip::address_v4::loopback();\n \n     asio::io_service io_service;\n-    ip::tcp::endpoint endpoint(bindAddress, GetArg(\"-rpcport\", 8332));\n-    boost::shared_ptr<ip::tcp::acceptor> acceptor(new ip::tcp::acceptor(io_service));\n-    try\n-    {\n-        acceptor->open(endpoint.protocol());\n-        acceptor->set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));\n-        acceptor->bind(endpoint);\n-        acceptor->listen(socket_base::max_connections);\n-    }\n-    catch(boost::system::system_error &e)\n-    {\n-        uiInterface.ThreadSafeMessageBox(strprintf(_(\"An error occured while setting up the RPC port %i for listening: %s\"), endpoint.port(), e.what()),\n-                             _(\"Error\"), CClientUIInterface::OK | CClientUIInterface::MODAL);\n-        uiInterface.QueueShutdown();\n-        return;\n-    }\n-\n     ssl::context context(io_service, ssl::context::sslv23);\n     if (fUseSSL)\n     {\n@@ -2781,7 +2764,49 @@ void ThreadRPCServer2(void* parg)\n         SSL_CTX_set_cipher_list(context.impl(), strCiphers.c_str());\n     }\n \n-    RPCListen(acceptor, context, fUseSSL);\n+    // Try a dual IPv6/IPv4 socket, falling back to separate IPv4 and IPv6 sockets\n+    const bool loopback = !mapArgs.count(\"-rpcallowip\");\n+    asio::ip::address bindAddress = loopback ? asio::ip::address_v6::loopback() : asio::ip::address_v6::any();\n+    ip::tcp::endpoint endpoint(bindAddress, GetArg(\"-rpcport\", 8332));\n+\n+    boost::shared_ptr<ip::tcp::acceptor> acceptor, acceptor4;\n+    try\n+    {\n+        acceptor.reset(new ip::tcp::acceptor(io_service));\n+        acceptor->open(endpoint.protocol());\n+        acceptor->set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));\n+\n+        // Try making the socket dual IPv6/IPv4 (if listening on the \"any\" address)\n+        boost::system::error_code v6_only_error;\n+        acceptor->set_option(boost::asio::ip::v6_only(loopback), v6_only_error);\n+\n+        acceptor->bind(endpoint);\n+        acceptor->listen(socket_base::max_connections);\n+\n+        RPCListen(acceptor, context, fUseSSL);\n+\n+        // If dual IPv6/IPv4 failed (or we're opening loopback interfaces only), open IPv4 separately\n+        if (loopback || v6_only_error)\n+        {\n+            bindAddress = loopback ? asio::ip::address_v4::loopback() : asio::ip::address_v4::any();\n+            endpoint.address(bindAddress);\n+\n+            acceptor4.reset(new ip::tcp::acceptor(io_service));\n+            acceptor4->open(endpoint.protocol());\n+            acceptor4->set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));\n+            acceptor4->bind(endpoint);\n+            acceptor4->listen(socket_base::max_connections);\n+\n+            RPCListen(acceptor4, context, fUseSSL);\n+        }\n+    }\n+    catch(boost::system::system_error &e)\n+    {\n+        uiInterface.ThreadSafeMessageBox(strprintf(_(\"An error occured while setting up the RPC port %i for listening: %s\"), endpoint.port(), e.what()),\n+                             _(\"Error\"), CClientUIInterface::OK | CClientUIInterface::MODAL);\n+        uiInterface.QueueShutdown();\n+        return;\n+    }\n \n     vnThreadsRunning[THREAD_RPCLISTENER]--;\n     while (!fShutdown)"
      }
    ]
  },
  {
    "sha": "43b6dafa6ed4abee14828333596f9c611d40e213",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0M2I2ZGFmYTZlZDRhYmVlMTQ4MjgzMzM1OTZmOWM2MTFkNDBlMjEz",
    "commit": {
      "author": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2011-08-10T12:21:43Z"
      },
      "committer": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-05-25T05:27:24Z"
      },
      "message": "Allow clients on the IPv6 loopback as well\n\nSigned-off-by: Giel van Schijndel <me@mortis.eu>",
      "tree": {
        "sha": "cf4c75977edf65e3eee9f609083c1eba73118938",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf4c75977edf65e3eee9f609083c1eba73118938"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43b6dafa6ed4abee14828333596f9c611d40e213",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43b6dafa6ed4abee14828333596f9c611d40e213",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/43b6dafa6ed4abee14828333596f9c611d40e213",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43b6dafa6ed4abee14828333596f9c611d40e213/comments",
    "author": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c1ecab818c3d26e49bb68111c31bd8bd68956e1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1ecab818c3d26e49bb68111c31bd8bd68956e1e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c1ecab818c3d26e49bb68111c31bd8bd68956e1e"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 12,
      "deletions": 3
    },
    "files": [
      {
        "sha": "08425b40efa839b565ddf912f85559c327307560",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43b6dafa6ed4abee14828333596f9c611d40e213/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43b6dafa6ed4abee14828333596f9c611d40e213/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=43b6dafa6ed4abee14828333596f9c611d40e213",
        "patch": "@@ -2548,10 +2548,19 @@ void ErrorReply(std::ostream& stream, const Object& objError, const Value& id)\n     stream << HTTPReply(nStatus, strReply, false) << std::flush;\n }\n \n-bool ClientAllowed(const string& strAddress)\n+bool ClientAllowed(const boost::asio::ip::address& address)\n {\n-    if (strAddress == asio::ip::address_v4::loopback().to_string())\n+    // Make sure that IPv4-compatible and IPv4-mapped IPv6 addresses are treated as IPv4 addresses\n+    if (address.is_v6()\n+     && (address.to_v6().is_v4_compatible()\n+      || address.to_v6().is_v4_mapped()))\n+        return ClientAllowed(address.to_v6().to_v4());\n+\n+    if (address == asio::ip::address_v4::loopback()\n+     || address == asio::ip::address_v6::loopback())\n         return true;\n+\n+    const string strAddress = address.to_string();\n     const vector<string>& vAllow = mapMultiArgs[\"-rpcallowip\"];\n     BOOST_FOREACH(string strAllow, vAllow)\n         if (WildcardMatch(strAddress, strAllow))\n@@ -2696,7 +2705,7 @@ static void RPCAcceptHandler(boost::shared_ptr<ip::tcp::acceptor> acceptor,\n     // Restrict callers by IP.  It is important to\n     // do this before starting client thread, to filter out\n     // certain DoS and misbehaving clients.\n-    else if (!ClientAllowed(conn->peer.address().to_string()))\n+    else if (!ClientAllowed(conn->peer.address()))\n     {\n         // Only send a 403 if we're not using SSL to prevent a DoS during the SSL handshake.\n         if (!fUseSSL)"
      }
    ]
  },
  {
    "sha": "a0780ba08ac456f8bcfb69e288e0a064b79b5423",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMDc4MGJhMDhhYzQ1NmY4YmNmYjY5ZTI4OGUwYTA2NGI3OWI1NDIz",
    "commit": {
      "author": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2011-08-10T13:07:46Z"
      },
      "committer": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-05-25T05:27:24Z"
      },
      "message": "Generalise RPC connection handling code to allow more listening sockets\n\nUsing this modification it should be relatively easy to, at a later\ntime, listen on multiple addresses (even Unix domain sockets should be\npossible).\n\nSigned-off-by: Giel van Schijndel <me@mortis.eu>",
      "tree": {
        "sha": "a7735a630958db619593e9f34ff613e440933239",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a7735a630958db619593e9f34ff613e440933239"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0780ba08ac456f8bcfb69e288e0a064b79b5423",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0780ba08ac456f8bcfb69e288e0a064b79b5423",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a0780ba08ac456f8bcfb69e288e0a064b79b5423",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0780ba08ac456f8bcfb69e288e0a064b79b5423/comments",
    "author": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "43b6dafa6ed4abee14828333596f9c611d40e213",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43b6dafa6ed4abee14828333596f9c611d40e213",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/43b6dafa6ed4abee14828333596f9c611d40e213"
      }
    ],
    "stats": {
      "total": 140,
      "additions": 97,
      "deletions": 43
    },
    "files": [
      {
        "sha": "8a278070cfce25e20392ede85d5da61f8b1feeac",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 97,
        "deletions": 43,
        "changes": 140,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0780ba08ac456f8bcfb69e288e0a064b79b5423/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0780ba08ac456f8bcfb69e288e0a064b79b5423/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=a0780ba08ac456f8bcfb69e288e0a064b79b5423",
        "patch": "@@ -17,14 +17,15 @@\n #include <boost/asio/ip/v6_only.hpp>\n #include <boost/bind.hpp>\n #include <boost/filesystem.hpp>\n+#include <boost/foreach.hpp>\n #include <boost/iostreams/concepts.hpp>\n #include <boost/iostreams/stream.hpp>\n #include <boost/algorithm/string.hpp>\n #include <boost/lexical_cast.hpp>\n #include <boost/asio/ssl.hpp> \n #include <boost/filesystem/fstream.hpp>\n #include <boost/shared_ptr.hpp>\n-typedef boost::asio::ssl::stream<boost::asio::ip::tcp::socket> SSLStream;\n+#include <list>\n \n #define printf OutputDebugStringF\n // MinGW 3.4.5 gets \"fatal error: had to relocate PCH\" if the json headers are\n@@ -2571,9 +2572,10 @@ bool ClientAllowed(const boost::asio::ip::address& address)\n //\n // IOStream device that speaks SSL but can also speak non-SSL\n //\n+template <typename Protocol>\n class SSLIOStreamDevice : public iostreams::device<iostreams::bidirectional> {\n public:\n-    SSLIOStreamDevice(SSLStream &streamIn, bool fUseSSLIn) : stream(streamIn)\n+    SSLIOStreamDevice(asio::ssl::stream<typename Protocol::socket> &streamIn, bool fUseSSLIn) : stream(streamIn)\n     {\n         fUseSSL = fUseSSLIn;\n         fNeedHandshake = fUseSSLIn;\n@@ -2617,21 +2619,54 @@ class SSLIOStreamDevice : public iostreams::device<iostreams::bidirectional> {\n private:\n     bool fNeedHandshake;\n     bool fUseSSL;\n-    SSLStream& stream;\n+    asio::ssl::stream<typename Protocol::socket>& stream;\n };\n \n class AcceptedConnection\n {\n-    public:\n-    SSLStream sslStream;\n-    SSLIOStreamDevice d;\n-    iostreams::stream<SSLIOStreamDevice> stream;\n+public:\n+    virtual ~AcceptedConnection() {}\n+\n+    virtual std::iostream& stream() = 0;\n+    virtual std::string peer_address_to_string() const = 0;\n+    virtual void close() = 0;\n+};\n \n-    ip::tcp::endpoint peer;\n+template <typename Protocol>\n+class AcceptedConnectionImpl : public AcceptedConnection\n+{\n+public:\n+    AcceptedConnectionImpl(\n+            asio::io_service& io_service,\n+            ssl::context &context,\n+            bool fUseSSL) :\n+        sslStream(io_service, context),\n+        _d(sslStream, fUseSSL),\n+        _stream(_d)\n+    {\n+    }\n+\n+    virtual std::iostream& stream()\n+    {\n+        return _stream;\n+    }\n+\n+    virtual std::string peer_address_to_string() const\n+    {\n+        return peer.address().to_string();\n+    }\n \n-    AcceptedConnection(asio::io_service &io_service, ssl::context &context,\n-     bool fUseSSL) : sslStream(io_service, context), d(sslStream, fUseSSL),\n-     stream(d) { ; }\n+    virtual void close()\n+    {\n+        _stream.close();\n+    }\n+\n+    typename Protocol::endpoint peer;\n+    asio::ssl::stream<typename Protocol::socket> sslStream;\n+\n+private:\n+    SSLIOStreamDevice<Protocol> _d;\n+    iostreams::stream< SSLIOStreamDevice<Protocol> > _stream;\n };\n \n void ThreadRPCServer(void* parg)\n@@ -2654,7 +2689,8 @@ void ThreadRPCServer(void* parg)\n }\n \n // Forward declaration required for RPCListen\n-static void RPCAcceptHandler(boost::shared_ptr<ip::tcp::acceptor> acceptor,\n+template <typename Protocol, typename SocketAcceptorService>\n+static void RPCAcceptHandler(boost::shared_ptr< basic_socket_acceptor<Protocol, SocketAcceptorService> > acceptor,\n                              ssl::context& context,\n                              bool fUseSSL,\n                              AcceptedConnection* conn,\n@@ -2663,18 +2699,19 @@ static void RPCAcceptHandler(boost::shared_ptr<ip::tcp::acceptor> acceptor,\n /**\n  * Sets up I/O resources to accept and handle a new connection.\n  */\n-static void RPCListen(boost::shared_ptr<ip::tcp::acceptor> acceptor,\n+template <typename Protocol, typename SocketAcceptorService>\n+static void RPCListen(boost::shared_ptr< basic_socket_acceptor<Protocol, SocketAcceptorService> > acceptor,\n                    ssl::context& context,\n                    const bool fUseSSL)\n {\n \n     // Accept connection\n-    AcceptedConnection* conn = new AcceptedConnection(acceptor->get_io_service(), context, fUseSSL);\n+    AcceptedConnectionImpl<Protocol>* conn = new AcceptedConnectionImpl<Protocol>(acceptor->get_io_service(), context, fUseSSL);\n \n     acceptor->async_accept(\n             conn->sslStream.lowest_layer(),\n             conn->peer,\n-            boost::bind(&RPCAcceptHandler,\n+            boost::bind(&RPCAcceptHandler<Protocol, SocketAcceptorService>,\n                 acceptor,\n                 boost::ref(context),\n                 fUseSSL,\n@@ -2685,7 +2722,8 @@ static void RPCListen(boost::shared_ptr<ip::tcp::acceptor> acceptor,\n /**\n  * Accept and handle incoming connection.\n  */\n-static void RPCAcceptHandler(boost::shared_ptr<ip::tcp::acceptor> acceptor,\n+template <typename Protocol, typename SocketAcceptorService>\n+static void RPCAcceptHandler(boost::shared_ptr< basic_socket_acceptor<Protocol, SocketAcceptorService> > acceptor,\n                              ssl::context& context,\n                              const bool fUseSSL,\n                              AcceptedConnection* conn,\n@@ -2696,6 +2734,8 @@ static void RPCAcceptHandler(boost::shared_ptr<ip::tcp::acceptor> acceptor,\n     // Immediately start accepting new connections\n     RPCListen(acceptor, context, fUseSSL);\n \n+    AcceptedConnectionImpl<ip::tcp>* tcp_conn = dynamic_cast< AcceptedConnectionImpl<ip::tcp>* >(conn);\n+\n     // TODO: Actually handle errors\n     if (error)\n     {\n@@ -2705,11 +2745,12 @@ static void RPCAcceptHandler(boost::shared_ptr<ip::tcp::acceptor> acceptor,\n     // Restrict callers by IP.  It is important to\n     // do this before starting client thread, to filter out\n     // certain DoS and misbehaving clients.\n-    else if (!ClientAllowed(conn->peer.address()))\n+    else if (tcp_conn\n+          && !ClientAllowed(tcp_conn->peer.address()))\n     {\n         // Only send a 403 if we're not using SSL to prevent a DoS during the SSL handshake.\n         if (!fUseSSL)\n-            conn->stream << HTTPReply(403, \"\", false) << std::flush;\n+            conn->stream() << HTTPReply(403, \"\", false) << std::flush;\n         delete conn;\n     }\n \n@@ -2778,35 +2819,35 @@ void ThreadRPCServer2(void* parg)\n     asio::ip::address bindAddress = loopback ? asio::ip::address_v6::loopback() : asio::ip::address_v6::any();\n     ip::tcp::endpoint endpoint(bindAddress, GetArg(\"-rpcport\", 8332));\n \n-    boost::shared_ptr<ip::tcp::acceptor> acceptor, acceptor4;\n+    std::list< boost::shared_ptr<ip::tcp::acceptor> > acceptors;\n     try\n     {\n-        acceptor.reset(new ip::tcp::acceptor(io_service));\n-        acceptor->open(endpoint.protocol());\n-        acceptor->set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));\n+        acceptors.push_back(boost::shared_ptr<ip::tcp::acceptor>(new ip::tcp::acceptor(io_service)));\n+        acceptors.back()->open(endpoint.protocol());\n+        acceptors.back()->set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));\n \n         // Try making the socket dual IPv6/IPv4 (if listening on the \"any\" address)\n         boost::system::error_code v6_only_error;\n-        acceptor->set_option(boost::asio::ip::v6_only(loopback), v6_only_error);\n+        acceptors.back()->set_option(boost::asio::ip::v6_only(loopback), v6_only_error);\n \n-        acceptor->bind(endpoint);\n-        acceptor->listen(socket_base::max_connections);\n+        acceptors.back()->bind(endpoint);\n+        acceptors.back()->listen(socket_base::max_connections);\n \n-        RPCListen(acceptor, context, fUseSSL);\n+        RPCListen(acceptors.back(), context, fUseSSL);\n \n         // If dual IPv6/IPv4 failed (or we're opening loopback interfaces only), open IPv4 separately\n         if (loopback || v6_only_error)\n         {\n             bindAddress = loopback ? asio::ip::address_v4::loopback() : asio::ip::address_v4::any();\n             endpoint.address(bindAddress);\n \n-            acceptor4.reset(new ip::tcp::acceptor(io_service));\n-            acceptor4->open(endpoint.protocol());\n-            acceptor4->set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));\n-            acceptor4->bind(endpoint);\n-            acceptor4->listen(socket_base::max_connections);\n+            acceptors.push_back(boost::shared_ptr<ip::tcp::acceptor>(new ip::tcp::acceptor(io_service)));\n+            acceptors.back()->open(endpoint.protocol());\n+            acceptors.back()->set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));\n+            acceptors.back()->bind(endpoint);\n+            acceptors.back()->listen(socket_base::max_connections);\n \n-            RPCListen(acceptor4, context, fUseSSL);\n+            RPCListen(acceptors.back(), context, fUseSSL);\n         }\n     }\n     catch(boost::system::system_error &e)\n@@ -2821,6 +2862,19 @@ void ThreadRPCServer2(void* parg)\n     while (!fShutdown)\n         io_service.run_one();\n     vnThreadsRunning[THREAD_RPCLISTENER]++;\n+\n+    // Terminate all outstanding accept-requests\n+    BOOST_FOREACH(boost::shared_ptr<ip::tcp::acceptor>& acceptor, acceptors)\n+    {\n+        acceptor->cancel();\n+        acceptor->close();\n+    }\n+    acceptors.clear();\n+\n+    // Handle any actions that are still in progress.\n+    vnThreadsRunning[THREAD_RPCLISTENER]--;\n+    io_service.run();\n+    vnThreadsRunning[THREAD_RPCLISTENER]++;\n }\n \n void ThreadRPCServer3(void* parg)\n@@ -2833,32 +2887,32 @@ void ThreadRPCServer3(void* parg)\n     loop {\n         if (fShutdown || !fRun)\n         {\n-            conn->stream.close();\n+            conn->close();\n             delete conn;\n             --vnThreadsRunning[THREAD_RPCHANDLER];\n             return;\n         }\n         map<string, string> mapHeaders;\n         string strRequest;\n \n-        ReadHTTP(conn->stream, mapHeaders, strRequest);\n+        ReadHTTP(conn->stream(), mapHeaders, strRequest);\n \n         // Check authorization\n         if (mapHeaders.count(\"authorization\") == 0)\n         {\n-            conn->stream << HTTPReply(401, \"\", false) << std::flush;\n+            conn->stream() << HTTPReply(401, \"\", false) << std::flush;\n             break;\n         }\n         if (!HTTPAuthorized(mapHeaders))\n         {\n-            printf(\"ThreadRPCServer incorrect password attempt from %s\\n\", conn->peer.address().to_string().c_str());\n+            printf(\"ThreadRPCServer incorrect password attempt from %s\\n\", conn->peer_address_to_string().c_str());\n             /* Deter brute-forcing short passwords.\n                If this results in a DOS the user really\n                shouldn't have their RPC port exposed.*/\n             if (mapArgs[\"-rpcpassword\"].size() < 20)\n                 Sleep(250);\n \n-            conn->stream << HTTPReply(401, \"\", false) << std::flush;\n+            conn->stream() << HTTPReply(401, \"\", false) << std::flush;\n             break;\n         }\n         if (mapHeaders[\"connection\"] == \"close\")\n@@ -2900,16 +2954,16 @@ void ThreadRPCServer3(void* parg)\n \n             // Send reply\n             string strReply = JSONRPCReply(result, Value::null, id);\n-            conn->stream << HTTPReply(200, strReply, fRun) << std::flush;\n+            conn->stream() << HTTPReply(200, strReply, fRun) << std::flush;\n         }\n         catch (Object& objError)\n         {\n-            ErrorReply(conn->stream, objError, id);\n+            ErrorReply(conn->stream(), objError, id);\n             break;\n         }\n         catch (std::exception& e)\n         {\n-            ErrorReply(conn->stream, JSONRPCError(-32700, e.what()), id);\n+            ErrorReply(conn->stream(), JSONRPCError(-32700, e.what()), id);\n             break;\n         }\n     }\n@@ -2961,9 +3015,9 @@ Object CallRPC(const string& strMethod, const Array& params)\n     asio::io_service io_service;\n     ssl::context context(io_service, ssl::context::sslv23);\n     context.set_options(ssl::context::no_sslv2);\n-    SSLStream sslStream(io_service, context);\n-    SSLIOStreamDevice d(sslStream, fUseSSL);\n-    iostreams::stream<SSLIOStreamDevice> stream(d);\n+    asio::ssl::stream<asio::ip::tcp::socket> sslStream(io_service, context);\n+    SSLIOStreamDevice<asio::ip::tcp> d(sslStream, fUseSSL);\n+    iostreams::stream< SSLIOStreamDevice<asio::ip::tcp> > stream(d);\n     if (!d.connect(GetArg(\"-rpcconnect\", \"127.0.0.1\"), GetArg(\"-rpcport\", \"8332\")))\n         throw runtime_error(\"couldn't connect to server\");\n "
      }
    ]
  },
  {
    "sha": "7cc2ceae09d7b36f9054e8f57c1fa7ba87e21171",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Y2MyY2VhZTA5ZDdiMzZmOTA1NGU4ZjU3YzFmYTdiYTg3ZTIxMTcx",
    "commit": {
      "author": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-05-20T15:46:44Z"
      },
      "committer": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-05-25T05:27:24Z"
      },
      "message": "Allow all addresses on the loopback subnet (127.0.0.0/8) not just 127.0.0.1\n\nSigned-off-by: Giel van Schijndel <me@mortis.eu>",
      "tree": {
        "sha": "4de8d009524fbe845ad0149afd71a1425bc22759",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4de8d009524fbe845ad0149afd71a1425bc22759"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7cc2ceae09d7b36f9054e8f57c1fa7ba87e21171",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cc2ceae09d7b36f9054e8f57c1fa7ba87e21171",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7cc2ceae09d7b36f9054e8f57c1fa7ba87e21171",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cc2ceae09d7b36f9054e8f57c1fa7ba87e21171/comments",
    "author": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a0780ba08ac456f8bcfb69e288e0a064b79b5423",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0780ba08ac456f8bcfb69e288e0a064b79b5423",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a0780ba08ac456f8bcfb69e288e0a064b79b5423"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "bd7cb3ef440d27da9027f2bcc19c200da28168a4",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cc2ceae09d7b36f9054e8f57c1fa7ba87e21171/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cc2ceae09d7b36f9054e8f57c1fa7ba87e21171/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=7cc2ceae09d7b36f9054e8f57c1fa7ba87e21171",
        "patch": "@@ -2558,7 +2558,10 @@ bool ClientAllowed(const boost::asio::ip::address& address)\n         return ClientAllowed(address.to_v6().to_v4());\n \n     if (address == asio::ip::address_v4::loopback()\n-     || address == asio::ip::address_v6::loopback())\n+     || address == asio::ip::address_v6::loopback()\n+     || (address.is_v4()\n+         // Chech whether IPv4 addresses match 127.0.0.0/8 (loopback subnet)\n+      && (address.to_v4().to_ulong() & 0xff000000) == 0x7f000000))\n         return true;\n \n     const string strAddress = address.to_string();"
      }
    ]
  },
  {
    "sha": "fbf9df2ea32528c71b58160283b4eb2c52e30ccb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYmY5ZGYyZWEzMjUyOGM3MWI1ODE2MDI4M2I0ZWIyYzUyZTMwY2Ni",
    "commit": {
      "author": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-05-20T18:27:53Z"
      },
      "committer": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-05-25T05:27:25Z"
      },
      "message": "Use the QueueShutdown signal to stop accepting new RPC connections\n\nSigned-off-by: Giel van Schijndel <me@mortis.eu>",
      "tree": {
        "sha": "def12ac38eb690aa16784a7e3f344917a139253c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/def12ac38eb690aa16784a7e3f344917a139253c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbf9df2ea32528c71b58160283b4eb2c52e30ccb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbf9df2ea32528c71b58160283b4eb2c52e30ccb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fbf9df2ea32528c71b58160283b4eb2c52e30ccb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbf9df2ea32528c71b58160283b4eb2c52e30ccb/comments",
    "author": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7cc2ceae09d7b36f9054e8f57c1fa7ba87e21171",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cc2ceae09d7b36f9054e8f57c1fa7ba87e21171",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7cc2ceae09d7b36f9054e8f57c1fa7ba87e21171"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "9e785a3e376574177b8eb28ddc55889cee00637e",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbf9df2ea32528c71b58160283b4eb2c52e30ccb/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbf9df2ea32528c71b58160283b4eb2c52e30ccb/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=fbf9df2ea32528c71b58160283b4eb2c52e30ccb",
        "patch": "@@ -2798,6 +2798,12 @@ void ThreadRPCServer2(void* parg)\n     const bool fUseSSL = GetBoolArg(\"-rpcssl\");\n \n     asio::io_service io_service;\n+\n+    // Make sure that we'll get stopped when the application shuts down\n+    boost::signals2::scoped_connection rpc_listen_thread_stop(\n+            uiInterface.QueueShutdown.connect(boost::bind(\n+                &asio::io_service::stop, &io_service)));\n+\n     ssl::context context(io_service, ssl::context::sslv23);\n     if (fUseSSL)\n     {\n@@ -2862,8 +2868,7 @@ void ThreadRPCServer2(void* parg)\n     }\n \n     vnThreadsRunning[THREAD_RPCLISTENER]--;\n-    while (!fShutdown)\n-        io_service.run_one();\n+    io_service.run();\n     vnThreadsRunning[THREAD_RPCLISTENER]++;\n \n     // Terminate all outstanding accept-requests\n@@ -2873,11 +2878,6 @@ void ThreadRPCServer2(void* parg)\n         acceptor->close();\n     }\n     acceptors.clear();\n-\n-    // Handle any actions that are still in progress.\n-    vnThreadsRunning[THREAD_RPCLISTENER]--;\n-    io_service.run();\n-    vnThreadsRunning[THREAD_RPCLISTENER]++;\n }\n \n void ThreadRPCServer3(void* parg)"
      }
    ]
  },
  {
    "sha": "07368a9e3c60bbef8452501d34bb8d3688cbca13",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzM2OGE5ZTNjNjBiYmVmODQ1MjUwMWQzNGJiOGQzNjg4Y2JjYTEz",
    "commit": {
      "author": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-06-17T12:30:37Z"
      },
      "committer": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-06-17T12:30:37Z"
      },
      "message": "Merge branch 'master' into async-ipv6-rpc\n\nConflicts:\n\tsrc/bitcoinrpc.cpp\n\nSigned-off-by: Giel van Schijndel <me@mortis.eu>",
      "tree": {
        "sha": "963f2e56176451bfeb84e54d14bf726388407b7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/963f2e56176451bfeb84e54d14bf726388407b7d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07368a9e3c60bbef8452501d34bb8d3688cbca13",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07368a9e3c60bbef8452501d34bb8d3688cbca13",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/07368a9e3c60bbef8452501d34bb8d3688cbca13",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07368a9e3c60bbef8452501d34bb8d3688cbca13/comments",
    "author": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fbf9df2ea32528c71b58160283b4eb2c52e30ccb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbf9df2ea32528c71b58160283b4eb2c52e30ccb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fbf9df2ea32528c71b58160283b4eb2c52e30ccb"
      },
      {
        "sha": "fab7858a350d4650686b3aa07bd6277ce7c9685f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab7858a350d4650686b3aa07bd6277ce7c9685f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fab7858a350d4650686b3aa07bd6277ce7c9685f"
      }
    ],
    "stats": {
      "total": 60532,
      "additions": 38456,
      "deletions": 22076
    },
    "files": [
      {
        "sha": "f1ebec6bccab284e7e297afbc413179cd55f7d33",
        "filename": "bitcoin-qt.pro",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -234,7 +234,8 @@ FORMS += \\\n     src/qt/forms/sendcoinsentry.ui \\\n     src/qt/forms/askpassphrasedialog.ui \\\n     src/qt/forms/rpcconsole.ui \\\n-    src/qt/forms/verifymessagedialog.ui\n+    src/qt/forms/verifymessagedialog.ui \\\n+    src/qt/forms/optionsdialog.ui\n \n contains(USE_QRCODE, 1) {\n HEADERS += src/qt/qrcodedialog.h"
      },
      {
        "sha": "dd6c1ce8198e9eeb789d4f4269dab17767261a7c",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "added",
        "additions": 115,
        "deletions": 0,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -0,0 +1,115 @@\n+# bash programmable completion for bitcoind(1)\n+# Copyright (c) 2012 Christian von Roques <roques@mti.ag>\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+have bitcoind && {\n+\n+# call $bitcoind for RPC\n+_bitcoin_rpc() {\n+    # determine already specified args necessary for RPC\n+    local rpcargs=()\n+    for i in ${COMP_LINE}; do\n+        case \"$i\" in\n+            -conf=*|-proxy*|-rpc*)\n+                rpcargs=( \"${rpcargs[@]}\" \"$i\" )\n+                ;;\n+        esac\n+    done\n+    $bitcoind \"${rpcargs[@]}\" \"$@\"\n+}\n+\n+# Add bitcoin accounts to COMPREPLY\n+_bitcoin_accounts() {\n+    local accounts\n+    accounts=$(_bitcoin_rpc listaccounts | awk '/\".*\"/ { a=$1; gsub(/\"/, \"\", a); print a}')\n+    COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n+}\n+\n+_bitcoind() {\n+    local cur prev words=() cword\n+    local bitcoind\n+\n+    # save and use original argument to invoke bitcoind\n+    # bitcoind might not be in $PATH\n+    bitcoind=\"$1\"\n+\n+    COMPREPLY=()\n+    _get_comp_words_by_ref -n = cur prev words cword\n+\n+    if ((cword > 2)); then\n+        case ${words[cword-2]} in\n+            listreceivedbyaccount|listreceivedbyaddress)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            move|setaccount)\n+                _bitcoin_accounts\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    case \"$prev\" in\n+        backupwallet)\n+            _filedir\n+            return 0\n+            ;;\n+        setgenerate)\n+            COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+            return 0\n+            ;;\n+        getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n+            _bitcoin_accounts\n+            return 0\n+            ;;\n+    esac\n+\n+    case \"$cur\" in\n+        -conf=*|-pid=*|-rpcsslcertificatechainfile=*|-rpcsslprivatekeyfile=*)\n+            cur=\"${cur#*=}\"\n+            _filedir\n+            return 0\n+            ;;\n+        -datadir=*)\n+            cur=\"${cur#*=}\"\n+            _filedir -d\n+            return 0\n+            ;;\n+        -*=*)\t# prevent nonsense completions\n+            return 0\n+            ;;\n+        *)\n+            local helpopts commands\n+\n+            # only parse --help if senseful\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n+                helpopts=$($bitcoind --help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+            fi\n+\n+            # only parse help if senseful\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n+                commands=$(_bitcoin_rpc help 2>/dev/null | awk '{ print $1; }')\n+            fi\n+\n+            COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n+\n+            # Prevent space if an argument is desired\n+            if [[ $COMPREPLY == *= ]]; then\n+                compopt -o nospace\n+            fi\n+            return 0\n+            ;;\n+    esac\n+}\n+\n+complete -F _bitcoind bitcoind\n+}\n+\n+# Local variables:\n+# mode: shell-script\n+# sh-basic-offset: 4\n+# sh-indent-comment: t\n+# indent-tabs-mode: nil\n+# End:\n+# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "f2eac1b1abb3b0a8be15476970c1b848f08f1eca",
        "filename": "contrib/debian/bin/bitcoin-qt",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbf9df2ea32528c71b58160283b4eb2c52e30ccb/contrib/debian/bin/bitcoin-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbf9df2ea32528c71b58160283b4eb2c52e30ccb/contrib/debian/bin/bitcoin-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bin/bitcoin-qt?ref=fbf9df2ea32528c71b58160283b4eb2c52e30ccb",
        "patch": "@@ -1,16 +0,0 @@\n-#!/bin/sh\n-\n-set -e\n-\n-umask 077\n-\n-basedir=~/.bitcoin\n-dbfile=\"$basedir/DB_CONFIG\"\n-cfgfile=\"$basedir/bitcoin.conf\"\n-\n-[ -e \"$basedir\" ] || mkdir \"$basedir\"\n-\n-# Bitcoin does not clean up DB log files by default\n-[ -e \"$dbfile\" ] || echo 'set_flags DB_LOG_AUTOREMOVE' > \"$dbfile\"\n-\n-exec /usr/lib/bitcoin/bitcoin-qt \"$@\""
      },
      {
        "sha": "a2f55a9138afc9feb7117ffb51cb9dfe0cd81acd",
        "filename": "contrib/debian/bin/bitcoind",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/debian/bin/bitcoind",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/debian/bin/bitcoind",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bin/bitcoind?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -5,14 +5,10 @@ set -e\n umask 077\n \n basedir=~/.bitcoin\n-dbfile=\"$basedir/DB_CONFIG\"\n cfgfile=\"$basedir/bitcoin.conf\"\n \n [ -e \"$basedir\" ] || mkdir \"$basedir\"\n \n [ -e \"$cfgfile\" ] || perl -le 'print\"rpcpassword=\",map{(a..z,A..Z,0..9)[rand 62]}0..9' > \"$cfgfile\"\n \n-# Bitcoin does not clean up DB log files by default\n-[ -e \"$dbfile\" ] || echo 'set_flags DB_LOG_AUTOREMOVE' > \"$dbfile\"\n-\n exec /usr/lib/bitcoin/bitcoind \"$@\""
      },
      {
        "sha": "ba407134e798448e1d7198879867e874a32e8cae",
        "filename": "contrib/debian/bitcoin-qt.install",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/debian/bitcoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/debian/bitcoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.install?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -1,5 +1,4 @@\n-debian/bin/bitcoin-qt usr/bin\n-bitcoin-qt usr/lib/bitcoin\n+bitcoin-qt usr/bin\n share/pixmaps/bitcoin32.xpm usr/share/pixmaps\n share/pixmaps/bitcoin80.xpm usr/share/pixmaps\n debian/bitcoin-qt.desktop usr/share/applications"
      },
      {
        "sha": "0f84707b66cb7c063a29df2ae67b8325e34da679",
        "filename": "contrib/debian/bitcoind.bash-completion",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/debian/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/debian/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.bash-completion?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -0,0 +1 @@\n+contrib/bitcoind.bash-completion\tbitcoind"
      },
      {
        "sha": "773da6b54ff3e3b3f1af9155b6aa87afd38e4ff8",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -1,3 +1,15 @@\n+bitcoin (0.6.2-natty1) natty; urgency=low\n+\n+  * Update package description and launch scripts.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Sat, 2 Jun 2012 16:41:00 +0200\n+\n+bitcoin (0.6.2-natty0) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Tue, 8 May 2012 16:27:00 -0500\n+\n bitcoin (0.6.1-natty0) natty; urgency=low\n \n   * New upstream release."
      },
      {
        "sha": "4425e716d8dfd7ca32683606336238a9408ee213",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -5,6 +5,7 @@ Maintainer: Jonas Smedegaard <dr@jones.dk>\n Uploaders: Micah Anderson <micah@debian.org>\n Build-Depends: debhelper,\n  devscripts,\n+ bash-completion,\n  libboost-system-dev (>> 1.35) | libboost-system1.35-dev,\n  libdb4.8++-dev,\n  libssl-dev,\n@@ -35,7 +36,7 @@ Description: peer-to-peer network based digital currency - daemon\n  By default connects to an IRC network to discover other peers.\n  .\n  Full transaction history is stored locally at each client.  This\n- requires 150+ MB of space, slowly growing.\n+ requires 2+ GB of space, slowly growing.\n  .\n  This package provides bitcoind, a combined daemon and CLI tool to\n  interact with the daemon.\n@@ -53,6 +54,6 @@ Description: peer-to-peer network based digital currency - QT GUI\n  By default connects to an IRC network to discover other peers.\n  .\n  Full transaction history is stored locally at each client.  This\n- requires 150+ MB of space, slowly growing.\n+ requires 2+ GB of space, slowly growing.\n  .\n  This package provides bitcoin-qt, a GUI for Bitcoin based on QT."
      },
      {
        "sha": "98bb2bba1cccab3ab4b3f5a8cb39f65085353c99",
        "filename": "contrib/debian/rules",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -9,7 +9,7 @@ DEB_INSTALL_EXAMPLES_bitcoind += debian/examples/*\n DEB_INSTALL_MANPAGES_bitcoind += debian/manpages/*\n \n %:\n-\tdh $@\n+\tdh --with bash-completion $@\n \n override_dh_auto_build:\n \tcd src; $(MAKE) -f makefile.unix bitcoind"
      },
      {
        "sha": "aef614d0caaf85b4708fc34f8fa51e3c16c6b4cc",
        "filename": "contrib/gitian-downloader/linux-download-config",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/gitian-downloader/linux-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/gitian-downloader/linux-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/linux-download-config?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -31,7 +31,7 @@ signers:\n     weight: 40\n     name: \"Gavin Andresen\"\n     key: gavinandresen\n-  71A3B16735405025D447E8F274810B012346C9A6\n+  71A3B16735405025D447E8F274810B012346C9A6:\n     weight: 40\n     name: \"Wladimir J. van der Laan\"\n     key: laanwj"
      },
      {
        "sha": "0f7032e6438c9529c58837f765497629ee03b462",
        "filename": "contrib/gitian-downloader/win32-download-config",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/gitian-downloader/win32-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/contrib/gitian-downloader/win32-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/win32-download-config?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -31,7 +31,7 @@ signers:\n     weight: 40\n     name: \"Gavin Andresen\"\n     key: gavinandresen\n-  71A3B16735405025D447E8F274810B012346C9A6\n+  71A3B16735405025D447E8F274810B012346C9A6:\n     weight: 40\n     name: \"Wladimir J. van der Laan\"\n     key: laanwj"
      },
      {
        "sha": "73ea81275fbb99fdb7d3b4bb35a7c518d752b8d8",
        "filename": "doc/build-msw.txt",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/doc/build-msw.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/doc/build-msw.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-msw.txt?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -24,7 +24,7 @@ Dependencies\n Libraries you need to download separately and build:\n \n                 default path               download\n-OpenSSL         \\openssl-1.0.1b-mgw        http://www.openssl.org/source/\n+OpenSSL         \\openssl-1.0.1d-mgw        http://www.openssl.org/source/\n Berkeley DB     \\db-4.8.30.NC-mgw          http://www.oracle.com/technology/software/products/berkeley-db/index.html\n Boost           \\boost-1.47.0-mgw          http://www.boost.org/users/download/\n miniupnpc       \\miniupnpc-1.6-mgw         http://miniupnp.tuxfamily.org/files/\n@@ -36,7 +36,7 @@ Boost          MIT-like license\n miniupnpc      New (3-clause) BSD license\n \n Versions used in this release:\n-OpenSSL      1.0.1b\n+OpenSSL      1.0.1d\n Berkeley DB  4.8.30.NC\n Boost        1.47.0\n miniupnpc    1.6\n@@ -48,7 +48,7 @@ MSYS shell:\n un-tar sources with MSYS 'tar xfz' to avoid issue with symlinks (OpenSSL ticket 2377)\n change 'MAKE' env. variable from 'C:\\MinGW32\\bin\\mingw32-make.exe' to '/c/MinGW32/bin/mingw32-make.exe'\n \n-cd /c/openssl-1.0.1b-mgw\n+cd /c/openssl-1.0.1d-mgw\n ./config\n make\n "
      },
      {
        "sha": "9033301ab098049fc49e3f5a487afbefc2ac60bc",
        "filename": "doc/build-unix.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/doc/build-unix.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/doc/build-unix.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.txt?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -33,7 +33,7 @@ Dependencies\n miniupnpc may be used for UPnP port mapping.  It can be downloaded from\n http://miniupnp.tuxfamily.org/files/.  UPnP support is compiled in and\n turned off by default.  Set USE_UPNP to a different value to control this:\n- USE_UPNP=     No UPnP support - miniupnp not required\n+ USE_UPNP=-    No UPnP support - miniupnp not required\n  USE_UPNP=0    (the default) UPnP support turned off by default at runtime\n  USE_UPNP=1    UPnP support turned on by default at runtime\n "
      },
      {
        "sha": "59488a7bfe0dea1ff2cd4a2616a6f642c3489029",
        "filename": "doc/release-process.txt",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/doc/release-process.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/doc/release-process.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.txt?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -99,6 +99,8 @@\n \n * update wiki download links\n \n+* update wiki changelog: https://en.bitcoin.it/wiki/Changelog\n+\n * Commit your signature to gitian.sigs:\n   pushd gitian.sigs\n   git add ${VERSION}/${SIGNER}"
      },
      {
        "sha": "e7f215188e79c97c82c15c952218a07a5c961bf6",
        "filename": "doc/unit-tests.txt",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/doc/unit-tests.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/doc/unit-tests.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/unit-tests.txt?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -0,0 +1,33 @@\n+Compiling/runing bitcoind unit tests\n+------------------------------------\n+\n+bitcoind unit tests are in the src/test/ directory; they\n+use the Boost::Test unit-testing framework.\n+\n+To compile and run the tests:\n+cd src\n+make -f makefile.unix test_bitcoin  # Replace makefile.unix if you're not on unix\n+./test_bitcoin   # Runs the unit tests\n+\n+If all tests succeed the last line of output will be:\n+*** No errors detected\n+\n+To add more tests, add BOOST_AUTO_TEST_CASE's to the existing\n+.cpp files in the test/ directory or add new .cpp files that\n+implement new BOOST_AUTO_TEST_SUITE's (the makefiles are\n+set up to add test/*.cpp to test_bitcoin automatically).\n+\n+\n+Compiling/running Bitcoin-Qt unit tests\n+---------------------------------------\n+\n+Bitcoin-Qt unit tests are in the src/qt/test/ directory; they\n+use the Qt unit-testing framework.\n+\n+To compile and run the tests:\n+qmake bitcoin-qt.pro BITCOIN_QT_TEST=1\n+make\n+./bitcoin-qt_test\n+\n+To add more tests, add them to the src/qt/test/ directory,\n+the src/qt/test/test_main.cpp file, and bitcoin-qt.pro."
      },
      {
        "sha": "1267b1856ab889152e03bc57331e509e1bd5639e",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -5,6 +5,7 @@\n '''\n from subprocess import Popen, PIPE\n import glob\n+import operator\n \n OUT_CPP=\"src/qt/bitcoinstrings.cpp\"\n EMPTY=['\"\"']\n@@ -62,7 +63,8 @@ def parse_po(text):\n #define UNUSED\n #endif\n \"\"\")\n-f.write('static const char UNUSED *bitcoin_strings[] = {')\n+f.write('static const char UNUSED *bitcoin_strings[] = {\\n')\n+messages.sort(key=operator.itemgetter(0))\n for (msgid, msgstr) in messages:\n     if msgid != EMPTY:\n         f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", %s),\\n' % ('\\n'.join(msgid)))"
      },
      {
        "sha": "ddeabc48c5ae2541f1c979743bb07dfbdded62ea",
        "filename": "src/allocators.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/allocators.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/allocators.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/allocators.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -117,7 +117,6 @@ struct zero_after_free_allocator : public std::allocator<T>\n };\n \n // This is exactly like std::string, but with a custom allocator.\n-// (secure_allocator<> is defined in serialize.h)\n typedef std::basic_string<char, std::char_traits<char>, secure_allocator<char> > SecureString;\n \n #endif"
      },
      {
        "sha": "b492cd683c0a8e2fa99fbe295252a4009c378c0d",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 71,
        "deletions": 30,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -19,6 +19,7 @@\n #include <vector>\n #include \"bignum.h\"\n #include \"key.h\"\n+#include \"script.h\"\n \n static const char* pszBase58 = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n \n@@ -258,6 +259,18 @@ class CBase58Data\n  * Script-hash-addresses have version 5 (or 196 testnet).\n  * The data vector contains RIPEMD160(SHA256(cscript)), where cscript is the serialized redemption script.\n  */\n+class CBitcoinAddress;\n+class CBitcoinAddressVisitor : public boost::static_visitor<bool>\n+{\n+private:\n+    CBitcoinAddress *addr;\n+public:\n+    CBitcoinAddressVisitor(CBitcoinAddress *addrIn) : addr(addrIn) { }\n+    bool operator()(const CKeyID &id) const;\n+    bool operator()(const CScriptID &id) const;\n+    bool operator()(const CNoDestination &no) const;\n+};\n+\n class CBitcoinAddress : public CBase58Data\n {\n public:\n@@ -269,21 +282,19 @@ class CBitcoinAddress : public CBase58Data\n         SCRIPT_ADDRESS_TEST = 196,\n     };\n \n-    bool SetHash160(const uint160& hash160)\n-    {\n-        SetData(fTestNet ? PUBKEY_ADDRESS_TEST : PUBKEY_ADDRESS, &hash160, 20);\n+    bool Set(const CKeyID &id) {\n+        SetData(fTestNet ? PUBKEY_ADDRESS_TEST : PUBKEY_ADDRESS, &id, 20);\n         return true;\n     }\n \n-    void SetPubKey(const std::vector<unsigned char>& vchPubKey)\n-    {\n-        SetHash160(Hash160(vchPubKey));\n+    bool Set(const CScriptID &id) {\n+        SetData(fTestNet ? SCRIPT_ADDRESS_TEST : SCRIPT_ADDRESS, &id, 20);\n+        return true;\n     }\n \n-    bool SetScriptHash160(const uint160& hash160)\n+    bool Set(const CTxDestination &dest)\n     {\n-        SetData(fTestNet ? SCRIPT_ADDRESS_TEST : SCRIPT_ADDRESS, &hash160, 20);\n-        return true;\n+        return boost::apply_visitor(CBitcoinAddressVisitor(this), dest);\n     }\n \n     bool IsValid() const\n@@ -315,27 +326,14 @@ class CBitcoinAddress : public CBase58Data\n         }\n         return fExpectTestNet == fTestNet && vchData.size() == nExpectedSize;\n     }\n-    bool IsScript() const\n-    {\n-        if (!IsValid())\n-            return false;\n-        if (fTestNet)\n-            return nVersion == SCRIPT_ADDRESS_TEST;\n-        return nVersion == SCRIPT_ADDRESS;\n-    }\n \n     CBitcoinAddress()\n     {\n     }\n \n-    CBitcoinAddress(uint160 hash160In)\n-    {\n-        SetHash160(hash160In);\n-    }\n-\n-    CBitcoinAddress(const std::vector<unsigned char>& vchPubKey)\n+    CBitcoinAddress(const CTxDestination &dest)\n     {\n-        SetPubKey(vchPubKey);\n+        Set(dest);\n     }\n \n     CBitcoinAddress(const std::string& strAddress)\n@@ -348,15 +346,58 @@ class CBitcoinAddress : public CBase58Data\n         SetString(pszAddress);\n     }\n \n-    uint160 GetHash160() const\n-    {\n-        assert(vchData.size() == 20);\n-        uint160 hash160;\n-        memcpy(&hash160, &vchData[0], 20);\n-        return hash160;\n+    CTxDestination Get() const {\n+        if (!IsValid())\n+            return CNoDestination();\n+        switch (nVersion) {\n+        case PUBKEY_ADDRESS:\n+        case PUBKEY_ADDRESS_TEST: {\n+            uint160 id;\n+            memcpy(&id, &vchData[0], 20);\n+            return CKeyID(id);\n+        }\n+        case SCRIPT_ADDRESS:\n+        case SCRIPT_ADDRESS_TEST: {\n+            uint160 id;\n+            memcpy(&id, &vchData[0], 20);\n+            return CScriptID(id);\n+        }\n+        }\n+        return CNoDestination();\n+    }\n+\n+    bool GetKeyID(CKeyID &keyID) const {\n+        if (!IsValid())\n+            return false;\n+        switch (nVersion) {\n+        case PUBKEY_ADDRESS:\n+        case PUBKEY_ADDRESS_TEST: {\n+            uint160 id;\n+            memcpy(&id, &vchData[0], 20);\n+            keyID = CKeyID(id);\n+            return true;\n+        }\n+        default: return false;\n+        }\n+    }\n+\n+    bool IsScript() const {\n+        if (!IsValid())\n+            return false;\n+        switch (nVersion) {\n+        case SCRIPT_ADDRESS:\n+        case SCRIPT_ADDRESS_TEST: {\n+            return true;\n+        }\n+        default: return false;\n+        }\n     }\n };\n \n+bool inline CBitcoinAddressVisitor::operator()(const CKeyID &id) const         { return addr->Set(id); }\n+bool inline CBitcoinAddressVisitor::operator()(const CScriptID &id) const      { return addr->Set(id); }\n+bool inline CBitcoinAddressVisitor::operator()(const CNoDestination &id) const { return false; }\n+\n /** A base58-encoded secret key */\n class CBitcoinSecret : public CBase58Data\n {"
      },
      {
        "sha": "01142ab7cdbdb4f267e6e40acb5668e12e7c73d7",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 133,
        "deletions": 129,
        "changes": 262,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -10,6 +10,7 @@\n #include \"net.h\"\n #include \"init.h\"\n #include \"ui_interface.h\"\n+#include \"base58.h\"\n #include \"bitcoinrpc.h\"\n \n #undef printf\n@@ -22,7 +23,7 @@\n #include <boost/iostreams/stream.hpp>\n #include <boost/algorithm/string.hpp>\n #include <boost/lexical_cast.hpp>\n-#include <boost/asio/ssl.hpp> \n+#include <boost/asio/ssl.hpp>\n #include <boost/filesystem/fstream.hpp>\n #include <boost/shared_ptr.hpp>\n #include <list>\n@@ -188,10 +189,10 @@ ScriptSigToJSON(const CTxIn& txin, Object& out)\n         return;\n \n     txnouttype type;\n-    vector<CBitcoinAddress> addresses;\n+    vector<CTxDestination> addresses;\n     int nRequired;\n \n-    if (!ExtractAddresses(txprev.vout[txin.prevout.n].scriptPubKey, type,\n+    if (!ExtractDestinations(txprev.vout[txin.prevout.n].scriptPubKey, type,\n                           addresses, nRequired))\n     {\n         out.push_back(Pair(\"type\", GetTxnOutputType(TX_NONSTANDARD)));\n@@ -206,22 +207,22 @@ ScriptSigToJSON(const CTxIn& txin, Object& out)\n     }\n \n     Array a;\n-    BOOST_FOREACH(const CBitcoinAddress& addr, addresses)\n-        a.push_back(addr.ToString());\n+    BOOST_FOREACH(const CTxDestination& addr, addresses)\n+        a.push_back(CBitcoinAddress(addr).ToString());\n     out.push_back(Pair(\"addresses\", a));\n }\n \n void\n ScriptPubKeyToJSON(const CScript& scriptPubKey, Object& out)\n {\n     txnouttype type;\n-    vector<CBitcoinAddress> addresses;\n+    vector<CTxDestination> addresses;\n     int nRequired;\n \n     out.push_back(Pair(\"asm\", scriptPubKey.ToString()));\n     out.push_back(Pair(\"hex\", HexStr(scriptPubKey.begin(), scriptPubKey.end())));\n \n-    if (!ExtractAddresses(scriptPubKey, type, addresses, nRequired))\n+    if (!ExtractDestinations(scriptPubKey, type, addresses, nRequired))\n     {\n         out.push_back(Pair(\"type\", GetTxnOutputType(TX_NONSTANDARD)));\n         return;\n@@ -231,8 +232,8 @@ ScriptPubKeyToJSON(const CScript& scriptPubKey, Object& out)\n     out.push_back(Pair(\"type\", GetTxnOutputType(type)));\n \n     Array a;\n-    BOOST_FOREACH(const CBitcoinAddress& addr, addresses)\n-        a.push_back(addr.ToString());\n+    BOOST_FOREACH(const CTxDestination& addr, addresses)\n+        a.push_back(CBitcoinAddress(addr).ToString());\n     out.push_back(Pair(\"addresses\", a));\n }\n \n@@ -439,7 +440,7 @@ Value stop(const Array& params, bool fHelp)\n             \"stop\\n\"\n             \"Stop Bitcoin server.\");\n     // Shutdown will take long enough that the response should get back\n-    uiInterface.QueueShutdown();\n+    StartShutdown();\n     return \"Bitcoin server stopping\";\n }\n \n@@ -534,14 +535,17 @@ Value getinfo(const Array& params, bool fHelp)\n             \"getinfo\\n\"\n             \"Returns an object containing various state info.\");\n \n+    CService addrProxy;\n+    GetProxy(NET_IPV4, addrProxy);\n+\n     Object obj;\n     obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n     obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n     obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n     obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n     obj.push_back(Pair(\"blocks\",        (int)nBestHeight));\n     obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n-    obj.push_back(Pair(\"proxy\",         (fUseProxy ? addrProxy.ToStringIPPort() : string())));\n+    obj.push_back(Pair(\"proxy\",         (addrProxy.IsValid() ? addrProxy.ToStringIPPort() : string())));\n     obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n     obj.push_back(Pair(\"testnet\",       fTestNet));\n     obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n@@ -594,14 +598,14 @@ Value getnewaddress(const Array& params, bool fHelp)\n         pwalletMain->TopUpKeyPool();\n \n     // Generate a new key that is added to wallet\n-    std::vector<unsigned char> newKey;\n+    CPubKey newKey;\n     if (!pwalletMain->GetKeyFromPool(newKey, false))\n         throw JSONRPCError(-12, \"Error: Keypool ran out, please call keypoolrefill first\");\n-    CBitcoinAddress address(newKey);\n+    CKeyID keyID = newKey.GetID();\n \n-    pwalletMain->SetAddressBookName(address, strAccount);\n+    pwalletMain->SetAddressBookName(keyID, strAccount);\n \n-    return address.ToString();\n+    return CBitcoinAddress(keyID).ToString();\n }\n \n \n@@ -615,12 +619,12 @@ CBitcoinAddress GetAccountAddress(string strAccount, bool bForceNew=false)\n     bool bKeyUsed = false;\n \n     // Check if the current key has been used\n-    if (!account.vchPubKey.empty())\n+    if (account.vchPubKey.IsValid())\n     {\n         CScript scriptPubKey;\n-        scriptPubKey.SetBitcoinAddress(account.vchPubKey);\n+        scriptPubKey.SetDestination(account.vchPubKey.GetID());\n         for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin();\n-             it != pwalletMain->mapWallet.end() && !account.vchPubKey.empty();\n+             it != pwalletMain->mapWallet.end() && account.vchPubKey.IsValid();\n              ++it)\n         {\n             const CWalletTx& wtx = (*it).second;\n@@ -631,16 +635,16 @@ CBitcoinAddress GetAccountAddress(string strAccount, bool bForceNew=false)\n     }\n \n     // Generate a new key\n-    if (account.vchPubKey.empty() || bForceNew || bKeyUsed)\n+    if (!account.vchPubKey.IsValid() || bForceNew || bKeyUsed)\n     {\n         if (!pwalletMain->GetKeyFromPool(account.vchPubKey, false))\n             throw JSONRPCError(-12, \"Error: Keypool ran out, please call keypoolrefill first\");\n \n-        pwalletMain->SetAddressBookName(CBitcoinAddress(account.vchPubKey), strAccount);\n+        pwalletMain->SetAddressBookName(account.vchPubKey.GetID(), strAccount);\n         walletdb.WriteAccount(strAccount, account);\n     }\n \n-    return CBitcoinAddress(account.vchPubKey);\n+    return CBitcoinAddress(account.vchPubKey.GetID());\n }\n \n Value getaccountaddress(const Array& params, bool fHelp)\n@@ -679,14 +683,14 @@ Value setaccount(const Array& params, bool fHelp)\n         strAccount = AccountFromValue(params[1]);\n \n     // Detect when changing the account of an address that is the 'unused current key' of another account:\n-    if (pwalletMain->mapAddressBook.count(address))\n+    if (pwalletMain->mapAddressBook.count(address.Get()))\n     {\n-        string strOldAccount = pwalletMain->mapAddressBook[address];\n+        string strOldAccount = pwalletMain->mapAddressBook[address.Get()];\n         if (address == GetAccountAddress(strOldAccount))\n             GetAccountAddress(strOldAccount, true);\n     }\n \n-    pwalletMain->SetAddressBookName(address, strAccount);\n+    pwalletMain->SetAddressBookName(address.Get(), strAccount);\n \n     return Value::null;\n }\n@@ -704,7 +708,7 @@ Value getaccount(const Array& params, bool fHelp)\n         throw JSONRPCError(-5, \"Invalid Bitcoin address\");\n \n     string strAccount;\n-    map<CBitcoinAddress, string>::iterator mi = pwalletMain->mapAddressBook.find(address);\n+    map<CTxDestination, string>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n     if (mi != pwalletMain->mapAddressBook.end() && !(*mi).second.empty())\n         strAccount = (*mi).second;\n     return strAccount;\n@@ -773,7 +777,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n     if (pwalletMain->IsLocked())\n         throw JSONRPCError(-13, \"Error: Please enter the wallet passphrase with walletpassphrase first.\");\n \n-    string strError = pwalletMain->SendMoneyToBitcoinAddress(address, nAmount, wtx);\n+    string strError = pwalletMain->SendMoneyToDestination(address.Get(), nAmount, wtx);\n     if (strError != \"\")\n         throw JSONRPCError(-4, strError);\n \n@@ -796,8 +800,12 @@ Value signmessage(const Array& params, bool fHelp)\n     if (!addr.IsValid())\n         throw JSONRPCError(-3, \"Invalid address\");\n \n+    CKeyID keyID;\n+    if (!addr.GetKeyID(keyID))\n+        throw JSONRPCError(-3, \"Address does not refer to key\");\n+\n     CKey key;\n-    if (!pwalletMain->GetKey(addr, key))\n+    if (!pwalletMain->GetKey(keyID, key))\n         throw JSONRPCError(-4, \"Private key not available\");\n \n     CDataStream ss(SER_GETHASH, 0);\n@@ -826,6 +834,10 @@ Value verifymessage(const Array& params, bool fHelp)\n     if (!addr.IsValid())\n         throw JSONRPCError(-3, \"Invalid address\");\n \n+    CKeyID keyID;\n+    if (!addr.GetKeyID(keyID))\n+        throw JSONRPCError(-3, \"Address does not refer to key\");\n+\n     bool fInvalid = false;\n     vector<unsigned char> vchSig = DecodeBase64(strSign.c_str(), &fInvalid);\n \n@@ -840,7 +852,7 @@ Value verifymessage(const Array& params, bool fHelp)\n     if (!key.SetCompactSignature(Hash(ss.begin(), ss.end()), vchSig))\n         return false;\n \n-    return (CBitcoinAddress(key.GetPubKey()) == addr);\n+    return (key.GetPubKey().GetID() == keyID);\n }\n \n \n@@ -856,7 +868,7 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n     CScript scriptPubKey;\n     if (!address.IsValid())\n         throw JSONRPCError(-5, \"Invalid Bitcoin address\");\n-    scriptPubKey.SetBitcoinAddress(address);\n+    scriptPubKey.SetDestination(address.Get());\n     if (!IsMine(*pwalletMain,scriptPubKey))\n         return (double)0.0;\n \n@@ -883,18 +895,17 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n }\n \n \n-void GetAccountAddresses(string strAccount, set<CBitcoinAddress>& setAddress)\n+void GetAccountAddresses(string strAccount, set<CTxDestination>& setAddress)\n {\n-    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, string)& item, pwalletMain->mapAddressBook)\n+    BOOST_FOREACH(const PAIRTYPE(CTxDestination, string)& item, pwalletMain->mapAddressBook)\n     {\n-        const CBitcoinAddress& address = item.first;\n+        const CTxDestination& address = item.first;\n         const string& strName = item.second;\n         if (strName == strAccount)\n             setAddress.insert(address);\n     }\n }\n \n-\n Value getreceivedbyaccount(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() < 1 || params.size() > 2)\n@@ -909,7 +920,7 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n \n     // Get the set of pub keys assigned to account\n     string strAccount = AccountFromValue(params[0]);\n-    set<CBitcoinAddress> setAddress;\n+    set<CTxDestination> setAddress;\n     GetAccountAddresses(strAccount, setAddress);\n \n     // Tally\n@@ -922,8 +933,8 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n \n         BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n         {\n-            CBitcoinAddress address;\n-            if (ExtractAddress(txout.scriptPubKey, address) && pwalletMain->HaveKey(address) && setAddress.count(address))\n+            CTxDestination address;\n+            if (ExtractDestination(txout.scriptPubKey, address) && IsMine(*pwalletMain, address) && setAddress.count(address))\n                 if (wtx.GetDepthInMainChain() >= nMinDepth)\n                     nAmount += txout.nValue;\n         }\n@@ -994,15 +1005,15 @@ Value getbalance(const Array& params, bool fHelp)\n             int64 allGeneratedImmature, allGeneratedMature, allFee;\n             allGeneratedImmature = allGeneratedMature = allFee = 0;\n             string strSentAccount;\n-            list<pair<CBitcoinAddress, int64> > listReceived;\n-            list<pair<CBitcoinAddress, int64> > listSent;\n+            list<pair<CTxDestination, int64> > listReceived;\n+            list<pair<CTxDestination, int64> > listSent;\n             wtx.GetAmounts(allGeneratedImmature, allGeneratedMature, listReceived, listSent, allFee, strSentAccount);\n             if (wtx.GetDepthInMainChain() >= nMinDepth)\n             {\n-                BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress,int64)& r, listReceived)\n+                BOOST_FOREACH(const PAIRTYPE(CTxDestination,int64)& r, listReceived)\n                     nBalance += r.second;\n             }\n-            BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress,int64)& r, listSent)\n+            BOOST_FOREACH(const PAIRTYPE(CTxDestination,int64)& r, listSent)\n                 nBalance -= r.second;\n             nBalance -= allFee;\n             nBalance += allGeneratedMature;\n@@ -1098,7 +1109,7 @@ Value sendfrom(const Array& params, bool fHelp)\n         throw JSONRPCError(-6, \"Account has insufficient funds\");\n \n     // Send\n-    string strError = pwalletMain->SendMoneyToBitcoinAddress(address, nAmount, wtx);\n+    string strError = pwalletMain->SendMoneyToDestination(address.Get(), nAmount, wtx);\n     if (strError != \"\")\n         throw JSONRPCError(-4, strError);\n \n@@ -1140,8 +1151,8 @@ Value sendmany(const Array& params, bool fHelp)\n         setAddress.insert(address);\n \n         CScript scriptPubKey;\n-        scriptPubKey.SetBitcoinAddress(address);\n-        int64 nAmount = AmountFromValue(s.value_); \n+        scriptPubKey.SetDestination(address.Get());\n+        int64 nAmount = AmountFromValue(s.value_);\n         totalAmount += nAmount;\n \n         vecSend.push_back(make_pair(scriptPubKey, nAmount));\n@@ -1204,22 +1215,23 @@ Value addmultisigaddress(const Array& params, bool fHelp)\n         CBitcoinAddress address(ks);\n         if (address.IsValid())\n         {\n-            if (address.IsScript())\n+            CKeyID keyID;\n+            if (!address.GetKeyID(keyID))\n                 throw runtime_error(\n-                    strprintf(\"%s is a pay-to-script address\",ks.c_str()));\n-            std::vector<unsigned char> vchPubKey;\n-            if (!pwalletMain->GetPubKey(address, vchPubKey))\n+                    strprintf(\"%s does not refer to a key\",ks.c_str()));\n+            CPubKey vchPubKey;\n+            if (!pwalletMain->GetPubKey(keyID, vchPubKey))\n                 throw runtime_error(\n                     strprintf(\"no full public key for address %s\",ks.c_str()));\n-            if (vchPubKey.empty() || !pubkeys[i].SetPubKey(vchPubKey))\n+            if (!vchPubKey.IsValid() || !pubkeys[i].SetPubKey(vchPubKey))\n                 throw runtime_error(\" Invalid public key: \"+ks);\n         }\n \n         // Case 2: hex public key\n         else if (IsHex(ks))\n         {\n-            vector<unsigned char> vchPubKey = ParseHex(ks);\n-            if (vchPubKey.empty() || !pubkeys[i].SetPubKey(vchPubKey))\n+            CPubKey vchPubKey(ParseHex(ks));\n+            if (!vchPubKey.IsValid() || !pubkeys[i].SetPubKey(vchPubKey))\n                 throw runtime_error(\" Invalid public key: \"+ks);\n         }\n         else\n@@ -1231,16 +1243,11 @@ Value addmultisigaddress(const Array& params, bool fHelp)\n     // Construct using pay-to-script-hash:\n     CScript inner;\n     inner.SetMultisig(nRequired, pubkeys);\n-\n-    uint160 scriptHash = Hash160(inner);\n-    CScript scriptPubKey;\n-    scriptPubKey.SetPayToScriptHash(inner);\n+    CScriptID innerID = inner.GetID();\n     pwalletMain->AddCScript(inner);\n-    CBitcoinAddress address;\n-    address.SetScriptHash160(scriptHash);\n \n-    pwalletMain->SetAddressBookName(address, strAccount);\n-    return address.ToString();\n+    pwalletMain->SetAddressBookName(innerID, strAccount);\n+    return CBitcoinAddress(innerID).ToString();\n }\n \n \n@@ -1282,8 +1289,8 @@ Value ListReceived(const Array& params, bool fByAccounts)\n \n         BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n         {\n-            CBitcoinAddress address;\n-            if (!ExtractAddress(txout.scriptPubKey, address) || !pwalletMain->HaveKey(address) || !address.IsValid())\n+            CTxDestination address;\n+            if (!ExtractDestination(txout.scriptPubKey, address) || !IsMine(*pwalletMain, address))\n                 continue;\n \n             tallyitem& item = mapTally[address];\n@@ -1380,8 +1387,8 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n {\n     int64 nGeneratedImmature, nGeneratedMature, nFee;\n     string strSentAccount;\n-    list<pair<CBitcoinAddress, int64> > listReceived;\n-    list<pair<CBitcoinAddress, int64> > listSent;\n+    list<pair<CTxDestination, int64> > listReceived;\n+    list<pair<CTxDestination, int64> > listSent;\n \n     wtx.GetAmounts(nGeneratedImmature, nGeneratedMature, listReceived, listSent, nFee, strSentAccount);\n \n@@ -1410,11 +1417,11 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n     // Sent\n     if ((!listSent.empty() || nFee != 0) && (fAllAccounts || strAccount == strSentAccount))\n     {\n-        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, int64)& s, listSent)\n+        BOOST_FOREACH(const PAIRTYPE(CTxDestination, int64)& s, listSent)\n         {\n             Object entry;\n             entry.push_back(Pair(\"account\", strSentAccount));\n-            entry.push_back(Pair(\"address\", s.first.ToString()));\n+            entry.push_back(Pair(\"address\", CBitcoinAddress(s.first).ToString()));\n             entry.push_back(Pair(\"category\", \"send\"));\n             entry.push_back(Pair(\"amount\", ValueFromAmount(-s.second)));\n             entry.push_back(Pair(\"fee\", ValueFromAmount(-nFee)));\n@@ -1427,7 +1434,7 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n     // Received\n     if (listReceived.size() > 0 && wtx.GetDepthInMainChain() >= nMinDepth)\n     {\n-        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, int64)& r, listReceived)\n+        BOOST_FOREACH(const PAIRTYPE(CTxDestination, int64)& r, listReceived)\n         {\n             string account;\n             if (pwalletMain->mapAddressBook.count(r.first))\n@@ -1436,7 +1443,7 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n             {\n                 Object entry;\n                 entry.push_back(Pair(\"account\", account));\n-                entry.push_back(Pair(\"address\", r.first.ToString()));\n+                entry.push_back(Pair(\"address\", CBitcoinAddress(r.first).ToString()));\n                 entry.push_back(Pair(\"category\", \"receive\"));\n                 entry.push_back(Pair(\"amount\", ValueFromAmount(r.second)));\n                 if (fLong)\n@@ -1521,7 +1528,7 @@ Value listtransactions(const Array& params, bool fHelp)\n         if ((int)ret.size() >= (nCount+nFrom)) break;\n     }\n     // ret is newest to oldest\n-    \n+\n     if (nFrom > (int)ret.size())\n         nFrom = ret.size();\n     if ((nFrom + nCount) > (int)ret.size())\n@@ -1551,8 +1558,8 @@ Value listaccounts(const Array& params, bool fHelp)\n         nMinDepth = params[0].get_int();\n \n     map<string, int64> mapAccountBalances;\n-    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, string)& entry, pwalletMain->mapAddressBook) {\n-        if (pwalletMain->HaveKey(entry.first)) // This address belongs to me\n+    BOOST_FOREACH(const PAIRTYPE(CTxDestination, string)& entry, pwalletMain->mapAddressBook) {\n+        if (IsMine(*pwalletMain, entry.first)) // This address belongs to me\n             mapAccountBalances[entry.second] = 0;\n     }\n \n@@ -1561,16 +1568,16 @@ Value listaccounts(const Array& params, bool fHelp)\n         const CWalletTx& wtx = (*it).second;\n         int64 nGeneratedImmature, nGeneratedMature, nFee;\n         string strSentAccount;\n-        list<pair<CBitcoinAddress, int64> > listReceived;\n-        list<pair<CBitcoinAddress, int64> > listSent;\n+        list<pair<CTxDestination, int64> > listReceived;\n+        list<pair<CTxDestination, int64> > listSent;\n         wtx.GetAmounts(nGeneratedImmature, nGeneratedMature, listReceived, listSent, nFee, strSentAccount);\n         mapAccountBalances[strSentAccount] -= nFee;\n-        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, int64)& s, listSent)\n+        BOOST_FOREACH(const PAIRTYPE(CTxDestination, int64)& s, listSent)\n             mapAccountBalances[strSentAccount] -= s.second;\n         if (wtx.GetDepthInMainChain() >= nMinDepth)\n         {\n             mapAccountBalances[\"\"] += nGeneratedMature;\n-            BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, int64)& r, listReceived)\n+            BOOST_FOREACH(const PAIRTYPE(CTxDestination, int64)& r, listReceived)\n                 if (pwalletMain->mapAddressBook.count(r.first))\n                     mapAccountBalances[pwalletMain->mapAddressBook[r.first]] += r.second;\n                 else\n@@ -1932,10 +1939,44 @@ Value encryptwallet(const Array& params, bool fHelp)\n     // BDB seems to have a bad habit of writing old data into\n     // slack space in .dat files; that is bad if the old data is\n     // unencrypted private keys.  So:\n-    uiInterface.QueueShutdown();\n+    StartShutdown();\n     return \"wallet encrypted; Bitcoin server stopping, restart to run with encrypted wallet\";\n }\n \n+class DescribeAddressVisitor : public boost::static_visitor<Object>\n+{\n+public:\n+    Object operator()(const CNoDestination &dest) const { return Object(); }\n+\n+    Object operator()(const CKeyID &keyID) const {\n+        Object obj;\n+        CPubKey vchPubKey;\n+        pwalletMain->GetPubKey(keyID, vchPubKey);\n+        obj.push_back(Pair(\"isscript\", false));\n+        obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey.Raw())));\n+        obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n+        return obj;\n+    }\n+\n+    Object operator()(const CScriptID &scriptID) const {\n+        Object obj;\n+        obj.push_back(Pair(\"isscript\", true));\n+        CScript subscript;\n+        pwalletMain->GetCScript(scriptID, subscript);\n+        std::vector<CTxDestination> addresses;\n+        txnouttype whichType;\n+        int nRequired;\n+        ExtractDestinations(subscript, whichType, addresses, nRequired);\n+        obj.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n+        Array a;\n+        BOOST_FOREACH(const CTxDestination& addr, addresses)\n+            a.push_back(CBitcoinAddress(addr).ToString());\n+        obj.push_back(Pair(\"addresses\", a));\n+        if (whichType == TX_MULTISIG)\n+            obj.push_back(Pair(\"sigsrequired\", nRequired));\n+        return obj;\n+    }\n+};\n \n Value validateaddress(const Array& params, bool fHelp)\n {\n@@ -1951,42 +1992,17 @@ Value validateaddress(const Array& params, bool fHelp)\n     ret.push_back(Pair(\"isvalid\", isValid));\n     if (isValid)\n     {\n-        // Call Hash160ToAddress() so we always return current ADDRESSVERSION\n-        // version of the address:\n+        CTxDestination dest = address.Get();\n         string currentAddress = address.ToString();\n         ret.push_back(Pair(\"address\", currentAddress));\n-        if (pwalletMain->HaveKey(address))\n-        {\n-            ret.push_back(Pair(\"ismine\", true));\n-            std::vector<unsigned char> vchPubKey;\n-            pwalletMain->GetPubKey(address, vchPubKey);\n-            ret.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n-            CKey key;\n-            key.SetPubKey(vchPubKey);\n-            ret.push_back(Pair(\"iscompressed\", key.IsCompressed()));\n-        }\n-        else if (pwalletMain->HaveCScript(address.GetHash160()))\n-        {\n-            ret.push_back(Pair(\"isscript\", true));\n-            CScript subscript;\n-            pwalletMain->GetCScript(address.GetHash160(), subscript);\n-            ret.push_back(Pair(\"ismine\", ::IsMine(*pwalletMain, subscript)));\n-            std::vector<CBitcoinAddress> addresses;\n-            txnouttype whichType;\n-            int nRequired;\n-            ExtractAddresses(subscript, whichType, addresses, nRequired);\n-            ret.push_back(Pair(\"script\", GetTxnOutputType(whichType)));\n-            Array a;\n-            BOOST_FOREACH(const CBitcoinAddress& addr, addresses)\n-                a.push_back(addr.ToString());\n-            ret.push_back(Pair(\"addresses\", a));\n-            if (whichType == TX_MULTISIG)\n-                ret.push_back(Pair(\"sigsrequired\", nRequired));\n+        bool fMine = IsMine(*pwalletMain, dest);\n+        ret.push_back(Pair(\"ismine\", fMine));\n+        if (fMine) {\n+            Object detail = boost::apply_visitor(DescribeAddressVisitor(), dest);\n+            ret.insert(ret.end(), detail.begin(), detail.end());\n         }\n-        else\n-            ret.push_back(Pair(\"ismine\", false));\n-        if (pwalletMain->mapAddressBook.count(address))\n-            ret.push_back(Pair(\"account\", pwalletMain->mapAddressBook[address]));\n+        if (pwalletMain->mapAddressBook.count(dest))\n+            ret.push_back(Pair(\"account\", pwalletMain->mapAddressBook[dest]));\n     }\n     return ret;\n }\n@@ -2252,7 +2268,7 @@ Value sendrawtx(const Array& params, bool fHelp)\n     CInv inv(MSG_TX, tx.GetHash());\n     RelayInventory(inv);\n \n-    return true;\n+    return tx.GetHash().GetHex();\n }\n \n \n@@ -2791,7 +2807,7 @@ void ThreadRPCServer2(void* parg)\n                 GetConfigFile().string().c_str(),\n                 EncodeBase58(&rand_pwd[0],&rand_pwd[0]+32).c_str()),\n             _(\"Error\"), CClientUIInterface::OK | CClientUIInterface::MODAL);\n-        uiInterface.QueueShutdown();\n+        StartShutdown();\n         return;\n     }\n \n@@ -2863,12 +2879,13 @@ void ThreadRPCServer2(void* parg)\n     {\n         uiInterface.ThreadSafeMessageBox(strprintf(_(\"An error occured while setting up the RPC port %i for listening: %s\"), endpoint.port(), e.what()),\n                              _(\"Error\"), CClientUIInterface::OK | CClientUIInterface::MODAL);\n-        uiInterface.QueueShutdown();\n+        StartShutdown();\n         return;\n     }\n \n     vnThreadsRunning[THREAD_RPCLISTENER]--;\n-    io_service.run();\n+    while (!fShutdown)\n+        io_service.run_one();\n     vnThreadsRunning[THREAD_RPCLISTENER]++;\n \n     // Terminate all outstanding accept-requests\n@@ -3111,24 +3128,11 @@ Array RPCConvertValues(const std::string &strMethod, const std::vector<std::stri\n     if (strMethod == \"listaccounts\"           && n > 0) ConvertTo<boost::int64_t>(params[0]);\n     if (strMethod == \"walletpassphrase\"       && n > 1) ConvertTo<boost::int64_t>(params[1]);\n     if (strMethod == \"listsinceblock\"         && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"sendmany\"               && n > 1)\n-    {\n-        string s = params[1].get_str();\n-        Value v;\n-        if (!read_string(s, v) || v.type() != obj_type)\n-            throw runtime_error(\"type mismatch\");\n-        params[1] = v.get_obj();\n-    }\n-    if (strMethod == \"sendmany\"                && n > 2) ConvertTo<boost::int64_t>(params[2]);\n-    if (strMethod == \"addmultisigaddress\"      && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"addmultisigaddress\"      && n > 1)\n-    {\n-        string s = params[1].get_str();\n-        Value v;\n-        if (!read_string(s, v) || v.type() != array_type)\n-            throw runtime_error(\"type mismatch \"+s);\n-        params[1] = v.get_array();\n-    }\n+    if (strMethod == \"sendmany\"               && n > 1) ConvertTo<Object>(params[1]);\n+    if (strMethod == \"sendmany\"               && n > 2) ConvertTo<boost::int64_t>(params[2]);\n+    if (strMethod == \"addmultisigaddress\"     && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"addmultisigaddress\"     && n > 1) ConvertTo<Array>(params[1]);\n+\n     return params;\n }\n "
      },
      {
        "sha": "6f7a92bb251535a4e6521d9c00af09f70c139919",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -35,27 +35,32 @@ namespace Checkpoints\n         (168000, uint256(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\"))\n         ;\n \n+    static MapCheckpoints mapCheckpointsTestnet =\n+        boost::assign::map_list_of\n+        ( 546, uint256(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\"))\n+        ;\n+\n     bool CheckBlock(int nHeight, const uint256& hash)\n     {\n-        if (fTestNet) return true; // Testnet has no checkpoints\n+        MapCheckpoints& checkpoints = (fTestNet ? mapCheckpointsTestnet : mapCheckpoints);\n \n-        MapCheckpoints::const_iterator i = mapCheckpoints.find(nHeight);\n-        if (i == mapCheckpoints.end()) return true;\n+        MapCheckpoints::const_iterator i = checkpoints.find(nHeight);\n+        if (i == checkpoints.end()) return true;\n         return hash == i->second;\n     }\n \n     int GetTotalBlocksEstimate()\n     {\n-        if (fTestNet) return 0;\n+        MapCheckpoints& checkpoints = (fTestNet ? mapCheckpointsTestnet : mapCheckpoints);\n \n-        return mapCheckpoints.rbegin()->first;\n+        return checkpoints.rbegin()->first;\n     }\n \n     CBlockIndex* GetLastCheckpoint(const std::map<uint256, CBlockIndex*>& mapBlockIndex)\n     {\n-        if (fTestNet) return NULL;\n+        MapCheckpoints& checkpoints = (fTestNet ? mapCheckpointsTestnet : mapCheckpoints);\n \n-        BOOST_REVERSE_FOREACH(const MapCheckpoints::value_type& i, mapCheckpoints)\n+        BOOST_REVERSE_FOREACH(const MapCheckpoints::value_type& i, checkpoints)\n         {\n             const uint256& hash = i.second;\n             std::map<uint256, CBlockIndex*>::const_iterator t = mapBlockIndex.find(hash);"
      },
      {
        "sha": "08b594f56c057a0c8e97841969bf0d132df002da",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 83,
        "deletions": 56,
        "changes": 139,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -38,6 +38,17 @@ void ExitTimeout(void* parg)\n #endif\n }\n \n+void StartShutdown()\n+{\n+#ifdef QT_GUI\n+    // ensure we leave the Qt main loop for a clean GUI exit (Shutdown() is called in bitcoin.cpp afterwards)\n+    uiInterface.QueueShutdown();\n+#else\n+    // Without UI, Shutdown() can simply be started in a new thread\n+    CreateThread(Shutdown, NULL);\n+#endif\n+}\n+\n void Shutdown(void* parg)\n {\n     static CCriticalSection cs_Shutdown;\n@@ -66,7 +77,10 @@ void Shutdown(void* parg)\n         Sleep(50);\n         printf(\"Bitcoin exited\\n\\n\");\n         fExit = true;\n+#ifndef QT_GUI\n+        // ensure non UI client get's exited here, but let Bitcoin-Qt reach return 0; in bitcoin.cpp\n         exit(0);\n+#endif\n     }\n     else\n     {\n@@ -182,12 +196,15 @@ bool static InitWarning(const std::string &str)\n }\n \n \n-bool static Bind(const CService &addr) {\n+bool static Bind(const CService &addr, bool fError = true) {\n     if (IsLimited(addr))\n         return false;\n     std::string strError;\n-    if (!BindListenPort(addr, strError))\n-        return InitError(strError);\n+    if (!BindListenPort(addr, strError)) {\n+        if (fError)\n+            return InitError(strError);\n+        return false;\n+    }\n     return true;\n }\n \n@@ -204,20 +221,18 @@ std::string HelpMessage()\n         \"  -dblogsize=<n>         \" + _(\"Set database disk log size in megabytes (default: 100)\") + \"\\n\" +\n         \"  -timeout=<n>           \" + _(\"Specify connection timeout (in milliseconds)\") + \"\\n\" +\n         \"  -proxy=<ip:port>       \" + _(\"Connect through socks proxy\") + \"\\n\" +\n-        \"  -socks=<n>             \" + _(\"Select the version of socks proxy to use (4 or 5, 5 is default)\") + \"\\n\" +\n-        \"  -noproxy=<net>         \" + _(\"Do not use proxy for connections to network <net> (IPv4 or IPv6)\") + \"\\n\" +\n+        \"  -socks=<n>             \" + _(\"Select the version of socks proxy to use (4-5, default: 5)\") + \"\\n\" +\n         \"  -dns                   \" + _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \"\\n\" +\n-        \"  -proxydns              \" + _(\"Pass DNS requests to (SOCKS5) proxy\") + \"\\n\" +\n         \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\" +\n         \"  -maxconnections=<n>    \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\" +\n         \"  -addnode=<ip>          \" + _(\"Add a node to connect to and attempt to keep the connection open\") + \"\\n\" +\n-        \"  -connect=<ip>          \" + _(\"Connect only to the specified node\") + \"\\n\" +\n+        \"  -connect=<ip>          \" + _(\"Connect only to the specified node(s)\") + \"\\n\" +\n         \"  -seednode=<ip>         \" + _(\"Connect to a node to retrieve peer addresses, and disconnect\") + \"\\n\" +\n         \"  -externalip=<ip>       \" + _(\"Specify your own public address\") + \"\\n\" +\n         \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4 or IPv6)\") + \"\\n\" +\n-        \"  -discover              \" + _(\"Try to discover public IP address (default: 1)\") + \"\\n\" +\n+        \"  -discover              \" + _(\"Discover own IP address (default: 1 when listening and no -externalip)\") + \"\\n\" +\n         \"  -irc                   \" + _(\"Find peers using internet relay chat (default: 0)\") + \"\\n\" +\n-        \"  -listen                \" + _(\"Accept connections from outside (default: 1)\") + \"\\n\" +\n+        \"  -listen                \" + _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\") + \"\\n\" +\n         \"  -bind=<addr>           \" + _(\"Bind to given address. Use [host]:port notation for IPv6\") + \"\\n\" +\n         \"  -dnsseed               \" + _(\"Find peers using DNS lookup (default: 1)\") + \"\\n\" +\n         \"  -banscore=<n>          \" + _(\"Threshold for disconnecting misbehaving peers (default: 100)\") + \"\\n\" +\n@@ -226,9 +241,9 @@ std::string HelpMessage()\n         \"  -maxsendbuffer=<n>     \" + _(\"Maximum per-connection send buffer, <n>*1000 bytes (default: 10000)\") + \"\\n\" +\n #ifdef USE_UPNP\n #if USE_UPNP\n-        \"  -upnp                  \" + _(\"Use Universal Plug and Play to map the listening port (default: 1)\") + \"\\n\" +\n+        \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 1 when listening)\") + \"\\n\" +\n #else\n-        \"  -upnp                  \" + _(\"Use Universal Plug and Play to map the listening port (default: 0)\") + \"\\n\" +\n+        \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 0)\") + \"\\n\" +\n #endif\n #endif\n         \"  -detachdb              \" + _(\"Detach block and address databases. Increases shutdown time (default: 0)\") + \"\\n\" +\n@@ -308,30 +323,38 @@ bool AppInit2()\n     // ********************************************************* Step 2: parameter interactions\n \n     fTestNet = GetBoolArg(\"-testnet\");\n-    if (fTestNet)\n-    {\n+    if (fTestNet) {\n         SoftSetBoolArg(\"-irc\", true);\n     }\n \n-    if (mapArgs.count(\"-connect\"))\n-        SoftSetBoolArg(\"-dnsseed\", false);\n-\n-    // even in Tor mode, if -bind is specified, you really want -listen\n-    if (mapArgs.count(\"-bind\"))\n+    if (mapArgs.count(\"-bind\")) {\n+        // when specifying an explicit binding address, you want to listen on it\n+        // even when -connect or -proxy is specified\n         SoftSetBoolArg(\"-listen\", true);\n+    }\n \n-    bool fTor = (fUseProxy && addrProxy.GetPort() == 9050);\n-    if (fTor)\n-    {\n-        // Use SoftSetBoolArg here so user can override any of these if they wish.\n-        // Note: the GetBoolArg() calls for all of these must happen later.\n+    if (mapArgs.count(\"-connect\")) {\n+        // when only connecting to trusted nodes, do not seed via DNS, or listen by default\n+        SoftSetBoolArg(\"-dnsseed\", false);\n+        SoftSetBoolArg(\"-listen\", false);\n+    }\n+\n+    if (mapArgs.count(\"-proxy\")) {\n+        // to protect privacy, do not listen by default if a proxy server is specified\n         SoftSetBoolArg(\"-listen\", false);\n-        SoftSetBoolArg(\"-irc\", false);\n-        SoftSetBoolArg(\"-proxydns\", true);\n+    }\n+\n+    if (GetBoolArg(\"-listen\", true)) {\n+        // do not map ports or try to retrieve public IP when not listening (pointless)\n         SoftSetBoolArg(\"-upnp\", false);\n         SoftSetBoolArg(\"-discover\", false);\n     }\n \n+    if (mapArgs.count(\"-externalip\")) {\n+        // if an explicit public IP is specified, do not try to find others\n+        SoftSetBoolArg(\"-discover\", false);\n+    }\n+\n     // ********************************************************* Step 3: parameter-to-internal-flags\n \n     fDebug = GetBoolArg(\"-debug\");\n@@ -414,7 +437,9 @@ bool AppInit2()\n         ShrinkDebugFile();\n     printf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n     printf(\"Bitcoin version %s (%s)\\n\", FormatFullVersion().c_str(), CLIENT_DATE.c_str());\n+    printf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%x %H:%M:%S\", GetTime()).c_str());\n     printf(\"Default data directory %s\\n\", GetDefaultDataDir().string().c_str());\n+    printf(\"Used data directory %s\\n\", GetDataDir().string().c_str());\n     std::ostringstream strErrors;\n \n     if (fDaemon)\n@@ -424,30 +449,8 @@ bool AppInit2()\n \n     // ********************************************************* Step 5: network initialization\n \n-    if (mapArgs.count(\"-proxy\"))\n-    {\n-        fUseProxy = true;\n-        addrProxy = CService(mapArgs[\"-proxy\"], 9050);\n-        if (!addrProxy.IsValid())\n-            return InitError(strprintf(_(\"Invalid -proxy address: '%s'\"), mapArgs[\"-proxy\"].c_str()));\n-    }\n+    int nSocksVersion = GetArg(\"-socks\", 5);\n \n-    if (mapArgs.count(\"-noproxy\"))\n-    {\n-        BOOST_FOREACH(std::string snet, mapMultiArgs[\"-noproxy\"]) {\n-            enum Network net = ParseNetwork(snet);\n-            if (net == NET_UNROUTABLE)\n-                return InitError(strprintf(_(\"Unknown network specified in -noproxy: '%s'\"), snet.c_str()));\n-            SetNoProxy(net);\n-        }\n-    }\n-\n-    fNameLookup = GetBoolArg(\"-dns\");\n-    fProxyNameLookup = GetBoolArg(\"-proxydns\");\n-    if (fProxyNameLookup)\n-        fNameLookup = true;\n-    fNoListen = !GetBoolArg(\"-listen\", true);\n-    nSocksVersion = GetArg(\"-socks\", 5);\n     if (nSocksVersion != 4 && nSocksVersion != 5)\n         return InitError(strprintf(_(\"Unknown -socks proxy version requested: %i\"), nSocksVersion));\n \n@@ -466,8 +469,29 @@ bool AppInit2()\n         }\n     }\n \n-    BOOST_FOREACH(string strDest, mapMultiArgs[\"-seednode\"])\n-        AddOneShot(strDest);\n+    if (mapArgs.count(\"-proxy\")) {\n+        CService addrProxy = CService(mapArgs[\"-proxy\"], 9050);\n+        if (!addrProxy.IsValid())\n+            return InitError(strprintf(_(\"Invalid -proxy address: '%s'\"), mapArgs[\"-proxy\"].c_str()));\n+\n+        if (!IsLimited(NET_IPV4))\n+            SetProxy(NET_IPV4, addrProxy, nSocksVersion);\n+        if (nSocksVersion > 4) {\n+#ifdef USE_IPV6\n+            if (!IsLimited(NET_IPV6))\n+                SetProxy(NET_IPV6, addrProxy, nSocksVersion);\n+#endif\n+            SetNameProxy(addrProxy, nSocksVersion);\n+        }\n+    }\n+\n+    // see Step 2: parameter interactions for more information about these\n+    fNoListen = !GetBoolArg(\"-listen\", true);\n+    fDiscover = GetBoolArg(\"-discover\", true);\n+    fNameLookup = GetBoolArg(\"-dns\", true);\n+#ifdef USE_UPNP\n+    fUseUPnP = GetBoolArg(\"-upnp\", USE_UPNP);\n+#endif\n \n     bool fBound = false;\n     if (!fNoListen)\n@@ -483,15 +507,15 @@ bool AppInit2()\n         } else {\n             struct in_addr inaddr_any;\n             inaddr_any.s_addr = INADDR_ANY;\n-            if (!IsLimited(NET_IPV4))\n-                fBound |= Bind(CService(inaddr_any, GetListenPort()));\n #ifdef USE_IPV6\n             if (!IsLimited(NET_IPV6))\n-                fBound |= Bind(CService(in6addr_any, GetListenPort()));\n+                fBound |= Bind(CService(in6addr_any, GetListenPort()), false);\n #endif\n+            if (!IsLimited(NET_IPV4))\n+                fBound |= Bind(CService(inaddr_any, GetListenPort()), !fBound);\n         }\n         if (!fBound)\n-            return InitError(_(\"Not listening on any port\"));\n+            return InitError(_(\"Failed to listen on any port. Use -listen=0 if you want this.\"));\n     }\n \n     if (mapArgs.count(\"-externalip\"))\n@@ -504,6 +528,9 @@ bool AppInit2()\n         }\n     }\n \n+    BOOST_FOREACH(string strDest, mapMultiArgs[\"-seednode\"])\n+        AddOneShot(strDest);\n+\n     // ********************************************************* Step 6: load blockchain\n \n     if (GetBoolArg(\"-loadblockindextest\"))\n@@ -604,11 +631,11 @@ bool AppInit2()\n         // Create new keyUser and set as default key\n         RandAddSeedPerfmon();\n \n-        std::vector<unsigned char> newDefaultKey;\n+        CPubKey newDefaultKey;\n         if (!pwalletMain->GetKeyFromPool(newDefaultKey, false))\n             strErrors << _(\"Cannot initialize keypool\") << \"\\n\";\n         pwalletMain->SetDefaultKey(newDefaultKey);\n-        if (!pwalletMain->SetAddressBookName(CBitcoinAddress(pwalletMain->vchDefaultKey), \"\"))\n+        if (!pwalletMain->SetAddressBookName(pwalletMain->vchDefaultKey.GetID(), \"\"))\n             strErrors << _(\"Cannot write default address\") << \"\\n\";\n     }\n "
      },
      {
        "sha": "8308ee648bcc0cfc372dfe651e1d116c5cdaa1ac",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -9,6 +9,7 @@\n \n extern CWallet* pwalletMain;\n \n+void StartShutdown();\n void Shutdown(void* parg);\n bool AppInit2();\n std::string HelpMessage();"
      },
      {
        "sha": "185be02f29c0007296872c882ec65fd21a1b0ab2",
        "filename": "src/irc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/irc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/irc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/irc.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -176,8 +176,6 @@ bool GetIPFromIRC(SOCKET hSocket, string strMyName, CNetAddr& ipRet)\n     // Hybrid IRC used by lfnet always returns IP when you userhost yourself,\n     // but in case another IRC is ever used this should work.\n     printf(\"GetIPFromIRC() got userhost %s\\n\", strHost.c_str());\n-    if (fUseProxy)\n-        return false;\n     CNetAddr addr(strHost, true);\n     if (!addr.IsValid())\n         return false;\n@@ -281,7 +279,7 @@ void ThreadIRCSeed2(void* parg)\n         if (GetIPFromIRC(hSocket, strMyName, addrFromIRC))\n         {\n             printf(\"GetIPFromIRC() returned %s\\n\", addrFromIRC.ToString().c_str());\n-            if (!fUseProxy && addrFromIRC.IsRoutable())\n+            if (addrFromIRC.IsRoutable())\n             {\n                 // IRC lets you to re-nick\n                 AddLocal(addrFromIRC, LOCAL_IRC);\n@@ -291,8 +289,8 @@ void ThreadIRCSeed2(void* parg)\n         }\n         \n         if (fTestNet) {\n-            Send(hSocket, \"JOIN #bitcoinTEST\\r\");\n-            Send(hSocket, \"WHO #bitcoinTEST\\r\");\n+            Send(hSocket, \"JOIN #bitcoinTEST3\\r\");\n+            Send(hSocket, \"WHO #bitcoinTEST3\\r\");\n         } else {\n             // randomly join #bitcoin00-#bitcoin99\n             int channel_number = GetRandInt(100);"
      },
      {
        "sha": "57ab842bc4392f87118ae99c241072b091aa2c72",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -239,18 +239,18 @@ CPrivKey CKey::GetPrivKey() const\n     return vchPrivKey;\n }\n \n-bool CKey::SetPubKey(const std::vector<unsigned char>& vchPubKey)\n+bool CKey::SetPubKey(const CPubKey& vchPubKey)\n {\n-    const unsigned char* pbegin = &vchPubKey[0];\n-    if (!o2i_ECPublicKey(&pkey, &pbegin, vchPubKey.size()))\n+    const unsigned char* pbegin = &vchPubKey.vchPubKey[0];\n+    if (!o2i_ECPublicKey(&pkey, &pbegin, vchPubKey.vchPubKey.size()))\n         return false;\n     fSet = true;\n-    if (vchPubKey.size() == 33)\n+    if (vchPubKey.vchPubKey.size() == 33)\n         SetCompressedPubKey();\n     return true;\n }\n \n-std::vector<unsigned char> CKey::GetPubKey() const\n+CPubKey CKey::GetPubKey() const\n {\n     int nSize = i2o_ECPublicKey(pkey, NULL);\n     if (!nSize)\n@@ -259,7 +259,7 @@ std::vector<unsigned char> CKey::GetPubKey() const\n     unsigned char* pbegin = &vchPubKey[0];\n     if (i2o_ECPublicKey(pkey, &pbegin) != nSize)\n         throw key_error(\"CKey::GetPubKey() : i2o_ECPublicKey returned unexpected size\");\n-    return vchPubKey;\n+    return CPubKey(vchPubKey);\n }\n \n bool CKey::Sign(uint256 hash, std::vector<unsigned char>& vchSig)"
      },
      {
        "sha": "945c49989b95209630d1b0ec9f44e997e7e39677",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 58,
        "deletions": 2,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -9,7 +9,9 @@\n #include <vector>\n \n #include \"allocators.h\"\n+#include \"serialize.h\"\n #include \"uint256.h\"\n+#include \"util.h\"\n \n #include <openssl/ec.h> // for EC_KEY definition\n \n@@ -42,6 +44,60 @@ class key_error : public std::runtime_error\n     explicit key_error(const std::string& str) : std::runtime_error(str) {}\n };\n \n+/** A reference to a CKey: the Hash160 of its serialized public key */\n+class CKeyID : public uint160\n+{\n+public:\n+    CKeyID() : uint160(0) { }\n+    CKeyID(const uint160 &in) : uint160(in) { }\n+};\n+\n+/** A reference to a CScript: the Hash160 of its serialization (see script.h) */\n+class CScriptID : public uint160\n+{\n+public:\n+    CScriptID() : uint160(0) { }\n+    CScriptID(const uint160 &in) : uint160(in) { }\n+};\n+\n+/** An encapsulated public key. */\n+class CPubKey {\n+private:\n+    std::vector<unsigned char> vchPubKey;\n+    friend class CKey;\n+\n+public:\n+    CPubKey() { }\n+    CPubKey(const std::vector<unsigned char> &vchPubKeyIn) : vchPubKey(vchPubKeyIn) { }\n+    friend bool operator==(const CPubKey &a, const CPubKey &b) { return a.vchPubKey == b.vchPubKey; }\n+    friend bool operator!=(const CPubKey &a, const CPubKey &b) { return a.vchPubKey != b.vchPubKey; }\n+    friend bool operator<(const CPubKey &a, const CPubKey &b) { return a.vchPubKey < b.vchPubKey; }\n+\n+    IMPLEMENT_SERIALIZE(\n+        READWRITE(vchPubKey);\n+    )\n+\n+    CKeyID GetID() const {\n+        return CKeyID(Hash160(vchPubKey));\n+    }\n+\n+    uint256 GetHash() const {\n+        return Hash(vchPubKey.begin(), vchPubKey.end());\n+    }\n+\n+    bool IsValid() const {\n+        return vchPubKey.size() == 33 || vchPubKey.size() == 65;\n+    }\n+\n+    bool IsCompressed() const {\n+        return vchPubKey.size() == 33;\n+    }\n+\n+    std::vector<unsigned char> Raw() const {\n+        return vchPubKey;\n+    }\n+};\n+\n \n // secure_allocator is defined in serialize.h\n // CPrivKey is a serialized private key, with all parameters included (279 bytes)\n@@ -78,8 +134,8 @@ class CKey\n     bool SetSecret(const CSecret& vchSecret, bool fCompressed = false);\n     CSecret GetSecret(bool &fCompressed) const;\n     CPrivKey GetPrivKey() const;\n-    bool SetPubKey(const std::vector<unsigned char>& vchPubKey);\n-    std::vector<unsigned char> GetPubKey() const;\n+    bool SetPubKey(const CPubKey& vchPubKey);\n+    CPubKey GetPubKey() const;\n \n     bool Sign(uint256 hash, std::vector<unsigned char>& vchSig);\n "
      },
      {
        "sha": "e0cf805a19ea3e492c3e6070971ddfd4425bd701",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -6,7 +6,7 @@\n #include \"keystore.h\"\n #include \"script.h\"\n \n-bool CKeyStore::GetPubKey(const CBitcoinAddress &address, std::vector<unsigned char> &vchPubKeyOut) const\n+bool CKeyStore::GetPubKey(const CKeyID &address, CPubKey &vchPubKeyOut) const\n {\n     CKey key;\n     if (!GetKey(address, key))\n@@ -21,7 +21,7 @@ bool CBasicKeyStore::AddKey(const CKey& key)\n     CSecret secret = key.GetSecret(fCompressed);\n     {\n         LOCK(cs_KeyStore);\n-        mapKeys[CBitcoinAddress(key.GetPubKey())] = make_pair(secret, fCompressed);\n+        mapKeys[key.GetPubKey().GetID()] = make_pair(secret, fCompressed);\n     }\n     return true;\n }\n@@ -30,12 +30,12 @@ bool CBasicKeyStore::AddCScript(const CScript& redeemScript)\n {\n     {\n         LOCK(cs_KeyStore);\n-        mapScripts[Hash160(redeemScript)] = redeemScript;\n+        mapScripts[redeemScript.GetID()] = redeemScript;\n     }\n     return true;\n }\n \n-bool CBasicKeyStore::HaveCScript(const uint160& hash) const\n+bool CBasicKeyStore::HaveCScript(const CScriptID& hash) const\n {\n     bool result;\n     {\n@@ -46,7 +46,7 @@ bool CBasicKeyStore::HaveCScript(const uint160& hash) const\n }\n \n \n-bool CBasicKeyStore::GetCScript(const uint160 &hash, CScript& redeemScriptOut) const\n+bool CBasicKeyStore::GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const\n {\n     {\n         LOCK(cs_KeyStore);\n@@ -97,10 +97,10 @@ bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n         CryptedKeyMap::const_iterator mi = mapCryptedKeys.begin();\n         for (; mi != mapCryptedKeys.end(); ++mi)\n         {\n-            const std::vector<unsigned char> &vchPubKey = (*mi).second.first;\n+            const CPubKey &vchPubKey = (*mi).second.first;\n             const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.second;\n             CSecret vchSecret;\n-            if(!DecryptSecret(vMasterKeyIn, vchCryptedSecret, Hash(vchPubKey.begin(), vchPubKey.end()), vchSecret))\n+            if(!DecryptSecret(vMasterKeyIn, vchCryptedSecret, vchPubKey.GetHash(), vchSecret))\n                 return false;\n             if (vchSecret.size() != 32)\n                 return false;\n@@ -128,9 +128,9 @@ bool CCryptoKeyStore::AddKey(const CKey& key)\n             return false;\n \n         std::vector<unsigned char> vchCryptedSecret;\n-        std::vector<unsigned char> vchPubKey = key.GetPubKey();\n+        CPubKey vchPubKey = key.GetPubKey();\n         bool fCompressed;\n-        if (!EncryptSecret(vMasterKey, key.GetSecret(fCompressed), Hash(vchPubKey.begin(), vchPubKey.end()), vchCryptedSecret))\n+        if (!EncryptSecret(vMasterKey, key.GetSecret(fCompressed), vchPubKey.GetHash(), vchCryptedSecret))\n             return false;\n \n         if (!AddCryptedKey(key.GetPubKey(), vchCryptedSecret))\n@@ -140,19 +140,19 @@ bool CCryptoKeyStore::AddKey(const CKey& key)\n }\n \n \n-bool CCryptoKeyStore::AddCryptedKey(const std::vector<unsigned char> &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret)\n+bool CCryptoKeyStore::AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret)\n {\n     {\n         LOCK(cs_KeyStore);\n         if (!SetCrypted())\n             return false;\n \n-        mapCryptedKeys[CBitcoinAddress(vchPubKey)] = make_pair(vchPubKey, vchCryptedSecret);\n+        mapCryptedKeys[vchPubKey.GetID()] = make_pair(vchPubKey, vchCryptedSecret);\n     }\n     return true;\n }\n \n-bool CCryptoKeyStore::GetKey(const CBitcoinAddress &address, CKey& keyOut) const\n+bool CCryptoKeyStore::GetKey(const CKeyID &address, CKey& keyOut) const\n {\n     {\n         LOCK(cs_KeyStore);\n@@ -162,10 +162,10 @@ bool CCryptoKeyStore::GetKey(const CBitcoinAddress &address, CKey& keyOut) const\n         CryptedKeyMap::const_iterator mi = mapCryptedKeys.find(address);\n         if (mi != mapCryptedKeys.end())\n         {\n-            const std::vector<unsigned char> &vchPubKey = (*mi).second.first;\n+            const CPubKey &vchPubKey = (*mi).second.first;\n             const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.second;\n             CSecret vchSecret;\n-            if (!DecryptSecret(vMasterKey, vchCryptedSecret, Hash(vchPubKey.begin(), vchPubKey.end()), vchSecret))\n+            if (!DecryptSecret(vMasterKey, vchCryptedSecret, vchPubKey.GetHash(), vchSecret))\n                 return false;\n             if (vchSecret.size() != 32)\n                 return false;\n@@ -177,7 +177,7 @@ bool CCryptoKeyStore::GetKey(const CBitcoinAddress &address, CKey& keyOut) const\n     return false;\n }\n \n-bool CCryptoKeyStore::GetPubKey(const CBitcoinAddress &address, std::vector<unsigned char>& vchPubKeyOut) const\n+bool CCryptoKeyStore::GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const\n {\n     {\n         LOCK(cs_KeyStore);\n@@ -207,10 +207,10 @@ bool CCryptoKeyStore::EncryptKeys(CKeyingMaterial& vMasterKeyIn)\n             CKey key;\n             if (!key.SetSecret(mKey.second.first, mKey.second.second))\n                 return false;\n-            const std::vector<unsigned char> vchPubKey = key.GetPubKey();\n+            const CPubKey vchPubKey = key.GetPubKey();\n             std::vector<unsigned char> vchCryptedSecret;\n             bool fCompressed;\n-            if (!EncryptSecret(vMasterKeyIn, key.GetSecret(fCompressed), Hash(vchPubKey.begin(), vchPubKey.end()), vchCryptedSecret))\n+            if (!EncryptSecret(vMasterKeyIn, key.GetSecret(fCompressed), vchPubKey.GetHash(), vchCryptedSecret))\n                 return false;\n             if (!AddCryptedKey(vchPubKey, vchCryptedSecret))\n                 return false;"
      },
      {
        "sha": "ab369bbf47347959e89e46ec96c94b8f5fa3a15d",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 20,
        "deletions": 21,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -7,7 +7,6 @@\n \n #include \"crypter.h\"\n #include \"sync.h\"\n-#include \"base58.h\"\n #include <boost/signals2/signal.hpp>\n \n class CScript;\n@@ -25,17 +24,17 @@ class CKeyStore\n     virtual bool AddKey(const CKey& key) =0;\n \n     // Check whether a key corresponding to a given address is present in the store.\n-    virtual bool HaveKey(const CBitcoinAddress &address) const =0;\n-    virtual bool GetKey(const CBitcoinAddress &address, CKey& keyOut) const =0;\n-    virtual void GetKeys(std::set<CBitcoinAddress> &setAddress) const =0;\n-    virtual bool GetPubKey(const CBitcoinAddress &address, std::vector<unsigned char>& vchPubKeyOut) const;\n+    virtual bool HaveKey(const CKeyID &address) const =0;\n+    virtual bool GetKey(const CKeyID &address, CKey& keyOut) const =0;\n+    virtual void GetKeys(std::set<CKeyID> &setAddress) const =0;\n+    virtual bool GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const;\n \n     // Support for BIP 0013 : see https://en.bitcoin.it/wiki/BIP_0013\n     virtual bool AddCScript(const CScript& redeemScript) =0;\n-    virtual bool HaveCScript(const uint160 &hash) const =0;\n-    virtual bool GetCScript(const uint160 &hash, CScript& redeemScriptOut) const =0;\n+    virtual bool HaveCScript(const CScriptID &hash) const =0;\n+    virtual bool GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const =0;\n \n-    virtual bool GetSecret(const CBitcoinAddress &address, CSecret& vchSecret, bool &fCompressed) const\n+    virtual bool GetSecret(const CKeyID &address, CSecret& vchSecret, bool &fCompressed) const\n     {\n         CKey key;\n         if (!GetKey(address, key))\n@@ -45,8 +44,8 @@ class CKeyStore\n     }\n };\n \n-typedef std::map<CBitcoinAddress, std::pair<CSecret, bool> > KeyMap;\n-typedef std::map<uint160, CScript > ScriptMap;\n+typedef std::map<CKeyID, std::pair<CSecret, bool> > KeyMap;\n+typedef std::map<CScriptID, CScript > ScriptMap;\n \n /** Basic key store, that keeps keys in an address->secret map */\n class CBasicKeyStore : public CKeyStore\n@@ -57,7 +56,7 @@ class CBasicKeyStore : public CKeyStore\n \n public:\n     bool AddKey(const CKey& key);\n-    bool HaveKey(const CBitcoinAddress &address) const\n+    bool HaveKey(const CKeyID &address) const\n     {\n         bool result;\n         {\n@@ -66,7 +65,7 @@ class CBasicKeyStore : public CKeyStore\n         }\n         return result;\n     }\n-    void GetKeys(std::set<CBitcoinAddress> &setAddress) const\n+    void GetKeys(std::set<CKeyID> &setAddress) const\n     {\n         setAddress.clear();\n         {\n@@ -79,7 +78,7 @@ class CBasicKeyStore : public CKeyStore\n             }\n         }\n     }\n-    bool GetKey(const CBitcoinAddress &address, CKey &keyOut) const\n+    bool GetKey(const CKeyID &address, CKey &keyOut) const\n     {\n         {\n             LOCK(cs_KeyStore);\n@@ -94,11 +93,11 @@ class CBasicKeyStore : public CKeyStore\n         return false;\n     }\n     virtual bool AddCScript(const CScript& redeemScript);\n-    virtual bool HaveCScript(const uint160 &hash) const;\n-    virtual bool GetCScript(const uint160 &hash, CScript& redeemScriptOut) const;\n+    virtual bool HaveCScript(const CScriptID &hash) const;\n+    virtual bool GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const;\n };\n \n-typedef std::map<CBitcoinAddress, std::pair<std::vector<unsigned char>, std::vector<unsigned char> > > CryptedKeyMap;\n+typedef std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;\n \n /** Keystore which keeps the private keys encrypted.\n  * It derives from the basic key store, which is used if no encryption is active.\n@@ -146,9 +145,9 @@ class CCryptoKeyStore : public CBasicKeyStore\n \n     bool Lock();\n \n-    virtual bool AddCryptedKey(const std::vector<unsigned char> &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n+    virtual bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n     bool AddKey(const CKey& key);\n-    bool HaveKey(const CBitcoinAddress &address) const\n+    bool HaveKey(const CKeyID &address) const\n     {\n         {\n             LOCK(cs_KeyStore);\n@@ -158,9 +157,9 @@ class CCryptoKeyStore : public CBasicKeyStore\n         }\n         return false;\n     }\n-    bool GetKey(const CBitcoinAddress &address, CKey& keyOut) const;\n-    bool GetPubKey(const CBitcoinAddress &address, std::vector<unsigned char>& vchPubKeyOut) const;\n-    void GetKeys(std::set<CBitcoinAddress> &setAddress) const\n+    bool GetKey(const CKeyID &address, CKey& keyOut) const;\n+    bool GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const;\n+    void GetKeys(std::set<CKeyID> &setAddress) const\n     {\n         if (!IsCrypted())\n         {"
      },
      {
        "sha": "be2733192e8dbad614d2f206cdfd26448eebfbfb",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 12,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -865,12 +865,12 @@ unsigned int static GetNextWorkRequired(const CBlockIndex* pindexLast, const CBl\n     // Only change once per interval\n     if ((pindexLast->nHeight+1) % nInterval != 0)\n     {\n-        // Special rules for testnet after 15 Feb 2012:\n-        if (fTestNet && pblock->nTime > 1329264000)\n+        // Special difficulty rule for testnet:\n+        if (fTestNet)\n         {\n             // If the new block's timestamp is more than 2* 10 minutes\n             // then allow mining of a min-difficulty block.\n-            if (pblock->nTime - pindexLast->nTime > nTargetSpacing*2)\n+            if (pblock->nTime > pindexLast->nTime + nTargetSpacing*2)\n                 return nProofOfWorkLimit;\n             else\n             {\n@@ -1875,7 +1875,7 @@ bool CheckDiskSpace(uint64 nAdditionalBytes)\n         strMiscWarning = strMessage;\n         printf(\"*** %s\\n\", strMessage.c_str());\n         uiInterface.ThreadSafeMessageBox(strMessage, \"Bitcoin\", CClientUIInterface::OK | CClientUIInterface::ICON_EXCLAMATION | CClientUIInterface::MODAL);\n-        uiInterface.QueueShutdown();\n+        StartShutdown();\n         return false;\n     }\n     return true;\n@@ -1926,12 +1926,11 @@ bool LoadBlockIndex(bool fAllowNew)\n {\n     if (fTestNet)\n     {\n-        hashGenesisBlock = uint256(\"0x00000007199508e34a9ff81e6ec0c477a4cccff2a4767a8eee39c11db367b008\");\n-        bnProofOfWorkLimit = CBigNum(~uint256(0) >> 28);\n         pchMessageStart[0] = 0xfa;\n         pchMessageStart[1] = 0xbf;\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n+        hashGenesisBlock = uint256(\"000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\");\n     }\n \n     //\n@@ -1977,8 +1976,7 @@ bool LoadBlockIndex(bool fAllowNew)\n         if (fTestNet)\n         {\n             block.nTime    = 1296688602;\n-            block.nBits    = 0x1d07fff8;\n-            block.nNonce   = 384568319;\n+            block.nNonce   = 414098458;\n         }\n \n         //// debug print\n@@ -2304,7 +2302,7 @@ unsigned char pchMessageStart[4] = { 0xf9, 0xbe, 0xb4, 0xd9 };\n \n bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n {\n-    static map<CService, vector<unsigned char> > mapReuseKey;\n+    static map<CService, CPubKey> mapReuseKey;\n     RandAddSeedPerfmon();\n     if (fDebug)\n         printf(\"received: %s (%d bytes)\\n\", strCommand.c_str(), vRecv.size());\n@@ -2379,7 +2377,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (!pfrom->fInbound)\n         {\n             // Advertise our address\n-            if (!fNoListen && !fUseProxy && !IsInitialBlockDownload())\n+            if (!fNoListen && !IsInitialBlockDownload())\n             {\n                 CAddress addr = GetLocalAddress(&pfrom->addr);\n                 if (addr.IsRoutable())\n@@ -3015,8 +3013,9 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         // Keep-alive ping. We send a nonce of zero because we don't use it anywhere\n         // right now.\n         if (pto->nLastSend && GetTime() - pto->nLastSend > 30 * 60 && pto->vSend.empty()) {\n+            uint64 nonce = 0;\n             if (pto->nVersion > BIP0031_VERSION)\n-                pto->PushMessage(\"ping\", 0);\n+                pto->PushMessage(\"ping\", nonce);\n             else\n                 pto->PushMessage(\"ping\");\n         }\n@@ -3037,7 +3036,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n                         pnode->setAddrKnown.clear();\n \n                     // Rebroadcast our address\n-                    if (!fNoListen && !fUseProxy)\n+                    if (!fNoListen)\n                     {\n                         CAddress addr = GetLocalAddress(&pnode->addr);\n                         if (addr.IsRoutable())"
      },
      {
        "sha": "804cb0f5439cca0ecdbf3d3c8a71a20856ce6297",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 36,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -47,7 +47,8 @@ struct LocalServiceInfo {\n // Global state variables\n //\n bool fClient = false;\n-static bool fUseUPnP = false;\n+bool fDiscover = true;\n+bool fUseUPnP = false;\n uint64 nLocalServices = (fClient ? 0 : NODE_NETWORK);\n static CCriticalSection cs_mapLocalHost;\n static map<CNetAddr, LocalServiceInfo> mapLocalHost;\n@@ -99,7 +100,7 @@ void CNode::PushGetBlocks(CBlockIndex* pindexBegin, uint256 hashEnd)\n // find 'best' local address for a particular peer\n bool GetLocal(CService& addr, const CNetAddr *paddrPeer)\n {\n-    if (fUseProxy || mapArgs.count(\"-connect\") || fNoListen)\n+    if (fNoListen)\n         return false;\n \n     int nBestScore = -1;\n@@ -211,7 +212,7 @@ bool AddLocal(const CService& addr, int nScore)\n     if (!addr.IsRoutable())\n         return false;\n \n-    if (!GetBoolArg(\"-discover\", true) && nScore < LOCAL_MANUAL)\n+    if (!fDiscover && nScore < LOCAL_MANUAL)\n         return false;\n \n     if (IsLimited(addr))\n@@ -345,9 +346,6 @@ bool GetMyExternalIP(CNetAddr& ipRet)\n     const char* pszGet;\n     const char* pszKeyword;\n \n-    if (fNoListen||fUseProxy)\n-        return false;\n-\n     for (int nLookup = 0; nLookup <= 1; nLookup++)\n     for (int nHost = 1; nHost <= 2; nHost++)\n     {\n@@ -542,7 +540,7 @@ void CNode::PushVersion()\n {\n     /// when NTP implemented, change to just nTime = GetAdjustedTime()\n     int64 nTime = (fInbound ? GetAdjustedTime() : GetTime());\n-    CAddress addrYou = (fUseProxy ? CAddress(CService(\"0.0.0.0\",0)) : addr);\n+    CAddress addrYou = (addr.IsRoutable() && !IsProxy(addr) ? addr : CAddress(CService(\"0.0.0.0\",0)));\n     CAddress addrMe = GetLocalAddress(&addr);\n     RAND_bytes((unsigned char*)&nLocalHostNonce, sizeof(nLocalHostNonce));\n     PushMessage(\"version\", PROTOCOL_VERSION, nLocalServices, nTime, addrYou, addrMe,\n@@ -1016,7 +1014,7 @@ void ThreadMapPort2(void* parg)\n     r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n     if (r == 1)\n     {\n-        if (GetBoolArg(\"-discover\", true)) {\n+        if (fDiscover) {\n             char externalIPAddress[40];\n             r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n             if(r != UPNPCOMMAND_SUCCESS)\n@@ -1093,20 +1091,16 @@ void ThreadMapPort2(void* parg)\n     }\n }\n \n-void MapPort(bool fMapPort)\n+void MapPort()\n {\n-    if (fUseUPnP != fMapPort)\n-    {\n-        fUseUPnP = fMapPort;\n-    }\n     if (fUseUPnP && vnThreadsRunning[THREAD_UPNP] < 1)\n     {\n         if (!CreateThread(ThreadMapPort, NULL))\n             printf(\"Error: ThreadMapPort(ThreadMapPort) failed\\n\");\n     }\n }\n #else\n-void MapPort(bool /* unused fMapPort */)\n+void MapPort()\n {\n     // Intentionally left blank.\n }\n@@ -1160,7 +1154,7 @@ void ThreadDNSAddressSeed2(void* parg)\n         printf(\"Loading addresses from DNS seeds (could take a while)\\n\");\n \n         for (unsigned int seed_idx = 0; seed_idx < ARRAYLEN(strDNSSeed); seed_idx++) {\n-            if (fProxyNameLookup) {\n+            if (GetNameProxy()) {\n                 AddOneShot(strDNSSeed[seed_idx][1]);\n             } else {\n                 vector<CNetAddr> vaddr;\n@@ -1394,8 +1388,7 @@ void ThreadOpenConnections2(void* parg)\n             return;\n \n         // Add seed nodes if IRC isn't working\n-        bool fTOR = (fUseProxy && addrProxy.GetPort() == 9050);\n-        if (addrman.size()==0 && (GetTime() - nStart > 60 || fTOR) && !fTestNet)\n+        if (addrman.size()==0 && (GetTime() - nStart > 60) && !fTestNet)\n         {\n             std::vector<CAddress> vAdd;\n             for (unsigned int i = 0; i < ARRAYLEN(pnSeed); i++)\n@@ -1492,7 +1485,7 @@ void ThreadOpenAddedConnections2(void* parg)\n     if (mapArgs.count(\"-addnode\") == 0)\n         return;\n \n-    if (fProxyNameLookup) {\n+    if (GetNameProxy()) {\n         while(!fShutdown) {\n             BOOST_FOREACH(string& strAddNode, mapMultiArgs[\"-addnode\"]) {\n                 CAddress addr;\n@@ -1665,7 +1658,7 @@ void ThreadMessageHandler2(void* parg)\n         vnThreadsRunning[THREAD_MESSAGEHANDLER]--;\n         Sleep(100);\n         if (fRequestShutdown)\n-            Shutdown(NULL);\n+            StartShutdown();\n         vnThreadsRunning[THREAD_MESSAGEHANDLER]++;\n         if (fShutdown)\n             return;\n@@ -1778,15 +1771,15 @@ bool BindListenPort(const CService &addrBind, string& strError)\n \n     vhListenSocket.push_back(hListenSocket);\n \n-    if (addrBind.IsRoutable() && GetBoolArg(\"-discover\", true))\n+    if (addrBind.IsRoutable() && fDiscover)\n         AddLocal(addrBind, LOCAL_BIND);\n \n     return true;\n }\n \n void static Discover()\n {\n-    if (!GetBoolArg(\"-discover\", true))\n+    if (!fDiscover)\n         return;\n \n #ifdef WIN32\n@@ -1835,22 +1828,11 @@ void static Discover()\n     }\n #endif\n \n-    if (!fUseProxy && !mapArgs.count(\"-connect\") && !fNoListen)\n-    {\n-        CreateThread(ThreadGetMyExternalIP, NULL);\n-    }\n+    CreateThread(ThreadGetMyExternalIP, NULL);\n }\n \n void StartNode(void* parg)\n {\n-#ifdef USE_UPNP\n-#if USE_UPNP\n-    fUseUPnP = GetBoolArg(\"-upnp\", true);\n-#else\n-    fUseUPnP = GetBoolArg(\"-upnp\", false);\n-#endif\n-#endif\n-\n     if (semOutbound == NULL) {\n         // initialize semaphore\n         int nMaxOutbound = min(MAX_OUTBOUND_CONNECTIONS, (int)GetArg(\"-maxconnections\", 125));\n@@ -1873,8 +1855,8 @@ void StartNode(void* parg)\n             printf(\"Error: CreateThread(ThreadDNSAddressSeed) failed\\n\");\n \n     // Map ports with UPnP\n-    if (fHaveUPnP)\n-        MapPort(fUseUPnP);\n+    if (fUseUPnP)\n+        MapPort();\n \n     // Get addresses from IRC and advertise ours\n     if (!CreateThread(ThreadIRCSeed, NULL))\n@@ -1930,7 +1912,9 @@ bool StopNode()\n     if (vnThreadsRunning[THREAD_MINER] > 0) printf(\"ThreadBitcoinMiner still running\\n\");\n     if (vnThreadsRunning[THREAD_RPCLISTENER] > 0) printf(\"ThreadRPCListener still running\\n\");\n     if (vnThreadsRunning[THREAD_RPCHANDLER] > 0) printf(\"ThreadsRPCServer still running\\n\");\n-    if (fHaveUPnP && vnThreadsRunning[THREAD_UPNP] > 0) printf(\"ThreadMapPort still running\\n\");\n+#ifdef USE_UPNP\n+    if (vnThreadsRunning[THREAD_UPNP] > 0) printf(\"ThreadMapPort still running\\n\");\n+#endif\n     if (vnThreadsRunning[THREAD_DNSSEED] > 0) printf(\"ThreadDNSAddressSeed still running\\n\");\n     if (vnThreadsRunning[THREAD_ADDEDCONNECTIONS] > 0) printf(\"ThreadOpenAddedConnections still running\\n\");\n     if (vnThreadsRunning[THREAD_DUMPADDRESS] > 0) printf(\"ThreadDumpAddresses still running\\n\");"
      },
      {
        "sha": "c9c965722eeafb142e684474dc7a75fcc4ffc5dc",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -36,7 +36,7 @@ void AddressCurrentlyConnected(const CService& addr);\n CNode* FindNode(const CNetAddr& ip);\n CNode* FindNode(const CService& ip);\n CNode* ConnectNode(CAddress addrConnect, const char *strDest = NULL, int64 nTimeout=0);\n-void MapPort(bool fMapPort);\n+void MapPort();\n unsigned short GetListenPort();\n bool BindListenPort(const CService &bindAddr, std::string& strError=REF(std::string()));\n void StartNode(void* parg);\n@@ -110,6 +110,8 @@ enum threadId\n };\n \n extern bool fClient;\n+extern bool fDiscover;\n+extern bool fUseUPnP;\n extern uint64 nLocalServices;\n extern uint64 nLocalHostNonce;\n extern boost::array<int, THREAD_MAX> vnThreadsRunning;"
      },
      {
        "sha": "d1ead79ebb5c2642bd1228b74a34ab6493db1841",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 79,
        "deletions": 44,
        "changes": 123,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -16,14 +16,11 @@\n using namespace std;\n \n // Settings\n-int nSocksVersion = 5;\n-int fUseProxy = false;\n-bool fProxyNameLookup = false;\n-bool fNameLookup = false;\n-CService addrProxy(\"127.0.0.1\",9050);\n+typedef std::pair<CService, int> proxyType;\n+static proxyType proxyInfo[NET_MAX];\n+static proxyType nameproxyInfo;\n int nConnectTimeout = 5000;\n-static bool vfNoProxy[NET_MAX] = {};\n-\n+bool fNameLookup = false;\n \n static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n \n@@ -36,11 +33,6 @@ enum Network ParseNetwork(std::string net) {\n     return NET_UNROUTABLE;\n }\n \n-void SetNoProxy(enum Network net, bool fNoProxy) {\n-    assert(net >= 0 && net < NET_MAX);\n-    vfNoProxy[net] = fNoProxy;\n-}\n-\n bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup)\n {\n     vIP.clear();\n@@ -431,29 +423,71 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n     return true;\n }\n \n+bool SetProxy(enum Network net, CService addrProxy, int nSocksVersion) {\n+    assert(net >= 0 && net < NET_MAX);\n+    if (nSocksVersion != 0 && nSocksVersion != 4 && nSocksVersion != 5)\n+        return false;\n+    if (nSocksVersion != 0 && !addrProxy.IsValid())\n+        return false;\n+    proxyInfo[net] = std::make_pair(addrProxy, nSocksVersion);\n+    return true;\n+}\n+\n+bool GetProxy(enum Network net, CService &addrProxy) {\n+    assert(net >= 0 && net < NET_MAX);\n+    if (!proxyInfo[net].second)\n+        return false;\n+    addrProxy = proxyInfo[net].first;\n+    return true;\n+}\n+\n+bool SetNameProxy(CService addrProxy, int nSocksVersion) {\n+    if (nSocksVersion != 0 && nSocksVersion != 5)\n+        return false;\n+    if (nSocksVersion != 0 && !addrProxy.IsValid())\n+        return false;\n+    nameproxyInfo = std::make_pair(addrProxy, nSocksVersion);\n+    return true;\n+}\n+\n+bool GetNameProxy() {\n+    return nameproxyInfo.second != 0;\n+}\n+\n+bool IsProxy(const CNetAddr &addr) {\n+    for (int i=0; i<NET_MAX; i++) {\n+        if (proxyInfo[i].second && (addr == (CNetAddr)proxyInfo[i].first))\n+            return true;\n+    }\n+    return false;\n+}\n+\n bool ConnectSocket(const CService &addrDest, SOCKET& hSocketRet, int nTimeout)\n {\n+    const proxyType &proxy = proxyInfo[addrDest.GetNetwork()];\n+\n+    // no proxy needed\n+    if (!proxy.second)\n+        return ConnectSocketDirectly(addrDest, hSocketRet, nTimeout);\n+\n     SOCKET hSocket = INVALID_SOCKET;\n-    bool fProxy = (fUseProxy && addrDest.IsRoutable() && !vfNoProxy[addrDest.GetNetwork()]);\n \n-    if (!ConnectSocketDirectly(fProxy ? addrProxy : addrDest, hSocket, nTimeout))\n+    // first connect to proxy server\n+    if (!ConnectSocketDirectly(proxy.first, hSocket, nTimeout))\n+        return false;\n+ \n+    // do socks negotiation\n+    switch (proxy.second) {\n+    case 4:\n+        if (!Socks4(addrDest, hSocket))\n+            return false;\n+        break;\n+    case 5:\n+        if (!Socks5(addrDest.ToStringIP(), addrDest.GetPort(), hSocket))\n+            return false;\n+        break;\n+    default:\n         return false;\n-\n-    if (fProxy)\n-    {\n-        switch(nSocksVersion)\n-        {\n-            case 4:\n-                if (!Socks4(addrDest, hSocket))\n-                    return false;\n-                break;\n-\n-            case 5:\n-            default:\n-                if (!Socks5(addrDest.ToStringIP(), addrDest.GetPort(), hSocket))\n-                    return false;\n-                break;\n-        } \n     }\n \n     hSocketRet = hSocket;\n@@ -465,6 +499,7 @@ bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest\n     string strDest(pszDest);\n     int port = portDefault;\n \n+    // split hostname and port\n     size_t colon = strDest.find_last_of(':');\n     if (colon != strDest.npos) {\n         char *endp = NULL;\n@@ -479,26 +514,26 @@ bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest\n         strDest = strDest.substr(1, strDest.size()-2);\n \n     SOCKET hSocket = INVALID_SOCKET;\n-    CService addrResolved(CNetAddr(strDest, fNameLookup && !fProxyNameLookup), port);\n+    CService addrResolved(CNetAddr(strDest, fNameLookup && !nameproxyInfo.second), port);\n     if (addrResolved.IsValid()) {\n         addr = addrResolved;\n         return ConnectSocket(addr, hSocketRet, nTimeout);\n     }\n     addr = CService(\"0.0.0.0:0\");\n-    if (!fNameLookup)\n+    if (!nameproxyInfo.second)\n         return false;\n-    if (!ConnectSocketDirectly(addrProxy, hSocket, nTimeout))\n+    if (!ConnectSocketDirectly(nameproxyInfo.first, hSocket, nTimeout))\n         return false;\n \n-    switch(nSocksVersion)\n-        {\n-            case 4: return false;\n-            case 5:\n-            default:\n-                if (!Socks5(strDest, port, hSocket))\n-                    return false;\n-                break;\n-        }\n+    switch(nameproxyInfo.second)\n+    {\n+        default:\n+        case 4: return false;\n+        case 5:\n+            if (!Socks5(strDest, port, hSocket))\n+                return false;\n+            break;\n+    }\n \n     hSocketRet = hSocket;\n     return true;\n@@ -975,7 +1010,7 @@ bool operator<(const CService& a, const CService& b)\n bool CService::GetSockAddr(struct sockaddr* paddr, socklen_t *addrlen) const\n {\n     if (IsIPv4()) {\n-        if (*addrlen < sizeof(struct sockaddr_in))\n+        if (*addrlen < (socklen_t)sizeof(struct sockaddr_in))\n             return false;\n         *addrlen = sizeof(struct sockaddr_in);\n         struct sockaddr_in *paddrin = (struct sockaddr_in*)paddr;\n@@ -988,7 +1023,7 @@ bool CService::GetSockAddr(struct sockaddr* paddr, socklen_t *addrlen) const\n     }\n #ifdef USE_IPV6\n     if (IsIPv6()) {\n-        if (*addrlen < sizeof(struct sockaddr_in6))\n+        if (*addrlen < (socklen_t)sizeof(struct sockaddr_in6))\n             return false;\n         *addrlen = sizeof(struct sockaddr_in6);\n         struct sockaddr_in6 *paddrin6 = (struct sockaddr_in6*)paddr;"
      },
      {
        "sha": "0f6fc9b49938768d0d7e848d12e8fe4c14f3cf2a",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -28,8 +28,8 @@ enum Network\n     NET_MAX\n };\n \n-enum Network ParseNetwork(std::string net);\n-void SetNoProxy(enum Network net, bool fNoProxy = true);\n+extern int nConnectTimeout;\n+extern bool fNameLookup;\n \n /** IP address (IPv6, or IPv4 using mapped IPv6 range (::FFFF:0:0/96)) */\n class CNetAddr\n@@ -132,6 +132,12 @@ class CService : public CNetAddr\n             )\n };\n \n+enum Network ParseNetwork(std::string net);\n+bool SetProxy(enum Network net, CService addrProxy, int nSocksVersion = 5);\n+bool GetProxy(enum Network net, CService &addrProxy);\n+bool IsProxy(const CNetAddr &addr);\n+bool SetNameProxy(CService addrProxy, int nSocksVersion = 5);\n+bool GetNameProxy();\n bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions = 0, bool fAllowLookup = true);\n bool LookupHostNumeric(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions = 0);\n bool Lookup(const char *pszName, CService& addr, int portDefault = 0, bool fAllowLookup = true);\n@@ -140,11 +146,4 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault = 0);\n bool ConnectSocket(const CService &addr, SOCKET& hSocketRet, int nTimeout = nConnectTimeout);\n bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault = 0, int nTimeout = nConnectTimeout);\n \n-// Settings\n-extern int nSocksVersion;\n-extern int fUseProxy;\n-extern bool fProxyNameLookup;\n-extern bool fNameLookup;\n-extern CService addrProxy;\n-\n #endif"
      },
      {
        "sha": "db25f2d28504b2fafe8f64b99d0577431bbb1b59",
        "filename": "src/noui.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/noui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/noui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/noui.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -20,16 +20,9 @@ static bool noui_ThreadSafeAskFee(int64 nFeeRequired, const std::string& strCapt\n     return true;\n }\n \n-static void noui_QueueShutdown()\n-{\n-    // Without UI, Shutdown can simply be started in a new thread\n-    CreateThread(Shutdown, NULL);\n-}\n-\n void noui_connect()\n {\n     // Connect bitcoind signal handlers\n     uiInterface.ThreadSafeMessageBox.connect(noui_ThreadSafeMessageBox);\n     uiInterface.ThreadSafeAskFee.connect(noui_ThreadSafeAskFee);\n-    uiInterface.QueueShutdown.connect(noui_QueueShutdown);\n }"
      },
      {
        "sha": "5849f5b23d6a579f52910e8a32f336a9c808bc54",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -136,11 +136,6 @@ void AddressBookPage::setModel(AddressTableModel *model)\n     connect(model, SIGNAL(rowsInserted(QModelIndex,int,int)),\n             this, SLOT(selectNewAddress(QModelIndex,int,int)));\n \n-    if(mode == ForSending)\n-    {\n-        // Auto-select first row when in sending mode\n-        ui->tableView->selectRow(0);\n-    }\n     selectionChanged();\n }\n "
      },
      {
        "sha": "e65d3915ecbbb6d24471aeaeb3448680fd7c0c8d",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 11,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -3,6 +3,7 @@\n #include \"walletmodel.h\"\n \n #include \"wallet.h\"\n+#include \"base58.h\"\n \n #include <QFont>\n #include <QColor>\n@@ -58,11 +59,11 @@ class AddressTablePriv\n         cachedAddressTable.clear();\n         {\n             LOCK(wallet->cs_wallet);\n-            BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, std::string)& item, wallet->mapAddressBook)\n+            BOOST_FOREACH(const PAIRTYPE(CTxDestination, std::string)& item, wallet->mapAddressBook)\n             {\n                 const CBitcoinAddress& address = item.first;\n                 const std::string& strName = item.second;\n-                bool fMine = wallet->HaveKey(address);\n+                bool fMine = IsMine(*wallet, address.Get());\n                 cachedAddressTable.append(AddressTableEntry(fMine ? AddressTableEntry::Receiving : AddressTableEntry::Sending,\n                                   QString::fromStdString(strName),\n                                   QString::fromStdString(address.ToString())));\n@@ -220,7 +221,8 @@ bool AddressTableModel::setData(const QModelIndex & index, const QVariant & valu\n         switch(index.column())\n         {\n         case Label:\n-            wallet->SetAddressBookName(rec->address.toStdString(), value.toString().toStdString());\n+            wallet->SetAddressBookName(CBitcoinAddress(rec->address.toStdString()).Get(), value.toString().toStdString());\n+            rec->label = value.toString();\n             break;\n         case Address:\n             // Refuse to set invalid address, set error status and return false\n@@ -235,9 +237,9 @@ bool AddressTableModel::setData(const QModelIndex & index, const QVariant & valu\n                 {\n                     LOCK(wallet->cs_wallet);\n                     // Remove old entry\n-                    wallet->DelAddressBookName(rec->address.toStdString());\n+                    wallet->DelAddressBookName(CBitcoinAddress(rec->address.toStdString()).Get());\n                     // Add new entry with new address\n-                    wallet->SetAddressBookName(value.toString().toStdString(), rec->label.toStdString());\n+                    wallet->SetAddressBookName(CBitcoinAddress(value.toString().toStdString()).Get(), rec->label.toStdString());\n                 }\n             }\n             break;\n@@ -314,7 +316,7 @@ QString AddressTableModel::addRow(const QString &type, const QString &label, con\n         // Check for duplicate addresses\n         {\n             LOCK(wallet->cs_wallet);\n-            if(wallet->mapAddressBook.count(strAddress))\n+            if(wallet->mapAddressBook.count(CBitcoinAddress(strAddress).Get()))\n             {\n                 editStatus = DUPLICATE_ADDRESS;\n                 return QString();\n@@ -331,13 +333,13 @@ QString AddressTableModel::addRow(const QString &type, const QString &label, con\n             editStatus = WALLET_UNLOCK_FAILURE;\n             return QString();\n         }\n-        std::vector<unsigned char> newKey;\n+        CPubKey newKey;\n         if(!wallet->GetKeyFromPool(newKey, true))\n         {\n             editStatus = KEY_GENERATION_FAILURE;\n             return QString();\n         }\n-        strAddress = CBitcoinAddress(newKey).ToString();\n+        strAddress = CBitcoinAddress(newKey.GetID()).ToString();\n     }\n     else\n     {\n@@ -346,7 +348,7 @@ QString AddressTableModel::addRow(const QString &type, const QString &label, con\n     // Add entry\n     {\n         LOCK(wallet->cs_wallet);\n-        wallet->SetAddressBookName(strAddress, strLabel);\n+        wallet->SetAddressBookName(CBitcoinAddress(strAddress).Get(), strLabel);\n     }\n     return QString::fromStdString(strAddress);\n }\n@@ -363,7 +365,7 @@ bool AddressTableModel::removeRows(int row, int count, const QModelIndex & paren\n     }\n     {\n         LOCK(wallet->cs_wallet);\n-        wallet->DelAddressBookName(rec->address.toStdString());\n+        wallet->DelAddressBookName(CBitcoinAddress(rec->address.toStdString()).Get());\n     }\n     return true;\n }\n@@ -375,7 +377,7 @@ QString AddressTableModel::labelForAddress(const QString &address) const\n     {\n         LOCK(wallet->cs_wallet);\n         CBitcoinAddress address_parsed(address.toStdString());\n-        std::map<CBitcoinAddress, std::string>::iterator mi = wallet->mapAddressBook.find(address_parsed);\n+        std::map<CTxDestination, std::string>::iterator mi = wallet->mapAddressBook.find(address_parsed.Get());\n         if (mi != wallet->mapAddressBook.end())\n         {\n             return QString::fromStdString(mi->second);"
      },
      {
        "sha": "8c8c73f0655c5d53ed2d1c3e7d7731d34813e864",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 49,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -113,54 +113,6 @@ static void handleRunawayException(std::exception *e)\n     exit(1);\n }\n \n-/** Help message for Bitcoin-Qt, shown with --help. */\n-class HelpMessageBox: public QMessageBox\n-{\n-    Q_OBJECT\n-public:\n-    HelpMessageBox(QWidget *parent = 0);\n-\n-    void exec();\n-private:\n-    QString header;\n-    QString coreOptions;\n-    QString uiOptions;\n-};\n-\n-HelpMessageBox::HelpMessageBox(QWidget *parent):\n-    QMessageBox(parent)\n-{\n-    header = tr(\"Bitcoin-Qt\") + \" \" + tr(\"version\") + \" \" +\n-        QString::fromStdString(FormatFullVersion()) + \"\\n\\n\" +\n-        tr(\"Usage:\") + \"\\n\" +\n-        \"  bitcoin-qt [\" + tr(\"options\") + \"]                     \" + \"\\n\";\n-    coreOptions = QString::fromStdString(HelpMessage());\n-    uiOptions = tr(\"UI options\") + \":\\n\" +\n-        \"  -lang=<lang>           \" + tr(\"Set language, for example \\\"de_DE\\\" (default: system locale)\") + \"\\n\" +\n-        \"  -min                   \" + tr(\"Start minimized\") + \"\\n\" +\n-        \"  -splash                \" + tr(\"Show splash screen on startup (default: 1)\") + \"\\n\";\n-\n-    setWindowTitle(tr(\"Bitcoin-Qt\"));\n-    setTextFormat(Qt::PlainText);\n-    // setMinimumWidth is ignored for QMessageBox so put in nonbreaking spaces to make it wider.\n-    QChar em_space(0x2003);\n-    setText(header + QString(em_space).repeated(40));\n-    setDetailedText(coreOptions + \"\\n\" + uiOptions);\n-}\n-#include \"bitcoin.moc\"\n-\n-void HelpMessageBox::exec()\n-{\n-#if defined(WIN32)\n-    // On windows, show a message box, as there is no stderr in windowed applications\n-    QMessageBox::exec();\n-#else\n-    // On other operating systems, the expected action is to print the message to the console.\n-    QString strUsage = header + \"\\n\" + coreOptions + \"\\n\" + uiOptions;\n-    fprintf(stderr, \"%s\", strUsage.toStdString().c_str());\n-#endif\n-}\n-\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n@@ -259,7 +211,7 @@ int main(int argc, char *argv[])\n     // but before showing splash screen.\n     if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n     {\n-        HelpMessageBox help;\n+        GUIUtil::HelpMessageBox help;\n         help.exec();\n         return 1;\n     }\n@@ -338,6 +290,7 @@ int main(int argc, char *argv[])\n                 window.setWalletModel(0);\n                 guiref = 0;\n             }\n+            // Shutdown the core and it's threads, but don't exit Bitcoin-Qt here\n             Shutdown(NULL);\n         }\n         else"
      },
      {
        "sha": "b13a87dd2450c0235d83263388b5a484ded9302f",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -65,7 +65,6 @@\n         <file alias=\"fi\">locale/bitcoin_fi.qm</file>\n         <file alias=\"fr\">locale/bitcoin_fr.qm</file>\n         <file alias=\"fr_CA\">locale/bitcoin_fr_CA.qm</file>\n-        <file alias=\"fr_FR\">locale/bitcoin_fr_FR.qm</file>\n         <file alias=\"he\">locale/bitcoin_he.qm</file>\n         <file alias=\"hr\">locale/bitcoin_hr.qm</file>\n         <file alias=\"hu\">locale/bitcoin_hu.qm</file>"
      },
      {
        "sha": "c642f4aa0b2389a9d9020b74f627cd2fe6bf03ac",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 45,
        "deletions": 40,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -409,17 +409,17 @@ void BitcoinGUI::createTrayIcon()\n \n     // Configuration of the tray icon (or dock icon) icon menu\n     trayIconMenu->addAction(toggleHideAction);\n-    trayIconMenu->addAction(openRPCConsoleAction);\n     trayIconMenu->addSeparator();\n-    trayIconMenu->addAction(messageAction);\n-    trayIconMenu->addAction(verifyMessageAction);\n+    trayIconMenu->addAction(sendCoinsAction);\n+    trayIconMenu->addAction(receiveCoinsAction);\n #ifndef FIRST_CLASS_MESSAGING\n     trayIconMenu->addSeparator();\n #endif\n-    trayIconMenu->addAction(sendCoinsAction);\n-    trayIconMenu->addAction(receiveCoinsAction);\n+    trayIconMenu->addAction(messageAction);\n+    trayIconMenu->addAction(verifyMessageAction);\n     trayIconMenu->addSeparator();\n     trayIconMenu->addAction(optionsAction);\n+    trayIconMenu->addAction(openRPCConsoleAction);\n #ifndef Q_WS_MAC // This is built-in on Mac\n     trayIconMenu->addSeparator();\n     trayIconMenu->addAction(quitAction);\n@@ -439,28 +439,6 @@ void BitcoinGUI::trayIconActivated(QSystemTrayIcon::ActivationReason reason)\n }\n #endif\n \n-void BitcoinGUI::toggleHidden()\n-{\n-    // activateWindow() (sometimes) helps with keyboard focus on Windows\n-    if (isHidden())\n-    {\n-        show();\n-        activateWindow();\n-    }\n-    else if (isMinimized())\n-    {\n-        showNormal();\n-        activateWindow();\n-    }\n-    else if (GUIUtil::isObscured(this))\n-    {\n-        raise();\n-        activateWindow();\n-    }\n-    else\n-        hide();\n-}\n-\n void BitcoinGUI::optionsClicked()\n {\n     if(!clientModel || !clientModel->getOptionsModel())\n@@ -766,26 +744,34 @@ void BitcoinGUI::dropEvent(QDropEvent *event)\n {\n     if(event->mimeData()->hasUrls())\n     {\n-        gotoSendCoinsPage();\n+        int nValidUrisFound = 0;\n         QList<QUrl> uris = event->mimeData()->urls();\n         foreach(const QUrl &uri, uris)\n         {\n-            sendCoinsPage->handleURI(uri.toString());\n+            if (sendCoinsPage->handleURI(uri.toString()))\n+                nValidUrisFound++;\n         }\n+\n+        // if valid URIs were found\n+        if (nValidUrisFound)\n+            gotoSendCoinsPage();\n+        else\n+            notificator->notify(Notificator::Warning, tr(\"URI handling\"), tr(\"URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.\"));\n     }\n \n     event->acceptProposedAction();\n }\n \n void BitcoinGUI::handleURI(QString strURI)\n {\n-    gotoSendCoinsPage();\n-    sendCoinsPage->handleURI(strURI);\n-\n-    if(!isActiveWindow())\n-        activateWindow();\n-\n-    showNormalIfMinimized();\n+    // URI has to be valid\n+    if (sendCoinsPage->handleURI(strURI))\n+    {\n+        showNormalIfMinimized();\n+        gotoSendCoinsPage();\n+    }\n+    else\n+        notificator->notify(Notificator::Warning, tr(\"URI handling\"), tr(\"URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.\"));\n }\n \n void BitcoinGUI::setEncryptionStatus(int status)\n@@ -849,7 +835,7 @@ void BitcoinGUI::changePassphrase()\n \n void BitcoinGUI::verifyMessage()\n {\n-    VerifyMessageDialog *dlg = new VerifyMessageDialog(walletModel->getAddressTableModel(), this);\n+    VerifyMessageDialog *dlg = new VerifyMessageDialog(this);\n     dlg->setAttribute(Qt::WA_DeleteOnClose);\n     dlg->show();\n }\n@@ -867,10 +853,29 @@ void BitcoinGUI::unlockWallet()\n     }\n }\n \n-void BitcoinGUI::showNormalIfMinimized()\n+void BitcoinGUI::showNormalIfMinimized(bool fToggleHidden)\n {\n-    if(!isVisible()) // Show, if hidden\n+    // activateWindow() (sometimes) helps with keyboard focus on Windows\n+    if (isHidden())\n+    {\n         show();\n-    if(isMinimized()) // Unminimize, if minimized\n+        activateWindow();\n+    }\n+    else if (isMinimized())\n+    {\n         showNormal();\n+        activateWindow();\n+    }\n+    else if (GUIUtil::isObscured(this))\n+    {\n+        raise();\n+        activateWindow();\n+    }\n+    else if(fToggleHidden)\n+        hide();\n+}\n+\n+void BitcoinGUI::toggleHidden()\n+{\n+    showNormalIfMinimized(true);\n }"
      },
      {
        "sha": "3c82cbc968396bbb2b0fec5a159a6bb1ac6c817c",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -169,9 +169,9 @@ private slots:\n     /** Ask for pass phrase to unlock wallet temporarily */\n     void unlockWallet();\n \n-    /** Show window if hidden, unminimize when minimized */\n-    void showNormalIfMinimized();\n-    /** Hide window if visible, show if hidden */\n+    /** Show window if hidden, unminimize when minimized, rise when obscured or show if hidden and fToggleHidden is true */\n+    void showNormalIfMinimized(bool fToggleHidden = false);\n+    /** simply calls showNormalIfMinimized(true) for use in SLOT() macro */\n     void toggleHidden();\n };\n "
      },
      {
        "sha": "56214df7a7835fffa5aac9ca863461e852aa4685",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 115,
        "deletions": 119,
        "changes": 234,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -6,142 +6,138 @@\n #define UNUSED\n #endif\n static const char UNUSED *bitcoin_strings[] = {QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Unable to bind to %s on this computer.  Bitcoin is probably already running.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to bind to %s on this computer (bind returned error %d, %s)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: Disk space is low  \"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bitcoin version\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Usage:\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send command to -server or bitcoind\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"List commands\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Get help for a command\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bitcoin\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Options:\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify configuration file (default: bitcoin.conf)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify pid file (default: bitcoind.pid)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Generate coins\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Don't generate coins\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify data directory\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set database cache size in megabytes (default: 25)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set database disk log size in megabytes (default: 100)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify connection timeout (in milliseconds)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect through socks proxy\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Select the version of socks proxy to use (4 or 5, 5 is default)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Do not use proxy for connections to network <net> (IPv4 or IPv6)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Allow DNS lookups for -addnode, -seednode and -connect\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Pass DNS requests to (SOCKS5) proxy\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Listen for connections on <port> (default: 8333 or testnet: 18333)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maintain at most <n> connections to peers (default: 125)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Add a node to connect to and attempt to keep the connection open\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect only to the specified node\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to a node to retrieve peer addresses, and disconnect\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify your own public address\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only connect to nodes in network <net> (IPv4 or IPv6)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Try to discover public IP address (default: 1)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Find peers using internet relay chat (default: 0)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept connections from outside (default: 1)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bind to given address. Use [host]:port notation for IPv6\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Find peers using DNS lookup (default: 1)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Threshold for disconnecting misbehaving peers (default: 100)\"),\n+\"%s, you must set a rpcpassword in the configuration file:\\n\"\n+\" %s\\n\"\n+\"It is recommended you use the following random password:\\n\"\n+\"rpcuser=bitcoinrpc\\n\"\n+\"rpcpassword=%s\\n\"\n+\"(you do not need to remember this password)\\n\"\n+\"If the file does not exist, create it with owner-readable-only file \"\n+\"permissions.\\n\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Number of seconds to keep misbehaving peers from reconnecting (default: \"\n-\"86400)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maximum per-connection receive buffer, <n>*1000 bytes (default: 10000)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maximum per-connection send buffer, <n>*1000 bytes (default: 10000)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use Universal Plug and Play to map the listening port (default: 1)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use Universal Plug and Play to map the listening port (default: 0)\"),\n+\"Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:\"\n+\"@STRENGTH)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Cannot obtain a lock on data directory %s.  Bitcoin is probably already \"\n+\"running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Detach block and address databases. Increases shutdown time (default: 0)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fee per KB to add to transactions you send\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept command line and JSON-RPC commands\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Run in the background as a daemon and accept commands\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use the test network\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Output extra debugging information\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Prepend debug output with timestamp\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to console instead of debug.log file\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to debugger\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Username for JSON-RPC connections\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Password for JSON-RPC connections\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Listen for JSON-RPC connections on <port> (default: 8332)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Allow JSON-RPC connections from specified IP address\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send commands to node running on <ip> (default: 127.0.0.1)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Error: The transaction was rejected.  This might happen if some of the coins \"\n+\"in your wallet were already spent, such as if you used a copy of wallet.dat \"\n+\"and coins were spent in the copy but not marked as spent here.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Error: This transaction requires a transaction fee of at least %s because of \"\n+\"its amount, complexity, or use of recently received funds  \"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Execute command when the best block changes (%s in cmd is replaced by block \"\n \"hash)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Upgrade wallet to latest format\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set key pool size to <n> (default: 100)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescan the block chain for missing wallet transactions\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"How many blocks to check at startup (default: 2500, 0 = all)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"How thorough the block verification is (0-6, default: 1)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Imports blocks from external blk000?.dat file\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This help message\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"\\n\"\n-\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use OpenSSL (https) for JSON-RPC connections\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server certificate file (default: server.cert)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server private key (default: server.pem)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:\"\n-\"@STRENGTH)\"),\n+\"Number of seconds to keep misbehaving peers from reconnecting (default: \"\n+\"86400)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Cannot obtain a lock on data directory %s.  Bitcoin is probably already \"\n-\"running.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading addresses...\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading addr.dat\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading block index...\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading blkindex.dat\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading wallet...\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet.dat: Wallet corrupted\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet.dat: Wallet requires newer version of Bitcoin\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet needed to be rewritten: restart Bitcoin to complete\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet.dat\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot downgrade wallet\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot initialize keypool\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot write default address\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescanning...\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Done loading\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid -proxy address: '%s'\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown network specified in -noproxy: '%s'\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown network specified in -onlynet: '%s'\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown -socks proxy version requested: %i\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -bind address: '%s'\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Not listening on any port\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -externalip address: '%s'\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -paytxfee=<amount>: '%s'\"),\n+\"Unable to bind to %s on this computer. Bitcoin is probably already running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Warning: -paytxfee is set very high.  This is the transaction fee you will \"\n+\"Warning: -paytxfee is set very high. This is the transaction fee you will \"\n \"pay if you send a transaction.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: could not start node\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"To use the %s option\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"%s, you must set a rpcpassword in the configuration file:\\n\"\n-\" %s\\n\"\n-\"It is recommended you use the following random password:\\n\"\n-\"rpcuser=bitcoinrpc\\n\"\n-\"rpcpassword=%s\\n\"\n-\"(you do not need to remember this password)\\n\"\n-\"If the file does not exist, create it with owner-readable-only file \"\n-\"permissions.\\n\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"An error occured while setting up the RPC port %i for listening: %s\"),\n+\"Warning: Please check that your computer's date and time are correct.  If \"\n+\"your clock is wrong Bitcoin will not work properly.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"You must set rpcpassword=<password> in the configuration file:\\n\"\n \"%s\\n\"\n \"If the file does not exist, create it with owner-readable-only file \"\n \"permissions.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Warning: Please check that your computer's date and time are correct.  If \"\n-\"your clock is wrong Bitcoin will not work properly.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Wallet locked, unable to create transaction  \"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Error: This transaction requires a transaction fee of at least %s because of \"\n-\"its amount, complexity, or use of recently received funds  \"),\n+\"\\n\"\n+\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept command line and JSON-RPC commands\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept connections from outside (default: 1 if no -proxy or -connect)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Add a node to connect to and attempt to keep the connection open\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Allow DNS lookups for -addnode, -seednode and -connect\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Allow JSON-RPC connections from specified IP address\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"An error occured while setting up the RPC port %i for listening: %s\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bind to given address. Use [host]:port notation for IPv6\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bitcoin version\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bitcoin\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot downgrade wallet\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot initialize keypool\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -bind address: '%s'\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -externalip address: '%s'\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot write default address\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect only to the specified node(s)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect through socks proxy\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to a node to retrieve peer addresses, and disconnect\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Discover own IP address (default: 1 when listening and no -externalip)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Don't generate coins\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Done loading\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading blkindex.dat\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet.dat\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet.dat: Wallet corrupted\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet.dat: Wallet requires newer version of Bitcoin\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Transaction creation failed  \"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Sending...\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Error: The transaction was rejected.  This might happen if some of the coins \"\n-\"in your wallet were already spent, such as if you used a copy of wallet.dat \"\n-\"and coins were spent in the copy but not marked as spent here.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Wallet locked, unable to create transaction  \"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: could not start node\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to listen on any port. Use -listen=0 if you want this.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fee per KB to add to transactions you send\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Find peers using DNS lookup (default: 1)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Find peers using internet relay chat (default: 0)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Generate coins\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Get help for a command\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"How many blocks to check at startup (default: 2500, 0 = all)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"How thorough the block verification is (0-6, default: 1)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Imports blocks from external blk000?.dat file\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Insufficient funds\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid -proxy address: '%s'\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -paytxfee=<amount>: '%s'\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"List commands\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Listen for JSON-RPC connections on <port> (default: 8332)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Listen for connections on <port> (default: 8333 or testnet: 18333)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading addresses...\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading block index...\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading wallet...\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maintain at most <n> connections to peers (default: 125)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maximum per-connection receive buffer, <n>*1000 bytes (default: 10000)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maximum per-connection send buffer, <n>*1000 bytes (default: 10000)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only connect to nodes in network <net> (IPv4 or IPv6)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Options:\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Output extra debugging information\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Password for JSON-RPC connections\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Prepend debug output with timestamp\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescan the block chain for missing wallet transactions\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescanning...\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Run in the background as a daemon and accept commands\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Select the version of socks proxy to use (4-5, default: 5)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send command to -server or bitcoind\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send commands to node running on <ip> (default: 127.0.0.1)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to console instead of debug.log file\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to debugger\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Sending...\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server certificate file (default: server.cert)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server private key (default: server.pem)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set database cache size in megabytes (default: 25)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set database disk log size in megabytes (default: 100)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Set key pool size to <n> (default: 100)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify configuration file (default: bitcoin.conf)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify connection timeout (in milliseconds)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify data directory\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify pid file (default: bitcoind.pid)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify your own public address\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This help message\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Threshold for disconnecting misbehaving peers (default: 100)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"To use the %s option\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to bind to %s on this computer (bind returned error %d, %s)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown -socks proxy version requested: %i\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown network specified in -onlynet: '%s'\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Upgrade wallet to latest format\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Usage:\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use OpenSSL (https) for JSON-RPC connections\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use UPnP to map the listening port (default: 0)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use UPnP to map the listening port (default: 1 when listening)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use the test network\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Username for JSON-RPC connections\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet needed to be rewritten: restart Bitcoin to complete\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: Disk space is low\"),\n };\n\\ No newline at end of file"
      },
      {
        "sha": "cabbd5d2401342d5c6f7b0271dfe38f856feed3d",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -130,9 +130,9 @@ QString ClientModel::clientName() const\n     return QString::fromStdString(CLIENT_NAME);\n }\n \n-QDateTime ClientModel::formatClientStartupTime() const\n+QString ClientModel::formatClientStartupTime() const\n {\n-    return QDateTime::fromTime_t(nClientStartupTime);\n+    return QDateTime::fromTime_t(nClientStartupTime).toString();\n }\n \n // Handlers for core signals"
      },
      {
        "sha": "70d816ba9dd4a4ace324d09ea4b87b898a24aac5",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -41,7 +41,7 @@ class ClientModel : public QObject\n     QString formatFullVersion() const;\n     QString formatBuildDate() const;\n     QString clientName() const;\n-    QDateTime formatClientStartupTime() const;\n+    QString formatClientStartupTime() const;\n \n private:\n     OptionsModel *optionsModel;"
      },
      {
        "sha": "07e2324edbda72f626be8eef5bacc1fd37d7f6b1",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "added",
        "additions": 466,
        "deletions": 0,
        "changes": 466,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -0,0 +1,466 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<ui version=\"4.0\">\n+ <class>OptionsDialog</class>\n+ <widget class=\"QDialog\" name=\"OptionsDialog\">\n+  <property name=\"geometry\">\n+   <rect>\n+    <x>0</x>\n+    <y>0</y>\n+    <width>540</width>\n+    <height>380</height>\n+   </rect>\n+  </property>\n+  <property name=\"windowTitle\">\n+   <string>Options</string>\n+  </property>\n+  <property name=\"modal\">\n+   <bool>true</bool>\n+  </property>\n+  <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n+   <item>\n+    <widget class=\"QTabWidget\" name=\"tabWidget\">\n+     <property name=\"tabPosition\">\n+      <enum>QTabWidget::North</enum>\n+     </property>\n+     <property name=\"currentIndex\">\n+      <number>0</number>\n+     </property>\n+     <widget class=\"QWidget\" name=\"tabMain\">\n+      <attribute name=\"title\">\n+       <string>&amp;Main</string>\n+      </attribute>\n+      <layout class=\"QVBoxLayout\" name=\"verticalLayout_Main\">\n+       <item>\n+        <widget class=\"QLabel\" name=\"transactionFeeInfoLabel\">\n+         <property name=\"text\">\n+          <string>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</string>\n+         </property>\n+         <property name=\"textFormat\">\n+          <enum>Qt::PlainText</enum>\n+         </property>\n+         <property name=\"wordWrap\">\n+          <bool>true</bool>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_Main\">\n+         <item>\n+          <widget class=\"QLabel\" name=\"transactionFeeLabel\">\n+           <property name=\"text\">\n+            <string>Pay transaction &amp;fee</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>transactionFee</cstring>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"BitcoinAmountField\" name=\"transactionFee\"/>\n+         </item>\n+         <item>\n+          <spacer name=\"horizontalSpacer_Main\">\n+           <property name=\"orientation\">\n+            <enum>Qt::Horizontal</enum>\n+           </property>\n+           <property name=\"sizeHint\" stdset=\"0\">\n+            <size>\n+             <width>40</width>\n+             <height>20</height>\n+            </size>\n+           </property>\n+          </spacer>\n+         </item>\n+        </layout>\n+       </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"bitcoinAtStartup\">\n+         <property name=\"toolTip\">\n+          <string>Automatically start Bitcoin after logging in to the system.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>&amp;Start Bitcoin on system login</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"detachDatabases\">\n+         <property name=\"toolTip\">\n+          <string>Detach block and address databases at shutdown. This means they can be moved to another data directory, but it slows down shutdown. The wallet is always detached.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>&amp;Detach databases at shutdown</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <spacer name=\"verticalSpacer_Main\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Vertical</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>20</width>\n+           <height>40</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n+      </layout>\n+     </widget>\n+     <widget class=\"QWidget\" name=\"tabNetwork\">\n+      <attribute name=\"title\">\n+       <string>&amp;Network</string>\n+      </attribute>\n+      <layout class=\"QVBoxLayout\" name=\"verticalLayout_Network\">\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"mapPortUpnp\">\n+         <property name=\"toolTip\">\n+          <string>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>Map port using &amp;UPnP</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"connectSocks\">\n+         <property name=\"toolTip\">\n+          <string>Connect to the Bitcon network through a SOCKS proxy (e.g. when connecting through Tor).</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>&amp;Connect through SOCKS proxy:</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_Network\">\n+         <item>\n+          <widget class=\"QLabel\" name=\"proxyIpLabel\">\n+           <property name=\"text\">\n+            <string>Proxy &amp;IP:</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>proxyIp</cstring>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QValidatedLineEdit\" name=\"proxyIp\">\n+           <property name=\"maximumSize\">\n+            <size>\n+             <width>140</width>\n+             <height>16777215</height>\n+            </size>\n+           </property>\n+           <property name=\"toolTip\">\n+            <string>IP address of the proxy (e.g. 127.0.0.1)</string>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QLabel\" name=\"proxyPortLabel\">\n+           <property name=\"text\">\n+            <string>&amp;Port:</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>proxyPort</cstring>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QLineEdit\" name=\"proxyPort\">\n+           <property name=\"maximumSize\">\n+            <size>\n+             <width>55</width>\n+             <height>16777215</height>\n+            </size>\n+           </property>\n+           <property name=\"toolTip\">\n+            <string>Port of the proxy (e.g. 9050)</string>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QLabel\" name=\"socksVersionLabel\">\n+           <property name=\"text\">\n+            <string>SOCKS &amp;Version:</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>socksVersion</cstring>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QValueComboBox\" name=\"socksVersion\">\n+           <property name=\"toolTip\">\n+            <string>SOCKS version of the proxy (e.g. 5)</string>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <spacer name=\"horizontalSpacer_Network\">\n+           <property name=\"orientation\">\n+            <enum>Qt::Horizontal</enum>\n+           </property>\n+           <property name=\"sizeHint\" stdset=\"0\">\n+            <size>\n+             <width>40</width>\n+             <height>20</height>\n+            </size>\n+           </property>\n+          </spacer>\n+         </item>\n+        </layout>\n+       </item>\n+       <item>\n+        <spacer name=\"verticalSpacer_Network\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Vertical</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>20</width>\n+           <height>40</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n+      </layout>\n+     </widget>\n+     <widget class=\"QWidget\" name=\"tabWindow\">\n+      <attribute name=\"title\">\n+       <string>&amp;Window</string>\n+      </attribute>\n+      <layout class=\"QVBoxLayout\" name=\"verticalLayout_Window\">\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"minimizeToTray\">\n+         <property name=\"toolTip\">\n+          <string>Show only a tray icon after minimizing the window.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>&amp;Minimize to the tray instead of the taskbar</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"minimizeOnClose\">\n+         <property name=\"toolTip\">\n+          <string>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Quit in the menu.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>M&amp;inimize on close</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <spacer name=\"verticalSpacer_Window\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Vertical</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>20</width>\n+           <height>40</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n+      </layout>\n+     </widget>\n+     <widget class=\"QWidget\" name=\"tabDisplay\">\n+      <attribute name=\"title\">\n+       <string>&amp;Display</string>\n+      </attribute>\n+      <layout class=\"QVBoxLayout\" name=\"verticalLayout_Display\">\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_1_Display\">\n+         <item>\n+          <widget class=\"QLabel\" name=\"langLabel\">\n+           <property name=\"text\">\n+            <string>User Interface &amp;language:</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>lang</cstring>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QValueComboBox\" name=\"lang\">\n+           <property name=\"toolTip\">\n+            <string>The user interface language can be set here. This setting will take effect after restarting Bitcoin.</string>\n+           </property>\n+          </widget>\n+         </item>\n+        </layout>\n+       </item>\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2_Display\">\n+         <item>\n+          <widget class=\"QLabel\" name=\"unitLabel\">\n+           <property name=\"text\">\n+            <string>&amp;Unit to show amounts in:</string>\n+           </property>\n+           <property name=\"textFormat\">\n+            <enum>Qt::PlainText</enum>\n+           </property>\n+           <property name=\"buddy\">\n+            <cstring>unit</cstring>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QValueComboBox\" name=\"unit\">\n+           <property name=\"toolTip\">\n+            <string>Choose the default subdivision unit to show in the interface and when sending coins.</string>\n+           </property>\n+          </widget>\n+         </item>\n+        </layout>\n+       </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"displayAddresses\">\n+         <property name=\"toolTip\">\n+          <string>Whether to show Bitcoin addresses in the transaction list or not.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>&amp;Display addresses in transaction list</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <spacer name=\"verticalSpacer_Display\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Vertical</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>20</width>\n+           <height>40</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n+      </layout>\n+     </widget>\n+    </widget>\n+   </item>\n+   <item>\n+    <layout class=\"QHBoxLayout\" name=\"horizontalLayout_Buttons\">\n+     <item>\n+      <spacer name=\"horizontalSpacer_1\">\n+       <property name=\"orientation\">\n+        <enum>Qt::Horizontal</enum>\n+       </property>\n+       <property name=\"sizeHint\" stdset=\"0\">\n+        <size>\n+         <width>40</width>\n+         <height>48</height>\n+        </size>\n+       </property>\n+      </spacer>\n+     </item>\n+     <item>\n+      <widget class=\"QLabel\" name=\"statusLabel\">\n+       <property name=\"font\">\n+        <font>\n+         <weight>75</weight>\n+         <bold>true</bold>\n+        </font>\n+       </property>\n+       <property name=\"text\">\n+        <string/>\n+       </property>\n+       <property name=\"textFormat\">\n+        <enum>Qt::PlainText</enum>\n+       </property>\n+       <property name=\"wordWrap\">\n+        <bool>true</bool>\n+       </property>\n+      </widget>\n+     </item>\n+     <item>\n+      <spacer name=\"horizontalSpacer_2\">\n+       <property name=\"orientation\">\n+        <enum>Qt::Horizontal</enum>\n+       </property>\n+       <property name=\"sizeHint\" stdset=\"0\">\n+        <size>\n+         <width>40</width>\n+         <height>48</height>\n+        </size>\n+       </property>\n+      </spacer>\n+     </item>\n+     <item>\n+      <widget class=\"QPushButton\" name=\"okButton\">\n+       <property name=\"text\">\n+        <string>&amp;OK</string>\n+       </property>\n+      </widget>\n+     </item>\n+     <item>\n+      <widget class=\"QPushButton\" name=\"cancelButton\">\n+       <property name=\"text\">\n+        <string>&amp;Cancel</string>\n+       </property>\n+       <property name=\"autoDefault\">\n+        <bool>false</bool>\n+       </property>\n+      </widget>\n+     </item>\n+     <item>\n+      <widget class=\"QPushButton\" name=\"applyButton\">\n+       <property name=\"text\">\n+        <string>&amp;Apply</string>\n+       </property>\n+       <property name=\"autoDefault\">\n+        <bool>false</bool>\n+       </property>\n+       <property name=\"default\">\n+        <bool>false</bool>\n+       </property>\n+       <property name=\"flat\">\n+        <bool>false</bool>\n+       </property>\n+      </widget>\n+     </item>\n+    </layout>\n+   </item>\n+  </layout>\n+ </widget>\n+ <customwidgets>\n+  <customwidget>\n+   <class>BitcoinAmountField</class>\n+   <extends>QSpinBox</extends>\n+   <header>bitcoinamountfield.h</header>\n+  </customwidget>\n+  <customwidget>\n+   <class>QValueComboBox</class>\n+   <extends>QComboBox</extends>\n+   <header>qvaluecombobox.h</header>\n+  </customwidget>\n+  <customwidget>\n+   <class>QValidatedLineEdit</class>\n+   <extends>QLineEdit</extends>\n+   <header>qvalidatedlineedit.h</header>\n+  </customwidget>\n+ </customwidgets>\n+ <resources/>\n+ <connections/>\n+</ui>"
      },
      {
        "sha": "98cb63e9ff15c9830d264068abbf8d1fb4477586",
        "filename": "src/qt/forms/overviewpage.ui",
        "status": "modified",
        "additions": 30,
        "deletions": 4,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/forms/overviewpage.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/forms/overviewpage.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/overviewpage.ui?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -6,7 +6,7 @@\n    <rect>\n     <x>0</x>\n     <y>0</y>\n-    <width>552</width>\n+    <width>573</width>\n     <height>342</height>\n    </rect>\n   </property>\n@@ -105,7 +105,7 @@\n              <string>Your current balance</string>\n             </property>\n             <property name=\"text\">\n-             <string notr=\"true\">123.456 BTC</string>\n+             <string notr=\"true\">0 BTC</string>\n             </property>\n             <property name=\"textInteractionFlags\">\n              <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -141,14 +141,14 @@\n             </property>\n            </widget>\n           </item>\n-          <item row=\"2\" column=\"0\">\n+          <item row=\"3\" column=\"0\">\n            <widget class=\"QLabel\" name=\"label_2\">\n             <property name=\"text\">\n              <string>Number of transactions:</string>\n             </property>\n            </widget>\n           </item>\n-          <item row=\"2\" column=\"1\">\n+          <item row=\"3\" column=\"1\">\n            <widget class=\"QLabel\" name=\"labelNumTransactions\">\n             <property name=\"toolTip\">\n              <string>Total number of transactions in wallet</string>\n@@ -158,6 +158,32 @@\n             </property>\n            </widget>\n           </item>\n+          <item row=\"2\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"labelImmatureText\">\n+            <property name=\"text\">\n+             <string>Immature:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"2\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"labelImmature\">\n+            <property name=\"font\">\n+             <font>\n+              <weight>75</weight>\n+              <bold>true</bold>\n+             </font>\n+            </property>\n+            <property name=\"toolTip\">\n+             <string>Mined balance that has not yet matured</string>\n+            </property>\n+            <property name=\"text\">\n+             <string notr=\"true\">0 BTC</string>\n+            </property>\n+            <property name=\"textInteractionFlags\">\n+             <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+            </property>\n+           </widget>\n+          </item>\n          </layout>\n         </item>\n        </layout>"
      },
      {
        "sha": "be0f4ebe968f060104a2c063a8953854bbe8536c",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 31,
        "deletions": 2,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -6,8 +6,8 @@\n    <rect>\n     <x>0</x>\n     <y>0</y>\n-    <width>706</width>\n-    <height>446</height>\n+    <width>740</width>\n+    <height>450</height>\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n@@ -301,9 +301,38 @@\n          <property name=\"text\">\n           <string>&amp;Open</string>\n          </property>\n+         <property name=\"autoDefault\">\n+          <bool>false</bool>\n+         </property>\n         </widget>\n        </item>\n        <item row=\"15\" column=\"0\">\n+        <widget class=\"QLabel\" name=\"labelCLOptions\">\n+         <property name=\"font\">\n+          <font>\n+           <weight>75</weight>\n+           <bold>true</bold>\n+          </font>\n+         </property>\n+         <property name=\"text\">\n+          <string>Command-line options</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"16\" column=\"0\">\n+        <widget class=\"QPushButton\" name=\"showCLOptionsButton\">\n+         <property name=\"toolTip\">\n+          <string>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>&amp;Show</string>\n+         </property>\n+         <property name=\"autoDefault\">\n+          <bool>false</bool>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"17\" column=\"0\">\n         <spacer name=\"verticalSpacer\">\n          <property name=\"orientation\">\n           <enum>Qt::Vertical</enum>"
      },
      {
        "sha": "afe98b05ab552890b82821d968468a8e616edc5b",
        "filename": "src/qt/forms/verifymessagedialog.ui",
        "status": "modified",
        "additions": 46,
        "deletions": 31,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/forms/verifymessagedialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/forms/verifymessagedialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/verifymessagedialog.ui?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -6,8 +6,8 @@\n    <rect>\n     <x>0</x>\n     <y>0</y>\n-    <width>494</width>\n-    <height>342</height>\n+    <width>650</width>\n+    <height>380</height>\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n@@ -17,7 +17,7 @@\n    <item>\n     <widget class=\"QLabel\" name=\"label\">\n      <property name=\"text\">\n-      <string>Enter the message and signature below (be careful to correctly copy newlines, spaces, tabs and other invisible characters) to obtain the Bitcoin address used to sign the message.</string>\n+      <string>Enter the signing address, signature and message below (be careful to correctly copy newlines, spaces, tabs and other invisible characters) to verify the message.</string>\n      </property>\n      <property name=\"alignment\">\n       <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>\n@@ -28,38 +28,28 @@\n     </widget>\n    </item>\n    <item>\n-    <widget class=\"QPlainTextEdit\" name=\"edMessage\"/>\n-   </item>\n-   <item>\n-    <widget class=\"QLineEdit\" name=\"lnSig\">\n+    <widget class=\"QValidatedLineEdit\" name=\"lnAddress\">\n      <property name=\"text\">\n       <string/>\n      </property>\n     </widget>\n    </item>\n    <item>\n-    <widget class=\"QLineEdit\" name=\"lnAddress\">\n+    <widget class=\"QValidatedLineEdit\" name=\"lnSig\">\n      <property name=\"text\">\n       <string/>\n      </property>\n-     <property name=\"readOnly\">\n-      <bool>true</bool>\n-     </property>\n     </widget>\n    </item>\n    <item>\n-    <widget class=\"QLabel\" name=\"lblStatus\">\n-     <property name=\"text\">\n-      <string/>\n-     </property>\n-    </widget>\n+    <widget class=\"QPlainTextEdit\" name=\"edMessage\"/>\n    </item>\n    <item>\n     <layout class=\"QHBoxLayout\" name=\"horizontalLayout\">\n      <item>\n       <widget class=\"QPushButton\" name=\"verifyMessage\">\n        <property name=\"toolTip\">\n-        <string>Verify a message and obtain the Bitcoin address used to sign the message</string>\n+        <string>Verify a message to ensure it was signed with the specified Bitcoin address</string>\n        </property>\n        <property name=\"text\">\n         <string>&amp;Verify Message</string>\n@@ -71,33 +61,51 @@\n       </widget>\n      </item>\n      <item>\n-      <widget class=\"QPushButton\" name=\"copyToClipboard\">\n-       <property name=\"enabled\">\n-        <bool>false</bool>\n-       </property>\n+      <widget class=\"QPushButton\" name=\"clearButton\">\n        <property name=\"toolTip\">\n-        <string>Copy the currently selected address to the system clipboard</string>\n+        <string>Reset all verify message fields</string>\n        </property>\n        <property name=\"text\">\n-        <string>&amp;Copy Address</string>\n+        <string>Clear &amp;All</string>\n        </property>\n        <property name=\"icon\">\n         <iconset resource=\"../bitcoin.qrc\">\n-         <normaloff>:/icons/editcopy</normaloff>:/icons/editcopy</iconset>\n+         <normaloff>:/icons/remove</normaloff>:/icons/remove</iconset>\n        </property>\n       </widget>\n      </item>\n      <item>\n-      <widget class=\"QPushButton\" name=\"clearButton\">\n-       <property name=\"toolTip\">\n-        <string>Reset all verify message fields</string>\n+      <spacer name=\"horizontalSpacer_2\">\n+       <property name=\"orientation\">\n+        <enum>Qt::Horizontal</enum>\n+       </property>\n+       <property name=\"sizeHint\" stdset=\"0\">\n+        <size>\n+         <width>40</width>\n+         <height>20</height>\n+        </size>\n+       </property>\n+      </spacer>\n+     </item>\n+     <item>\n+      <widget class=\"QLabel\" name=\"lblStatus\">\n+       <property name=\"minimumSize\">\n+        <size>\n+         <width>0</width>\n+         <height>48</height>\n+        </size>\n+       </property>\n+       <property name=\"font\">\n+        <font>\n+         <weight>75</weight>\n+         <bold>true</bold>\n+        </font>\n        </property>\n        <property name=\"text\">\n-        <string>Clear &amp;All</string>\n+        <string/>\n        </property>\n-       <property name=\"icon\">\n-        <iconset resource=\"../bitcoin.qrc\">\n-         <normaloff>:/icons/remove</normaloff>:/icons/remove</iconset>\n+       <property name=\"wordWrap\">\n+        <bool>true</bool>\n        </property>\n       </widget>\n      </item>\n@@ -118,6 +126,13 @@\n    </item>\n   </layout>\n  </widget>\n+ <customwidgets>\n+  <customwidget>\n+   <class>QValidatedLineEdit</class>\n+   <extends>QLineEdit</extends>\n+   <header>qvalidatedlineedit.h</header>\n+  </customwidget>\n+ </customwidgets>\n  <resources>\n   <include location=\"../bitcoin.qrc\"/>\n  </resources>"
      },
      {
        "sha": "a8c2328853a3ab21eb4842f2915706135d4b6557",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 13,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -3,6 +3,8 @@\n #include \"walletmodel.h\"\n #include \"bitcoinunits.h\"\n #include \"util.h\"\n+#include \"init.h\"\n+#include \"base58.h\"\n \n #include <QString>\n #include <QDateTime>\n@@ -35,6 +37,8 @@\n #define NOMINMAX\n #endif\n #include \"shlwapi.h\"\n+#include \"shlobj.h\"\n+#include \"shellapi.h\"\n #endif\n \n namespace GUIUtil {\n@@ -77,6 +81,11 @@ bool parseBitcoinURI(const QUrl &uri, SendCoinsRecipient *out)\n     if(uri.scheme() != QString(\"bitcoin\"))\n         return false;\n \n+    // check if the address is valid\n+    CBitcoinAddress addressFromUri(uri.path().toStdString());\n+    if (!addressFromUri.IsValid())\n+        return false;\n+\n     SendCoinsRecipient rv;\n     rv.address = uri.path();\n     rv.amount = 0;\n@@ -219,30 +228,27 @@ Qt::ConnectionType blockingGUIThreadConnection()\n \n bool checkPoint(const QPoint &p, const QWidget *w)\n {\n-  QWidget *atW = qApp->widgetAt(w->mapToGlobal(p));\n-  if(!atW) return false;\n-  return atW->topLevelWidget() == w;\n+    QWidget *atW = qApp->widgetAt(w->mapToGlobal(p));\n+    if (!atW) return false;\n+    return atW->topLevelWidget() == w;\n }\n \n bool isObscured(QWidget *w)\n {\n-\n-  return !(checkPoint(QPoint(0, 0), w)\n-           && checkPoint(QPoint(w->width() - 1, 0), w)\n-           && checkPoint(QPoint(0, w->height() - 1), w)\n-           && checkPoint(QPoint(w->width() - 1, w->height() - 1), w)\n-           && checkPoint(QPoint(w->width()/2, w->height()/2), w));\n+    return !(checkPoint(QPoint(0, 0), w)\n+        && checkPoint(QPoint(w->width() - 1, 0), w)\n+        && checkPoint(QPoint(0, w->height() - 1), w)\n+        && checkPoint(QPoint(w->width() - 1, w->height() - 1), w)\n+        && checkPoint(QPoint(w->width() / 2, w->height() / 2), w));\n }\n \n void openDebugLogfile()\n {\n     boost::filesystem::path pathDebug = GetDataDir() / \"debug.log\";\n \n-#ifdef WIN32\n+    /* Open debug.log with the associated application */\n     if (boost::filesystem::exists(pathDebug))\n-        /* Open debug.log with the associated application */\n-        ShellExecuteA((HWND)0, (LPCSTR)\"open\", (LPCSTR)pathDebug.string().c_str(), NULL, NULL, SW_SHOWNORMAL);\n-#endif\n+        QDesktopServices::openUrl(QUrl::fromLocalFile(QString::fromStdString(pathDebug.string())));\n }\n \n ToolTipToRichTextFilter::ToolTipToRichTextFilter(int size_threshold, QObject *parent) :\n@@ -413,5 +419,39 @@ bool SetStartOnSystemStartup(bool fAutoStart) { return false; }\n \n #endif\n \n+HelpMessageBox::HelpMessageBox(QWidget *parent) :\n+    QMessageBox(parent)\n+{\n+    header = tr(\"Bitcoin-Qt\") + \" \" + tr(\"version\") + \" \" +\n+        QString::fromStdString(FormatFullVersion()) + \"\\n\\n\" +\n+        tr(\"Usage:\") + \"\\n\" +\n+        \"  bitcoin-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";\n+\n+    coreOptions = QString::fromStdString(HelpMessage());\n+\n+    uiOptions = tr(\"UI options\") + \":\\n\" +\n+        \"  -lang=<lang>           \" + tr(\"Set language, for example \\\"de_DE\\\" (default: system locale)\") + \"\\n\" +\n+        \"  -min                   \" + tr(\"Start minimized\") + \"\\n\" +\n+        \"  -splash                \" + tr(\"Show splash screen on startup (default: 1)\") + \"\\n\";\n+\n+    setWindowTitle(tr(\"Bitcoin-Qt\"));\n+    setTextFormat(Qt::PlainText);\n+    // setMinimumWidth is ignored for QMessageBox so put in nonbreaking spaces to make it wider.\n+    setText(header + QString(QChar(0x2003)).repeated(50));\n+    setDetailedText(coreOptions + \"\\n\" + uiOptions);\n+}\n+\n+void HelpMessageBox::exec()\n+{\n+#if defined(WIN32)\n+    // On windows, show a message box, as there is no stderr in windowed applications\n+    QMessageBox::exec();\n+#else\n+    // On other operating systems, the expected action is to print the message to the console.\n+    QString strUsage = header + \"\\n\" + coreOptions + \"\\n\" + uiOptions;\n+    fprintf(stderr, \"%s\", strUsage.toStdString().c_str());\n+#endif\n+}\n+\n } // namespace GUIUtil\n "
      },
      {
        "sha": "ca063485195710a68a2daff4f28f59978be46789",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -3,6 +3,7 @@\n \n #include <QString>\n #include <QObject>\n+#include <QMessageBox>\n \n QT_BEGIN_NAMESPACE\n class QFont;\n@@ -80,6 +81,7 @@ namespace GUIUtil\n     class ToolTipToRichTextFilter : public QObject\n     {\n         Q_OBJECT\n+\n     public:\n         explicit ToolTipToRichTextFilter(int size_threshold, QObject *parent = 0);\n \n@@ -93,6 +95,22 @@ namespace GUIUtil\n     bool GetStartOnSystemStartup();\n     bool SetStartOnSystemStartup(bool fAutoStart);\n \n+    /** Help message for Bitcoin-Qt, shown with --help. */\n+    class HelpMessageBox : public QMessageBox\n+    {\n+        Q_OBJECT\n+\n+    public:\n+        HelpMessageBox(QWidget *parent = 0);\n+\n+        void exec();\n+\n+    private:\n+        QString header;\n+        QString coreOptions;\n+        QString uiOptions;\n+    };\n+\n } // namespace GUIUtil\n \n #endif // GUIUTIL_H"
      },
      {
        "sha": "9006870b9f2dbe570d207a834add5291c5bff797",
        "filename": "src/qt/locale/bitcoin_bg.ts",
        "status": "modified",
        "additions": 743,
        "deletions": 490,
        "changes": 1233,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_bg.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_bg.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bg.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "deb7ea9040cb32d342b9be58c32215a023d097d0",
        "filename": "src/qt/locale/bitcoin_ca_ES.ts",
        "status": "modified",
        "additions": 1007,
        "deletions": 471,
        "changes": 1478,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_ca_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_ca_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca_ES.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "528e17ae992c74a22223a65923163f664f18db6d",
        "filename": "src/qt/locale/bitcoin_cs.ts",
        "status": "modified",
        "additions": 1097,
        "deletions": 556,
        "changes": 1653,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_cs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_cs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cs.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "66166a74c48bc661aeab6076887a478293c45ef5",
        "filename": "src/qt/locale/bitcoin_da.ts",
        "status": "modified",
        "additions": 1048,
        "deletions": 520,
        "changes": 1568,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_da.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_da.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_da.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "2b9aaf3296e7fa94f0497c03809758b19097d3e0",
        "filename": "src/qt/locale/bitcoin_de.ts",
        "status": "modified",
        "additions": 1098,
        "deletions": 557,
        "changes": 1655,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_de.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_de.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "2058e1a1237d85d5db4cbf3a2d3808c7487f7882",
        "filename": "src/qt/locale/bitcoin_el_GR.ts",
        "status": "modified",
        "additions": 755,
        "deletions": 503,
        "changes": 1258,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_el_GR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_el_GR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el_GR.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "afa30caf874dbf742946d0c5a86579dc87c367c3",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 523,
        "deletions": 461,
        "changes": 984,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -99,40 +99,40 @@ This product includes software developed by the OpenSSL Project for use in the O\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"297\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"287\"/>\n         <source>Export Address Book Data</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"298\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"288\"/>\n         <source>Comma separated file (*.csv)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"311\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"301\"/>\n         <source>Error exporting</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"311\"/>\n+        <location filename=\"../addressbookpage.cpp\" line=\"301\"/>\n         <source>Could not write to file %1.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n     <name>AddressTableModel</name>\n     <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"78\"/>\n+        <location filename=\"../addresstablemodel.cpp\" line=\"142\"/>\n         <source>Label</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"78\"/>\n+        <location filename=\"../addresstablemodel.cpp\" line=\"142\"/>\n         <source>Address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"114\"/>\n+        <location filename=\"../addresstablemodel.cpp\" line=\"178\"/>\n         <source>(no label)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -287,7 +287,7 @@ Are you sure you wish to encrypt your wallet?</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"517\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"515\"/>\n         <source>Synchronizing with network...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -336,11 +336,6 @@ Are you sure you wish to encrypt your wallet?</source>\n         <source>&amp;Send coins</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"210\"/>\n-        <source>Send coins to a bitcoin address</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"216\"/>\n         <source>Prove you control an address</source>\n@@ -381,11 +376,6 @@ Are you sure you wish to encrypt your wallet?</source>\n         <source>&amp;Options...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"246\"/>\n-        <source>Modify configuration options for bitcoin</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"252\"/>\n         <source>&amp;Encrypt Wallet...</source>\n@@ -402,15 +392,15 @@ Are you sure you wish to encrypt your wallet?</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location filename=\"../bitcoingui.cpp\" line=\"519\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"517\"/>\n         <source>~%n block(s) remaining</source>\n         <translation>\n             <numerusform>~%n block remaining</numerusform>\n             <numerusform>~%n blocks remaining</numerusform>\n         </translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"530\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"528\"/>\n         <source>Downloaded %1 of %2 blocks of transaction history (%3% done).</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -419,6 +409,16 @@ Are you sure you wish to encrypt your wallet?</source>\n         <source>&amp;Export...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+    <message>\n+        <location filename=\"../bitcoingui.cpp\" line=\"210\"/>\n+        <source>Send coins to a Bitcoin address</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../bitcoingui.cpp\" line=\"246\"/>\n+        <source>Modify configuration options for Bitcoin</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location filename=\"../bitcoingui.cpp\" line=\"249\"/>\n         <source>Show or hide the Bitcoin window</source>\n@@ -501,58 +501,53 @@ Are you sure you wish to encrypt your wallet?</source>\n         <source>Bitcoin client</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"429\"/>\n-        <source>bitcoin-qt</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n     <message numerus=\"yes\">\n-        <location filename=\"../bitcoingui.cpp\" line=\"493\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"492\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation>\n             <numerusform>%n active connection to Bitcoin network</numerusform>\n             <numerusform>%n active connections to Bitcoin network</numerusform>\n         </translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"542\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"540\"/>\n         <source>Downloaded %1 blocks of transaction history.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location filename=\"../bitcoingui.cpp\" line=\"557\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"555\"/>\n         <source>%n second(s) ago</source>\n         <translation>\n             <numerusform>%n second ago</numerusform>\n             <numerusform>%n seconds ago</numerusform>\n         </translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location filename=\"../bitcoingui.cpp\" line=\"561\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"559\"/>\n         <source>%n minute(s) ago</source>\n         <translation>\n             <numerusform>%n minute ago</numerusform>\n             <numerusform>%n minutes ago</numerusform>\n         </translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location filename=\"../bitcoingui.cpp\" line=\"565\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"563\"/>\n         <source>%n hour(s) ago</source>\n         <translation>\n             <numerusform>%n hour ago</numerusform>\n             <numerusform>%n hours ago</numerusform>\n         </translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location filename=\"../bitcoingui.cpp\" line=\"569\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"567\"/>\n         <source>%n day(s) ago</source>\n         <translation>\n             <numerusform>%n day ago</numerusform>\n             <numerusform>%n days ago</numerusform>\n         </translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"575\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"573\"/>\n         <source>Up to date</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -562,32 +557,32 @@ Are you sure you wish to encrypt your wallet?</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"588\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"590\"/>\n         <source>Last received block was generated %1.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"647\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"649\"/>\n         <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"652\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"654\"/>\n         <source>Confirm transaction fee</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"679\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"681\"/>\n         <source>Sent transaction</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"680\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"682\"/>\n         <source>Incoming transaction</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"681\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"683\"/>\n         <source>Date: %1\n Amount: %2\n Type: %3\n@@ -596,91 +591,46 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"802\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"804\"/>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"810\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"812\"/>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"833\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"835\"/>\n         <source>Backup Wallet</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"833\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"835\"/>\n         <source>Wallet Data (*.dat)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"836\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"838\"/>\n         <source>Backup Failed</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"836\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"838\"/>\n         <source>There was an error trying to save the wallet data to the new location.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"128\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"112\"/>\n         <source>A fatal error occured. Bitcoin can no longer continue safely and will quit.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n-    <name>DisplayOptionsPage</name>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"246\"/>\n-        <source>Display</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"252\"/>\n-        <source>User Interface &amp;Language: </source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"257\"/>\n-        <source>default</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"263\"/>\n-        <source>The user interface language can be set here. This setting will only take effect after restarting Bitcoin.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"273\"/>\n-        <source>&amp;Unit to show amounts in: </source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n+    <name>ClientModel</name>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"277\"/>\n-        <source>Choose the default subdivision unit to show in the interface, and when sending coins</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"284\"/>\n-        <source>&amp;Display addresses in transaction list</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"285\"/>\n-        <source>Whether to show Bitcoin addresses in the transaction list</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"303\"/>\n-        <source>Warning</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"303\"/>\n-        <source>This setting will take effect after restarting Bitcoin.</source>\n+        <location filename=\"../clientmodel.cpp\" line=\"84\"/>\n+        <source>Network Alert</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n@@ -738,7 +688,7 @@ Address: %4\n     </message>\n     <message>\n         <location filename=\"../editaddressdialog.cpp\" line=\"96\"/>\n-        <source>The entered address &quot;%1&quot; is not a valid bitcoin address.</source>\n+        <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -753,87 +703,54 @@ Address: %4\n     </message>\n </context>\n <context>\n-    <name>HelpMessageBox</name>\n+    <name>GUIUtil::HelpMessageBox</name>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"149\"/>\n-        <location filename=\"../bitcoin.cpp\" line=\"159\"/>\n+        <location filename=\"../guiutil.cpp\" line=\"420\"/>\n+        <location filename=\"../guiutil.cpp\" line=\"432\"/>\n         <source>Bitcoin-Qt</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"149\"/>\n+        <location filename=\"../guiutil.cpp\" line=\"420\"/>\n         <source>version</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"151\"/>\n+        <location filename=\"../guiutil.cpp\" line=\"422\"/>\n         <source>Usage:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"154\"/>\n+        <location filename=\"../guiutil.cpp\" line=\"423\"/>\n+        <source>command-line options</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../guiutil.cpp\" line=\"427\"/>\n         <source>UI options</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"155\"/>\n+        <location filename=\"../guiutil.cpp\" line=\"428\"/>\n         <source>Set language, for example &quot;de_DE&quot; (default: system locale)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"156\"/>\n+        <location filename=\"../guiutil.cpp\" line=\"429\"/>\n         <source>Start minimized</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"157\"/>\n+        <location filename=\"../guiutil.cpp\" line=\"430\"/>\n         <source>Show splash screen on startup (default: 1)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n-<context>\n-    <name>MainOptionsPage</name>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"227\"/>\n-        <source>Detach block and address databases at shutdown. This means they can be moved to another data directory, but it slows down shutdown. The wallet is always detached.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"212\"/>\n-        <source>Pay transaction &amp;fee</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"204\"/>\n-        <source>Main</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"206\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"222\"/>\n-        <source>&amp;Start Bitcoin on system login</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"223\"/>\n-        <source>Automatically start Bitcoin after logging in to the system</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"226\"/>\n-        <source>&amp;Detach databases at shutdown</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-</context>\n <context>\n     <name>MessagePage</name>\n     <message>\n         <location filename=\"../forms/messagepage.ui\" line=\"14\"/>\n-        <source>Sign Message Dialog</source>\n+        <source>Sign Message</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -892,7 +809,7 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../messagepage.cpp\" line=\"30\"/>\n+        <location filename=\"../messagepage.cpp\" line=\"31\"/>\n         <source>Click &quot;Sign Message&quot; to get signature</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -907,86 +824,231 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../messagepage.cpp\" line=\"29\"/>\n+        <location filename=\"../messagepage.cpp\" line=\"30\"/>\n         <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../messagepage.cpp\" line=\"82\"/>\n-        <location filename=\"../messagepage.cpp\" line=\"97\"/>\n-        <location filename=\"../messagepage.cpp\" line=\"109\"/>\n+        <location filename=\"../messagepage.cpp\" line=\"83\"/>\n+        <location filename=\"../messagepage.cpp\" line=\"90\"/>\n+        <location filename=\"../messagepage.cpp\" line=\"105\"/>\n+        <location filename=\"../messagepage.cpp\" line=\"117\"/>\n         <source>Error signing</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../messagepage.cpp\" line=\"82\"/>\n+        <location filename=\"../messagepage.cpp\" line=\"83\"/>\n         <source>%1 is not a valid address.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../messagepage.cpp\" line=\"97\"/>\n+        <location filename=\"../messagepage.cpp\" line=\"90\"/>\n+        <source>%1 does not refer to a key.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../messagepage.cpp\" line=\"105\"/>\n         <source>Private key for %1 is not available.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../messagepage.cpp\" line=\"109\"/>\n+        <location filename=\"../messagepage.cpp\" line=\"117\"/>\n         <source>Sign failed</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n-    <name>NetworkOptionsPage</name>\n+    <name>OptionsDialog</name>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"345\"/>\n-        <source>Network</source>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"14\"/>\n+        <source>Options</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"347\"/>\n-        <source>Map port using &amp;UPnP</source>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"30\"/>\n+        <source>&amp;Main</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"36\"/>\n+        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"51\"/>\n+        <source>Pay transaction &amp;fee</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"82\"/>\n+        <source>Automatically start Bitcoin after logging in to the system.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"85\"/>\n+        <source>&amp;Start Bitcoin on system login</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"92\"/>\n+        <source>Detach block and address databases at shutdown. This means they can be moved to another data directory, but it slows down shutdown. The wallet is always detached.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"348\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"95\"/>\n+        <source>&amp;Detach databases at shutdown</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"116\"/>\n+        <source>&amp;Network</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"122\"/>\n         <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"351\"/>\n-        <source>&amp;Connect through SOCKS4 proxy:</source>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"125\"/>\n+        <source>Map port using &amp;UPnP</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"132\"/>\n+        <source>Connect to the Bitcon network through a SOCKS proxy (e.g. when connecting through Tor).</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"352\"/>\n-        <source>Connect to the Bitcon network through a SOCKS4 proxy (e.g. when connecting through Tor)</source>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"135\"/>\n+        <source>&amp;Connect through SOCKS proxy:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"357\"/>\n-        <source>Proxy &amp;IP: </source>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"144\"/>\n+        <source>Proxy &amp;IP:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"363\"/>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"163\"/>\n         <source>IP address of the proxy (e.g. 127.0.0.1)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"366\"/>\n-        <source>&amp;Port: </source>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"170\"/>\n+        <source>&amp;Port:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"372\"/>\n-        <source>Port of the proxy (e.g. 1234)</source>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"189\"/>\n+        <source>Port of the proxy (e.g. 9050)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-</context>\n-<context>\n-    <name>OptionsDialog</name>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"135\"/>\n-        <source>Options</source>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"196\"/>\n+        <source>SOCKS &amp;Version:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"209\"/>\n+        <source>SOCKS version of the proxy (e.g. 5)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"245\"/>\n+        <source>&amp;Window</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"251\"/>\n+        <source>Show only a tray icon after minimizing the window.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"254\"/>\n+        <source>&amp;Minimize to the tray instead of the taskbar</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"261\"/>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Quit in the menu.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"264\"/>\n+        <source>M&amp;inimize on close</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"285\"/>\n+        <source>&amp;Display</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"293\"/>\n+        <source>User Interface &amp;language:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"306\"/>\n+        <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"317\"/>\n+        <source>&amp;Unit to show amounts in:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"330\"/>\n+        <source>Choose the default subdivision unit to show in the interface and when sending coins.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"339\"/>\n+        <source>Whether to show Bitcoin addresses in the transaction list or not.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"342\"/>\n+        <source>&amp;Display addresses in transaction list</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"413\"/>\n+        <source>&amp;OK</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"420\"/>\n+        <source>&amp;Cancel</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/optionsdialog.ui\" line=\"430\"/>\n+        <source>&amp;Apply</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../optionsdialog.cpp\" line=\"62\"/>\n+        <source>default</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../optionsdialog.cpp\" line=\"173\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"182\"/>\n+        <source>Warning</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../optionsdialog.cpp\" line=\"173\"/>\n+        <location filename=\"../optionsdialog.cpp\" line=\"182\"/>\n+        <source>This setting will take effect after restarting Bitcoin.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../optionsdialog.cpp\" line=\"207\"/>\n+        <source>The supplied proxy address is invalid.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n@@ -998,50 +1060,67 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"40\"/>\n-        <source>Balance:</source>\n+        <location filename=\"../forms/overviewpage.ui\" line=\"47\"/>\n+        <location filename=\"../forms/overviewpage.ui\" line=\"230\"/>\n+        <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"69\"/>\n-        <source>Number of transactions:</source>\n+        <location filename=\"../forms/overviewpage.ui\" line=\"89\"/>\n+        <source>Balance:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"79\"/>\n-        <source>0</source>\n+        <location filename=\"../forms/overviewpage.ui\" line=\"147\"/>\n+        <source>Number of transactions:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"86\"/>\n+        <location filename=\"../forms/overviewpage.ui\" line=\"118\"/>\n         <source>Unconfirmed:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"122\"/>\n+        <location filename=\"../forms/overviewpage.ui\" line=\"40\"/>\n         <source>Wallet</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"158\"/>\n+        <location filename=\"../forms/overviewpage.ui\" line=\"164\"/>\n+        <source>Immature:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/overviewpage.ui\" line=\"177\"/>\n+        <source>Mined balance that has not yet matured</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/overviewpage.ui\" line=\"223\"/>\n         <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"56\"/>\n+        <location filename=\"../forms/overviewpage.ui\" line=\"105\"/>\n         <source>Your current balance</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"102\"/>\n+        <location filename=\"../forms/overviewpage.ui\" line=\"134\"/>\n         <source>Total of transactions that have yet to be confirmed, and do not yet count toward the current balance</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"76\"/>\n+        <location filename=\"../forms/overviewpage.ui\" line=\"154\"/>\n         <source>Total number of transactions in wallet</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+    <message>\n+        <location filename=\"../overviewpage.cpp\" line=\"112\"/>\n+        <location filename=\"../overviewpage.cpp\" line=\"113\"/>\n+        <source>out of sync</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n </context>\n <context>\n     <name>QRCodeDialog</name>\n@@ -1202,7 +1281,22 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/rpcconsole.ui\" line=\"323\"/>\n+        <location filename=\"../forms/rpcconsole.ui\" line=\"318\"/>\n+        <source>Command-line options</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/rpcconsole.ui\" line=\"325\"/>\n+        <source>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/rpcconsole.ui\" line=\"328\"/>\n+        <source>&amp;Show</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../forms/rpcconsole.ui\" line=\"352\"/>\n         <source>&amp;Console</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1212,13 +1306,23 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/rpcconsole.ui\" line=\"372\"/>\n+        <location filename=\"../forms/rpcconsole.ui\" line=\"401\"/>\n         <source>Clear console</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+    <message>\n+        <location filename=\"../rpcconsole.cpp\" line=\"209\"/>\n+        <source>Welcome to the Bitcoin RPC console.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location filename=\"../rpcconsole.cpp\" line=\"210\"/>\n-        <source>Welcome to the Bitcoin RPC console.&lt;br&gt;Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.&lt;br&gt;Type &lt;b&gt;help&lt;/b&gt; for an overview of available commands.</source>\n+        <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../rpcconsole.cpp\" line=\"211\"/>\n+        <source>Type &lt;b&gt;help&lt;/b&gt; for an overview of available commands.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n@@ -1399,141 +1503,141 @@ Address: %4\n <context>\n     <name>TransactionDesc</name>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"20\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"21\"/>\n         <source>Open for %1 blocks</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"22\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"23\"/>\n         <source>Open until %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"28\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"29\"/>\n         <source>%1/offline?</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"30\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"31\"/>\n         <source>%1/unconfirmed</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"32\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"33\"/>\n         <source>%1 confirmations</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"50\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"51\"/>\n         <source>&lt;b&gt;Status:&lt;/b&gt; </source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"55\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"56\"/>\n         <source>, has not been successfully broadcast yet</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"57\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"58\"/>\n         <source>, broadcast through %1 node</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"59\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"60\"/>\n         <source>, broadcast through %1 nodes</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"63\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"64\"/>\n         <source>&lt;b&gt;Date:&lt;/b&gt; </source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"70\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"71\"/>\n         <source>&lt;b&gt;Source:&lt;/b&gt; Generated&lt;br&gt;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"76\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"93\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"77\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"94\"/>\n         <source>&lt;b&gt;From:&lt;/b&gt; </source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"93\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"94\"/>\n         <source>unknown</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"94\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"117\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"176\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"95\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"118\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"178\"/>\n         <source>&lt;b&gt;To:&lt;/b&gt; </source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"97\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"98\"/>\n         <source> (yours, label: </source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"99\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"100\"/>\n         <source> (yours)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"134\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"148\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"193\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"210\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"136\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"150\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"195\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"212\"/>\n         <source>&lt;b&gt;Credit:&lt;/b&gt; </source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"136\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"138\"/>\n         <source>(%1 matures in %2 more blocks)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"140\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"142\"/>\n         <source>(not accepted)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"184\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"192\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"207\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"186\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"194\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"209\"/>\n         <source>&lt;b&gt;Debit:&lt;/b&gt; </source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"198\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"200\"/>\n         <source>&lt;b&gt;Transaction fee:&lt;/b&gt; </source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"214\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"216\"/>\n         <source>&lt;b&gt;Net amount:&lt;/b&gt; </source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"220\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"222\"/>\n         <source>Message:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"222\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"224\"/>\n         <source>Comment:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"224\"/>\n+        <location filename=\"../transactiondesc.cpp\" line=\"226\"/>\n         <source>Transaction ID:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"227\"/>\n-        <source>Generated coins must wait 120 blocks before they can be spent.  When you generated this block, it was broadcast to the network to be added to the block chain.  If it fails to get into the chain, it will change to &quot;not accepted&quot; and not be spendable.  This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n+        <location filename=\"../transactiondesc.cpp\" line=\"229\"/>\n+        <source>Generated coins must mature 120 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, it&apos;s state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n@@ -1553,123 +1657,123 @@ Address: %4\n <context>\n     <name>TransactionTableModel</name>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"214\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"226\"/>\n         <source>Date</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"214\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"226\"/>\n         <source>Type</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"214\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"226\"/>\n         <source>Address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"214\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"226\"/>\n         <source>Amount</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"275\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"281\"/>\n         <source>Open for %n block(s)</source>\n         <translation>\n             <numerusform>Open for %n block</numerusform>\n             <numerusform>Open for %n blocks</numerusform>\n         </translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"278\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"284\"/>\n         <source>Open until %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"281\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"287\"/>\n         <source>Offline (%1 confirmations)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"284\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"290\"/>\n         <source>Unconfirmed (%1 of %2 confirmations)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"287\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"293\"/>\n         <source>Confirmed (%1 confirmations)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"295\"/>\n-        <source>Mined balance will be available in %n more blocks</source>\n-        <translation>\n-            <numerusform>Mined balance will be available in %n more block</numerusform>\n-            <numerusform>Mined balance will be available in %n more blocks</numerusform>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"301\"/>\n+        <source>Mined balance will be available when it matures in %n more block(s)</source>\n+        <translation type=\"unfinished\">\n+            <numerusform></numerusform>\n+            <numerusform></numerusform>\n         </translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"301\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"306\"/>\n         <source>This block was not received by any other nodes and will probably not be accepted!</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"304\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"309\"/>\n         <source>Generated but not accepted</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"347\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"352\"/>\n         <source>Received with</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"349\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"354\"/>\n         <source>Received from</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"352\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"357\"/>\n         <source>Sent to</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"354\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"359\"/>\n         <source>Payment to yourself</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"356\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"361\"/>\n         <source>Mined</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"394\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"399\"/>\n         <source>(n/a)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"593\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"598\"/>\n         <source>Transaction status. Hover over this field to show number of confirmations.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"595\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"600\"/>\n         <source>Date and time that the transaction was received.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"597\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"602\"/>\n         <source>Type of transaction.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"599\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"604\"/>\n         <source>Destination address of transaction.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"601\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"606\"/>\n         <source>Amount removed from or added to balance.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1846,623 +1950,581 @@ Address: %4\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/verifymessagedialog.ui\" line=\"20\"/>\n-        <source>Enter the message and signature below (be careful to correctly copy newlines, spaces, tabs and other invisible characters) to obtain the Bitcoin address used to sign the message.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/verifymessagedialog.ui\" line=\"62\"/>\n-        <source>Verify a message and obtain the Bitcoin address used to sign the message</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/verifymessagedialog.ui\" line=\"65\"/>\n+        <location filename=\"../forms/verifymessagedialog.ui\" line=\"55\"/>\n         <source>&amp;Verify Message</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/verifymessagedialog.ui\" line=\"79\"/>\n-        <source>Copy the currently selected address to the system clipboard</source>\n+        <location filename=\"../forms/verifymessagedialog.ui\" line=\"20\"/>\n+        <source>Enter the signing address, signature and message below (be careful to correctly copy newlines, spaces, tabs and other invisible characters) to verify the message.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/verifymessagedialog.ui\" line=\"82\"/>\n-        <source>&amp;Copy Address</source>\n+        <location filename=\"../forms/verifymessagedialog.ui\" line=\"52\"/>\n+        <source>Verify a message to ensure it was signed with the specified Bitcoin address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/verifymessagedialog.ui\" line=\"93\"/>\n+        <location filename=\"../forms/verifymessagedialog.ui\" line=\"66\"/>\n         <source>Reset all verify message fields</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../forms/verifymessagedialog.ui\" line=\"96\"/>\n+        <location filename=\"../forms/verifymessagedialog.ui\" line=\"69\"/>\n         <source>Clear &amp;All</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location filename=\"../verifymessagedialog.cpp\" line=\"27\"/>\n-        <source>Enter Bitcoin signature</source>\n+        <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location filename=\"../verifymessagedialog.cpp\" line=\"28\"/>\n-        <source>Click &quot;Apply&quot; to obtain address</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../verifymessagedialog.cpp\" line=\"54\"/>\n-        <location filename=\"../verifymessagedialog.cpp\" line=\"61\"/>\n-        <source>Invalid Signature</source>\n+        <source>Enter Bitcoin signature</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../verifymessagedialog.cpp\" line=\"54\"/>\n-        <source>The signature could not be decoded. Please check the signature and try again.</source>\n+        <location filename=\"../verifymessagedialog.cpp\" line=\"51\"/>\n+        <source>&quot;%1&quot; is not a valid address.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../verifymessagedialog.cpp\" line=\"61\"/>\n-        <source>The signature did not match the message digest. Please check the signature and try again.</source>\n+        <location filename=\"../verifymessagedialog.cpp\" line=\"51\"/>\n+        <location filename=\"../verifymessagedialog.cpp\" line=\"59\"/>\n+        <source>Please check the address and try again.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../verifymessagedialog.cpp\" line=\"71\"/>\n-        <source>Address not found in address book.</source>\n+        <location filename=\"../verifymessagedialog.cpp\" line=\"59\"/>\n+        <source>&quot;%1&quot; does not refer to a key.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../verifymessagedialog.cpp\" line=\"71\"/>\n-        <source>Address found in address book: %1</source>\n+        <location filename=\"../verifymessagedialog.cpp\" line=\"70\"/>\n+        <source>The signature could not be decoded.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-</context>\n-<context>\n-    <name>WalletModel</name>\n     <message>\n-        <location filename=\"../walletmodel.cpp\" line=\"142\"/>\n-        <source>Sending...</source>\n+        <location filename=\"../verifymessagedialog.cpp\" line=\"70\"/>\n+        <location filename=\"../verifymessagedialog.cpp\" line=\"83\"/>\n+        <source>Please check the signature and try again.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-</context>\n-<context>\n-    <name>WindowOptionsPage</name>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"313\"/>\n-        <source>Window</source>\n+        <location filename=\"../verifymessagedialog.cpp\" line=\"83\"/>\n+        <source>The signature did not match the message digest.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"316\"/>\n-        <source>&amp;Minimize to the tray instead of the taskbar</source>\n+        <location filename=\"../verifymessagedialog.cpp\" line=\"90\"/>\n+        <source>Message verification failed.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"317\"/>\n-        <source>Show only a tray icon after minimizing the window</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"320\"/>\n-        <source>M&amp;inimize on close</source>\n+        <location filename=\"../verifymessagedialog.cpp\" line=\"95\"/>\n+        <source>Message verified.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+</context>\n+<context>\n+    <name>WalletModel</name>\n     <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"321\"/>\n-        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Quit in the menu.</source>\n+        <location filename=\"../walletmodel.cpp\" line=\"167\"/>\n+        <source>Sending...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"12\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"61\"/>\n         <source>Bitcoin version</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"13\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"135\"/>\n         <source>Usage:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"14\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"113\"/>\n         <source>Send command to -server or bitcoind</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"15\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"95\"/>\n         <source>List commands</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"16\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"87\"/>\n         <source>Get help for a command</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"18\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"105\"/>\n         <source>Options:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"19\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"123\"/>\n         <source>Specify configuration file (default: bitcoin.conf)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"20\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"126\"/>\n         <source>Specify pid file (default: bitcoind.pid)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"21\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"86\"/>\n         <source>Generate coins</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"22\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"72\"/>\n         <source>Don&apos;t generate coins</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"23\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"125\"/>\n         <source>Specify data directory</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"24\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"120\"/>\n         <source>Set database cache size in megabytes (default: 25)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"25\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"121\"/>\n         <source>Set database disk log size in megabytes (default: 100)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"26\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"124\"/>\n         <source>Specify connection timeout (in milliseconds)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"32\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"97\"/>\n         <source>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"33\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"101\"/>\n         <source>Maintain at most &lt;n&gt; connections to peers (default: 125)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"35\"/>\n-        <source>Connect only to the specified node</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"36\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"70\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"37\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"127\"/>\n         <source>Specify your own public address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"38\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"104\"/>\n         <source>Only connect to nodes in network &lt;net&gt; (IPv4 or IPv6)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"39\"/>\n-        <source>Try to discover public IP address (default: 1)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"42\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"60\"/>\n         <source>Bind to given address. Use [host]:port notation for IPv6</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"44\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"129\"/>\n         <source>Threshold for disconnecting misbehaving peers (default: 100)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"45\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"35\"/>\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"48\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"102\"/>\n         <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: 10000)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"49\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"103\"/>\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: 10000)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"52\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"23\"/>\n         <source>Detach block and address databases. Increases shutdown time (default: 0)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"55\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"54\"/>\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"56\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"111\"/>\n         <source>Run in the background as a daemon and accept commands</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"57\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"139\"/>\n         <source>Use the test network</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"58\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"106\"/>\n         <source>Output extra debugging information</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"59\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"55\"/>\n+        <source>Accept connections from outside (default: 1 if no -proxy or -connect)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"68\"/>\n+        <source>Connect only to the specified node(s)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"71\"/>\n+        <source>Discover own IP address (default: 1 when listening and no -externalip)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"82\"/>\n+        <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"108\"/>\n         <source>Prepend debug output with timestamp</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"60\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"112\"/>\n+        <source>Select the version of socks proxy to use (4-5, default: 5)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"115\"/>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"61\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"116\"/>\n         <source>Send trace/debug info to debugger</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"62\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"137\"/>\n+        <source>Use UPnP to map the listening port (default: 0)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"138\"/>\n+        <source>Use UPnP to map the listening port (default: 1 when listening)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"140\"/>\n         <source>Username for JSON-RPC connections</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"63\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"107\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"64\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"96\"/>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 8332)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"65\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"58\"/>\n         <source>Allow JSON-RPC connections from specified IP address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"66\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"114\"/>\n         <source>Send commands to node running on &lt;ip&gt; (default: 127.0.0.1)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"67\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"32\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"70\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"134\"/>\n         <source>Upgrade wallet to latest format</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"71\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"122\"/>\n         <source>Set key pool size to &lt;n&gt; (default: 100)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"72\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"109\"/>\n         <source>Rescan the block chain for missing wallet transactions</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"73\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"88\"/>\n         <source>How many blocks to check at startup (default: 2500, 0 = all)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"74\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"89\"/>\n         <source>How thorough the block verification is (0-6, default: 1)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"75\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"90\"/>\n         <source>Imports blocks from external blk000?.dat file</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"77\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"51\"/>\n         <source>\n SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"80\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"136\"/>\n         <source>Use OpenSSL (https) for JSON-RPC connections</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"81\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"118\"/>\n         <source>Server certificate file (default: server.cert)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"82\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"119\"/>\n         <source>Server private key (default: server.pem)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"83\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"17\"/>\n         <source>Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"76\"/>\n-        <source>This help message</source>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"142\"/>\n+        <source>Warning: Disk space is low</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"86\"/>\n-        <source>Cannot obtain a lock on data directory %s.  Bitcoin is probably already running.</source>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"128\"/>\n+        <source>This help message</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"17\"/>\n-        <source>Bitcoin</source>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"20\"/>\n+        <source>Cannot obtain a lock on data directory %s.  Bitcoin is probably already running.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"8\"/>\n-        <source>Unable to bind to %s on this computer.  Bitcoin is probably already running.</source>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"62\"/>\n+        <source>Bitcoin</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"10\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"131\"/>\n         <source>Unable to bind to %s on this computer (bind returned error %d, %s)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"27\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"69\"/>\n         <source>Connect through socks proxy</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"28\"/>\n-        <source>Select the version of socks proxy to use (4 or 5, 5 is default)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"29\"/>\n-        <source>Do not use proxy for connections to network &lt;net&gt; (IPv4 or IPv6)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"30\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"57\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"31\"/>\n-        <source>Pass DNS requests to (SOCKS5) proxy</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"89\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"98\"/>\n         <source>Loading addresses...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"90\"/>\n-        <source>Error loading addr.dat</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"92\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"74\"/>\n         <source>Error loading blkindex.dat</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"94\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"76\"/>\n         <source>Error loading wallet.dat: Wallet corrupted</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"95\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"77\"/>\n         <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"96\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"141\"/>\n         <source>Wallet needed to be rewritten: restart Bitcoin to complete</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"97\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"75\"/>\n         <source>Error loading wallet.dat</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"103\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"92\"/>\n         <source>Invalid -proxy address: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"104\"/>\n-        <source>Unknown network specified in -noproxy: &apos;%s&apos;</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"105\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"133\"/>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"106\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"132\"/>\n         <source>Unknown -socks proxy version requested: %i</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"107\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"65\"/>\n         <source>Cannot resolve -bind address: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"108\"/>\n-        <source>Not listening on any port</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"109\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"66\"/>\n         <source>Cannot resolve -externalip address: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"110\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"93\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"114\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"81\"/>\n         <source>Error: could not start node</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"135\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"80\"/>\n         <source>Error: Wallet locked, unable to create transaction  </source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"136\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"29\"/>\n         <source>Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds  </source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"139\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"79\"/>\n         <source>Error: Transaction creation failed  </source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"140\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"117\"/>\n         <source>Sending...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"141\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"25\"/>\n         <source>Error: The transaction was rejected.  This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"145\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"94\"/>\n         <source>Invalid amount</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"146\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"91\"/>\n         <source>Insufficient funds</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"91\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"99\"/>\n         <source>Loading block index...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"34\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"56\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"40\"/>\n-        <source>Find peers using internet relay chat (default: 0)</source>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"38\"/>\n+        <source>Unable to bind to %s on this computer. Bitcoin is probably already running.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"41\"/>\n-        <source>Accept connections from outside (default: 1)</source>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"85\"/>\n+        <source>Find peers using internet relay chat (default: 0)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"43\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"84\"/>\n         <source>Find peers using DNS lookup (default: 1)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"50\"/>\n-        <source>Use Universal Plug and Play to map the listening port (default: 1)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"51\"/>\n-        <source>Use Universal Plug and Play to map the listening port (default: 0)</source>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"83\"/>\n+        <source>Fee per KB to add to transactions you send</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"54\"/>\n-        <source>Fee per KB to add to transactions you send</source>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"40\"/>\n+        <source>Warning: -paytxfee is set very high. This is the transaction fee you will pay if you send a transaction.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"93\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"100\"/>\n         <source>Loading wallet...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"98\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"63\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"99\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"64\"/>\n         <source>Cannot initialize keypool</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"100\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"67\"/>\n         <source>Cannot write default address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"101\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"110\"/>\n         <source>Rescanning...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"102\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"73\"/>\n         <source>Done loading</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"111\"/>\n-        <source>Warning: -paytxfee is set very high.  This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"11\"/>\n-        <source>Warning: Disk space is low  </source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"115\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"130\"/>\n         <source>To use the %s option</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"116\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"8\"/>\n         <source>%s, you must set a rpcpassword in the configuration file:\n  %s\n It is recommended you use the following random password:\n@@ -2474,24 +2536,24 @@ If the file does not exist, create it with owner-readable-only file permissions.\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"125\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"78\"/>\n         <source>Error</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"126\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"59\"/>\n         <source>An error occured while setting up the RPC port %i for listening: %s</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"127\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"46\"/>\n         <source>You must set rpcpassword=&lt;password&gt; in the configuration file:\n %s\n If the file does not exist, create it with owner-readable-only file permissions.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"132\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"43\"/>\n         <source>Warning: Please check that your computer&apos;s date and time are correct.  If your clock is wrong Bitcoin will not work properly.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>"
      },
      {
        "sha": "2636d196d6d17fec19562019425c6a1c67186446",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 1211,
        "deletions": 677,
        "changes": 1888,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "89228e5a97dbc468a1d433d59ec2854c79a282a2",
        "filename": "src/qt/locale/bitcoin_es_CL.ts",
        "status": "modified",
        "additions": 1073,
        "deletions": 541,
        "changes": 1614,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_es_CL.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_es_CL.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_CL.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "aafd7a214fa29c28d4a15ac4fdb0712e5b454c4c",
        "filename": "src/qt/locale/bitcoin_et.ts",
        "status": "modified",
        "additions": 1013,
        "deletions": 477,
        "changes": 1490,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_et.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_et.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_et.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "01a156c0b17542edd4e48a7a8d4dc6382aa83a47",
        "filename": "src/qt/locale/bitcoin_eu_ES.ts",
        "status": "modified",
        "additions": 1012,
        "deletions": 476,
        "changes": 1488,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_eu_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_eu_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eu_ES.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "e918c460e5d102c9dcafec60109cd5d0dc5756b8",
        "filename": "src/qt/locale/bitcoin_fa.ts",
        "status": "modified",
        "additions": 1063,
        "deletions": 531,
        "changes": 1594,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_fa.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_fa.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "01958e81d76e0d54a05cd6b8adc5ef53907db292",
        "filename": "src/qt/locale/bitcoin_fa_IR.ts",
        "status": "modified",
        "additions": 1012,
        "deletions": 476,
        "changes": 1488,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_fa_IR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_fa_IR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa_IR.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "e9fcf503308237c911842357d9869e4da60f6e19",
        "filename": "src/qt/locale/bitcoin_fi.ts",
        "status": "modified",
        "additions": 1106,
        "deletions": 564,
        "changes": 1670,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_fi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_fi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fi.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "03ff69e3c6185d00ad27bf068b19a8f1889116d2",
        "filename": "src/qt/locale/bitcoin_fr.ts",
        "status": "modified",
        "additions": 766,
        "deletions": 513,
        "changes": 1279,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_fr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_fr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "e3565d210b3e4c28db604f48c88c24fbea6f0623",
        "filename": "src/qt/locale/bitcoin_fr_CA.ts",
        "status": "modified",
        "additions": 1010,
        "deletions": 474,
        "changes": 1484,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_fr_CA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_fr_CA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr_CA.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "08cea95b93e74003f9d60b5272d4eadd293a8e1e",
        "filename": "src/qt/locale/bitcoin_fr_FR.ts",
        "status": "removed",
        "additions": 0,
        "deletions": 1979,
        "changes": 1979,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbf9df2ea32528c71b58160283b4eb2c52e30ccb/src/qt/locale/bitcoin_fr_FR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbf9df2ea32528c71b58160283b4eb2c52e30ccb/src/qt/locale/bitcoin_fr_FR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr_FR.ts?ref=fbf9df2ea32528c71b58160283b4eb2c52e30ccb",
        "patch": "@@ -1,1979 +0,0 @@\n-<?xml version=\"1.0\" ?><!DOCTYPE TS><TS language=\"fr_FR\" version=\"2.0\">\n-<defaultcodec>UTF-8</defaultcodec>\n-<context>\n-    <name>AboutDialog</name>\n-    <message>\n-        <location filename=\"../forms/aboutdialog.ui\" line=\"14\"/>\n-        <source>About Bitcoin</source>\n-        <translation>\u00c0 propos de Bitcoin</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/aboutdialog.ui\" line=\"53\"/>\n-        <source>&lt;b&gt;Bitcoin&lt;/b&gt; version</source>\n-        <translation>&lt;b&gt;Bitcoin&lt;/b&gt; version</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/aboutdialog.ui\" line=\"85\"/>\n-        <source>Copyright \u00a9 2009-2012 Bitcoin Developers\n-\n-This is experimental software.\n-\n-Distributed under the MIT/X11 software license, see the accompanying file license.txt or http://www.opensource.org/licenses/mit-license.php.\n-\n-This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.</source>\n-        <translation>Copyright \u00a9 2009-2012 D\u00e9veloppeurs de Bitcoin\n-\n-Ce logiciel est en phase exp\u00e9rimentale.\n-\n-Distribu\u00e9 sous licence MIT/X11, voir le fichier license.txt ou http://www.opensource.org/licenses/mit-license.php.\n-\n-Ce produit inclut des logiciels d\u00e9velopp\u00e9s par OpenSSL Project pour utilisation dans le OpenSSL Toolkit (http://www.openssl.org/), un logiciel cryptographique \u00e9crit par Eric Young (eay@cryptsoft.com) et un logiciel UPnP \u00e9crit par Thomas Bernard.</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>AddressBookPage</name>\n-    <message>\n-        <location filename=\"../forms/addressbookpage.ui\" line=\"14\"/>\n-        <source>Address Book</source>\n-        <translation>Carnet d&apos;adresses</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/addressbookpage.ui\" line=\"20\"/>\n-        <source>These are your Bitcoin addresses for receiving payments.  You may want to give a different one to each sender so you can keep track of who is paying you.</source>\n-        <translation>Voici vos adresses Bitcoin qui vous permettent de recevoir des paiements.  Vous pouvez donner une adresse diff\u00e9rente \u00e0 chaque exp\u00e9diteur afin de savoir qui vous paye.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/addressbookpage.ui\" line=\"33\"/>\n-        <source>Double-click to edit address or label</source>\n-        <translation>Double cliquez afin de modifier l&apos;adresse ou l&apos;\u00e9tiquette</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/addressbookpage.ui\" line=\"57\"/>\n-        <source>Create a new address</source>\n-        <translation>Cr\u00e9er une nouvelle adresse</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/addressbookpage.ui\" line=\"60\"/>\n-        <source>&amp;New Address...</source>\n-        <translation>&amp;Nouvelle Adresse...</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/addressbookpage.ui\" line=\"71\"/>\n-        <source>Copy the currently selected address to the system clipboard</source>\n-        <translation>Copier l&apos;adresse surlign\u00e9e dans votre presse-papiers</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/addressbookpage.ui\" line=\"74\"/>\n-        <source>&amp;Copy to Clipboard</source>\n-        <translation>&amp;Copier dans le presse-papiers</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/addressbookpage.ui\" line=\"85\"/>\n-        <source>Show &amp;QR Code</source>\n-        <translation>Afficher le &amp;QR Code</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/addressbookpage.ui\" line=\"96\"/>\n-        <source>Sign a message to prove you own this address</source>\n-        <translation>Signer un message pour prouver que vous d\u00e9tenez cette adresse</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/addressbookpage.ui\" line=\"99\"/>\n-        <source>&amp;Sign Message</source>\n-        <translation>&amp;Signer un message</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/addressbookpage.ui\" line=\"110\"/>\n-        <source>Delete the currently selected address from the list. Only sending addresses can be deleted.</source>\n-        <translation>Supprimer l&apos;adresse s\u00e9lectionn\u00e9e dans la liste. Seules les adresses d&apos;envoi peuvent \u00eatre supprim\u00e9es.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/addressbookpage.ui\" line=\"113\"/>\n-        <source>&amp;Delete</source>\n-        <translation>&amp;Supprimer</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"61\"/>\n-        <source>Copy address</source>\n-        <translation>Copier l&apos;adresse</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"62\"/>\n-        <source>Copy label</source>\n-        <translation>Copier l&apos;\u00e9tiquette</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"63\"/>\n-        <source>Edit</source>\n-        <translation>\u00c9diter</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"64\"/>\n-        <source>Delete</source>\n-        <translation>Effacer</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"281\"/>\n-        <source>Export Address Book Data</source>\n-        <translation>Exporter les donn\u00e9es du carnet d&apos;adresses</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"282\"/>\n-        <source>Comma separated file (*.csv)</source>\n-        <translation>Valeurs s\u00e9par\u00e9es par des virgules (*.csv)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"295\"/>\n-        <source>Error exporting</source>\n-        <translation>Erreur lors de l&apos;exportation</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../addressbookpage.cpp\" line=\"295\"/>\n-        <source>Could not write to file %1.</source>\n-        <translation>Impossible d&apos;\u00e9crire sur le fichier %1.</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>AddressTableModel</name>\n-    <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"77\"/>\n-        <source>Label</source>\n-        <translation>\u00c9tiquette</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"77\"/>\n-        <source>Address</source>\n-        <translation>Adresse</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"113\"/>\n-        <source>(no label)</source>\n-        <translation>(aucune \u00e9tiquette)</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>AskPassphraseDialog</name>\n-    <message>\n-        <location filename=\"../forms/askpassphrasedialog.ui\" line=\"26\"/>\n-        <source>Dialog</source>\n-        <translation>Dialogue</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/askpassphrasedialog.ui\" line=\"32\"/>\n-        <location filename=\"../forms/askpassphrasedialog.ui\" line=\"97\"/>\n-        <source>TextLabel</source>\n-        <translation>TextLabel</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/askpassphrasedialog.ui\" line=\"50\"/>\n-        <source>Enter passphrase</source>\n-        <translation>Entrez la phrase de passe</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/askpassphrasedialog.ui\" line=\"64\"/>\n-        <source>New passphrase</source>\n-        <translation>Nouvelle phrase de passe</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/askpassphrasedialog.ui\" line=\"78\"/>\n-        <source>Repeat new passphrase</source>\n-        <translation>R\u00e9p\u00e9tez la phrase de passe</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"34\"/>\n-        <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n-        <translation>Entrez une nouvelle phrase de passe pour le porte-monnaie.&lt;br/&gt;Veuillez utiliser une phrase de &lt;b&gt;10 caract\u00e8res au hasard ou plus&lt;/b&gt; ou bien de &lt;b&gt;huit mots ou plus&lt;/b&gt;.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"35\"/>\n-        <source>Encrypt wallet</source>\n-        <translation>Chiffrer le porte-monnaie</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"38\"/>\n-        <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n-        <translation>Cette op\u00e9ration n\u00e9cessite votre phrase de passe pour d\u00e9verrouiller le porte-monnaie.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"43\"/>\n-        <source>Unlock wallet</source>\n-        <translation>D\u00e9verrouiller le porte-monnaie</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"46\"/>\n-        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n-        <translation>Cette op\u00e9ration n\u00e9cessite votre phrase de passe pour d\u00e9crypter le porte-monnaie.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"51\"/>\n-        <source>Decrypt wallet</source>\n-        <translation>D\u00e9crypter le porte-monnaie</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"54\"/>\n-        <source>Change passphrase</source>\n-        <translation>Changer la phrase de passe</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"55\"/>\n-        <source>Enter the old and new passphrase to the wallet.</source>\n-        <translation>Entrez l\u2019ancienne phrase de passe pour le porte-monnaie ainsi que la nouvelle.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"101\"/>\n-        <source>Confirm wallet encryption</source>\n-        <translation>Confirmer le chiffrement du porte-monnaie</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"102\"/>\n-        <source>WARNING: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!\n-Are you sure you wish to encrypt your wallet?</source>\n-        <translation>ATTENTION : Si vous chiffrez votre porte-monnaie et perdez votre phrase de passe, vous &lt;b&gt;PERDREZ TOUS VOS BITCOINS&lt;/b&gt; !\n-\u00cates-vous s\u00fbr de vouloir chiffrer votre porte-monnaie ?</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"111\"/>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"160\"/>\n-        <source>Wallet encrypted</source>\n-        <translation>Porte-monnaie chiffr\u00e9</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"112\"/>\n-        <source>Bitcoin will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n-        <translation>Bitcoin va \u00e0 pr\u00e9sent se fermer pour terminer la proc\u00e9dure de cryptage. N&apos;oubliez pas que le chiffrement de votre porte-monnaie ne peut pas fournir une protection totale contre le vol par des logiciels malveillants qui infecteraient votre ordinateur.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"208\"/>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"232\"/>\n-        <source>Warning: The Caps Lock key is on.</source>\n-        <translation>Attention : la touche Verrouiller Maj est activ\u00e9e.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"117\"/>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"124\"/>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"166\"/>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"172\"/>\n-        <source>Wallet encryption failed</source>\n-        <translation>Le chiffrement du porte-monnaie a \u00e9chou\u00e9</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"118\"/>\n-        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n-        <translation>Le chiffrement du porte-monnaie a \u00e9chou\u00e9 en raison d&apos;une erreur interne. Votre porte-monnaie n&apos;a pas \u00e9t\u00e9 chiffr\u00e9.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"125\"/>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"173\"/>\n-        <source>The supplied passphrases do not match.</source>\n-        <translation>Les phrases de passe entr\u00e9es ne correspondent pas.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"136\"/>\n-        <source>Wallet unlock failed</source>\n-        <translation>Le d\u00e9verrouillage du porte-monnaie a \u00e9chou\u00e9</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"137\"/>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"148\"/>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"167\"/>\n-        <source>The passphrase entered for the wallet decryption was incorrect.</source>\n-        <translation>La phrase de passe entr\u00e9e pour d\u00e9crypter le porte-monnaie \u00e9tait incorrecte.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"147\"/>\n-        <source>Wallet decryption failed</source>\n-        <translation>Le d\u00e9cryptage du porte-monnaie a \u00e9chou\u00e9</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"161\"/>\n-        <source>Wallet passphrase was succesfully changed.</source>\n-        <translation>La phrase de passe du porte-monnaie a \u00e9t\u00e9 modifi\u00e9e avec succ\u00e8s.</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>BitcoinGUI</name>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"69\"/>\n-        <source>Bitcoin Wallet</source>\n-        <translation>Porte-monnaie Bitcoin</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"142\"/>\n-        <location filename=\"../bitcoingui.cpp\" line=\"464\"/>\n-        <source>Synchronizing with network...</source>\n-        <translation>Synchronisation avec le r\u00e9seau...</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"145\"/>\n-        <source>Block chain synchronization in progress</source>\n-        <translation>Synchronisation de la cha\u00eene de blocs en cours</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"176\"/>\n-        <source>&amp;Overview</source>\n-        <translation>&amp;Vue d&apos;ensemble</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"177\"/>\n-        <source>Show general overview of wallet</source>\n-        <translation>Affiche une vue d&apos;ensemble du porte-monnaie</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"182\"/>\n-        <source>&amp;Transactions</source>\n-        <translation>&amp;Transactions</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"183\"/>\n-        <source>Browse transaction history</source>\n-        <translation>Permet de parcourir l&apos;historique des transactions</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"188\"/>\n-        <source>&amp;Address Book</source>\n-        <translation>Carnet d&apos;&amp;adresses</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"189\"/>\n-        <source>Edit the list of stored addresses and labels</source>\n-        <translation>\u00c9diter la liste des adresses et des \u00e9tiquettes stock\u00e9es</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"194\"/>\n-        <source>&amp;Receive coins</source>\n-        <translation>&amp;Recevoir des pi\u00e8ces</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"195\"/>\n-        <source>Show the list of addresses for receiving payments</source>\n-        <translation>Affiche la liste des adresses pour recevoir des paiements</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"200\"/>\n-        <source>&amp;Send coins</source>\n-        <translation>&amp;Envoyer des pi\u00e8ces</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"201\"/>\n-        <source>Send coins to a bitcoin address</source>\n-        <translation>Envoyer des pi\u00e8ces \u00e0 une adresse bitcoin</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"206\"/>\n-        <source>Sign &amp;message</source>\n-        <translation>Signer un &amp;message</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"207\"/>\n-        <source>Prove you control an address</source>\n-        <translation>Prouver que vous contr\u00f4lez une adresse</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"226\"/>\n-        <source>E&amp;xit</source>\n-        <translation>Q&amp;uitter</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"227\"/>\n-        <source>Quit application</source>\n-        <translation>Quitter l&apos;application</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"230\"/>\n-        <source>&amp;About %1</source>\n-        <translation>&amp;\u00c0 propos de %1</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"231\"/>\n-        <source>Show information about Bitcoin</source>\n-        <translation>Afficher des informations \u00e0 propos de Bitcoin</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"233\"/>\n-        <source>About &amp;Qt</source>\n-        <translation>\u00c0 propos de &amp;Qt</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"234\"/>\n-        <source>Show information about Qt</source>\n-        <translation>Afficher des informations sur Qt</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"236\"/>\n-        <source>&amp;Options...</source>\n-        <translation>&amp;Options...</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"237\"/>\n-        <source>Modify configuration options for bitcoin</source>\n-        <translation>Modifier les options de configuration pour bitcoin</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"239\"/>\n-        <source>Open &amp;Bitcoin</source>\n-        <translation>Ouvrir &amp;Bitcoin</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"240\"/>\n-        <source>Show the Bitcoin window</source>\n-        <translation>Afficher la fen\u00eatre de Bitcoin</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"241\"/>\n-        <source>&amp;Export...</source>\n-        <translation>&amp;Exporter...</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"242\"/>\n-        <source>Export the data in the current tab to a file</source>\n-        <translation>Exporter les donn\u00e9es de l&apos;onglet courant vers un fichier</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"243\"/>\n-        <source>&amp;Encrypt Wallet</source>\n-        <translation>&amp;Chiffrer le porte-monnaie</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"244\"/>\n-        <source>Encrypt or decrypt wallet</source>\n-        <translation>Chiffrer ou d\u00e9crypter le porte-monnaie</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"246\"/>\n-        <source>&amp;Backup Wallet</source>\n-        <translation>&amp;Sauvegarder le porte-monnaie</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"247\"/>\n-        <source>Backup wallet to another location</source>\n-        <translation>Sauvegarder le porte-monnaie \u00e0 un autre emplacement</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"248\"/>\n-        <source>&amp;Change Passphrase</source>\n-        <translation>&amp;Modifier la phrase de passe</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"249\"/>\n-        <source>Change the passphrase used for wallet encryption</source>\n-        <translation>Modifier la phrase de passe utilis\u00e9e pour le cryptage du porte-monnaie</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"272\"/>\n-        <source>&amp;File</source>\n-        <translation>&amp;Fichier</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"281\"/>\n-        <source>&amp;Settings</source>\n-        <translation>&amp;R\u00e9glages</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"287\"/>\n-        <source>&amp;Help</source>\n-        <translation>&amp;Aide</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"294\"/>\n-        <source>Tabs toolbar</source>\n-        <translation>Barre d&apos;outils des onglets</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"305\"/>\n-        <source>Actions toolbar</source>\n-        <translation>Barre d&apos;outils des actions</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"317\"/>\n-        <source>[testnet]</source>\n-        <translation>[testnet]</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"407\"/>\n-        <source>bitcoin-qt</source>\n-        <translation>bitcoin-qt</translation>\n-    </message>\n-    <message numerus=\"yes\">\n-        <location filename=\"../bitcoingui.cpp\" line=\"449\"/>\n-        <source>%n active connection(s) to Bitcoin network</source>\n-        <translation><numerusform>%n connexion active avec le r\u00e9seau Bitcoin</numerusform><numerusform>%n connexions actives avec le r\u00e9seau Bitcoin</numerusform></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"475\"/>\n-        <source>Downloaded %1 of %2 blocks of transaction history.</source>\n-        <translation>%1 blocs de l&apos;historique des transactions t\u00e9l\u00e9charg\u00e9s sur un total de %2.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"487\"/>\n-        <source>Downloaded %1 blocks of transaction history.</source>\n-        <translation>%1 blocs de l&apos;historique de transaction t\u00e9l\u00e9charg\u00e9.</translation>\n-    </message>\n-    <message numerus=\"yes\">\n-        <location filename=\"../bitcoingui.cpp\" line=\"502\"/>\n-        <source>%n second(s) ago</source>\n-        <translation><numerusform>il y a %n seconde</numerusform><numerusform>il y a %n secondes</numerusform></translation>\n-    </message>\n-    <message numerus=\"yes\">\n-        <location filename=\"../bitcoingui.cpp\" line=\"506\"/>\n-        <source>%n minute(s) ago</source>\n-        <translation><numerusform>il y a %n minute</numerusform><numerusform>il y a %n minutes</numerusform></translation>\n-    </message>\n-    <message numerus=\"yes\">\n-        <location filename=\"../bitcoingui.cpp\" line=\"510\"/>\n-        <source>%n hour(s) ago</source>\n-        <translation><numerusform>il y a %n heure</numerusform><numerusform>il y a %n heures</numerusform></translation>\n-    </message>\n-    <message numerus=\"yes\">\n-        <location filename=\"../bitcoingui.cpp\" line=\"514\"/>\n-        <source>%n day(s) ago</source>\n-        <translation><numerusform>il y a %n jour</numerusform><numerusform>il y a %n jours</numerusform></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"520\"/>\n-        <source>Up to date</source>\n-        <translation>\u00c0 jour</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"525\"/>\n-        <source>Catching up...</source>\n-        <translation>Rattrapage...</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"533\"/>\n-        <source>Last received block was generated %1.</source>\n-        <translation>Le dernier bloc re\u00e7u a \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9 %1.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"597\"/>\n-        <source>This transaction is over the size limit.  You can still send it for a fee of %1, which goes to the nodes that process your transaction and helps to support the network.  Do you want to pay the fee?</source>\n-        <translation>Cette transaction d\u00e9passe la limite de taille.  Vous pouvez quand-m\u00eame l&apos;envoyer en vous acquittant de frais d&apos;un montant de %1, qui iront aux n\u0153uds qui traitent la transaction et aideront \u00e0 soutenir le r\u00e9seau.  Voulez-vous payer les frais ?</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"602\"/>\n-        <source>Sending...</source>\n-        <translation>Envoi en cours...</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"629\"/>\n-        <source>Sent transaction</source>\n-        <translation>Transaction envoy\u00e9e</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"630\"/>\n-        <source>Incoming transaction</source>\n-        <translation>Transaction entrante</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"631\"/>\n-        <source>Date: %1\n-Amount: %2\n-Type: %3\n-Address: %4\n-</source>\n-        <translation>Date : %1\n-Montant : %2\n-Type : %3\n-Adresse : %4\n-</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"751\"/>\n-        <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n-        <translation>Le porte-monnaie est &lt;b&gt;chiffr\u00e9&lt;/b&gt; et est actuellement &lt;b&gt;d\u00e9verrouill\u00e9&lt;/b&gt;</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"759\"/>\n-        <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n-        <translation>Le porte-monnaie est &lt;b&gt;chiffr\u00e9&lt;/b&gt; et est actuellement &lt;b&gt;verrouill\u00e9&lt;/b&gt;</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"782\"/>\n-        <source>Backup Wallet</source>\n-        <translation>Sauvegarder le porte-monnaie</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"782\"/>\n-        <source>Wallet Data (*.dat)</source>\n-        <translation>Donn\u00e9es de porte-monnaie (*.dat)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"785\"/>\n-        <source>Backup Failed</source>\n-        <translation>La sauvegarde a \u00e9chou\u00e9</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"785\"/>\n-        <source>There was an error trying to save the wallet data to the new location.</source>\n-        <translation>Une erreur est survenue lors de l&apos;enregistrement des donn\u00e9es de porte-monnaie \u00e0 un autre emplacement.</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>DisplayOptionsPage</name>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"270\"/>\n-        <source>&amp;Unit to show amounts in: </source>\n-        <translation>&amp;Unit\u00e9 d&apos;affichage des montants : </translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"274\"/>\n-        <source>Choose the default subdivision unit to show in the interface, and when sending coins</source>\n-        <translation>Choisissez la sous-unit\u00e9 par d\u00e9faut pour l&apos;affichage dans l&apos;interface et lors de l&apos;envoi de pi\u00e8ces</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"281\"/>\n-        <source>Display addresses in transaction list</source>\n-        <translation>Afficher les adresses dans la liste des transactions</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>EditAddressDialog</name>\n-    <message>\n-        <location filename=\"../forms/editaddressdialog.ui\" line=\"14\"/>\n-        <source>Edit Address</source>\n-        <translation>\u00c9diter l&apos;adresse</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/editaddressdialog.ui\" line=\"25\"/>\n-        <source>&amp;Label</source>\n-        <translation>&amp;\u00c9tiquette</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/editaddressdialog.ui\" line=\"35\"/>\n-        <source>The label associated with this address book entry</source>\n-        <translation>L&apos;\u00e9tiquette associ\u00e9e \u00e0 cette entr\u00e9e du carnet d&apos;adresses</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/editaddressdialog.ui\" line=\"42\"/>\n-        <source>&amp;Address</source>\n-        <translation>&amp;Adresse</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/editaddressdialog.ui\" line=\"52\"/>\n-        <source>The address associated with this address book entry. This can only be modified for sending addresses.</source>\n-        <translation>L&apos;adresse associ\u00e9e avec cette entr\u00e9e du carnet d&apos;adresses. Ne peut \u00eatre modifi\u00e9e que pour les adresses d&apos;envoi.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"20\"/>\n-        <source>New receiving address</source>\n-        <translation>Nouvelle adresse de r\u00e9ception</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"24\"/>\n-        <source>New sending address</source>\n-        <translation>Nouvelle adresse d&apos;envoi</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"27\"/>\n-        <source>Edit receiving address</source>\n-        <translation>\u00c9diter l&apos;adresse de r\u00e9ception</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"31\"/>\n-        <source>Edit sending address</source>\n-        <translation>\u00c9diter l&apos;adresse d&apos;envoi</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"91\"/>\n-        <source>The entered address &quot;%1&quot; is already in the address book.</source>\n-        <translation>L&apos;adresse fournie \u00ab %1 \u00bb est d\u00e9j\u00e0 pr\u00e9sente dans le carnet d&apos;adresses.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"96\"/>\n-        <source>The entered address &quot;%1&quot; is not a valid bitcoin address.</source>\n-        <translation>L&apos;adresse fournie \u00ab %1 \u00bb n&apos;est pas une adresse bitcoin valide.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"101\"/>\n-        <source>Could not unlock wallet.</source>\n-        <translation>Impossible de d\u00e9verrouiller le porte-monnaie.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../editaddressdialog.cpp\" line=\"106\"/>\n-        <source>New key generation failed.</source>\n-        <translation>\u00c9chec de la g\u00e9n\u00e9ration de la nouvelle clef.</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>MainOptionsPage</name>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"170\"/>\n-        <source>&amp;Start Bitcoin on window system startup</source>\n-        <translation>&amp;D\u00e9marrer Bitcoin avec le syst\u00e8me de fen\u00eatres</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"171\"/>\n-        <source>Automatically start Bitcoin after the computer is turned on</source>\n-        <translation>Lancer automatiquement Bitcoin lorsque l&apos;ordinateur est allum\u00e9</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"175\"/>\n-        <source>&amp;Minimize to the tray instead of the taskbar</source>\n-        <translation>&amp;Minimiser dans la barre syst\u00e8me au lieu de la barre des t\u00e2ches</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"176\"/>\n-        <source>Show only a tray icon after minimizing the window</source>\n-        <translation>Montrer uniquement une ic\u00f4ne syst\u00e8me apr\u00e8s minimisation</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"180\"/>\n-        <source>Map port using &amp;UPnP</source>\n-        <translation>Ouvrir le port avec l&apos;&amp;UPnP</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"181\"/>\n-        <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n-        <translation>Ouvrir le port du client Bitcoin automatiquement sur le routeur. Cela ne fonctionne que si votre routeur supporte l&apos;UPnP et si la fonctionnalit\u00e9 est activ\u00e9e.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"185\"/>\n-        <source>M&amp;inimize on close</source>\n-        <translation>M&amp;inimiser lors de la fermeture</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"186\"/>\n-        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Quit in the menu.</source>\n-        <translation>Minimiser au lieu quitter l&apos;application lorsque la fen\u00eatre est ferm\u00e9e. Lorsque cette option est activ\u00e9e, l&apos;application ne pourra \u00eatre ferm\u00e9e qu&apos;en s\u00e9lectionnant Quitter dans le menu d\u00e9roulant.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"190\"/>\n-        <source>&amp;Connect through SOCKS4 proxy:</source>\n-        <translation>&amp;Connexion \u00e0 travers un proxy SOCKS4 :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"191\"/>\n-        <source>Connect to the Bitcon network through a SOCKS4 proxy (e.g. when connecting through Tor)</source>\n-        <translation>Connexion au r\u00e9seau Bitcoin \u00e0 travers un proxy SOCKS4 (par ex. lors d&apos;une connexion via Tor)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"196\"/>\n-        <source>Proxy &amp;IP: </source>\n-        <translation>&amp;IP du proxy : </translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"202\"/>\n-        <source>IP address of the proxy (e.g. 127.0.0.1)</source>\n-        <translation>Adresse IP du proxy (par ex. 127.0.0.1)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"205\"/>\n-        <source>&amp;Port: </source>\n-        <translation>&amp;Port : </translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"211\"/>\n-        <source>Port of the proxy (e.g. 1234)</source>\n-        <translation>Port du proxy (par ex. 1234)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"217\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly.  Most transactions are 1 kB.  Fee 0.01 recommended.</source>\n-        <translation>Frais de transaction optionnels par ko qui aident \u00e0 garantir un traitement rapide des transactions.  La plupart des transactions occupent 1 ko.  Des frais de 0.01 sont recommand\u00e9s.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"223\"/>\n-        <source>Pay transaction &amp;fee</source>\n-        <translation>Payer des &amp;frais de transaction</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"226\"/>\n-        <source>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</source>\n-        <translation>Frais de transaction optionnels par ko qui aident \u00e0 garantir un traitement rapide des transactions. La plupart des transactions occupent 1 ko. Des frais de 0.01 sont recommand\u00e9s.</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>MessagePage</name>\n-    <message>\n-        <location filename=\"../forms/messagepage.ui\" line=\"14\"/>\n-        <source>Message</source>\n-        <translation>Message</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/messagepage.ui\" line=\"20\"/>\n-        <source>You can sign messages with your addresses to prove you own them. Be careful not to sign anything vague, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n-        <translation>Vous pouvez signer des messages avec vos adresses pour prouver que les d\u00e9tenez. Faites attention \u00e0 ne pas signer quoi que ce soit de vague car des attaques d&apos;hame\u00e7onnage peuvent essayer d&apos;obtenir votre identit\u00e9 par votre signature. Ne signez que des d\u00e9clarations enti\u00e8rement d\u00e9taill\u00e9es et avec lesquelles vous serez d&apos;accord.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/messagepage.ui\" line=\"38\"/>\n-        <source>The address to send the payment to  (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n-        <translation>L&apos;adresse \u00e0 laquelle le paiement sera envoy\u00e9  (par ex. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/messagepage.ui\" line=\"48\"/>\n-        <source>Choose adress from address book</source>\n-        <translation>Choisir une adresse depuis le carnet d&apos;adresses</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/messagepage.ui\" line=\"58\"/>\n-        <source>Alt+A</source>\n-        <translation>Alt+A</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/messagepage.ui\" line=\"71\"/>\n-        <source>Paste address from clipboard</source>\n-        <translation>Coller une adresse depuis le presse-papiers</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/messagepage.ui\" line=\"81\"/>\n-        <source>Alt+P</source>\n-        <translation>Alt+P</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/messagepage.ui\" line=\"93\"/>\n-        <source>Enter the message you want to sign here</source>\n-        <translation>Entrez ici le message que vous d\u00e9sirez signer</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/messagepage.ui\" line=\"105\"/>\n-        <source>Click &quot;Sign Message&quot; to get signature</source>\n-        <translation>Cliquez sur \u00ab Signer le message \u00bb pour obtenir la signature</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/messagepage.ui\" line=\"117\"/>\n-        <source>Sign a message to prove you own this address</source>\n-        <translation>Signer le message pour prouver que vous d\u00e9tenez cette adresse</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/messagepage.ui\" line=\"120\"/>\n-        <source>&amp;Sign Message</source>\n-        <translation>&amp;Signer le message</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/messagepage.ui\" line=\"131\"/>\n-        <source>Copy the currently selected address to the system clipboard</source>\n-        <translation>Copier l&apos;adresse surlign\u00e9e dans votre presse-papiers</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/messagepage.ui\" line=\"134\"/>\n-        <source>&amp;Copy to Clipboard</source>\n-        <translation>&amp;Copier dans le presse-papiers</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../messagepage.cpp\" line=\"74\"/>\n-        <location filename=\"../messagepage.cpp\" line=\"89\"/>\n-        <location filename=\"../messagepage.cpp\" line=\"101\"/>\n-        <source>Error signing</source>\n-        <translation>Une erreur est survenue lors de la signature</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../messagepage.cpp\" line=\"74\"/>\n-        <source>%1 is not a valid address.</source>\n-        <translation>%1 n&apos;est pas une adresse valide.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../messagepage.cpp\" line=\"89\"/>\n-        <source>Private key for %1 is not available.</source>\n-        <translation>La clef priv\u00e9e pour %1 n&apos;est pas disponible.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../messagepage.cpp\" line=\"101\"/>\n-        <source>Sign failed</source>\n-        <translation>\u00c9chec de la signature</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>OptionsDialog</name>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"79\"/>\n-        <source>Main</source>\n-        <translation>Principal</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"84\"/>\n-        <source>Display</source>\n-        <translation>Affichage</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../optionsdialog.cpp\" line=\"104\"/>\n-        <source>Options</source>\n-        <translation>Options</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>OverviewPage</name>\n-    <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"14\"/>\n-        <source>Form</source>\n-        <translation>Formulaire</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"40\"/>\n-        <source>Balance:</source>\n-        <translation>Solde :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"47\"/>\n-        <source>123.456 BTC</source>\n-        <translation>123.456 BTC</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"54\"/>\n-        <source>Number of transactions:</source>\n-        <translation>Nombre de transactions :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"61\"/>\n-        <source>0</source>\n-        <translation>0</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"68\"/>\n-        <source>Unconfirmed:</source>\n-        <translation>Non confirm\u00e9 :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"75\"/>\n-        <source>0 BTC</source>\n-        <translation>0 BTC</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"82\"/>\n-        <source>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;\n-&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;\n-p, li { white-space: pre-wrap; }\n-&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Ubuntu'; font-size:11pt; font-weight:400; font-style:normal;&quot;&gt;\n-&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Wallet&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</source>\n-        <translation>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;\n-&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;\n-p, li { white-space: pre-wrap; }\n-&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;Ubuntu&apos;; font-size:11pt; font-weight:400; font-style:normal;&quot;&gt;\n-&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;Porte-monnaie&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/overviewpage.ui\" line=\"122\"/>\n-        <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n-        <translation>&lt;b&gt;Transactions r\u00e9centes&lt;/b&gt;</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../overviewpage.cpp\" line=\"103\"/>\n-        <source>Your current balance</source>\n-        <translation>Votre solde actuel</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../overviewpage.cpp\" line=\"108\"/>\n-        <source>Total of transactions that have yet to be confirmed, and do not yet count toward the current balance</source>\n-        <translation>Total des transactions qui doivent encore \u00eatre confirm\u00e9es et qui ne sont pas pris en compte pour le solde actuel</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../overviewpage.cpp\" line=\"111\"/>\n-        <source>Total number of transactions in wallet</source>\n-        <translation>Nombre total de transactions dans le porte-monnaie</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>QRCodeDialog</name>\n-    <message>\n-        <location filename=\"../forms/qrcodedialog.ui\" line=\"14\"/>\n-        <source>Dialog</source>\n-        <translation>Dialogue</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/qrcodedialog.ui\" line=\"32\"/>\n-        <source>QR Code</source>\n-        <translation>QR Code</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/qrcodedialog.ui\" line=\"52\"/>\n-        <source>Request Payment</source>\n-        <translation>Demande de paiement</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/qrcodedialog.ui\" line=\"67\"/>\n-        <source>Amount:</source>\n-        <translation>Montant :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/qrcodedialog.ui\" line=\"102\"/>\n-        <source>BTC</source>\n-        <translation>BTC</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/qrcodedialog.ui\" line=\"118\"/>\n-        <source>Label:</source>\n-        <translation>\u00c9tiquette :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/qrcodedialog.ui\" line=\"141\"/>\n-        <source>Message:</source>\n-        <translation>Message :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/qrcodedialog.ui\" line=\"183\"/>\n-        <source>&amp;Save As...</source>\n-        <translation>&amp;Enregistrer sous...</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../qrcodedialog.cpp\" line=\"101\"/>\n-        <source>Save Image...</source>\n-        <translation>Enregistrer l&apos;image...</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../qrcodedialog.cpp\" line=\"101\"/>\n-        <source>PNG Images (*.png)</source>\n-        <translation>Images PNG (*.png)</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>SendCoinsDialog</name>\n-    <message>\n-        <location filename=\"../forms/sendcoinsdialog.ui\" line=\"14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"122\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"127\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"132\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"137\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"143\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"148\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"153\"/>\n-        <source>Send Coins</source>\n-        <translation>Envoyer des pi\u00e8ces</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsdialog.ui\" line=\"64\"/>\n-        <source>Send to multiple recipients at once</source>\n-        <translation>Envoyer des pi\u00e8ces \u00e0 plusieurs destinataires \u00e0 la fois</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsdialog.ui\" line=\"67\"/>\n-        <source>&amp;Add recipient...</source>\n-        <translation>&amp;Ajouter un destinataire...</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsdialog.ui\" line=\"84\"/>\n-        <source>Remove all transaction fields</source>\n-        <translation>Enlever tous les champs de transaction</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsdialog.ui\" line=\"87\"/>\n-        <source>Clear all</source>\n-        <translation>Tout effacer</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsdialog.ui\" line=\"106\"/>\n-        <source>Balance:</source>\n-        <translation>Solde :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsdialog.ui\" line=\"113\"/>\n-        <source>123.456 BTC</source>\n-        <translation>123.456 BTC</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsdialog.ui\" line=\"144\"/>\n-        <source>Confirm the send action</source>\n-        <translation>Confirmez l&apos;action d&apos;envoi</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsdialog.ui\" line=\"147\"/>\n-        <source>&amp;Send</source>\n-        <translation>&amp;Envoyer</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"94\"/>\n-        <source>&lt;b&gt;%1&lt;/b&gt; to %2 (%3)</source>\n-        <translation>&lt;b&gt;%1&lt;/b&gt; \u00e0 %2 (%3)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"99\"/>\n-        <source>Confirm send coins</source>\n-        <translation>Confirmez l&apos;envoi des pi\u00e8ces</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"100\"/>\n-        <source>Are you sure you want to send %1?</source>\n-        <translation>\u00cates-vous s\u00fbr de vouloir envoyer %1 ?</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"100\"/>\n-        <source> and </source>\n-        <translation> et </translation>\n-    </message>\n-    <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"123\"/>\n-        <source>The recepient address is not valid, please recheck.</source>\n-        <translation>L&apos;adresse du destinataire n&apos;est pas valide, veuillez la v\u00e9rifier.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"128\"/>\n-        <source>The amount to pay must be larger than 0.</source>\n-        <translation>Le montant \u00e0 payer doit \u00eatre sup\u00e9rieur \u00e0 0.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"133\"/>\n-        <source>Amount exceeds your balance</source>\n-        <translation>Le montant d\u00e9passe votre solde</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"138\"/>\n-        <source>Total exceeds your balance when the %1 transaction fee is included</source>\n-        <translation>Le total d\u00e9passe votre solde lorsque les frais de transaction de %1 sont inclus</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"144\"/>\n-        <source>Duplicate address found, can only send to each address once in one send operation</source>\n-        <translation>Adresse dupliqu\u00e9e trouv\u00e9e, un seul envoi par adresse est possible \u00e0 chaque op\u00e9ration d&apos;envoi</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"149\"/>\n-        <source>Error: Transaction creation failed  </source>\n-        <translation>Erreur : \u00e9chec de la cr\u00e9ation de la transaction  </translation>\n-    </message>\n-    <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"154\"/>\n-        <source>Error: The transaction was rejected.  This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n-        <translation>Erreur : la transaction a \u00e9t\u00e9 rejet\u00e9e.  Cela peut arriver si certaines pi\u00e8ces de votre porte-monnaie ont d\u00e9j\u00e0 \u00e9t\u00e9 d\u00e9pens\u00e9es, par exemple si vous avez utilis\u00e9 une copie de wallet.dat et si des pi\u00e8ces ont \u00e9t\u00e9 d\u00e9pens\u00e9es avec cette copie sans \u00eatre marqu\u00e9es comme telles ici.</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>SendCoinsEntry</name>\n-    <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"14\"/>\n-        <source>Form</source>\n-        <translation>Formulaire</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"29\"/>\n-        <source>A&amp;mount:</source>\n-        <translation>&amp;Montant :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"42\"/>\n-        <source>Pay &amp;To:</source>\n-        <translation>Payer &amp;\u00e0 :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"66\"/>\n-        <location filename=\"../sendcoinsentry.cpp\" line=\"26\"/>\n-        <source>Enter a label for this address to add it to your address book</source>\n-        <translation>Entrez une \u00e9tiquette pour cette adresse afin de l&apos;ajouter \u00e0 votre carnet d&apos;adresses</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"75\"/>\n-        <source>&amp;Label:</source>\n-        <translation>&amp;\u00c9tiquette :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"93\"/>\n-        <source>The address to send the payment to  (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n-        <translation>L&apos;adresse \u00e0 laquelle le paiement sera envoy\u00e9   (par ex. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"103\"/>\n-        <source>Choose address from address book</source>\n-        <translation>Choisir une adresse dans le carnet d&apos;adresses </translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"113\"/>\n-        <source>Alt+A</source>\n-        <translation>Alt+A</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"120\"/>\n-        <source>Paste address from clipboard</source>\n-        <translation>Coller une adresse depuis le presse-papiers</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"130\"/>\n-        <source>Alt+P</source>\n-        <translation>Alt+P</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/sendcoinsentry.ui\" line=\"137\"/>\n-        <source>Remove this recipient</source>\n-        <translation>Enlever ce destinataire</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../sendcoinsentry.cpp\" line=\"25\"/>\n-        <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n-        <translation>Entez une adresse Bitcoin (par ex. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>TransactionDesc</name>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"18\"/>\n-        <source>Open for %1 blocks</source>\n-        <translation>Ouvert pour %1 blocs</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"20\"/>\n-        <source>Open until %1</source>\n-        <translation>Ouvert jusqu&apos;\u00e0 %1</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"26\"/>\n-        <source>%1/offline?</source>\n-        <translation>%1/hors ligne ?</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"28\"/>\n-        <source>%1/unconfirmed</source>\n-        <translation>%1/non confirm\u00e9e</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"30\"/>\n-        <source>%1 confirmations</source>\n-        <translation>%1 confirmations</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"47\"/>\n-        <source>&lt;b&gt;Status:&lt;/b&gt; </source>\n-        <translation>&lt;b&gt;\u00c9tat :&lt;/b&gt; </translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"52\"/>\n-        <source>, has not been successfully broadcast yet</source>\n-        <translation>, n&apos;a pas encore \u00e9t\u00e9 diffus\u00e9e avec succ\u00e8s</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"54\"/>\n-        <source>, broadcast through %1 node</source>\n-        <translation>, diffus\u00e9e \u00e0 travers %1 n\u0153ud</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"56\"/>\n-        <source>, broadcast through %1 nodes</source>\n-        <translation>, diffus\u00e9e \u00e0 travers %1 n\u0153uds</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"60\"/>\n-        <source>&lt;b&gt;Date:&lt;/b&gt; </source>\n-        <translation>&lt;b&gt;Date :&lt;/b&gt; </translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"67\"/>\n-        <source>&lt;b&gt;Source:&lt;/b&gt; Generated&lt;br&gt;</source>\n-        <translation>&lt;b&gt;Source :&lt;/b&gt; G\u00e9n\u00e9r\u00e9&lt;br&gt;</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"73\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"90\"/>\n-        <source>&lt;b&gt;From:&lt;/b&gt; </source>\n-        <translation>&lt;b&gt;De :&lt;/b&gt; </translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"90\"/>\n-        <source>unknown</source>\n-        <translation>inconnue</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"91\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"114\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"173\"/>\n-        <source>&lt;b&gt;To:&lt;/b&gt; </source>\n-        <translation>&lt;b&gt;\u00c0 :&lt;/b&gt; </translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"94\"/>\n-        <source> (yours, label: </source>\n-        <translation> (v\u00f4tre, \u00e9tiquette : </translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"96\"/>\n-        <source> (yours)</source>\n-        <translation> (v\u00f4tre)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"131\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"145\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"190\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"207\"/>\n-        <source>&lt;b&gt;Credit:&lt;/b&gt; </source>\n-        <translation>&lt;b&gt;Cr\u00e9dit : &lt;/b&gt; </translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"133\"/>\n-        <source>(%1 matures in %2 more blocks)</source>\n-        <translation>(%1 sera consid\u00e9r\u00e9e comme m\u00fbre suite \u00e0 %2 blocs de plus)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"137\"/>\n-        <source>(not accepted)</source>\n-        <translation>(pas accept\u00e9)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"181\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"189\"/>\n-        <location filename=\"../transactiondesc.cpp\" line=\"204\"/>\n-        <source>&lt;b&gt;Debit:&lt;/b&gt; </source>\n-        <translation>&lt;b&gt;D\u00e9bit : &lt;/b&gt; </translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"195\"/>\n-        <source>&lt;b&gt;Transaction fee:&lt;/b&gt; </source>\n-        <translation>&lt;b&gt;Frais de transaction :&lt;/b&gt; </translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"211\"/>\n-        <source>&lt;b&gt;Net amount:&lt;/b&gt; </source>\n-        <translation>&lt;b&gt;Montant net :&lt;/b&gt; </translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"217\"/>\n-        <source>Message:</source>\n-        <translation>Message :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"219\"/>\n-        <source>Comment:</source>\n-        <translation>Commentaire :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"221\"/>\n-        <source>Transaction ID:</source>\n-        <translation>ID de la transaction :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiondesc.cpp\" line=\"224\"/>\n-        <source>Generated coins must wait 120 blocks before they can be spent.  When you generated this block, it was broadcast to the network to be added to the block chain.  If it fails to get into the chain, it will change to &quot;not accepted&quot; and not be spendable.  This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n-        <translation>Les pi\u00e8ces g\u00e9n\u00e9r\u00e9es doivent attendre 120 blocs avant de pouvoir \u00eatre d\u00e9pens\u00e9es.  Lorsque vous avez g\u00e9n\u00e9r\u00e9 ce bloc, il a \u00e9t\u00e9 diffus\u00e9 sur le r\u00e9seau pour \u00eatre ajout\u00e9 \u00e0 la cha\u00eene des blocs.  S&apos;il \u00e9choue a int\u00e9grer la cha\u00eene, il sera modifi\u00e9 en \u00ab pas accept\u00e9 \u00bb et il ne sera pas possible de le d\u00e9penser.  Cela peut arriver occasionnellement si un autre n\u0153ud g\u00e9n\u00e8re un bloc quelques secondes avant ou apr\u00e8s vous.</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>TransactionDescDialog</name>\n-    <message>\n-        <location filename=\"../forms/transactiondescdialog.ui\" line=\"14\"/>\n-        <source>Transaction details</source>\n-        <translation>D\u00e9tails de la transaction</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../forms/transactiondescdialog.ui\" line=\"20\"/>\n-        <source>This pane shows a detailed description of the transaction</source>\n-        <translation>Ce panneau affiche une description d\u00e9taill\u00e9e de la transaction</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>TransactionTableModel</name>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"213\"/>\n-        <source>Date</source>\n-        <translation>Date</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"213\"/>\n-        <source>Type</source>\n-        <translation>Type</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"213\"/>\n-        <source>Address</source>\n-        <translation>Adresse</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"213\"/>\n-        <source>Amount</source>\n-        <translation>Montant</translation>\n-    </message>\n-    <message numerus=\"yes\">\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"274\"/>\n-        <source>Open for %n block(s)</source>\n-        <translation><numerusform>Ouvert pour %n bloc</numerusform><numerusform>Ouvert pour %n blocs</numerusform></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"277\"/>\n-        <source>Open until %1</source>\n-        <translation>Ouvert jusqu&apos;\u00e0 %1</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"280\"/>\n-        <source>Offline (%1 confirmations)</source>\n-        <translation>Hors ligne (%1 confirmations)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"283\"/>\n-        <source>Unconfirmed (%1 of %2 confirmations)</source>\n-        <translation>Non confirm\u00e9e (%1 confirmations sur un total de %2)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"286\"/>\n-        <source>Confirmed (%1 confirmations)</source>\n-        <translation>Confirm\u00e9e (%1 confirmations)</translation>\n-    </message>\n-    <message numerus=\"yes\">\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"295\"/>\n-        <source>Mined balance will be available in %n more blocks</source>\n-        <translation><numerusform>Le solde d&apos;extraction (mined) sera disponible dans %n bloc</numerusform><numerusform>Le solde d&apos;extraction (mined) sera disponible dans %n blocs</numerusform></translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"301\"/>\n-        <source>This block was not received by any other nodes and will probably not be accepted!</source>\n-        <translation>Ce bloc n&apos;a \u00e9t\u00e9 re\u00e7u par aucun autre n\u0153ud et ne sera probablement pas accept\u00e9 !</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"304\"/>\n-        <source>Generated but not accepted</source>\n-        <translation>G\u00e9n\u00e9r\u00e9 mais pas accept\u00e9</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"347\"/>\n-        <source>Received with</source>\n-        <translation>Re\u00e7ue avec</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"349\"/>\n-        <source>Received from</source>\n-        <translation>Re\u00e7ue de</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"352\"/>\n-        <source>Sent to</source>\n-        <translation>Envoy\u00e9e \u00e0</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"354\"/>\n-        <source>Payment to yourself</source>\n-        <translation>Paiement \u00e0 vous-m\u00eame</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"356\"/>\n-        <source>Mined</source>\n-        <translation>Extraction</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"394\"/>\n-        <source>(n/a)</source>\n-        <translation>(indisponible)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"593\"/>\n-        <source>Transaction status. Hover over this field to show number of confirmations.</source>\n-        <translation>\u00c9tat de la transaction. Laissez le pointeur de la souris sur ce champ pour voir le nombre de confirmations.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"595\"/>\n-        <source>Date and time that the transaction was received.</source>\n-        <translation>Date et heure de r\u00e9ception de la transaction.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"597\"/>\n-        <source>Type of transaction.</source>\n-        <translation>Type de transaction.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"599\"/>\n-        <source>Destination address of transaction.</source>\n-        <translation>L&apos;adresse de destination de la transaction.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"601\"/>\n-        <source>Amount removed from or added to balance.</source>\n-        <translation>Montant ajout\u00e9 au ou enlev\u00e9 du solde.</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>TransactionView</name>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"55\"/>\n-        <location filename=\"../transactionview.cpp\" line=\"71\"/>\n-        <source>All</source>\n-        <translation>Toutes</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"56\"/>\n-        <source>Today</source>\n-        <translation>Aujourd&apos;hui</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"57\"/>\n-        <source>This week</source>\n-        <translation>Cette semaine</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"58\"/>\n-        <source>This month</source>\n-        <translation>Ce mois</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"59\"/>\n-        <source>Last month</source>\n-        <translation>Mois dernier</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"60\"/>\n-        <source>This year</source>\n-        <translation>Cette ann\u00e9e</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"61\"/>\n-        <source>Range...</source>\n-        <translation>Intervalle...</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"72\"/>\n-        <source>Received with</source>\n-        <translation>Re\u00e7u avec</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"74\"/>\n-        <source>Sent to</source>\n-        <translation>Envoy\u00e9 \u00e0</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"76\"/>\n-        <source>To yourself</source>\n-        <translation>\u00c0 vous-m\u00eame</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"77\"/>\n-        <source>Mined</source>\n-        <translation>Extraction</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"78\"/>\n-        <source>Other</source>\n-        <translation>Autre</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"84\"/>\n-        <source>Enter address or label to search</source>\n-        <translation>Entrez une adresse ou une \u00e9tiquette \u00e0 rechercher</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"90\"/>\n-        <source>Min amount</source>\n-        <translation>Montant min</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"124\"/>\n-        <source>Copy address</source>\n-        <translation>Copier l&apos;adresse</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"125\"/>\n-        <source>Copy label</source>\n-        <translation>Copier l&apos;\u00e9tiquette</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"126\"/>\n-        <source>Copy amount</source>\n-        <translation>Copier le montant</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"127\"/>\n-        <source>Edit label</source>\n-        <translation>\u00c9diter l&apos;\u00e9tiquette</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"128\"/>\n-        <source>Show details...</source>\n-        <translation>Afficher les d\u00e9tails...</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"268\"/>\n-        <source>Export Transaction Data</source>\n-        <translation>Exporter les donn\u00e9es de transaction</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"269\"/>\n-        <source>Comma separated file (*.csv)</source>\n-        <translation>Valeurs s\u00e9par\u00e9es par des virgules (*.csv)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"277\"/>\n-        <source>Confirmed</source>\n-        <translation>Confirm\u00e9e</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"278\"/>\n-        <source>Date</source>\n-        <translation>Date</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"279\"/>\n-        <source>Type</source>\n-        <translation>Type</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"280\"/>\n-        <source>Label</source>\n-        <translation>\u00c9tiquette</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"281\"/>\n-        <source>Address</source>\n-        <translation>Adresse</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"282\"/>\n-        <source>Amount</source>\n-        <translation>Montant</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"283\"/>\n-        <source>ID</source>\n-        <translation>ID</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"287\"/>\n-        <source>Error exporting</source>\n-        <translation>Erreur lors de l&apos;exportation</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"287\"/>\n-        <source>Could not write to file %1.</source>\n-        <translation>Impossible d&apos;\u00e9crire sur le fichier %1.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"382\"/>\n-        <source>Range:</source>\n-        <translation>Intervalle :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../transactionview.cpp\" line=\"390\"/>\n-        <source>to</source>\n-        <translation>\u00e0</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>WalletModel</name>\n-    <message>\n-        <location filename=\"../walletmodel.cpp\" line=\"145\"/>\n-        <source>Sending...</source>\n-        <translation>Envoi en cours...</translation>\n-    </message>\n-</context>\n-<context>\n-    <name>bitcoin-core</name>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"3\"/>\n-        <source>Bitcoin version</source>\n-        <translation>Version de bitcoin</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"4\"/>\n-        <source>Usage:</source>\n-        <translation>Utilisation :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"5\"/>\n-        <source>Send command to -server or bitcoind</source>\n-        <translation>Envoyer une commande \u00e0 -server ou \u00e0 bitcoind</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"6\"/>\n-        <source>List commands</source>\n-        <translation>Lister les commandes</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"7\"/>\n-        <source>Get help for a command</source>\n-        <translation>Obtenir de l&apos;aide pour une commande</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"8\"/>\n-        <source>Options:</source>\n-        <translation>Options :</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"9\"/>\n-        <source>Specify configuration file (default: bitcoin.conf)</source>\n-        <translation>Sp\u00e9cifier le fichier de configuration (par d\u00e9faut : bitcoin.conf)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"10\"/>\n-        <source>Specify pid file (default: bitcoind.pid)</source>\n-        <translation>Sp\u00e9cifier le fichier pid (par d\u00e9faut : bitcoind.pid)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"11\"/>\n-        <source>Generate coins</source>\n-        <translation>G\u00e9n\u00e9rer des pi\u00e8ces</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"12\"/>\n-        <source>Don&apos;t generate coins</source>\n-        <translation>Ne pas g\u00e9n\u00e9rer de pi\u00e8ces</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"13\"/>\n-        <source>Start minimized</source>\n-        <translation>D\u00e9marrer sous forme minimis\u00e9e</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"14\"/>\n-        <source>Specify data directory</source>\n-        <translation>Sp\u00e9cifier le r\u00e9pertoire de donn\u00e9es</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"15\"/>\n-        <source>Specify connection timeout (in milliseconds)</source>\n-        <translation>Sp\u00e9cifier le d\u00e9lai d&apos;expiration de la connexion (en millisecondes)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"16\"/>\n-        <source>Connect through socks4 proxy</source>\n-        <translation>Connexion via un proxy socks4</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"17\"/>\n-        <source>Allow DNS lookups for addnode and connect</source>\n-        <translation>Autoriser les recherches DNS pour l&apos;ajout de n\u0153uds et la connexion</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"18\"/>\n-        <source>Listen for connections on &lt;port&gt; (default: 8333 or testnet: 18333)</source>\n-        <translation>\u00c9couter les connexions sur le &lt;port&gt; (par d\u00e9faut : 8333 ou testnet : 18333)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"19\"/>\n-        <source>Maintain at most &lt;n&gt; connections to peers (default: 125)</source>\n-        <translation>Garder au plus &lt;n&gt; connexions avec les pairs (par d\u00e9faut : 125)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"20\"/>\n-        <source>Add a node to connect to</source>\n-        <translation>Ajouter un n\u0153ud auquel se connecter</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"21\"/>\n-        <source>Connect only to the specified node</source>\n-        <translation>Ne se connecter qu&apos;au n\u0153ud sp\u00e9cifi\u00e9</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"22\"/>\n-        <source>Don&apos;t accept connections from outside</source>\n-        <translation>Ne pas accepter les connexion depuis l&apos;ext\u00e9rieur</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"23\"/>\n-        <source>Don&apos;t bootstrap list of peers using DNS</source>\n-        <translation>Ne pas amorcer la liste des pairs en utilisant le DNS</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"24\"/>\n-        <source>Threshold for disconnecting misbehaving peers (default: 100)</source>\n-        <translation>Seuil de d\u00e9connexion des pairs de mauvaise qualit\u00e9 (par d\u00e9faut : 100)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"25\"/>\n-        <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n-        <translation>D\u00e9lai en secondes de refus de reconnexion aux pairs de mauvaise qualit\u00e9 (par d\u00e9faut : 86400)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"28\"/>\n-        <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: 10000)</source>\n-        <translation>Tampon maximal de r\u00e9ception par connexion, &lt;n&gt;*1000 octets (par d\u00e9faut : 10000)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"29\"/>\n-        <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: 10000)</source>\n-        <translation>Tampon maximal d&apos;envoi par connexion, &lt;n&gt;*1000 octets (par d\u00e9faut : 10000)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"30\"/>\n-        <source>Don&apos;t attempt to use UPnP to map the listening port</source>\n-        <translation>Ne pas tenter d&apos;utiliser l&apos;UPnP pour ouvrir le port d&apos;\u00e9coute</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"31\"/>\n-        <source>Attempt to use UPnP to map the listening port</source>\n-        <translation>Essayer d&apos;utiliser l&apos;UPnP pour ouvrir le port d&apos;\u00e9coute</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"32\"/>\n-        <source>Fee per kB to add to transactions you send</source>\n-        <translation>Frais par ko \u00e0 ajouter aux transactions que vous enverrez</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"33\"/>\n-        <source>Accept command line and JSON-RPC commands</source>\n-        <translation>Accepter les commandes de JSON-RPC et de la ligne de commande</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"34\"/>\n-        <source>Run in the background as a daemon and accept commands</source>\n-        <translation>Fonctionner en arri\u00e8re-plan en tant que d\u00e9mon et accepter les commandes</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"35\"/>\n-        <source>Use the test network</source>\n-        <translation>Utiliser le r\u00e9seau de test</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"36\"/>\n-        <source>Output extra debugging information</source>\n-        <translation>Informations de d\u00e9bogage suppl\u00e9mentaires</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"37\"/>\n-        <source>Prepend debug output with timestamp</source>\n-        <translation>Faire pr\u00e9c\u00e9der les donn\u00e9es de d\u00e9bogage par un horodatage</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"38\"/>\n-        <source>Send trace/debug info to console instead of debug.log file</source>\n-        <translation>Envoyer les informations de d\u00e9bogage/trace \u00e0 la console au lieu du fichier debug.log</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"39\"/>\n-        <source>Send trace/debug info to debugger</source>\n-        <translation>Envoyer les informations de d\u00e9bogage/trace au d\u00e9bogueur</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"40\"/>\n-        <source>Username for JSON-RPC connections</source>\n-        <translation>Nom d&apos;utilisateur pour les connexions JSON-RPC</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"41\"/>\n-        <source>Password for JSON-RPC connections</source>\n-        <translation>Mot de passe pour les connexions JSON-RPC</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"42\"/>\n-        <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 8332)</source>\n-        <translation>\u00c9couter les connexions JSON-RPC sur le &lt;port&gt; (par d\u00e9faut : 8332)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"43\"/>\n-        <source>Allow JSON-RPC connections from specified IP address</source>\n-        <translation>Autoriser les connexions JSON-RPC depuis l&apos;adresse IP sp\u00e9cifi\u00e9e</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"44\"/>\n-        <source>Send commands to node running on &lt;ip&gt; (default: 127.0.0.1)</source>\n-        <translation>Envoyer des commandes au n\u0153ud fonctionnant \u00e0 &lt;ip&gt; (par d\u00e9faut : 127.0.0.1)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"45\"/>\n-        <source>Set key pool size to &lt;n&gt; (default: 100)</source>\n-        <translation>R\u00e9gler la taille de la plage de clefs sur &lt;n&gt; (par d\u00e9faut : 100)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"46\"/>\n-        <source>Rescan the block chain for missing wallet transactions</source>\n-        <translation>R\u00e9analyser la cha\u00eene de blocs pour les transactions de porte-monnaie manquantes</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"47\"/>\n-        <source>\n-SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation>\n-Options SSL : (cf. le wiki Bitcoin pour les r\u00e9glages SSL)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"50\"/>\n-        <source>Use OpenSSL (https) for JSON-RPC connections</source>\n-        <translation>Utiliser OpenSSL (https) pour les connexions JSON-RPC</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"51\"/>\n-        <source>Server certificate file (default: server.cert)</source>\n-        <translation>Fichier de certificat serveur (par d\u00e9faut : server.cert)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"52\"/>\n-        <source>Server private key (default: server.pem)</source>\n-        <translation>Clef priv\u00e9e du serveur (par d\u00e9faut : server.pem)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"53\"/>\n-        <source>Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)</source>\n-        <translation>Clefs de chiffrement acceptables (par d\u00e9faut : TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"56\"/>\n-        <source>This help message</source>\n-        <translation>Ce message d&apos;aide</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"57\"/>\n-        <source>Cannot obtain a lock on data directory %s.  Bitcoin is probably already running.</source>\n-        <translation>Impossible d&apos;obtenir un verrou sur le r\u00e9pertoire de donn\u00e9es %s.  Bitcoin fonctionne probablement d\u00e9j\u00e0.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"60\"/>\n-        <source>Loading addresses...</source>\n-        <translation>Chargement des adresses...</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"61\"/>\n-        <source>Error loading addr.dat</source>\n-        <translation>Erreur lors du chargement de addr.dat</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"63\"/>\n-        <source>Error loading blkindex.dat</source>\n-        <translation>Erreur lors du chargement de blkindex.dat</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"65\"/>\n-        <source>Error loading wallet.dat: Wallet corrupted</source>\n-        <translation>Erreur lors du chargement de wallet.dat : porte-monnaie corrompu</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"66\"/>\n-        <source>Error loading wallet.dat: Wallet requires newer version of Bitcoin</source>\n-        <translation>Erreur lors du chargement de wallet.dat : le porte-monnaie n\u00e9cessite une version plus r\u00e9cente de Bitcoin</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"67\"/>\n-        <source>Wallet needed to be rewritten: restart Bitcoin to complete</source>\n-        <translation>Le porte-monnaie n\u00e9cessitait une r\u00e9\u00e9criture. Veuillez red\u00e9marrer Bitcoin pour terminer l&apos;op\u00e9ration</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"68\"/>\n-        <source>Error loading wallet.dat</source>\n-        <translation>Erreur lors du chargement de wallet.dat</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"62\"/>\n-        <source>Loading block index...</source>\n-        <translation>Chargement de l&apos;index des blocs...</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"64\"/>\n-        <source>Loading wallet...</source>\n-        <translation>Chargement du porte-monnaie...</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"69\"/>\n-        <source>Rescanning...</source>\n-        <translation>Nouvelle analyse...</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"70\"/>\n-        <source>Done loading</source>\n-        <translation>Chargement termin\u00e9</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"71\"/>\n-        <source>Invalid -proxy address</source>\n-        <translation>Adresse -proxy invalide</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"72\"/>\n-        <source>Invalid amount for -paytxfee=&lt;amount&gt;</source>\n-        <translation>Montant invalide pour -paytxfee=&lt;montant&gt;</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"73\"/>\n-        <source>Warning: -paytxfee is set very high.  This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>Attention : -paytxfee est r\u00e9gl\u00e9e sur un montant tr\u00e8s \u00e9lev\u00e9.  Il s&apos;agit des frais de transaction que vous payerez si vous envoyez une transaction.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"76\"/>\n-        <source>Error: CreateThread(StartNode) failed</source>\n-        <translation>Erreur : CreateThread(StartNode) a \u00e9chou\u00e9</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"77\"/>\n-        <source>Warning: Disk space is low  </source>\n-        <translation>Attention : l&apos;espace disque est faible</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"78\"/>\n-        <source>Unable to bind to port %d on this computer.  Bitcoin is probably already running.</source>\n-        <translation>Impossible de s&apos;attacher au port %d sur cet ordinateur.  Bitcoin fonctionne probablement d\u00e9j\u00e0.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"81\"/>\n-        <source>Warning: Please check that your computer&apos;s date and time are correct.  If your clock is wrong Bitcoin will not work properly.</source>\n-        <translation>Attention : veuillez v\u00e9rifier que l&apos;heure et la date de votre ordinateur sont corrects.  Si votre horloge n&apos;est pas \u00e0 l&apos;heure, Bitcoin ne fonctionnera pas correctement.</translation>\n-    </message>\n-    <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"84\"/>\n-        <source>beta</source>\n-        <translation>b\u00eata</translation>\n-    </message>\n-</context>\n-</TS>\n\\ No newline at end of file"
      },
      {
        "sha": "224bf54d5d820d884708ffb8e5797040dd37707d",
        "filename": "src/qt/locale/bitcoin_he.ts",
        "status": "modified",
        "additions": 1092,
        "deletions": 552,
        "changes": 1644,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_he.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_he.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_he.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "300bbd64b69b07f2f06b0bbb7077a8eea107f4ed",
        "filename": "src/qt/locale/bitcoin_hr.ts",
        "status": "modified",
        "additions": 1101,
        "deletions": 563,
        "changes": 1664,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_hr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_hr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hr.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "e69453c8e6ebe907763567579984481bb0deb539",
        "filename": "src/qt/locale/bitcoin_hu.ts",
        "status": "modified",
        "additions": 1048,
        "deletions": 522,
        "changes": 1570,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_hu.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_hu.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hu.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "92d3b7cf2d9a4d30bb9fee298391f21ac33a5e1b",
        "filename": "src/qt/locale/bitcoin_it.ts",
        "status": "modified",
        "additions": 1070,
        "deletions": 544,
        "changes": 1614,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_it.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_it.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "f14b5ecb86d614ef781c84fe1d87a9ee7c3510df",
        "filename": "src/qt/locale/bitcoin_lt.ts",
        "status": "modified",
        "additions": 1064,
        "deletions": 532,
        "changes": 1596,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_lt.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_lt.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_lt.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "8f32f6b65f7e95219351bec8495627834bcc90f0",
        "filename": "src/qt/locale/bitcoin_nb.ts",
        "status": "modified",
        "additions": 1069,
        "deletions": 528,
        "changes": 1597,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_nb.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_nb.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nb.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "8ffa7694ff813eda45883db05481d135cd73a69f",
        "filename": "src/qt/locale/bitcoin_nl.ts",
        "status": "modified",
        "additions": 1087,
        "deletions": 553,
        "changes": 1640,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_nl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_nl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nl.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "fe44a97a03d55083a013c4bebb2e41677907c99a",
        "filename": "src/qt/locale/bitcoin_pl.ts",
        "status": "modified",
        "additions": 1065,
        "deletions": 532,
        "changes": 1597,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_pl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_pl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pl.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "64e292358ebb07db892e3aa884ab37e31e00e5ae",
        "filename": "src/qt/locale/bitcoin_pt_BR.ts",
        "status": "modified",
        "additions": 1102,
        "deletions": 570,
        "changes": 1672,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_pt_BR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_pt_BR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_BR.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "bd7f74bb7f866d045f6dba379d934ae74d5a202e",
        "filename": "src/qt/locale/bitcoin_pt_PT.ts",
        "status": "modified",
        "additions": 755,
        "deletions": 502,
        "changes": 1257,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_pt_PT.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_pt_PT.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_PT.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "6b8bbd3732e93b31e33c9e1a96ec7ec99b88bf81",
        "filename": "src/qt/locale/bitcoin_ro_RO.ts",
        "status": "modified",
        "additions": 1034,
        "deletions": 502,
        "changes": 1536,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_ro_RO.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_ro_RO.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ro_RO.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "f4e3c8c851a33f73da0fd6d23f76ed6268008cc4",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 1106,
        "deletions": 565,
        "changes": 1671,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "bd56dd1bf694038c379e7afc828d83d804ef3bd2",
        "filename": "src/qt/locale/bitcoin_sk.ts",
        "status": "modified",
        "additions": 1076,
        "deletions": 540,
        "changes": 1616,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_sk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_sk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sk.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "89d8f77a5f253702a8c67601ad7c2b5be5d0d6fb",
        "filename": "src/qt/locale/bitcoin_sr.ts",
        "status": "modified",
        "additions": 1012,
        "deletions": 480,
        "changes": 1492,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_sr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_sr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sr.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "d41390fb7c9492e715d0343092ef307aa6f272bf",
        "filename": "src/qt/locale/bitcoin_sv.ts",
        "status": "modified",
        "additions": 1223,
        "deletions": 678,
        "changes": 1901,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_sv.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_sv.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sv.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "4e0e82dc1dce19099b3a6da2d33ca854200ade46",
        "filename": "src/qt/locale/bitcoin_tr.ts",
        "status": "modified",
        "additions": 1108,
        "deletions": 567,
        "changes": 1675,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_tr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_tr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_tr.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "bf41f5113ab80b2bee9a54478d171ece7a5e4cfa",
        "filename": "src/qt/locale/bitcoin_uk.ts",
        "status": "modified",
        "additions": 1068,
        "deletions": 541,
        "changes": 1609,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_uk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_uk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uk.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "087e19b00ee41a3bdf3408d7a2dbd35aa430e4df",
        "filename": "src/qt/locale/bitcoin_zh_CN.ts",
        "status": "modified",
        "additions": 1092,
        "deletions": 557,
        "changes": 1649,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_zh_CN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_zh_CN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_CN.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "c2b318e990b4274b5c789c91f359f140da0e4749",
        "filename": "src/qt/locale/bitcoin_zh_TW.ts",
        "status": "modified",
        "additions": 1084,
        "deletions": 549,
        "changes": 1633,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_zh_TW.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/locale/bitcoin_zh_TW.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_TW.ts?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13"
      },
      {
        "sha": "ab3ea5a0c5585d3ecdf1e2f23e534e4e5a13021e",
        "filename": "src/qt/messagepage.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/messagepage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/messagepage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/messagepage.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -10,6 +10,7 @@\n #include \"main.h\"\n #include \"wallet.h\"\n #include \"init.h\"\n+#include \"base58.h\"\n \n #include \"messagepage.h\"\n #include \"ui_messagepage.h\"\n@@ -83,6 +84,13 @@ void MessagePage::on_signMessage_clicked()\n                               QMessageBox::Abort, QMessageBox::Abort);\n         return;\n     }\n+    CKeyID keyID;\n+    if (!addr.GetKeyID(keyID))\n+    {\n+        QMessageBox::critical(this, tr(\"Error signing\"), tr(\"%1 does not refer to a key.\").arg(address),\n+                              QMessageBox::Abort, QMessageBox::Abort);\n+        return;\n+    }\n \n     WalletModel::UnlockContext ctx(model->requestUnlock());\n     if(!ctx.isValid())\n@@ -92,7 +100,7 @@ void MessagePage::on_signMessage_clicked()\n     }\n \n     CKey key;\n-    if (!pwalletMain->GetKey(addr, key))\n+    if (!pwalletMain->GetKey(keyID, key))\n     {\n         QMessageBox::critical(this, tr(\"Error signing\"), tr(\"Private key for %1 is not available.\").arg(address),\n                               QMessageBox::Abort, QMessageBox::Abort);"
      },
      {
        "sha": "9c7b85451c6ff83f3d2b7c6f7523efa843b84a5c",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 140,
        "deletions": 318,
        "changes": 458,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -1,396 +1,218 @@\n #include \"optionsdialog.h\"\n-#include \"optionsmodel.h\"\n+#include \"ui_optionsdialog.h\"\n+\n #include \"bitcoinamountfield.h\"\n-#include \"monitoreddatamapper.h\"\n-#include \"guiutil.h\"\n #include \"bitcoinunits.h\"\n+#include \"monitoreddatamapper.h\"\n+#include \"netbase.h\"\n+#include \"optionsmodel.h\"\n+#include \"qvalidatedlineedit.h\"\n #include \"qvaluecombobox.h\"\n \n-#include <QHBoxLayout>\n-#include <QVBoxLayout>\n-#include <QPushButton>\n-#include <QListWidget>\n-#include <QStackedWidget>\n-\n #include <QCheckBox>\n+#include <QDir>\n+#include <QIntValidator>\n #include <QLabel>\n #include <QLineEdit>\n-#include <QIntValidator>\n-#include <QDoubleValidator>\n-#include <QRegExpValidator>\n-#include <QDialogButtonBox>\n-#include <QDir>\n #include <QMessageBox>\n+#include <QPushButton>\n+#include <QRegExp>\n+#include <QRegExpValidator>\n+#include <QTabWidget>\n+#include <QWidget>\n \n-class OptionsPage: public QWidget\n-{\n-    Q_OBJECT\n-public:\n-    explicit OptionsPage(QWidget *parent=0): QWidget(parent) {}\n-\n-    virtual void setMapper(MonitoredDataMapper *mapper) = 0;\n-};\n-\n-class MainOptionsPage: public OptionsPage\n-{\n-    Q_OBJECT\n-public:\n-    explicit MainOptionsPage(QWidget *parent=0);\n-\n-    virtual void setMapper(MonitoredDataMapper *mapper);\n-private:\n-    BitcoinAmountField *fee_edit;\n-    QCheckBox *bitcoin_at_startup;\n-    QCheckBox *detach_database;\n-};\n-\n-class WindowOptionsPage: public OptionsPage\n+OptionsDialog::OptionsDialog(QWidget *parent) :\n+    QDialog(parent),\n+    ui(new Ui::OptionsDialog),\n+    model(0),\n+    mapper(0),\n+    fRestartWarningDisplayed_Proxy(false),\n+    fRestartWarningDisplayed_Lang(false),\n+    fProxyIpValid(true)\n {\n-    Q_OBJECT\n-public:\n-    explicit WindowOptionsPage(QWidget *parent=0);\n+    ui->setupUi(this);\n \n-    virtual void setMapper(MonitoredDataMapper *mapper);\n-private:\n-#ifndef Q_WS_MAC\n-    QCheckBox *minimize_to_tray;\n-    QCheckBox *minimize_on_close;\n+    /* Network elements init */\n+#ifndef USE_UPNP\n+    ui->mapPortUpnp->setEnabled(false);\n #endif\n-};\n-\n-class DisplayOptionsPage: public OptionsPage\n-{\n-    Q_OBJECT\n-public:\n-    explicit DisplayOptionsPage(QWidget *parent=0);\n-\n-    virtual void setMapper(MonitoredDataMapper *mapper);\n-private:\n-    QValueComboBox *lang;\n-    QValueComboBox *unit;\n-    QCheckBox *display_addresses;\n-    bool restart_warning_displayed;\n-private slots:\n-    void showRestartWarning();\n-};\n-\n-class NetworkOptionsPage: public OptionsPage\n-{\n-    Q_OBJECT\n-public:\n-    explicit NetworkOptionsPage(QWidget *parent=0);\n-\n-    virtual void setMapper(MonitoredDataMapper *mapper);\n-private:\n-    QCheckBox *map_port_upnp;\n-    QCheckBox *connect_socks4;\n-    QLineEdit *proxy_ip;\n-    QLineEdit *proxy_port;\n-};\n \n+    ui->socksVersion->setEnabled(false);\n+    ui->socksVersion->addItem(\"5\", 5);\n+    ui->socksVersion->addItem(\"4\", 4);\n+    ui->socksVersion->setCurrentIndex(0);\n \n-#include \"optionsdialog.moc\"\n+    ui->proxyIp->setEnabled(false);\n+    ui->proxyPort->setEnabled(false);\n+    ui->proxyPort->setValidator(new QIntValidator(0, 65535, this));\n \n-OptionsDialog::OptionsDialog(QWidget *parent):\n-    QDialog(parent), contents_widget(0), pages_widget(0),\n-    model(0)\n-{\n-    contents_widget = new QListWidget();\n-    contents_widget->setMaximumWidth(128);\n+    connect(ui->connectSocks, SIGNAL(toggled(bool)), ui->socksVersion, SLOT(setEnabled(bool)));\n+    connect(ui->connectSocks, SIGNAL(toggled(bool)), ui->proxyIp, SLOT(setEnabled(bool)));\n+    connect(ui->connectSocks, SIGNAL(toggled(bool)), ui->proxyPort, SLOT(setEnabled(bool)));\n \n-    pages_widget = new QStackedWidget();\n-    pages_widget->setMinimumWidth(500);\n-    pages_widget->setMinimumHeight(300);\n+    ui->proxyIp->installEventFilter(this);\n \n-    pages.append(new MainOptionsPage(this));\n-    pages.append(new NetworkOptionsPage(this));\n-#ifndef Q_WS_MAC\n-    /* Hide Window options on Mac as there are currently none available */\n-    pages.append(new WindowOptionsPage(this));\n+    /* Window elements init */\n+#ifdef Q_WS_MAC\n+    ui->tabWindow->setVisible(false);\n #endif\n-    pages.append(new DisplayOptionsPage(this));\n \n-    foreach(OptionsPage *page, pages)\n+    /* Display elements init */\n+    QDir translations(\":translations\");\n+    ui->lang->addItem(QString(\"(\") + tr(\"default\") + QString(\")\"), QVariant(\"\"));\n+    foreach(const QString &langStr, translations.entryList())\n     {\n-        QListWidgetItem *item = new QListWidgetItem(page->windowTitle());\n-        contents_widget->addItem(item);\n-        pages_widget->addWidget(page);\n+        ui->lang->addItem(langStr, QVariant(langStr));\n     }\n \n-    contents_widget->setCurrentRow(0);\n-\n-    QHBoxLayout *main_layout = new QHBoxLayout();\n-    main_layout->addWidget(contents_widget);\n-    main_layout->addWidget(pages_widget, 1);\n-\n-    QVBoxLayout *layout = new QVBoxLayout();\n-    layout->addLayout(main_layout);\n+    ui->unit->setModel(new BitcoinUnits(this));\n \n-    QDialogButtonBox *buttonbox = new QDialogButtonBox();\n-    buttonbox->setStandardButtons(QDialogButtonBox::Apply|QDialogButtonBox::Ok|QDialogButtonBox::Cancel);\n-    apply_button = buttonbox->button(QDialogButtonBox::Apply);\n-    layout->addWidget(buttonbox);\n-\n-    setLayout(layout);\n-    setWindowTitle(tr(\"Options\"));\n+    connect(ui->connectSocks, SIGNAL(clicked(bool)), this, SLOT(showRestartWarning_Proxy()));\n+    connect(ui->lang, SIGNAL(activated(int)), this, SLOT(showRestartWarning_Lang()));\n \n     /* Widget-to-option mapper */\n     mapper = new MonitoredDataMapper(this);\n     mapper->setSubmitPolicy(QDataWidgetMapper::ManualSubmit);\n     mapper->setOrientation(Qt::Vertical);\n-    /* enable apply button when data modified */\n-    connect(mapper, SIGNAL(viewModified()), this, SLOT(enableApply()));\n-    /* disable apply button when new data loaded */\n-    connect(mapper, SIGNAL(currentIndexChanged(int)), this, SLOT(disableApply()));\n-\n-    /* Event bindings */\n-    connect(contents_widget, SIGNAL(currentRowChanged(int)), this, SLOT(changePage(int)));\n-    connect(buttonbox->button(QDialogButtonBox::Ok), SIGNAL(clicked()), this, SLOT(okClicked()));\n-    connect(buttonbox->button(QDialogButtonBox::Cancel), SIGNAL(clicked()), this, SLOT(cancelClicked()));\n-    connect(buttonbox->button(QDialogButtonBox::Apply), SIGNAL(clicked()), this, SLOT(applyClicked()));\n+\n+    /* enable save buttons when data modified */\n+    connect(mapper, SIGNAL(viewModified()), this, SLOT(enableSaveButtons()));\n+    /* disable save buttons when new data loaded */\n+    connect(mapper, SIGNAL(currentIndexChanged(int)), this, SLOT(disableSaveButtons()));\n+    /* disable/enable save buttons when proxy IP is invalid/valid */\n+    connect(this, SIGNAL(proxyIpValid(bool)), this, SLOT(setSaveButtonState(bool)));\n+}\n+\n+OptionsDialog::~OptionsDialog()\n+{\n+    delete ui;\n }\n \n void OptionsDialog::setModel(OptionsModel *model)\n {\n     this->model = model;\n \n-    mapper->setModel(model);\n-\n-    foreach(OptionsPage *page, pages)\n+    if(model)\n     {\n-        page->setMapper(mapper);\n+        connect(model, SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n+\n+        mapper->setModel(model);\n+        setMapper();\n+        mapper->toFirst();\n     }\n \n-    mapper->toFirst();\n+    // update the display unit, to not use the default (\"BTC\")\n+    updateDisplayUnit();\n }\n \n-void OptionsDialog::changePage(int index)\n+void OptionsDialog::setMapper()\n {\n-    pages_widget->setCurrentIndex(index);\n-}\n+    /* Main */\n+    mapper->addMapping(ui->transactionFee, OptionsModel::Fee);\n+    mapper->addMapping(ui->bitcoinAtStartup, OptionsModel::StartAtStartup);\n+    mapper->addMapping(ui->detachDatabases, OptionsModel::DetachDatabases);\n \n-void OptionsDialog::okClicked()\n-{\n-    mapper->submit();\n-    accept();\n-}\n+    /* Network */\n+    mapper->addMapping(ui->mapPortUpnp, OptionsModel::MapPortUPnP);\n+    mapper->addMapping(ui->connectSocks, OptionsModel::ProxyUse);\n+    mapper->addMapping(ui->socksVersion, OptionsModel::ProxySocksVersion);\n+    mapper->addMapping(ui->proxyIp, OptionsModel::ProxyIP);\n+    mapper->addMapping(ui->proxyPort, OptionsModel::ProxyPort);\n \n-void OptionsDialog::cancelClicked()\n-{\n-    reject();\n-}\n+    /* Window */\n+#ifndef Q_WS_MAC\n+    mapper->addMapping(ui->minimizeToTray, OptionsModel::MinimizeToTray);\n+    mapper->addMapping(ui->minimizeOnClose, OptionsModel::MinimizeOnClose);\n+#endif\n \n-void OptionsDialog::applyClicked()\n-{\n-    mapper->submit();\n-    apply_button->setEnabled(false);\n+    /* Display */\n+    mapper->addMapping(ui->lang, OptionsModel::Language);\n+    mapper->addMapping(ui->unit, OptionsModel::DisplayUnit);\n+    mapper->addMapping(ui->displayAddresses, OptionsModel::DisplayAddresses);\n }\n \n-void OptionsDialog::enableApply()\n+void OptionsDialog::enableSaveButtons()\n {\n-    apply_button->setEnabled(true);\n+    // prevent enabling of the save buttons when data modified, if there is an invalid proxy address present\n+    if(fProxyIpValid)\n+        setSaveButtonState(true);\n }\n \n-void OptionsDialog::disableApply()\n+void OptionsDialog::disableSaveButtons()\n {\n-    apply_button->setEnabled(false);\n+    setSaveButtonState(false);\n }\n \n-/* Main options */\n-MainOptionsPage::MainOptionsPage(QWidget *parent):\n-        OptionsPage(parent)\n+void OptionsDialog::setSaveButtonState(bool fState)\n {\n-    QVBoxLayout *layout = new QVBoxLayout();\n-    setWindowTitle(tr(\"Main\"));\n-\n-    QLabel *fee_help = new QLabel(tr(\"Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.\"));\n-    fee_help->setWordWrap(true);\n-    layout->addWidget(fee_help);\n-\n-    QHBoxLayout *fee_hbox = new QHBoxLayout();\n-    fee_hbox->addSpacing(18);\n-    QLabel *fee_label = new QLabel(tr(\"Pay transaction &fee\"));\n-    fee_hbox->addWidget(fee_label);\n-    fee_edit = new BitcoinAmountField();\n-\n-    fee_label->setBuddy(fee_edit);\n-    fee_hbox->addWidget(fee_edit);\n-    fee_hbox->addStretch(1);\n-\n-    layout->addLayout(fee_hbox);\n-\n-    bitcoin_at_startup = new QCheckBox(tr(\"&Start Bitcoin on system login\"));\n-    bitcoin_at_startup->setToolTip(tr(\"Automatically start Bitcoin after logging in to the system\"));\n-    layout->addWidget(bitcoin_at_startup);\n-\n-    detach_database = new QCheckBox(tr(\"&Detach databases at shutdown\"));\n-    detach_database->setToolTip(tr(\"Detach block and address databases at shutdown. This means they can be moved to another data directory, but it slows down shutdown. The wallet is always detached.\"));\n-    layout->addWidget(detach_database);\n-\n-    layout->addStretch(1); // Extra space at bottom\n-    setLayout(layout);\n+    ui->applyButton->setEnabled(fState);\n+    ui->okButton->setEnabled(fState);\n }\n \n-void MainOptionsPage::setMapper(MonitoredDataMapper *mapper)\n+void OptionsDialog::on_okButton_clicked()\n {\n-    // Map model to widgets\n-    mapper->addMapping(fee_edit, OptionsModel::Fee);\n-    mapper->addMapping(bitcoin_at_startup, OptionsModel::StartAtStartup);\n-    mapper->addMapping(detach_database, OptionsModel::DetachDatabases);\n+    mapper->submit();\n+    accept();\n }\n \n-/* Display options */\n-DisplayOptionsPage::DisplayOptionsPage(QWidget *parent):\n-    OptionsPage(parent), restart_warning_displayed(false)\n+void OptionsDialog::on_cancelButton_clicked()\n {\n-    setWindowTitle(tr(\"Display\"));\n-\n-    QVBoxLayout *layout = new QVBoxLayout();\n-\n-    QHBoxLayout *lang_hbox = new QHBoxLayout();\n-    lang_hbox->addSpacing(18);\n-    QLabel *lang_label = new QLabel(tr(\"User Interface &Language:\"));\n-    lang_hbox->addWidget(lang_label);\n-    lang = new QValueComboBox(this);\n-    // Make list of languages\n-    QDir translations(\":translations\");\n-    lang->addItem(QString(\"(\") + tr(\"default\") + QString(\")\"), QVariant(\"\"));\n-    foreach(const QString &langStr, translations.entryList())\n-    {\n-        lang->addItem(langStr, QVariant(langStr));\n-    }\n-\n-    lang->setToolTip(tr(\"The user interface language can be set here. This setting will only take effect after restarting Bitcoin.\"));\n-    connect(lang, SIGNAL(activated(int)), this, SLOT(showRestartWarning()));\n-\n-    lang_label->setBuddy(lang);\n-    lang_hbox->addWidget(lang);\n-\n-    layout->addLayout(lang_hbox);\n-\n-    QHBoxLayout *unit_hbox = new QHBoxLayout();\n-    unit_hbox->addSpacing(18);\n-    QLabel *unit_label = new QLabel(tr(\"&Unit to show amounts in:\"));\n-    unit_hbox->addWidget(unit_label);\n-    unit = new QValueComboBox(this);\n-    unit->setModel(new BitcoinUnits(this));\n-    unit->setToolTip(tr(\"Choose the default subdivision unit to show in the interface, and when sending coins\"));\n-\n-    unit_label->setBuddy(unit);\n-    unit_hbox->addWidget(unit);\n-\n-    layout->addLayout(unit_hbox);\n-\n-    display_addresses = new QCheckBox(tr(\"&Display addresses in transaction list\"), this);\n-    display_addresses->setToolTip(tr(\"Whether to show Bitcoin addresses in the transaction list\"));\n-    layout->addWidget(display_addresses);\n-\n-    layout->addStretch();\n-    setLayout(layout);\n+    reject();\n }\n \n-void DisplayOptionsPage::setMapper(MonitoredDataMapper *mapper)\n+void OptionsDialog::on_applyButton_clicked()\n {\n-    mapper->addMapping(lang, OptionsModel::Language);\n-    mapper->addMapping(unit, OptionsModel::DisplayUnit);\n-    mapper->addMapping(display_addresses, OptionsModel::DisplayAddresses);\n+    mapper->submit();\n+    ui->applyButton->setEnabled(false);\n }\n \n-void DisplayOptionsPage::showRestartWarning()\n+void OptionsDialog::showRestartWarning_Proxy()\n {\n-    if(!restart_warning_displayed)\n+    if(!fRestartWarningDisplayed_Proxy)\n     {\n         QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting Bitcoin.\"), QMessageBox::Ok);\n-        restart_warning_displayed = true;\n+        fRestartWarningDisplayed_Proxy = true;\n     }\n }\n \n-/* Window options */\n-WindowOptionsPage::WindowOptionsPage(QWidget *parent):\n-        OptionsPage(parent)\n-{\n-    QVBoxLayout *layout = new QVBoxLayout();\n-    setWindowTitle(tr(\"Window\"));\n-\n-#ifndef Q_WS_MAC\n-    minimize_to_tray = new QCheckBox(tr(\"&Minimize to the tray instead of the taskbar\"));\n-    minimize_to_tray->setToolTip(tr(\"Show only a tray icon after minimizing the window\"));\n-    layout->addWidget(minimize_to_tray);\n-\n-    minimize_on_close = new QCheckBox(tr(\"M&inimize on close\"));\n-    minimize_on_close->setToolTip(tr(\"Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Quit in the menu.\"));\n-    layout->addWidget(minimize_on_close);\n-#endif\n-\n-    layout->addStretch(1); // Extra space at bottom\n-    setLayout(layout);\n-}\n-\n-void WindowOptionsPage::setMapper(MonitoredDataMapper *mapper)\n+void OptionsDialog::showRestartWarning_Lang()\n {\n-    // Map model to widgets\n-#ifndef Q_WS_MAC\n-    mapper->addMapping(minimize_to_tray, OptionsModel::MinimizeToTray);\n-#endif\n-#ifndef Q_WS_MAC\n-    mapper->addMapping(minimize_on_close, OptionsModel::MinimizeOnClose);\n-#endif\n+    if(!fRestartWarningDisplayed_Lang)\n+    {\n+        QMessageBox::warning(this, tr(\"Warning\"), tr(\"This setting will take effect after restarting Bitcoin.\"), QMessageBox::Ok);\n+        fRestartWarningDisplayed_Lang = true;\n+    }\n }\n \n-/* Network options */\n-NetworkOptionsPage::NetworkOptionsPage(QWidget *parent):\n-        OptionsPage(parent)\n+void OptionsDialog::updateDisplayUnit()\n {\n-    QVBoxLayout *layout = new QVBoxLayout();\n-    setWindowTitle(tr(\"Network\"));\n-\n-    map_port_upnp = new QCheckBox(tr(\"Map port using &UPnP\"));\n-    map_port_upnp->setToolTip(tr(\"Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.\"));\n-    layout->addWidget(map_port_upnp);\n-\n-    connect_socks4 = new QCheckBox(tr(\"&Connect through SOCKS4 proxy:\"));\n-    connect_socks4->setToolTip(tr(\"Connect to the Bitcon network through a SOCKS4 proxy (e.g. when connecting through Tor)\"));\n-    layout->addWidget(connect_socks4);\n-\n-    QHBoxLayout *proxy_hbox = new QHBoxLayout();\n-    proxy_hbox->addSpacing(18);\n-    QLabel *proxy_ip_label = new QLabel(tr(\"Proxy &IP:\"));\n-    proxy_hbox->addWidget(proxy_ip_label);\n-    proxy_ip = new QLineEdit();\n-    proxy_ip->setMaximumWidth(140);\n-    proxy_ip->setEnabled(false);\n-    proxy_ip->setValidator(new QRegExpValidator(QRegExp(\"[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\"), this));\n-    proxy_ip->setToolTip(tr(\"IP address of the proxy (e.g. 127.0.0.1)\"));\n-    proxy_ip_label->setBuddy(proxy_ip);\n-    proxy_hbox->addWidget(proxy_ip);\n-    QLabel *proxy_port_label = new QLabel(tr(\"&Port:\"));\n-    proxy_hbox->addWidget(proxy_port_label);\n-    proxy_port = new QLineEdit();\n-    proxy_port->setMaximumWidth(55);\n-    proxy_port->setValidator(new QIntValidator(0, 65535, this));\n-    proxy_port->setEnabled(false);\n-    proxy_port->setToolTip(tr(\"Port of the proxy (e.g. 1234)\"));\n-    proxy_port_label->setBuddy(proxy_port);\n-    proxy_hbox->addWidget(proxy_port);\n-    proxy_hbox->addStretch(1);\n-    layout->addLayout(proxy_hbox);\n-\n-    layout->addStretch(1); // Extra space at bottom\n-    setLayout(layout);\n-\n-    connect(connect_socks4, SIGNAL(toggled(bool)), proxy_ip, SLOT(setEnabled(bool)));\n-    connect(connect_socks4, SIGNAL(toggled(bool)), proxy_port, SLOT(setEnabled(bool)));\n-\n-#ifndef USE_UPNP\n-    map_port_upnp->setDisabled(true);\n-#endif\n+    if(model)\n+    {\n+        // Update transactionFee with the current unit\n+        ui->transactionFee->setDisplayUnit(model->getDisplayUnit());\n+    }\n }\n \n-void NetworkOptionsPage::setMapper(MonitoredDataMapper *mapper)\n+bool OptionsDialog::eventFilter(QObject *object, QEvent *event)\n {\n-    // Map model to widgets\n-    mapper->addMapping(map_port_upnp, OptionsModel::MapPortUPnP);\n-    mapper->addMapping(connect_socks4, OptionsModel::ConnectSOCKS4);\n-    mapper->addMapping(proxy_ip, OptionsModel::ProxyIP);\n-    mapper->addMapping(proxy_port, OptionsModel::ProxyPort);\n+    if(object == ui->proxyIp && event->type() == QEvent::FocusOut)\n+    {\n+        // Check proxyIP for a valid IPv4/IPv6 address\n+        CService addr;\n+        if(!LookupNumeric(ui->proxyIp->text().toStdString().c_str(), addr))\n+        {\n+            ui->proxyIp->setValid(false);\n+            fProxyIpValid = false;\n+            ui->statusLabel->setStyleSheet(\"QLabel { color: red; }\");\n+            ui->statusLabel->setText(tr(\"The supplied proxy address is invalid.\"));\n+            emit proxyIpValid(false);\n+        }\n+        else\n+        {\n+            fProxyIpValid = true;\n+            ui->statusLabel->clear();\n+            emit proxyIpValid(true);\n+        }\n+    }\n+    return QDialog::eventFilter(object, event);\n }"
      },
      {
        "sha": "7e91c96475db72991149933a5c9bf731cd4bc204",
        "filename": "src/qt/optionsdialog.h",
        "status": "modified",
        "additions": 30,
        "deletions": 25,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/optionsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/optionsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -2,48 +2,53 @@\n #define OPTIONSDIALOG_H\n \n #include <QDialog>\n-#include <QList>\n-\n-QT_BEGIN_NAMESPACE\n-class QStackedWidget;\n-class QListWidget;\n-class QListWidgetItem;\n-class QPushButton;\n-QT_END_NAMESPACE\n+\n+namespace Ui {\n+class OptionsDialog;\n+}\n class OptionsModel;\n-class OptionsPage;\n class MonitoredDataMapper;\n \n /** Preferences dialog. */\n class OptionsDialog : public QDialog\n {\n     Q_OBJECT\n+\n public:\n-    explicit OptionsDialog(QWidget *parent=0);\n+    explicit OptionsDialog(QWidget *parent = 0);\n+    ~OptionsDialog();\n \n     void setModel(OptionsModel *model);\n+    void setMapper();\n \n-signals:\n-\n-public slots:\n-    /** Change the current page to \\a index. */\n-    void changePage(int index);\n+protected:\n+    bool eventFilter(QObject *object, QEvent *event);\n \n private slots:\n-    void okClicked();\n-    void cancelClicked();\n-    void applyClicked();\n-    void enableApply();\n-    void disableApply();\n+    /* enable apply button and OK button */\n+    void enableSaveButtons();\n+    /* disable apply button and OK button */\n+    void disableSaveButtons();\n+    /* set apply button and OK button state (enabled / disabled) */\n+    void setSaveButtonState(bool fState);\n+    void on_okButton_clicked();\n+    void on_cancelButton_clicked();\n+    void on_applyButton_clicked();\n+\n+    void showRestartWarning_Proxy();\n+    void showRestartWarning_Lang();\n+    void updateDisplayUnit();\n+\n+signals:\n+    void proxyIpValid(bool fValid);\n \n private:\n-    QListWidget *contents_widget;\n-    QStackedWidget *pages_widget;\n+    Ui::OptionsDialog *ui;\n     OptionsModel *model;\n     MonitoredDataMapper *mapper;\n-    QPushButton *apply_button;\n-\n-    QList<OptionsPage*> pages;\n+    bool fRestartWarningDisplayed_Proxy;\n+    bool fRestartWarningDisplayed_Lang;\n+    bool fProxyIpValid;\n };\n \n #endif // OPTIONSDIALOG_H"
      },
      {
        "sha": "d6c6bbf40910ca5bd6e760690e7f03a0d24118c2",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 62,
        "deletions": 15,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -12,6 +12,30 @@ OptionsModel::OptionsModel(QObject *parent) :\n     Init();\n }\n \n+bool static ApplyProxySettings()\n+{\n+    QSettings settings;\n+    CService addrProxy(settings.value(\"addrProxy\", \"127.0.0.1:9050\").toString().toStdString());\n+    int nSocksVersion(settings.value(\"nSocksVersion\", 5).toInt());\n+    if (!settings.value(\"fUseProxy\", false).toBool()) {\n+        addrProxy = CService();\n+        nSocksVersion = 0;\n+        return false;\n+    }\n+    if (nSocksVersion && !addrProxy.IsValid())\n+        return false;\n+    if (!IsLimited(NET_IPV4))\n+        SetProxy(NET_IPV4, addrProxy, nSocksVersion);\n+    if (nSocksVersion > 4) {\n+#ifdef USE_IPV6\n+        if (!IsLimited(NET_IPV6))\n+            SetProxy(NET_IPV6, addrProxy, nSocksVersion);\n+#endif\n+        SetNameProxy(addrProxy, nSocksVersion);\n+    }\n+    return true;\n+}\n+\n void OptionsModel::Init()\n {\n     QSettings settings;\n@@ -30,6 +54,8 @@ void OptionsModel::Init()\n         SoftSetBoolArg(\"-upnp\", settings.value(\"fUseUPnP\").toBool());\n     if (settings.contains(\"addrProxy\") && settings.value(\"fUseProxy\").toBool())\n         SoftSetArg(\"-proxy\", settings.value(\"addrProxy\").toString().toStdString());\n+    if (settings.contains(\"nSocksVersion\") && settings.value(\"fUseProxy\").toBool())\n+        SoftSetArg(\"-socks\", settings.value(\"nSocksVersion\").toString().toStdString());\n     if (settings.contains(\"detachDB\"))\n         SoftSetBoolArg(\"-detachdb\", settings.value(\"detachDB\").toBool());\n     if (!language.isEmpty())\n@@ -75,20 +101,21 @@ bool OptionsModel::Upgrade()\n         CAddress addrProxyAddress;\n         if (walletdb.ReadSetting(\"addrProxy\", addrProxyAddress))\n         {\n-            addrProxy = addrProxyAddress;\n-            settings.setValue(\"addrProxy\", addrProxy.ToStringIPPort().c_str());\n+            settings.setValue(\"addrProxy\", addrProxyAddress.ToStringIPPort().c_str());\n             walletdb.EraseSetting(\"addrProxy\");\n         }\n     }\n     catch (std::ios_base::failure &e)\n     {\n         // 0.6.0rc1 saved this as a CService, which causes failure when parsing as a CAddress\n+        CService addrProxy;\n         if (walletdb.ReadSetting(\"addrProxy\", addrProxy))\n         {\n             settings.setValue(\"addrProxy\", addrProxy.ToStringIPPort().c_str());\n             walletdb.EraseSetting(\"addrProxy\");\n         }\n     }\n+    ApplyProxySettings();\n     Init();\n \n     return true;\n@@ -115,12 +142,24 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             return settings.value(\"fUseUPnP\", GetBoolArg(\"-upnp\", true));\n         case MinimizeOnClose:\n             return QVariant(fMinimizeOnClose);\n-        case ConnectSOCKS4:\n+        case ProxyUse:\n             return settings.value(\"fUseProxy\", false);\n-        case ProxyIP:\n-            return QVariant(QString::fromStdString(addrProxy.ToStringIP()));\n-        case ProxyPort:\n-            return QVariant(addrProxy.GetPort());\n+        case ProxySocksVersion:\n+            return settings.value(\"nSocksVersion\", 5);\n+        case ProxyIP: {\n+            CService addrProxy;\n+            if (GetProxy(NET_IPV4, addrProxy))\n+                return QVariant(QString::fromStdString(addrProxy.ToStringIP()));\n+            else\n+                return QVariant(QString::fromStdString(\"127.0.0.1\"));\n+        }\n+        case ProxyPort: {\n+            CService addrProxy;\n+            if (GetProxy(NET_IPV4, addrProxy))\n+                return QVariant(addrProxy.GetPort());\n+            else\n+                return 9050;\n+        }\n         case Fee:\n             return QVariant(nTransactionFee);\n         case DisplayUnit:\n@@ -137,7 +176,6 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n     }\n     return QVariant();\n }\n-\n bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, int role)\n {\n     bool successful = true; /* set to false on parse error */\n@@ -155,27 +193,33 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             break;\n         case MapPortUPnP:\n             {\n-                bool bUseUPnP = value.toBool();\n-                settings.setValue(\"fUseUPnP\", bUseUPnP);\n-                MapPort(bUseUPnP);\n+                fUseUPnP = value.toBool();\n+                settings.setValue(\"fUseUPnP\", fUseUPnP);\n+                MapPort();\n             }\n             break;\n         case MinimizeOnClose:\n             fMinimizeOnClose = value.toBool();\n             settings.setValue(\"fMinimizeOnClose\", fMinimizeOnClose);\n             break;\n-        case ConnectSOCKS4:\n-            fUseProxy = value.toBool();\n-            settings.setValue(\"fUseProxy\", fUseProxy);\n+        case ProxyUse:\n+            settings.setValue(\"fUseProxy\", value.toBool());\n+            ApplyProxySettings();\n+            break;\n+        case ProxySocksVersion:\n+            settings.setValue(\"nSocksVersion\", value.toInt());\n+            ApplyProxySettings();\n             break;\n         case ProxyIP:\n             {\n-                // Use CAddress to parse and check IP\n+                CService addrProxy(\"127.0.0.1\", 9050);\n+                GetProxy(NET_IPV4, addrProxy);\n                 CNetAddr addr(value.toString().toStdString());\n                 if (addr.IsValid())\n                 {\n                     addrProxy.SetIP(addr);\n                     settings.setValue(\"addrProxy\", addrProxy.ToStringIPPort().c_str());\n+                    successful = ApplyProxySettings();\n                 }\n                 else\n                 {\n@@ -185,11 +229,14 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             break;\n         case ProxyPort:\n             {\n+                CService addrProxy(\"127.0.0.1\", 9050);\n+                GetProxy(NET_IPV4, addrProxy);\n                 int nPort = atoi(value.toString().toAscii().data());\n                 if (nPort > 0 && nPort < std::numeric_limits<unsigned short>::max())\n                 {\n                     addrProxy.SetPort(nPort);\n                     settings.setValue(\"addrProxy\", addrProxy.ToStringIPPort().c_str());\n+                    successful = ApplyProxySettings();\n                 }\n                 else\n                 {"
      },
      {
        "sha": "c74a8dfb43b919ee852632df4d36459a2c4f6f83",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -20,7 +20,8 @@ class OptionsModel : public QAbstractListModel\n         MinimizeToTray, // bool\n         MapPortUPnP, // bool\n         MinimizeOnClose, // bool\n-        ConnectSOCKS4, // bool\n+        ProxyUse, // bool\n+        ProxySocksVersion, // int\n         ProxyIP, // QString\n         ProxyPort, // QString\n         Fee, // qint64"
      },
      {
        "sha": "35d48581e3debba3d862f7f5785aaa6aa3ea3bff",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 5,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -94,7 +94,9 @@ OverviewPage::OverviewPage(QWidget *parent) :\n     ui(new Ui::OverviewPage),\n     currentBalance(-1),\n     currentUnconfirmedBalance(-1),\n-    txdelegate(new TxViewDelegate()), filter(0)\n+    currentImmatureBalance(-1),\n+    txdelegate(new TxViewDelegate()),\n+    filter(0)\n {\n     ui->setupUi(this);\n \n@@ -125,13 +127,21 @@ OverviewPage::~OverviewPage()\n     delete ui;\n }\n \n-void OverviewPage::setBalance(qint64 balance, qint64 unconfirmedBalance)\n+void OverviewPage::setBalance(qint64 balance, qint64 unconfirmedBalance, qint64 immatureBalance)\n {\n     int unit = model->getOptionsModel()->getDisplayUnit();\n     currentBalance = balance;\n     currentUnconfirmedBalance = unconfirmedBalance;\n+    currentImmatureBalance = immatureBalance;\n     ui->labelBalance->setText(BitcoinUnits::formatWithUnit(unit, balance));\n     ui->labelUnconfirmed->setText(BitcoinUnits::formatWithUnit(unit, unconfirmedBalance));\n+    ui->labelImmature->setText(BitcoinUnits::formatWithUnit(unit, immatureBalance));\n+\n+    // only show immature (newly mined) balance if it's non-zero, so as not to complicate things\n+    // for the non-mining users\n+    bool showImmature = immatureBalance != 0;\n+    ui->labelImmature->setVisible(showImmature);\n+    ui->labelImmatureText->setVisible(showImmature);\n }\n \n void OverviewPage::setNumTransactions(int count)\n@@ -156,8 +166,8 @@ void OverviewPage::setModel(WalletModel *model)\n         ui->listTransactions->setModelColumn(TransactionTableModel::ToAddress);\n \n         // Keep up to date with wallet\n-        setBalance(model->getBalance(), model->getUnconfirmedBalance());\n-        connect(model, SIGNAL(balanceChanged(qint64, qint64)), this, SLOT(setBalance(qint64, qint64)));\n+        setBalance(model->getBalance(), model->getUnconfirmedBalance(), model->getImmatureBalance());\n+        connect(model, SIGNAL(balanceChanged(qint64, qint64, qint64)), this, SLOT(setBalance(qint64, qint64, qint64)));\n \n         setNumTransactions(model->getNumTransactions());\n         connect(model, SIGNAL(numTransactionsChanged(int)), this, SLOT(setNumTransactions(int)));\n@@ -171,7 +181,7 @@ void OverviewPage::displayUnitChanged()\n     if(!model || !model->getOptionsModel())\n         return;\n     if(currentBalance != -1)\n-        setBalance(currentBalance, currentUnconfirmedBalance);\n+        setBalance(currentBalance, currentUnconfirmedBalance, currentImmatureBalance);\n \n     txdelegate->unit = model->getOptionsModel()->getDisplayUnit();\n     ui->listTransactions->update();"
      },
      {
        "sha": "c7d3a4242c2a6deac03a0caa6a18cab8d7a0a89d",
        "filename": "src/qt/overviewpage.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/overviewpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/overviewpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -27,7 +27,7 @@ class OverviewPage : public QWidget\n     void showOutOfSyncWarning(bool fShow);\n \n public slots:\n-    void setBalance(qint64 balance, qint64 unconfirmedBalance);\n+    void setBalance(qint64 balance, qint64 unconfirmedBalance, qint64 immatureBalance);\n     void setNumTransactions(int count);\n \n signals:\n@@ -38,6 +38,7 @@ public slots:\n     WalletModel *model;\n     qint64 currentBalance;\n     qint64 currentUnconfirmedBalance;\n+    qint64 currentImmatureBalance;\n \n     TxViewDelegate *txdelegate;\n     TransactionFilterProxy *filter;"
      },
      {
        "sha": "7b40db0765d5a2974f461547508a1dc038b90594",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -109,12 +109,9 @@ RPCConsole::RPCConsole(QWidget *parent) :\n {\n     ui->setupUi(this);\n \n-#ifdef WIN32\n+#ifndef Q_WS_MAC\n     ui->openDebugLogfileButton->setIcon(QIcon(\":/icons/export\"));\n-#else\n-    // Show Debug logfile label and Open button only for Windows\n-    ui->labelDebugLogfile->setVisible(false);\n-    ui->openDebugLogfileButton->setVisible(false);\n+    ui->showCLOptionsButton->setIcon(QIcon(\":/icons/options\"));\n #endif\n \n     // Install event filter for up and down arrow\n@@ -163,7 +160,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->clientVersion->setText(model->formatFullVersion());\n         ui->clientName->setText(model->clientName());\n         ui->buildDate->setText(model->formatBuildDate());\n-        ui->startupTime->setText(model->formatClientStartupTime().toString());\n+        ui->startupTime->setText(model->formatClientStartupTime());\n \n         setNumConnections(model->getNumConnections());\n         ui->isTestNet->setChecked(model->isTestNet());\n@@ -326,3 +323,9 @@ void RPCConsole::scrollToEnd()\n     QScrollBar *scrollbar = ui->messagesWidget->verticalScrollBar();\n     scrollbar->setValue(scrollbar->maximum());\n }\n+\n+void RPCConsole::on_showCLOptionsButton_clicked()\n+{\n+    GUIUtil::HelpMessageBox help;\n+    help.exec();\n+}"
      },
      {
        "sha": "3c38b4b8de4a3b952f26609f2f736a3a1c620fe7",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -35,6 +35,8 @@ private slots:\n     void on_tabWidget_currentChanged(int index);\n     /** open the debug.log from the current datadir */\n     void on_openDebugLogfileButton_clicked();\n+    /** display messagebox with program parameters (same as bitcoin-qt --help) */\n+    void on_showCLOptionsButton_clicked();\n \n public slots:\n     void clear();"
      },
      {
        "sha": "76952e44ec08c278f1c3a932262003f12fc41fc5",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 8,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -48,8 +48,8 @@ void SendCoinsDialog::setModel(WalletModel *model)\n     }\n     if(model)\n     {\n-        setBalance(model->getBalance(), model->getUnconfirmedBalance());\n-        connect(model, SIGNAL(balanceChanged(qint64, qint64)), this, SLOT(setBalance(qint64, qint64)));\n+        setBalance(model->getBalance(), model->getUnconfirmedBalance(), model->getImmatureBalance());\n+        connect(model, SIGNAL(balanceChanged(qint64, qint64, qint64)), this, SLOT(setBalance(qint64, qint64, qint64)));\n     }\n }\n \n@@ -266,20 +266,23 @@ void SendCoinsDialog::pasteEntry(const SendCoinsRecipient &rv)\n     entry->setValue(rv);\n }\n \n-\n-void SendCoinsDialog::handleURI(const QString &uri)\n+bool SendCoinsDialog::handleURI(const QString &uri)\n {\n     SendCoinsRecipient rv;\n-    if(!GUIUtil::parseBitcoinURI(uri, &rv))\n+    // URI has to be valid\n+    if (GUIUtil::parseBitcoinURI(uri, &rv))\n     {\n-        return;\n+        pasteEntry(rv);\n+        return true;\n     }\n-    pasteEntry(rv);\n+\n+    return false;\n }\n \n-void SendCoinsDialog::setBalance(qint64 balance, qint64 unconfirmedBalance)\n+void SendCoinsDialog::setBalance(qint64 balance, qint64 unconfirmedBalance, qint64 immatureBalance)\n {\n     Q_UNUSED(unconfirmedBalance);\n+    Q_UNUSED(immatureBalance);\n     if(!model || !model->getOptionsModel())\n         return;\n "
      },
      {
        "sha": "915b7ad465469d044513c988bf32be4ee8e3e357",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -30,15 +30,15 @@ class SendCoinsDialog : public QDialog\n     QWidget *setupTabChain(QWidget *prev);\n \n     void pasteEntry(const SendCoinsRecipient &rv);\n-    void handleURI(const QString &uri);\n+    bool handleURI(const QString &uri);\n \n public slots:\n     void clear();\n     void reject();\n     void accept();\n     SendCoinsEntry *addEntry();\n     void updateRemoveEnabled();\n-    void setBalance(qint64 balance, qint64 unconfirmedBalance);\n+    void setBalance(qint64 balance, qint64 unconfirmedBalance, qint64 immatureBalance);\n \n private:\n     Ui::SendCoinsDialog *ui;"
      },
      {
        "sha": "dc0f28de9227aa69d7c26ce20c94cccbad738c3b",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 12,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -7,6 +7,7 @@\n #include \"wallet.h\"\n #include \"db.h\"\n #include \"ui_interface.h\"\n+#include \"base58.h\"\n \n #include <QString>\n \n@@ -85,14 +86,14 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n                 {\n                     if (wallet->IsMine(txout))\n                     {\n-                        CBitcoinAddress address;\n-                        if (ExtractAddress(txout.scriptPubKey, address) && wallet->HaveKey(address))\n+                        CTxDestination address;\n+                        if (ExtractDestination(txout.scriptPubKey, address) && IsMine(*wallet, address))\n                         {\n                             if (wallet->mapAddressBook.count(address))\n                             {\n                                 strHTML += tr(\"<b>From:</b> \") + tr(\"unknown\") + \"<br>\";\n                                 strHTML += tr(\"<b>To:</b> \");\n-                                strHTML += GUIUtil::HtmlEscape(address.ToString());\n+                                strHTML += GUIUtil::HtmlEscape(CBitcoinAddress(address).ToString());\n                                 if (!wallet->mapAddressBook[address].empty())\n                                     strHTML += tr(\" (yours, label: \") + GUIUtil::HtmlEscape(wallet->mapAddressBook[address]) + \")\";\n                                 else\n@@ -115,8 +116,9 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n             // Online transaction\n             strAddress = wtx.mapValue[\"to\"];\n             strHTML += tr(\"<b>To:</b> \");\n-            if (wallet->mapAddressBook.count(strAddress) && !wallet->mapAddressBook[strAddress].empty())\n-                strHTML += GUIUtil::HtmlEscape(wallet->mapAddressBook[strAddress]) + \" \";\n+            CTxDestination dest = CBitcoinAddress(strAddress).Get();\n+            if (wallet->mapAddressBook.count(dest) && !wallet->mapAddressBook[dest].empty())\n+                strHTML += GUIUtil::HtmlEscape(wallet->mapAddressBook[dest]) + \" \";\n             strHTML += GUIUtil::HtmlEscape(strAddress) + \"<br>\";\n         }\n \n@@ -170,13 +172,13 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n                     if (wtx.mapValue[\"to\"].empty())\n                     {\n                         // Offline transaction\n-                        CBitcoinAddress address;\n-                        if (ExtractAddress(txout.scriptPubKey, address))\n+                        CTxDestination address;\n+                        if (ExtractDestination(txout.scriptPubKey, address))\n                         {\n                             strHTML += tr(\"<b>To:</b> \");\n                             if (wallet->mapAddressBook.count(address) && !wallet->mapAddressBook[address].empty())\n                                 strHTML += GUIUtil::HtmlEscape(wallet->mapAddressBook[address]) + \" \";\n-                            strHTML += GUIUtil::HtmlEscape(address.ToString());\n+                            strHTML += GUIUtil::HtmlEscape(CBitcoinAddress(address).ToString());\n                             strHTML += \"<br>\";\n                         }\n                     }\n@@ -224,7 +226,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n         strHTML += QString(\"<b>\") + tr(\"Transaction ID:\") + \"</b> \" + wtx.GetHash().ToString().c_str() + \"<br>\";\n \n         if (wtx.IsCoinBase())\n-            strHTML += QString(\"<br>\") + tr(\"Generated coins must wait 120 blocks before they can be spent.  When you generated this block, it was broadcast to the network to be added to the block chain.  If it fails to get into the chain, it will change to \\\"not accepted\\\" and not be spendable.  This may occasionally happen if another node generates a block within a few seconds of yours.\") + \"<br>\";\n+            strHTML += QString(\"<br>\") + tr(\"Generated coins must mature 120 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, it's state will change to \\\"not accepted\\\" and it won't be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.\") + \"<br>\";\n \n         //\n         // Debug view\n@@ -260,12 +262,12 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n                         {\n                             strHTML += \"<li>\";\n                             const CTxOut &vout = prev.vout[prevout.n];\n-                            CBitcoinAddress address;\n-                            if (ExtractAddress(vout.scriptPubKey, address))\n+                            CTxDestination address;\n+                            if (ExtractDestination(vout.scriptPubKey, address))\n                             {\n                                 if (wallet->mapAddressBook.count(address) && !wallet->mapAddressBook[address].empty())\n                                     strHTML += GUIUtil::HtmlEscape(wallet->mapAddressBook[address]) + \" \";\n-                                strHTML += QString::fromStdString(address.ToString());\n+                                strHTML += QString::fromStdString(CBitcoinAddress(address).ToString());\n                             }\n                             strHTML = strHTML + \" Amount=\" + BitcoinUnits::formatWithUnit(BitcoinUnits::BTC,vout.nValue);\n                             strHTML = strHTML + \" IsMine=\" + (wallet->IsMine(vout) ? \"true\" : \"false\") + \"</li>\";"
      },
      {
        "sha": "160973638d481063ddda49d0fb66b8487a51e270",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -1,6 +1,7 @@\n #include \"transactionrecord.h\"\n \n #include \"wallet.h\"\n+#include \"base58.h\"\n \n /* Return positive answer if transaction should be shown in list.\n  */\n@@ -50,19 +51,19 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n             if(wallet->IsMine(txout))\n             {\n                 TransactionRecord sub(hash, nTime);\n-                CBitcoinAddress address;\n+                CTxDestination address;\n                 sub.idx = parts.size(); // sequence number\n                 sub.credit = txout.nValue;\n                 if (wtx.IsCoinBase())\n                 {\n                     // Generated\n                     sub.type = TransactionRecord::Generated;\n                 }\n-                else if (ExtractAddress(txout.scriptPubKey, address) && wallet->HaveKey(address))\n+                else if (ExtractDestination(txout.scriptPubKey, address) && IsMine(*wallet, address))\n                 {\n                     // Received by Bitcoin Address\n                     sub.type = TransactionRecord::RecvWithAddress;\n-                    sub.address = address.ToString();\n+                    sub.address = CBitcoinAddress(address).ToString();\n                 }\n                 else\n                 {\n@@ -113,12 +114,12 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n                     continue;\n                 }\n \n-                CBitcoinAddress address;\n-                if (ExtractAddress(txout.scriptPubKey, address))\n+                CTxDestination address;\n+                if (ExtractDestination(txout.scriptPubKey, address))\n                 {\n                     // Sent to Bitcoin Address\n                     sub.type = TransactionRecord::SendToAddress;\n-                    sub.address = address.ToString();\n+                    sub.address = CBitcoinAddress(address).ToString();\n                 }\n                 else\n                 {"
      },
      {
        "sha": "a86b1f7c5639e0f19ab865d8f71db7825f8bf196",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -298,8 +298,7 @@ QString TransactionTableModel::formatTxStatus(const TransactionRecord *wtx) cons\n         switch(wtx->status.maturity)\n         {\n         case TransactionStatus::Immature:\n-            status += \"\\n\" + tr(\"Mined balance will be available in %n more blocks\", \"\",\n-                           wtx->status.matures_in);\n+            status += \"\\n\" + tr(\"Mined balance will be available when it matures in %n more block(s)\", \"\", wtx->status.matures_in);\n             break;\n         case TransactionStatus::Mature:\n             break;"
      },
      {
        "sha": "92f58328a47569bb5cb2e79dacc98ba1035f9573",
        "filename": "src/qt/verifymessagedialog.cpp",
        "status": "modified",
        "additions": 58,
        "deletions": 43,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/verifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/verifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/verifymessagedialog.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -4,99 +4,114 @@\n #include <string>\n #include <vector>\n \n-#include <QDialogButtonBox>\n-#include <QAbstractButton>\n-#include <QClipboard>\n-#include <QMessageBox>\n+#include <QDialog>\n+#include <QLabel>\n+#include <QLineEdit>\n+#include <QPlainTextEdit>\n+#include <QPushButton>\n \n #include \"main.h\"\n #include \"wallet.h\"\n #include \"walletmodel.h\"\n-#include \"addresstablemodel.h\"\n #include \"guiutil.h\"\n+#include \"base58.h\"\n \n-VerifyMessageDialog::VerifyMessageDialog(AddressTableModel *addressModel, QWidget *parent) :\n+VerifyMessageDialog::VerifyMessageDialog(QWidget *parent) :\n     QDialog(parent),\n-    ui(new Ui::VerifyMessageDialog),\n-    model(addressModel)\n+    ui(new Ui::VerifyMessageDialog)\n {\n     ui->setupUi(this);\n \n #if (QT_VERSION >= 0x040700)\n     /* Do not move this to the XML file, Qt before 4.7 will choke on it */\n+    ui->lnAddress->setPlaceholderText(tr(\"Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)\"));\n     ui->lnSig->setPlaceholderText(tr(\"Enter Bitcoin signature\"));\n-    ui->lnAddress->setPlaceholderText(tr(\"Click \\\"Verify Message\\\" to obtain address\"));\n #endif\n \n     GUIUtil::setupAddressWidget(ui->lnAddress, this);\n     ui->lnAddress->installEventFilter(this);\n \n-    ui->edMessage->setFocus();\n+    ui->lnSig->setFont(GUIUtil::bitcoinAddressFont());\n+\n+    ui->lnAddress->setFocus();\n }\n \n VerifyMessageDialog::~VerifyMessageDialog()\n {\n     delete ui;\n }\n \n-bool VerifyMessageDialog::checkAddress()\n+void VerifyMessageDialog::on_verifyMessage_clicked()\n {\n-    CDataStream ss(SER_GETHASH, 0);\n-    ss << strMessageMagic;\n-    ss << ui->edMessage->document()->toPlainText().toStdString();\n-    uint256 hash = Hash(ss.begin(), ss.end());\n+    CBitcoinAddress addr(ui->lnAddress->text().toStdString());\n+    if (!addr.IsValid())\n+    {\n+        ui->lnAddress->setValid(false);\n+        ui->lblStatus->setStyleSheet(\"QLabel { color: red; }\");\n+        ui->lblStatus->setText(tr(\"\\\"%1\\\" is not a valid address.\").arg(ui->lnAddress->text()) + QString(\" \") + tr(\"Please check the address and try again.\"));\n+        return;\n+    }\n+    CKeyID keyID;\n+    if (!addr.GetKeyID(keyID))\n+    {\n+        ui->lnAddress->setValid(false);\n+        ui->lblStatus->setStyleSheet(\"QLabel { color: red; }\");\n+        ui->lblStatus->setText(tr(\"\\\"%1\\\" does not refer to a key.\").arg(ui->lnAddress->text()) + QString(\" \") + tr(\"Please check the address and try again.\"));\n+        return;\n+    }\n \n-    bool invalid = true;\n-    std::vector<unsigned char> vchSig = DecodeBase64(ui->lnSig->text().toStdString().c_str(), &invalid);\n+    bool fInvalid = false;\n+    std::vector<unsigned char> vchSig = DecodeBase64(ui->lnSig->text().toStdString().c_str(), &fInvalid);\n \n-    if(invalid)\n+    if (fInvalid)\n     {\n-        QMessageBox::warning(this, tr(\"Invalid Signature\"), tr(\"The signature could not be decoded. Please check the signature and try again.\"));\n-        return false;\n+        ui->lnSig->setValid(false);\n+        ui->lblStatus->setStyleSheet(\"QLabel { color: red; }\");\n+        ui->lblStatus->setText(tr(\"The signature could not be decoded.\") + QString(\" \") + tr(\"Please check the signature and try again.\"));\n+        return;\n     }\n \n+    CDataStream ss(SER_GETHASH, 0);\n+    ss << strMessageMagic;\n+    ss << ui->edMessage->document()->toPlainText().toStdString();\n+\n     CKey key;\n-    if(!key.SetCompactSignature(hash, vchSig))\n+    if (!key.SetCompactSignature(Hash(ss.begin(), ss.end()), vchSig))\n     {\n-        QMessageBox::warning(this, tr(\"Invalid Signature\"), tr(\"The signature did not match the message digest. Please check the signature and try again.\"));\n-        return false;\n+        ui->lnSig->setValid(false);\n+        ui->lblStatus->setStyleSheet(\"QLabel { color: red; }\");\n+        ui->lblStatus->setText(tr(\"The signature did not match the message digest.\")+ QString(\" \") + tr(\"Please check the signature and try again.\"));\n+        return;\n     }\n \n-    CBitcoinAddress address(key.GetPubKey());\n-    QString qStringAddress = QString::fromStdString(address.ToString());\n-    ui->lnAddress->setText(qStringAddress);\n-    ui->copyToClipboard->setEnabled(true);\n-\n-    QString label = model->labelForAddress(qStringAddress);\n-    ui->lblStatus->setText(label.isEmpty() ? tr(\"Address not found in address book.\") : tr(\"Address found in address book: %1\").arg(label));\n-    return true;\n-}\n-\n-void VerifyMessageDialog::on_verifyMessage_clicked()\n-{\n-    checkAddress();\n-}\n+    if (!(CBitcoinAddress(key.GetPubKey().GetID()) == addr))\n+    {\n+        ui->lblStatus->setStyleSheet(\"QLabel { color: red; }\");\n+        ui->lblStatus->setText(QString(\"<nobr>\") + tr(\"Message verification failed.\") + QString(\"</nobr>\"));\n+        return;\n+    }\n \n-void VerifyMessageDialog::on_copyToClipboard_clicked()\n-{\n-    QApplication::clipboard()->setText(ui->lnAddress->text());\n+    ui->lblStatus->setStyleSheet(\"QLabel { color: green; }\");\n+    ui->lblStatus->setText(QString(\"<nobr>\") + tr(\"Message verified.\") + QString(\"</nobr>\"));\n }\n \n void VerifyMessageDialog::on_clearButton_clicked()\n {\n-    ui->edMessage->clear();\n-    ui->lnSig->clear();\n     ui->lnAddress->clear();\n+    ui->lnSig->clear();\n+    ui->edMessage->clear();\n     ui->lblStatus->clear();\n \n     ui->edMessage->setFocus();\n }\n \n bool VerifyMessageDialog::eventFilter(QObject *object, QEvent *event)\n {\n-    if(object == ui->lnAddress && (event->type() == QEvent::MouseButtonPress ||\n+    if (object == ui->lnAddress && (event->type() == QEvent::MouseButtonPress ||\n                                    event->type() == QEvent::FocusIn))\n     {\n+        // set lnAddress to valid, as QEvent::FocusIn would not reach QValidatedLineEdit::focusInEvent\n+        ui->lnAddress->setValid(true);\n         ui->lnAddress->selectAll();\n         return true;\n     }"
      },
      {
        "sha": "0bed442d4ce82df94628f895331f83a1acff0574",
        "filename": "src/qt/verifymessagedialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/verifymessagedialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/verifymessagedialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/verifymessagedialog.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -16,21 +16,17 @@ class VerifyMessageDialog : public QDialog\n     Q_OBJECT\n \n public:\n-    explicit VerifyMessageDialog(AddressTableModel *addressModel, QWidget *parent = 0);\n+    explicit VerifyMessageDialog(QWidget *parent);\n     ~VerifyMessageDialog();\n \n protected:\n     bool eventFilter(QObject *object, QEvent *event);\n \n private:\n-    bool checkAddress();\n-\n     Ui::VerifyMessageDialog *ui;\n-    AddressTableModel *model;\n \n private slots:\n     void on_verifyMessage_clicked();\n-    void on_copyToClipboard_clicked();\n     void on_clearButton_clicked();\n };\n "
      },
      {
        "sha": "9245f774a496fdc0e1af58c18274bee101daacc4",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 9,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -7,13 +7,15 @@\n #include \"ui_interface.h\"\n #include \"wallet.h\"\n #include \"walletdb.h\" // for BackupWallet\n+#include \"base58.h\"\n \n #include <QSet>\n \n WalletModel::WalletModel(CWallet *wallet, OptionsModel *optionsModel, QObject *parent) :\n     QObject(parent), wallet(wallet), optionsModel(optionsModel), addressTableModel(0),\n     transactionTableModel(0),\n-    cachedBalance(0), cachedUnconfirmedBalance(0), cachedNumTransactions(0),\n+    cachedBalance(0), cachedUnconfirmedBalance(0), cachedImmatureBalance(0),\n+    cachedNumTransactions(0),\n     cachedEncryptionStatus(Unencrypted)\n {\n     addressTableModel = new AddressTableModel(wallet, this);\n@@ -37,6 +39,11 @@ qint64 WalletModel::getUnconfirmedBalance() const\n     return wallet->GetUnconfirmedBalance();\n }\n \n+qint64 WalletModel::getImmatureBalance() const\n+{\n+    return wallet->GetImmatureBalance();\n+}\n+\n int WalletModel::getNumTransactions() const\n {\n     int numTransactions = 0;\n@@ -63,15 +70,18 @@ void WalletModel::updateTransaction(const QString &hash, int status)\n     // Balance and number of transactions might have changed\n     qint64 newBalance = getBalance();\n     qint64 newUnconfirmedBalance = getUnconfirmedBalance();\n+    qint64 newImmatureBalance = getImmatureBalance();\n     int newNumTransactions = getNumTransactions();\n \n-    if(cachedBalance != newBalance || cachedUnconfirmedBalance != newUnconfirmedBalance)\n-        emit balanceChanged(newBalance, newUnconfirmedBalance);\n+    if(cachedBalance != newBalance || cachedUnconfirmedBalance != newUnconfirmedBalance || cachedImmatureBalance != newImmatureBalance)\n+        emit balanceChanged(newBalance, newUnconfirmedBalance, newImmatureBalance);\n+\n     if(cachedNumTransactions != newNumTransactions)\n         emit numTransactionsChanged(newNumTransactions);\n \n     cachedBalance = newBalance;\n     cachedUnconfirmedBalance = newUnconfirmedBalance;\n+    cachedImmatureBalance = newImmatureBalance;\n     cachedNumTransactions = newNumTransactions;\n }\n \n@@ -137,7 +147,7 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(const QList<SendCoinsRecipie\n         foreach(const SendCoinsRecipient &rcp, recipients)\n         {\n             CScript scriptPubKey;\n-            scriptPubKey.SetBitcoinAddress(rcp.address.toStdString());\n+            scriptPubKey.SetDestination(CBitcoinAddress(rcp.address.toStdString()).Get());\n             vecSend.push_back(make_pair(scriptPubKey, rcp.amount));\n         }\n \n@@ -169,16 +179,17 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(const QList<SendCoinsRecipie\n     foreach(const SendCoinsRecipient &rcp, recipients)\n     {\n         std::string strAddress = rcp.address.toStdString();\n+        CTxDestination dest = CBitcoinAddress(strAddress).Get();\n         std::string strLabel = rcp.label.toStdString();\n         {\n             LOCK(wallet->cs_wallet);\n \n-            std::map<CBitcoinAddress, std::string>::iterator mi = wallet->mapAddressBook.find(strAddress);\n+            std::map<CTxDestination, std::string>::iterator mi = wallet->mapAddressBook.find(dest);\n \n             // Check if we have a new address or an updated label\n             if (mi == wallet->mapAddressBook.end() || mi->second != strLabel)\n             {\n-                wallet->SetAddressBookName(strAddress, strLabel);\n+                wallet->SetAddressBookName(dest, strLabel);\n             }\n         }\n     }\n@@ -268,11 +279,11 @@ static void NotifyKeyStoreStatusChanged(WalletModel *walletmodel, CCryptoKeyStor\n     QMetaObject::invokeMethod(walletmodel, \"updateStatus\", Qt::QueuedConnection);\n }\n \n-static void NotifyAddressBookChanged(WalletModel *walletmodel, CWallet *wallet, const std::string &address, const std::string &label, bool isMine, ChangeType status)\n+static void NotifyAddressBookChanged(WalletModel *walletmodel, CWallet *wallet, const CTxDestination &address, const std::string &label, bool isMine, ChangeType status)\n {\n-    OutputDebugStringF(\"NotifyAddressBookChanged %s %s isMine=%i status=%i\\n\", address.c_str(), label.c_str(), isMine, status);\n+    OutputDebugStringF(\"NotifyAddressBookChanged %s %s isMine=%i status=%i\\n\", CBitcoinAddress(address).ToString().c_str(), label.c_str(), isMine, status);\n     QMetaObject::invokeMethod(walletmodel, \"updateAddressBook\", Qt::QueuedConnection,\n-                              Q_ARG(QString, QString::fromStdString(address)),\n+                              Q_ARG(QString, QString::fromStdString(CBitcoinAddress(address).ToString())),\n                               Q_ARG(QString, QString::fromStdString(label)),\n                               Q_ARG(bool, isMine),\n                               Q_ARG(int, status));"
      },
      {
        "sha": "c973c5cf536f451595c9d643947ef873288e8e3f",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -52,6 +52,7 @@ class WalletModel : public QObject\n \n     qint64 getBalance() const;\n     qint64 getUnconfirmedBalance() const;\n+    qint64 getImmatureBalance() const;\n     int getNumTransactions() const;\n     EncryptionStatus getEncryptionStatus() const;\n \n@@ -116,14 +117,15 @@ class WalletModel : public QObject\n     // Cache some values to be able to detect changes\n     qint64 cachedBalance;\n     qint64 cachedUnconfirmedBalance;\n+    qint64 cachedImmatureBalance;\n     qint64 cachedNumTransactions;\n     EncryptionStatus cachedEncryptionStatus;\n \n     void subscribeToCoreSignals();\n     void unsubscribeFromCoreSignals();\n signals:\n     // Signal that balance in wallet changed\n-    void balanceChanged(qint64 balance, qint64 unconfirmedBalance);\n+    void balanceChanged(qint64 balance, qint64 unconfirmedBalance, qint64 immatureBalance);\n \n     // Number of transactions in wallet changed\n     void numTransactionsChanged(int count);"
      },
      {
        "sha": "30e504a095409ea77b85c3cf746f2d59e94ce5d0",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -5,6 +5,7 @@\n #include \"init.h\" // for pwalletMain\n #include \"bitcoinrpc.h\"\n #include \"ui_interface.h\"\n+#include \"base58.h\"\n \n #include <boost/lexical_cast.hpp>\n \n@@ -51,8 +52,7 @@ Value importprivkey(const Array& params, bool fHelp)\n     bool fCompressed;\n     CSecret secret = vchSecret.GetSecret(fCompressed);\n     key.SetSecret(secret, fCompressed);\n-    CBitcoinAddress vchAddress = CBitcoinAddress(key.GetPubKey());\n-\n+    CKeyID vchAddress = key.GetPubKey().GetID();\n     {\n         LOCK2(cs_main, pwalletMain->cs_wallet);\n \n@@ -80,9 +80,12 @@ Value dumpprivkey(const Array& params, bool fHelp)\n     CBitcoinAddress address;\n     if (!address.SetString(strAddress))\n         throw JSONRPCError(-5, \"Invalid Bitcoin address\");\n+    CKeyID keyID;\n+    if (!address.GetKeyID(keyID))\n+        throw JSONRPCError(-3, \"Address does not refer to a key\");\n     CSecret vchSecret;\n     bool fCompressed;\n-    if (!pwalletMain->GetSecret(address, vchSecret, fCompressed))\n+    if (!pwalletMain->GetSecret(keyID, vchSecret, fCompressed))\n         throw JSONRPCError(-4,\"Private key for address \" + strAddress + \" is not known\");\n     return CBitcoinSecret(vchSecret, fCompressed).ToString();\n }"
      },
      {
        "sha": "2e1e1ad7de92e1f35fb9ac3fc3bf41bb3acbe541",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 71,
        "deletions": 48,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -1312,7 +1312,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n }\n \n \n-bool Sign1(const CBitcoinAddress& address, const CKeyStore& keystore, uint256 hash, int nHashType, CScript& scriptSigRet)\n+bool Sign1(const CKeyID& address, const CKeyStore& keystore, uint256 hash, int nHashType, CScript& scriptSigRet)\n {\n     CKey key;\n     if (!keystore.GetKey(address, key))\n@@ -1334,9 +1334,8 @@ bool SignN(const vector<valtype>& multisigdata, const CKeyStore& keystore, uint2\n     for (vector<valtype>::const_iterator it = multisigdata.begin()+1; it != multisigdata.begin()+multisigdata.size()-1; it++)\n     {\n         const valtype& pubkey = *it;\n-        CBitcoinAddress address;\n-        address.SetPubKey(pubkey);\n-        if (Sign1(address, keystore, hash, nHashType, scriptSigRet))\n+        CKeyID keyID = CPubKey(pubkey).GetID();\n+        if (Sign1(keyID, keystore, hash, nHashType, scriptSigRet))\n         {\n             ++nSigned;\n             if (nSigned == nRequired) break;\n@@ -1360,22 +1359,22 @@ bool Solver(const CKeyStore& keystore, const CScript& scriptPubKey, uint256 hash\n     if (!Solver(scriptPubKey, whichTypeRet, vSolutions))\n         return false;\n \n-    CBitcoinAddress address;\n+    CKeyID keyID;\n     switch (whichTypeRet)\n     {\n     case TX_NONSTANDARD:\n         return false;\n     case TX_PUBKEY:\n-        address.SetPubKey(vSolutions[0]);\n-        return Sign1(address, keystore, hash, nHashType, scriptSigRet);\n+        keyID = CPubKey(vSolutions[0]).GetID();\n+        return Sign1(keyID, keystore, hash, nHashType, scriptSigRet);\n     case TX_PUBKEYHASH:\n-        address.SetHash160(uint160(vSolutions[0]));\n-        if (!Sign1(address, keystore, hash, nHashType, scriptSigRet))\n+        keyID = CKeyID(uint160(vSolutions[0]));\n+        if (!Sign1(keyID, keystore, hash, nHashType, scriptSigRet))\n             return false;\n         else\n         {\n-            valtype vch;\n-            keystore.GetPubKey(address, vch);\n+            CPubKey vch;\n+            keystore.GetPubKey(keyID, vch);\n             scriptSigRet << vch;\n         }\n         return true;\n@@ -1436,36 +1435,52 @@ unsigned int HaveKeys(const vector<valtype>& pubkeys, const CKeyStore& keystore)\n     unsigned int nResult = 0;\n     BOOST_FOREACH(const valtype& pubkey, pubkeys)\n     {\n-        CBitcoinAddress address;\n-        address.SetPubKey(pubkey);\n-        if (keystore.HaveKey(address))\n+        CKeyID keyID = CPubKey(pubkey).GetID();\n+        if (keystore.HaveKey(keyID))\n             ++nResult;\n     }\n     return nResult;\n }\n \n+\n+class CKeyStoreIsMineVisitor : public boost::static_visitor<bool>\n+{\n+private:\n+    const CKeyStore *keystore;\n+public:\n+    CKeyStoreIsMineVisitor(const CKeyStore *keystoreIn) : keystore(keystoreIn) { }\n+    bool operator()(const CNoDestination &dest) const { return false; }\n+    bool operator()(const CKeyID &keyID) const { return keystore->HaveKey(keyID); }\n+    bool operator()(const CScriptID &scriptID) const { return keystore->HaveCScript(scriptID); }\n+};\n+\n+bool IsMine(const CKeyStore &keystore, const CTxDestination &dest)\n+{\n+    return boost::apply_visitor(CKeyStoreIsMineVisitor(&keystore), dest);\n+}\n+\n bool IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n {\n     vector<valtype> vSolutions;\n     txnouttype whichType;\n     if (!Solver(scriptPubKey, whichType, vSolutions))\n         return false;\n \n-    CBitcoinAddress address;\n+    CKeyID keyID;\n     switch (whichType)\n     {\n     case TX_NONSTANDARD:\n         return false;\n     case TX_PUBKEY:\n-        address.SetPubKey(vSolutions[0]);\n-        return keystore.HaveKey(address);\n+        keyID = CPubKey(vSolutions[0]).GetID();\n+        return keystore.HaveKey(keyID);\n     case TX_PUBKEYHASH:\n-        address.SetHash160(uint160(vSolutions[0]));\n-        return keystore.HaveKey(address);\n+        keyID = CKeyID(uint160(vSolutions[0]));\n+        return keystore.HaveKey(keyID);\n     case TX_SCRIPTHASH:\n     {\n         CScript subscript;\n-        if (!keystore.GetCScript(uint160(vSolutions[0]), subscript))\n+        if (!keystore.GetCScript(CScriptID(uint160(vSolutions[0])), subscript))\n             return false;\n         return IsMine(keystore, subscript);\n     }\n@@ -1483,7 +1498,7 @@ bool IsMine(const CKeyStore &keystore, const CScript& scriptPubKey)\n     return false;\n }\n \n-bool ExtractAddress(const CScript& scriptPubKey, CBitcoinAddress& addressRet)\n+bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n {\n     vector<valtype> vSolutions;\n     txnouttype whichType;\n@@ -1492,24 +1507,24 @@ bool ExtractAddress(const CScript& scriptPubKey, CBitcoinAddress& addressRet)\n \n     if (whichType == TX_PUBKEY)\n     {\n-        addressRet.SetPubKey(vSolutions[0]);\n+        addressRet = CPubKey(vSolutions[0]).GetID();\n         return true;\n     }\n     else if (whichType == TX_PUBKEYHASH)\n     {\n-        addressRet.SetHash160(uint160(vSolutions[0]));\n+        addressRet = CKeyID(uint160(vSolutions[0]));\n         return true;\n     }\n     else if (whichType == TX_SCRIPTHASH)\n     {\n-        addressRet.SetScriptHash160(uint160(vSolutions[0]));\n+        addressRet = CScriptID(uint160(vSolutions[0]));\n         return true;\n     }\n     // Multisig txns have more than one address...\n     return false;\n }\n \n-bool ExtractAddresses(const CScript& scriptPubKey, txnouttype& typeRet, vector<CBitcoinAddress>& addressRet, int& nRequiredRet)\n+bool ExtractDestinations(const CScript& scriptPubKey, txnouttype& typeRet, vector<CTxDestination>& addressRet, int& nRequiredRet)\n {\n     addressRet.clear();\n     typeRet = TX_NONSTANDARD;\n@@ -1522,21 +1537,16 @@ bool ExtractAddresses(const CScript& scriptPubKey, txnouttype& typeRet, vector<C\n         nRequiredRet = vSolutions.front()[0];\n         for (unsigned int i = 1; i < vSolutions.size()-1; i++)\n         {\n-            CBitcoinAddress address;\n-            address.SetPubKey(vSolutions[i]);\n+            CTxDestination address = CPubKey(vSolutions[i]).GetID();\n             addressRet.push_back(address);\n         }\n     }\n     else\n     {\n         nRequiredRet = 1;\n-        CBitcoinAddress address;\n-        if (typeRet == TX_PUBKEYHASH)\n-            address.SetHash160(uint160(vSolutions.front()));\n-        else if (typeRet == TX_SCRIPTHASH)\n-            address.SetScriptHash160(uint160(vSolutions.front()));\n-        else if (typeRet == TX_PUBKEY)\n-            address.SetPubKey(vSolutions.front());\n+        CTxDestination address;\n+        if (!ExtractDestination(scriptPubKey, address))\n+           return false;\n         addressRet.push_back(address);\n     }\n \n@@ -1694,13 +1704,34 @@ bool CScript::IsPayToScriptHash() const\n             this->at(22) == OP_EQUAL);\n }\n \n-void CScript::SetBitcoinAddress(const CBitcoinAddress& address)\n+class CScriptVisitor : public boost::static_visitor<bool>\n {\n-    this->clear();\n-    if (address.IsScript())\n-        *this << OP_HASH160 << address.GetHash160() << OP_EQUAL;\n-    else\n-        *this << OP_DUP << OP_HASH160 << address.GetHash160() << OP_EQUALVERIFY << OP_CHECKSIG;\n+private:\n+    CScript *script;\n+public:\n+    CScriptVisitor(CScript *scriptin) { script = scriptin; }\n+\n+    bool operator()(const CNoDestination &dest) const {\n+        script->clear();\n+        return false;\n+    }\n+\n+    bool operator()(const CKeyID &keyID) const {\n+        script->clear();\n+        *script << OP_DUP << OP_HASH160 << keyID << OP_EQUALVERIFY << OP_CHECKSIG;\n+        return true;\n+    }\n+\n+    bool operator()(const CScriptID &scriptID) const {\n+        script->clear();\n+        *script << OP_HASH160 << scriptID << OP_EQUAL;\n+        return true;\n+    }\n+};\n+\n+void CScript::SetDestination(const CTxDestination& dest)\n+{\n+    boost::apply_visitor(CScriptVisitor(this), dest);\n }\n \n void CScript::SetMultisig(int nRequired, const std::vector<CKey>& keys)\n@@ -1712,11 +1743,3 @@ void CScript::SetMultisig(int nRequired, const std::vector<CKey>& keys)\n         *this << key.GetPubKey();\n     *this << EncodeOP_N(keys.size()) << OP_CHECKMULTISIG;\n }\n-\n-void CScript::SetPayToScriptHash(const CScript& subscript)\n-{\n-    assert(!subscript.empty());\n-    uint160 subscriptHash = Hash160(subscript);\n-    this->clear();\n-    *this << OP_HASH160 << subscriptHash << OP_EQUAL;\n-}"
      },
      {
        "sha": "d490cd1824a93ca4e94c6f727d59139b4b6b5011",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 33,
        "deletions": 11,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -5,15 +5,16 @@\n #ifndef H_BITCOIN_SCRIPT\n #define H_BITCOIN_SCRIPT\n \n-#include \"base58.h\"\n-\n #include <string>\n #include <vector>\n \n #include <boost/foreach.hpp>\n+#include <boost/variant.hpp>\n+\n+#include \"keystore.h\"\n+#include \"bignum.h\"\n \n class CTransaction;\n-class CKeyStore;\n \n /** Signature hash types/flags */\n enum\n@@ -35,6 +36,20 @@ enum txnouttype\n     TX_MULTISIG,\n };\n \n+class CNoDestination {\n+public:\n+    friend bool operator==(const CNoDestination &a, const CNoDestination &b) { return true; }\n+    friend bool operator<(const CNoDestination &a, const CNoDestination &b) { return true; }\n+};\n+\n+/** A txout script template with a specific destination. It is either:\n+ *  * CNoDestination: no destination set\n+ *  * CKeyID: TX_PUBKEYHASH destination\n+ *  * CScriptID: TX_SCRIPTHASH destination\n+ *  A CTxDestination is the internal data type encoded in a CBitcoinAddress\n+ */\n+typedef boost::variant<CNoDestination, CKeyID, CScriptID> CTxDestination;\n+\n const char* GetTxnOutputType(txnouttype t);\n \n /** Script opcodes */\n@@ -320,6 +335,12 @@ class CScript : public std::vector<unsigned char>\n         return *this;\n     }\n \n+    CScript& operator<<(const CPubKey& key)\n+    {\n+        std::vector<unsigned char> vchKey = key.Raw();\n+        return (*this) << vchKey;\n+    }\n+\n     CScript& operator<<(const CBigNum& b)\n     {\n         *this << b.getvch();\n@@ -515,13 +536,8 @@ class CScript : public std::vector<unsigned char>\n     }\n \n \n-    void SetBitcoinAddress(const CBitcoinAddress& address);\n-    void SetBitcoinAddress(const std::vector<unsigned char>& vchPubKey)\n-    {\n-        SetBitcoinAddress(CBitcoinAddress(vchPubKey));\n-    }\n+    void SetDestination(const CTxDestination& address);\n     void SetMultisig(int nRequired, const std::vector<CKey>& keys);\n-    void SetPayToScriptHash(const CScript& subscript);\n \n \n     void PrintHex() const\n@@ -556,6 +572,11 @@ class CScript : public std::vector<unsigned char>\n     {\n         printf(\"%s\\n\", ToString().c_str());\n     }\n+\n+    CScriptID GetID() const\n+    {\n+        return CScriptID(Hash160(*this));\n+    }\n };\n \n \n@@ -567,8 +588,9 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::v\n int ScriptSigArgsExpected(txnouttype t, const std::vector<std::vector<unsigned char> >& vSolutions);\n bool IsStandard(const CScript& scriptPubKey);\n bool IsMine(const CKeyStore& keystore, const CScript& scriptPubKey);\n-bool ExtractAddress(const CScript& scriptPubKey, CBitcoinAddress& addressRet);\n-bool ExtractAddresses(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<CBitcoinAddress>& addressRet, int& nRequiredRet);\n+bool IsMine(const CKeyStore& keystore, const CTxDestination &dest);\n+bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet);\n+bool ExtractDestinations(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<CTxDestination>& addressRet, int& nRequiredRet);\n bool SignSignature(const CKeyStore& keystore, const CTransaction& txFrom, CTransaction& txTo, unsigned int nIn, int nHashType=SIGHASH_ALL);\n bool VerifySignature(const CTransaction& txFrom, const CTransaction& txTo, unsigned int nIn, bool fValidatePayToScriptHash, int nHashType);\n "
      },
      {
        "sha": "dbd9ebdaeebfcba67f4db3b435ea06f4f358b0f9",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -7,6 +7,14 @@\n \n #include <boost/foreach.hpp>\n \n+#ifdef DEBUG_LOCKCONTENTION\n+void PrintLockContention(const char* pszName, const char* pszFile, int nLine)\n+{\n+    printf(\"LOCKCONTENTION: %s\\n\", pszName);\n+    printf(\"Locker: %s:%d\\n\", pszFile, nLine);\n+}\n+#endif /* DEBUG_LOCKCONTENTION */\n+\n #ifdef DEBUG_LOCKORDER\n //\n // Early deadlock detection."
      },
      {
        "sha": "98640e6eab183d337a31a643d0dcd6a4846e4cc8",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -27,6 +27,10 @@ void static inline EnterCritical(const char* pszName, const char* pszFile, int n\n void static inline LeaveCritical() {}\n #endif\n \n+#ifdef DEBUG_LOCKCONTENTION\n+void PrintLockContention(const char* pszName, const char* pszFile, int nLine);\n+#endif\n+\n /** Wrapper around boost::interprocess::scoped_lock */\n template<typename Mutex>\n class CMutexLock\n@@ -43,8 +47,7 @@ class CMutexLock\n #ifdef DEBUG_LOCKCONTENTION\n             if (!lock.try_lock())\n             {\n-                printf(\"LOCKCONTENTION: %s\\n\", pszName);\n-                printf(\"Locker: %s:%d\\n\", pszFile, nLine);\n+                PrintLockContention(pszName, pszFile, nLine);\n #endif\n             lock.lock();\n #ifdef DEBUG_LOCKCONTENTION"
      },
      {
        "sha": "4a185b3cc5c82a00e1d6f83d691e46e9ea1c3565",
        "filename": "src/test/DoS_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/DoS_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/DoS_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/DoS_tests.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -161,7 +161,7 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n         tx.vin[0].scriptSig << OP_1;\n         tx.vout.resize(1);\n         tx.vout[0].nValue = 1*CENT;\n-        tx.vout[0].scriptPubKey.SetBitcoinAddress(key.GetPubKey());\n+        tx.vout[0].scriptPubKey.SetDestination(key.GetPubKey().GetID());\n \n         CDataStream ds(SER_DISK, CLIENT_VERSION);\n         ds << tx;\n@@ -179,7 +179,7 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n         tx.vin[0].prevout.hash = txPrev.GetHash();\n         tx.vout.resize(1);\n         tx.vout[0].nValue = 1*CENT;\n-        tx.vout[0].scriptPubKey.SetBitcoinAddress(key.GetPubKey());\n+        tx.vout[0].scriptPubKey.SetDestination(key.GetPubKey().GetID());\n         SignSignature(keystore, txPrev, tx, 0);\n \n         CDataStream ds(SER_DISK, CLIENT_VERSION);\n@@ -195,7 +195,7 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n         CTransaction tx;\n         tx.vout.resize(1);\n         tx.vout[0].nValue = 1*CENT;\n-        tx.vout[0].scriptPubKey.SetBitcoinAddress(key.GetPubKey());\n+        tx.vout[0].scriptPubKey.SetDestination(key.GetPubKey().GetID());\n         tx.vin.resize(500);\n         for (unsigned int j = 0; j < tx.vin.size(); j++)\n         {\n@@ -244,7 +244,7 @@ BOOST_AUTO_TEST_CASE(DoS_checkSig)\n         tx.vin[0].scriptSig << OP_1;\n         tx.vout.resize(1);\n         tx.vout[0].nValue = 1*CENT;\n-        tx.vout[0].scriptPubKey.SetBitcoinAddress(key.GetPubKey());\n+        tx.vout[0].scriptPubKey.SetDestination(key.GetPubKey().GetID());\n \n         CDataStream ds(SER_DISK, CLIENT_VERSION);\n         ds << tx;\n@@ -255,7 +255,7 @@ BOOST_AUTO_TEST_CASE(DoS_checkSig)\n     CTransaction tx;\n     tx.vout.resize(1);\n     tx.vout[0].nValue = 1*CENT;\n-    tx.vout[0].scriptPubKey.SetBitcoinAddress(key.GetPubKey());\n+    tx.vout[0].scriptPubKey.SetDestination(key.GetPubKey().GetID());\n     tx.vin.resize(NPREV);\n     for (unsigned int j = 0; j < tx.vin.size(); j++)\n     {"
      },
      {
        "sha": "3f265f1fe35d7f59a4ab894bf939a5e4d1149aef",
        "filename": "src/test/base58_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/base58_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/base58_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base58_tests.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -1,8 +1,6 @@\n #include <boost/test/unit_test.hpp>\n \n-#include \"main.h\"\n-#include \"wallet.h\"\n-#include \"util.h\"\n+#include \"base58.h\"\n \n BOOST_AUTO_TEST_SUITE(base58_tests)\n "
      },
      {
        "sha": "0c2d7110da20a94e59b8ff3212c93d7cfbf2fc5e",
        "filename": "src/test/data/script_invalid.json",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/data/script_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/data/script_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_invalid.json?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -141,6 +141,21 @@\n [\"NOP\", \"HASH160\"],\n [\"NOP\", \"HASH256\"],\n \n+[\"NOP\",\n+\"'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb'\",\n+\">520 byte push\"],\n+[\"1\",\n+\"0x61616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161\",\n+\">201 opcodes executed. 0x61 is NOP\"],\n+[\"1 2 3 4 5 0x6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f\",\n+\"1 2 3 4 5 6 0x6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f\",\n+\">1,000 stack size (0x6f is 3DUP)\"],\n+[\"1 2 3 4 5 0x6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f\",\n+\"1 TOALTSTACK 2 TOALTSTACK 3 4 5 6 0x6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f\",\n+\">1,000 stack+altstack size\"],\n+[\"NOP\",\n+\"0 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 0x6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f 2DUP 0x616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161\",\n+\"10,001-byte scriptPubKey\"],\n \n [\"NOP1\",\"NOP10\"]\n ]"
      },
      {
        "sha": "6ef4d46a8453edb257d1fc4d7f408ccd13c87712",
        "filename": "src/test/data/script_valid.json",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/data/script_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/data/script_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_valid.json?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -184,5 +184,21 @@\n [\"0\", \"IF 0xfd ELSE 1 ENDIF\"],\n [\"0\", \"IF 0xff ELSE 1 ENDIF\"],\n \n+[\"NOP\",\n+\"'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb'\",\n+\"520 byte push\"],\n+[\"1\",\n+\"0x616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161\",\n+\"201 opcodes executed. 0x61 is NOP\"],\n+[\"1 2 3 4 5 0x6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f\",\n+\"1 2 3 4 5 0x6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f\",\n+\"1,000 stack size (0x6f is 3DUP)\"],\n+[\"1 TOALTSTACK 2 TOALTSTACK 3 4 5 0x6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f\",\n+\"1 2 3 4 5 6 7 0x6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f\",\n+\"1,000 stack size (altstack cleared between scriptSig/scriptPubKey)\"],\n+[\"'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 0x6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f\",\n+\"'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' 0x6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f6f 2DUP 0x616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161\",\n+\"Max-size (10,000-byte), max-push(520 bytes), max-opcodes(201), max stack size(1,000 items). 0x6f is 3DUP, 0x61 is NOP\"],\n+\n [\"NOP\",\"1\"]\n ]"
      },
      {
        "sha": "0a6df88feff5cee39af9841fdfdb8c2d3f357784",
        "filename": "src/test/key_tests.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 10,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/key_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/key_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/key_tests.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -10,11 +10,18 @@\n \n using namespace std;\n \n-static const string strSecret1 (\"5HxWvvfubhXpYYpS3tJkw6fq9jE9j18THftkZjHHfmFiWtmAbrj\");\n-static const string strSecret2 (\"5KC4ejrDjv152FGwP386VD1i2NYc5KkfSMyv1nGy1VGDxGHqVY3\");\n-static const string strSecret1C(\"Kwr371tjA9u2rFSMZjTNun2PXXP3WPZu2afRHTcta6KxEUdm1vEw\");\n-static const string strSecret2C(\"L3Hq7a8FEQwJkW1M2GNKDW28546Vp5miewcCzSqUD9kCAXrJdS3g\");\n-static const string strAddress1(\"1HV9Lc3sNHZxwj4Zk6fB38tEmBryq2cBiF\");\n+static const string strSecret1     (\"5HxWvvfubhXpYYpS3tJkw6fq9jE9j18THftkZjHHfmFiWtmAbrj\");\n+static const string strSecret2     (\"5KC4ejrDjv152FGwP386VD1i2NYc5KkfSMyv1nGy1VGDxGHqVY3\");\n+static const string strSecret1C    (\"Kwr371tjA9u2rFSMZjTNun2PXXP3WPZu2afRHTcta6KxEUdm1vEw\");\n+static const string strSecret2C    (\"L3Hq7a8FEQwJkW1M2GNKDW28546Vp5miewcCzSqUD9kCAXrJdS3g\");\n+static const CBitcoinAddress addr1 (\"1QFqqMUD55ZV3PJEJZtaKCsQmjLT6JkjvJ\");\n+static const CBitcoinAddress addr2 (\"1F5y5E5FMc5YzdJtB9hLaUe43GDxEKXENJ\");\n+static const CBitcoinAddress addr1C(\"1NoJrossxPBKfCHuJXT4HadJrXRE9Fxiqs\");\n+static const CBitcoinAddress addr2C(\"1CRj2HyM1CXWzHAXLQtiGLyggNT9WQqsDs\");\n+\n+\n+static const string strAddressBad(\"1HV9Lc3sNHZxwj4Zk6fB38tEmBryq2cBiF\");\n+\n \n #ifdef KEY_TESTS_DUMPINFO\n void dumpKeyInfo(uint256 privkey)\n@@ -53,7 +60,7 @@ BOOST_AUTO_TEST_CASE(key_test1)\n     BOOST_CHECK( bsecret2.SetString (strSecret2));\n     BOOST_CHECK( bsecret1C.SetString(strSecret1C));\n     BOOST_CHECK( bsecret2C.SetString(strSecret2C));\n-    BOOST_CHECK(!baddress1.SetString(strAddress1));\n+    BOOST_CHECK(!baddress1.SetString(strAddressBad));\n \n     bool fCompressed;\n     CSecret secret1  = bsecret1.GetSecret (fCompressed);\n@@ -74,10 +81,10 @@ BOOST_AUTO_TEST_CASE(key_test1)\n     key1C.SetSecret(secret1, true);\n     key2C.SetSecret(secret2, true);\n \n-    BOOST_CHECK(CBitcoinAddress(key1.GetPubKey ()).ToString() == \"1QFqqMUD55ZV3PJEJZtaKCsQmjLT6JkjvJ\");\n-    BOOST_CHECK(CBitcoinAddress(key2.GetPubKey ()).ToString() == \"1F5y5E5FMc5YzdJtB9hLaUe43GDxEKXENJ\");\n-    BOOST_CHECK(CBitcoinAddress(key1C.GetPubKey()).ToString() == \"1NoJrossxPBKfCHuJXT4HadJrXRE9Fxiqs\");\n-    BOOST_CHECK(CBitcoinAddress(key2C.GetPubKey()).ToString() == \"1CRj2HyM1CXWzHAXLQtiGLyggNT9WQqsDs\");\n+    BOOST_CHECK(addr1.Get()  == CTxDestination(key1.GetPubKey().GetID()));\n+    BOOST_CHECK(addr2.Get()  == CTxDestination(key2.GetPubKey().GetID()));\n+    BOOST_CHECK(addr1C.Get() == CTxDestination(key1C.GetPubKey().GetID()));\n+    BOOST_CHECK(addr2C.Get() == CTxDestination(key2C.GetPubKey().GetID()));\n \n     for (int n=0; n<16; n++)\n     {"
      },
      {
        "sha": "9cb0efecfd0f1dcbdec4902b8fffe43d72201799",
        "filename": "src/test/multisig_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/multisig_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/multisig_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/multisig_tests.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -175,12 +175,12 @@ BOOST_AUTO_TEST_CASE(multisig_Solver1)\n     //\n     CBasicKeyStore keystore, emptykeystore, partialkeystore;\n     CKey key[3];\n-    CBitcoinAddress keyaddr[3];\n+    CTxDestination keyaddr[3];\n     for (int i = 0; i < 3; i++)\n     {\n         key[i].MakeNewKey(true);\n         keystore.AddKey(key[i]);\n-        keyaddr[i].SetPubKey(key[i].GetPubKey());\n+        keyaddr[i] = key[i].GetPubKey().GetID();\n     }\n     partialkeystore.AddKey(key[0]);\n \n@@ -191,8 +191,8 @@ BOOST_AUTO_TEST_CASE(multisig_Solver1)\n         s << key[0].GetPubKey() << OP_CHECKSIG;\n         BOOST_CHECK(Solver(s, whichType, solutions));\n         BOOST_CHECK(solutions.size() == 1);\n-        CBitcoinAddress addr;\n-        BOOST_CHECK(ExtractAddress(s, addr));\n+        CTxDestination addr;\n+        BOOST_CHECK(ExtractDestination(s, addr));\n         BOOST_CHECK(addr == keyaddr[0]);\n         BOOST_CHECK(IsMine(keystore, s));\n         BOOST_CHECK(!IsMine(emptykeystore, s));\n@@ -201,11 +201,11 @@ BOOST_AUTO_TEST_CASE(multisig_Solver1)\n         vector<valtype> solutions;\n         txnouttype whichType;\n         CScript s;\n-        s << OP_DUP << OP_HASH160 << Hash160(key[0].GetPubKey()) << OP_EQUALVERIFY << OP_CHECKSIG;\n+        s << OP_DUP << OP_HASH160 << key[0].GetPubKey().GetID() << OP_EQUALVERIFY << OP_CHECKSIG;\n         BOOST_CHECK(Solver(s, whichType, solutions));\n         BOOST_CHECK(solutions.size() == 1);\n-        CBitcoinAddress addr;\n-        BOOST_CHECK(ExtractAddress(s, addr));\n+        CTxDestination addr;\n+        BOOST_CHECK(ExtractDestination(s, addr));\n         BOOST_CHECK(addr == keyaddr[0]);\n         BOOST_CHECK(IsMine(keystore, s));\n         BOOST_CHECK(!IsMine(emptykeystore, s));\n@@ -217,8 +217,8 @@ BOOST_AUTO_TEST_CASE(multisig_Solver1)\n         s << OP_2 << key[0].GetPubKey() << key[1].GetPubKey() << OP_2 << OP_CHECKMULTISIG;\n         BOOST_CHECK(Solver(s, whichType, solutions));\n         BOOST_CHECK_EQUAL(solutions.size(), 4);\n-        CBitcoinAddress addr;\n-        BOOST_CHECK(!ExtractAddress(s, addr));\n+        CTxDestination addr;\n+        BOOST_CHECK(!ExtractDestination(s, addr));\n         BOOST_CHECK(IsMine(keystore, s));\n         BOOST_CHECK(!IsMine(emptykeystore, s));\n         BOOST_CHECK(!IsMine(partialkeystore, s));\n@@ -230,9 +230,9 @@ BOOST_AUTO_TEST_CASE(multisig_Solver1)\n         s << OP_1 << key[0].GetPubKey() << key[1].GetPubKey() << OP_2 << OP_CHECKMULTISIG;\n         BOOST_CHECK(Solver(s, whichType, solutions));\n         BOOST_CHECK_EQUAL(solutions.size(), 4);\n-        vector<CBitcoinAddress> addrs;\n+        vector<CTxDestination> addrs;\n         int nRequired;\n-        BOOST_CHECK(ExtractAddresses(s, whichType, addrs, nRequired));\n+        BOOST_CHECK(ExtractDestinations(s, whichType, addrs, nRequired));\n         BOOST_CHECK(addrs[0] == keyaddr[0]);\n         BOOST_CHECK(addrs[1] == keyaddr[1]);\n         BOOST_CHECK(nRequired = 1);"
      },
      {
        "sha": "f7bf5dfbf1ba5efefb1b1e945464df4745ac3bc4",
        "filename": "src/test/script_P2SH_tests.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/script_P2SH_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/script_P2SH_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_P2SH_tests.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -65,14 +65,14 @@ BOOST_AUTO_TEST_CASE(sign)\n     // different keys, straight/P2SH, pubkey/pubkeyhash\n     CScript standardScripts[4];\n     standardScripts[0] << key[0].GetPubKey() << OP_CHECKSIG;\n-    standardScripts[1].SetBitcoinAddress(key[1].GetPubKey());\n+    standardScripts[1].SetDestination(key[1].GetPubKey().GetID());\n     standardScripts[2] << key[1].GetPubKey() << OP_CHECKSIG;\n-    standardScripts[3].SetBitcoinAddress(key[2].GetPubKey());\n+    standardScripts[3].SetDestination(key[2].GetPubKey().GetID());\n     CScript evalScripts[4];\n     for (int i = 0; i < 4; i++)\n     {\n         keystore.AddCScript(standardScripts[i]);\n-        evalScripts[i].SetPayToScriptHash(standardScripts[i]);\n+        evalScripts[i].SetDestination(standardScripts[i].GetID());\n     }\n \n     CTransaction txFrom;  // Funding transaction:\n@@ -122,7 +122,7 @@ BOOST_AUTO_TEST_CASE(norecurse)\n     invalidAsScript << OP_INVALIDOPCODE << OP_INVALIDOPCODE;\n \n     CScript p2sh;\n-    p2sh.SetPayToScriptHash(invalidAsScript);\n+    p2sh.SetDestination(invalidAsScript.GetID());\n \n     CScript scriptSig;\n     scriptSig << Serialize(invalidAsScript);\n@@ -133,7 +133,7 @@ BOOST_AUTO_TEST_CASE(norecurse)\n     // Try to recurse, and verification should succeed because\n     // the inner HASH160 <> EQUAL should only check the hash:\n     CScript p2sh2;\n-    p2sh2.SetPayToScriptHash(p2sh);\n+    p2sh2.SetDestination(p2sh.GetID());\n     CScript scriptSig2;\n     scriptSig2 << Serialize(invalidAsScript) << Serialize(p2sh);\n \n@@ -154,15 +154,15 @@ BOOST_AUTO_TEST_CASE(set)\n     }\n \n     CScript inner[4];\n-    inner[0].SetBitcoinAddress(key[0].GetPubKey());\n+    inner[0].SetDestination(key[0].GetPubKey().GetID());\n     inner[1].SetMultisig(2, std::vector<CKey>(keys.begin(), keys.begin()+2));\n     inner[2].SetMultisig(1, std::vector<CKey>(keys.begin(), keys.begin()+2));\n     inner[3].SetMultisig(2, std::vector<CKey>(keys.begin(), keys.begin()+3));\n \n     CScript outer[4];\n     for (int i = 0; i < 4; i++)\n     {\n-        outer[i].SetPayToScriptHash(inner[i]);\n+        outer[i].SetDestination(inner[i].GetID());\n         keystore.AddCScript(inner[i]);\n     }\n \n@@ -232,7 +232,7 @@ BOOST_AUTO_TEST_CASE(switchover)\n     scriptSig << Serialize(notValid);\n \n     CScript fund;\n-    fund.SetPayToScriptHash(notValid);\n+    fund.SetDestination(notValid.GetID());\n \n \n     // Validation should succeed under old rules (hash is correct):\n@@ -258,9 +258,9 @@ BOOST_AUTO_TEST_CASE(AreInputsStandard)\n     txFrom.vout.resize(6);\n \n     // First three are standard:\n-    CScript pay1; pay1.SetBitcoinAddress(key[0].GetPubKey());\n+    CScript pay1; pay1.SetDestination(key[0].GetPubKey().GetID());\n     keystore.AddCScript(pay1);\n-    CScript payScriptHash1; payScriptHash1.SetPayToScriptHash(pay1);\n+    CScript payScriptHash1; payScriptHash1.SetDestination(pay1.GetID());\n     CScript pay1of3; pay1of3.SetMultisig(1, keys);\n \n     txFrom.vout[0].scriptPubKey = payScriptHash1;\n@@ -278,13 +278,13 @@ BOOST_AUTO_TEST_CASE(AreInputsStandard)\n     for (int i = 0; i < 11; i++)\n         oneOfEleven << key[0].GetPubKey();\n     oneOfEleven << OP_11 << OP_CHECKMULTISIG;\n-    txFrom.vout[5].scriptPubKey.SetPayToScriptHash(oneOfEleven);\n+    txFrom.vout[5].scriptPubKey.SetDestination(oneOfEleven.GetID());\n \n     mapInputs[txFrom.GetHash()] = make_pair(CTxIndex(), txFrom);\n \n     CTransaction txTo;\n     txTo.vout.resize(1);\n-    txTo.vout[0].scriptPubKey.SetBitcoinAddress(key[1].GetPubKey());\n+    txTo.vout[0].scriptPubKey.SetDestination(key[1].GetPubKey().GetID());\n \n     txTo.vin.resize(3);\n     txTo.vin[0].prevout.n = 0;\n@@ -311,7 +311,7 @@ BOOST_AUTO_TEST_CASE(AreInputsStandard)\n \n     CTransaction txToNonStd;\n     txToNonStd.vout.resize(1);\n-    txToNonStd.vout[0].scriptPubKey.SetBitcoinAddress(key[1].GetPubKey());\n+    txToNonStd.vout[0].scriptPubKey.SetDestination(key[1].GetPubKey().GetID());\n     txToNonStd.vin.resize(2);\n     txToNonStd.vin[0].prevout.n = 4;\n     txToNonStd.vin[0].prevout.hash = txFrom.GetHash();"
      },
      {
        "sha": "59673f9b3d6fa034c2f2b0ee199976f28a0400f3",
        "filename": "src/test/sigopcount_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/sigopcount_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/sigopcount_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sigopcount_tests.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -32,7 +32,7 @@ BOOST_AUTO_TEST_CASE(GetSigOpCount)\n     BOOST_CHECK_EQUAL(s1.GetSigOpCount(false), 21);\n \n     CScript p2sh;\n-    p2sh.SetPayToScriptHash(s1);\n+    p2sh.SetDestination(s1.GetID());\n     CScript scriptSig;\n     scriptSig << OP_0 << Serialize(s1);\n     BOOST_CHECK_EQUAL(p2sh.GetSigOpCount(scriptSig), 3);\n@@ -49,7 +49,7 @@ BOOST_AUTO_TEST_CASE(GetSigOpCount)\n     BOOST_CHECK_EQUAL(s2.GetSigOpCount(true), 3);\n     BOOST_CHECK_EQUAL(s2.GetSigOpCount(false), 20);\n \n-    p2sh.SetPayToScriptHash(s2);\n+    p2sh.SetDestination(s2.GetID());\n     BOOST_CHECK_EQUAL(p2sh.GetSigOpCount(true), 0);\n     BOOST_CHECK_EQUAL(p2sh.GetSigOpCount(false), 0);\n     CScript scriptSig2;"
      },
      {
        "sha": "96d63bff97cdbc02a2dc3aa8a826dc886abc608d",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -30,3 +30,9 @@ void Shutdown(void* parg)\n {\n   exit(0);\n }\n+\n+void StartShutdown()\n+{\n+  exit(0);\n+}\n+"
      },
      {
        "sha": "be0d976d51a1677e36a66e338777293924d7c7c7",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -52,9 +52,9 @@ SetupDummyInputs(CBasicKeyStore& keystoreRet, MapPrevTx& inputsRet)\n \n     dummyTransactions[1].vout.resize(2);\n     dummyTransactions[1].vout[0].nValue = 21*CENT;\n-    dummyTransactions[1].vout[0].scriptPubKey.SetBitcoinAddress(key[2].GetPubKey());\n+    dummyTransactions[1].vout[0].scriptPubKey.SetDestination(key[2].GetPubKey().GetID());\n     dummyTransactions[1].vout[1].nValue = 22*CENT;\n-    dummyTransactions[1].vout[1].scriptPubKey.SetBitcoinAddress(key[3].GetPubKey());\n+    dummyTransactions[1].vout[1].scriptPubKey.SetDestination(key[3].GetPubKey().GetID());\n     inputsRet[dummyTransactions[1].GetHash()] = make_pair(CTxIndex(), dummyTransactions[1]);\n \n     return dummyTransactions;"
      },
      {
        "sha": "9b77b284e6b0cfdee9f99909f0127974c94faa26",
        "filename": "src/test/wallet_tests.cpp",
        "status": "added",
        "additions": 295,
        "deletions": 0,
        "changes": 295,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/wallet_tests.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -0,0 +1,295 @@\n+#include <boost/test/unit_test.hpp>\n+\n+#include \"main.h\"\n+#include \"wallet.h\"\n+\n+// how many times to run all the tests to have a chance to catch errors that only show up with particular random shuffles\n+#define RUN_TESTS 100\n+\n+// some tests fail 1% of the time due to bad luck.\n+// we repeat those tests this many times and only complain if all iterations of the test fail\n+#define RANDOM_REPEATS 5\n+\n+using namespace std;\n+\n+typedef set<pair<const CWalletTx*,unsigned int> > CoinSet;\n+\n+BOOST_AUTO_TEST_SUITE(wallet_tests)\n+\n+static CWallet wallet;\n+static vector<COutput> vCoins;\n+\n+static void add_coin(int64 nValue, int nAge = 6*24, bool fIsFromMe = false, int nInput=0)\n+{\n+    static int i;\n+    CTransaction* tx = new CTransaction;\n+    tx->nLockTime = i++;        // so all transactions get different hashes\n+    tx->vout.resize(nInput+1);\n+    tx->vout[nInput].nValue = nValue;\n+    CWalletTx* wtx = new CWalletTx(&wallet, *tx);\n+    delete tx;\n+    if (fIsFromMe)\n+    {\n+        // IsFromMe() returns (GetDebit() > 0), and GetDebit() is 0 if vin.empty(),\n+        // so stop vin being empty, and cache a non-zero Debit to fake out IsFromMe()\n+        wtx->vin.resize(1);\n+        wtx->fDebitCached = true;\n+        wtx->nDebitCached = 1;\n+    }\n+    COutput output(wtx, nInput, nAge);\n+    vCoins.push_back(output);\n+}\n+\n+static void empty_wallet(void)\n+{\n+    BOOST_FOREACH(COutput output, vCoins)\n+        delete output.tx;\n+    vCoins.clear();\n+}\n+\n+static bool equal_sets(CoinSet a, CoinSet b)\n+{\n+    pair<CoinSet::iterator, CoinSet::iterator> ret = mismatch(a.begin(), a.end(), b.begin());\n+    return ret.first == a.end() && ret.second == b.end();\n+}\n+\n+BOOST_AUTO_TEST_CASE(coin_selection_tests)\n+{\n+    static CoinSet setCoinsRet, setCoinsRet2;\n+    static int64 nValueRet;\n+\n+    // test multiple times to allow for differences in the shuffle order\n+    for (int i = 0; i < RUN_TESTS; i++)\n+    {\n+        empty_wallet();\n+\n+        // with an empty wallet we can't even pay one cent\n+        BOOST_CHECK(!wallet.SelectCoinsMinConf( 1 * CENT, 1, 6, vCoins, setCoinsRet, nValueRet));\n+\n+        add_coin(1*CENT, 4);        // add a new 1 cent coin\n+\n+        // with a new 1 cent coin, we still can't find a mature 1 cent\n+        BOOST_CHECK(!wallet.SelectCoinsMinConf( 1 * CENT, 1, 6, vCoins, setCoinsRet, nValueRet));\n+\n+        // but we can find a new 1 cent\n+        BOOST_CHECK( wallet.SelectCoinsMinConf( 1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 1 * CENT);\n+\n+        add_coin(2*CENT);           // add a mature 2 cent coin\n+\n+        // we can't make 3 cents of mature coins\n+        BOOST_CHECK(!wallet.SelectCoinsMinConf( 3 * CENT, 1, 6, vCoins, setCoinsRet, nValueRet));\n+\n+        // we can make 3 cents of new  coins\n+        BOOST_CHECK( wallet.SelectCoinsMinConf( 3 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 3 * CENT);\n+\n+        add_coin(5*CENT);           // add a mature 5 cent coin,\n+        add_coin(10*CENT, 3, true); // a new 10 cent coin sent from one of our own addresses\n+        add_coin(20*CENT);          // and a mature 20 cent coin\n+\n+        // now we have new: 1+10=11 (of which 10 was self-sent), and mature: 2+5+20=27.  total = 38\n+\n+        // we can't make 38 cents only if we disallow new coins:\n+        BOOST_CHECK(!wallet.SelectCoinsMinConf(38 * CENT, 1, 6, vCoins, setCoinsRet, nValueRet));\n+        // we can't even make 37 cents if we don't allow new coins even if they're from us\n+        BOOST_CHECK(!wallet.SelectCoinsMinConf(38 * CENT, 6, 6, vCoins, setCoinsRet, nValueRet));\n+        // but we can make 37 cents if we accept new coins from ourself\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(37 * CENT, 1, 6, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 37 * CENT);\n+        // and we can make 38 cents if we accept all new coins\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(38 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 38 * CENT);\n+\n+        // try making 34 cents from 1,2,5,10,20 - we can't do it exactly\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(34 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_GT(nValueRet, 34 * CENT);         // but should get more than 34 cents\n+        BOOST_CHECK_EQUAL(setCoinsRet.size(), 3);     // the best should be 20+10+5.  it's incredibly unlikely the 1 or 2 got included (but possible)\n+\n+        // when we try making 7 cents, the smaller coins (1,2,5) are enough.  We should see just 2+5\n+        BOOST_CHECK( wallet.SelectCoinsMinConf( 7 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 7 * CENT);\n+        BOOST_CHECK_EQUAL(setCoinsRet.size(), 2);\n+\n+        // when we try making 8 cents, the smaller coins (1,2,5) are exactly enough.\n+        BOOST_CHECK( wallet.SelectCoinsMinConf( 8 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK(nValueRet == 8 * CENT);\n+        BOOST_CHECK_EQUAL(setCoinsRet.size(), 3);\n+\n+        // when we try making 9 cents, no subset of smaller coins is enough, and we get the next bigger coin (10)\n+        BOOST_CHECK( wallet.SelectCoinsMinConf( 9 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 10 * CENT);\n+        BOOST_CHECK_EQUAL(setCoinsRet.size(), 1);\n+\n+        // now clear out the wallet and start again to test chosing between subsets of smaller coins and the next biggest coin\n+        empty_wallet();\n+\n+        add_coin( 6*CENT);\n+        add_coin( 7*CENT);\n+        add_coin( 8*CENT);\n+        add_coin(20*CENT);\n+        add_coin(30*CENT); // now we have 6+7+8+20+30 = 71 cents total\n+\n+        // check that we have 71 and not 72\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(71 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK(!wallet.SelectCoinsMinConf(72 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+\n+        // now try making 16 cents.  the best smaller coins can do is 6+7+8 = 21; not as good at the next biggest coin, 20\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(16 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 20 * CENT); // we should get 20 in one coin\n+        BOOST_CHECK_EQUAL(setCoinsRet.size(), 1);\n+\n+        add_coin( 5*CENT); // now we have 5+6+7+8+20+30 = 75 cents total\n+\n+        // now if we try making 16 cents again, the smaller coins can make 5+6+7 = 18 cents, better than the next biggest coin, 20\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(16 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 18 * CENT); // we should get 18 in 3 coins\n+        BOOST_CHECK_EQUAL(setCoinsRet.size(), 3);\n+\n+        add_coin( 18*CENT); // now we have 5+6+7+8+18+20+30\n+\n+        // and now if we try making 16 cents again, the smaller coins can make 5+6+7 = 18 cents, the same as the next biggest coin, 18\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(16 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 18 * CENT);  // we should get 18 in 1 coin\n+        BOOST_CHECK_EQUAL(setCoinsRet.size(), 1); // because in the event of a tie, the biggest coin wins\n+\n+        // now try making 11 cents.  we should get 5+6\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(11 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 11 * CENT);\n+        BOOST_CHECK_EQUAL(setCoinsRet.size(), 2);\n+\n+        // check that the smallest bigger coin is used\n+        add_coin( 1*COIN);\n+        add_coin( 2*COIN);\n+        add_coin( 3*COIN);\n+        add_coin( 4*COIN); // now we have 5+6+7+8+18+20+30+100+200+300+400 = 1094 cents\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(95 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 1 * COIN);  // we should get 1 bitcoin in 1 coin\n+        BOOST_CHECK_EQUAL(setCoinsRet.size(), 1);\n+\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(195 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 2 * COIN);  // we should get 2 bitcoins in 1 coin\n+        BOOST_CHECK_EQUAL(setCoinsRet.size(), 1);\n+\n+        // empty the wallet and start again, now with fractions of a cent, to test sub-cent change avoidance\n+        empty_wallet();\n+        add_coin(0.1*CENT);\n+        add_coin(0.2*CENT);\n+        add_coin(0.3*CENT);\n+        add_coin(0.4*CENT);\n+        add_coin(0.5*CENT);\n+\n+        // try making 1 cent from 0.1 + 0.2 + 0.3 + 0.4 + 0.5 = 1.5 cents\n+        // we'll get sub-cent change whatever happens, so can expect 1.0 exactly\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 1 * CENT);\n+\n+        // but if we add a bigger coin, making it possible to avoid sub-cent change, things change:\n+        add_coin(1111*CENT);\n+\n+        // try making 1 cent from 0.1 + 0.2 + 0.3 + 0.4 + 0.5 + 1111 = 1112.5 cents\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 1 * CENT); // we should get the exact amount\n+\n+        // if we add more sub-cent coins:\n+        add_coin(0.6*CENT);\n+        add_coin(0.7*CENT);\n+\n+        // and try again to make 1.0 cents, we can still make 1.0 cents\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 1 * CENT); // we should get the exact amount\n+\n+        // run the 'mtgox' test (see http://blockexplorer.com/tx/29a3efd3ef04f9153d47a990bd7b048a4b2d213daaa5fb8ed670fb85f13bdbcf)\n+        // they tried to consolidate 10 50k coins into one 500k coin, and ended up with 50k in change\n+        empty_wallet();\n+        for (int i = 0; i < 20; i++)\n+            add_coin(50000 * COIN);\n+\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(500000 * COIN, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 500000 * COIN); // we should get the exact amount\n+        BOOST_CHECK_EQUAL(setCoinsRet.size(), 10); // in ten coins\n+\n+        // if there's not enough in the smaller coins to make at least 1 cent change (0.5+0.6+0.7 < 1.0+1.0),\n+        // we need to try finding an exact subset anyway\n+\n+        // sometimes it will fail, and so we use the next biggest coin:\n+        empty_wallet();\n+        add_coin(0.5 * CENT);\n+        add_coin(0.6 * CENT);\n+        add_coin(0.7 * CENT);\n+        add_coin(1111 * CENT);\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 1111 * CENT); // we get the bigger coin\n+        BOOST_CHECK_EQUAL(setCoinsRet.size(), 1);\n+\n+        // but sometimes it's possible, and we use an exact subset (0.4 + 0.6 = 1.0)\n+        empty_wallet();\n+        add_coin(0.4 * CENT);\n+        add_coin(0.6 * CENT);\n+        add_coin(0.8 * CENT);\n+        add_coin(1111 * CENT);\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(1 * CENT, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 1 * CENT);   // we should get the exact amount\n+        BOOST_CHECK_EQUAL(setCoinsRet.size(), 2); // in two coins 0.4+0.6\n+\n+        // test avoiding sub-cent change\n+        empty_wallet();\n+        add_coin(0.0005 * COIN);\n+        add_coin(0.01 * COIN);\n+        add_coin(1 * COIN);\n+\n+        // trying to make 1.0001 from these three coins\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(1.0001 * COIN, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 1.0105 * COIN);   // we should get all coins\n+        BOOST_CHECK_EQUAL(setCoinsRet.size(), 3);\n+\n+        // but if we try to make 0.999, we should take the bigger of the two small coins to avoid sub-cent change\n+        BOOST_CHECK( wallet.SelectCoinsMinConf(0.999 * COIN, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_EQUAL(nValueRet, 1.01 * COIN);   // we should get 1 + 0.01\n+        BOOST_CHECK_EQUAL(setCoinsRet.size(), 2);\n+\n+        // test randomness\n+        {\n+            empty_wallet();\n+            for (int i2 = 0; i2 < 100; i2++)\n+                add_coin(COIN);\n+\n+            // picking 50 from 100 coins doesn't depend on the shuffle,\n+            // but does depend on randomness in the stochastic approximation code\n+            BOOST_CHECK(wallet.SelectCoinsMinConf(50 * COIN, 1, 6, vCoins, setCoinsRet , nValueRet));\n+            BOOST_CHECK(wallet.SelectCoinsMinConf(50 * COIN, 1, 6, vCoins, setCoinsRet2, nValueRet));\n+            BOOST_CHECK(!equal_sets(setCoinsRet, setCoinsRet2));\n+\n+            int fails = 0;\n+            for (int i = 0; i < RANDOM_REPEATS; i++)\n+            {\n+                // selecting 1 from 100 identical coins depends on the shuffle; this test will fail 1% of the time\n+                // run the test RANDOM_REPEATS times and only complain if all of them fail\n+                BOOST_CHECK(wallet.SelectCoinsMinConf(COIN, 1, 6, vCoins, setCoinsRet , nValueRet));\n+                BOOST_CHECK(wallet.SelectCoinsMinConf(COIN, 1, 6, vCoins, setCoinsRet2, nValueRet));\n+                if (equal_sets(setCoinsRet, setCoinsRet2))\n+                    fails++;\n+            }\n+            BOOST_CHECK_NE(fails, RANDOM_REPEATS);\n+\n+            // add 75 cents in small change.  not enough to make 90 cents,\n+            // then try making 90 cents.  there are multiple competing \"smallest bigger\" coins,\n+            // one of which should be picked at random\n+            add_coin( 5*CENT); add_coin(10*CENT); add_coin(15*CENT); add_coin(20*CENT); add_coin(25*CENT);\n+\n+            fails = 0;\n+            for (int i = 0; i < RANDOM_REPEATS; i++)\n+            {\n+                // selecting 1 from 100 identical coins depends on the shuffle; this test will fail 1% of the time\n+                // run the test RANDOM_REPEATS times and only complain if all of them fail\n+                BOOST_CHECK(wallet.SelectCoinsMinConf(90*CENT, 1, 6, vCoins, setCoinsRet , nValueRet));\n+                BOOST_CHECK(wallet.SelectCoinsMinConf(90*CENT, 1, 6, vCoins, setCoinsRet2, nValueRet));\n+                if (equal_sets(setCoinsRet, setCoinsRet2))\n+                    fails++;\n+            }\n+            BOOST_CHECK_NE(fails, RANDOM_REPEATS);\n+        }\n+    }\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "b07c9c1b7ece1bde1358bced3a56750b8c044a19",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -834,7 +834,7 @@ const boost::filesystem::path &GetDataDir(bool fNetSpecific)\n         path = GetDefaultDataDir();\n     }\n     if (fNetSpecific && GetBoolArg(\"-testnet\", false))\n-        path /= \"testnet\";\n+        path /= \"testnet3\";\n \n     fs::create_directory(path);\n "
      },
      {
        "sha": "127d580803521b32350a62cb0fc24e4a90a09aec",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 173,
        "deletions": 132,
        "changes": 305,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -7,6 +7,7 @@\n #include \"walletdb.h\"\n #include \"crypter.h\"\n #include \"ui_interface.h\"\n+#include \"base58.h\"\n \n using namespace std;\n \n@@ -16,7 +17,16 @@ using namespace std;\n // mapWallet\n //\n \n-std::vector<unsigned char> CWallet::GenerateNewKey()\n+struct CompareValueOnly\n+{\n+    bool operator()(const pair<int64, pair<const CWalletTx*, unsigned int> >& t1,\n+                    const pair<int64, pair<const CWalletTx*, unsigned int> >& t2) const\n+    {\n+        return t1.first < t2.first;\n+    }\n+};\n+\n+CPubKey CWallet::GenerateNewKey()\n {\n     bool fCompressed = CanSupportFeature(FEATURE_COMPRPUBKEY); // default to compressed public keys if we want 0.6.0 wallets\n \n@@ -44,7 +54,7 @@ bool CWallet::AddKey(const CKey& key)\n     return true;\n }\n \n-bool CWallet::AddCryptedKey(const vector<unsigned char> &vchPubKey, const vector<unsigned char> &vchCryptedSecret)\n+bool CWallet::AddCryptedKey(const CPubKey &vchPubKey, const vector<unsigned char> &vchCryptedSecret)\n {\n     if (!CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret))\n         return false;\n@@ -361,16 +371,16 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn)\n #ifndef QT_GUI\n         // If default receiving address gets used, replace it with a new one\n         CScript scriptDefaultKey;\n-        scriptDefaultKey.SetBitcoinAddress(vchDefaultKey);\n+        scriptDefaultKey.SetDestination(vchDefaultKey.GetID());\n         BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n         {\n             if (txout.scriptPubKey == scriptDefaultKey)\n             {\n-                std::vector<unsigned char> newDefaultKey;\n+                CPubKey newDefaultKey;\n                 if (GetKeyFromPool(newDefaultKey, false))\n                 {\n                     SetDefaultKey(newDefaultKey);\n-                    SetAddressBookName(CBitcoinAddress(vchDefaultKey), \"\");\n+                    SetAddressBookName(vchDefaultKey.GetID(), \"\");\n                 }\n             }\n         }\n@@ -455,7 +465,7 @@ int64 CWallet::GetDebit(const CTxIn &txin) const\n \n bool CWallet::IsChange(const CTxOut& txout) const\n {\n-    CBitcoinAddress address;\n+    CTxDestination address;\n \n     // TODO: fix handling of 'change' outputs. The assumption is that any\n     // payment to a TX_PUBKEYHASH that is mine but isn't in the address book\n@@ -464,7 +474,7 @@ bool CWallet::IsChange(const CTxOut& txout) const\n     // a better way of identifying which outputs are 'the send' and which are\n     // 'the change' will need to be implemented (maybe extend CWalletTx to remember\n     // which output, if any, was change).\n-    if (ExtractAddress(txout.scriptPubKey, address) && HaveKey(address))\n+    if (ExtractDestination(txout.scriptPubKey, address) && ::IsMine(*this, address))\n     {\n         LOCK(cs_wallet);\n         if (!mapAddressBook.count(address))\n@@ -517,8 +527,8 @@ int CWalletTx::GetRequestCount() const\n     return nRequests;\n }\n \n-void CWalletTx::GetAmounts(int64& nGeneratedImmature, int64& nGeneratedMature, list<pair<CBitcoinAddress, int64> >& listReceived,\n-                           list<pair<CBitcoinAddress, int64> >& listSent, int64& nFee, string& strSentAccount) const\n+void CWalletTx::GetAmounts(int64& nGeneratedImmature, int64& nGeneratedMature, list<pair<CTxDestination, int64> >& listReceived,\n+                           list<pair<CTxDestination, int64> >& listSent, int64& nFee, string& strSentAccount) const\n {\n     nGeneratedImmature = nGeneratedMature = nFee = 0;\n     listReceived.clear();\n@@ -545,13 +555,12 @@ void CWalletTx::GetAmounts(int64& nGeneratedImmature, int64& nGeneratedMature, l\n     // Sent/received.\n     BOOST_FOREACH(const CTxOut& txout, vout)\n     {\n-        CBitcoinAddress address;\n+        CTxDestination address;\n         vector<unsigned char> vchPubKey;\n-        if (!ExtractAddress(txout.scriptPubKey, address))\n+        if (!ExtractDestination(txout.scriptPubKey, address))\n         {\n             printf(\"CWalletTx::GetAmounts: Unknown transaction type found, txid %s\\n\",\n                    this->GetHash().ToString().c_str());\n-            address = \" unknown \";\n         }\n \n         // Don't report 'change' txouts\n@@ -567,33 +576,33 @@ void CWalletTx::GetAmounts(int64& nGeneratedImmature, int64& nGeneratedMature, l\n \n }\n \n-void CWalletTx::GetAccountAmounts(const string& strAccount, int64& nGenerated, int64& nReceived, \n+void CWalletTx::GetAccountAmounts(const string& strAccount, int64& nGenerated, int64& nReceived,\n                                   int64& nSent, int64& nFee) const\n {\n     nGenerated = nReceived = nSent = nFee = 0;\n \n     int64 allGeneratedImmature, allGeneratedMature, allFee;\n     allGeneratedImmature = allGeneratedMature = allFee = 0;\n     string strSentAccount;\n-    list<pair<CBitcoinAddress, int64> > listReceived;\n-    list<pair<CBitcoinAddress, int64> > listSent;\n+    list<pair<CTxDestination, int64> > listReceived;\n+    list<pair<CTxDestination, int64> > listSent;\n     GetAmounts(allGeneratedImmature, allGeneratedMature, listReceived, listSent, allFee, strSentAccount);\n \n     if (strAccount == \"\")\n         nGenerated = allGeneratedMature;\n     if (strAccount == strSentAccount)\n     {\n-        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress,int64)& s, listSent)\n+        BOOST_FOREACH(const PAIRTYPE(CTxDestination,int64)& s, listSent)\n             nSent += s.second;\n         nFee = allFee;\n     }\n     {\n         LOCK(pwallet->cs_wallet);\n-        BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress,int64)& r, listReceived)\n+        BOOST_FOREACH(const PAIRTYPE(CTxDestination,int64)& r, listReceived)\n         {\n             if (pwallet->mapAddressBook.count(r.first))\n             {\n-                map<CBitcoinAddress, string>::const_iterator mi = pwallet->mapAddressBook.find(r.first);\n+                map<CTxDestination, string>::const_iterator mi = pwallet->mapAddressBook.find(r.first);\n                 if (mi != pwallet->mapAddressBook.end() && (*mi).second == strAccount)\n                     nReceived += r.second;\n             }\n@@ -851,9 +860,8 @@ int64 CWallet::GetBalance() const\n         for (map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n         {\n             const CWalletTx* pcoin = &(*it).second;\n-            if (!pcoin->IsFinal() || !pcoin->IsConfirmed())\n-                continue;\n-            nTotal += pcoin->GetAvailableCredit();\n+            if (pcoin->IsFinal() && pcoin->IsConfirmed())\n+                nTotal += pcoin->GetAvailableCredit();\n         }\n     }\n \n@@ -868,106 +876,61 @@ int64 CWallet::GetUnconfirmedBalance() const\n         for (map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n         {\n             const CWalletTx* pcoin = &(*it).second;\n-            if (pcoin->IsFinal() && pcoin->IsConfirmed())\n-                continue;\n-            nTotal += pcoin->GetAvailableCredit();\n+            if (!pcoin->IsFinal() || !pcoin->IsConfirmed())\n+                nTotal += pcoin->GetAvailableCredit();\n         }\n     }\n     return nTotal;\n }\n \n-bool CWallet::SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, set<pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet) const\n+int64 CWallet::GetImmatureBalance() const\n {\n-    setCoinsRet.clear();\n-    nValueRet = 0;\n+    int64 nTotal = 0;\n+    {\n+        LOCK(cs_wallet);\n+        for (map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n+        {\n+            const CWalletTx& pcoin = (*it).second;\n+            if (pcoin.IsCoinBase() && pcoin.GetBlocksToMaturity() > 0 && pcoin.GetDepthInMainChain() >= 2)\n+                nTotal += GetCredit(pcoin);\n+        }\n+    }\n+    return nTotal;\n+}\n \n-    // List of values less than target\n-    pair<int64, pair<const CWalletTx*,unsigned int> > coinLowestLarger;\n-    coinLowestLarger.first = std::numeric_limits<int64>::max();\n-    coinLowestLarger.second.first = NULL;\n-    vector<pair<int64, pair<const CWalletTx*,unsigned int> > > vValue;\n-    int64 nTotalLower = 0;\n+// populate vCoins with vector of spendable COutputs\n+void CWallet::AvailableCoins(vector<COutput>& vCoins) const\n+{\n+    vCoins.clear();\n \n     {\n-       LOCK(cs_wallet);\n-       vector<const CWalletTx*> vCoins;\n-       vCoins.reserve(mapWallet.size());\n-       for (map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n-           vCoins.push_back(&(*it).second);\n-       random_shuffle(vCoins.begin(), vCoins.end(), GetRandInt);\n-\n-       BOOST_FOREACH(const CWalletTx* pcoin, vCoins)\n-       {\n+        LOCK(cs_wallet);\n+        for (map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n+        {\n+            const CWalletTx* pcoin = &(*it).second;\n+\n             if (!pcoin->IsFinal() || !pcoin->IsConfirmed())\n                 continue;\n \n             if (pcoin->IsCoinBase() && pcoin->GetBlocksToMaturity() > 0)\n                 continue;\n \n-            int nDepth = pcoin->GetDepthInMainChain();\n-            if (nDepth < (pcoin->IsFromMe() ? nConfMine : nConfTheirs))\n-                continue;\n-\n             for (unsigned int i = 0; i < pcoin->vout.size(); i++)\n-            {\n-                if (pcoin->IsSpent(i) || !IsMine(pcoin->vout[i]))\n-                    continue;\n-\n-                int64 n = pcoin->vout[i].nValue;\n-\n-                if (n <= 0)\n-                    continue;\n-\n-                pair<int64,pair<const CWalletTx*,unsigned int> > coin = make_pair(n,make_pair(pcoin,i));\n-\n-                if (n == nTargetValue)\n-                {\n-                    setCoinsRet.insert(coin.second);\n-                    nValueRet += coin.first;\n-                    return true;\n-                }\n-                else if (n < nTargetValue + CENT)\n-                {\n-                    vValue.push_back(coin);\n-                    nTotalLower += n;\n-                }\n-                else if (n < coinLowestLarger.first)\n-                {\n-                    coinLowestLarger = coin;\n-                }\n-            }\n+                if (!(pcoin->IsSpent(i)) && IsMine(pcoin->vout[i]) && pcoin->vout[i].nValue > 0)\n+                    vCoins.push_back(COutput(pcoin, i, pcoin->GetDepthInMainChain()));\n         }\n     }\n+}\n \n-    if (nTotalLower == nTargetValue || nTotalLower == nTargetValue + CENT)\n-    {\n-        for (unsigned int i = 0; i < vValue.size(); ++i)\n-        {\n-            setCoinsRet.insert(vValue[i].second);\n-            nValueRet += vValue[i].first;\n-        }\n-        return true;\n-    }\n-\n-    if (nTotalLower < nTargetValue + (coinLowestLarger.second.first ? CENT : 0))\n-    {\n-        if (coinLowestLarger.second.first == NULL)\n-            return false;\n-        setCoinsRet.insert(coinLowestLarger.second);\n-        nValueRet += coinLowestLarger.first;\n-        return true;\n-    }\n-\n-    if (nTotalLower >= nTargetValue + CENT)\n-        nTargetValue += CENT;\n-\n-    // Solve subset sum by stochastic approximation\n-    sort(vValue.rbegin(), vValue.rend());\n+static void ApproximateBestSubset(vector<pair<int64, pair<const CWalletTx*,unsigned int> > >vValue, int64 nTotalLower, int64 nTargetValue,\n+                                  vector<char>& vfBest, int64& nBest, int iterations = 1000)\n+{\n     vector<char> vfIncluded;\n-    vector<char> vfBest(vValue.size(), true);\n-    int64 nBest = nTotalLower;\n \n-    for (int nRep = 0; nRep < 1000 && nBest != nTargetValue; nRep++)\n+    vfBest.assign(vValue.size(), true);\n+    nBest = nTotalLower;\n+\n+    for (int nRep = 0; nRep < iterations && nBest != nTargetValue; nRep++)\n     {\n         vfIncluded.assign(vValue.size(), false);\n         int64 nTotal = 0;\n@@ -995,9 +958,84 @@ bool CWallet::SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfThe\n             }\n         }\n     }\n+}\n+\n+bool CWallet::SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, vector<COutput> vCoins,\n+                                 set<pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet) const\n+{\n+    setCoinsRet.clear();\n+    nValueRet = 0;\n+\n+    // List of values less than target\n+    pair<int64, pair<const CWalletTx*,unsigned int> > coinLowestLarger;\n+    coinLowestLarger.first = std::numeric_limits<int64>::max();\n+    coinLowestLarger.second.first = NULL;\n+    vector<pair<int64, pair<const CWalletTx*,unsigned int> > > vValue;\n+    int64 nTotalLower = 0;\n+\n+    random_shuffle(vCoins.begin(), vCoins.end(), GetRandInt);\n+\n+    BOOST_FOREACH(COutput output, vCoins)\n+    {\n+        const CWalletTx *pcoin = output.tx;\n+\n+        if (output.nDepth < (pcoin->IsFromMe() ? nConfMine : nConfTheirs))\n+            continue;\n+\n+        int i = output.i;\n+        int64 n = pcoin->vout[i].nValue;\n+\n+        pair<int64,pair<const CWalletTx*,unsigned int> > coin = make_pair(n,make_pair(pcoin, i));\n+\n+        if (n == nTargetValue)\n+        {\n+            setCoinsRet.insert(coin.second);\n+            nValueRet += coin.first;\n+            return true;\n+        }\n+        else if (n < nTargetValue + CENT)\n+        {\n+            vValue.push_back(coin);\n+            nTotalLower += n;\n+        }\n+        else if (n < coinLowestLarger.first)\n+        {\n+            coinLowestLarger = coin;\n+        }\n+    }\n+\n+    if (nTotalLower == nTargetValue)\n+    {\n+        for (unsigned int i = 0; i < vValue.size(); ++i)\n+        {\n+            setCoinsRet.insert(vValue[i].second);\n+            nValueRet += vValue[i].first;\n+        }\n+        return true;\n+    }\n \n-    // If the next larger is still closer, return it\n-    if (coinLowestLarger.second.first && coinLowestLarger.first - nTargetValue <= nBest - nTargetValue)\n+    if (nTotalLower < nTargetValue)\n+    {\n+        if (coinLowestLarger.second.first == NULL)\n+            return false;\n+        setCoinsRet.insert(coinLowestLarger.second);\n+        nValueRet += coinLowestLarger.first;\n+        return true;\n+    }\n+\n+    // Solve subset sum by stochastic approximation\n+    sort(vValue.rbegin(), vValue.rend(), CompareValueOnly());\n+    vector<char> vfBest;\n+    int64 nBest;\n+\n+    ApproximateBestSubset(vValue, nTotalLower, nTargetValue, vfBest, nBest, 1000);\n+    if (nBest != nTargetValue && nTotalLower >= nTargetValue + CENT)\n+        ApproximateBestSubset(vValue, nTotalLower, nTargetValue + CENT, vfBest, nBest, 1000);\n+\n+    // If we have a bigger coin and (either the stochastic approximation didn't find a good solution,\n+    //                                   or the next bigger coin is closer), return the bigger coin\n+    if (coinLowestLarger.second.first &&\n+        ((nBest != nTargetValue && nBest < nTargetValue + CENT) || coinLowestLarger.first <= nBest))\n     {\n         setCoinsRet.insert(coinLowestLarger.second);\n         nValueRet += coinLowestLarger.first;\n@@ -1023,9 +1061,12 @@ bool CWallet::SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfThe\n \n bool CWallet::SelectCoins(int64 nTargetValue, set<pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet) const\n {\n-    return (SelectCoinsMinConf(nTargetValue, 1, 6, setCoinsRet, nValueRet) ||\n-            SelectCoinsMinConf(nTargetValue, 1, 1, setCoinsRet, nValueRet) ||\n-            SelectCoinsMinConf(nTargetValue, 0, 1, setCoinsRet, nValueRet));\n+    vector<COutput> vCoins;\n+    AvailableCoins(vCoins);\n+\n+    return (SelectCoinsMinConf(nTargetValue, 1, 6, vCoins, setCoinsRet, nValueRet) ||\n+            SelectCoinsMinConf(nTargetValue, 1, 1, vCoins, setCoinsRet, nValueRet) ||\n+            SelectCoinsMinConf(nTargetValue, 0, 1, vCoins, setCoinsRet, nValueRet));\n }\n \n \n@@ -1095,14 +1136,14 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64> >& vecSend, CW\n                     //  post-backup change.\n \n                     // Reserve a new key pair from key pool\n-                    vector<unsigned char> vchPubKey = reservekey.GetReservedKey();\n+                    CPubKey vchPubKey = reservekey.GetReservedKey();\n                     // assert(mapKeys.count(vchPubKey));\n \n                     // Fill a vout to ourself\n                     // TODO: pass in scriptChange instead of reservekey so\n                     // change transaction isn't always pay-to-bitcoin-address\n                     CScript scriptChange;\n-                    scriptChange.SetBitcoinAddress(vchPubKey);\n+                    scriptChange.SetDestination(vchPubKey.GetID());\n \n                     // Insert change txn at random position:\n                     vector<CTxOut>::iterator position = wtxNew.vout.begin()+GetRandInt(wtxNew.vout.size());\n@@ -1240,7 +1281,7 @@ string CWallet::SendMoney(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew,\n \n \n \n-string CWallet::SendMoneyToBitcoinAddress(const CBitcoinAddress& address, int64 nValue, CWalletTx& wtxNew, bool fAskFee)\n+string CWallet::SendMoneyToDestination(const CTxDestination& address, int64 nValue, CWalletTx& wtxNew, bool fAskFee)\n {\n     // Check amount\n     if (nValue <= 0)\n@@ -1250,7 +1291,7 @@ string CWallet::SendMoneyToBitcoinAddress(const CBitcoinAddress& address, int64\n \n     // Parse Bitcoin address\n     CScript scriptPubKey;\n-    scriptPubKey.SetBitcoinAddress(address);\n+    scriptPubKey.SetDestination(address);\n \n     return SendMoney(scriptPubKey, nValue, wtxNew, fAskFee);\n }\n@@ -1278,30 +1319,30 @@ int CWallet::LoadWallet(bool& fFirstRunRet)\n \n     if (nLoadWalletRet != DB_LOAD_OK)\n         return nLoadWalletRet;\n-    fFirstRunRet = vchDefaultKey.empty();\n+    fFirstRunRet = !vchDefaultKey.IsValid();\n \n     CreateThread(ThreadFlushWalletDB, &strWalletFile);\n     return DB_LOAD_OK;\n }\n \n \n-bool CWallet::SetAddressBookName(const CBitcoinAddress& address, const string& strName)\n+bool CWallet::SetAddressBookName(const CTxDestination& address, const string& strName)\n {\n-    std::map<CBitcoinAddress, std::string>::iterator mi = mapAddressBook.find(address);\n+    std::map<CTxDestination, std::string>::iterator mi = mapAddressBook.find(address);\n     mapAddressBook[address] = strName;\n-    NotifyAddressBookChanged(this, address.ToString(), strName, HaveKey(address), (mi == mapAddressBook.end()) ? CT_NEW : CT_UPDATED);\n+    NotifyAddressBookChanged(this, address, strName, ::IsMine(*this, address), (mi == mapAddressBook.end()) ? CT_NEW : CT_UPDATED);\n     if (!fFileBacked)\n         return false;\n-    return CWalletDB(strWalletFile).WriteName(address.ToString(), strName);\n+    return CWalletDB(strWalletFile).WriteName(CBitcoinAddress(address).ToString(), strName);\n }\n \n-bool CWallet::DelAddressBookName(const CBitcoinAddress& address)\n+bool CWallet::DelAddressBookName(const CTxDestination& address)\n {\n     mapAddressBook.erase(address);\n-    NotifyAddressBookChanged(this, address.ToString(), \"\", HaveKey(address), CT_DELETED);\n+    NotifyAddressBookChanged(this, address, \"\", ::IsMine(*this, address), CT_DELETED);\n     if (!fFileBacked)\n         return false;\n-    return CWalletDB(strWalletFile).EraseName(address.ToString());\n+    return CWalletDB(strWalletFile).EraseName(CBitcoinAddress(address).ToString());\n }\n \n \n@@ -1332,7 +1373,7 @@ bool CWallet::GetTransaction(const uint256 &hashTx, CWalletTx& wtx)\n     return false;\n }\n \n-bool CWallet::SetDefaultKey(const std::vector<unsigned char> &vchPubKey)\n+bool CWallet::SetDefaultKey(const CPubKey &vchPubKey)\n {\n     if (fFileBacked)\n     {\n@@ -1408,7 +1449,7 @@ bool CWallet::TopUpKeyPool()\n void CWallet::ReserveKeyFromKeyPool(int64& nIndex, CKeyPool& keypool)\n {\n     nIndex = -1;\n-    keypool.vchPubKey.clear();\n+    keypool.vchPubKey = CPubKey();\n     {\n         LOCK(cs_wallet);\n \n@@ -1425,9 +1466,9 @@ void CWallet::ReserveKeyFromKeyPool(int64& nIndex, CKeyPool& keypool)\n         setKeyPool.erase(setKeyPool.begin());\n         if (!walletdb.ReadPool(nIndex, keypool))\n             throw runtime_error(\"ReserveKeyFromKeyPool() : read failed\");\n-        if (!HaveKey(Hash160(keypool.vchPubKey)))\n+        if (!HaveKey(keypool.vchPubKey.GetID()))\n             throw runtime_error(\"ReserveKeyFromKeyPool() : unknown key in key pool\");\n-        assert(!keypool.vchPubKey.empty());\n+        assert(keypool.vchPubKey.IsValid());\n         printf(\"keypool reserve %\"PRI64d\"\\n\", nIndex);\n     }\n }\n@@ -1468,7 +1509,7 @@ void CWallet::ReturnKey(int64 nIndex)\n     printf(\"keypool return %\"PRI64d\"\\n\", nIndex);\n }\n \n-bool CWallet::GetKeyFromPool(vector<unsigned char>& result, bool fAllowReuse)\n+bool CWallet::GetKeyFromPool(CPubKey& result, bool fAllowReuse)\n {\n     int64 nIndex = 0;\n     CKeyPool keypool;\n@@ -1477,7 +1518,7 @@ bool CWallet::GetKeyFromPool(vector<unsigned char>& result, bool fAllowReuse)\n         ReserveKeyFromKeyPool(nIndex, keypool);\n         if (nIndex == -1)\n         {\n-            if (fAllowReuse && !vchDefaultKey.empty())\n+            if (fAllowReuse && vchDefaultKey.IsValid())\n             {\n                 result = vchDefaultKey;\n                 return true;\n@@ -1503,7 +1544,7 @@ int64 CWallet::GetOldestKeyPoolTime()\n     return keypool.nTime;\n }\n \n-vector<unsigned char> CReserveKey::GetReservedKey()\n+CPubKey CReserveKey::GetReservedKey()\n {\n     if (nIndex == -1)\n     {\n@@ -1517,7 +1558,7 @@ vector<unsigned char> CReserveKey::GetReservedKey()\n             vchPubKey = pwallet->vchDefaultKey;\n         }\n     }\n-    assert(!vchPubKey.empty());\n+    assert(vchPubKey.IsValid());\n     return vchPubKey;\n }\n \n@@ -1526,18 +1567,18 @@ void CReserveKey::KeepKey()\n     if (nIndex != -1)\n         pwallet->KeepKey(nIndex);\n     nIndex = -1;\n-    vchPubKey.clear();\n+    vchPubKey = CPubKey();\n }\n \n void CReserveKey::ReturnKey()\n {\n     if (nIndex != -1)\n         pwallet->ReturnKey(nIndex);\n     nIndex = -1;\n-    vchPubKey.clear();\n+    vchPubKey = CPubKey();\n }\n \n-void CWallet::GetAllReserveAddresses(set<CBitcoinAddress>& setAddress)\n+void CWallet::GetAllReserveKeys(set<CKeyID>& setAddress)\n {\n     setAddress.clear();\n \n@@ -1549,11 +1590,11 @@ void CWallet::GetAllReserveAddresses(set<CBitcoinAddress>& setAddress)\n         CKeyPool keypool;\n         if (!walletdb.ReadPool(id, keypool))\n             throw runtime_error(\"GetAllReserveKeyHashes() : read failed\");\n-        CBitcoinAddress address(keypool.vchPubKey);\n-        assert(!keypool.vchPubKey.empty());\n-        if (!HaveKey(address))\n+        assert(keypool.vchPubKey.IsValid());\n+        CKeyID keyID = keypool.vchPubKey.GetID();\n+        if (!HaveKey(keyID))\n             throw runtime_error(\"GetAllReserveKeyHashes() : unknown key in key pool\");\n-        setAddress.insert(address);\n+        setAddress.insert(keyID);\n     }\n }\n "
      },
      {
        "sha": "b2e0e5260eb142cb4c4ac3a66690b9afa589afd3",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 53,
        "deletions": 21,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -14,6 +14,7 @@\n class CWalletTx;\n class CReserveKey;\n class CWalletDB;\n+class COutput;\n \n /** (client) version numbers for particular wallet features */\n enum WalletFeature\n@@ -32,14 +33,14 @@ class CKeyPool\n {\n public:\n     int64 nTime;\n-    std::vector<unsigned char> vchPubKey;\n+    CPubKey vchPubKey;\n \n     CKeyPool()\n     {\n         nTime = GetTime();\n     }\n \n-    CKeyPool(const std::vector<unsigned char>& vchPubKeyIn)\n+    CKeyPool(const CPubKey& vchPubKeyIn)\n     {\n         nTime = GetTime();\n         vchPubKey = vchPubKeyIn;\n@@ -60,7 +61,7 @@ class CKeyPool\n class CWallet : public CCryptoKeyStore\n {\n private:\n-    bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet) const;\n+    void AvailableCoins(std::vector<COutput>& vCoins) const;\n     bool SelectCoins(int64 nTargetValue, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet) const;\n \n     CWalletDB *pwalletdbEncryption;\n@@ -105,16 +106,18 @@ class CWallet : public CCryptoKeyStore\n     std::map<uint256, CWalletTx> mapWallet;\n     std::map<uint256, int> mapRequestCount;\n \n-    std::map<CBitcoinAddress, std::string> mapAddressBook;\n+    std::map<CTxDestination, std::string> mapAddressBook;\n \n-    std::vector<unsigned char> vchDefaultKey;\n+    CPubKey vchDefaultKey;\n \n     // check whether we are allowed to upgrade (or already support) to the named feature\n     bool CanSupportFeature(enum WalletFeature wf) { return nWalletMaxVersion >= wf; }\n \n+    bool SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, std::vector<COutput> vCoins, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, int64& nValueRet) const;\n+\n     // keystore implementation\n     // Generate a new key\n-    std::vector<unsigned char> GenerateNewKey();\n+    CPubKey GenerateNewKey();\n     // Adds a key to the store, and saves it to disk.\n     bool AddKey(const CKey& key);\n     // Adds a key to the store, without saving it to disk (used by LoadWallet)\n@@ -123,9 +126,9 @@ class CWallet : public CCryptoKeyStore\n     bool LoadMinVersion(int nVersion) { nWalletVersion = nVersion; nWalletMaxVersion = std::max(nWalletMaxVersion, nVersion); return true; }\n \n     // Adds an encrypted key to the store, and saves it to disk.\n-    bool AddCryptedKey(const std::vector<unsigned char> &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n+    bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n     // Adds an encrypted key to the store, without saving it to disk (used by LoadWallet)\n-    bool LoadCryptedKey(const std::vector<unsigned char> &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret) { SetMinVersion(FEATURE_WALLETCRYPT); return CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret); }\n+    bool LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret) { SetMinVersion(FEATURE_WALLETCRYPT); return CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret); }\n     bool AddCScript(const CScript& redeemScript);\n     bool LoadCScript(const CScript& redeemScript) { return CCryptoKeyStore::AddCScript(redeemScript); }\n \n@@ -144,21 +147,22 @@ class CWallet : public CCryptoKeyStore\n     void ResendWalletTransactions();\n     int64 GetBalance() const;\n     int64 GetUnconfirmedBalance() const;\n+    int64 GetImmatureBalance() const;\n     bool CreateTransaction(const std::vector<std::pair<CScript, int64> >& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet);\n     bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CReserveKey& reservekey, int64& nFeeRet);\n     bool CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey);\n     std::string SendMoney(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, bool fAskFee=false);\n-    std::string SendMoneyToBitcoinAddress(const CBitcoinAddress& address, int64 nValue, CWalletTx& wtxNew, bool fAskFee=false);\n+    std::string SendMoneyToDestination(const CTxDestination &address, int64 nValue, CWalletTx& wtxNew, bool fAskFee=false);\n \n     bool NewKeyPool();\n     bool TopUpKeyPool();\n     int64 AddReserveKey(const CKeyPool& keypool);\n     void ReserveKeyFromKeyPool(int64& nIndex, CKeyPool& keypool);\n     void KeepKey(int64 nIndex);\n     void ReturnKey(int64 nIndex);\n-    bool GetKeyFromPool(std::vector<unsigned char> &key, bool fAllowReuse=true);\n+    bool GetKeyFromPool(CPubKey &key, bool fAllowReuse=true);\n     int64 GetOldestKeyPoolTime();\n-    void GetAllReserveAddresses(std::set<CBitcoinAddress>& setAddress);\n+    void GetAllReserveKeys(std::set<CKeyID>& setAddress);\n \n     bool IsMine(const CTxIn& txin) const;\n     int64 GetDebit(const CTxIn& txin) const;\n@@ -227,9 +231,9 @@ class CWallet : public CCryptoKeyStore\n \n     int LoadWallet(bool& fFirstRunRet);\n \n-    bool SetAddressBookName(const CBitcoinAddress& address, const std::string& strName);\n+    bool SetAddressBookName(const CTxDestination& address, const std::string& strName);\n \n-    bool DelAddressBookName(const CBitcoinAddress& address);\n+    bool DelAddressBookName(const CTxDestination& address);\n \n     void UpdatedTransaction(const uint256 &hashTx);\n \n@@ -252,7 +256,7 @@ class CWallet : public CCryptoKeyStore\n \n     bool GetTransaction(const uint256 &hashTx, CWalletTx& wtx);\n \n-    bool SetDefaultKey(const std::vector<unsigned char> &vchPubKey);\n+    bool SetDefaultKey(const CPubKey &vchPubKey);\n \n     // signify that a particular wallet feature is now used. this may change nWalletVersion and nWalletMaxVersion if those are lower\n     bool SetMinVersion(enum WalletFeature, CWalletDB* pwalletdbIn = NULL, bool fExplicit = false);\n@@ -266,7 +270,7 @@ class CWallet : public CCryptoKeyStore\n     /** Address book entry changed.\n      * @note called with lock cs_wallet held.\n      */\n-    boost::signals2::signal<void (CWallet *wallet, const std::string &address, const std::string &label, bool isMine, ChangeType status)> NotifyAddressBookChanged;\n+    boost::signals2::signal<void (CWallet *wallet, const CTxDestination &address, const std::string &label, bool isMine, ChangeType status)> NotifyAddressBookChanged;\n \n     /** Wallet transaction added, removed or updated.\n      * @note called with lock cs_wallet held.\n@@ -280,7 +284,7 @@ class CReserveKey\n protected:\n     CWallet* pwallet;\n     int64 nIndex;\n-    std::vector<unsigned char> vchPubKey;\n+    CPubKey vchPubKey;\n public:\n     CReserveKey(CWallet* pwalletIn)\n     {\n@@ -295,7 +299,7 @@ class CReserveKey\n     }\n \n     void ReturnKey();\n-    std::vector<unsigned char> GetReservedKey();\n+    CPubKey GetReservedKey();\n     void KeepKey();\n };\n \n@@ -532,8 +536,8 @@ class CWalletTx : public CMerkleTx\n         return nChangeCached;\n     }\n \n-    void GetAmounts(int64& nGeneratedImmature, int64& nGeneratedMature, std::list<std::pair<CBitcoinAddress, int64> >& listReceived,\n-                    std::list<std::pair<CBitcoinAddress, int64> >& listSent, int64& nFee, std::string& strSentAccount) const;\n+    void GetAmounts(int64& nGeneratedImmature, int64& nGeneratedMature, std::list<std::pair<CTxDestination, int64> >& listReceived,\n+                    std::list<std::pair<CTxDestination, int64> >& listSent, int64& nFee, std::string& strSentAccount) const;\n \n     void GetAccountAmounts(const std::string& strAccount, int64& nGenerated, int64& nReceived, \n                            int64& nSent, int64& nFee) const;\n@@ -601,6 +605,34 @@ class CWalletTx : public CMerkleTx\n };\n \n \n+\n+\n+class COutput\n+{\n+public:\n+    const CWalletTx *tx;\n+    int i;\n+    int nDepth;\n+\n+    COutput(const CWalletTx *txIn, int iIn, int nDepthIn)\n+    {\n+        tx = txIn; i = iIn; nDepth = nDepthIn;\n+    }\n+\n+    std::string ToString() const\n+    {\n+        return strprintf(\"COutput(%s, %d, %d) [%s]\", tx->GetHash().ToString().substr(0,10).c_str(), i, nDepth, FormatMoney(tx->vout[i].nValue).c_str());\n+    }\n+\n+    void print() const\n+    {\n+        printf(\"%s\\n\", ToString().c_str());\n+    }\n+};\n+\n+\n+\n+\n /** Private key that includes an expiration date in case it never gets used. */\n class CWalletKey\n {\n@@ -640,7 +672,7 @@ class CWalletKey\n class CAccount\n {\n public:\n-    std::vector<unsigned char> vchPubKey;\n+    CPubKey vchPubKey;\n \n     CAccount()\n     {\n@@ -649,7 +681,7 @@ class CAccount\n \n     void SetNull()\n     {\n-        vchPubKey.clear();\n+        vchPubKey = CPubKey();\n     }\n \n     IMPLEMENT_SERIALIZE"
      },
      {
        "sha": "2c4d4c0ef0f6f267aba5a3f548ed927b219baed1",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -104,7 +104,7 @@ void CWalletDB::ListAccountCreditDebit(const string& strAccount, list<CAccountin\n \n int CWalletDB::LoadWallet(CWallet* pwallet)\n {\n-    pwallet->vchDefaultKey.clear();\n+    pwallet->vchDefaultKey = CPubKey();\n     int nFileVersion = 0;\n     vector<uint256> vWalletUpgrade;\n     bool fIsEncrypted = false;\n@@ -151,7 +151,7 @@ int CWalletDB::LoadWallet(CWallet* pwallet)\n             {\n                 string strAddress;\n                 ssKey >> strAddress;\n-                ssValue >> pwallet->mapAddressBook[strAddress];\n+                ssValue >> pwallet->mapAddressBook[CBitcoinAddress(strAddress).Get()];\n             }\n             else if (strType == \"tx\")\n             {"
      },
      {
        "sha": "39182279d5591ba5177eb28650b1fd1f8d85ca84",
        "filename": "src/walletdb.h",
        "status": "modified",
        "additions": 11,
        "deletions": 10,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07368a9e3c60bbef8452501d34bb8d3688cbca13/src/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.h?ref=07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "patch": "@@ -6,6 +6,7 @@\n #define BITCOIN_WALLETDB_H\n \n #include \"db.h\"\n+#include \"base58.h\"\n \n class CKeyPool;\n class CAccount;\n@@ -59,27 +60,27 @@ class CWalletDB : public CDB\n         return Erase(std::make_pair(std::string(\"tx\"), hash));\n     }\n \n-    bool ReadKey(const std::vector<unsigned char>& vchPubKey, CPrivKey& vchPrivKey)\n+    bool ReadKey(const CPubKey& vchPubKey, CPrivKey& vchPrivKey)\n     {\n         vchPrivKey.clear();\n-        return Read(std::make_pair(std::string(\"key\"), vchPubKey), vchPrivKey);\n+        return Read(std::make_pair(std::string(\"key\"), vchPubKey.Raw()), vchPrivKey);\n     }\n \n-    bool WriteKey(const std::vector<unsigned char>& vchPubKey, const CPrivKey& vchPrivKey)\n+    bool WriteKey(const CPubKey& vchPubKey, const CPrivKey& vchPrivKey)\n     {\n         nWalletDBUpdated++;\n-        return Write(std::make_pair(std::string(\"key\"), vchPubKey), vchPrivKey, false);\n+        return Write(std::make_pair(std::string(\"key\"), vchPubKey.Raw()), vchPrivKey, false);\n     }\n \n-    bool WriteCryptedKey(const std::vector<unsigned char>& vchPubKey, const std::vector<unsigned char>& vchCryptedSecret, bool fEraseUnencryptedKey = true)\n+    bool WriteCryptedKey(const CPubKey& vchPubKey, const std::vector<unsigned char>& vchCryptedSecret, bool fEraseUnencryptedKey = true)\n     {\n         nWalletDBUpdated++;\n-        if (!Write(std::make_pair(std::string(\"ckey\"), vchPubKey), vchCryptedSecret, false))\n+        if (!Write(std::make_pair(std::string(\"ckey\"), vchPubKey.Raw()), vchCryptedSecret, false))\n             return false;\n         if (fEraseUnencryptedKey)\n         {\n-            Erase(std::make_pair(std::string(\"key\"), vchPubKey));\n-            Erase(std::make_pair(std::string(\"wkey\"), vchPubKey));\n+            Erase(std::make_pair(std::string(\"key\"), vchPubKey.Raw()));\n+            Erase(std::make_pair(std::string(\"wkey\"), vchPubKey.Raw()));\n         }\n         return true;\n     }\n@@ -120,10 +121,10 @@ class CWalletDB : public CDB\n         return Read(std::string(\"defaultkey\"), vchPubKey);\n     }\n \n-    bool WriteDefaultKey(const std::vector<unsigned char>& vchPubKey)\n+    bool WriteDefaultKey(const CPubKey& vchPubKey)\n     {\n         nWalletDBUpdated++;\n-        return Write(std::string(\"defaultkey\"), vchPubKey);\n+        return Write(std::string(\"defaultkey\"), vchPubKey.Raw());\n     }\n \n     bool ReadPool(int64 nPool, CKeyPool& keypool)"
      }
    ]
  },
  {
    "sha": "896899e0d66e25f6549a92749d237c8a87b12f08",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTY4OTllMGQ2NmUyNWY2NTQ5YTkyNzQ5ZDIzN2M4YTg3YjEyZjA4",
    "commit": {
      "author": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-06-17T14:21:09Z"
      },
      "committer": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-06-17T19:50:49Z"
      },
      "message": "*Always* send a shutdown signal to enable custom shutdown actions\n\nNOTE: This is required to be sure that we can properly shut down the RPC\n      thread.\n\nSigned-off-by: Giel van Schijndel <me@mortis.eu>",
      "tree": {
        "sha": "20072e7f47ae272f519e82d195a33462b8edf9bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20072e7f47ae272f519e82d195a33462b8edf9bf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/896899e0d66e25f6549a92749d237c8a87b12f08",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/896899e0d66e25f6549a92749d237c8a87b12f08",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/896899e0d66e25f6549a92749d237c8a87b12f08",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/896899e0d66e25f6549a92749d237c8a87b12f08/comments",
    "author": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07368a9e3c60bbef8452501d34bb8d3688cbca13",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07368a9e3c60bbef8452501d34bb8d3688cbca13"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a35d33e14ea8ecba1fd5ae757ddb569f6c3a3bd9",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/896899e0d66e25f6549a92749d237c8a87b12f08/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/896899e0d66e25f6549a92749d237c8a87b12f08/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=896899e0d66e25f6549a92749d237c8a87b12f08",
        "patch": "@@ -2884,8 +2884,7 @@ void ThreadRPCServer2(void* parg)\n     }\n \n     vnThreadsRunning[THREAD_RPCLISTENER]--;\n-    while (!fShutdown)\n-        io_service.run_one();\n+    io_service.run();\n     vnThreadsRunning[THREAD_RPCLISTENER]++;\n \n     // Terminate all outstanding accept-requests"
      },
      {
        "sha": "4e0947a16ac3407ae491d1f020f480eb7e1cdc85",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/896899e0d66e25f6549a92749d237c8a87b12f08/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/896899e0d66e25f6549a92749d237c8a87b12f08/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=896899e0d66e25f6549a92749d237c8a87b12f08",
        "patch": "@@ -9,6 +9,7 @@\n #include \"init.h\"\n #include \"util.h\"\n #include \"ui_interface.h\"\n+#include <boost/bind.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n #include <boost/filesystem/convenience.hpp>\n@@ -40,13 +41,8 @@ void ExitTimeout(void* parg)\n \n void StartShutdown()\n {\n-#ifdef QT_GUI\n     // ensure we leave the Qt main loop for a clean GUI exit (Shutdown() is called in bitcoin.cpp afterwards)\n     uiInterface.QueueShutdown();\n-#else\n-    // Without UI, Shutdown() can simply be started in a new thread\n-    CreateThread(Shutdown, NULL);\n-#endif\n }\n \n void Shutdown(void* parg)\n@@ -154,6 +150,11 @@ bool AppInit(int argc, char* argv[])\n             exit(ret);\n         }\n \n+        // Create the shutdown thread when receiving a shutdown signal\n+        boost::signals2::scoped_connection do_stop(\n+                uiInterface.QueueShutdown.connect(boost::bind(\n+                    &CreateThread, &Shutdown, static_cast<void*>(0), false)));\n+\n         fRet = AppInit2();\n     }\n     catch (std::exception& e) {"
      }
    ]
  },
  {
    "sha": "415a87ef363396fe689ec452a30d36b1752eab2e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTVhODdlZjM2MzM5NmZlNjg5ZWM0NTJhMzBkMzZiMTc1MmVhYjJl",
    "commit": {
      "author": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-06-24T10:34:15Z"
      },
      "committer": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-06-24T10:34:15Z"
      },
      "message": "Merge branch 'master' into async-ipv6-rpc",
      "tree": {
        "sha": "1f68453bf98ac1a4a94394e2792fd3175480cd52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f68453bf98ac1a4a94394e2792fd3175480cd52"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/415a87ef363396fe689ec452a30d36b1752eab2e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/415a87ef363396fe689ec452a30d36b1752eab2e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/415a87ef363396fe689ec452a30d36b1752eab2e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/415a87ef363396fe689ec452a30d36b1752eab2e/comments",
    "author": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "896899e0d66e25f6549a92749d237c8a87b12f08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/896899e0d66e25f6549a92749d237c8a87b12f08",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/896899e0d66e25f6549a92749d237c8a87b12f08"
      },
      {
        "sha": "817ee0d826087d418b5f0bffcdd92429574284e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/817ee0d826087d418b5f0bffcdd92429574284e2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/817ee0d826087d418b5f0bffcdd92429574284e2"
      }
    ],
    "stats": {
      "total": 1103,
      "additions": 898,
      "deletions": 205
    },
    "files": [
      {
        "sha": "275b041d2059ece19e1a4ade74b32654ab3a2c56",
        "filename": "contrib/gitian-downloader/luke-jr-key.pgp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/contrib/gitian-downloader/luke-jr-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/contrib/gitian-downloader/luke-jr-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/luke-jr-key.pgp?ref=415a87ef363396fe689ec452a30d36b1752eab2e"
      },
      {
        "sha": "ffa09bb4ad276c2380686a7e1619d18dce71c8a1",
        "filename": "contrib/gitian-downloader/sipa-key.pgp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/contrib/gitian-downloader/sipa-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/contrib/gitian-downloader/sipa-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/sipa-key.pgp?ref=415a87ef363396fe689ec452a30d36b1752eab2e"
      },
      {
        "sha": "f44b016f22e67ddc3eda187db646def715e3f9a4",
        "filename": "doc/Tor.txt",
        "status": "added",
        "additions": 96,
        "deletions": 0,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/doc/Tor.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/doc/Tor.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Tor.txt?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -0,0 +1,96 @@\n+TOR SUPPORT IN BITCOIN\n+======================\n+\n+It is possible to run Bitcoin as a Tor hidden service, and connect to such services.\n+\n+The following assumes you have a Tor proxy running on port 9050. Many distributions\n+default to having a SOCKS proxy listening on port 9050, but others may not.\n+In particular, the Tor Browser Bundle defaults to listening on a random port. See\n+https://www.torproject.org/docs/faq.html.en#TBBSocksPort for how to properly\n+configure Tor.\n+\n+\n+1. Run bitcoin behind a Tor proxy\n+---------------------------------\n+\n+The first step is running Bitcoin behind a Tor proxy. This will already make all\n+outgoing connections be anonimized, but more is possible.\n+\n+-socks=5        SOCKS5 supports connecting-to-hostname, which can be used instead\n+                of doing a (leaking) local DNS lookup. SOCKS5 is the default,\n+                but SOCKS4 does not support this. (SOCKS4a does, but isn't\n+                implemented).\n+\n+-proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy\n+                server will be used to try to reach .onion addresses as well.\n+\n+-tor=ip:port    Set the proxy server to use for tor hidden services. You do not\n+                need to set this if it's the same as -proxy. You can use -notor\n+                to explicitly disable access to hidden service.\n+\n+-dnsseed        DNS seeds are not resolved directly when a SOCKS5 proxy server is\n+                set. Rather, a short-lived proxy connection to the dns seed\n+                hostname is attempted, and peer addresses are requested.\n+\n+-listen         When using -proxy, listening is disabled by default. If you want\n+                to run a hidden service (see next section), you'll need to enable\n+                it explicitly.\n+\n+-connect=X      When behing a Tor proxy, you can specify .onion addresses instead\n+-addnode=X      of IP addresses or hostnames in these parameters. It requires\n+-seednode=X     SOCKS5. In Tor mode, such addresses can also be exchanged with\n+                other P2P nodes.\n+\n+In a typical situation, this suffices to run behind a Tor proxy:\n+\n+  ./bitcoin -proxy=127.0.0.1:9050\n+\n+\n+2. Run a bitcoin hidden server\n+------------------------------\n+\n+If you configure your Tor system accordingly, it is possible to make your node also\n+reachable from the Tor network. Add these lines to your /etc/tor/torrc (or equivalent\n+config file):\n+\n+  HiddenServiceDir /var/lib/tor/bitcoin-service/\n+  HiddenServicePort 8333 127.0.0.1:8333\n+\n+The directory can be different of course, but (both) 8333's should be equal to your\n+bitcoind's P2P listen port (8333 by default).\n+\n+-externalip=X   You can tell bitcoin about its publically reachable address using\n+                this option, and this can be a .onion address. Given the above\n+                configuration, you can find your onion address in\n+                /var/lib/tor/bitcoin-service/hostname. Onion addresses are given\n+                preference for your node to advertize itself with, for connections\n+                coming from unroutable addresses (such as 127.0.0.1, where the\n+                Tor proxy typically runs).\n+\n+-listen         You'll need to enable listening for incoming connections, as this\n+                is off by default behind a proxy.\n+\n+-discover       When -externalip is specified, no attempt is made to discover local\n+                IPv4 or IPv6 addresses. If you want to run a dual stack, reachable\n+                from both Tor and IPv4 (or IPv6), you'll need to either pass your\n+                other addresses using -externalip, or explicitly enable -discover.\n+                Note that both addresses of a dual-stack system may be easily\n+                linkable using traffic analysis.\n+\n+In a typical situation, where you're only reachable via Tor, this should suffice:\n+\n+  ./bitcoind -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n+\n+(obviously replace the Onion address with your own). If you don't care too much\n+about hiding your node, and want to be reachable on IPv4 as well, additionally\n+specify:\n+\n+  ./bitcoind ... -discover\n+\n+and open port 8333 on your firewall (or use -upnp).\n+\n+If you only want to use Tor to reach onion addresses, but not use it as a proxy\n+for normal IPv4/IPv6 communication, use:\n+\n+  ./bitcoin -tor=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n+"
      },
      {
        "sha": "ad23e6867580968bdb99e909da601e67299ae2f5",
        "filename": "doc/build-msw.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/doc/build-msw.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/doc/build-msw.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-msw.txt?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -7,7 +7,7 @@ cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP\n software written by Thomas Bernard.\n \n \n-See readme-qt.rst for instructions on building Bitcoin QT, the\n+See readme-qt.rst for instructions on building Bitcoin-Qt, the\n graphical user interface.\n \n WINDOWS BUILD NOTES"
      },
      {
        "sha": "24e825ca8cb3295c8d1f0dccaa5bc5ddb88da28d",
        "filename": "doc/build-osx.txt",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/doc/build-osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/doc/build-osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.txt?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -1,28 +1,28 @@\n Copyright (c) 2009-2012 Bitcoin Developers\n-Distributed under the MIT/X11 software license, see the accompanying file\n-license.txt or http://www.opensource.org/licenses/mit-license.php.  This\n-product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit (http://www.openssl.org/).  This product includes cryptographic\n-software written by Eric Young (eay@cryptsoft.com) and UPnP software written by\n-Thomas Bernard.\n+Distributed under the MIT/X11 software license, see the accompanying\n+file license.txt or http://www.opensource.org/licenses/mit-license.php.\n+This product includes software developed by the OpenSSL Project for use in\n+the OpenSSL Toolkit (http://www.openssl.org/).  This product includes\n+cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP\n+software written by Thomas Bernard.\n \n \n Mac OS X bitcoind build instructions\n Laszlo Hanyecz <solar@heliacal.net>\n Douglas Huff <dhuff@jrbobdobbs.org>\n \n \n-See readme-qt.rst for instructions on building Bitcoin QT, the\n+See readme-qt.rst for instructions on building Bitcoin-Qt, the\n graphical user interface.\n \n-Tested on 10.5 and 10.6 intel.  PPC is not supported because it's big-endian.\n+Tested on 10.5, 10.6 and 10.7 intel.  PPC is not supported because it's big-endian.\n \n All of the commands should be executed in Terminal.app.. it's in\n /Applications/Utilities\n \n You need to install XCode with all the options checked so that the compiler and\n-everything is available in /usr not just /Developer I think it comes on the DVD\n-but you can get the current version from http://developer.apple.com\n+everything is available in /usr not just /Developer. XCode should be available on your OS X\n+install DVD, but if not, you can get the current version from https://developer.apple.com/xcode/\n \n \n 1.  Clone the github tree to get the source code:"
      },
      {
        "sha": "825491bba34be2902a282d714f3330bf7ccbf5f2",
        "filename": "doc/build-unix.txt",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/doc/build-unix.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/doc/build-unix.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.txt?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -16,8 +16,8 @@ To Build\n cd src/\n make -f makefile.unix            # Headless bitcoin\n \n-See readme-qt.rst for instructions on building Bitcoin QT,\n-the graphical bitcoin.\n+See readme-qt.rst for instructions on building Bitcoin-Qt,\n+the graphical user interface.\n \n Dependencies\n ------------"
      },
      {
        "sha": "9af934051a2b074d1ecce508f77a1766a210ceeb",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 18,
        "deletions": 4,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -122,16 +122,30 @@ class CBigNum : public BIGNUM\n             return (n > (unsigned long)std::numeric_limits<int>::max() ? std::numeric_limits<int>::min() : -(int)n);\n     }\n \n-    void setint64(int64 n)\n+    void setint64(int64 sn)\n     {\n-        unsigned char pch[sizeof(n) + 6];\n+        unsigned char pch[sizeof(sn) + 6];\n         unsigned char* p = pch + 4;\n-        bool fNegative = false;\n-        if (n < (int64)0)\n+        bool fNegative;\n+        uint64 n;\n+\n+        if (sn < (int64)0)\n         {\n+            // We negate in 2 steps to avoid signed subtraction overflow,\n+            // i.e. -(-2^63), which is an undefined operation and causes SIGILL\n+            // when compiled with -ftrapv.\n+            //\n+            // Note that uint64_t n = sn, when sn is an int64_t, is a\n+            // well-defined operation and n will be equal to sn + 2^64 when sn\n+            // is negative.\n+            n = sn;\n             n = -n;\n             fNegative = true;\n+        } else {\n+            n = sn;\n+            fNegative = false;\n         }\n+\n         bool fLeadingZeroes = true;\n         for (int i = 0; i < 8; i++)\n         {"
      },
      {
        "sha": "25ff6c1e5fa9506e5f7d7da1e2b75517029a6746",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -2198,6 +2198,23 @@ Value getmemorypool(const Array& params, bool fHelp)\n     }\n }\n \n+Value getrawmempool(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"getrawmempool\\n\"\n+            \"Returns all transaction ids in memory pool.\");\n+\n+    vector<uint256> vtxid;\n+    mempool.queryHashes(vtxid);\n+\n+    Array a;\n+    BOOST_FOREACH(const uint256& hash, vtxid)\n+        a.push_back(hash.ToString());\n+\n+    return a;\n+}\n+\n Value getblockhash(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n@@ -2321,6 +2338,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"sendfrom\",               &sendfrom,               false },\n     { \"sendmany\",               &sendmany,               false },\n     { \"addmultisigaddress\",     &addmultisigaddress,     false },\n+    { \"getrawmempool\",          &getrawmempool,          true },\n     { \"getblock\",               &getblock,               false },\n     { \"getblockhash\",           &getblockhash,           false },\n     { \"gettransaction\",         &gettransaction,         false },"
      },
      {
        "sha": "ecdf32a8f02fddb6f0921217c4a698be47094592",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 60,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -404,66 +404,6 @@ bool CTxDB::ContainsTx(uint256 hash)\n     return Exists(make_pair(string(\"tx\"), hash));\n }\n \n-bool CTxDB::ReadOwnerTxes(uint160 hash160, int nMinHeight, vector<CTransaction>& vtx)\n-{\n-    assert(!fClient);\n-    vtx.clear();\n-\n-    // Get cursor\n-    Dbc* pcursor = GetCursor();\n-    if (!pcursor)\n-        return false;\n-\n-    unsigned int fFlags = DB_SET_RANGE;\n-    loop\n-    {\n-        // Read next record\n-        CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n-        if (fFlags == DB_SET_RANGE)\n-            ssKey << string(\"owner\") << hash160 << CDiskTxPos(0, 0, 0);\n-        CDataStream ssValue(SER_DISK, CLIENT_VERSION);\n-        int ret = ReadAtCursor(pcursor, ssKey, ssValue, fFlags);\n-        fFlags = DB_NEXT;\n-        if (ret == DB_NOTFOUND)\n-            break;\n-        else if (ret != 0)\n-        {\n-            pcursor->close();\n-            return false;\n-        }\n-\n-        // Unserialize\n-        string strType;\n-        uint160 hashItem;\n-        CDiskTxPos pos;\n-        int nItemHeight;\n-\n-        try {\n-            ssKey >> strType >> hashItem >> pos;\n-            ssValue >> nItemHeight;\n-        }\n-        catch (std::exception &e) {\n-            return error(\"%s() : deserialize error\", __PRETTY_FUNCTION__);\n-        }\n-\n-        // Read transaction\n-        if (strType != \"owner\" || hashItem != hash160)\n-            break;\n-        if (nItemHeight >= nMinHeight)\n-        {\n-            vtx.resize(vtx.size()+1);\n-            if (!vtx.back().ReadFromDisk(pos))\n-            {\n-                pcursor->close();\n-                return false;\n-            }\n-        }\n-    }\n-\n-    pcursor->close();\n-    return true;\n-}\n-\n bool CTxDB::ReadDiskTx(uint256 hash, CTransaction& tx, CTxIndex& txindex)\n {\n     assert(!fClient);"
      },
      {
        "sha": "1030a40c4855e983818cfabc226065dcd7c67a22",
        "filename": "src/db.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.h?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -307,7 +307,6 @@ class CTxDB : public CDB\n     bool AddTxIndex(const CTransaction& tx, const CDiskTxPos& pos, int nHeight);\n     bool EraseTxIndex(const CTransaction& tx);\n     bool ContainsTx(uint256 hash);\n-    bool ReadOwnerTxes(uint160 hash160, int nHeight, std::vector<CTransaction>& vtx);\n     bool ReadDiskTx(uint256 hash, CTransaction& tx, CTxIndex& txindex);\n     bool ReadDiskTx(uint256 hash, CTransaction& tx);\n     bool ReadDiskTx(COutPoint outpoint, CTransaction& tx, CTxIndex& txindex);"
      },
      {
        "sha": "34a8509b84640567f8fa18413ccb06a7f339fc88",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 4,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -223,19 +223,20 @@ std::string HelpMessage()\n         \"  -timeout=<n>           \" + _(\"Specify connection timeout (in milliseconds)\") + \"\\n\" +\n         \"  -proxy=<ip:port>       \" + _(\"Connect through socks proxy\") + \"\\n\" +\n         \"  -socks=<n>             \" + _(\"Select the version of socks proxy to use (4-5, default: 5)\") + \"\\n\" +\n+        \"  -tor=<ip:port>         \" + _(\"Use proxy to reach tor hidden services (default: same as -proxy)\") + \"\\n\"\n         \"  -dns                   \" + _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \"\\n\" +\n         \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\" +\n         \"  -maxconnections=<n>    \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\" +\n         \"  -addnode=<ip>          \" + _(\"Add a node to connect to and attempt to keep the connection open\") + \"\\n\" +\n         \"  -connect=<ip>          \" + _(\"Connect only to the specified node(s)\") + \"\\n\" +\n         \"  -seednode=<ip>         \" + _(\"Connect to a node to retrieve peer addresses, and disconnect\") + \"\\n\" +\n         \"  -externalip=<ip>       \" + _(\"Specify your own public address\") + \"\\n\" +\n-        \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4 or IPv6)\") + \"\\n\" +\n+        \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\") + \"\\n\" +\n         \"  -discover              \" + _(\"Discover own IP address (default: 1 when listening and no -externalip)\") + \"\\n\" +\n         \"  -irc                   \" + _(\"Find peers using internet relay chat (default: 0)\") + \"\\n\" +\n         \"  -listen                \" + _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\") + \"\\n\" +\n         \"  -bind=<addr>           \" + _(\"Bind to given address. Use [host]:port notation for IPv6\") + \"\\n\" +\n-        \"  -dnsseed               \" + _(\"Find peers using DNS lookup (default: 1)\") + \"\\n\" +\n+        \"  -dnsseed               \" + _(\"Find peers using DNS lookup (default: 1 unless -connect)\") + \"\\n\" +\n         \"  -banscore=<n>          \" + _(\"Threshold for disconnecting misbehaving peers (default: 100)\") + \"\\n\" +\n         \"  -bantime=<n>           \" + _(\"Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\") + \"\\n\" +\n         \"  -maxreceivebuffer=<n>  \" + _(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: 10000)\") + \"\\n\" +\n@@ -345,7 +346,7 @@ bool AppInit2()\n         SoftSetBoolArg(\"-listen\", false);\n     }\n \n-    if (GetBoolArg(\"-listen\", true)) {\n+    if (!GetBoolArg(\"-listen\", true)) {\n         // do not map ports or try to retrieve public IP when not listening (pointless)\n         SoftSetBoolArg(\"-upnp\", false);\n         SoftSetBoolArg(\"-discover\", false);\n@@ -359,6 +360,13 @@ bool AppInit2()\n     // ********************************************************* Step 3: parameter-to-internal-flags\n \n     fDebug = GetBoolArg(\"-debug\");\n+\n+    // -debug implies fDebug*\n+    if (fDebug)\n+        fDebugNet = true;\n+    else\n+        fDebugNet = GetBoolArg(\"-debugnet\");\n+\n     bitdb.SetDetach(GetBoolArg(\"-detachdb\", false));\n \n #if !defined(WIN32) && !defined(QT_GUI)\n@@ -470,8 +478,10 @@ bool AppInit2()\n         }\n     }\n \n+    CService addrProxy;\n+    bool fProxy = false;\n     if (mapArgs.count(\"-proxy\")) {\n-        CService addrProxy = CService(mapArgs[\"-proxy\"], 9050);\n+        addrProxy = CService(mapArgs[\"-proxy\"], 9050);\n         if (!addrProxy.IsValid())\n             return InitError(strprintf(_(\"Invalid -proxy address: '%s'\"), mapArgs[\"-proxy\"].c_str()));\n \n@@ -484,6 +494,20 @@ bool AppInit2()\n #endif\n             SetNameProxy(addrProxy, nSocksVersion);\n         }\n+        fProxy = true;\n+    }\n+\n+    // -tor can override normal proxy, -notor disables tor entirely\n+    if (!(mapArgs.count(\"-tor\") && mapArgs[\"-tor\"] == \"0\") && (fProxy || mapArgs.count(\"-tor\"))) {\n+        CService addrOnion;\n+        if (!mapArgs.count(\"-tor\"))\n+            addrOnion = addrProxy;\n+        else\n+            addrOnion = CService(mapArgs[\"-tor\"], 9050);\n+        if (!addrOnion.IsValid())\n+            return InitError(strprintf(_(\"Invalid -tor address: '%s'\"), mapArgs[\"-tor\"].c_str()));\n+        SetProxy(NET_TOR, addrOnion, 5);\n+        SetReachable(NET_TOR);\n     }\n \n     // see Step 2: parameter interactions for more information about these"
      },
      {
        "sha": "c943a38ea61c40ec04f50431a662e3b94e9b7fc0",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -129,6 +129,8 @@ void CKey::SetCompressedPubKey()\n void CKey::Reset()\n {\n     fCompressedPubKey = false;\n+    if (pkey != NULL)\n+        EC_KEY_free(pkey);\n     pkey = EC_KEY_new_by_curve_name(NID_secp256k1);\n     if (pkey == NULL)\n         throw key_error(\"CKey::CKey() : EC_KEY_new_by_curve_name failed\");\n@@ -137,6 +139,7 @@ void CKey::Reset()\n \n CKey::CKey()\n {\n+    pkey = NULL;\n     Reset();\n }\n "
      },
      {
        "sha": "b46866221f5bbfd8d9e2c748dc89df8a4e1b0e40",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 8,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -180,8 +180,8 @@ bool AddOrphanTx(const CDataStream& vMsg)\n     // at most 500 megabytes of orphans:\n     if (pvMsg->size() > 5000)\n     {\n-        delete pvMsg;\n         printf(\"ignoring large orphan tx (size: %u, hash: %s)\\n\", pvMsg->size(), hash.ToString().substr(0,10).c_str());\n+        delete pvMsg;\n         return false;\n     }\n \n@@ -652,7 +652,15 @@ bool CTxMemPool::remove(CTransaction &tx)\n     return true;\n }\n \n+void CTxMemPool::queryHashes(std::vector<uint256>& vtxid)\n+{\n+    vtxid.clear();\n \n+    LOCK(cs);\n+    vtxid.reserve(mapTx.size());\n+    for (map<uint256, CTransaction>::iterator mi = mapTx.begin(); mi != mapTx.end(); ++mi)\n+        vtxid.push_back((*mi).first);\n+}\n \n \n \n@@ -1317,8 +1325,7 @@ bool CBlock::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex)\n     // This logic is not necessary for memory pool transactions, as AcceptToMemoryPool\n     // already refuses previously-known transaction id's entirely.\n     // This rule applies to all blocks whose timestamp is after March 15, 2012, 0:00 UTC.\n-    // On testnet it is enabled as of februari 20, 2012, 0:00 UTC.\n-    if (pindex->nTime > 1331769600 || (fTestNet && pindex->nTime > 1329696000))\n+    if (pindex->nTime > 1331769600)\n     {\n         BOOST_FOREACH(CTransaction& tx, vtx)\n         {\n@@ -1332,8 +1339,8 @@ bool CBlock::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex)\n         }\n     }\n \n-    // BIP16 didn't become active until Apr 1 2012 (Feb 15 on testnet)\n-    int64 nBIP16SwitchTime = fTestNet ? 1329264000 : 1333238400;\n+    // BIP16 didn't become active until Apr 1 2012\n+    int64 nBIP16SwitchTime = 1333238400;\n     bool fStrictPayToScriptHash = (pindex->nTime >= nBIP16SwitchTime);\n \n     //// issue here: it doesn't know the version\n@@ -2419,7 +2426,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n \n         pfrom->fSuccessfullyConnected = true;\n \n-        printf(\"version message: version %d, blocks=%d\\n\", pfrom->nVersion, pfrom->nStartingHeight);\n+        printf(\"receive version message: version %d, blocks=%d, us=%s, them=%s, peer=%s\\n\", pfrom->nVersion, pfrom->nStartingHeight, addrMe.ToString().c_str(), addrFrom.ToString().c_str(), pfrom->addr.ToString().c_str());\n \n         cPeerBlockCounts.input(pfrom->nStartingHeight);\n     }\n@@ -2475,7 +2482,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n                     static uint256 hashSalt;\n                     if (hashSalt == 0)\n                         hashSalt = GetRandHash();\n-                    int64 hashAddr = addr.GetHash();\n+                    uint64 hashAddr = addr.GetHash();\n                     uint256 hashRand = hashSalt ^ (hashAddr<<32) ^ ((GetTime()+hashAddr)/(24*60*60));\n                     hashRand = Hash(BEGIN(hashRand), END(hashRand));\n                     multimap<uint256, CNode*> mapMix;\n@@ -3143,7 +3150,8 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n             const CInv& inv = (*pto->mapAskFor.begin()).second;\n             if (!AlreadyHave(txdb, inv))\n             {\n-                printf(\"sending getdata: %s\\n\", inv.ToString().c_str());\n+                if (fDebugNet)\n+                    printf(\"sending getdata: %s\\n\", inv.ToString().c_str());\n                 vGetData.push_back(inv);\n                 if (vGetData.size() >= 1000)\n                 {"
      },
      {
        "sha": "bb094ad3c71723dfa6048e8c73e1c549149f8a30",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -1604,6 +1604,7 @@ class CTxMemPool\n                 bool fCheckInputs, bool* pfMissingInputs);\n     bool addUnchecked(CTransaction &tx);\n     bool remove(CTransaction &tx);\n+    void queryHashes(std::vector<uint256>& vtxid);\n \n     unsigned long size()\n     {"
      },
      {
        "sha": "a52735182d5fb921a9291644c7ad65e9603cf579",
        "filename": "src/mruset.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/mruset.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/mruset.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mruset.h?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -51,7 +51,7 @@ template <typename T> class mruset\n     size_type max_size(size_type s)\n     {\n         if (s)\n-            while (queue.size() >= s)\n+            while (queue.size() > s)\n             {\n                 set.erase(queue.front());\n                 queue.pop_front();"
      },
      {
        "sha": "77fd334ee47fb40566b0f5d77c7b26d1d9912217",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -206,6 +206,14 @@ void static AdvertizeLocal()\n     }\n }\n \n+void SetReachable(enum Network net, bool fFlag)\n+{\n+    LOCK(cs_mapLocalHost);\n+    vfReachable[net] = fFlag;\n+    if (net == NET_IPV6 && fFlag)\n+        vfReachable[NET_IPV4] = true;\n+}\n+\n // learn a new local address\n bool AddLocal(const CService& addr, int nScore)\n {\n@@ -228,9 +236,7 @@ bool AddLocal(const CService& addr, int nScore)\n             info.nScore = nScore;\n             info.nPort = addr.GetPort() + (fAlready ? 1 : 0);\n         }\n-        enum Network net = addr.GetNetwork();\n-        vfReachable[net] = true;\n-        if (net == NET_IPV6) vfReachable[NET_IPV4] = true;\n+        SetReachable(addr.GetNetwork());\n     }\n \n     AdvertizeLocal();\n@@ -543,6 +549,7 @@ void CNode::PushVersion()\n     CAddress addrYou = (addr.IsRoutable() && !IsProxy(addr) ? addr : CAddress(CService(\"0.0.0.0\",0)));\n     CAddress addrMe = GetLocalAddress(&addr);\n     RAND_bytes((unsigned char*)&nLocalHostNonce, sizeof(nLocalHostNonce));\n+    printf(\"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%s\\n\", PROTOCOL_VERSION, nBestHeight, addrMe.ToString().c_str(), addrYou.ToString().c_str(), addr.ToString().c_str());\n     PushMessage(\"version\", PROTOCOL_VERSION, nLocalServices, nTime, addrYou, addrMe,\n                 nLocalHostNonce, FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, std::vector<string>()), nBestHeight);\n }"
      },
      {
        "sha": "29b116eb3befcf6cc0d7963b61dccb65447fd5fb",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -64,6 +64,7 @@ bool SeenLocal(const CService& addr);\n bool IsLocal(const CService& addr);\n bool GetLocal(CService &addr, const CNetAddr *paddrPeer = NULL);\n bool IsReachable(const CNetAddr &addr);\n+void SetReachable(enum Network net, bool fFlag = true);\n CAddress GetLocalAddress(const CNetAddr *paddrPeer = NULL);\n \n \n@@ -296,7 +297,8 @@ class CNode\n         // We're using mapAskFor as a priority queue,\n         // the key is the earliest time the request can be sent\n         int64& nRequestTime = mapAlreadyAskedFor[inv];\n-        printf(\"askfor %s   %\"PRI64d\"\\n\", inv.ToString().c_str(), nRequestTime);\n+        if (fDebugNet)\n+            printf(\"askfor %s   %\"PRI64d\"\\n\", inv.ToString().c_str(), nRequestTime);\n \n         // Make sure not to reuse time indexes to keep things in the same order\n         int64 nNow = (GetTime() - 1) * 1000000;"
      },
      {
        "sha": "aa767cd3eb2555690bba3d33bdc9967e2ab5de63",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 163,
        "deletions": 78,
        "changes": 241,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -33,9 +33,39 @@ enum Network ParseNetwork(std::string net) {\n     return NET_UNROUTABLE;\n }\n \n+void SplitHostPort(std::string in, int &portOut, std::string &hostOut) {\n+    size_t colon = in.find_last_of(':');\n+    // if a : is found, and it either follows a [...], or no other : is in the string, treat it as port separator\n+    bool fHaveColon = colon != in.npos;\n+    bool fBracketed = fHaveColon && (in[0]=='[' && in[colon-1]==']'); // if there is a colon, and in[0]=='[', colon is not 0, so in[colon-1] is safe\n+    bool fMultiColon = fHaveColon && (in.find_last_of(':',colon-1) != in.npos);\n+    if (fHaveColon && (colon==0 || fBracketed || !fMultiColon)) {\n+        char *endp = NULL;\n+        int n = strtol(in.c_str() + colon + 1, &endp, 10);\n+        if (endp && *endp == 0 && n >= 0) {\n+            in = in.substr(0, colon);\n+            if (n > 0 && n < 0x10000)\n+                portOut = n;\n+        }\n+    }\n+    if (in.size()>0 && in[0] == '[' && in[in.size()-1] == ']')\n+        hostOut = in.substr(1, in.size()-2);\n+    else\n+        hostOut = in;\n+}\n+\n bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup)\n {\n     vIP.clear();\n+\n+    {\n+        CNetAddr addr;\n+        if (addr.SetSpecial(std::string(pszName))) {\n+            vIP.push_back(addr);\n+            return true;\n+        }\n+    }\n+\n     struct addrinfo aiHint;\n     memset(&aiHint, 0, sizeof(struct addrinfo));\n \n@@ -44,19 +74,17 @@ bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsign\n #ifdef WIN32\n #  ifdef USE_IPV6\n     aiHint.ai_family = AF_UNSPEC;\n-    aiHint.ai_flags = fAllowLookup ? 0 : AI_NUMERICHOST;\n #  else\n     aiHint.ai_family = AF_INET;\n-    aiHint.ai_flags = fAllowLookup ? 0 : AI_NUMERICHOST;\n #  endif\n+    aiHint.ai_flags = fAllowLookup ? 0 : AI_NUMERICHOST;\n #else\n #  ifdef USE_IPV6\n     aiHint.ai_family = AF_UNSPEC;\n-    aiHint.ai_flags = AI_ADDRCONFIG | (fAllowLookup ? 0 : AI_NUMERICHOST);\n #  else\n     aiHint.ai_family = AF_INET;\n-    aiHint.ai_flags = AI_ADDRCONFIG | (fAllowLookup ? 0 : AI_NUMERICHOST);\n #  endif\n+    aiHint.ai_flags = fAllowLookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n #endif\n     struct addrinfo *aiRes = NULL;\n     int nErr = getaddrinfo(pszName, NULL, &aiHint, &aiRes);\n@@ -114,36 +142,11 @@ bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault,\n     if (pszName[0] == 0)\n         return false;\n     int port = portDefault;\n-    char psz[256];\n-    char *pszHost = psz;\n-    strlcpy(psz, pszName, sizeof(psz));\n-    char* pszColon = strrchr(psz+1,':');\n-    char *pszPortEnd = NULL;\n-    int portParsed = pszColon ? strtoul(pszColon+1, &pszPortEnd, 10) : 0;\n-    if (pszColon && pszPortEnd && pszPortEnd[0] == 0)\n-    {\n-        if (psz[0] == '[' && pszColon[-1] == ']')\n-        {\n-            pszHost = psz+1;\n-            pszColon[-1] = 0;\n-        }\n-        else\n-            pszColon[0] = 0;\n-        if (port >= 0 && port <= USHRT_MAX)\n-            port = portParsed;\n-    }\n-    else\n-    {\n-        if (psz[0] == '[' && psz[strlen(psz)-1] == ']')\n-        {\n-            pszHost = psz+1;\n-            psz[strlen(psz)-1] = 0;\n-        }\n-\n-    }\n+    std::string hostname = \"\";\n+    SplitHostPort(std::string(pszName), port, hostname);\n \n     std::vector<CNetAddr> vIP;\n-    bool fRet = LookupIntern(pszHost, vIP, nMaxSolutions, fAllowLookup);\n+    bool fRet = LookupIntern(hostname.c_str(), vIP, nMaxSolutions, fAllowLookup);\n     if (!fRet)\n         return false;\n     vAddr.resize(vIP.size());\n@@ -496,22 +499,9 @@ bool ConnectSocket(const CService &addrDest, SOCKET& hSocketRet, int nTimeout)\n \n bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault, int nTimeout)\n {\n-    string strDest(pszDest);\n+    string strDest;\n     int port = portDefault;\n-\n-    // split hostname and port\n-    size_t colon = strDest.find_last_of(':');\n-    if (colon != strDest.npos) {\n-        char *endp = NULL;\n-        int n = strtol(pszDest + colon + 1, &endp, 10);\n-        if (endp && *endp == 0 && n >= 0) {\n-            strDest = strDest.substr(0, colon);\n-            if (n > 0 && n < 0x10000)\n-                port = n;\n-        }\n-    }\n-    if (strDest[0] == '[' && strDest[strDest.size()-1] == ']')\n-        strDest = strDest.substr(1, strDest.size()-2);\n+    SplitHostPort(string(pszDest), port, strDest);\n \n     SOCKET hSocket = INVALID_SOCKET;\n     CService addrResolved(CNetAddr(strDest, fNameLookup && !nameproxyInfo.second), port);\n@@ -549,6 +539,32 @@ void CNetAddr::SetIP(const CNetAddr& ipIn)\n     memcpy(ip, ipIn.ip, sizeof(ip));\n }\n \n+static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+static const unsigned char pchGarliCat[] = {0xFD,0x60,0xDB,0x4D,0xDD,0xB5};\n+\n+bool CNetAddr::SetSpecial(const std::string &strName)\n+{\n+    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n+        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n+        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+            return false;\n+        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n+        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n+            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        return true;\n+    }\n+    if (strName.size()>11 && strName.substr(strName.size() - 11, 11) == \".oc.b32.i2p\") {\n+        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 11).c_str());\n+        if (vchAddr.size() != 16-sizeof(pchGarliCat))\n+            return false;\n+        memcpy(ip, pchOnionCat, sizeof(pchGarliCat));\n+        for (unsigned int i=0; i<16-sizeof(pchGarliCat); i++)\n+            ip[i + sizeof(pchGarliCat)] = vchAddr[i];\n+        return true;\n+    }\n+    return false;\n+}\n+\n CNetAddr::CNetAddr()\n {\n     Init();\n@@ -595,7 +611,7 @@ bool CNetAddr::IsIPv4() const\n \n bool CNetAddr::IsIPv6() const\n {\n-    return (!IsIPv4());\n+    return (!IsIPv4() && !IsTor() && !IsI2P());\n }\n \n bool CNetAddr::IsRFC1918() const\n@@ -654,15 +670,13 @@ bool CNetAddr::IsRFC4843() const\n     return (GetByte(15) == 0x20 && GetByte(14) == 0x01 && GetByte(13) == 0x00 && (GetByte(12) & 0xF0) == 0x10);\n }\n \n-bool CNetAddr::IsOnionCat() const\n+bool CNetAddr::IsTor() const\n {\n-    static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n     return (memcmp(ip, pchOnionCat, sizeof(pchOnionCat)) == 0);\n }\n \n-bool CNetAddr::IsGarliCat() const\n+bool CNetAddr::IsI2P() const\n {\n-    static const unsigned char pchGarliCat[] = {0xFD,0x60,0xDB,0x4D,0xDD,0xB5};\n     return (memcmp(ip, pchGarliCat, sizeof(pchGarliCat)) == 0);\n }\n \n@@ -724,7 +738,7 @@ bool CNetAddr::IsValid() const\n \n bool CNetAddr::IsRoutable() const\n {\n-    return IsValid() && !(IsRFC1918() || IsRFC3927() || IsRFC4862() || (IsRFC4193() && !IsOnionCat() && !IsGarliCat()) || IsRFC4843() || IsLocal());\n+    return IsValid() && !(IsRFC1918() || IsRFC3927() || IsRFC4862() || (IsRFC4193() && !IsTor() && !IsI2P()) || IsRFC4843() || IsLocal());\n }\n \n enum Network CNetAddr::GetNetwork() const\n@@ -735,17 +749,21 @@ enum Network CNetAddr::GetNetwork() const\n     if (IsIPv4())\n         return NET_IPV4;\n \n-    if (IsOnionCat())\n+    if (IsTor())\n         return NET_TOR;\n \n-    if (IsGarliCat())\n+    if (IsI2P())\n         return NET_I2P;\n \n     return NET_IPV6;\n }\n \n std::string CNetAddr::ToStringIP() const\n {\n+    if (IsTor())\n+        return EncodeBase32(&ip[6], 10) + \".onion\";\n+    if (IsI2P())\n+        return EncodeBase32(&ip[6], 10) + \".oc.b32.i2p\";\n     CService serv(*this, 0);\n #ifdef USE_IPV6\n     struct sockaddr_storage sockaddr;\n@@ -758,7 +776,7 @@ std::string CNetAddr::ToStringIP() const\n         if (!getnameinfo((const struct sockaddr*)&sockaddr, socklen, name, sizeof(name), NULL, 0, NI_NUMERICHOST))\n             return std::string(name);\n     }\n-    if (IsIPv4()) \n+    if (IsIPv4())\n         return strprintf(\"%u.%u.%u.%u\", GetByte(3), GetByte(2), GetByte(1), GetByte(0));\n     else\n         return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n@@ -847,6 +865,18 @@ std::vector<unsigned char> CNetAddr::GetGroup() const\n         vchRet.push_back(GetByte(2) ^ 0xFF);\n         return vchRet;\n     }\n+    else if (IsTor())\n+    {\n+        nClass = NET_TOR;\n+        nStartByte = 6;\n+        nBits = 4;\n+    }\n+    else if (IsI2P())\n+    {\n+        nClass = NET_I2P;\n+        nStartByte = 6;\n+        nBits = 4;\n+    }\n     // for he.net, use /36 groups\n     else if (GetByte(15) == 0x20 && GetByte(14) == 0x11 && GetByte(13) == 0x04 && GetByte(12) == 0x70)\n         nBits = 36;\n@@ -867,10 +897,10 @@ std::vector<unsigned char> CNetAddr::GetGroup() const\n     return vchRet;\n }\n \n-int64 CNetAddr::GetHash() const\n+uint64 CNetAddr::GetHash() const\n {\n     uint256 hash = Hash(&ip[0], &ip[16]);\n-    int64 nRet;\n+    uint64 nRet;\n     memcpy(&nRet, &hash, sizeof(nRet));\n     return nRet;\n }\n@@ -880,27 +910,82 @@ void CNetAddr::print() const\n     printf(\"CNetAddr(%s)\\n\", ToString().c_str());\n }\n \n-// for IPv6 partners:        for unknown/Teredo partners:      for IPv4 partners:\n-// 0 - unroutable            // 0 - unroutable                 // 0 - unroutable\n-// 1 - teredo                // 1 - teredo                     // 1 - ipv4\n-// 2 - tunneled ipv6         // 2 - tunneled ipv6\n-// 3 - ipv4                  // 3 - ipv6\n-// 4 - ipv6                  // 4 - ipv4\n+// private extensions to enum Network, only returned by GetExtNetwork,\n+// and only used in GetReachabilityFrom\n+static const int NET_UNKNOWN = NET_MAX + 0;\n+static const int NET_TEREDO  = NET_MAX + 1;\n+int static GetExtNetwork(const CNetAddr *addr)\n+{\n+    if (addr == NULL)\n+        return NET_UNKNOWN;\n+    if (addr->IsRFC4380())\n+        return NET_TEREDO;\n+    return addr->GetNetwork();\n+}\n+\n+/** Calculates a metric for how reachable (*this) is from a given partner */\n int CNetAddr::GetReachabilityFrom(const CNetAddr *paddrPartner) const\n {\n-    if (!IsValid() || !IsRoutable())\n-        return 0;\n-    if (paddrPartner && paddrPartner->IsIPv4())\n-        return IsIPv4() ? 1 : 0;\n-    if (IsRFC4380())\n-        return 1;\n-    if (IsRFC3964() || IsRFC6052())\n-        return 2;\n-    bool fRealIPv6 = paddrPartner && !paddrPartner->IsRFC4380() && paddrPartner->IsValid() && paddrPartner->IsRoutable();\n-    if (fRealIPv6)\n-        return IsIPv4() ? 3 : 4;\n-    else\n-        return IsIPv4() ? 4 : 3;\n+    enum Reachability {\n+        REACH_UNREACHABLE,\n+        REACH_DEFAULT,\n+        REACH_TEREDO,\n+        REACH_IPV6_WEAK,\n+        REACH_IPV4,\n+        REACH_IPV6_STRONG,\n+        REACH_PRIVATE\n+    };\n+\n+    if (!IsRoutable())\n+        return REACH_UNREACHABLE;\n+\n+    int ourNet = GetExtNetwork(this);\n+    int theirNet = GetExtNetwork(paddrPartner);\n+    bool fTunnel = IsRFC3964() || IsRFC6052() || IsRFC6145();\n+\n+    switch(theirNet) {\n+    case NET_IPV4:\n+        switch(ourNet) {\n+        default:       return REACH_DEFAULT;\n+        case NET_IPV4: return REACH_IPV4;\n+        }\n+    case NET_IPV6:\n+        switch(ourNet) {\n+        default:         return REACH_DEFAULT;\n+        case NET_TEREDO: return REACH_TEREDO;\n+        case NET_IPV4:   return REACH_IPV4;\n+        case NET_IPV6:   return fTunnel ? REACH_IPV6_WEAK : REACH_IPV6_STRONG; // only prefer giving our IPv6 address if it's not tunneled\n+        }\n+    case NET_TOR:\n+        switch(ourNet) {\n+        default:         return REACH_DEFAULT;\n+        case NET_IPV4:   return REACH_IPV4; // Tor users can connect to IPv4 as well\n+        case NET_TOR:    return REACH_PRIVATE;\n+        }\n+    case NET_I2P:\n+        switch(ourNet) {\n+        default:         return REACH_DEFAULT;\n+        case NET_I2P:    return REACH_PRIVATE;\n+        }\n+    case NET_TEREDO:\n+        switch(ourNet) {\n+        default:          return REACH_DEFAULT;\n+        case NET_TEREDO:  return REACH_TEREDO;\n+        case NET_IPV6:    return REACH_IPV6_WEAK;\n+        case NET_IPV4:    return REACH_IPV4;\n+        }\n+    case NET_UNKNOWN:\n+    case NET_UNROUTABLE:\n+    default:\n+        switch(ourNet) {\n+        default:          return REACH_DEFAULT;\n+        case NET_TEREDO:  return REACH_TEREDO;\n+        case NET_IPV6:    return REACH_IPV6_WEAK;\n+        case NET_IPV4:    return REACH_IPV4;\n+        case NET_I2P:     return REACH_PRIVATE; // assume connections from unroutable addresses are\n+        case NET_TOR:     return REACH_PRIVATE; // either from Tor/I2P, or don't care about our address\n+        }\n+    }\n }\n \n void CService::Init()\n@@ -1055,7 +1140,7 @@ std::string CService::ToStringPort() const\n \n std::string CService::ToStringIPPort() const\n {\n-    if (IsIPv4()) {\n+    if (IsIPv4() || IsTor() || IsI2P()) {\n         return ToStringIP() + \":\" + ToStringPort();\n     } else {\n         return \"[\" + ToStringIP() + \"]:\" + ToStringPort();"
      },
      {
        "sha": "f097d7f5aeafa8a067258c4dcc6febf769722378",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -25,7 +25,7 @@ enum Network\n     NET_TOR,\n     NET_I2P,\n \n-    NET_MAX\n+    NET_MAX,\n };\n \n extern int nConnectTimeout;\n@@ -44,8 +44,9 @@ class CNetAddr\n         explicit CNetAddr(const std::string &strIp, bool fAllowLookup = false);\n         void Init();\n         void SetIP(const CNetAddr& ip);\n+        bool SetSpecial(const std::string &strName); // for Tor and I2P addresses\n         bool IsIPv4() const;    // IPv4 mapped address (::FFFF:0:0/96, 0.0.0.0/0)\n-        bool IsIPv6() const;    // IPv6 address (not IPv4)\n+        bool IsIPv6() const;    // IPv6 address (not mapped IPv4, not Tor/I2P)\n         bool IsRFC1918() const; // IPv4 private networks (10.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12)\n         bool IsRFC3849() const; // IPv6 documentation address (2001:0DB8::/32)\n         bool IsRFC3927() const; // IPv4 autoconfig (169.254.0.0/16)\n@@ -56,8 +57,8 @@ class CNetAddr\n         bool IsRFC4862() const; // IPv6 autoconfig (FE80::/64)\n         bool IsRFC6052() const; // IPv6 well-known prefix (64:FF9B::/96)\n         bool IsRFC6145() const; // IPv6 IPv4-translated address (::FFFF:0:0:0/96)\n-        bool IsOnionCat() const;\n-        bool IsGarliCat() const;\n+        bool IsTor() const;\n+        bool IsI2P() const;\n         bool IsLocal() const;\n         bool IsRoutable() const;\n         bool IsValid() const;\n@@ -66,7 +67,7 @@ class CNetAddr\n         std::string ToString() const;\n         std::string ToStringIP() const;\n         int GetByte(int n) const;\n-        int64 GetHash() const;\n+        uint64 GetHash() const;\n         bool GetInAddr(struct in_addr* pipv4Addr) const;\n         std::vector<unsigned char> GetGroup() const;\n         int GetReachabilityFrom(const CNetAddr *paddrPartner = NULL) const;\n@@ -133,6 +134,7 @@ class CService : public CNetAddr\n };\n \n enum Network ParseNetwork(std::string net);\n+void SplitHostPort(std::string in, int &portOut, std::string &hostOut);\n bool SetProxy(enum Network net, CService addrProxy, int nSocksVersion = 5);\n bool GetProxy(enum Network net, CService &addrProxy);\n bool IsProxy(const CNetAddr &addr);"
      },
      {
        "sha": "b4e751077e556f7a0b49e8a3e51d94d2e543b156",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -212,7 +212,7 @@ int main(int argc, char *argv[])\n     if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n     {\n         GUIUtil::HelpMessageBox help;\n-        help.exec();\n+        help.showOrPrint();\n         return 1;\n     }\n "
      },
      {
        "sha": "10a1586d4aa12c6a0b8a2944cb024d7a5904ef80",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -70,6 +70,9 @@\n         <iconset resource=\"../bitcoin.qrc\">\n          <normaloff>:/icons/add</normaloff>:/icons/add</iconset>\n        </property>\n+       <property name=\"autoDefault\">\n+        <bool>false</bool>\n+       </property>\n       </widget>\n      </item>\n      <item>\n@@ -93,6 +96,9 @@\n        <property name=\"autoRepeatDelay\">\n         <number>300</number>\n        </property>\n+       <property name=\"autoDefault\">\n+        <bool>false</bool>\n+       </property>\n       </widget>\n      </item>\n      <item>\n@@ -109,6 +115,9 @@\n        </item>\n        <item>\n         <widget class=\"QLabel\" name=\"labelBalance\">\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n+         </property>\n          <property name=\"text\">\n           <string>123.456 BTC</string>\n          </property>"
      },
      {
        "sha": "50ed2eed04de170f0fbb6ee9f927f596afe305af",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -441,15 +441,21 @@ HelpMessageBox::HelpMessageBox(QWidget *parent) :\n     setDetailedText(coreOptions + \"\\n\" + uiOptions);\n }\n \n-void HelpMessageBox::exec()\n+void HelpMessageBox::printToConsole()\n {\n-#if defined(WIN32)\n-    // On windows, show a message box, as there is no stderr in windowed applications\n-    QMessageBox::exec();\n-#else\n     // On other operating systems, the expected action is to print the message to the console.\n     QString strUsage = header + \"\\n\" + coreOptions + \"\\n\" + uiOptions;\n     fprintf(stderr, \"%s\", strUsage.toStdString().c_str());\n+}\n+\n+void HelpMessageBox::showOrPrint()\n+{\n+#if defined(WIN32)\n+        // On windows, show a message box, as there is no stderr/stdout in windowed applications\n+        exec();\n+#else\n+        // On other operating systems, print help text to console\n+        printToConsole();\n #endif\n }\n "
      },
      {
        "sha": "0240695505c91cc3d564f20602081cb0d6bed91e",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -103,7 +103,11 @@ namespace GUIUtil\n     public:\n         HelpMessageBox(QWidget *parent = 0);\n \n-        void exec();\n+        /** Show message box or print help message to standard output, based on operating system. */\n+        void showOrPrint();\n+\n+        /** Print help message to console */\n+        void printToConsole();\n \n     private:\n         QString header;"
      },
      {
        "sha": "07be9c520a676f54d4a3018e0f9cc08fea4603e0",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 9,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -152,7 +152,7 @@ void OverviewPage::setNumTransactions(int count)\n void OverviewPage::setModel(WalletModel *model)\n {\n     this->model = model;\n-    if(model)\n+    if(model && model->getOptionsModel())\n     {\n         // Set up transaction list\n         filter = new TransactionFilterProxy();\n@@ -172,19 +172,25 @@ void OverviewPage::setModel(WalletModel *model)\n         setNumTransactions(model->getNumTransactions());\n         connect(model, SIGNAL(numTransactionsChanged(int)), this, SLOT(setNumTransactions(int)));\n \n-        connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(displayUnitChanged()));\n+        connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n     }\n+\n+    // update the display unit, to not use the default (\"BTC\")\n+    updateDisplayUnit();\n }\n \n-void OverviewPage::displayUnitChanged()\n+void OverviewPage::updateDisplayUnit()\n {\n-    if(!model || !model->getOptionsModel())\n-        return;\n-    if(currentBalance != -1)\n-        setBalance(currentBalance, currentUnconfirmedBalance, currentImmatureBalance);\n+    if(model && model->getOptionsModel())\n+    {\n+        if(currentBalance != -1)\n+            setBalance(currentBalance, currentUnconfirmedBalance, currentImmatureBalance);\n \n-    txdelegate->unit = model->getOptionsModel()->getDisplayUnit();\n-    ui->listTransactions->update();\n+        // Update txdelegate->unit with the current unit\n+        txdelegate->unit = model->getOptionsModel()->getDisplayUnit();\n+\n+        ui->listTransactions->update();\n+    }\n }\n \n void OverviewPage::showOutOfSyncWarning(bool fShow)"
      },
      {
        "sha": "00048cc8f8f8e857076a117873f00e916aa79fbe",
        "filename": "src/qt/overviewpage.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/overviewpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/overviewpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.h?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -44,7 +44,7 @@ public slots:\n     TransactionFilterProxy *filter;\n \n private slots:\n-    void displayUnitChanged();\n+    void updateDisplayUnit();\n     void handleTransactionClicked(const QModelIndex &index);\n };\n "
      },
      {
        "sha": "86c2b01fec3dadce5dfd0485eedbbbb9e6e1a931",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 3,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -46,10 +46,11 @@ void SendCoinsDialog::setModel(WalletModel *model)\n             entry->setModel(model);\n         }\n     }\n-    if(model)\n+    if(model && model->getOptionsModel())\n     {\n         setBalance(model->getBalance(), model->getUnconfirmedBalance(), model->getImmatureBalance());\n         connect(model, SIGNAL(balanceChanged(qint64, qint64, qint64)), this, SLOT(setBalance(qint64, qint64, qint64)));\n+        connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n     }\n }\n \n@@ -202,7 +203,7 @@ SendCoinsEntry *SendCoinsDialog::addEntry()\n     ui->scrollAreaWidgetContents->resize(ui->scrollAreaWidgetContents->sizeHint());\n     QCoreApplication::instance()->processEvents();\n     QScrollBar* bar = ui->scrollArea->verticalScrollBar();\n-    if (bar)\n+    if(bar)\n         bar->setSliderPosition(bar->maximum());\n     return entry;\n }\n@@ -245,7 +246,7 @@ QWidget *SendCoinsDialog::setupTabChain(QWidget *prev)\n \n void SendCoinsDialog::pasteEntry(const SendCoinsRecipient &rv)\n {\n-    if (!fNewRecipientAllowed)\n+    if(!fNewRecipientAllowed)\n         return;\n \n     SendCoinsEntry *entry = 0;\n@@ -289,3 +290,12 @@ void SendCoinsDialog::setBalance(qint64 balance, qint64 unconfirmedBalance, qint\n     int unit = model->getOptionsModel()->getDisplayUnit();\n     ui->labelBalance->setText(BitcoinUnits::formatWithUnit(unit, balance));\n }\n+\n+void SendCoinsDialog::updateDisplayUnit()\n+{\n+    if(model && model->getOptionsModel())\n+    {\n+        // Update labelBalance with the current balance and the current unit\n+        ui->labelBalance->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), model->getBalance()));\n+    }\n+}"
      },
      {
        "sha": "def2f83c302b192a55698d17fd348c83798ef45f",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -47,8 +47,8 @@ public slots:\n \n private slots:\n     void on_sendButton_clicked();\n-\n     void removeEntry(SendCoinsEntry* entry);\n+    void updateDisplayUnit();\n };\n \n #endif // SENDCOINSDIALOG_H"
      },
      {
        "sha": "71891e79cad6de0457ea0be39b1abdcb7eecbfd0",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 4,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -68,6 +68,10 @@ void SendCoinsEntry::on_payTo_textChanged(const QString &address)\n void SendCoinsEntry::setModel(WalletModel *model)\n {\n     this->model = model;\n+\n+    if(model && model->getOptionsModel())\n+        connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n+\n     clear();\n }\n \n@@ -82,10 +86,8 @@ void SendCoinsEntry::clear()\n     ui->addAsLabel->clear();\n     ui->payAmount->clear();\n     ui->payTo->setFocus();\n-    if(model && model->getOptionsModel())\n-    {\n-        ui->payAmount->setDisplayUnit(model->getOptionsModel()->getDisplayUnit());\n-    }\n+    // update the display unit, to not use the default (\"BTC\")\n+    updateDisplayUnit();\n }\n \n void SendCoinsEntry::on_deleteButton_clicked()\n@@ -160,3 +162,11 @@ void SendCoinsEntry::setFocus()\n     ui->payTo->setFocus();\n }\n \n+void SendCoinsEntry::updateDisplayUnit()\n+{\n+    if(model && model->getOptionsModel())\n+    {\n+        // Update payAmount with the current unit\n+        ui->payAmount->setDisplayUnit(model->getOptionsModel()->getDisplayUnit());\n+    }\n+}"
      },
      {
        "sha": "db6cba0d80c8080944f1f080fb68c122be104591",
        "filename": "src/qt/sendcoinsentry.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/sendcoinsentry.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/sendcoinsentry.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.h?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -45,6 +45,7 @@ private slots:\n     void on_payTo_textChanged(const QString &address);\n     void on_addressBookButton_clicked();\n     void on_pasteButton_clicked();\n+    void updateDisplayUnit();\n \n private:\n     Ui::SendCoinsEntry *ui;"
      },
      {
        "sha": "b3e001ea1d24ca67ee9d0adce5a0c1ff45060cc2",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -230,6 +230,8 @@ TransactionTableModel::TransactionTableModel(CWallet* wallet, WalletModel *paren\n     QTimer *timer = new QTimer(this);\n     connect(timer, SIGNAL(timeout()), this, SLOT(updateConfirmations()));\n     timer->start(MODEL_UPDATE_DELAY);\n+\n+    connect(walletModel->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n }\n \n TransactionTableModel::~TransactionTableModel()\n@@ -624,3 +626,8 @@ QModelIndex TransactionTableModel::index(int row, int column, const QModelIndex\n     }\n }\n \n+void TransactionTableModel::updateDisplayUnit()\n+{\n+    // emit dataChanged to update Amount column with the current unit\n+    emit dataChanged(index(0, Amount), index(priv->size()-1, Amount));\n+}"
      },
      {
        "sha": "fd321ce280ec88d69ff00f2844d1c85e07ce78b8",
        "filename": "src/qt/transactiontablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/transactiontablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/qt/transactiontablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.h?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -76,6 +76,7 @@ class TransactionTableModel : public QAbstractTableModel\n public slots:\n     void updateTransaction(const QString &hash, int status);\n     void updateConfirmations();\n+    void updateDisplayUnit();\n \n     friend class TransactionTablePriv;\n };"
      },
      {
        "sha": "fdf3285913817bb9712a50b80d8c2f1769eb4e07",
        "filename": "src/test/base32_tests.cpp",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/test/base32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/test/base32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base32_tests.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -0,0 +1,20 @@\n+#include <boost/test/unit_test.hpp>\n+\n+#include \"util.h\"\n+\n+BOOST_AUTO_TEST_SUITE(base32_tests)\n+\n+BOOST_AUTO_TEST_CASE(base32_testvectors)\n+{\n+    static const std::string vstrIn[]  = {\"\",\"f\",\"fo\",\"foo\",\"foob\",\"fooba\",\"foobar\"};\n+    static const std::string vstrOut[] = {\"\",\"my======\",\"mzxq====\",\"mzxw6===\",\"mzxw6yq=\",\"mzxw6ytb\",\"mzxw6ytboi======\"};\n+    for (unsigned int i=0; i<sizeof(vstrIn)/sizeof(vstrIn[0]); i++)\n+    {\n+        std::string strEnc = EncodeBase32(vstrIn[i]);\n+        BOOST_CHECK(strEnc == vstrOut[i]);\n+        std::string strDec = DecodeBase32(vstrOut[i]);\n+        BOOST_CHECK(strDec == vstrIn[i]);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "8620f81f179d01e5bb51dfbdbf08123a30a973e5",
        "filename": "src/test/bignum_tests.cpp",
        "status": "added",
        "additions": 125,
        "deletions": 0,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/test/bignum_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/test/bignum_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bignum_tests.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -0,0 +1,125 @@\n+#include <boost/test/unit_test.hpp>\n+#include <limits>\n+\n+#include \"bignum.h\"\n+#include \"util.h\"\n+\n+BOOST_AUTO_TEST_SUITE(bignum_tests)\n+\n+// Unfortunately there's no standard way of preventing a function from being\n+// inlined, so we define a macro for it.\n+//\n+// You should use it like this:\n+//   NOINLINE void function() {...}\n+#if defined(__GNUC__)\n+// This also works and will be defined for any compiler implementing gcc\n+// extensions, such as clang and icc.\n+#define NOINLINE __attribute__((noinline))\n+#elif defined(_MSC_VER)\n+#define NOINLINE __declspec(noinline)\n+#else\n+// We give out a warning because it impacts the correctness of one bignum test.\n+#warning You should define NOINLINE for your compiler.\n+#define NOINLINE\n+#endif\n+\n+// For the following test case, it is useful to use additional tools.\n+//\n+// The simplest one to use is the compiler flag -ftrapv, which detects integer\n+// overflows and similar errors. However, due to optimizations and compilers\n+// taking advantage of undefined behavior sometimes it may not actually detect\n+// anything.\n+//\n+// You can also use compiler-based stack protection to possibly detect possible\n+// stack buffer overruns.\n+//\n+// For more accurate diagnostics, you can use an undefined arithmetic operation\n+// detector such as the clang-based tool:\n+//\n+// \"IOC: An Integer Overflow Checker for C/C++\"\n+//\n+// Available at: http://embed.cs.utah.edu/ioc/\n+//\n+// It might also be useful to use Google's AddressSanitizer to detect\n+// stack buffer overruns, which valgrind can't currently detect.\n+\n+// Let's force this code not to be inlined, in order to actually\n+// test a generic version of the function. This increases the chance\n+// that -ftrapv will detect overflows.\n+NOINLINE void mysetint64(CBigNum& num, int64 n)\n+{\n+\tnum.setint64(n);\n+}\n+\n+// For each number, we do 2 tests: one with inline code, then we reset the\n+// value to 0, then the second one with a non-inlined function.\n+BOOST_AUTO_TEST_CASE(bignum_setint64)\n+{\n+    int64 n;\n+\n+    {\n+        n = 0;\n+        CBigNum num(n);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        num.setulong(0);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        mysetint64(num, n);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+    }\n+    {\n+        n = 1;\n+        CBigNum num(n);\n+        BOOST_CHECK(num.ToString() == \"1\");\n+        num.setulong(0);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        mysetint64(num, n);\n+        BOOST_CHECK(num.ToString() == \"1\");\n+    }\n+    {\n+        n = -1;\n+        CBigNum num(n);\n+        BOOST_CHECK(num.ToString() == \"-1\");\n+        num.setulong(0);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        mysetint64(num, n);\n+        BOOST_CHECK(num.ToString() == \"-1\");\n+    }\n+    {\n+        n = 5;\n+        CBigNum num(n);\n+        BOOST_CHECK(num.ToString() == \"5\");\n+        num.setulong(0);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        mysetint64(num, n);\n+        BOOST_CHECK(num.ToString() == \"5\");\n+    }\n+    {\n+        n = -5;\n+        CBigNum num(n);\n+        BOOST_CHECK(num.ToString() == \"-5\");\n+        num.setulong(0);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        mysetint64(num, n);\n+        BOOST_CHECK(num.ToString() == \"-5\");\n+    }\n+    {\n+        n = std::numeric_limits<int64>::min();\n+        CBigNum num(n);\n+        BOOST_CHECK(num.ToString() == \"-9223372036854775808\");\n+        num.setulong(0);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        mysetint64(num, n);\n+        BOOST_CHECK(num.ToString() == \"-9223372036854775808\");\n+    }\n+    {\n+        n = std::numeric_limits<int64>::max();\n+        CBigNum num(n);\n+        BOOST_CHECK(num.ToString() == \"9223372036854775807\");\n+        num.setulong(0);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        mysetint64(num, n);\n+        BOOST_CHECK(num.ToString() == \"9223372036854775807\");\n+    }\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "6bc5e3b99e2d0101ac7d87dc3086382dfec509f9",
        "filename": "src/test/multisig_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/test/multisig_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/test/multisig_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/multisig_tests.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -235,7 +235,7 @@ BOOST_AUTO_TEST_CASE(multisig_Solver1)\n         BOOST_CHECK(ExtractDestinations(s, whichType, addrs, nRequired));\n         BOOST_CHECK(addrs[0] == keyaddr[0]);\n         BOOST_CHECK(addrs[1] == keyaddr[1]);\n-        BOOST_CHECK(nRequired = 1);\n+        BOOST_CHECK(nRequired == 1);\n         BOOST_CHECK(IsMine(keystore, s));\n         BOOST_CHECK(!IsMine(emptykeystore, s));\n         BOOST_CHECK(!IsMine(partialkeystore, s));"
      },
      {
        "sha": "e5a7562d97510188867906b9b414b65c01430b96",
        "filename": "src/test/netbase_tests.cpp",
        "status": "added",
        "additions": 102,
        "deletions": 0,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -0,0 +1,102 @@\n+#include <boost/test/unit_test.hpp>\n+\n+#include <string>\n+#include <vector>\n+\n+#include \"netbase.h\"\n+\n+using namespace std;\n+\n+BOOST_AUTO_TEST_SUITE(netbase_tests)\n+\n+BOOST_AUTO_TEST_CASE(netbase_networks)\n+{\n+    BOOST_CHECK(CNetAddr(\"127.0.0.1\").GetNetwork()                              == NET_UNROUTABLE);\n+    BOOST_CHECK(CNetAddr(\"::1\").GetNetwork()                                    == NET_UNROUTABLE);\n+    BOOST_CHECK(CNetAddr(\"8.8.8.8\").GetNetwork()                                == NET_IPV4);\n+    BOOST_CHECK(CNetAddr(\"2001::8888\").GetNetwork()                             == NET_IPV6);\n+    BOOST_CHECK(CNetAddr(\"FD87:D87E:EB43:edb1:8e4:3588:e546:35ca\").GetNetwork() == NET_TOR);\n+}\n+\n+BOOST_AUTO_TEST_CASE(netbase_properties)\n+{\n+    BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsIPv4());\n+    BOOST_CHECK(CNetAddr(\"::FFFF:192.168.1.1\").IsIPv4());\n+    BOOST_CHECK(CNetAddr(\"::1\").IsIPv6());\n+    BOOST_CHECK(CNetAddr(\"10.0.0.1\").IsRFC1918());\n+    BOOST_CHECK(CNetAddr(\"192.168.1.1\").IsRFC1918());\n+    BOOST_CHECK(CNetAddr(\"172.31.255.255\").IsRFC1918());\n+    BOOST_CHECK(CNetAddr(\"2001:0DB8::\").IsRFC3849());\n+    BOOST_CHECK(CNetAddr(\"169.254.1.1\").IsRFC3927());\n+    BOOST_CHECK(CNetAddr(\"2002::1\").IsRFC3964());\n+    BOOST_CHECK(CNetAddr(\"FC00::\").IsRFC4193());\n+    BOOST_CHECK(CNetAddr(\"2001::2\").IsRFC4380());\n+    BOOST_CHECK(CNetAddr(\"2001:10::\").IsRFC4843());\n+    BOOST_CHECK(CNetAddr(\"FE80::\").IsRFC4862());\n+    BOOST_CHECK(CNetAddr(\"64:FF9B::\").IsRFC6052());\n+    BOOST_CHECK(CNetAddr(\"FD87:D87E:EB43:edb1:8e4:3588:e546:35ca\").IsTor());\n+    BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsLocal());\n+    BOOST_CHECK(CNetAddr(\"::1\").IsLocal());\n+    BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n+    BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n+    BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+}\n+\n+bool static TestSplitHost(string test, string host, int port)\n+{\n+    string hostOut;\n+    int portOut = -1;\n+    SplitHostPort(test, portOut, hostOut);\n+    return hostOut == host && port == portOut;\n+}\n+\n+BOOST_AUTO_TEST_CASE(netbase_splithost)\n+{\n+    BOOST_CHECK(TestSplitHost(\"www.bitcoin.org\", \"www.bitcoin.org\", -1));\n+    BOOST_CHECK(TestSplitHost(\"[www.bitcoin.org]\", \"www.bitcoin.org\", -1));\n+    BOOST_CHECK(TestSplitHost(\"www.bitcoin.org:80\", \"www.bitcoin.org\", 80));\n+    BOOST_CHECK(TestSplitHost(\"[www.bitcoin.org]:80\", \"www.bitcoin.org\", 80));\n+    BOOST_CHECK(TestSplitHost(\"127.0.0.1\", \"127.0.0.1\", -1));\n+    BOOST_CHECK(TestSplitHost(\"127.0.0.1:8333\", \"127.0.0.1\", 8333));\n+    BOOST_CHECK(TestSplitHost(\"[127.0.0.1]\", \"127.0.0.1\", -1));\n+    BOOST_CHECK(TestSplitHost(\"[127.0.0.1]:8333\", \"127.0.0.1\", 8333));\n+    BOOST_CHECK(TestSplitHost(\"::ffff:127.0.0.1\", \"::ffff:127.0.0.1\", -1));\n+    BOOST_CHECK(TestSplitHost(\"[::ffff:127.0.0.1]:8333\", \"::ffff:127.0.0.1\", 8333));\n+    BOOST_CHECK(TestSplitHost(\"[::]:8333\", \"::\", 8333));\n+    BOOST_CHECK(TestSplitHost(\"::8333\", \"::8333\", -1));\n+    BOOST_CHECK(TestSplitHost(\":8333\", \"\", 8333));\n+    BOOST_CHECK(TestSplitHost(\"[]:8333\", \"\", 8333));\n+    BOOST_CHECK(TestSplitHost(\"\", \"\", -1));\n+}\n+\n+bool static TestParse(string src, string canon)\n+{\n+    CService addr;\n+    if (!LookupNumeric(src.c_str(), addr, 65535))\n+        return canon == \"\";\n+    return canon == addr.ToString();\n+}\n+\n+BOOST_AUTO_TEST_CASE(netbase_lookupnumeric)\n+{\n+    BOOST_CHECK(TestParse(\"127.0.0.1\", \"127.0.0.1:65535\"));\n+    BOOST_CHECK(TestParse(\"127.0.0.1:8333\", \"127.0.0.1:8333\"));\n+    BOOST_CHECK(TestParse(\"::ffff:127.0.0.1\", \"127.0.0.1:65535\"));\n+    BOOST_CHECK(TestParse(\"::\", \"[::]:65535\"));\n+    BOOST_CHECK(TestParse(\"[::]:8333\", \"[::]:8333\"));\n+    BOOST_CHECK(TestParse(\"[127.0.0.1]\", \"127.0.0.1:65535\"));\n+    BOOST_CHECK(TestParse(\":::\", \"\"));\n+}\n+\n+BOOST_AUTO_TEST_CASE(onioncat_test)\n+{\n+    // values from http://www.cypherpunk.at/onioncat/wiki/OnionCat\n+    CNetAddr addr1(\"5wyqrzbvrdsumnok.onion\");\n+    CNetAddr addr2(\"FD87:D87E:EB43:edb1:8e4:3588:e546:35ca\");\n+    BOOST_CHECK(addr1 == addr2);\n+    BOOST_CHECK(addr1.IsTor());\n+    BOOST_CHECK(addr1.ToStringIP() == \"5wyqrzbvrdsumnok.onion\");\n+    BOOST_CHECK(addr1.IsRoutable());\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "9d0f9ab34759eead4d83c0863794b38b258667bb",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 188,
        "deletions": 0,
        "changes": 188,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -58,6 +58,7 @@ using namespace std;\n map<string, string> mapArgs;\n map<string, vector<string> > mapMultiArgs;\n bool fDebug = false;\n+bool fDebugNet = false;\n bool fPrintToConsole = false;\n bool fPrintToDebugger = false;\n bool fRequestShutdown = false;\n@@ -702,6 +703,193 @@ string DecodeBase64(const string& str)\n     return string((const char*)&vchRet[0], vchRet.size());\n }\n \n+string EncodeBase32(const unsigned char* pch, size_t len)\n+{\n+    static const char *pbase32 = \"abcdefghijklmnopqrstuvwxyz234567\";\n+\n+    string strRet=\"\";\n+    strRet.reserve((len+4)/5*8);\n+\n+    int mode=0, left=0;\n+    const unsigned char *pchEnd = pch+len;\n+\n+    while (pch<pchEnd)\n+    {\n+        int enc = *(pch++);\n+        switch (mode)\n+        {\n+            case 0: // we have no bits\n+                strRet += pbase32[enc >> 3];\n+                left = (enc & 7) << 2;\n+                mode = 1;\n+                break;\n+\n+            case 1: // we have three bits\n+                strRet += pbase32[left | (enc >> 6)];\n+                strRet += pbase32[(enc >> 1) & 31];\n+                left = (enc & 1) << 4;\n+                mode = 2;\n+                break;\n+\n+            case 2: // we have one bit\n+                strRet += pbase32[left | (enc >> 4)];\n+                left = (enc & 15) << 1;\n+                mode = 3;\n+                break;\n+\n+            case 3: // we have four bits\n+                strRet += pbase32[left | (enc >> 7)];\n+                strRet += pbase32[(enc >> 2) & 31];\n+                left = (enc & 3) << 3;\n+                mode = 4;\n+                break;\n+\n+            case 4: // we have two bits\n+                strRet += pbase32[left | (enc >> 5)];\n+                strRet += pbase32[enc & 31];\n+                mode = 0;\n+        }\n+    }\n+\n+    static const int nPadding[5] = {0, 6, 4, 3, 1};\n+    if (mode)\n+    {\n+        strRet += pbase32[left];\n+        for (int n=0; n<nPadding[mode]; n++)\n+             strRet += '=';\n+    }\n+\n+    return strRet;\n+}\n+\n+string EncodeBase32(const string& str)\n+{\n+    return EncodeBase32((const unsigned char*)str.c_str(), str.size());\n+}\n+\n+vector<unsigned char> DecodeBase32(const char* p, bool* pfInvalid)\n+{\n+    static const int decode32_table[256] =\n+    {\n+        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, -1, -1, -1, -1,\n+        -1, -1, -1, -1, -1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14,\n+        15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1,  0,  1,  2,\n+         3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\n+        23, 24, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1\n+    };\n+\n+    if (pfInvalid)\n+        *pfInvalid = false;\n+\n+    vector<unsigned char> vchRet;\n+    vchRet.reserve((strlen(p))*5/8);\n+\n+    int mode = 0;\n+    int left = 0;\n+\n+    while (1)\n+    {\n+         int dec = decode32_table[(unsigned char)*p];\n+         if (dec == -1) break;\n+         p++;\n+         switch (mode)\n+         {\n+             case 0: // we have no bits and get 5\n+                 left = dec;\n+                 mode = 1;\n+                 break;\n+\n+              case 1: // we have 5 bits and keep 2\n+                  vchRet.push_back((left<<3) | (dec>>2));\n+                  left = dec & 3;\n+                  mode = 2;\n+                  break;\n+\n+             case 2: // we have 2 bits and keep 7\n+                 left = left << 5 | dec;\n+                 mode = 3;\n+                 break;\n+\n+             case 3: // we have 7 bits and keep 4\n+                 vchRet.push_back((left<<1) | (dec>>4));\n+                 left = dec & 15;\n+                 mode = 4;\n+                 break;\n+\n+             case 4: // we have 4 bits, and keep 1\n+                 vchRet.push_back((left<<4) | (dec>>1));\n+                 left = dec & 1;\n+                 mode = 5;\n+                 break;\n+\n+             case 5: // we have 1 bit, and keep 6\n+                 left = left << 5 | dec;\n+                 mode = 6;\n+                 break;\n+\n+             case 6: // we have 6 bits, and keep 3\n+                 vchRet.push_back((left<<2) | (dec>>3));\n+                 left = dec & 7;\n+                 mode = 7;\n+                 break;\n+\n+             case 7: // we have 3 bits, and keep 0\n+                 vchRet.push_back((left<<5) | dec);\n+                 mode = 0;\n+                 break;\n+         }\n+    }\n+\n+    if (pfInvalid)\n+        switch (mode)\n+        {\n+            case 0: // 8n base32 characters processed: ok\n+                break;\n+\n+            case 1: // 8n+1 base32 characters processed: impossible\n+            case 3: //   +3\n+            case 6: //   +6\n+                *pfInvalid = true;\n+                break;\n+\n+            case 2: // 8n+2 base32 characters processed: require '======'\n+                if (left || p[0] != '=' || p[1] != '=' || p[2] != '=' || p[3] != '=' || p[4] != '=' || p[5] != '=' || decode32_table[(unsigned char)p[6]] != -1)\n+                    *pfInvalid = true;\n+                break;\n+\n+            case 4: // 8n+4 base32 characters processed: require '===='\n+                if (left || p[0] != '=' || p[1] != '=' || p[2] != '=' || p[3] != '=' || decode32_table[(unsigned char)p[4]] != -1)\n+                    *pfInvalid = true;\n+                break;\n+\n+            case 5: // 8n+5 base32 characters processed: require '==='\n+                if (left || p[0] != '=' || p[1] != '=' || p[2] != '=' || decode32_table[(unsigned char)p[3]] != -1)\n+                    *pfInvalid = true;\n+                break;\n+\n+            case 7: // 8n+7 base32 characters processed: require '='\n+                if (left || p[0] != '=' || decode32_table[(unsigned char)p[1]] != -1)\n+                    *pfInvalid = true;\n+                break;\n+        }\n+\n+    return vchRet;\n+}\n+\n+string DecodeBase32(const string& str)\n+{\n+    vector<unsigned char> vchRet = DecodeBase32(str.c_str());\n+    return string((const char*)&vchRet[0], vchRet.size());\n+}\n+\n \n bool WildcardMatch(const char* psz, const char* mask)\n {"
      },
      {
        "sha": "7b2c678916a5770b52c98a431d7689d58a6f3d63",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/415a87ef363396fe689ec452a30d36b1752eab2e/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/415a87ef363396fe689ec452a30d36b1752eab2e/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=415a87ef363396fe689ec452a30d36b1752eab2e",
        "patch": "@@ -105,6 +105,7 @@ inline void Sleep(int64 n)\n extern std::map<std::string, std::string> mapArgs;\n extern std::map<std::string, std::vector<std::string> > mapMultiArgs;\n extern bool fDebug;\n+extern bool fDebugNet;\n extern bool fPrintToConsole;\n extern bool fPrintToDebugger;\n extern bool fRequestShutdown;\n@@ -146,6 +147,10 @@ std::vector<unsigned char> DecodeBase64(const char* p, bool* pfInvalid = NULL);\n std::string DecodeBase64(const std::string& str);\n std::string EncodeBase64(const unsigned char* pch, size_t len);\n std::string EncodeBase64(const std::string& str);\n+std::vector<unsigned char> DecodeBase32(const char* p, bool* pfInvalid = NULL);\n+std::string DecodeBase32(const std::string& str);\n+std::string EncodeBase32(const unsigned char* pch, size_t len);\n+std::string EncodeBase32(const std::string& str);\n void ParseParameters(int argc, const char*const argv[]);\n bool WildcardMatch(const char* psz, const char* mask);\n bool WildcardMatch(const std::string& str, const std::string& mask);\n@@ -272,7 +277,7 @@ inline int64 GetPerformanceCounter()\n #else\n     timeval t;\n     gettimeofday(&t, NULL);\n-    nCounter = t.tv_sec * 1000000 + t.tv_usec;\n+    nCounter = (int64) t.tv_sec * 1000000 + t.tv_usec;\n #endif\n     return nCounter;\n }"
      }
    ]
  },
  {
    "sha": "ad25804febcd8fe7d03241e420a8dd5f297aa56b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDI1ODA0ZmViY2Q4ZmU3ZDAzMjQxZTQyMGE4ZGQ1ZjI5N2FhNTZi",
    "commit": {
      "author": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-06-24T11:20:17Z"
      },
      "committer": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-06-24T13:12:15Z"
      },
      "message": "Cancel outstanding listen ops for RPC when shutting down\n\nUse Boost's signal2 slot tracking mechanism to cancel any (still open)\nlistening sockets when receiving a shutdown signal.\n\nSigned-off-by: Giel van Schijndel <me@mortis.eu>",
      "tree": {
        "sha": "78951f499eb56ec6a2bcadc6c128f241847d3a5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/78951f499eb56ec6a2bcadc6c128f241847d3a5c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad25804febcd8fe7d03241e420a8dd5f297aa56b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad25804febcd8fe7d03241e420a8dd5f297aa56b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad25804febcd8fe7d03241e420a8dd5f297aa56b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad25804febcd8fe7d03241e420a8dd5f297aa56b/comments",
    "author": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "415a87ef363396fe689ec452a30d36b1752eab2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/415a87ef363396fe689ec452a30d36b1752eab2e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/415a87ef363396fe689ec452a30d36b1752eab2e"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 26,
      "deletions": 31
    },
    "files": [
      {
        "sha": "8d78b8b00a0abb60cc900e2ed2de62c744d00cbd",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 31,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad25804febcd8fe7d03241e420a8dd5f297aa56b/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad25804febcd8fe7d03241e420a8dd5f297aa56b/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=ad25804febcd8fe7d03241e420a8dd5f297aa56b",
        "patch": "@@ -2741,7 +2741,6 @@ static void RPCListen(boost::shared_ptr< basic_socket_acceptor<Protocol, SocketA\n                    ssl::context& context,\n                    const bool fUseSSL)\n {\n-\n     // Accept connection\n     AcceptedConnectionImpl<Protocol>* conn = new AcceptedConnectionImpl<Protocol>(acceptor->get_io_service(), context, fUseSSL);\n \n@@ -2768,8 +2767,10 @@ static void RPCAcceptHandler(boost::shared_ptr< basic_socket_acceptor<Protocol,\n {\n     vnThreadsRunning[THREAD_RPCLISTENER]++;\n \n-    // Immediately start accepting new connections\n-    RPCListen(acceptor, context, fUseSSL);\n+    // Immediately start accepting new connections, except when we're canceled or our socket is closed.\n+    if (error != error::operation_aborted\n+     && acceptor->is_open())\n+        RPCListen(acceptor, context, fUseSSL);\n \n     AcceptedConnectionImpl<ip::tcp>* tcp_conn = dynamic_cast< AcceptedConnectionImpl<ip::tcp>* >(conn);\n \n@@ -2833,11 +2834,6 @@ void ThreadRPCServer2(void* parg)\n \n     asio::io_service io_service;\n \n-    // Make sure that we'll get stopped when the application shuts down\n-    boost::signals2::scoped_connection rpc_listen_thread_stop(\n-            uiInterface.QueueShutdown.connect(boost::bind(\n-                &asio::io_service::stop, &io_service)));\n-\n     ssl::context context(io_service, ssl::context::sslv23);\n     if (fUseSSL)\n     {\n@@ -2862,35 +2858,42 @@ void ThreadRPCServer2(void* parg)\n     asio::ip::address bindAddress = loopback ? asio::ip::address_v6::loopback() : asio::ip::address_v6::any();\n     ip::tcp::endpoint endpoint(bindAddress, GetArg(\"-rpcport\", 8332));\n \n-    std::list< boost::shared_ptr<ip::tcp::acceptor> > acceptors;\n     try\n     {\n-        acceptors.push_back(boost::shared_ptr<ip::tcp::acceptor>(new ip::tcp::acceptor(io_service)));\n-        acceptors.back()->open(endpoint.protocol());\n-        acceptors.back()->set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));\n+        boost::shared_ptr<ip::tcp::acceptor> acceptor(new ip::tcp::acceptor(io_service));\n+        acceptor->open(endpoint.protocol());\n+        acceptor->set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));\n \n         // Try making the socket dual IPv6/IPv4 (if listening on the \"any\" address)\n         boost::system::error_code v6_only_error;\n-        acceptors.back()->set_option(boost::asio::ip::v6_only(loopback), v6_only_error);\n+        acceptor->set_option(boost::asio::ip::v6_only(loopback), v6_only_error);\n \n-        acceptors.back()->bind(endpoint);\n-        acceptors.back()->listen(socket_base::max_connections);\n+        acceptor->bind(endpoint);\n+        acceptor->listen(socket_base::max_connections);\n \n-        RPCListen(acceptors.back(), context, fUseSSL);\n+        RPCListen(acceptor, context, fUseSSL);\n+        // Cancel outstanding listen-requests for this acceptor when shutting down\n+        uiInterface.QueueShutdown.connect(signals2::slot<void ()>(\n+                    static_cast<void (ip::tcp::acceptor::*)()>(&ip::tcp::acceptor::close), acceptor.get())\n+                .track(acceptor));\n \n         // If dual IPv6/IPv4 failed (or we're opening loopback interfaces only), open IPv4 separately\n         if (loopback || v6_only_error)\n         {\n             bindAddress = loopback ? asio::ip::address_v4::loopback() : asio::ip::address_v4::any();\n             endpoint.address(bindAddress);\n \n-            acceptors.push_back(boost::shared_ptr<ip::tcp::acceptor>(new ip::tcp::acceptor(io_service)));\n-            acceptors.back()->open(endpoint.protocol());\n-            acceptors.back()->set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));\n-            acceptors.back()->bind(endpoint);\n-            acceptors.back()->listen(socket_base::max_connections);\n-\n-            RPCListen(acceptors.back(), context, fUseSSL);\n+            acceptor.reset(new ip::tcp::acceptor(io_service));\n+            acceptor->open(endpoint.protocol());\n+            acceptor->set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));\n+            acceptor->bind(endpoint);\n+            acceptor->listen(socket_base::max_connections);\n+\n+            RPCListen(acceptor, context, fUseSSL);\n+            // Cancel outstanding listen-requests for this acceptor when shutting down\n+            uiInterface.QueueShutdown.connect(signals2::slot<void ()>(\n+                        static_cast<void (ip::tcp::acceptor::*)()>(&ip::tcp::acceptor::close), acceptor.get())\n+                    .track(acceptor));\n         }\n     }\n     catch(boost::system::system_error &e)\n@@ -2904,14 +2907,6 @@ void ThreadRPCServer2(void* parg)\n     vnThreadsRunning[THREAD_RPCLISTENER]--;\n     io_service.run();\n     vnThreadsRunning[THREAD_RPCLISTENER]++;\n-\n-    // Terminate all outstanding accept-requests\n-    BOOST_FOREACH(boost::shared_ptr<ip::tcp::acceptor>& acceptor, acceptors)\n-    {\n-        acceptor->cancel();\n-        acceptor->close();\n-    }\n-    acceptors.clear();\n }\n \n void ThreadRPCServer3(void* parg)"
      }
    ]
  },
  {
    "sha": "5b1462211031934437afef7da1382766c3570770",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YjE0NjIyMTEwMzE5MzQ0MzdhZmVmN2RhMTM4Mjc2NmMzNTcwNzcw",
    "commit": {
      "author": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-06-24T12:16:30Z"
      },
      "committer": {
        "name": "Giel van Schijndel",
        "email": "me@mortis.eu",
        "date": "2012-06-24T13:12:26Z"
      },
      "message": "On Windows link with `mswsock`, it being required (indirectly) by RPC code\n\nSigned-off-by: Giel van Schijndel <me@mortis.eu>",
      "tree": {
        "sha": "7401bb07c1966bcc4111faa94ad4bc502219da8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7401bb07c1966bcc4111faa94ad4bc502219da8f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b1462211031934437afef7da1382766c3570770",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b1462211031934437afef7da1382766c3570770",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5b1462211031934437afef7da1382766c3570770",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b1462211031934437afef7da1382766c3570770/comments",
    "author": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "muggenhor",
      "id": 484066,
      "node_id": "MDQ6VXNlcjQ4NDA2Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/484066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/muggenhor",
      "html_url": "https://github.com/muggenhor",
      "followers_url": "https://api.github.com/users/muggenhor/followers",
      "following_url": "https://api.github.com/users/muggenhor/following{/other_user}",
      "gists_url": "https://api.github.com/users/muggenhor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/muggenhor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/muggenhor/subscriptions",
      "organizations_url": "https://api.github.com/users/muggenhor/orgs",
      "repos_url": "https://api.github.com/users/muggenhor/repos",
      "events_url": "https://api.github.com/users/muggenhor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/muggenhor/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad25804febcd8fe7d03241e420a8dd5f297aa56b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad25804febcd8fe7d03241e420a8dd5f297aa56b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad25804febcd8fe7d03241e420a8dd5f297aa56b"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "430214eaffe9211e86a353c7427036b5219735ac",
        "filename": "bitcoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b1462211031934437afef7da1382766c3570770/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b1462211031934437afef7da1382766c3570770/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=5b1462211031934437afef7da1382766c3570770",
        "patch": "@@ -306,7 +306,7 @@ isEmpty(BOOST_INCLUDE_PATH) {\n     macx:BOOST_INCLUDE_PATH = /opt/local/include\n }\n \n-windows:LIBS += -lws2_32 -lshlwapi\n+windows:LIBS += -lws2_32 -lshlwapi -lmswsock\n windows:DEFINES += WIN32\n windows:RC_FILE = src/qt/res/bitcoin-qt.rc\n "
      },
      {
        "sha": "cd8e97080c1144f486500b547e5ce09511af595e",
        "filename": "src/makefile.linux-mingw",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b1462211031934437afef7da1382766c3570770/src/makefile.linux-mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b1462211031934437afef7da1382766c3570770/src/makefile.linux-mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.linux-mingw?ref=5b1462211031934437afef7da1382766c3570770",
        "patch": "@@ -39,7 +39,7 @@ ifdef USE_UPNP\n \tDEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)\n endif\n \n-LIBS += -l mingwthrd -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l shlwapi\n+LIBS += -l mingwthrd -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock -l shlwapi\n \n # TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are\n HEADERS = $(wildcard *.h)"
      },
      {
        "sha": "919be007b66a99fa37ada0353a63f29351e8a115",
        "filename": "src/makefile.mingw",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b1462211031934437afef7da1382766c3570770/src/makefile.mingw",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b1462211031934437afef7da1382766c3570770/src/makefile.mingw",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.mingw?ref=5b1462211031934437afef7da1382766c3570770",
        "patch": "@@ -36,7 +36,7 @@ ifdef USE_UPNP\n  DEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)\n endif\n \n-LIBS += -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l shlwapi\n+LIBS += -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock -l shlwapi\n \n # TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are\n HEADERS = $(wildcard *.h)"
      }
    ]
  }
]