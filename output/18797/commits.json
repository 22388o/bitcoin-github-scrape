[
  {
    "sha": "3a931ed82ed223fb4fa47b929eafa0f3e4661e09",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYTkzMWVkODJlZDIyM2ZiNGZhNDdiOTI5ZWFmYTBmM2U0NjYxZTA5",
    "commit": {
      "author": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2020-04-28T07:19:33Z"
      },
      "committer": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2020-05-14T09:09:09Z"
      },
      "message": "[policy] Extend bitcoinconsensus library with standard script flags\n\nBitcoinconsensus library makes available consensus script verification\nflags to other applications. Currently this doesn't enable to verify\ntransaction scripts correctness with regards to deployed standard rules.\nA defect of adherance to this set of rules hinders severely transaction\npropagation on the network, and therefore may be a concern if\napplication has a time-sensitive requirement (LN, Atomic Swaps, ...).\n\nExport verify_script_standard_with_amount enforcing standard correctness\nof a spent.",
      "tree": {
        "sha": "4ae69868d92a3716ae3bfcaad8e1cd7dbea1dc0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ae69868d92a3716ae3bfcaad8e1cd7dbea1dc0b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a931ed82ed223fb4fa47b929eafa0f3e4661e09",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a931ed82ed223fb4fa47b929eafa0f3e4661e09",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3a931ed82ed223fb4fa47b929eafa0f3e4661e09",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a931ed82ed223fb4fa47b929eafa0f3e4661e09/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "ac21090f209cb1b8ea6cd5074d5e9c6b82ce2a7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac21090f209cb1b8ea6cd5074d5e9c6b82ce2a7f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac21090f209cb1b8ea6cd5074d5e9c6b82ce2a7f"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 18,
      "deletions": 0
    },
    "files": [
      {
        "sha": "44a5ee3bcd9948b531603e1d007f767a06bdd62a",
        "filename": "src/script/bitcoinconsensus.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3a931ed82ed223fb4fa47b929eafa0f3e4661e09/src/script/bitcoinconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3a931ed82ed223fb4fa47b929eafa0f3e4661e09/src/script/bitcoinconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.cpp?ref=3a931ed82ed223fb4fa47b929eafa0f3e4661e09",
        "patch": "@@ -5,6 +5,7 @@\n \n #include <script/bitcoinconsensus.h>\n \n+#include <policy/policy.h>\n #include <primitives/transaction.h>\n #include <pubkey.h>\n #include <script/interpreter.h>\n@@ -122,6 +123,15 @@ int bitcoinconsensus_verify_script(const unsigned char *scriptPubKey, unsigned i\n     return ::verify_script(scriptPubKey, scriptPubKeyLen, am, txTo, txToLen, nIn, flags, err);\n }\n \n+int bitcoinconsensus_verify_script_standard_with_amount(const unsigned char *scriptPubKey, unsigned int scriptPubKeyLen, int64_t amount,\n+                                    const unsigned char *txTo        , unsigned int txToLen,\n+                                    unsigned int nIn, bitcoinconsensus_error* err)\n+{\n+    CAmount am(amount);\n+    constexpr unsigned int flags = STANDARD_SCRIPT_VERIFY_FLAGS;\n+    return ::verify_script(scriptPubKey, scriptPubKeyLen, am, txTo, txToLen, nIn, flags, err);\n+}\n+\n unsigned int bitcoinconsensus_version()\n {\n     // Just use the API version for now"
      },
      {
        "sha": "a4b12daf11636c31d0b0357c92309260afe2332b",
        "filename": "src/script/bitcoinconsensus.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3a931ed82ed223fb4fa47b929eafa0f3e4661e09/src/script/bitcoinconsensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3a931ed82ed223fb4fa47b929eafa0f3e4661e09/src/script/bitcoinconsensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.h?ref=3a931ed82ed223fb4fa47b929eafa0f3e4661e09",
        "patch": "@@ -72,6 +72,14 @@ EXPORT_SYMBOL int bitcoinconsensus_verify_script_with_amount(const unsigned char\n                                     const unsigned char *txTo        , unsigned int txToLen,\n                                     unsigned int nIn, unsigned int flags, bitcoinconsensus_error* err);\n \n+/// Returns 1 if the input nIn of the serialized transaction pointed to by\n+/// txTo correctly spends the scriptPubKey pointed to by scriptPubKey under\n+/// the current standardness constraints.\n+/// If not nullptr, err will contain an error/success code for the operation\n+EXPORT_SYMBOL int bitcoinconsensus_verify_script_standard_with_amount(const unsigned char *scriptPubKey, unsigned int scriptPubKeyLen, int64_t amount,\n+                                    const unsigned char *txTo        , unsigned int txToLen,\n+                                    unsigned int nIn, bitcoinconsensus_error* err);\n+\n EXPORT_SYMBOL unsigned int bitcoinconsensus_version();\n \n #ifdef __cplusplus"
      }
    ]
  },
  {
    "sha": "9f0a6f36b5ccf08e054af63d242c8b98344676b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZjBhNmYzNmI1Y2NmMDhlMDU0YWY2M2QyNDJjOGI5ODM0NDY3NmIw",
    "commit": {
      "author": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2020-04-28T07:49:37Z"
      },
      "committer": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2020-05-14T09:09:13Z"
      },
      "message": "[doc] Document shared-libraries.md on standard verification\n\nAdd reference to rust-bitcoinconsensus.",
      "tree": {
        "sha": "79c7673ed31bfcce53649f9c180f67adf3e06f3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/79c7673ed31bfcce53649f9c180f67adf3e06f3a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f0a6f36b5ccf08e054af63d242c8b98344676b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f0a6f36b5ccf08e054af63d242c8b98344676b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9f0a6f36b5ccf08e054af63d242c8b98344676b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f0a6f36b5ccf08e054af63d242c8b98344676b0/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "3a931ed82ed223fb4fa47b929eafa0f3e4661e09",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a931ed82ed223fb4fa47b929eafa0f3e4661e09",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3a931ed82ed223fb4fa47b929eafa0f3e4661e09"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f26526f07e069a7e4bfed39e7ba6b535e7def9de",
        "filename": "doc/shared-libraries.md",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f0a6f36b5ccf08e054af63d242c8b98344676b0/doc/shared-libraries.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f0a6f36b5ccf08e054af63d242c8b98344676b0/doc/shared-libraries.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/shared-libraries.md?ref=9f0a6f36b5ccf08e054af63d242c8b98344676b0",
        "patch": "@@ -5,6 +5,12 @@ Shared Libraries\n \n The purpose of this library is to make the verification functionality that is critical to Bitcoin's consensus available to other applications, e.g. to language bindings.\n \n+Policy standardness as enforced by latest software version is also made available. To dissociate between invalidity reasons, either consensus or standardness, an\n+application needs to call first `verify_script_standard_with_amount` followed `verify_script`. A failure on first function but success on following means spent is non-standard\n+but consensus valid. Policy checks may be used at testing to assert scripts standardness or in production to sanitize counterparty inputs in the case of cooperative witness\n+construction. This check only reflects policy in the current release and it may vary between software versions. Therefore if an application rely on pre-signed transactions\n+their standardness should be reasserted at every release.\n+\n ### API\n \n The interface is defined in the C header `bitcoinconsensus.h` located in `src/script/bitcoinconsensus.h`.\n@@ -47,3 +53,4 @@ The interface is defined in the C header `bitcoinconsensus.h` located in `src/sc\n - [node-libbitcoinconsensus](https://github.com/bitpay/node-libbitcoinconsensus) (Node.js Bindings)\n - [java-libbitcoinconsensus](https://github.com/dexX7/java-libbitcoinconsensus) (Java Bindings)\n - [bitcoinconsensus-php](https://github.com/Bit-Wasp/bitcoinconsensus-php) (PHP Bindings)\n+- [rust-bitcoinconsensus](https://github.com/rust-bitcoin/rust-bitcoinconsensus) (Rust Bindings)"
      }
    ]
  }
]