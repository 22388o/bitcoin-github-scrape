[
  {
    "sha": "6e8c48dc593d8b6e5cebd15a980074715223b572",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZThjNDhkYzU5M2Q4YjZlNWNlYmQxNWE5ODAwNzQ3MTUyMjNiNTcy",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-03-09T12:34:54Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-07-25T11:46:52Z"
      },
      "message": "Add const to methods that do not modify the object for which it is called",
      "tree": {
        "sha": "7977c539a2e3a2d344d156fc53fde9848dc84ca1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7977c539a2e3a2d344d156fc53fde9848dc84ca1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e8c48dc593d8b6e5cebd15a980074715223b572",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e8c48dc593d8b6e5cebd15a980074715223b572",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6e8c48dc593d8b6e5cebd15a980074715223b572",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e8c48dc593d8b6e5cebd15a980074715223b572/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0c70e845aa9277a4ceb8307f0ad8f1bf7511e3c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c70e845aa9277a4ceb8307f0ad8f1bf7511e3c8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0c70e845aa9277a4ceb8307f0ad8f1bf7511e3c8"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 38,
      "deletions": 38
    },
    "files": [
      {
        "sha": "8105ebc9b3ddadc92cae30d32e8f5b7422214d4f",
        "filename": "src/addrdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/addrdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/addrdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.h?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -61,7 +61,7 @@ class CBanEntry\n         banReason = BanReasonUnknown;\n     }\n \n-    std::string banReasonToString()\n+    std::string banReasonToString() const\n     {\n         switch (banReason) {\n         case BanReasonNodeMisbehaving:"
      },
      {
        "sha": "986333550ddfc55fa0950a3a5ee2901fcff39ec3",
        "filename": "src/dbwrapper.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/dbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/dbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.cpp?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -184,7 +184,7 @@ bool CDBWrapper::IsEmpty()\n }\n \n CDBIterator::~CDBIterator() { delete piter; }\n-bool CDBIterator::Valid() { return piter->Valid(); }\n+bool CDBIterator::Valid() const { return piter->Valid(); }\n void CDBIterator::SeekToFirst() { piter->SeekToFirst(); }\n void CDBIterator::Next() { piter->Next(); }\n "
      },
      {
        "sha": "2cbb47dbaf34b779cd7e48586e7bd6fa86fb7939",
        "filename": "src/dbwrapper.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/dbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/dbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.h?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -130,7 +130,7 @@ class CDBIterator\n         parent(_parent), piter(_piter) { };\n     ~CDBIterator();\n \n-    bool Valid();\n+    bool Valid() const;\n \n     void SeekToFirst();\n "
      },
      {
        "sha": "20f2b368860edbe53d5cabeb6101567e50715de1",
        "filename": "src/merkleblock.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/merkleblock.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/merkleblock.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.h?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -63,7 +63,7 @@ class CPartialMerkleTree\n     bool fBad;\n \n     /** helper function to efficiently calculate the number of nodes at given height in the merkle tree */\n-    unsigned int CalcTreeWidth(int height) {\n+    unsigned int CalcTreeWidth(int height) const {\n         return (nTransactions+(1 << height)-1) >> height;\n     }\n "
      },
      {
        "sha": "6f41f863334a28297e880ea11c53ebee275345cc",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -224,7 +224,7 @@ void BlockAssembler::onlyUnconfirmed(CTxMemPool::setEntries& testSet)\n     }\n }\n \n-bool BlockAssembler::TestPackage(uint64_t packageSize, int64_t packageSigOpsCost)\n+bool BlockAssembler::TestPackage(uint64_t packageSize, int64_t packageSigOpsCost) const\n {\n     // TODO: switch to weight-based accounting for packages instead of vsize-based accounting.\n     if (nBlockWeight + WITNESS_SCALE_FACTOR * packageSize >= nBlockMaxWeight)"
      },
      {
        "sha": "685b4e0cc8dd7c1b53ba642ce6343cc9c63884a0",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -187,7 +187,7 @@ class BlockAssembler\n     /** Remove confirmed (inBlock) entries from given set */\n     void onlyUnconfirmed(CTxMemPool::setEntries& testSet);\n     /** Test if a new package would \"fit\" in the block */\n-    bool TestPackage(uint64_t packageSize, int64_t packageSigOpsCost);\n+    bool TestPackage(uint64_t packageSize, int64_t packageSigOpsCost) const;\n     /** Perform checks on each transaction in a package:\n       * locktime, premature-witness, serialized size (if necessary)\n       * These checks should always succeed, and they're here"
      },
      {
        "sha": "0567603c0ab274263b3548b14bb63fb524c9d1f2",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -227,7 +227,7 @@ class BitcoinApplication: public QApplication\n     void requestShutdown();\n \n     /// Get process return value\n-    int getReturnValue() { return returnValue; }\n+    int getReturnValue() const { return returnValue; }\n \n     /// Get window identifier of QMainWindow (BitcoinGUI)\n     WId getMainWinId() const;"
      },
      {
        "sha": "cda23f9540e898805fdfd40a609286219bc5da84",
        "filename": "src/qt/modaloverlay.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/modaloverlay.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/modaloverlay.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/modaloverlay.h?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -32,7 +32,7 @@ public Q_SLOTS:\n     // will show or hide the modal layer\n     void showHide(bool hide = false, bool userRequested = false);\n     void closeClicked();\n-    bool isLayerVisible() { return layerIsVisible; }\n+    bool isLayerVisible() const { return layerIsVisible; }\n \n protected:\n     bool eventFilter(QObject * obj, QEvent * ev);"
      },
      {
        "sha": "75c106da484227dcadb3feea77d289dc940ff380",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -441,7 +441,7 @@ void OptionsModel::setRestartRequired(bool fRequired)\n     return settings.setValue(\"fRestartRequired\", fRequired);\n }\n \n-bool OptionsModel::isRestartRequired()\n+bool OptionsModel::isRestartRequired() const\n {\n     QSettings settings;\n     return settings.value(\"fRestartRequired\", false).toBool();"
      },
      {
        "sha": "0ac82a4148b41494b1148fd683b6daa91737c878",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -59,18 +59,18 @@ class OptionsModel : public QAbstractListModel\n     void setDisplayUnit(const QVariant &value);\n \n     /* Explicit getters */\n-    bool getHideTrayIcon() { return fHideTrayIcon; }\n-    bool getMinimizeToTray() { return fMinimizeToTray; }\n-    bool getMinimizeOnClose() { return fMinimizeOnClose; }\n-    int getDisplayUnit() { return nDisplayUnit; }\n-    QString getThirdPartyTxUrls() { return strThirdPartyTxUrls; }\n+    bool getHideTrayIcon() const { return fHideTrayIcon; }\n+    bool getMinimizeToTray() const { return fMinimizeToTray; }\n+    bool getMinimizeOnClose() const { return fMinimizeOnClose; }\n+    int getDisplayUnit() const { return nDisplayUnit; }\n+    QString getThirdPartyTxUrls() const { return strThirdPartyTxUrls; }\n     bool getProxySettings(QNetworkProxy& proxy) const;\n-    bool getCoinControlFeatures() { return fCoinControlFeatures; }\n+    bool getCoinControlFeatures() const { return fCoinControlFeatures; }\n     const QString& getOverriddenByCommandLine() { return strOverriddenByCommandLine; }\n \n     /* Restart flag helper */\n     void setRestartRequired(bool fRequired);\n-    bool isRestartRequired();\n+    bool isRestartRequired() const;\n \n private:\n     /* Qt-only settings */"
      },
      {
        "sha": "0b5df8a67d0ec6a567de495f2cc6a6b3a2501601",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -248,7 +248,7 @@ void TransactionRecord::updateStatus(const CWalletTx &wtx)\n     status.needsUpdate = false;\n }\n \n-bool TransactionRecord::statusUpdateNeeded()\n+bool TransactionRecord::statusUpdateNeeded() const\n {\n     AssertLockHeld(cs_main);\n     return status.cur_num_blocks != chainActive.Height() || status.needsUpdate;"
      },
      {
        "sha": "a26e676142531c905c564e8eee6d77ac5eadb4a2",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -140,7 +140,7 @@ class TransactionRecord\n \n     /** Return whether a status update is needed.\n      */\n-    bool statusUpdateNeeded();\n+    bool statusUpdateNeeded() const;\n };\n \n #endif // BITCOIN_QT_TRANSACTIONRECORD_H"
      },
      {
        "sha": "b1f81498b2c2e19b9b1c0a09d83ee7426598a59b",
        "filename": "src/qt/transactiontablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/transactiontablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/transactiontablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.h?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -79,7 +79,7 @@ class TransactionTableModel : public QAbstractTableModel\n     QVariant data(const QModelIndex &index, int role) const;\n     QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n     QModelIndex index(int row, int column, const QModelIndex & parent = QModelIndex()) const;\n-    bool processingQueuedTransactions() { return fProcessingQueuedTransactions; }\n+    bool processingQueuedTransactions() const { return fProcessingQueuedTransactions; }\n \n private:\n     CWallet* wallet;"
      },
      {
        "sha": "eae2c27f8a491fc311e0edc248cf1de8532caae2",
        "filename": "src/qt/walletmodeltransaction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/walletmodeltransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/walletmodeltransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.cpp?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -22,12 +22,12 @@ WalletModelTransaction::~WalletModelTransaction()\n     delete walletTransaction;\n }\n \n-QList<SendCoinsRecipient> WalletModelTransaction::getRecipients()\n+QList<SendCoinsRecipient> WalletModelTransaction::getRecipients() const\n {\n     return recipients;\n }\n \n-CWalletTx *WalletModelTransaction::getTransaction()\n+CWalletTx *WalletModelTransaction::getTransaction() const\n {\n     return walletTransaction;\n }\n@@ -37,7 +37,7 @@ unsigned int WalletModelTransaction::getTransactionSize()\n     return (!walletTransaction ? 0 : ::GetVirtualTransactionSize(*walletTransaction));\n }\n \n-CAmount WalletModelTransaction::getTransactionFee()\n+CAmount WalletModelTransaction::getTransactionFee() const\n {\n     return fee;\n }\n@@ -79,7 +79,7 @@ void WalletModelTransaction::reassignAmounts(int nChangePosRet)\n     }\n }\n \n-CAmount WalletModelTransaction::getTotalTransactionAmount()\n+CAmount WalletModelTransaction::getTotalTransactionAmount() const\n {\n     CAmount totalTransactionAmount = 0;\n     for (const SendCoinsRecipient &rcp : recipients)"
      },
      {
        "sha": "d7ecd7aa8cdf6adb9fa13a401e392f5fc8b18eb6",
        "filename": "src/qt/walletmodeltransaction.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/walletmodeltransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/qt/walletmodeltransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.h?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -22,15 +22,15 @@ class WalletModelTransaction\n     explicit WalletModelTransaction(const QList<SendCoinsRecipient> &recipients);\n     ~WalletModelTransaction();\n \n-    QList<SendCoinsRecipient> getRecipients();\n+    QList<SendCoinsRecipient> getRecipients() const;\n \n-    CWalletTx *getTransaction();\n+    CWalletTx *getTransaction() const;\n     unsigned int getTransactionSize();\n \n     void setTransactionFee(const CAmount& newFee);\n-    CAmount getTransactionFee();\n+    CAmount getTransactionFee() const;\n \n-    CAmount getTotalTransactionAmount();\n+    CAmount getTotalTransactionAmount() const;\n \n     void newPossibleKeyChange(CWallet *wallet);\n     CReserveKey *getPossibleKeyChange();"
      },
      {
        "sha": "cc2f01f2ffafea7e361ffd205d9d4030e9744b80",
        "filename": "src/scheduler.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/scheduler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/scheduler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.h?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -81,7 +81,7 @@ class CScheduler\n     int nThreadsServicingQueue;\n     bool stopRequested;\n     bool stopWhenEmpty;\n-    bool shouldStop() { return stopRequested || (stopWhenEmpty && taskQueue.empty()); }\n+    bool shouldStop() const { return stopRequested || (stopWhenEmpty && taskQueue.empty()); }\n };\n \n /**"
      },
      {
        "sha": "ca7cd4ed238bd05bcb2bc74dc8f1f7b0317ec19a",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -332,7 +332,7 @@ class CDataStream\n     //\n     bool eof() const             { return size() == 0; }\n     CDataStream* rdbuf()         { return this; }\n-    int in_avail()               { return size(); }\n+    int in_avail() const         { return size(); }\n \n     void SetType(int n)          { nType = n; }\n     int GetType() const          { return nType; }\n@@ -648,7 +648,7 @@ class CBufferedFile\n     }\n \n     // return the current reading position\n-    uint64_t GetPos() {\n+    uint64_t GetPos() const {\n         return nReadPos;\n     }\n "
      },
      {
        "sha": "43c54b6ec7d99de363b0e5894408a9f3ce6be643",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -280,7 +280,7 @@ class CSemaphoreGrant\n         Release();\n     }\n \n-    operator bool()\n+    operator bool() const\n     {\n         return fHaveGrant;\n     }"
      },
      {
        "sha": "85f268ecd5ed149f4eddf295688b301a00e356c7",
        "filename": "src/test/coins_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/test/coins_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/test/coins_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/coins_tests.cpp?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -89,8 +89,8 @@ class CCoinsViewCacheTest : public CCoinsViewCache\n         BOOST_CHECK_EQUAL(DynamicMemoryUsage(), ret);\n     }\n \n-    CCoinsMap& map() { return cacheCoins; }\n-    size_t& usage() { return cachedCoinsUsage; }\n+    CCoinsMap& map() const { return cacheCoins; }\n+    size_t& usage() const { return cachedCoinsUsage; }\n };\n \n } // namespace"
      },
      {
        "sha": "841282873f175c50453f79f4993d60c771adeb0e",
        "filename": "src/test/prevector_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/test/prevector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/test/prevector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/prevector_tests.cpp?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -152,11 +152,11 @@ class prevector_tester {\n         pre_vector.assign(n, value);\n     }\n \n-    Size size() {\n+    Size size() const {\n         return real_vector.size();\n     }\n \n-    Size capacity() {\n+    Size capacity() const {\n         return pre_vector.capacity();\n     }\n "
      },
      {
        "sha": "42d947470dc37149ff2f9c314e4592037122c8a8",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -450,7 +450,7 @@ class TestBuilder\n         return array;\n     }\n \n-    std::string GetComment()\n+    std::string GetComment() const\n     {\n         return comment;\n     }"
      },
      {
        "sha": "771d29e0970116c53646ec51060ee9e8852704f9",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -606,7 +606,7 @@ class CTxMemPool\n         return mapTx.size();\n     }\n \n-    uint64_t GetTotalTxSize()\n+    uint64_t GetTotalTxSize() const\n     {\n         LOCK(cs);\n         return totalTxSize;"
      },
      {
        "sha": "0ebbaadccee2373f792478c1cad23319dd2ad717",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e8c48dc593d8b6e5cebd15a980074715223b572/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e8c48dc593d8b6e5cebd15a980074715223b572/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=6e8c48dc593d8b6e5cebd15a980074715223b572",
        "patch": "@@ -45,7 +45,7 @@ class CDBEnv\n     void Reset();\n \n     void MakeMock();\n-    bool IsMock() { return fMockDb; }\n+    bool IsMock() const { return fMockDb; }\n \n     /**\n      * Verify that database file strFile is OK. If it is not,"
      }
    ]
  }
]