jgarzik,2012-04-11T16:41:52Z,"This is intended to supercede pull request #932, for the following minor reasons:\n\n1) removes the actual protocol version increment. IMO this should be external to the 'pong message' commit.\n\nand under the principle of making code self-documenting...\n\n2) use a named constant rather than a magic number for version behavior switching. bitcoin code is too full of magic numbers, and we should re",https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5073136,5073136,
jgarzik,2012-04-11T21:17:12Z,"Independent, yes, but where is a better place for version information than version.{h,cpp}?\n\nIt is an odd policy that the ""version"" module excludes certain classes of version information and not others.  That seems to violate the Principle of Least Surprise.\n",https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5079212,5079212,
sipa,2012-04-11T22:01:30Z,"Agree, but calling them both ""_VERSION"" will be very confusing.\n",https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5080131,5080131,
jgarzik,2012-04-11T23:12:26Z,"No more confusing than the existing PROTOCOL_VERSION vs. CLIENT_VERSION, each with the _VERSION suffix (which I argue is not confusing at all, but rather a logical naming scheme for each).\n\nIf it appeals to one's sense of symmetry, we can move PROTOCOL_VERSION to version.\* as well.\n",https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5081305,5081305,
laanwj,2012-04-12T06:35:57Z,"IMO, version.h should contain version information _for the current client_, that will change over time. \n\nI agree that feature-specific thresholds that will be ""written in stone forever"" should go somewhere else. Maybe there will eventually be enough for a bip_versions.h :-)  (if we tracked down other magic version numbers we could already do so)\n\nAnother suggestion would be to rename it to `B",https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5085266,5085266,
jgarzik,2012-04-12T14:05:48Z,"No, we don't need multiple version.\* modules in the tree.\n",https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5091661,5091661,
sipa,2012-04-12T14:20:29Z,"To me, mixing the client version (metadata about the project you're compiling) and the network version (a property of the protocol being implemented) in the same module is wrong. It's like having a source file in firefox that encdes both information about the firefox browser version and the differences between HTML4 and HTML5.\n\nThe fact that both are called version and have a similar number sche",https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5091975,5091975,
jgarzik,2012-04-12T14:33:07Z,"This is being WAY overthought.\n\n1) It is silly to have multiple version modules, for that will create confusion among outside reviewers.\n2) It is silly to put version constants outside the existing version module, for humans outside the dev team will naturally look for anything version-related in a module called ""version.""\n3) It is even more silly to rename a protocol version constant to somet",https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5092268,5092268,
laanwj,2012-04-12T14:59:11Z,"You can use the exact same argument that this causes confusion for ""outside\nreviewers"". Do we need to increase the BIP0031_VERSION with a new release?\nHow is it different from the CLIENT and PROTOCOL version?... etc.\n",https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5092840,5092840,
jgarzik,2012-04-12T15:05:20Z,"Helpfully, there is a comment for outside reviewers in the code I added, solving this imagined problem.\n",https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5092989,5092989,
sipa,2012-04-12T15:26:23Z,"Certainly, a comment saying ""This relates to the protocol version being used in P2P connections, and is independent from the client version"" is enough to make it acceptable (I see no such comment right now, though...). Still, such constants belong in the networking code, imho.\n",https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5093460,5093460,
jgarzik,2012-04-12T16:28:24Z,"Updated to add such comments, and further illustrate the usage.\n",https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5094890,5094890,
sipa,2012-04-12T23:06:06Z,Other magic protocol version constants:\n- protocol.h: 31402 (nTime in CAddress)\n- main.cpp: 31402 (avoid requesting addresses from older nodes)\n- main.cpp: 32000...32400 (don't ask for blocks from these versions)\n,https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5102698,5102698,
jgarzik,2012-04-13T00:10:24Z,"added, along with 209\n",https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5105933,5105933,
sipa,2012-04-16T14:37:15Z,"Meh, ACK.\n",https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5153553,5153553,
luke-jr,2012-04-16T14:50:47Z,Reminder to bump our own PROTOCOL_VERSION to 60001 too...\n,https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5153885,5153885,
jgarzik,2012-04-16T14:54:50Z,"@luke-jr yes, that will come in a separate cover\n",https://github.com/bitcoin/bitcoin/pull/1081#issuecomment-5153975,5153975,
luke-jr,2012-04-11T16:48:06Z,"Isn't the nonce optional, if you don't want a pong?\n",https://github.com/bitcoin/bitcoin/pull/1081#discussion_r671597,671597,src/main.cpp
luke-jr,2012-04-11T16:48:34Z,Any reason not to use >= for clarity?\n,https://github.com/bitcoin/bitcoin/pull/1081#discussion_r671598,671598,src/version.h
jgarzik,2012-04-11T16:58:40Z,"This matches the original submission, and saw no reason to change it.  Using ""> 60000"" makes us slightly more independent of whatever the next-proto-version is.  No strong objections to "">= 70000"" though.\n",https://github.com/bitcoin/bitcoin/pull/1081#discussion_r671642,671642,src/version.h
