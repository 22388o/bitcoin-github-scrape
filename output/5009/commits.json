[
  {
    "sha": "6d7a0fa4e5a691764dc532d64af40b2dd3dc9e8b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZDdhMGZhNGU1YTY5MTc2NGRjNTMyZDY0YWY0MGIyZGQzZGM5ZThi",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-09-03T20:36:06Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2014-09-30T19:14:22Z"
      },
      "message": "depends: update the comparison tool to a more recent version",
      "tree": {
        "sha": "e15eb81e016a84a3dcf135d6003683ed83e65c4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e15eb81e016a84a3dcf135d6003683ed83e65c4c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d7a0fa4e5a691764dc532d64af40b2dd3dc9e8b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d7a0fa4e5a691764dc532d64af40b2dd3dc9e8b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6d7a0fa4e5a691764dc532d64af40b2dd3dc9e8b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d7a0fa4e5a691764dc532d64af40b2dd3dc9e8b/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a329097f925ef20a724fa7e5241b0e9d75d42bb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a329097f925ef20a724fa7e5241b0e9d75d42bb9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a329097f925ef20a724fa7e5241b0e9d75d42bb9"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 8,
      "deletions": 31
    },
    "files": [
      {
        "sha": "d9f77221902db9ab87bf9ad1ace68c800278dd7e",
        "filename": "depends/packages/native_comparisontool.mk",
        "status": "modified",
        "additions": 8,
        "deletions": 31,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d7a0fa4e5a691764dc532d64af40b2dd3dc9e8b/depends/packages/native_comparisontool.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d7a0fa4e5a691764dc532d64af40b2dd3dc9e8b/depends/packages/native_comparisontool.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_comparisontool.mk?ref=6d7a0fa4e5a691764dc532d64af40b2dd3dc9e8b",
        "patch": "@@ -1,30 +1,12 @@\n package=native_comparisontool\n-$(package)_version=1\n-$(package)_download_path=https://github.com/TheBlueMatt/test-scripts/raw/master/BitcoindComparisonTool_jar\n-$(package)_file_name=BitcoindComparisonTool.jar\n-$(package)_sha256_hash=a08b1a55523e7f57768cb66c35f47a926710e5b6c82822e1ccfbe38fcce37db2\n-$(package)_guava_file_name=guava-13.0.1.jar\n-$(package)_guava_sha256_hash=feb4b5b2e79a63b72ec47a693b1cf35cf1cea1f60a2bb2615bf21f74c7a60bb0\n-$(package)_h2_file_name=h2-1.3.167.jar\n-$(package)_h2_sha256_hash=fa97521a2e72174485a96276bcf6f573d5e44ca6aba2f62de87b33b5bb0d4b91\n-$(package)_sc-light-jdk15on_file_name=sc-light-jdk15on-1.47.0.2.jar\n-$(package)_sc-light-jdk15on_sha256_hash=931f39d351429fb96c2f749e7ecb1a256a8ebbf5edca7995c9cc085b94d1841d\n-$(package)_slf4j-api_file_name=slf4j-api-1.6.4.jar\n-$(package)_slf4j-api_sha256_hash=367b909030f714ee1176ab096b681e06348f03385e98d1bce0ed801b5452357e\n-$(package)_slf4j-jdk14_file_name=slf4j-jdk14-1.6.4.jar\n-$(package)_slf4j-jdk14_sha256_hash=064bd81796710f713f9f4a2309c0e032309934c2d2b4f7d3b6958325e584e13f\n-\n-define $(package)_fetch_cmds\n-$(call fetch_file,$(package),$($(package)_download_path),$($(package)_file_name),$($(package)_file_name),$($(package)_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_download_path),$($(package)_guava_file_name),$($(package)_guava_file_name),$($(package)_guava_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_download_path),$($(package)_h2_file_name),$($(package)_h2_file_name),$($(package)_h2_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_download_path),$($(package)_sc-light-jdk15on_file_name),$($(package)_sc-light-jdk15on_file_name),$($(package)_sc-light-jdk15on_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_download_path),$($(package)_slf4j-api_file_name),$($(package)_slf4j-api_file_name),$($(package)_slf4j-api_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_download_path),$($(package)_slf4j-jdk14_file_name),$($(package)_slf4j-jdk14_file_name),$($(package)_slf4j-jdk14_sha256_hash))\n-endef\n+$(package)_version=adfd3de7\n+$(package)_download_path=https://github.com/TheBlueMatt/test-scripts/raw/10222bfdace65a0c5f3bd4a766eeb6b3a8b869fb/\n+$(package)_file_name=pull-tests-$($(package)_version).jar\n+$(package)_sha256_hash=fd2282b112e35f339dbe3729b08a04834ad719f8c9c10eeec1178465e6d36a18\n+$(package)_install_dirname=BitcoindComparisonTool_jar\n+$(package)_install_filename=BitcoindComparisonTool.jar\n \n define $(package)_extract_cmds\n-echo none\n endef\n \n define $(package)_configure_cmds\n@@ -34,11 +16,6 @@ define $(package)_build_cmds\n endef\n \n define $(package)_stage_cmds\n-  mkdir -p $($(package)_staging_prefix_dir)/share/BitcoindComparisonTool_jar && \\\n-  cp $(SOURCES_PATH)/$($(package)_file_name) $($(package)_staging_prefix_dir)/share/BitcoindComparisonTool_jar/  && \\\n-  cp $(SOURCES_PATH)/$($(package)_guava_file_name) $($(package)_staging_prefix_dir)/share/BitcoindComparisonTool_jar/  && \\\n-  cp $(SOURCES_PATH)/$($(package)_h2_file_name) $($(package)_staging_prefix_dir)/share/BitcoindComparisonTool_jar/  && \\\n-  cp $(SOURCES_PATH)/$($(package)_sc-light-jdk15on_file_name) $($(package)_staging_prefix_dir)/share/BitcoindComparisonTool_jar/  && \\\n-  cp $(SOURCES_PATH)/$($(package)_slf4j-api_file_name) $($(package)_staging_prefix_dir)/share/BitcoindComparisonTool_jar/  && \\\n-  cp $(SOURCES_PATH)/$($(package)_slf4j-jdk14_file_name) $($(package)_staging_prefix_dir)/share/BitcoindComparisonTool_jar/\n+  mkdir -p $($(package)_staging_prefix_dir)/share/$($(package)_install_dirname) && \\\n+  mv $(SOURCES_PATH)/$($(package)_file_name) $($(package)_staging_prefix_dir)/share/$($(package)_install_dirname)/$($(package)_install_filename)\n endef"
      }
    ]
  },
  {
    "sha": "e166c177bccdaf5b3c1b2238e8e04d53554d138e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTY2YzE3N2JjY2RhZjViM2MxYjIyMzhlOGUwNGQ1MzU1NGQxMzhl",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2014-09-30T05:51:47Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2014-09-30T19:14:22Z"
      },
      "message": "Revert \"travis: retry tests before giving up\"\n\nThis reverts commit 7e3821c097c05a4790abac53ddd26ef28cb7cf4d.",
      "tree": {
        "sha": "d60ae082b3613c53ad90dac0d9ca0bcbc71d02e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d60ae082b3613c53ad90dac0d9ca0bcbc71d02e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e166c177bccdaf5b3c1b2238e8e04d53554d138e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e166c177bccdaf5b3c1b2238e8e04d53554d138e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e166c177bccdaf5b3c1b2238e8e04d53554d138e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e166c177bccdaf5b3c1b2238e8e04d53554d138e/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6d7a0fa4e5a691764dc532d64af40b2dd3dc9e8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d7a0fa4e5a691764dc532d64af40b2dd3dc9e8b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6d7a0fa4e5a691764dc532d64af40b2dd3dc9e8b"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f7d94df64687a0dbc756b9d3d0f341cd3396caff",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e166c177bccdaf5b3c1b2238e8e04d53554d138e/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e166c177bccdaf5b3c1b2238e8e04d53554d138e/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=e166c177bccdaf5b3c1b2238e8e04d53554d138e",
        "patch": "@@ -58,6 +58,6 @@ script:\n     - cd bitcoin-$HOST\n     - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then travis_retry make check; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then make check; fi\n after_script:\n     - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then (echo \"Upload goes here. Something like: scp -r $BASE_OUTDIR server\" || echo \"upload failed\"); fi"
      }
    ]
  },
  {
    "sha": "f6ef959358e36bb6cb7df077f4103a2028020dde",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNmVmOTU5MzU4ZTM2YmI2Y2I3ZGYwNzdmNDEwM2EyMDI4MDIwZGRl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-15T22:30:05Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-30T20:06:41Z"
      },
      "message": "Do merkle root and txid duplicates check simultaneously\n\nMove the txid duplicates check into BuildMerkleTree, where it can be done\nmuch more efficiently (without needing to build a full txid set to detect\nduplicates).\n\nThe previous version (using the std::set<uint256> to detect duplicates) was\nalso slightly too weak. A block mined with actual duplicate transactions\n(which is invalid, due to the inputs of the duplicated transactions being\nseen as double spends) would trigger the duplicates logic, resulting in the\nblock not being stored on disk, and rerequested. This change fixes that by\nonly triggering in the case of duplicated transactions that can actually\nresult in an identical merkle root.",
      "tree": {
        "sha": "29b060a0b0261cf6c5847516a6b457821fefc854",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29b060a0b0261cf6c5847516a6b457821fefc854"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6ef959358e36bb6cb7df077f4103a2028020dde",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6ef959358e36bb6cb7df077f4103a2028020dde",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f6ef959358e36bb6cb7df077f4103a2028020dde",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6ef959358e36bb6cb7df077f4103a2028020dde/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e166c177bccdaf5b3c1b2238e8e04d53554d138e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e166c177bccdaf5b3c1b2238e8e04d53554d138e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e166c177bccdaf5b3c1b2238e8e04d53554d138e"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 57,
      "deletions": 17
    },
    "files": [
      {
        "sha": "85cca1ebf0aa0ad4f405f5be333f9c37550b39bf",
        "filename": "src/core.cpp",
        "status": "modified",
        "additions": 45,
        "deletions": 8,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6ef959358e36bb6cb7df077f4103a2028020dde/src/core.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6ef959358e36bb6cb7df077f4103a2028020dde/src/core.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.cpp?ref=f6ef959358e36bb6cb7df077f4103a2028020dde",
        "patch": "@@ -224,29 +224,66 @@ uint256 CBlockHeader::GetHash() const\n     return Hash(BEGIN(nVersion), END(nNonce));\n }\n \n-uint256 CBlock::BuildMerkleTree() const\n+uint256 CBlock::BuildMerkleTree(bool* fMutated) const\n {\n-    // WARNING! If you're reading this because you're learning about crypto\n-    // and/or designing a new system that will use merkle trees, keep in mind\n-    // that the following merkle tree algorithm has a serious flaw related to\n-    // duplicate txids, resulting in a vulnerability. (CVE-2012-2459) Bitcoin\n-    // has since worked around the flaw, but for new applications you should\n-    // use something different; don't just copy-and-paste this code without\n-    // understanding the problem first.\n+    /* WARNING! If you're reading this because you're learning about crypto\n+       and/or designing a new system that will use merkle trees, keep in mind\n+       that the following merkle tree algorithm has a serious flaw related to\n+       duplicate txids, resulting in a vulnerability (CVE-2012-2459).\n+\n+       The reason is that if the number of hashes in the list at a given time\n+       is odd, the last one is duplicated before computing the next level (which\n+       is unusual in Merkle trees). This results in certain sequences of\n+       transactions leading to the same merkle root. For example, these two\n+       trees:\n+\n+                    A               A\n+                  /  \\            /   \\\n+                B     C         B       C\n+               / \\    |        / \\     / \\\n+              D   E   F       D   E   F   F\n+             / \\ / \\ / \\     / \\ / \\ / \\ / \\\n+             1 2 3 4 5 6     1 2 3 4 5 6 5 6\n+\n+       for transaction lists [1,2,3,4,5,6] and [1,2,3,4,5,6,5,6] (where 5 and\n+       6 are repeated) result in the same root hash A (because the hash of both\n+       of (F) and (F,F) is C).\n+\n+       The vulnerability results from being able to send a block with such a\n+       transaction list, with the same merkle root, and the same block hash as\n+       the original without duplication, resulting in failed validation. If the\n+       receiving node proceeds to mark that block as permanently invalid\n+       however, it will fail to accept further unmodified (and thus potentially\n+       valid) versions of the same block. We defend against this by detecting\n+       the case where we would hash two identical hashes at the end of the list\n+       together, and treating that identically to the block having an invalid\n+       merkle root. Assuming no double-SHA256 collisions, this will detect all\n+       known ways of changing the transactions without affecting the merkle\n+       root.\n+    */\n     vMerkleTree.clear();\n+    vMerkleTree.reserve(vtx.size() * 2 + 16); // Safe upper bound for the number of total nodes.\n     BOOST_FOREACH(const CTransaction& tx, vtx)\n         vMerkleTree.push_back(tx.GetHash());\n     int j = 0;\n+    bool mutated = false;\n     for (int nSize = vtx.size(); nSize > 1; nSize = (nSize + 1) / 2)\n     {\n         for (int i = 0; i < nSize; i += 2)\n         {\n             int i2 = std::min(i+1, nSize-1);\n+            if (i2 == i + 1 && i2 + 1 == nSize && vMerkleTree[j+i] == vMerkleTree[j+i2]) {\n+                // Two identical hashes at the end of the list at a particular level.\n+                mutated = true;\n+            }\n             vMerkleTree.push_back(Hash(BEGIN(vMerkleTree[j+i]),  END(vMerkleTree[j+i]),\n                                        BEGIN(vMerkleTree[j+i2]), END(vMerkleTree[j+i2])));\n         }\n         j += nSize;\n     }\n+    if (fMutated) {\n+        *fMutated = mutated;\n+    }\n     return (vMerkleTree.empty() ? 0 : vMerkleTree.back());\n }\n "
      },
      {
        "sha": "de41b8621b78998f71cc69b822881456306ae0f5",
        "filename": "src/core.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6ef959358e36bb6cb7df077f4103a2028020dde/src/core.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6ef959358e36bb6cb7df077f4103a2028020dde/src/core.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.h?ref=f6ef959358e36bb6cb7df077f4103a2028020dde",
        "patch": "@@ -528,7 +528,11 @@ class CBlock : public CBlockHeader\n         return block;\n     }\n \n-    uint256 BuildMerkleTree() const;\n+    // Build the in-memory merkle tree for this block and return the merkle root.\n+    // If non-NULL, *mutated is set to whether mutation was detected in the merkle\n+    // tree (a duplication of transactions in the block leading to an identical\n+    // merkle root).\n+    uint256 BuildMerkleTree(bool* mutated = NULL) const;\n \n     std::vector<uint256> GetMerkleBranch(int nIndex) const;\n     static uint256 CheckMerkleBranch(uint256 hash, const std::vector<uint256>& vMerkleBranch, int nIndex);"
      },
      {
        "sha": "26a00dc45a875d5ba53425a5be2c1bf8ed1a4978",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6ef959358e36bb6cb7df077f4103a2028020dde/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6ef959358e36bb6cb7df077f4103a2028020dde/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f6ef959358e36bb6cb7df077f4103a2028020dde",
        "patch": "@@ -2236,13 +2236,12 @@ bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW, bo\n         if (!CheckTransaction(tx, state))\n             return error(\"CheckBlock() : CheckTransaction failed\");\n \n-    // Check for duplicate txids. This is caught by ConnectInputs(),\n-    // but catching it earlier avoids a potential DoS attack:\n-    set<uint256> uniqueTx;\n-    BOOST_FOREACH(const CTransaction &tx, block.vtx) {\n-        uniqueTx.insert(tx.GetHash());\n-    }\n-    if (uniqueTx.size() != block.vtx.size())\n+    // Check for merkle tree malleability (CVE-2012-2459): repeating sequences\n+    // of transactions in a block without affecting the merkle root of a block,\n+    // while still invalidating it.\n+    bool mutated;\n+    uint256 hashMerkleRoot2 = block.BuildMerkleTree(&mutated);\n+    if (mutated)\n         return state.DoS(100, error(\"CheckBlock() : duplicate transaction\"),\n                          REJECT_INVALID, \"bad-txns-duplicate\", true);\n \n@@ -2256,7 +2255,7 @@ bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW, bo\n                          REJECT_INVALID, \"bad-blk-sigops\", true);\n \n     // Check merkle root\n-    if (fCheckMerkleRoot && block.hashMerkleRoot != block.BuildMerkleTree())\n+    if (fCheckMerkleRoot && block.hashMerkleRoot != hashMerkleRoot2)\n         return state.DoS(100, error(\"CheckBlock() : hashMerkleRoot mismatch\"),\n                          REJECT_INVALID, \"bad-txnmrklroot\", true);\n "
      }
    ]
  },
  {
    "sha": "2b9750eb5d54bd284b77ce93e5b2a97574973ea7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYjk3NTBlYjVkNTRiZDI4NGI3N2NlOTNlNWIyYTk3NTc0OTczZWE3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-30T17:44:19Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-09-30T20:06:41Z"
      },
      "message": "Broken",
      "tree": {
        "sha": "90dae9aab4b0dd35496f4b20f9b717e47529e59e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90dae9aab4b0dd35496f4b20f9b717e47529e59e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b9750eb5d54bd284b77ce93e5b2a97574973ea7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b9750eb5d54bd284b77ce93e5b2a97574973ea7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2b9750eb5d54bd284b77ce93e5b2a97574973ea7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b9750eb5d54bd284b77ce93e5b2a97574973ea7/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6ef959358e36bb6cb7df077f4103a2028020dde",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6ef959358e36bb6cb7df077f4103a2028020dde",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f6ef959358e36bb6cb7df077f4103a2028020dde"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "59ee824fb8b254d9a3ba1e453a2f54cf9bbf810e",
        "filename": "src/core.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b9750eb5d54bd284b77ce93e5b2a97574973ea7/src/core.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b9750eb5d54bd284b77ce93e5b2a97574973ea7/src/core.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.cpp?ref=2b9750eb5d54bd284b77ce93e5b2a97574973ea7",
        "patch": "@@ -272,7 +272,7 @@ uint256 CBlock::BuildMerkleTree(bool* fMutated) const\n         for (int i = 0; i < nSize; i += 2)\n         {\n             int i2 = std::min(i+1, nSize-1);\n-            if (i2 == i + 1 && i2 + 1 == nSize && vMerkleTree[j+i] == vMerkleTree[j+i2]) {\n+            if (i2 == i + 1 && i2 + 1 == nSize && vMerkleTree[i] == vMerkleTree[i2]) {\n                 // Two identical hashes at the end of the list at a particular level.\n                 mutated = true;\n             }"
      }
    ]
  }
]