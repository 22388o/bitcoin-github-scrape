[
  {
    "sha": "9189d7c949508352c70832c301831dfe16e37ca0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MTg5ZDdjOTQ5NTA4MzUyYzcwODMyYzMwMTgzMWRmZTE2ZTM3Y2Ew",
    "commit": {
      "author": {
        "name": "Jon Lund Steffensen",
        "email": "jonlst@gmail.com",
        "date": "2013-03-26T01:33:25Z"
      },
      "committer": {
        "name": "Jon Lund Steffensen",
        "email": "jonlst@gmail.com",
        "date": "2013-10-20T00:11:30Z"
      },
      "message": "Allow network activity to be temporarily suspended.\n\nAdded the function SetNetworkActive() which when called with argument set to false disconnects all nodes and sets the flag fNetworkActive to false. As long as this flag is false no new connections are attempted and no incoming connections are accepted. Network activity is reenabled by calling the function with argument true.",
      "tree": {
        "sha": "286a31698ffb4d464b97289d660737ad4e553d11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/286a31698ffb4d464b97289d660737ad4e553d11"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9189d7c949508352c70832c301831dfe16e37ca0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9189d7c949508352c70832c301831dfe16e37ca0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9189d7c949508352c70832c301831dfe16e37ca0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9189d7c949508352c70832c301831dfe16e37ca0/comments",
    "author": {
      "login": "jonls",
      "id": 420734,
      "node_id": "MDQ6VXNlcjQyMDczNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/420734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonls",
      "html_url": "https://github.com/jonls",
      "followers_url": "https://api.github.com/users/jonls/followers",
      "following_url": "https://api.github.com/users/jonls/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonls/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonls/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonls/subscriptions",
      "organizations_url": "https://api.github.com/users/jonls/orgs",
      "repos_url": "https://api.github.com/users/jonls/repos",
      "events_url": "https://api.github.com/users/jonls/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonls/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonls",
      "id": 420734,
      "node_id": "MDQ6VXNlcjQyMDczNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/420734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonls",
      "html_url": "https://github.com/jonls",
      "followers_url": "https://api.github.com/users/jonls/followers",
      "following_url": "https://api.github.com/users/jonls/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonls/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonls/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonls/subscriptions",
      "organizations_url": "https://api.github.com/users/jonls/orgs",
      "repos_url": "https://api.github.com/users/jonls/repos",
      "events_url": "https://api.github.com/users/jonls/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonls/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e11107f234b2172a03a7bb5fc5fd28ce00ad4e11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e11107f234b2172a03a7bb5fc5fd28ce00ad4e11",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e11107f234b2172a03a7bb5fc5fd28ce00ad4e11"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 30,
      "deletions": 0
    },
    "files": [
      {
        "sha": "79f04c63f28dd4d289ca307d9bdcd765208703ac",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9189d7c949508352c70832c301831dfe16e37ca0/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9189d7c949508352c70832c301831dfe16e37ca0/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=9189d7c949508352c70832c301831dfe16e37ca0",
        "patch": "@@ -53,6 +53,7 @@ struct LocalServiceInfo {\n // Global state variables\n //\n bool fDiscover = true;\n+bool fNetworkActive = true;\n uint64 nLocalServices = NODE_NETWORK;\n static CCriticalSection cs_mapLocalHost;\n static map<CNetAddr, LocalServiceInfo> mapLocalHost;\n@@ -965,6 +966,11 @@ void ThreadSocketHandler()\n                 LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString().c_str());\n                 closesocket(hSocket);\n             }\n+            else if (!fNetworkActive)\n+            {\n+                printf(\"connection from %s dropped (not accepting new connections)\\n\", addr.ToString().c_str());\n+                closesocket(hSocket);\n+            }\n             else\n             {\n                 LogPrint(\"net\", \"accepted connection %s\\n\", addr.ToString().c_str());\n@@ -1454,6 +1460,9 @@ bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOu\n     // Initiate outbound network connection\n     //\n     boost::this_thread::interruption_point();\n+\n+    if (!fNetworkActive)\n+        return false;\n     if (!strDest)\n         if (IsLocal(addrConnect) ||\n             FindNode((CNetAddr)addrConnect) || CNode::IsBanned(addrConnect) ||\n@@ -1785,6 +1794,25 @@ bool StopNode()\n     return true;\n }\n \n+void SetNetworkActive(bool active)\n+{\n+    if (fDebug)\n+        printf(\"SetNetworkActive: %s\\n\", active ? \"true\" : \"false\");\n+\n+    if (!active) {\n+        fNetworkActive = false;\n+\n+        LOCK(cs_vNodes);\n+        // Close sockets to all nodes\n+        BOOST_FOREACH(CNode* pnode, vNodes)\n+        {\n+            pnode->CloseSocketDisconnect();\n+        }\n+    } else {\n+        fNetworkActive = true;\n+    }\n+}\n+\n class CNetCleanup\n {\n public:"
      },
      {
        "sha": "4824791f2db10ec3053bccc38bc09bfb09fd7cc0",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9189d7c949508352c70832c301831dfe16e37ca0/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9189d7c949508352c70832c301831dfe16e37ca0/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=9189d7c949508352c70832c301831dfe16e37ca0",
        "patch": "@@ -47,6 +47,7 @@ bool BindListenPort(const CService &bindAddr, std::string& strError=REF(std::str\n void StartNode(boost::thread_group& threadGroup);\n bool StopNode();\n void SocketSendData(CNode *pnode);\n+void SetNetworkActive(bool active);\n \n // Signals for message handling\n struct CNodeSignals\n@@ -85,6 +86,7 @@ CAddress GetLocalAddress(const CNetAddr *paddrPeer = NULL);\n \n \n extern bool fDiscover;\n+extern bool fNetworkActive;\n extern uint64 nLocalServices;\n extern uint64 nLocalHostNonce;\n extern CAddrMan addrman;"
      }
    ]
  },
  {
    "sha": "c8e75ca135d3b06684848626e5c9c4751b00be5c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOGU3NWNhMTM1ZDNiMDY2ODQ4NDg2MjZlNWM5YzQ3NTFiMDBiZTVj",
    "commit": {
      "author": {
        "name": "Jon Lund Steffensen",
        "email": "jonlst@gmail.com",
        "date": "2013-03-26T01:38:24Z"
      },
      "committer": {
        "name": "Jon Lund Steffensen",
        "email": "jonlst@gmail.com",
        "date": "2013-10-20T00:15:59Z"
      },
      "message": "Add RPC command \"togglenetwork\" to toggle network activity temporarily.\n\nRPC command \"togglenetwork\" toggles network and returns new state after command.\nRPC command \"getinfo\" returns \"networkactive\" field in output.",
      "tree": {
        "sha": "9a2a61d47d698267c4a01cb0b3fb06a631970a7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9a2a61d47d698267c4a01cb0b3fb06a631970a7f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8e75ca135d3b06684848626e5c9c4751b00be5c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8e75ca135d3b06684848626e5c9c4751b00be5c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c8e75ca135d3b06684848626e5c9c4751b00be5c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8e75ca135d3b06684848626e5c9c4751b00be5c/comments",
    "author": {
      "login": "jonls",
      "id": 420734,
      "node_id": "MDQ6VXNlcjQyMDczNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/420734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonls",
      "html_url": "https://github.com/jonls",
      "followers_url": "https://api.github.com/users/jonls/followers",
      "following_url": "https://api.github.com/users/jonls/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonls/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonls/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonls/subscriptions",
      "organizations_url": "https://api.github.com/users/jonls/orgs",
      "repos_url": "https://api.github.com/users/jonls/repos",
      "events_url": "https://api.github.com/users/jonls/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonls/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonls",
      "id": 420734,
      "node_id": "MDQ6VXNlcjQyMDczNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/420734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonls",
      "html_url": "https://github.com/jonls",
      "followers_url": "https://api.github.com/users/jonls/followers",
      "following_url": "https://api.github.com/users/jonls/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonls/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonls/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonls/subscriptions",
      "organizations_url": "https://api.github.com/users/jonls/orgs",
      "repos_url": "https://api.github.com/users/jonls/repos",
      "events_url": "https://api.github.com/users/jonls/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonls/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9189d7c949508352c70832c301831dfe16e37ca0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9189d7c949508352c70832c301831dfe16e37ca0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9189d7c949508352c70832c301831dfe16e37ca0"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 15,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bac1a159f44aa748098f3ba6652c27c9d4fc6ac7",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8e75ca135d3b06684848626e5c9c4751b00be5c/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8e75ca135d3b06684848626e5c9c4751b00be5c/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=c8e75ca135d3b06684848626e5c9c4751b00be5c",
        "patch": "@@ -231,6 +231,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"getpeerinfo\",            &getpeerinfo,            true,      false,      false },\n     { \"ping\",                   &ping,                   true,      false,      false },\n     { \"addnode\",                &addnode,                true,      true,       false },\n+    { \"togglenetwork\",          &togglenetwork,          true,      false,      false },\n     { \"getaddednodeinfo\",       &getaddednodeinfo,       true,      true,       false },\n     { \"getnettotals\",           &getnettotals,           true,      true,       false },\n     { \"getdifficulty\",          &getdifficulty,          true,      false,      false },"
      },
      {
        "sha": "3772f1ff099f9c695235234a8a364871afa99079",
        "filename": "src/bitcoinrpc.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8e75ca135d3b06684848626e5c9c4751b00be5c/src/bitcoinrpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8e75ca135d3b06684848626e5c9c4751b00be5c/src/bitcoinrpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.h?ref=c8e75ca135d3b06684848626e5c9c4751b00be5c",
        "patch": "@@ -155,6 +155,7 @@ extern json_spirit::Value getconnectioncount(const json_spirit::Array& params, b\n extern json_spirit::Value getpeerinfo(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value ping(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value addnode(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value togglenetwork(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getaddednodeinfo(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getnettotals(const json_spirit::Array& params, bool fHelp);\n "
      },
      {
        "sha": "69ee27615e03654d26a954df6d37041e367b0575",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8e75ca135d3b06684848626e5c9c4751b00be5c/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8e75ca135d3b06684848626e5c9c4751b00be5c/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=c8e75ca135d3b06684848626e5c9c4751b00be5c",
        "patch": "@@ -237,3 +237,15 @@ Value getnettotals(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"timemillis\", static_cast<boost::int64_t>(GetTimeMillis())));\n     return obj;\n }\n+\n+Value togglenetwork(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"togglenetwork\\n\"\n+            \"Toggle all network activity temporarily.\");\n+\n+    SetNetworkActive(!fNetworkActive);\n+\n+    return fNetworkActive;\n+}"
      },
      {
        "sha": "bb6289d68253d5eed734d3bfd7c10abd656d1f1d",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8e75ca135d3b06684848626e5c9c4751b00be5c/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8e75ca135d3b06684848626e5c9c4751b00be5c/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=c8e75ca135d3b06684848626e5c9c4751b00be5c",
        "patch": "@@ -82,6 +82,7 @@ Value getinfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n     obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n     obj.push_back(Pair(\"testnet\",       TestNet()));\n+    obj.push_back(Pair(\"networkactive\", fNetworkActive));\n     if (pwalletMain) {\n         obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n         obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));"
      }
    ]
  },
  {
    "sha": "22570316ad74df51e459c17d72e02ce76e03751d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMjU3MDMxNmFkNzRkZjUxZTQ1OWMxN2Q3MmUwMmNlNzZlMDM3NTFk",
    "commit": {
      "author": {
        "name": "Jon Lund Steffensen",
        "email": "jonlst@gmail.com",
        "date": "2013-03-26T02:07:06Z"
      },
      "committer": {
        "name": "Jon Lund Steffensen",
        "email": "jonlst@gmail.com",
        "date": "2013-10-20T00:37:15Z"
      },
      "message": "Add gui feedback and control of network activity state.\n\nAdd getNetworkActive()/setNetworkActive() method to client model.\nSend network active status through NotifyNetworkActiveChanged.\nIndicate in tool tip of gui status bar network indicator whether network activity is disabled.\nIndicate in debug window whether network activity is disabled and add button to allow user to toggle network activity state.",
      "tree": {
        "sha": "94412bbfc8863a414679c1c7ef8550194b76af63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/94412bbfc8863a414679c1c7ef8550194b76af63"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22570316ad74df51e459c17d72e02ce76e03751d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22570316ad74df51e459c17d72e02ce76e03751d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/22570316ad74df51e459c17d72e02ce76e03751d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22570316ad74df51e459c17d72e02ce76e03751d/comments",
    "author": {
      "login": "jonls",
      "id": 420734,
      "node_id": "MDQ6VXNlcjQyMDczNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/420734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonls",
      "html_url": "https://github.com/jonls",
      "followers_url": "https://api.github.com/users/jonls/followers",
      "following_url": "https://api.github.com/users/jonls/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonls/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonls/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonls/subscriptions",
      "organizations_url": "https://api.github.com/users/jonls/orgs",
      "repos_url": "https://api.github.com/users/jonls/repos",
      "events_url": "https://api.github.com/users/jonls/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonls/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonls",
      "id": 420734,
      "node_id": "MDQ6VXNlcjQyMDczNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/420734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonls",
      "html_url": "https://github.com/jonls",
      "followers_url": "https://api.github.com/users/jonls/followers",
      "following_url": "https://api.github.com/users/jonls/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonls/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonls/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonls/subscriptions",
      "organizations_url": "https://api.github.com/users/jonls/orgs",
      "repos_url": "https://api.github.com/users/jonls/repos",
      "events_url": "https://api.github.com/users/jonls/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonls/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8e75ca135d3b06684848626e5c9c4751b00be5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8e75ca135d3b06684848626e5c9c4751b00be5c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c8e75ca135d3b06684848626e5c9c4751b00be5c"
      }
    ],
    "stats": {
      "total": 129,
      "additions": 113,
      "deletions": 16
    },
    "files": [
      {
        "sha": "c3978c2685cffc45446fe99f275fa59d7b5924bc",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22570316ad74df51e459c17d72e02ce76e03751d/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22570316ad74df51e459c17d72e02ce76e03751d/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=22570316ad74df51e459c17d72e02ce76e03751d",
        "patch": "@@ -1811,6 +1811,8 @@ void SetNetworkActive(bool active)\n     } else {\n         fNetworkActive = true;\n     }\n+\n+    uiInterface.NotifyNetworkActiveChanged(fNetworkActive);\n }\n \n class CNetCleanup"
      },
      {
        "sha": "0f2df87f5af0a2d564b060e5a2d307502f5de48b",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 3,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22570316ad74df51e459c17d72e02ce76e03751d/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22570316ad74df51e459c17d72e02ce76e03751d/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=22570316ad74df51e459c17d72e02ce76e03751d",
        "patch": "@@ -330,8 +330,9 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n         createTrayIconMenu();\n \n         // Keep up to date with client\n-        setNumConnections(clientModel->getNumConnections());\n+        updateNetworkState();\n         connect(clientModel, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n+        connect(clientModel, SIGNAL(networkActiveChanged(bool)), this, SLOT(setNetworkActive(bool)));\n \n         setNumBlocks(clientModel->getNumBlocks(), clientModel->getNumBlocksOfPeers());\n         connect(clientModel, SIGNAL(numBlocksChanged(int,int)), this, SLOT(setNumBlocks(int,int)));\n@@ -480,8 +481,9 @@ void BitcoinGUI::gotoVerifyMessageTab(QString addr)\n     if (walletFrame) walletFrame->gotoVerifyMessageTab(addr);\n }\n \n-void BitcoinGUI::setNumConnections(int count)\n+void BitcoinGUI::updateNetworkState()\n {\n+    int count = clientModel->getNumConnections();\n     QString icon;\n     switch(count)\n     {\n@@ -492,7 +494,21 @@ void BitcoinGUI::setNumConnections(int count)\n     default: icon = \":/icons/connect_4\"; break;\n     }\n     labelConnectionsIcon->setPixmap(QIcon(icon).pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n-    labelConnectionsIcon->setToolTip(tr(\"%n active connection(s) to Bitcoin network\", \"\", count));\n+\n+    if (clientModel->getNetworkActive())\n+        labelConnectionsIcon->setToolTip(tr(\"%n active connection(s) to Bitcoin network\", \"\", count));\n+    else\n+        labelConnectionsIcon->setToolTip(tr(\"Network activity disabled\"));\n+}\n+\n+void BitcoinGUI::setNumConnections(int count)\n+{\n+    updateNetworkState();\n+}\n+\n+void BitcoinGUI::setNetworkActive(bool networkActive)\n+{\n+    updateNetworkState();\n }\n \n void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)"
      },
      {
        "sha": "e9a1955c4a5fd731bab2f3647151d2946a5df6ec",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22570316ad74df51e459c17d72e02ce76e03751d/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22570316ad74df51e459c17d72e02ce76e03751d/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=22570316ad74df51e459c17d72e02ce76e03751d",
        "patch": "@@ -124,9 +124,14 @@ class BitcoinGUI : public QMainWindow\n     /** Create system tray menu (or setup the dock menu) */\n     void createTrayIconMenu();\n \n+    /** Update UI with latest network info from model. */\n+    void updateNetworkState();\n+\n public slots:\n     /** Set number of connections shown in the UI */\n     void setNumConnections(int count);\n+    /** Set network state shown in the UI */\n+    void setNetworkActive(bool networkActive);\n     /** Set number of blocks shown in the UI */\n     void setNumBlocks(int count, int nTotalBlocks);\n     /** Set the encryption status as shown in the UI."
      },
      {
        "sha": "957718451f6d45aa1d8b6907f400e7d2eaf3e18e",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22570316ad74df51e459c17d72e02ce76e03751d/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22570316ad74df51e459c17d72e02ce76e03751d/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=22570316ad74df51e459c17d72e02ce76e03751d",
        "patch": "@@ -102,6 +102,11 @@ void ClientModel::updateNumConnections(int numConnections)\n     emit numConnectionsChanged(numConnections);\n }\n \n+void ClientModel::updateNetworkActive(bool networkActive)\n+{\n+    emit networkActiveChanged(networkActive);\n+}\n+\n void ClientModel::updateAlert(const QString &hash, int status)\n {\n     // Show error message notification for new alert\n@@ -146,6 +151,16 @@ int ClientModel::getNumBlocksOfPeers() const\n     return GetNumBlocksOfPeers();\n }\n \n+void ClientModel::setNetworkActive(bool active)\n+{\n+    SetNetworkActive(active);\n+}\n+\n+bool ClientModel::getNetworkActive() const\n+{\n+    return fNetworkActive;\n+}\n+\n QString ClientModel::getStatusBarWarnings() const\n {\n     return QString::fromStdString(GetWarnings(\"statusbar\"));\n@@ -195,6 +210,12 @@ static void NotifyNumConnectionsChanged(ClientModel *clientmodel, int newNumConn\n                               Q_ARG(int, newNumConnections));\n }\n \n+static void NotifyNetworkActiveChanged(ClientModel *clientmodel, bool networkActive)\n+{\n+    QMetaObject::invokeMethod(clientmodel, \"updateNetworkActive\", Qt::QueuedConnection,\n+                              Q_ARG(bool, networkActive));\n+}\n+\n static void NotifyAlertChanged(ClientModel *clientmodel, const uint256 &hash, ChangeType status)\n {\n     qDebug() << \"NotifyAlertChanged : \" + QString::fromStdString(hash.GetHex()) + \" status=\" + QString::number(status);\n@@ -208,6 +229,7 @@ void ClientModel::subscribeToCoreSignals()\n     // Connect signals to client\n     uiInterface.NotifyBlocksChanged.connect(boost::bind(NotifyBlocksChanged, this));\n     uiInterface.NotifyNumConnectionsChanged.connect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n+    uiInterface.NotifyNetworkActiveChanged.connect(boost::bind(NotifyNetworkActiveChanged, this, _1));\n     uiInterface.NotifyAlertChanged.connect(boost::bind(NotifyAlertChanged, this, _1, _2));\n }\n \n@@ -216,5 +238,6 @@ void ClientModel::unsubscribeFromCoreSignals()\n     // Disconnect signals from client\n     uiInterface.NotifyBlocksChanged.disconnect(boost::bind(NotifyBlocksChanged, this));\n     uiInterface.NotifyNumConnectionsChanged.disconnect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n+    uiInterface.NotifyNetworkActiveChanged.disconnect(boost::bind(NotifyNetworkActiveChanged, this, _1));\n     uiInterface.NotifyAlertChanged.disconnect(boost::bind(NotifyAlertChanged, this, _1, _2));\n }"
      },
      {
        "sha": "f88f04bf596e9f5682e2514b3600a41f7f68cd91",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22570316ad74df51e459c17d72e02ce76e03751d/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22570316ad74df51e459c17d72e02ce76e03751d/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=22570316ad74df51e459c17d72e02ce76e03751d",
        "patch": "@@ -49,6 +49,10 @@ class ClientModel : public QObject\n     enum BlockSource getBlockSource() const;\n     //! Return conservative estimate of total number of blocks, or 0 if unknown\n     int getNumBlocksOfPeers() const;\n+    //! Return true if network activity in core is enabled\n+    bool getNetworkActive() const;\n+    //! Toggle network activity state in core\n+    void setNetworkActive(bool active);\n     //! Return warnings to be displayed in status bar\n     QString getStatusBarWarnings() const;\n \n@@ -75,6 +79,7 @@ class ClientModel : public QObject\n \n signals:\n     void numConnectionsChanged(int count);\n+    void networkActiveChanged(bool networkActive);\n     void numBlocksChanged(int count, int countOfPeers);\n     void alertsChanged(const QString &warnings);\n     void bytesChanged(quint64 totalBytesIn, quint64 totalBytesOut);\n@@ -85,6 +90,7 @@ class ClientModel : public QObject\n public slots:\n     void updateTimer();\n     void updateNumConnections(int numConnections);\n+    void updateNetworkActive(bool networkActive);\n     void updateAlert(const QString &hash, int status);\n };\n "
      },
      {
        "sha": "3434eb467525a27093408ba3b4a994cde24dc88a",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 25,
        "deletions": 12,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22570316ad74df51e459c17d72e02ce76e03751d/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22570316ad74df51e459c17d72e02ce76e03751d/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=22570316ad74df51e459c17d72e02ce76e03751d",
        "patch": "@@ -212,6 +212,19 @@\n         </widget>\n        </item>\n        <item row=\"9\" column=\"0\">\n+        <widget class=\"QPushButton\" name=\"toggleNetworkActiveButton\">\n+         <property name=\"toolTip\">\n+          <string>Temporarily toggle network activity.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>&amp;Toggle Network Activity</string>\n+         </property>\n+         <property name=\"autoDefault\">\n+          <bool>false</bool>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"10\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_10\">\n          <property name=\"font\">\n           <font>\n@@ -224,14 +237,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"10\" column=\"0\">\n+       <item row=\"11\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_3\">\n          <property name=\"text\">\n           <string>Current number of blocks</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"10\" column=\"1\">\n+       <item row=\"11\" column=\"1\">\n         <widget class=\"QLabel\" name=\"numberOfBlocks\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -247,14 +260,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"11\" column=\"0\">\n+       <item row=\"12\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_4\">\n          <property name=\"text\">\n           <string>Estimated total blocks</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"11\" column=\"1\">\n+       <item row=\"12\" column=\"1\">\n         <widget class=\"QLabel\" name=\"totalBlocks\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -270,14 +283,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"12\" column=\"0\">\n+       <item row=\"13\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_2\">\n          <property name=\"text\">\n           <string>Last block time</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"12\" column=\"1\">\n+       <item row=\"13\" column=\"1\">\n         <widget class=\"QLabel\" name=\"lastBlockTime\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -293,7 +306,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"13\" column=\"0\">\n+       <item row=\"14\" column=\"0\">\n         <spacer name=\"verticalSpacer_2\">\n          <property name=\"orientation\">\n           <enum>Qt::Vertical</enum>\n@@ -306,7 +319,7 @@\n          </property>\n         </spacer>\n        </item>\n-       <item row=\"14\" column=\"0\">\n+       <item row=\"15\" column=\"0\">\n         <widget class=\"QLabel\" name=\"labelDebugLogfile\">\n          <property name=\"font\">\n           <font>\n@@ -319,7 +332,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"15\" column=\"0\">\n+       <item row=\"16\" column=\"0\">\n         <widget class=\"QPushButton\" name=\"openDebugLogfileButton\">\n          <property name=\"toolTip\">\n           <string>Open the Bitcoin debug log file from the current data directory. This can take a few seconds for large log files.</string>\n@@ -332,7 +345,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"16\" column=\"0\">\n+       <item row=\"17\" column=\"0\">\n         <widget class=\"QLabel\" name=\"labelCLOptions\">\n          <property name=\"font\">\n           <font>\n@@ -345,7 +358,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"17\" column=\"0\">\n+       <item row=\"18\" column=\"0\">\n         <widget class=\"QPushButton\" name=\"showCLOptionsButton\">\n          <property name=\"toolTip\">\n           <string>Show the Bitcoin-Qt help message to get a list with possible Bitcoin command-line options.</string>\n@@ -358,7 +371,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"18\" column=\"0\">\n+       <item row=\"19\" column=\"0\">\n         <spacer name=\"verticalSpacer\">\n          <property name=\"orientation\">\n           <enum>Qt::Vertical</enum>"
      },
      {
        "sha": "a9653ef0877012135077d16f82ded500102ea5b1",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 1,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22570316ad74df51e459c17d72e02ce76e03751d/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22570316ad74df51e459c17d72e02ce76e03751d/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=22570316ad74df51e459c17d72e02ce76e03751d",
        "patch": "@@ -267,6 +267,9 @@ void RPCConsole::setClientModel(ClientModel *model)\n         setNumBlocks(model->getNumBlocks(), model->getNumBlocksOfPeers());\n         connect(model, SIGNAL(numBlocksChanged(int,int)), this, SLOT(setNumBlocks(int,int)));\n \n+        updateNetworkState();\n+        connect(model, SIGNAL(networkActiveChanged(bool)), this, SLOT(setNetworkActive(bool)));\n+\n         updateTrafficStats(model->getTotalBytesRecv(), model->getTotalBytesSent());\n         connect(model, SIGNAL(bytesChanged(quint64,quint64)), this, SLOT(updateTrafficStats(quint64, quint64)));\n \n@@ -340,9 +343,23 @@ void RPCConsole::message(int category, const QString &message, bool html)\n     ui->messagesWidget->append(out);\n }\n \n+void RPCConsole::updateNetworkState()\n+{\n+    QString text = QString::number(clientModel->getNumConnections());\n+    if(!clientModel->getNetworkActive())\n+        text += \" (\" + tr(\"Network activity disabled\") + \")\";\n+\n+    ui->numberOfConnections->setText(text);\n+}\n+\n void RPCConsole::setNumConnections(int count)\n {\n-    ui->numberOfConnections->setText(QString::number(count));\n+    updateNetworkState();\n+}\n+\n+void RPCConsole::setNetworkActive(bool networkActive)\n+{\n+    updateNetworkState();\n }\n \n void RPCConsole::setNumBlocks(int count, int countOfPeers)\n@@ -484,3 +501,8 @@ void RPCConsole::on_btnClearTrafficGraph_clicked()\n {\n     ui->trafficGraph->clear();\n }\n+\n+void RPCConsole::on_toggleNetworkActiveButton_clicked()\n+{\n+    clientModel->setNetworkActive(!clientModel->getNetworkActive());\n+}"
      },
      {
        "sha": "48d61ec890105ba8746f3d8cf3fc82bf48390fb8",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22570316ad74df51e459c17d72e02ce76e03751d/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22570316ad74df51e459c17d72e02ce76e03751d/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=22570316ad74df51e459c17d72e02ce76e03751d",
        "patch": "@@ -33,6 +33,8 @@ class RPCConsole: public QDialog\n private slots:\n     void on_lineEdit_returnPressed();\n     void on_tabWidget_currentChanged(int index);\n+    /** toggle network activity */\n+    void on_toggleNetworkActiveButton_clicked();\n     /** open the debug.log from the current datadir */\n     void on_openDebugLogfileButton_clicked();\n     /** display messagebox with program parameters (same as bitcoin-qt --help) */\n@@ -49,6 +51,8 @@ public slots:\n     void message(int category, const QString &message, bool html = false);\n     /** Set number of connections shown in the UI */\n     void setNumConnections(int count);\n+    /** Set network state shown in the UI */\n+    void setNetworkActive(bool networkActive);\n     /** Set number of blocks shown in the UI */\n     void setNumBlocks(int count, int countOfPeers);\n     /** Go forward or back in history */\n@@ -70,6 +74,9 @@ public slots:\n     int historyPtr;\n \n     void startExecutor();\n+\n+    /** Update UI with latest network info from model. */\n+    void updateNetworkState();\n };\n \n #endif // RPCCONSOLE_H"
      },
      {
        "sha": "ec6ede9c442e4f700d6e319943e60b222a5874ca",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22570316ad74df51e459c17d72e02ce76e03751d/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22570316ad74df51e459c17d72e02ce76e03751d/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=22570316ad74df51e459c17d72e02ce76e03751d",
        "patch": "@@ -88,6 +88,9 @@ class CClientUIInterface\n     /** Number of network connections changed. */\n     boost::signals2::signal<void (int newNumConnections)> NotifyNumConnectionsChanged;\n \n+    /** Network activity state changed. */\n+    boost::signals2::signal<void (bool networkActive)> NotifyNetworkActiveChanged;\n+\n     /**\n      * New, updated or cancelled alert.\n      * @note called with lock cs_mapAlerts held."
      }
    ]
  }
]