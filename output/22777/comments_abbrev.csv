jnewbery,2021-08-23 09:50:50,"Previously attempted in #9403, which was abandoned by the author.",https://github.com/bitcoin/bitcoin/pull/22777#issuecomment-903614528,903614528,
DrahtBot,2021-08-23 13:29:00,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22778](https://github.com/bitcoin/bitcoin/pull/22778) (net processing: Reduce resource usage for inbound block-relay-onl",https://github.com/bitcoin/bitcoin/pull/22777#issuecomment-903769607,903769607,
jnewbery,2021-08-23 17:22:46,rebased,https://github.com/bitcoin/bitcoin/pull/22777#issuecomment-903965825,903965825,
prayank23,2021-08-23 17:40:09,"> Currently, we set fRelay to 1 in the version message for feeler connections, indicating that we want the peer to relay transactions to us. However, we close the connection immediately on receipt of the version message, and so never process any incoming transaction announcements. This PR changes that behaviour to instead set fRelay to 0 indicating that we do not wish to receive transaction announ",https://github.com/bitcoin/bitcoin/pull/22777#issuecomment-903977127,903977127,
jnewbery,2021-08-24 13:18:38,"> If I understand it correctly, the problem solved here is that our feeler peer might assemble/send out unnecessary tx announcements in the short time before they notice that they got disconnected.\n\nNot quite. The `fRelay` field in the `version` message indicates whether the peer should announce new unconfirmed transactions to us (https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki#",https://github.com/bitcoin/bitcoin/pull/22777#issuecomment-904635009,904635009,
amitiuttarwar,2021-08-24 18:00:32,"trying to wrap my head around not acquiring the `CSemaphoreGrant` / having a limit to the amount of feelers we open from the tests...\n\nwhen a bitcoind node opens a feeler connection, it acquires the grant in `ThreadOpenConnections`. but I think its fine to not replicate this from the tests because there's no logic that is ensuring the current connection count matches the maximums for feelers (",https://github.com/bitcoin/bitcoin/pull/22777#issuecomment-904857460,904857460,
naumenkogs,2021-09-01 16:04:46,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22777#issuecomment-910430112,910430112,
naumenkogs,2021-09-17 10:39:57,"ACK 9a45648438ae62c4087a6d01d14050035dd0e78c\n\nOne thing I was thinking about is whether someone in the future would want to rely on fRelay=1 to distinguish whether a peer is tx-relaying or not (e.g. SPV-readonly), e.g. to populate addrman.\nI don't think that's a real concern, but I thought I'd bring it up this behaviour would make that impossible.",https://github.com/bitcoin/bitcoin/pull/22777#issuecomment-921695146,921695146,
jnewbery,2021-09-22 15:14:58,"Thanks for the reviews @amitiuttarwar @ShubhamPalriwala @naumenkogs \n\n> trying to wrap my head around not acquiring the CSemaphoreGrant / having a limit to the amount of feelers we open from the tests...\n\n@amitiuttarwar - I don't understand this. In `CConnman::AddConnection()` we always try to acquire a semaphore grant before calling `OpenNetworkConnection()`. If that TryAcquire fails, the",https://github.com/bitcoin/bitcoin/pull/22777#issuecomment-925027917,925027917,
naumenkogs,2021-09-24 11:58:48,ACK eaf6be0114a6d7763767da9496907fe8a670ff9e,https://github.com/bitcoin/bitcoin/pull/22777#issuecomment-926568742,926568742,
MarcoFalke,2021-08-23 09:55:06,"nit: Doesn't this mean we won't request tx relay, but are (theoretically) still happy to process them?\n\nWouldn't it be better if this check here wasn't needed and `m_tx_relay` was never initialized? See also https://github.com/bitcoin/bitcoin/pull/21160#discussion_r693531183",https://github.com/bitcoin/bitcoin/pull/22777#discussion_r693830234,693830234,src/net_processing.cpp
jnewbery,2021-08-23 12:29:36,"> nit: Doesn't this mean we won't request tx relay, but are (theoretically) still happy to process them?\n\nNo. For feeler connections, we disconnect as soon as we receive the `version` message, and we don't process any other message types before receiving `version`, so it's not possible for us to process any incoming transactions or announcements.\n\n> Wouldn't it be better if this check here",https://github.com/bitcoin/bitcoin/pull/22777#discussion_r693927035,693927035,src/net_processing.cpp
mzumsande,2021-08-23 22:37:41,"I don't understand the reason for `P2PFeelerReceiver`. A real peer also wouldn't know that they are about to get disconnected by us as a feeler, so why simulate it here instead of just using `P2PInterface`?",https://github.com/bitcoin/bitcoin/pull/22777#discussion_r694354532,694354532,test/functional/p2p_add_connections.py
mzumsande,2021-08-23 23:07:17,"nit: there are several comments that describe the possible connection types and could be updated for feelers, I hope I caught them all [here](https://github.com/bitcoin/bitcoin/pull/22096/commits/c34ad3309f93979b274a37de013502b05d25fad8)",https://github.com/bitcoin/bitcoin/pull/22777#discussion_r694366565,694366565,src/net.cpp
jnewbery,2021-08-24 13:20:42,"Since the node will disconnect as soon as it receives our `version` message, there's a race between it disconnecting and the `P2PInterface` sending the responses to its `version` message here: https://github.com/bitcoin/bitcoin/blob/eb09c26724e3f714b613788fc506f2ff3a208d2c/test/functional/test_framework/p2p.py#L435-L441. If it disconnects first, those calls to `send_message()` may fail, causing th",https://github.com/bitcoin/bitcoin/pull/22777#discussion_r694843113,694843113,test/functional/p2p_add_connections.py
jnewbery,2021-08-24 13:23:42,Thanks. Updated!,https://github.com/bitcoin/bitcoin/pull/22777#discussion_r694845807,694845807,src/net.cpp
naumenkogs,2021-09-17 10:14:43,this line could be dropped?,https://github.com/bitcoin/bitcoin/pull/22777#discussion_r710932868,710932868,test/functional/test_framework/test_node.py
jnewbery,2021-09-22 15:12:25,Indeed. Thanks!,https://github.com/bitcoin/bitcoin/pull/22777#discussion_r714046917,714046917,test/functional/test_framework/test_node.py
