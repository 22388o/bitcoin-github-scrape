[
  {
    "sha": "395c1f44bd480416a12c881c89721e72ab40ee32",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOTVjMWY0NGJkNDgwNDE2YTEyYzg4MWM4OTcyMWU3MmFiNDBlZTMy",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-03-02T21:27:24Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-03-02T21:27:24Z"
      },
      "message": "Fix minimum transaction fee calculation mismatch between CreateTransaction and CreateBlock",
      "tree": {
        "sha": "ad062f8dd6980c8e00dc474f2dcc77a83e882a96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ad062f8dd6980c8e00dc474f2dcc77a83e882a96"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/395c1f44bd480416a12c881c89721e72ab40ee32",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/395c1f44bd480416a12c881c89721e72ab40ee32",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/395c1f44bd480416a12c881c89721e72ab40ee32",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/395c1f44bd480416a12c881c89721e72ab40ee32/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "411493b1f70d1493b1203bce847baa9f41e79f91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/411493b1f70d1493b1203bce847baa9f41e79f91",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/411493b1f70d1493b1203bce847baa9f41e79f91"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 36,
      "deletions": 16
    },
    "files": [
      {
        "sha": "c65cd72de7640ebc2a9405b95cd9769a8f306a9d",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 16,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/395c1f44bd480416a12c881c89721e72ab40ee32/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/395c1f44bd480416a12c881c89721e72ab40ee32/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=395c1f44bd480416a12c881c89721e72ab40ee32",
        "patch": "@@ -287,7 +287,7 @@ void EraseOrphanTx(uint256 hash)\n \n //////////////////////////////////////////////////////////////////////////////\n //\n-// CTransaction\n+// CTransaction and CTxIndex\n //\n \n bool CTransaction::ReadFromDisk(CTxDB& txdb, COutPoint prevout, CTxIndex& txindexRet)\n@@ -1034,6 +1034,22 @@ void ResendWalletTransactions()\n     }\n }\n \n+int CTxIndex::GetDepthInMainChain() const\n+{\n+    // Read block header\n+    CBlock block;\n+    if (!block.ReadFromDisk(pos.nFile, pos.nBlockPos, false))\n+        return 0;\n+    // Find the block in the index\n+    map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(block.GetHash());\n+    if (mi == mapBlockIndex.end())\n+        return 0;\n+    CBlockIndex* pindex = (*mi).second;\n+    if (!pindex || !pindex->IsInMainChain())\n+        return 0;\n+    return 1 + nBestHeight - pindex->nHeight;\n+}\n+\n \n \n \n@@ -3327,18 +3343,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n                 int64 nValueIn = txPrev.vout[txin.prevout.n].nValue;\n \n                 // Read block header\n-                int nConf = 0;\n-                CBlock block;\n-                if (block.ReadFromDisk(txindex.pos.nFile, txindex.pos.nBlockPos, false))\n-                {\n-                    map<uint256, CBlockIndex*>::iterator it = mapBlockIndex.find(block.GetHash());\n-                    if (it != mapBlockIndex.end())\n-                    {\n-                        CBlockIndex* pindex = (*it).second;\n-                        if (pindex->IsInMainChain())\n-                            nConf = 1 + nBestHeight - pindex->nHeight;\n-                    }\n-                }\n+                int nConf = txindex.GetDepthInMainChain();\n \n                 dPriority += (double)nValueIn * nConf;\n \n@@ -3383,7 +3388,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n                 continue;\n \n             // Transaction fee required depends on block size\n-            bool fAllowFree = (nBlockSize + nTxSize < 4000 || dPriority > COIN * 144 / 250);\n+            bool fAllowFree = (nBlockSize + nTxSize < 4000 || CTransaction::AllowFree(dPriority));\n             int64 nMinFee = tx.GetMinFee(nBlockSize, fAllowFree);\n \n             // Connecting shouldn't fail due to dependency on other memory pool transactions\n@@ -3859,14 +3864,19 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n                     return false;\n                 int64 nValueOut = nValue;\n                 int64 nTotalValue = nValue + nFeeRet;\n+                double dPriority = 0;\n \n                 // Choose coins to use\n                 set<CWalletTx*> setCoins;\n                 if (!SelectCoins(nTotalValue, setCoins))\n                     return false;\n                 int64 nValueIn = 0;\n                 foreach(CWalletTx* pcoin, setCoins)\n-                    nValueIn += pcoin->GetCredit();\n+                {\n+                    int64 nCredit = pcoin->GetCredit();\n+                    nValueIn += nCredit;\n+                    dPriority += (double)nCredit * pcoin->GetDepthInMainChain();\n+                }\n \n                 // Fill a vout to the payee\n                 bool fChangeFirst = GetRand(2);\n@@ -3921,10 +3931,12 @@ bool CreateTransaction(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew, CR\n                 unsigned int nBytes = ::GetSerializeSize(*(CTransaction*)&wtxNew, SER_NETWORK);\n                 if (nBytes >= MAX_BLOCK_SIZE_GEN/5)\n                     return false;\n+                dPriority /= nBytes;\n \n                 // Check that enough fee is included\n                 int64 nPayFee = nTransactionFee * (1 + (int64)nBytes / 1000);\n-                int64 nMinFee = wtxNew.GetMinFee();\n+                bool fAllowFree = CTransaction::AllowFree(dPriority);\n+                int64 nMinFee = wtxNew.GetMinFee(1, fAllowFree);\n                 if (nFeeRet < max(nPayFee, nMinFee))\n                 {\n                     nFeeRet = max(nPayFee, nMinFee);"
      },
      {
        "sha": "668d7f98b35992088de0c587e9db971c8dc19c28",
        "filename": "main.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/395c1f44bd480416a12c881c89721e72ab40ee32/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/395c1f44bd480416a12c881c89721e72ab40ee32/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.h?ref=395c1f44bd480416a12c881c89721e72ab40ee32",
        "patch": "@@ -574,6 +574,13 @@ class CTransaction\n         return nValueOut;\n     }\n \n+    static bool AllowFree(double dPriority)\n+    {\n+        // Large (in bytes) low-priority (new, small-coin) transactions\n+        // need a fee.\n+        return dPriority > COIN * 144 / 250;\n+    }\n+\n     int64 GetMinFee(unsigned int nBlockSize=1, bool fAllowFree=true) const\n     {\n         // Base fee is 1 cent per kilobyte\n@@ -998,6 +1005,7 @@ class CTxIndex\n     {\n         return !(a == b);\n     }\n+    int GetDepthInMainChain() const;\n };\n \n "
      }
    ]
  }
]