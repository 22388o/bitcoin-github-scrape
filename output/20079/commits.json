[
  {
    "sha": "fad68afcff731153d1c83f7f56c91ecbb264b59a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQ2OGFmY2ZmNzMxMTUzZDFjODNmN2Y1NmM5MWVjYmIyNjRiNTlh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-10-04T15:34:26Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-19T07:06:30Z"
      },
      "message": "p2p: Ignore non-version msgs before version msg\n\nSending a non-version message before the initial version message is peer\nmisbehavior. Though, it seems arbitrary and confusing to disconnect only\nafter exactly 100 non-version messages. So remove the Misbehaving and\ninstead rely on the existing disconnect-due-to-handshake-timeout logic.",
      "tree": {
        "sha": "d67c92218fa26d51f46776965ccbad98ac73f60d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d67c92218fa26d51f46776965ccbad98ac73f60d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad68afcff731153d1c83f7f56c91ecbb264b59a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjVJwwAnE54HPNLQ7lzIbMRob+nSFDSp4xCEUNFYa3Wuwc4sLXVxaqoM4+HNiav\nMgPRJkU7D4wdIdy5Z3L644ykNxlRXLZfXMmmM2qu0fT1JWZJHKs3gzurYYmoq1un\n+o6e4AhbxaHtakiScIjsqNBfYg/IxSLjz7GoHLRyxrm3IL3mbgNAuzazQD+UARwg\nevy08vaywiVQFbuxiEsk0Sc6Y34QqsXbcY2C8YGD26GS3K9E4k5fhj7XJie8h29h\nv167haRHYsBdirY1r6iItXCijXlNIxiue+8+eDmlxD84kgP6twdM86WTo2COysOU\nuT1wbXE1GMRiLVtSa2WoZdwzGzbHeWhU3zhAR5lUS0RaYqZm9+5cieclNl021Y5h\nEh3kFJimJnabQFwi3eEdkErnCwnQBiF3+sP7dbtUA3Lh3DzZlpoYyywgCJV/GCYl\nwNDET9dYm/ebS7MlOryuOIhWpvwVu3VZ4hnYqj75e9NiZbnuy3MsVmTH6xxkOqOn\nW6tja+Ri\n=i6Wk\n-----END PGP SIGNATURE-----",
        "payload": "tree d67c92218fa26d51f46776965ccbad98ac73f60d\nparent ea7926527ce36c05cacb99602b2b59579ff646e8\nauthor MarcoFalke <falke.marco@gmail.com> 1601825666 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1605769590 +0100\n\np2p: Ignore non-version msgs before version msg\n\nSending a non-version message before the initial version message is peer\nmisbehavior. Though, it seems arbitrary and confusing to disconnect only\nafter exactly 100 non-version messages. So remove the Misbehaving and\ninstead rely on the existing disconnect-due-to-handshake-timeout logic.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad68afcff731153d1c83f7f56c91ecbb264b59a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad68afcff731153d1c83f7f56c91ecbb264b59a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad68afcff731153d1c83f7f56c91ecbb264b59a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea7926527ce36c05cacb99602b2b59579ff646e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea7926527ce36c05cacb99602b2b59579ff646e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea7926527ce36c05cacb99602b2b59579ff646e8"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 6,
      "deletions": 21
    },
    "files": [
      {
        "sha": "df97d0e2e7e55ab163f7a30e94e6dcd79fa7b43b",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad68afcff731153d1c83f7f56c91ecbb264b59a/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad68afcff731153d1c83f7f56c91ecbb264b59a/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=fad68afcff731153d1c83f7f56c91ecbb264b59a",
        "patch": "@@ -2477,7 +2477,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n \n     if (pfrom.nVersion == 0) {\n         // Must have a version message before anything else\n-        Misbehaving(pfrom.GetId(), 1, \"non-version message before version handshake\");\n+        LogPrint(BCLog::NET, \"non-version message before version handshake. Message \\\"%s\\\" from peer=%d\\n\", SanitizeString(msg_type), pfrom.GetId());\n         return;\n     }\n "
      },
      {
        "sha": "ca8bf908a97457fcabfb60ad2ca01e1f0bfa40ec",
        "filename": "test/functional/p2p_leak.py",
        "status": "modified",
        "additions": 1,
        "deletions": 18,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad68afcff731153d1c83f7f56c91ecbb264b59a/test/functional/p2p_leak.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad68afcff731153d1c83f7f56c91ecbb264b59a/test/functional/p2p_leak.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak.py?ref=fad68afcff731153d1c83f7f56c91ecbb264b59a",
        "patch": "@@ -24,8 +24,6 @@\n     assert_greater_than_or_equal,\n )\n \n-DISCOURAGEMENT_THRESHOLD = 100\n-\n \n class LazyPeer(P2PInterface):\n     def __init__(self):\n@@ -93,27 +91,16 @@ def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n-        # Peer that never sends a version. We will send a bunch of messages\n-        # from this peer anyway and verify eventual disconnection.\n-        no_version_disconnect_peer = self.nodes[0].add_p2p_connection(\n-            LazyPeer(), send_version=False, wait_for_verack=False)\n-\n         # Another peer that never sends a version, nor any other messages. It shouldn't receive anything from the node.\n         no_version_idle_peer = self.nodes[0].add_p2p_connection(LazyPeer(), send_version=False, wait_for_verack=False)\n \n         # Peer that sends a version but not a verack.\n         no_verack_idle_peer = self.nodes[0].add_p2p_connection(NoVerackIdlePeer(), wait_for_verack=False)\n \n-        # Send enough ping messages (any non-version message will do) prior to sending\n-        # version to reach the peer discouragement threshold. This should get us disconnected.\n-        for _ in range(DISCOURAGEMENT_THRESHOLD):\n-            no_version_disconnect_peer.send_message(msg_ping())\n-\n         # Wait until we got the verack in response to the version. Though, don't wait for the node to receive the\n         # verack, since we never sent one\n         no_verack_idle_peer.wait_for_verack()\n \n-        no_version_disconnect_peer.wait_until(lambda: no_version_disconnect_peer.ever_connected, check_connected=False)\n         no_version_idle_peer.wait_until(lambda: no_version_idle_peer.ever_connected)\n         no_verack_idle_peer.wait_until(lambda: no_verack_idle_peer.version_received)\n \n@@ -123,13 +110,9 @@ def run_test(self):\n         #Give the node enough time to possibly leak out a message\n         time.sleep(5)\n \n-        # Expect this peer to be disconnected for misbehavior\n-        assert not no_version_disconnect_peer.is_connected\n-\n         self.nodes[0].disconnect_p2ps()\n \n         # Make sure no unexpected messages came in\n-        assert no_version_disconnect_peer.unexpected_msg == False\n         assert no_version_idle_peer.unexpected_msg == False\n         assert no_verack_idle_peer.unexpected_msg == False\n \n@@ -148,7 +131,7 @@ def run_test(self):\n         p2p_old_peer = self.nodes[0].add_p2p_connection(P2PInterface(), send_version=False, wait_for_verack=False)\n         old_version_msg = msg_version()\n         old_version_msg.nVersion = 31799\n-        with self.nodes[0].assert_debug_log(['peer=4 using obsolete version 31799; disconnecting']):\n+        with self.nodes[0].assert_debug_log(['peer=3 using obsolete version 31799; disconnecting']):\n             p2p_old_peer.send_message(old_version_msg)\n             p2p_old_peer.wait_for_disconnect()\n "
      },
      {
        "sha": "47832b04bfbcb7467ea15d6ec24c3428558bbf8d",
        "filename": "test/functional/p2p_timeouts.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad68afcff731153d1c83f7f56c91ecbb264b59a/test/functional/p2p_timeouts.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad68afcff731153d1c83f7f56c91ecbb264b59a/test/functional/p2p_timeouts.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_timeouts.py?ref=fad68afcff731153d1c83f7f56c91ecbb264b59a",
        "patch": "@@ -57,8 +57,10 @@ def run_test(self):\n         assert no_version_node.is_connected\n         assert no_send_node.is_connected\n \n-        no_verack_node.send_message(msg_ping())\n-        no_version_node.send_message(msg_ping())\n+        with self.nodes[0].assert_debug_log(['Unsupported message \"ping\" prior to verack from peer=0']):\n+            no_verack_node.send_message(msg_ping())\n+        with self.nodes[0].assert_debug_log(['non-version message before version handshake. Message \"ping\" from peer=1']):\n+            no_version_node.send_message(msg_ping())\n \n         sleep(1)\n "
      }
    ]
  },
  {
    "sha": "faaad1bbac46cfeb22654b4c59f0aac7a680c03a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWFhZDFiYmFjNDZjZmViMjI2NTRiNGM1OWYwYWFjN2E2ODBjMDNh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-10-05T14:21:59Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-19T07:07:16Z"
      },
      "message": "p2p: Ignore version msgs after initial version msg\n\nSending a version message after the intial version message is peer\nmisbehavior. Though, it seems arbitrary and confusing to disconnect only\nafter exactly 100 version messages. Duplicate version messages affect us\nno different than any other unknown message. So remove the Misbehaving\nand ignore the redundant msgs.",
      "tree": {
        "sha": "1427b40e7258de136ad78d1933ff061b76e25bb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1427b40e7258de136ad78d1933ff061b76e25bb6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faaad1bbac46cfeb22654b4c59f0aac7a680c03a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjgVgv/YCOT4jM98dfp/8xtzxw3h7Kyy0y9yub8QfDVxveYtG6rMWZB76HXvwq6\nBZov/IKbym3j94n6VgQ71uWGqrPUGoK3tIrvug3o3akN+ckUVLZ70WR+UOTfh+MZ\nCczlYeu5gnp1EfQFRBuiK7GUto+6fVVYvuqQjAUnmB5Mb5KcB7EuCyieNuczNVyI\nIwVJrp6Zfpu6cNjCcslR3E/VPHK9J6S2TcyLvKUDzUqOvtGihsWWY8TAtDbeMoUa\nK5DK13kO1x0PAJdjOjxAbFHoDFBQuNkWew3ecl1EIipgfn+j2+GFFCmPZ5jl12qw\nOuniIQa7xj55z87UGk/M2CKTi8TIqbc5vJ16bHIVcBrEpZpKL/BCCcxcYhtWCrH1\nyfQ4RzLXqqcsXrd18eI7ax1oN/4V9xhbDsPDfGQkfwFhiAflVKBZ93wjIZ83dFo0\n+XbJcoeczpdylVFbchIM2FSPFzTsWx845QevrRgyTDmLNn+CuHtM5G/KpQsAZvPg\n9q4o7KZP\n=0df3\n-----END PGP SIGNATURE-----",
        "payload": "tree 1427b40e7258de136ad78d1933ff061b76e25bb6\nparent fad68afcff731153d1c83f7f56c91ecbb264b59a\nauthor MarcoFalke <falke.marco@gmail.com> 1601907719 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1605769636 +0100\n\np2p: Ignore version msgs after initial version msg\n\nSending a version message after the intial version message is peer\nmisbehavior. Though, it seems arbitrary and confusing to disconnect only\nafter exactly 100 version messages. Duplicate version messages affect us\nno different than any other unknown message. So remove the Misbehaving\nand ignore the redundant msgs.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faaad1bbac46cfeb22654b4c59f0aac7a680c03a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faaad1bbac46cfeb22654b4c59f0aac7a680c03a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faaad1bbac46cfeb22654b4c59f0aac7a680c03a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fad68afcff731153d1c83f7f56c91ecbb264b59a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad68afcff731153d1c83f7f56c91ecbb264b59a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fad68afcff731153d1c83f7f56c91ecbb264b59a"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 11,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f21fb8a49bf1e5d64739bda73a21b3277ed9fe3a",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faaad1bbac46cfeb22654b4c59f0aac7a680c03a/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faaad1bbac46cfeb22654b4c59f0aac7a680c03a/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=faaad1bbac46cfeb22654b4c59f0aac7a680c03a",
        "patch": "@@ -2286,10 +2286,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n     if (peer == nullptr) return;\n \n     if (msg_type == NetMsgType::VERSION) {\n-        // Each connection can only send one version message\n-        if (pfrom.nVersion != 0)\n-        {\n-            Misbehaving(pfrom.GetId(), 1, \"redundant version message\");\n+        if (pfrom.nVersion != 0) {\n+            LogPrint(BCLog::NET, \"redundant version message from peer=%d\\n\", pfrom.GetId());\n             return;\n         }\n "
      },
      {
        "sha": "c0b3c2cb12e2fd7d6dc33504602952dedd9c6b4c",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faaad1bbac46cfeb22654b4c59f0aac7a680c03a/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faaad1bbac46cfeb22654b4c59f0aac7a680c03a/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=faaad1bbac46cfeb22654b4c59f0aac7a680c03a",
        "patch": "@@ -18,6 +18,7 @@\n     msg_inv,\n     msg_ping,\n     MSG_TX,\n+    msg_version,\n     ser_string,\n )\n from test_framework.p2p import (\n@@ -60,6 +61,7 @@ def set_test_params(self):\n \n     def run_test(self):\n         self.test_buffer()\n+        self.test_duplicate_version_msg()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n@@ -92,6 +94,13 @@ def test_buffer(self):\n         conn.sync_with_ping(timeout=1)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_duplicate_version_msg(self):\n+        self.log.info(\"Test duplicate version message is ignored\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        with self.nodes[0].assert_debug_log(['redundant version message from peer']):\n+            conn.send_and_ping(msg_version())\n+        self.nodes[0].disconnect_p2ps()\n+\n     def test_magic_bytes(self):\n         self.log.info(\"Test message with invalid magic bytes disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())"
      }
    ]
  }
]