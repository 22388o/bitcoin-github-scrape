[
  {
    "sha": "4eaae7570fb652e28f31fafd91654d79f7d2ca4e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWFhZTc1NzBmYjY1MmUyOGYzMWZhZmQ5MTY1NGQ3OWY3ZDJjYTRl",
    "commit": {
      "author": {
        "name": "itzblaze111",
        "email": "37526592+itzblaze111@users.noreply.github.com",
        "date": "2021-02-22T15:12:19Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-02-22T15:12:19Z"
      },
      "message": "add method comments\n\nadded comments for the insert method and the eligibleforspending method",
      "tree": {
        "sha": "c22617f77a9aeefb42eef3dd035ba1ca241e07d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c22617f77a9aeefb42eef3dd035ba1ca241e07d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4eaae7570fb652e28f31fafd91654d79f7d2ca4e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgM8nTCRBK7hj4Ov3rIwAAdHIIAC5vVgpzeJ5oO6kuHCYvccTb\nyNTQaxUcwVOBJ5xGXqig9DYx2IpDAlkZLfhwc+8ar/Yw0ZdH4QT2tZekQcfp8Eqs\nFwakCdk98qQGVeyij0A3IjyzF3JibeQT4KbQniAKajz8Oru1fktyV20meaq30/iL\nGCYASk2kpF407v6mUP7qE5gscA0abaik0bkqJ3ApVN0mXJdQmLdR2CnyrBpQiDWQ\nCyMo8iYKQmszVY1wFA30ODSp2Rz55U9tepCNdwm1O1WanxzULZrBzPBxpqefBx0h\nugcyCCtwVDXR5tmNuGfkIEiZatA8d0og1E8hB20hM2lzGs9mKRQM4Qlv1tP/MOI=\n=WQ4R\n-----END PGP SIGNATURE-----\n",
        "payload": "tree c22617f77a9aeefb42eef3dd035ba1ca241e07d9\nparent 7fca189a2a9a524834d9485c4e391877c00c1971\nauthor itzblaze111 <37526592+itzblaze111@users.noreply.github.com> 1614006739 -0500\ncommitter GitHub <noreply@github.com> 1614006739 -0500\n\nadd method comments\n\nadded comments for the insert method and the eligibleforspending method"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4eaae7570fb652e28f31fafd91654d79f7d2ca4e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4eaae7570fb652e28f31fafd91654d79f7d2ca4e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4eaae7570fb652e28f31fafd91654d79f7d2ca4e/comments",
    "author": {
      "login": "itzblaze111",
      "id": 37526592,
      "node_id": "MDQ6VXNlcjM3NTI2NTky",
      "avatar_url": "https://avatars.githubusercontent.com/u/37526592?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/itzblaze111",
      "html_url": "https://github.com/itzblaze111",
      "followers_url": "https://api.github.com/users/itzblaze111/followers",
      "following_url": "https://api.github.com/users/itzblaze111/following{/other_user}",
      "gists_url": "https://api.github.com/users/itzblaze111/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/itzblaze111/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/itzblaze111/subscriptions",
      "organizations_url": "https://api.github.com/users/itzblaze111/orgs",
      "repos_url": "https://api.github.com/users/itzblaze111/repos",
      "events_url": "https://api.github.com/users/itzblaze111/events{/privacy}",
      "received_events_url": "https://api.github.com/users/itzblaze111/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7fca189a2a9a524834d9485c4e391877c00c1971",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fca189a2a9a524834d9485c4e391877c00c1971",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7fca189a2a9a524834d9485c4e391877c00c1971"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "7310bb447d76c8277ef05b9d37fd56be88822b18",
        "filename": "src/wallet/coinselection.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4eaae7570fb652e28f31fafd91654d79f7d2ca4e/src/wallet/coinselection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4eaae7570fb652e28f31fafd91654d79f7d2ca4e/src/wallet/coinselection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coinselection.cpp?ref=4eaae7570fb652e28f31fafd91654d79f7d2ca4e",
        "patch": "@@ -35,6 +35,7 @@ struct {\n  * inputs, plus the amount the selection exceeds the spending target:\n  *\n  * waste = selectionTotal - target + inputs \u00d7 (currentFeeRate - longTermFeeRate)\n+ * \n  *\n  * The algorithm uses two additional optimizations. A lookahead keeps track of the total value of\n  * the unexplored UTXOs. A subtree is not explored if the lookahead indicates that the target range\n@@ -158,7 +159,7 @@ bool SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool, const CAmount& target_v\n         return false;\n     }\n \n-    // Set output set\n+    // Set the input set \n     value_ret = 0;\n     for (size_t i = 0; i < best_selection.size(); ++i) {\n         if (best_selection.at(i)) {\n@@ -299,7 +300,7 @@ bool KnapsackSolver(const CAmount& nTargetValue, std::vector<OutputGroup>& group\n  OutputGroup\n \n  ******************************************************************************/\n-\n+// adds coin to the output group\n void OutputGroup::Insert(const CInputCoin& output, int depth, bool from_me, size_t ancestors, size_t descendants, bool positive_only) {\n     // Compute the effective value first\n     const CAmount coin_fee = output.m_input_bytes < 0 ? 0 : m_effective_feerate.GetFee(output.m_input_bytes);\n@@ -331,7 +332,7 @@ void OutputGroup::Insert(const CInputCoin& output, int depth, bool from_me, size\n     // coin itself; thus, this value is counted as the max, not the sum\n     m_descendants = std::max(m_descendants, descendants);\n }\n-\n+// checks if eligible for spending using the coinelibibilityfilter\n bool OutputGroup::EligibleForSpending(const CoinEligibilityFilter& eligibility_filter) const\n {\n     return m_depth >= (m_from_me ? eligibility_filter.conf_mine : eligibility_filter.conf_theirs)"
      }
    ]
  }
]